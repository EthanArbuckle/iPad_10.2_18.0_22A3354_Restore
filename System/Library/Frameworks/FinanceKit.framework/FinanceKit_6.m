void sub_23349311C(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context);
  v14[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v14))
  {
    v2 = v14[0];
  }
  else
  {
    v3 = v14[0];
    v4 = (void *)sub_23361D1B4();

    swift_willThrow();
    if (qword_256041CA0 != -1)
      swift_once();
    v5 = sub_23361DB80();
    __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
    v6 = v4;
    v7 = v4;
    v8 = sub_23361DB68();
    v9 = sub_23361E768();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v4;
      v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v14[0] = v13;
      sub_23361EBC4();
      *v11 = v13;

      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v11, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_233493380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;

  v5 = v3;
  v9 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v5[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
  v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier + 8];
  sub_23361D6D0();
  v14 = type metadata accessor for FormatterConfiguration();
  sub_23361D7D8();
  sub_23361D88C();
  v15 = 100 * a2;
  if ((unsigned __int128)(a2 * (__int128)100) >> 64 != (100 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_16;
  }
  v16 = __OFADD__(v15, a1);
  v17 = (void *)(v15 + a1);
  if (v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v43 = v14;
  v47 = v17;
  v44 = (uint64_t)v17;
  v18 = sub_23361F1D0();
  v20 = v19;
  sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
  v21 = sub_23349562C((uint64_t)v12, v13, v18, v20, a3);
  swift_bridgeObjectRelease();
  v22 = (uint64_t)v12;
  v12 = sub_2334954A4((uint64_t)v21, 0, 1);

  type metadata accessor for ManagedInternalTransaction();
  v23 = sub_23361E984();
  v45 = v4;
  if (v4)
  {

    return (uint64_t)v12;
  }
  v39 = v13;
  v40 = v22;
  v41 = a3;
  v42 = v5;
  v47 = (void *)v23;
  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v24 = sub_23361EF30();
LABEL_7:
  v25 = *(_QWORD *)&v42[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_fixedNumberOfLatestTransactions];
  result = swift_bridgeObjectRelease();
  if (v24 >= v25)
  {
    v35 = v12;
    goto LABEL_13;
  }
  v16 = __OFSUB__(v25, v24);
  v27 = v25 - v24;
  if (!v16)
  {
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    v46 = v44;
    v28 = sub_23361F1D0();
    v30 = v29;
    sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
    v31 = sub_23349562C(v40, v39, v28, v30, v41);
    swift_bridgeObjectRelease();
    v32 = sub_2334954A4((uint64_t)v31, v27, 0);

    v33 = v45;
    v34 = sub_23361E984();
    v35 = v12;
    if (v33)
    {
      v12 = v47;

      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
    sub_23318A4F4(v34);

LABEL_13:
    v36 = v42;
    v37 = swift_bridgeObjectRetain();
    v12 = (void *)sub_233494B1C(v37, (uint64_t)v36);
    swift_bridgeObjectRelease_n();

    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_233493704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  sub_23361E4F8();
  v7[9] = sub_23361E4EC();
  sub_23361E474();
  return swift_task_switch();
}

uint64_t sub_233493774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactions) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_monthlyTransactionGroups) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_yearlyTransactionGroups) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = v4 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  v6 = MEMORY[0x23493465C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_233168668(0, &qword_256051D10);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    sub_233168668(0, &qword_256051D18);
    swift_bridgeObjectRetain();
    v9 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_didUpdateLatestTransactions_monthlyTransactionGroups_yearlyTransactionGroups_, v8, v9, v10);
    swift_unknownObjectRelease();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_233493920(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unsigned __int8 *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD v100[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v95 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v93 = (char *)&v81 - v9;
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v92 = (char *)&v81 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F10);
  MEMORY[0x24BDAC7A8](v16);
  v97 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F08);
  MEMORY[0x24BDAC7A8](v18);
  v96 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23361CD40();
  v20 = *(_QWORD *)(v99 - 8);
  v21 = MEMORY[0x24BDAC7A8](v99);
  v94 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)MEMORY[0x24BDAC7A8](v21);
  v98 = (char *)&v81 - v24;
  v25 = HIBYTE(a2) & 0xF;
  v26 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v27 = HIBYTE(a2) & 0xF;
  else
    v27 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v27)
    goto LABEL_68;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v31 = (uint64_t)sub_233490318(a1, a2, 10);
    v76 = v75;
    swift_bridgeObjectRelease();
    if ((v76 & 1) == 0)
      goto LABEL_36;
    goto LABEL_68;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v28 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v28 = (unsigned __int8 *)sub_23361EE34();
    v29 = sub_2334902F0(v28, v26, 10);
    if ((v30 & 1) == 0)
    {
      v31 = (uint64_t)v29;
LABEL_36:
      v84 = a2;
      v85 = v20;
      v90 = a3;
      v91 = v11;
      v86 = v14;
      v87 = a1;
      v36 = v10;
      v37 = v31 / 100;
      v38 = v31 % 100;
      v39 = sub_23361D868();
      v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
      v89(v96, 1, 1, v39);
      v40 = sub_23361D8A4();
      v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
      v88(v97, 1, 1, v40);
      v83 = v37;
      v82 = v38;
      sub_23361CD34();
      v41 = v36;
      type metadata accessor for FormatterConfiguration();
      v42 = (uint64_t)v93;
      sub_23361D7FC();
      v43 = v91;
      v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
      if (v44(v42, 1, v36) == 1)
      {
        v81 = v36;
        sub_2331D0F20(v42);
        if (qword_256041CA0 != -1)
          swift_once();
        v45 = sub_23361DB80();
        __swift_project_value_buffer(v45, (uint64_t)qword_2560495B0);
        v46 = sub_23361DB68();
        v47 = sub_23361E768();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc();
          *(_DWORD *)v48 = 134218240;
          v100[0] = v82;
          sub_23361EBC4();
          *(_WORD *)(v48 + 12) = 2048;
          v100[0] = v83;
          sub_23361EBC4();
          _os_log_impl(&dword_233151000, v46, v47, "Failed to make group start date from %ld & %ld.", (uint8_t *)v48, 0x16u);
          MEMORY[0x234934590](v48, -1, -1);
        }

        v49 = v92;
        sub_23361D628();
        v41 = v81;
        v50 = v85;
      }
      else
      {
        v49 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v92, v42, v36);
        v50 = v85;
      }
      v89(v96, 1, 1, v39);
      v88(v97, 1, 1, v40);
      v51 = v94;
      sub_23361CD34();
      v52 = (uint64_t)v95;
      sub_23361D808();
      v53 = *(void (**)(char *, uint64_t))(v50 + 8);
      v53(v51, v99);
      v54 = v41;
      if (v44(v52, 1, v41) == 1)
      {
        sub_2331D0F20(v52);
        v55 = v91;
        v56 = v86;
        if (qword_256041CA0 != -1)
          swift_once();
        v57 = sub_23361DB80();
        __swift_project_value_buffer(v57, (uint64_t)qword_2560495B0);
        v58 = sub_23361DB68();
        v59 = sub_23361E768();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          *(_DWORD *)v60 = 134218240;
          v100[0] = v82;
          sub_23361EBC4();
          *(_WORD *)(v60 + 12) = 2048;
          v100[0] = v83;
          sub_23361EBC4();
          _os_log_impl(&dword_233151000, v58, v59, "Failed to make group end date from %ld & %ld.", (uint8_t *)v60, 0x16u);
          MEMORY[0x234934590](v60, -1, -1);
        }

        sub_23361D628();
      }
      else
      {
        v55 = v91;
        v56 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v86, v52, v41);
      }
      v61 = objc_allocWithZone((Class)FKPaymentTransactionGroup);
      swift_bridgeObjectRetain();
      v62 = (void *)sub_23361D5B0();
      v63 = (void *)sub_23361D5B0();
      v64 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      v65 = objc_msgSend(v61, sel_initWithStartDate_endDate_transactionCount_type_bankConnectSectionIdentifier_, v62, v63, v90, 0, v64);

      v66 = *(void (**)(char *, uint64_t))(v55 + 8);
      v66(v56, v54);
      v66(v49, v54);
      v53(v98, v99);
      return v65;
    }
LABEL_68:
    if (qword_256041CA0 != -1)
      swift_once();
    v77 = sub_23361DB80();
    __swift_project_value_buffer(v77, (uint64_t)qword_2560495B0);
    v78 = sub_23361DB68();
    v79 = sub_23361E768();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v80 = 0;
      _os_log_impl(&dword_233151000, v78, v79, "Could not decode monthAndYear into an integer", v80, 2u);
      MEMORY[0x234934590](v80, -1, -1);
    }

    return objc_msgSend(objc_allocWithZone((Class)FKPaymentTransactionGroup), sel_init);
  }
  v100[0] = a1;
  v100[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v25)
      goto LABEL_77;
    if (v25 == 1)
      goto LABEL_75;
    if ((BYTE1(a1) - 48) <= 9u)
    {
      v31 = (BYTE1(a1) - 48);
      if (v25 == 2)
        goto LABEL_34;
      if ((BYTE2(a1) - 48) <= 9u)
      {
        v31 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
        v32 = v25 - 3;
        if (v25 != 3)
        {
          v33 = (unsigned __int8 *)v100 + 3;
          while (1)
          {
            v34 = *v33 - 48;
            if (v34 > 9)
              goto LABEL_32;
            v35 = 10 * v31;
            if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
              goto LABEL_32;
            v31 = v35 + v34;
            if (__OFADD__(v35, v34))
              goto LABEL_32;
            LOBYTE(v25) = 0;
            ++v33;
            if (!--v32)
              goto LABEL_35;
          }
        }
        goto LABEL_34;
      }
    }
LABEL_32:
    v31 = 0;
    LOBYTE(v25) = 1;
    goto LABEL_35;
  }
  if (a1 != 45)
  {
    if (!v25 || (a1 - 48) > 9u)
      goto LABEL_32;
    v31 = (a1 - 48);
    if (v25 == 1)
    {
LABEL_34:
      LOBYTE(v25) = 0;
      goto LABEL_35;
    }
    if ((BYTE1(a1) - 48) <= 9u)
    {
      v31 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      v67 = v25 - 2;
      if (v25 != 2)
      {
        v68 = (unsigned __int8 *)v100 + 2;
        while (1)
        {
          v69 = *v68 - 48;
          if (v69 > 9)
            goto LABEL_32;
          v70 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
            goto LABEL_32;
          v31 = v70 + v69;
          if (__OFADD__(v70, v69))
            goto LABEL_32;
          LOBYTE(v25) = 0;
          ++v68;
          if (!--v67)
            goto LABEL_35;
        }
      }
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v25)
  {
    if (v25 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_32;
      if (v25 == 2)
      {
        LOBYTE(v25) = 0;
        v31 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_35;
      }
      if ((BYTE2(a1) - 48) > 9u)
        goto LABEL_32;
      v31 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
      v71 = v25 - 3;
      if (v25 != 3)
      {
        v72 = (unsigned __int8 *)v100 + 3;
        while (1)
        {
          v73 = *v72 - 48;
          if (v73 > 9)
            goto LABEL_32;
          v74 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
            goto LABEL_32;
          v31 = v74 - v73;
          if (__OFSUB__(v74, v73))
            goto LABEL_32;
          LOBYTE(v25) = 0;
          ++v72;
          if (!--v71)
            goto LABEL_35;
        }
      }
      goto LABEL_34;
    }
LABEL_75:
    v31 = 0;
LABEL_35:
    if ((v25 & 1) == 0)
      goto LABEL_36;
    goto LABEL_68;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

id sub_233494428(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  id v43;
  char *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v63 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v51 - v6;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v51 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F08);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23361CD40();
  v58 = *(_QWORD *)(v65 - 8);
  v20 = MEMORY[0x24BDAC7A8](v65);
  v57 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v51 - v22;
  v24 = sub_23361D868();
  v55 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v56 = v24;
  v55(v19, 1, 1);
  v25 = sub_23361D8A4();
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v54(v16, 1, 1, v25);
  v26 = a1;
  sub_23361CD34();
  type metadata accessor for FormatterConfiguration();
  v60 = v23;
  sub_23361D7FC();
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v27 = v53(v7, 1, v8);
  v64 = v13;
  v62 = v9;
  if (v27 == 1)
  {
    v52 = v8;
    sub_2331D0F20((uint64_t)v7);
    if (qword_256041CA0 != -1)
      swift_once();
    v28 = sub_23361DB80();
    __swift_project_value_buffer(v28, (uint64_t)qword_2560495B0);
    v29 = sub_23361DB68();
    v30 = sub_23361E768();
    v31 = v26;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v32 = 134217984;
      v66 = v26;
      sub_23361EBC4();
      _os_log_impl(&dword_233151000, v29, v30, "Failed to make group start date for %ld", v32, 0xCu);
      MEMORY[0x234934590](v32, -1, -1);
    }

    sub_23361D628();
    v33 = v52;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
    v33 = v8;
    v31 = a1;
  }
  v34 = (uint64_t)v59;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v55)(v19, 1, 1, v56);
  v54(v16, 1, 1, v25);
  v35 = v57;
  sub_23361CD34();
  sub_23361D808();
  v36 = *(void (**)(char *, uint64_t))(v58 + 8);
  v36(v35, v65);
  if (v53((char *)v34, 1, v33) == 1)
  {
    sub_2331D0F20(v34);
    v38 = v61;
    v37 = v62;
    if (qword_256041CA0 != -1)
      swift_once();
    v39 = sub_23361DB80();
    __swift_project_value_buffer(v39, (uint64_t)qword_2560495B0);
    v40 = sub_23361DB68();
    v41 = sub_23361E768();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v42 = 134217984;
      v66 = v31;
      sub_23361EBC4();
      _os_log_impl(&dword_233151000, v40, v41, "Failed to make group end date for %ld", v42, 0xCu);
      MEMORY[0x234934590](v42, -1, -1);
    }

    sub_23361D628();
  }
  else
  {
    v38 = v61;
    v37 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v61, v34, v33);
  }
  v66 = v31;
  sub_23361F1D0();
  v43 = objc_allocWithZone((Class)FKPaymentTransactionGroup);
  v44 = v64;
  v45 = (void *)sub_23361D5B0();
  v46 = (void *)sub_23361D5B0();
  v47 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v43, sel_initWithStartDate_endDate_transactionCount_type_bankConnectSectionIdentifier_, v45, v46, v63, 1, v47);

  v49 = *(void (**)(char *, uint64_t))(v37 + 8);
  v49(v38, v33);
  v49(v44, v33);
  v36(v60, v65);
  return v48;
}

uint64_t sub_233494B1C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v4)
      break;
    v9 = MEMORY[0x24BEE4AF8];
    result = sub_23361EE70();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionExporter);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x234933120](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      ++v6;
      sub_2331BED58(v7, 1);

      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      if (v4 == v6)
        return v9;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_233494C64(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[32];
  uint64_t v14;

  result = MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
      if (*(_QWORD *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        v6 = sub_2331E3D18(0x646E4168746E6F6DLL, 0xEC00000072616559);
        if ((v7 & 1) != 0)
        {
          sub_233168350(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)v13);
          if ((swift_dynamicCast() & 1) != 0)
          {
            if (*(_QWORD *)(v5 + 16))
            {
              v8 = sub_2331E3D18(0x746E756F63, 0xE500000000000000);
              if ((v9 & 1) != 0)
              {
                sub_233168350(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)v13);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  sub_233493920(v11, v12, v11);
                  swift_bridgeObjectRelease();
                  v10 = swift_bridgeObjectRelease();
                  MEMORY[0x234932730](v10);
                  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    sub_23361E414();
                  sub_23361E438();
                  sub_23361E408();
                  goto LABEL_4;
                }
              }
            }
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_4:
      if (v3 == ++v4)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
  }
  return result;
}

uint64_t sub_233494E64(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[32];
  uint64_t v13;

  result = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(a1 + 8 * i + 32);
      if (*(_QWORD *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        v6 = sub_2331E3D18(1918985593, 0xE400000000000000);
        if ((v7 & 1) != 0
          && (sub_233168350(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)v12), (swift_dynamicCast() & 1) != 0)
          && *(_QWORD *)(v5 + 16)
          && (v8 = sub_2331E3D18(0x746E756F63, 0xE500000000000000), (v9 & 1) != 0)
          && (sub_233168350(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)v12), (swift_dynamicCast() & 1) != 0))
        {
          sub_233494428(v11, v11);
          v10 = swift_bridgeObjectRelease();
          MEMORY[0x234932730](v10);
          if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23361E414();
          sub_23361E438();
          sub_23361E408();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

id sub_233495030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v6 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254247048 != -1)
    swift_once();
  v9 = *((_QWORD *)off_254247040 + 2);
  v10 = *(void **)(v9 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_newBackgroundContext);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  if (qword_256041D40 != -1)
    swift_once();
  v12 = off_256054E98;
  type metadata accessor for ManagedTransactionExporter();
  v13 = (_QWORD *)swift_allocObject();
  v13[5] = type metadata accessor for BankConnectService();
  v13[6] = &protocol witness table for BankConnectService;
  v13[2] = v12;
  v14 = *(void **)(*((_QWORD *)off_254247040 + 2) + 16);
  swift_retain();
  v15 = objc_msgSend(v14, sel_viewContext);
  type metadata accessor for TransactionChangesObserver();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v16 + 16) = v15;
  v17 = objc_allocWithZone((Class)type metadata accessor for TransactionsAndGroupsProvider());
  return sub_2334923DC(a1, a2, v9, (uint64_t)v11, (uint64_t)v8, (uint64_t)sub_233492398, 0, a3, (uint64_t)v13, v16);
}

uint64_t sub_23349522C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_233495250()
{
  uint64_t v0;

  sub_2334928CC(*(char **)(v0 + 16));
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t type metadata accessor for TransactionsAndGroupsProvider()
{
  uint64_t result;

  result = qword_256051C80;
  if (!qword_256051C80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23349529C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_2334952F0()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_233495344()
{
  return type metadata accessor for TransactionsAndGroupsProvider();
}

uint64_t sub_23349534C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for TransactionsAndGroupsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of static TransactionsAndGroupsProvider.makeProvider(primaryAccountIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of static TransactionsAndGroupsProvider.makeProvider(primaryAccountIdentifier:fixedNumberOfLatestTransactions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of TransactionsAndGroupsProvider.performFetchAndStartObservingNotifications()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

id sub_2334954A4(uint64_t a1, uint64_t a2, char a3)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  objc_super v11;

  type metadata accessor for ManagedInternalTransaction();
  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v6 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  v7 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  objc_msgSend(v6, sel_setPredicate_, a1);
  swift_getKeyPath();
  _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(0);
  swift_release();
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  v8 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v8);

  objc_msgSend(v6, sel_setReturnsObjectsAsFaults_, 0);
  v9 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v9);

  if ((a3 & 1) == 0)
    objc_msgSend(v6, sel_setFetchLimit_, a2);
  return v6;
}

id sub_23349562C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23362D290;
  *(_QWORD *)(v10 + 32) = _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(a1, a2, a5);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233623D60;
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 64) = sub_2331683F0();
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v10 + 40) = sub_23361E6B4();
  *(_QWORD *)(v10 + 48) = sub_23361E6B4();
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

uint64_t sub_2334957B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  __int128 v43;
  uint64_t v44;

  v10 = sub_23361E954();
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalTransaction();
  v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_23361E150();

  v15 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v16 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  sub_23361D6D0();
  type metadata accessor for FormatterConfiguration();
  sub_23361D7D8();
  result = sub_23361D88C();
  v19 = 100 * a4;
  if ((unsigned __int128)(a4 * (__int128)100) >> 64 == (100 * a4) >> 63)
  {
    v20 = __OFADD__(v19, a3);
    v21 = v19 + a3;
    if (!v20)
    {
      v44 = v21;
      v22 = sub_23361F1D0();
      v24 = v23;
      sub_233168500((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
      v25 = sub_23349562C(a1, a2, v22, v24, a5);
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPredicate_, v25);

      __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
      v26 = swift_allocObject();
      v43 = xmmword_233623D60;
      v27 = MEMORY[0x24BEE0D00];
      *(_OWORD *)(v26 + 16) = xmmword_233623D60;
      *(_QWORD *)(v26 + 56) = v27;
      strcpy((char *)(v26 + 32), "monthAndYear");
      *(_BYTE *)(v26 + 45) = 0;
      *(_WORD *)(v26 + 46) = -5120;
      v28 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPropertiesToGroupBy_, v28);

      objc_msgSend(v17, sel_setResultType_, 2);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_233625CF0;
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      swift_getKeyPath();
      *(_QWORD *)(v29 + 32) = sub_23361E7EC();
      v44 = v29;
      sub_23361E408();
      v30 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setSortDescriptors_, v30);

      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB660]), sel_init);
      sub_23361E948();
      sub_23361E99C();
      v32 = v31;
      v33 = (void *)sub_23361E12C();
      objc_msgSend(v32, sel_setName_, v33);

      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v43;
      v35 = sub_233168668(0, &qword_256042F70);
      swift_getKeyPath();
      v36 = sub_23361E6F0();
      *(_QWORD *)(v34 + 56) = v35;
      *(_QWORD *)(v34 + 32) = v36;
      v37 = (void *)sub_23361E12C();
      v38 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v37, v38);

      objc_msgSend(v32, sel_setExpression_, v39);
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_233623D50;
      *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
      strcpy((char *)(v40 + 32), "monthAndYear");
      *(_BYTE *)(v40 + 45) = 0;
      *(_WORD *)(v40 + 46) = -5120;
      *(_QWORD *)(v40 + 88) = sub_233168668(0, (unint64_t *)&unk_256051D20);
      *(_QWORD *)(v40 + 64) = v32;
      v41 = v32;
      v42 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setPropertiesToFetch_, v42);

      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_233495CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;

  v6 = sub_23361E954();
  MEMORY[0x24BDAC7A8](v6);
  type metadata accessor for ManagedInternalTransaction();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_23361E150();

  v8 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v9 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233626360;
  *(_QWORD *)(v11 + 32) = _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(a1, a2, a3);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  *(_QWORD *)(v11 + 40) = sub_23361E6B4();
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  objc_msgSend(v10, sel_setPredicate_, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v14 + 16) = xmmword_233623D60;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 32) = 1918985593;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  v16 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToGroupBy_, v16);

  objc_msgSend(v10, sel_setResultType_, 2);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v17 + 32) = sub_23361E7EC();
  sub_23361E408();
  v18 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v18);

  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB660]), sel_init);
  sub_23361E948();
  sub_23361E99C();
  v20 = v19;
  v21 = (void *)sub_23361E12C();
  objc_msgSend(v20, sel_setName_, v21);

  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_233623D60;
  v23 = sub_233168668(0, &qword_256042F70);
  swift_getKeyPath();
  v24 = sub_23361E6F0();
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 32) = v24;
  v25 = (void *)sub_23361E12C();
  v26 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v25, v26);

  objc_msgSend(v20, sel_setExpression_, v27);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_233623D50;
  *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v28 + 32) = 1918985593;
  *(_QWORD *)(v28 + 40) = 0xE400000000000000;
  *(_QWORD *)(v28 + 88) = sub_233168668(0, (unint64_t *)&unk_256051D20);
  *(_QWORD *)(v28 + 64) = v20;
  v29 = v20;
  v30 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v30);

  return v10;
}

id sub_2334961C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23349562C(a1, a2, a3, a4, a5);
}

uint64_t sub_2334961F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233496238(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2331676FC;
  return sub_233493704(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_2334962E4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v15 = MEMORY[0x24BEE4AF8];
    result = sub_23327399C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_serialNumber);
      v9 = sub_23361E150();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_23327399C(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23349645C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_233273C0C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_integerValue);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_233273C0C(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2334965BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v20 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2334A4AA4(0, v8[2] + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v18 = v8[2];
    v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_2334A4AA4((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v8[2] = v18 + 1;
    v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v5)
        goto LABEL_27;
      v12 = *(_QWORD *)(v20 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v5)
          goto LABEL_27;
        v12 = *(_QWORD *)(v20 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v5)
            goto LABEL_27;
          v12 = *(_QWORD *)(v20 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v20 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

_QWORD *sub_2334967B4(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_issuerCountryCode);
      if (v8)
      {
        v9 = v8;
        v10 = sub_23361E150();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_2334A4AA4(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_2334A4AA4((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t BankConnectPassMatcher.__allocating_init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  sub_23318B020(a1, v12 + 16);
  sub_23318B020(a2, v12 + 56);
  sub_23318B020(a3, v12 + 96);
  *(_QWORD *)(v12 + 136) = a4;
  *(_QWORD *)(v12 + 144) = a5;
  sub_233168478(a6, v12 + 152, &qword_256051D30);
  return v12;
}

uint64_t BankConnectPassMatcher.init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_23318B020(a1, v6 + 16);
  sub_23318B020(a2, v6 + 56);
  sub_23318B020(a3, v6 + 96);
  *(_QWORD *)(v6 + 136) = a4;
  *(_QWORD *)(v6 + 144) = a5;
  sub_233168478(a6, v6 + 152, &qword_256051D30);
  return v6;
}

uint64_t BankConnectPassMatcher.institution(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233496ABC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v2 = *(void **)(v0 + 112);
  v1 = *(_QWORD **)(v0 + 120);
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = objc_msgSend(v2, sel_serialNumber);
  v6 = sub_23361E150();
  v8 = v7;

  *(_QWORD *)(v0 + 136) = v8;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v8;
  *(_BYTE *)(v0 + 96) = 1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v9;
  *v9 = v0;
  v9[1] = sub_233496B90;
  return v11(v0 + 80, v3, v4);
}

uint64_t sub_233496B90(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233496BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v1 = v0[19];
  v3 = (void *)v0[14];
  v2 = v0[15];
  v4 = swift_allocObject();
  v0[20] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_2333D00DC();
  swift_retain();
  v5 = v3;
  if (v1)
  {
    swift_getObjectType();
    sub_23361E474();
  }
  return swift_task_switch();
}

uint64_t sub_233496C8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_233496CF8;
  v3 = swift_continuation_init();
  sub_233286968(v3, v2, (uint64_t)&unk_256051D48, v1);
  return swift_continuation_await();
}

uint64_t sub_233496CF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 168) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    sub_233168478(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 104), &qword_256042B80);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_233496D8C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233496DCC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233496E08()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233496E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_233496EB0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v1 = _os_activity_create(&dword_233151000, "bankConnect/passMatcher", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  *(_QWORD *)(v0 + 56) = v1;
  os_activity_scope_enter(v1, (os_activity_scope_state_t)(v0 + 16));
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_233496FA0;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_233496FA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233497048()
{
  uint64_t v0;

  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 16));
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334970B4()
{
  uint64_t v0;

  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 16));
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233497120()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23349714C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_2331676FC;
  *(_OWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_2334971B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_2334971D0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = (void *)v0[5];
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[5];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v7, sel_primaryAccountIdentifier);
    v11 = sub_23361E150();
    v13 = v12;

    v0[2] = sub_233164DCC(v11, v13, &v16);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v4, v5, "Fetching institution for payment pass with fpanID: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {

  }
  v14 = (_QWORD *)swift_task_alloc();
  v0[6] = v14;
  *v14 = v0;
  v14[1] = sub_233206888;
  return sub_2334973C4(v0[3], v0[5]);
}

uint64_t sub_2334973C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = type metadata accessor for Institution(0);
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v3[9] = v6;
  *v6 = v3;
  v6[1] = sub_233497440;
  return sub_23349D2BC(a2);
}

uint64_t sub_233497440(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2334974BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 56) + 80);
    sub_2331684BC(v1 + ((v3 + 32) & ~v3), *(_QWORD *)(v0 + 64), type metadata accessor for Institution);
    if (v2 == 1)
    {
      v4 = *(void **)(v0 + 32);
      swift_bridgeObjectRelease();
      v5 = objc_msgSend(v4, sel_associatedApplicationIdentifiers);
      v6 = sub_23361E5DC();
      *(_QWORD *)(v0 + 88) = v6;

      v7 = objc_msgSend(v4, sel_associatedStoreIdentifiers);
      sub_233271454();
      v8 = sub_23361E3F0();
      *(_QWORD *)(v0 + 96) = v8;

      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v9;
      *v9 = v0;
      v9[1] = sub_23349782C;
      v10 = *(_QWORD *)(v0 + 64);
      v11 = *(_QWORD *)(v0 + 40);
      v9[39] = v8;
      v9[40] = v11;
      v9[37] = v10;
      v9[38] = v6;
      return swift_task_switch();
    }
    if (qword_256041CA0 != -1)
      swift_once();
    v20 = sub_23361DB80();
    __swift_project_value_buffer(v20, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain();
    v21 = sub_23361DB68();
    v22 = sub_23361E768();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 134349056;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = v2;
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v21, v22, "More than one (%{public}ld) institutions matched to pass, aborting matching.", v23, 0xCu);
      MEMORY[0x234934590](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 48);
    v26 = *(_QWORD *)(v0 + 24);
    sub_233168500(*(_QWORD *)(v0 + 64), type metadata accessor for Institution);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v26, 1, 1, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_256041CA0 != -1)
      swift_once();
    v13 = sub_23361DB80();
    __swift_project_value_buffer(v13, (uint64_t)qword_2560495B0);
    v14 = sub_23361DB68();
    v15 = sub_23361E780();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_233151000, v14, v15, "No institution matched, returning nil.", v16, 2u);
      MEMORY[0x234934590](v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v19, 1, 1, v17);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349782C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_BYTE *)(v4 + 120) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_2334978C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 120) == 1)
  {
    sub_233168580(v1, *(_QWORD *)(v0 + 24), type metadata accessor for Institution);
    v5 = 0;
  }
  else
  {
    sub_233168500(v1, type metadata accessor for Institution);
    v5 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, v5, 1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233497950()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 64), type metadata accessor for Institution);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectPassMatcher.institutions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_2334979AC()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD **)(v0 + 128);
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = sub_2334962E4(v2);
  v6 = sub_2331C92EC(v5);
  *(_QWORD *)(v0 + 136) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = 0;
  *(_BYTE *)(v0 + 96) = 2;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v7;
  *v7 = v0;
  v7[1] = sub_233497A80;
  return v9(v0 + 80, v3, v4);
}

uint64_t sub_233497A80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233497AE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[19];
  v3 = v0[15];
  v2 = v0[16];
  v4 = swift_allocObject();
  v0[20] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  sub_2333D00DC();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v1)
  {
    swift_getObjectType();
    sub_23361E474();
  }
  return swift_task_switch();
}

uint64_t sub_233497B80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v0[7] = v0 + 14;
  v0[2] = v0;
  v0[3] = sub_233497BEC;
  v3 = swift_continuation_init();
  sub_233286B70(v3, v2, (uint64_t)&unk_256051D60, v1);
  return swift_continuation_await();
}

uint64_t sub_233497BEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 168) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 176) = *(_QWORD *)(v1 + 112);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_233497C70()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_233497CA8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233497CE4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233497D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_233497D34()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v3;

  v3 = (char *)&dword_25604A1A0 + dword_25604A1A0;
  swift_retain();
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_233497DBC;
  return ((uint64_t (*)(const char *, uint64_t, uint64_t, _QWORD, _QWORD))v3)("bankConnect/passesMatcher", 25, 2, v0[3], v0[4]);
}

uint64_t sub_233497DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_233497E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_233497E50()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[6];
  if (!v4)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:

    v25 = (_QWORD *)swift_task_alloc();
    v0[7] = v25;
    *v25 = v0;
    v25[1] = sub_2334981A0;
    return sub_233498234(v0[6]);
  }
  v6 = (uint8_t *)swift_slowAlloc();
  v7 = swift_slowAlloc();
  v31 = v7;
  *(_DWORD *)v6 = 136315138;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x24BEE4AF8];
  v29 = v3;
  v28 = v7;
  if (!v8)
  {
LABEL_17:
    v0[2] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    v22 = sub_23361E0D8();
    v24 = v23;
    swift_bridgeObjectRelease();
    v0[3] = sub_233164DCC(v22, v24, &v31);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v29, "Fetching institutions for payment passes with fpanIDs: %s.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v28, -1, -1);
    MEMORY[0x234934590](v6, -1, -1);
    goto LABEL_18;
  }
  v32 = MEMORY[0x24BEE4AF8];
  result = sub_23327399C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v26 = v6;
    v27 = v2;
    v11 = 0;
    v9 = v32;
    v12 = v5 & 0xC000000000000001;
    v30 = v0[6] + 32;
    do
    {
      if (v12)
        v13 = (id)MEMORY[0x234933120](v11, v0[6]);
      else
        v13 = *(id *)(v30 + 8 * v11);
      v14 = v13;
      v15 = objc_msgSend(v14, sel_primaryAccountIdentifier);
      v16 = sub_23361E150();
      v18 = v17;

      v32 = v9;
      v20 = *(_QWORD *)(v9 + 16);
      v19 = *(_QWORD *)(v9 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_23327399C(v19 > 1, v20 + 1, 1);
        v9 = v32;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v20 + 1;
      v21 = v9 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
    }
    while (v8 != v11);
    v6 = v26;
    v2 = v27;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334981A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_23349821C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233498234(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[2] = a1;
  v2[3] = v1;
  v4 = type metadata accessor for InstitutionWithPass();
  v2[4] = v4;
  v2[5] = *(_QWORD *)(v4 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v2[10] = v5;
  *v5 = v2;
  v5[1] = sub_2334982DC;
  return sub_2334990E8(a1);
}

uint64_t sub_2334982DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_233498380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 16);
    if (v3 >> 62)
      goto LABEL_32;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      *(_QWORD *)(v0 + 104) = v4;
      *(_DWORD *)(v0 + 176) = *(_DWORD *)(*(_QWORD *)(v0 + 40) + 80);
      v5 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v0 + 112) = 0;
      *(_QWORD *)(v0 + 120) = v5;
      if (*(_QWORD *)(v1 + 16))
      {
        v6 = 0;
        while (1)
        {
          v7 = *(_QWORD *)(v0 + 104);
          v8 = *(_QWORD *)(v0 + 72);
          v9 = v1 + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176));
          v10 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 72);
          *(_QWORD *)(v0 + 128) = v10;
          sub_2331684BC(v9 + v10 * v6, v8, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          if (v7)
            break;
LABEL_19:
          if (qword_256041CA0 != -1)
            swift_once();
          v26 = *(_QWORD *)(v0 + 72);
          v28 = *(_QWORD *)(v0 + 48);
          v27 = *(_QWORD *)(v0 + 56);
          v29 = sub_23361DB80();
          __swift_project_value_buffer(v29, (uint64_t)qword_2560495B0);
          sub_2331684BC(v26, v27, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          sub_2331684BC(v26, v28, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          v30 = sub_23361DB68();
          v31 = sub_23361E768();
          v32 = os_log_type_enabled(v30, v31);
          v34 = *(_QWORD *)(v0 + 48);
          v33 = *(_QWORD *)(v0 + 56);
          if (v32)
          {
            v54 = *(_QWORD *)(v0 + 32);
            v35 = swift_slowAlloc();
            v36 = swift_slowAlloc();
            v55 = v36;
            *(_DWORD *)v35 = 136315394;
            v37 = *(_QWORD *)(v33 + 16);
            v38 = *(_QWORD *)(v33 + 24);
            swift_bridgeObjectRetain();
            *(_QWORD *)(v35 + 4) = sub_233164DCC(v37, v38, &v55);
            swift_bridgeObjectRelease();
            sub_233168500(v33, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
            *(_WORD *)(v35 + 12) = 2080;
            v39 = (uint64_t *)(v34 + *(int *)(v54 + 20));
            v40 = *v39;
            v41 = v39[1];
            swift_bridgeObjectRetain();
            *(_QWORD *)(v35 + 14) = sub_233164DCC(v40, v41, &v55);
            swift_bridgeObjectRelease();
            sub_233168500(v34, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
            _os_log_impl(&dword_233151000, v30, v31, "Institution %s was matched with a non-existing pass %s", (uint8_t *)v35, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x234934590](v36, -1, -1);
            MEMORY[0x234934590](v35, -1, -1);
          }
          else
          {
            sub_233168500(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
            sub_233168500(v34, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          }

          v42 = *(_QWORD *)(v0 + 96);
          v43 = *(_QWORD *)(v0 + 112) + 1;
          sub_233168500(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          if (v43 == v42)
            goto LABEL_29;
          v6 = *(_QWORD *)(v0 + 112) + 1;
          v44 = MEMORY[0x24BEE4AF8];
          *(_QWORD *)(v0 + 112) = v6;
          *(_QWORD *)(v0 + 120) = v44;
          v1 = *(_QWORD *)(v0 + 88);
          if (v6 >= *(_QWORD *)(v1 + 16))
            goto LABEL_31;
        }
        v11 = (uint64_t *)(*(_QWORD *)(v0 + 72) + *(int *)(*(_QWORD *)(v0 + 32) + 20));
        v13 = *v11;
        v12 = v11[1];
        swift_bridgeObjectRetain();
        v14 = 0;
        while (1)
        {
          v15 = *(_QWORD *)(v0 + 16);
          v16 = (v15 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x234933120](v14)
              : *(id *)(v15 + 8 * v14 + 32);
          v17 = v16;
          *(_QWORD *)(v0 + 136) = v16;
          v18 = v14 + 1;
          if (__OFADD__(v14, 1))
            break;
          v19 = objc_msgSend(v16, sel_serialNumber);
          v20 = sub_23361E150();
          v22 = v21;

          if (v20 == v13 && v22 == v12)
          {
            swift_bridgeObjectRelease();
LABEL_28:
            swift_bridgeObjectRelease();
            v45 = v17;
            v46 = objc_msgSend(v45, sel_associatedApplicationIdentifiers);
            v47 = sub_23361E5DC();
            *(_QWORD *)(v0 + 144) = v47;

            v48 = objc_msgSend(v45, sel_associatedStoreIdentifiers);
            sub_233271454();
            v49 = sub_23361E3F0();
            *(_QWORD *)(v0 + 152) = v49;

            v50 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 160) = v50;
            *v50 = v0;
            v50[1] = sub_2334988B8;
            v51 = *(_QWORD *)(v0 + 72);
            v52 = *(_QWORD *)(v0 + 24);
            v50[39] = v49;
            v50[40] = v52;
            v50[37] = v51;
            v50[38] = v47;
            return swift_task_switch();
          }
          v24 = sub_23361F224();
          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
            goto LABEL_28;
          v25 = *(_QWORD *)(v0 + 104);

          ++v14;
          if (v18 == v25)
          {
            swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
        __break(1u);
      }
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v4 = sub_23361EF30();
      swift_bridgeObjectRelease();
      v1 = *(_QWORD *)(v0 + 88);
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_2334988B8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_BYTE *)(v4 + 180) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_233498964()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;

  if ((*(_BYTE *)(v0 + 180) & 1) == 0)
  {
    v9 = *(void **)(v0 + 136);

    v2 = *(_QWORD **)(v0 + 120);
    goto LABEL_7;
  }
  sub_2331684BC(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD **)(v0 + 120);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_35;
  while (1)
  {
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = (_QWORD *)sub_2334A5ED4(v3 > 1, v4 + 1, 1, (unint64_t)v2);
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(void **)(v0 + 136);
    v7 = *(unsigned __int8 *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 64);
    v2[2] = v4 + 1;
    sub_233168580(v8, (uint64_t)v2 + ((v7 + 32) & ~v7) + v5 * v4, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);

LABEL_7:
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 112) + 1;
    sub_233168500(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
    if (v11 == v10)
      break;
    v60 = v2;
    while (1)
    {
      v13 = *(_QWORD *)(v0 + 112) + 1;
      *(_QWORD *)(v0 + 112) = v13;
      *(_QWORD *)(v0 + 120) = v2;
      v14 = *(_QWORD *)(v0 + 88);
      if (v13 >= *(_QWORD *)(v14 + 16))
        break;
      v15 = *(_QWORD *)(v0 + 104);
      v16 = *(_QWORD *)(v0 + 72);
      v17 = v14 + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176));
      v18 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 72);
      *(_QWORD *)(v0 + 128) = v18;
      sub_2331684BC(v17 + v18 * v13, v16, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      if (v15)
      {
        v19 = (uint64_t *)(*(_QWORD *)(v0 + 72) + *(int *)(*(_QWORD *)(v0 + 32) + 20));
        v21 = *v19;
        v20 = v19[1];
        swift_bridgeObjectRetain();
        v22 = 0;
        while (1)
        {
          v23 = *(_QWORD *)(v0 + 16);
          v24 = (v23 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x234933120](v22)
              : *(id *)(v23 + 8 * v22 + 32);
          v25 = v24;
          *(_QWORD *)(v0 + 136) = v24;
          v26 = v22 + 1;
          if (__OFADD__(v22, 1))
            break;
          v2 = objc_msgSend(v24, sel_serialNumber);
          v27 = sub_23361E150();
          v29 = v28;

          if (v27 == v21 && v29 == v20)
          {
            swift_bridgeObjectRelease();
LABEL_32:
            swift_bridgeObjectRelease();
            v51 = v25;
            v52 = objc_msgSend(v51, sel_associatedApplicationIdentifiers);
            v53 = sub_23361E5DC();
            *(_QWORD *)(v0 + 144) = v53;

            v54 = objc_msgSend(v51, sel_associatedStoreIdentifiers);
            sub_233271454();
            v55 = sub_23361E3F0();
            *(_QWORD *)(v0 + 152) = v55;

            v56 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 160) = v56;
            *v56 = v0;
            v56[1] = sub_2334988B8;
            v57 = *(_QWORD *)(v0 + 72);
            v58 = *(_QWORD *)(v0 + 24);
            v56[39] = v55;
            v56[40] = v58;
            v56[37] = v57;
            v56[38] = v53;
            return swift_task_switch();
          }
          v31 = sub_23361F224();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
            goto LABEL_32;
          v32 = *(_QWORD *)(v0 + 104);

          ++v22;
          if (v26 == v32)
          {
            swift_bridgeObjectRelease();
            v2 = v60;
            goto LABEL_24;
          }
        }
        __break(1u);
        break;
      }
LABEL_24:
      if (qword_256041CA0 != -1)
        swift_once();
      v33 = *(_QWORD *)(v0 + 72);
      v35 = *(_QWORD *)(v0 + 48);
      v34 = *(_QWORD *)(v0 + 56);
      v36 = sub_23361DB80();
      __swift_project_value_buffer(v36, (uint64_t)qword_2560495B0);
      sub_2331684BC(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      sub_2331684BC(v33, v35, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      v37 = sub_23361DB68();
      v38 = sub_23361E768();
      v39 = os_log_type_enabled(v37, v38);
      v41 = *(_QWORD *)(v0 + 48);
      v40 = *(_QWORD *)(v0 + 56);
      if (v39)
      {
        v59 = *(_QWORD *)(v0 + 32);
        v42 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        v61 = v43;
        *(_DWORD *)v42 = 136315394;
        v45 = *(_QWORD *)(v40 + 16);
        v44 = *(_QWORD *)(v40 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 4) = sub_233164DCC(v45, v44, &v61);
        swift_bridgeObjectRelease();
        sub_233168500(v40, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
        *(_WORD *)(v42 + 12) = 2080;
        v46 = (uint64_t *)(v41 + *(int *)(v59 + 20));
        v47 = *v46;
        v48 = v46[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 14) = sub_233164DCC(v47, v48, &v61);
        swift_bridgeObjectRelease();
        sub_233168500(v41, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
        _os_log_impl(&dword_233151000, v37, v38, "Institution %s was matched with a non-existing pass %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x234934590](v43, -1, -1);
        v2 = v60;
        MEMORY[0x234934590](v42, -1, -1);
      }
      else
      {
        sub_233168500(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
        sub_233168500(v41, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      }

      v49 = *(_QWORD *)(v0 + 96);
      v50 = *(_QWORD *)(v0 + 112) + 1;
      sub_233168500(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      if (v50 == v49)
        goto LABEL_8;
    }
    __break(1u);
LABEL_35:
    v2 = (_QWORD *)sub_2334A5ED4(0, v2[2] + 1, 1, (unint64_t)v2);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v2);
}

uint64_t sub_233498F08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 72);

  sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectPassMatcher.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_release();
  swift_release();
  sub_233168608(v0 + 152, &qword_256051D30);
  return v0;
}

uint64_t BankConnectPassMatcher.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_release();
  swift_release();
  sub_233168608(v0 + 152, &qword_256051D30);
  return swift_deallocClassInstance();
}

uint64_t sub_233499020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return BankConnectPassMatcher.institution(for:)(a1, a2);
}

uint64_t sub_233499084(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_233160FEC;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch();
}

uint64_t sub_2334990E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v2[8] = swift_task_alloc();
  v3 = type metadata accessor for RawBankConnectData.InstitutionForPassResponse(0);
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration(0);
  v2[15] = swift_task_alloc();
  v2[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_256051E78);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v4 = type metadata accessor for InstitutionWithPass();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045040);
  v2[25] = swift_task_alloc();
  v5 = type metadata accessor for RawBankConnectData.Institution(0);
  v2[26] = v5;
  v2[27] = *(_QWORD *)(v5 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23349929C()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = (_QWORD *)v0[6];
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v0[31] = sub_23349EECC(v2, v1);
  v0[32] = 0;
  swift_release();
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)swift_task_alloc();
  v0[33] = v3;
  *v3 = v0;
  v3[1] = sub_233499320;
  return sub_23349C058();
}

uint64_t sub_233499320()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233499374()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v2 = *(_QWORD *)(v0 + 248);
  v57 = sub_2331609BC(MEMORY[0x24BEE4AF8]);
  v3 = *(_QWORD *)(v0 + 248);
  if (v2 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    *(_QWORD *)(v0 + 272) = v4;
    v5 = v57;
    if (v4)
      break;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 360) = v57;
    v10 = *(_QWORD *)(v0 + 248);
    v11 = swift_bridgeObjectRetain();
    v12 = sub_2331C89E8(v11);
    v48 = sub_23349F1A0(v10, v12);
    *(_QWORD *)(v0 + 368) = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v57 + 16);
    v3 = MEMORY[0x24BEE4AF8];
    if (!v13)
    {
LABEL_22:
      *(_QWORD *)(v0 + 376) = v3;
      v1 = v48;
      if (!(v48 >> 62))
      {
        if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_24:
          v42 = *(_QWORD **)(v0 + 48);
          v43 = v42[15];
          v44 = v42[16];
          __swift_project_boxed_opaque_existential_1(v42 + 12, v43);
          v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
          *(_QWORD *)(v0 + 384) = v45;
          v61 = (char *)&dword_2560574E0 + dword_2560574E0;
          swift_bridgeObjectRetain();
          swift_retain();
          v46 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 392) = v46;
          *v46 = v0;
          v46[1] = sub_23349A5C0;
          return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v61)(*(_QWORD *)(v0 + 120), v45, v45, v1);
        }
        goto LABEL_31;
      }
LABEL_30:
      swift_bridgeObjectRetain();
      v47 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v47)
        goto LABEL_24;
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
    }
    v54 = *(_QWORD *)(v0 + 168);
    v55 = *(_QWORD *)(v0 + 176);
    v52 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 160);
    v50 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 144);
    v49 = *(_QWORD *)(v0 + 128);
    v62 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_233274288(0, v13, 0);
    v1 = sub_2335B2FE8(v57);
    v15 = v14;
    v17 = v16 & 1;
    v60 = v62;
    v58 = v13 - 1;
    v56 = v0;
    while (1)
    {
      v18 = *(_QWORD *)(v0 + 192);
      v19 = *(uint64_t **)(v0 + 152);
      v20 = *(uint64_t **)(v0 + 160);
      v22 = *(_QWORD **)(v0 + 136);
      v21 = *(uint64_t **)(v0 + 144);
      v23 = (uint64_t)v20 + *(int *)(v49 + 48);
      v59 = v15;
      v24 = sub_23349EE14(v23, v1, v15, v17 & 1, v5);
      *v20 = v24;
      *(_QWORD *)(v53 + 8) = v25;
      *v19 = v24;
      *(_QWORD *)(v52 + 8) = v25;
      sub_2331684BC(v23, (uint64_t)v19 + *(int *)(v49 + 48), type metadata accessor for RawBankConnectData.Institution);
      sub_233168478((uint64_t)v19, (uint64_t)v21, &qword_256051E78);
      swift_bridgeObjectRetain();
      sub_233168608((uint64_t)v20, &qword_256051E78);
      v26 = *(int *)(v49 + 48);
      v27 = (_QWORD *)((char *)v22 + v26);
      v28 = (uint64_t)v21 + v26;
      v29 = *v21;
      v30 = *(_QWORD *)(v51 + 8);
      sub_2331684BC((uint64_t)v21 + v26, (uint64_t)v22 + v26, type metadata accessor for RawBankConnectData.Institution);
      Institution.init(fromRaw:)(v27, v18);
      v31 = (uint64_t)v22 + *(int *)(v49 + 48);
      *v22 = v29;
      *(_QWORD *)(v50 + 8) = v30;
      sub_2331684BC(v28, v31, type metadata accessor for RawBankConnectData.Institution);
      v32 = (_QWORD *)(v18 + *(int *)(v54 + 20));
      *v32 = v29;
      v32[1] = v30;
      swift_bridgeObjectRetain();
      sub_233168500(v31, type metadata accessor for RawBankConnectData.Institution);
      sub_233168608((uint64_t)v21, &qword_256051E78);
      v3 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233274288(0, *(_QWORD *)(v60 + 16) + 1, 1);
        v3 = v62;
      }
      v34 = *(_QWORD *)(v3 + 16);
      v33 = *(_QWORD *)(v3 + 24);
      v0 = v56;
      if (v34 >= v33 >> 1)
      {
        sub_233274288(v33 > 1, v34 + 1, 1);
        v3 = v62;
      }
      v35 = *(_QWORD *)(v56 + 192);
      *(_QWORD *)(v3 + 16) = v34 + 1;
      sub_233168580(v35, v3+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
      v5 = v57;
      if (v1 < 0 || v1 >= -(-1 << *(_BYTE *)(v57 + 32)))
        break;
      if (((*(_QWORD *)(v57 + 64 + (((unint64_t)v1 >> 3) & 0xFFFFFFFFFFFFF8)) >> v1) & 1) == 0)
        goto LABEL_26;
      if (*(_DWORD *)(v57 + 36) != v59)
        goto LABEL_27;
      v36 = sub_23361EC84();
      if (!v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      v1 = v36;
      v60 = v3;
      v17 = 0;
      v15 = *(_DWORD *)(v57 + 36);
      --v58;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain_n();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 144);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 296) = v57;
  *(_QWORD *)(v0 + 304) = 0;
  *(_QWORD *)(v0 + 280) = v6;
  *(_QWORD *)(v0 + 288) = v8;
  if ((v7 & 0xC000000000000001) != 0)
    v9 = (id)MEMORY[0x234933120](0);
  else
    v9 = *(id *)(v7 + 32);
  *(_QWORD *)(v0 + 312) = v9;
  v37 = objc_msgSend(v9, sel_serialNumber);
  v38 = sub_23361E150();
  v40 = v39;

  *(_QWORD *)(v0 + 320) = v38;
  *(_QWORD *)(v0 + 328) = v40;
  return swift_task_switch();
}

uint64_t sub_233499994()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  if (qword_256041CB8 != -1)
    swift_once();
  v1 = sub_23361DB80();
  v0[42] = v1;
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495F8);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[41];
  if (v4)
  {
    v6 = v0[40];
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v7 + 4) = sub_233164DCC(v6, v5, &v15);
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v3, "Retrieving institutions response from cache for pass serial: %s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = v0[40];
  v9 = v0[41];
  v12 = v0[35];
  v11 = v0[36];
  v13 = (_QWORD *)swift_task_alloc();
  v13[2] = v10;
  v13[3] = v9;
  v13[4] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051E88);
  sub_23361E960();
  v0[43] = v11;
  if (v11)
  {
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v0[44] = 0;
  }
  return swift_task_switch();
}

uint64_t sub_233499BA0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = (void *)v0[43];
  __swift_project_value_buffer(v0[42], (uint64_t)qword_2560495B0);
  v2 = v1;
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E768();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[43];
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 + 4) = v11;
    *v9 = v11;

    _os_log_impl(&dword_233151000, v4, v5, "Error obtaining cached response with error: %@.", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);

  }
  else
  {

  }
  swift_bridgeObjectRelease();
  v0[2] = 1;
  v0[44] = 0;
  return swift_task_switch();
}

uint64_t sub_233499D50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t result;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int isUniquelyReferenced_nonNull_native;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  char v66;
  unint64_t v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;

  v1 = v0[2];
  if (v1 != 1)
  {
    if (!v1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[27] + 56))(v0[25], 1, 1, v0[26]);
LABEL_9:
      v7 = v0[25];

      sub_233168608(v7, &qword_256045040);
      goto LABEL_10;
    }
    if (*(_QWORD *)(v1 + 16))
    {
      v2 = *(unsigned __int8 *)(v0[27] + 80);
      sub_2331684BC(v1 + ((v2 + 32) & ~v2), v0[25], type metadata accessor for RawBankConnectData.Institution);
      v3 = 0;
    }
    else
    {
      v3 = 1;
    }
    v4 = v0[26];
    v5 = v0[27];
    v6 = v0[25];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
    sub_23349F53C(v1);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
      goto LABEL_9;
    v53 = (void *)v0[39];
    v54 = v0[37];
    v56 = v0[29];
    v55 = v0[30];
    sub_233168580(v0[25], v55, type metadata accessor for RawBankConnectData.Institution);
    v57 = objc_msgSend(v53, sel_serialNumber);
    v58 = sub_23361E150();
    v60 = v59;

    sub_2331684BC(v55, v56, type metadata accessor for RawBankConnectData.Institution);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[4] = v54;
    v63 = sub_2331E3D18(v58, v60);
    v64 = *(_QWORD *)(v54 + 16);
    v65 = (v62 & 1) == 0;
    result = v64 + v65;
    if (__OFADD__(v64, v65))
    {
      __break(1u);
    }
    else
    {
      v66 = v62;
      if (*(_QWORD *)(v0[37] + 24) >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23327F490();
      }
      else
      {
        sub_23327BFCC(result, isUniquelyReferenced_nonNull_native);
        v67 = sub_2331E3D18(v58, v60);
        if ((v66 & 1) != (v68 & 1))
          return sub_23361F2B4();
        v63 = v67;
      }
      v69 = (_QWORD *)v90[4];
      v70 = v90[29];
      v71 = v90[27];
      if ((v66 & 1) != 0)
      {
        v72 = (_QWORD *)v90[4];
        sub_23333B4EC(v70, v69[7] + *(_QWORD *)(v71 + 72) * v63);
LABEL_43:
        v0 = v90;
        v77 = (void *)v90[39];
        v78 = v90[30];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_233168500(v78, type metadata accessor for RawBankConnectData.Institution);
        v8 = (uint64_t)v72;
        goto LABEL_11;
      }
      v69[(v63 >> 6) + 8] |= 1 << v63;
      v73 = (uint64_t *)(v69[6] + 16 * v63);
      *v73 = v58;
      v73[1] = v60;
      result = sub_233168580(v70, v69[7] + *(_QWORD *)(v71 + 72) * v63, type metadata accessor for RawBankConnectData.Institution);
      v74 = v69[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (!v75)
      {
        v72 = v69;
        v69[2] = v76;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      }
    }
    __break(1u);
    return result;
  }

LABEL_10:
  v8 = v0[37];
LABEL_11:
  v9 = v0[38] + 1;
  if (v9 == v0[34])
  {
    swift_bridgeObjectRelease();
    v0[45] = v8;
    v10 = v0[31];
    v11 = swift_bridgeObjectRetain();
    v12 = sub_2331C89E8(v11);
    v13 = sub_23349F1A0(v10, v12);
    v0[46] = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v8 + 16);
    v15 = MEMORY[0x24BEE4AF8];
    if (v14)
    {
      v80 = v13;
      v87 = v0[21];
      v88 = v0[22];
      v85 = v0[19];
      v86 = v0[20];
      v83 = v0[17];
      v84 = v0[18];
      v82 = v0[16];
      v95 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_233274288(0, v14, 0);
      v16 = sub_2335B2FE8(v8);
      v18 = v17;
      v20 = v19 & 1;
      v81 = v8 + 64;
      v93 = v95;
      v91 = v14 - 1;
      v89 = v8;
      while (1)
      {
        v21 = v0[24];
        v22 = (uint64_t *)v0[19];
        v23 = (uint64_t *)v0[20];
        v26 = v0 + 17;
        v25 = (_QWORD *)v0[17];
        v24 = (uint64_t *)v26[1];
        v27 = (uint64_t)v23 + *(int *)(v82 + 48);
        v92 = v18;
        v28 = sub_23349EE14(v27, v16, v18, v20 & 1, v8);
        *v23 = v28;
        *(_QWORD *)(v86 + 8) = v29;
        *v22 = v28;
        *(_QWORD *)(v85 + 8) = v29;
        sub_2331684BC(v27, (uint64_t)v22 + *(int *)(v82 + 48), type metadata accessor for RawBankConnectData.Institution);
        sub_233168478((uint64_t)v22, (uint64_t)v24, &qword_256051E78);
        swift_bridgeObjectRetain();
        sub_233168608((uint64_t)v23, &qword_256051E78);
        v30 = *(int *)(v82 + 48);
        v31 = (_QWORD *)((char *)v25 + v30);
        v13 = (unint64_t)v24 + v30;
        v32 = *v24;
        v33 = *(_QWORD *)(v84 + 8);
        sub_2331684BC((uint64_t)v24 + v30, (uint64_t)v25 + v30, type metadata accessor for RawBankConnectData.Institution);
        Institution.init(fromRaw:)(v31, v21);
        v34 = (uint64_t)v25 + *(int *)(v82 + 48);
        *v25 = v32;
        *(_QWORD *)(v83 + 8) = v33;
        sub_2331684BC(v13, v34, type metadata accessor for RawBankConnectData.Institution);
        v35 = (_QWORD *)(v21 + *(int *)(v87 + 20));
        *v35 = v32;
        v35[1] = v33;
        swift_bridgeObjectRetain();
        sub_233168500(v34, type metadata accessor for RawBankConnectData.Institution);
        sub_233168608((uint64_t)v24, &qword_256051E78);
        v15 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233274288(0, *(_QWORD *)(v93 + 16) + 1, 1);
          v15 = v95;
        }
        v37 = *(_QWORD *)(v15 + 16);
        v36 = *(_QWORD *)(v15 + 24);
        v0 = v90;
        if (v37 >= v36 >> 1)
        {
          sub_233274288(v36 > 1, v37 + 1, 1);
          v15 = v95;
        }
        v38 = v90[24];
        *(_QWORD *)(v15 + 16) = v37 + 1;
        sub_233168580(v38, v15+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v37, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
        v8 = v89;
        if (v16 < 0 || v16 >= -(-1 << *(_BYTE *)(v89 + 32)))
          break;
        if (((*(_QWORD *)(v81 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          goto LABEL_45;
        if (*(_DWORD *)(v89 + 36) != v92)
          goto LABEL_46;
        v39 = sub_23361EC84();
        if (!v91)
        {
          swift_bridgeObjectRelease();
          v13 = v80;
          goto LABEL_27;
        }
        v16 = v39;
        v93 = v15;
        v20 = 0;
        v18 = *(_DWORD *)(v89 + 36);
        --v91;
      }
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
    }
    else
    {
LABEL_27:
      v0[47] = v15;
      if (!(v13 >> 62))
      {
        if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          return ((uint64_t (*)(uint64_t))v0[1])(v15);
        }
LABEL_29:
        v43 = (_QWORD *)v0[6];
        v44 = v43[15];
        v45 = v43[16];
        __swift_project_boxed_opaque_existential_1(v43 + 12, v44);
        v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
        v0[48] = v46;
        v94 = (char *)&dword_2560574E0 + dword_2560574E0;
        swift_bridgeObjectRetain();
        swift_retain();
        v47 = (_QWORD *)swift_task_alloc();
        v0[49] = v47;
        *v47 = v0;
        v47[1] = sub_23349A5C0;
        return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, unint64_t))v94)(v0[15], v46, v46, v13);
      }
    }
    swift_bridgeObjectRetain();
    v79 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v79)
      goto LABEL_48;
    goto LABEL_29;
  }
  v40 = v0[44];
  v0[37] = v8;
  v0[38] = v9;
  v0[36] = v40;
  v41 = v0[31];
  if ((v41 & 0xC000000000000001) != 0)
    v42 = (id)MEMORY[0x234933120]();
  else
    v42 = *(id *)(v41 + 8 * v9 + 32);
  v0[39] = v42;
  v49 = objc_msgSend(v42, sel_serialNumber);
  v50 = sub_23361E150();
  v52 = v51;

  v0[40] = v50;
  v0[41] = v52;
  return swift_task_switch();
}

uint64_t sub_23349A5C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23349A650()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t **)(v0 + 120);
  v2 = *v1;
  *(_QWORD *)(v0 + 408) = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 416) = v3;
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(int *)(*(_QWORD *)(v0 + 112) + 20);
    *(_DWORD *)(v0 + 456) = v8;
    v9 = *(_DWORD *)(v5 + 80);
    *(_DWORD *)(v0 + 460) = v9;
    *(_QWORD *)(v0 + 424) = *(_QWORD *)(v5 + 72);
    *(_QWORD *)(v0 + 432) = 0;
    v10 = *(_QWORD *)(v0 + 56);
    v11 = *(uint64_t **)(v0 + 64);
    v12 = v2 + ((v9 + 32) & ~(unint64_t)v9);
    v13 = (uint64_t)v1 + v8;
    swift_bridgeObjectRetain();
    sub_2331684BC(v12, v7, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560475C8);
    v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_233623D60;
    sub_2331684BC(v7, v15 + v14, type metadata accessor for RawBankConnectData.Institution);
    sub_2331686A0(v13, (uint64_t)v11 + *(int *)(v10 + 20), (uint64_t *)&unk_254247DA0);
    *v11 = v15;
    v16 = (uint64_t *)(v7 + *(int *)(v6 + 20));
    v18 = *v16;
    v17 = v16[1];
    *(_QWORD *)(v0 + 440) = v17;
    swift_bridgeObjectRetain();
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v19;
    *v19 = v0;
    v19[1] = sub_23349AA4C;
    return sub_23349CAB4(*(_QWORD *)(v0 + 64), v18, v17);
  }
  else
  {
    v21 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v22)
    {
      v23 = *(_QWORD *)(v0 + 176);
      v24 = *(_QWORD *)(v0 + 80);
      v41 = *(_QWORD *)(v0 + 72);
      v42 = *(_QWORD *)(v0 + 168);
      v43 = MEMORY[0x24BEE4AF8];
      sub_233274288(0, v22, 0);
      v25 = v21 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      v26 = *(_QWORD *)(v24 + 72);
      v27 = v43;
      do
      {
        v28 = *(uint64_t **)(v0 + 224);
        v29 = *(_QWORD *)(v0 + 184);
        v30 = *(_QWORD *)(v0 + 104);
        sub_2331684BC(v25, v30, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        sub_2331684BC(v30, (uint64_t)v28, type metadata accessor for RawBankConnectData.Institution);
        Institution.init(fromRaw:)(v28, v29);
        v31 = (uint64_t *)(v30 + *(int *)(v41 + 20));
        v33 = *v31;
        v32 = v31[1];
        v34 = (_QWORD *)(v29 + *(int *)(v42 + 20));
        *v34 = v33;
        v34[1] = v32;
        swift_bridgeObjectRetain();
        sub_233168500(v30, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233274288(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v27 = v43;
        }
        v36 = *(_QWORD *)(v27 + 16);
        v35 = *(_QWORD *)(v27 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_233274288(v35 > 1, v36 + 1, 1);
          v27 = v43;
        }
        v37 = *(_QWORD *)(v0 + 184);
        *(_QWORD *)(v27 + 16) = v36 + 1;
        sub_233168580(v37, v27+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v36, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
        v25 += v26;
        --v22;
      }
      while (v22);
    }
    v38 = *(_QWORD *)(v0 + 376);
    v39 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    v40 = swift_bridgeObjectRetain();
    sub_23318A518(v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500(v39, type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v38);
  }
}

uint64_t sub_23349AA4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_233168500(v1, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  return swift_task_switch();
}

uint64_t sub_23349AABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 432) + 1;
  sub_233168500(*(_QWORD *)(v0 + 104), type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
  if (v2 == v1)
  {
    v3 = *(uint64_t **)(v0 + 120);
    swift_bridgeObjectRelease();
    v4 = *v3;
    v5 = *(_QWORD *)(*v3 + 16);
    v6 = MEMORY[0x24BEE4AF8];
    v58 = MEMORY[0x24BEE4AF8];
    result = swift_bridgeObjectRetain();
    if (v5)
    {
      v8 = 0;
      v9 = *(_QWORD *)(v0 + 208);
      v10 = *(_QWORD *)(v0 + 80);
      v57 = MEMORY[0x24BEE4AF8];
      v53 = v9;
      v55 = v5;
      while (v8 < *(_QWORD *)(v4 + 16))
      {
        v11 = *(_QWORD *)(v0 + 96);
        v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        v13 = *(_QWORD *)(v10 + 72);
        sub_2331684BC(v4 + v12 + v13 * v8, v11, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        v14 = *(_QWORD *)(v0 + 96);
        if ((*(_BYTE *)(v11 + *(int *)(v9 + 44)) & 1) != 0)
        {
          sub_233168580(v14, *(_QWORD *)(v0 + 88), type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          v15 = v57;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2332742B4(0, *(_QWORD *)(v57 + 16) + 1, 1);
            v15 = v58;
          }
          v17 = *(_QWORD *)(v15 + 16);
          v16 = *(_QWORD *)(v15 + 24);
          v18 = v15;
          if (v17 >= v16 >> 1)
          {
            sub_2332742B4(v16 > 1, v17 + 1, 1);
            v18 = v58;
          }
          v19 = *(_QWORD *)(v0 + 88);
          *(_QWORD *)(v18 + 16) = v17 + 1;
          v57 = v18;
          result = sub_233168580(v19, v18 + v12 + v17 * v13, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          v9 = v53;
          v5 = v55;
        }
        else
        {
          result = sub_233168500(v14, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
        }
        if (v5 == ++v8)
          goto LABEL_15;
      }
      __break(1u);
    }
    else
    {
      v57 = v6;
LABEL_15:
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v57 + 16);
      if (v34)
      {
        v35 = *(_QWORD *)(v0 + 176);
        v36 = *(_QWORD *)(v0 + 80);
        v54 = *(_QWORD *)(v0 + 72);
        v56 = *(_QWORD *)(v0 + 168);
        v59 = MEMORY[0x24BEE4AF8];
        sub_233274288(0, v34, 0);
        v37 = v57 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        v52 = *(_QWORD *)(v36 + 72);
        v38 = v59;
        do
        {
          v39 = *(uint64_t **)(v0 + 224);
          v40 = *(_QWORD *)(v0 + 184);
          v41 = *(_QWORD *)(v0 + 104);
          sub_2331684BC(v37, v41, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          sub_2331684BC(v41, (uint64_t)v39, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v39, v40);
          v42 = (uint64_t *)(v41 + *(int *)(v54 + 20));
          v44 = *v42;
          v43 = v42[1];
          v45 = (_QWORD *)(v40 + *(int *)(v56 + 20));
          *v45 = v44;
          v45[1] = v43;
          swift_bridgeObjectRetain();
          sub_233168500(v41, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_233274288(0, *(_QWORD *)(v38 + 16) + 1, 1);
            v38 = v59;
          }
          v47 = *(_QWORD *)(v38 + 16);
          v46 = *(_QWORD *)(v38 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_233274288(v46 > 1, v47 + 1, 1);
            v38 = v59;
          }
          v48 = *(_QWORD *)(v0 + 184);
          *(_QWORD *)(v38 + 16) = v47 + 1;
          sub_233168580(v48, v38+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v47, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
          v37 += v52;
          --v34;
        }
        while (v34);
      }
      v49 = *(_QWORD *)(v0 + 376);
      v50 = *(_QWORD *)(v0 + 120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      v51 = swift_bridgeObjectRetain();
      sub_23318A518(v51);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_233168500(v50, type metadata accessor for RawBankConnectData.InstitutionsForPassesResponseWithExpiration);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v49);
    }
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 424);
    v21 = *(_QWORD *)(v0 + 432) + 1;
    *(_QWORD *)(v0 + 432) = v21;
    v22 = *(_QWORD *)(v0 + 216);
    v23 = *(_QWORD *)(v0 + 104);
    v25 = *(uint64_t **)(v0 + 64);
    v24 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 56);
    v27 = *(_QWORD *)(v0 + 120) + *(int *)(v0 + 456);
    sub_2331684BC(*(_QWORD *)(v0 + 408)+ ((*(unsigned __int8 *)(v0 + 460) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 460))+ v20 * v21, v23, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560475C8);
    v28 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_233623D60;
    sub_2331684BC(v23, v29 + v28, type metadata accessor for RawBankConnectData.Institution);
    sub_2331686A0(v27, (uint64_t)v25 + *(int *)(v26 + 20), (uint64_t *)&unk_254247DA0);
    *v25 = v29;
    v30 = (uint64_t *)(v23 + *(int *)(v24 + 20));
    v32 = *v30;
    v31 = v30[1];
    *(_QWORD *)(v0 + 440) = v31;
    swift_bridgeObjectRetain();
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v33;
    *v33 = v0;
    v33[1] = sub_23349AA4C;
    return sub_23349CAB4(*(_QWORD *)(v0 + 64), v32, v31);
  }
  return result;
}

uint64_t sub_23349B018()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 400);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 400);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v12;
    sub_23361EBC4();
    *v10 = v12;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to fetch the institutions via batch endpoint: %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 400);

  sub_233223B30();
  swift_allocError();
  *(_QWORD *)v14 = v13;
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349B2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[39] = a3;
  v4[40] = v3;
  v4[37] = a1;
  v4[38] = a2;
  return swift_task_switch();
}

uint64_t sub_23349B330()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  int *v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  __int128 *v55;
  _QWORD *v56;
  uint64_t v57;

  v2 = *(_WORD *)(*(_QWORD *)(v1 + 296) + 34);
  if ((v2 & 4) != 0)
  {
    v4 = 1;
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
  if ((v2 & 2) == 0)
  {
LABEL_3:
    v3 = *(_QWORD *)(v1 + 296);
    if ((*(_WORD *)(v3 + 34) & 1) != 0)
    {
      v4 = *(_QWORD *)(v3 + 72);
      if (!v4)
        return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
      v24 = *(_QWORD *)(v4 + 16);
      if (v24)
      {
        v25 = (void **)(v1 + 272);
        v26 = swift_bridgeObjectRetain() + 40;
        while (1)
        {
          v27 = objc_allocWithZone(MEMORY[0x24BDC1528]);
          swift_bridgeObjectRetain();
          v28 = (void *)sub_23361E12C();
          *v25 = 0;
          v29 = objc_msgSend(v27, sel_initWithBundleIdentifier_error_, v28, v25);

          v30 = *v25;
          if (v29)
            break;
          v26 += 16;
          v31 = v30;
          v32 = (void *)sub_23361D1B4();

          swift_willThrow();
          swift_bridgeObjectRelease();
          if (!--v24)
          {
            swift_bridgeObjectRelease();
            v4 = 0;
            return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
          }
        }
        v42 = v30;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = 1;
        return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
      }
    }
    v4 = 0;
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
  v54 = v1 + 144;
  v55 = (__int128 *)(v1 + 184);
  v5 = *(_QWORD *)(v1 + 304);
  v8 = *(_QWORD *)(v5 + 56);
  v7 = v5 + 56;
  v6 = v8;
  v56 = (_QWORD *)v1;
  v9 = (void **)(v1 + 280);
  v10 = -1;
  v11 = -1 << *(_BYTE *)(*(_QWORD *)(v1 + 304) + 32);
  if (-v11 < 64)
    v10 = ~(-1 << -(char)v11);
  v1 = v10 & v6;
  v12 = (unint64_t)(63 - v11) >> 6;
  swift_bridgeObjectRetain();
  v13 = 0;
  if (!v1)
    goto LABEL_10;
LABEL_9:
  for (v1 &= v1 - 1; ; v1 = (v15 - 1) & v15)
  {
    swift_bridgeObjectRetain();
    v17 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v18 = (void *)objc_opt_self();
    *v9 = 0;
    v19 = objc_msgSend(v18, sel_bundleRecordWithApplicationIdentifier_error_, v17, v9);

    v20 = *v9;
    if (v19)
    {
      v1 = (uint64_t)v56;
      v23 = v20;

      swift_release();
      v4 = 1;
      return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
    }
    v21 = v20;
    v22 = (void *)sub_23361D1B4();

    v0 = (uint64_t)v22;
    swift_willThrow();

    if (v1)
      goto LABEL_9;
LABEL_10:
    v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v14 >= v12)
      goto LABEL_38;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v13;
    if (!v15)
    {
      v13 = v14 + 1;
      if (v14 + 1 >= v12)
        goto LABEL_38;
      v15 = *(_QWORD *)(v7 + 8 * v13);
      if (!v15)
      {
        v13 = v14 + 2;
        if (v14 + 2 >= v12)
          goto LABEL_38;
        v15 = *(_QWORD *)(v7 + 8 * v13);
        if (!v15)
        {
          v13 = v14 + 3;
          if (v14 + 3 >= v12)
            goto LABEL_38;
          v15 = *(_QWORD *)(v7 + 8 * v13);
          if (!v15)
          {
            v13 = v14 + 4;
            if (v14 + 4 >= v12)
              goto LABEL_38;
            v15 = *(_QWORD *)(v7 + 8 * v13);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_27:
    ;
  }
  v16 = v14 + 5;
  if (v16 < v12)
  {
    v15 = *(_QWORD *)(v7 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        v13 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_55;
        if (v13 >= v12)
          goto LABEL_38;
        v15 = *(_QWORD *)(v7 + 8 * v13);
        ++v16;
        if (v15)
          goto LABEL_27;
      }
    }
    v13 = v16;
    goto LABEL_27;
  }
LABEL_38:
  v1 = (uint64_t)v56;
  v33 = v56[40];
  swift_release();
  sub_2331686A0(v33 + 152, (uint64_t)v55, &qword_256051D30);
  if (!v56[26])
  {
    sub_233168608((uint64_t)v55, &qword_256051D30);
    if (qword_256041CA0 != -1)
      swift_once();
    v38 = sub_23361DB80();
    __swift_project_value_buffer(v38, (uint64_t)qword_2560495B0);
    v39 = sub_23361DB68();
    v40 = sub_23361E780();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_233151000, v39, v40, "Unable to validate associatedStoreIdentifiers, softwareLibrary unavailable on this platform.", v41, 2u);
      MEMORY[0x234934590](v41, -1, -1);
    }

    goto LABEL_3;
  }
  v34 = v56[39];
  v0 = v54;
  sub_23318B020(v55, v54);
  if (!(v34 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_41;
  }
LABEL_56:
  swift_bridgeObjectRetain();
  v35 = sub_23361EF30();
LABEL_41:
  *(_QWORD *)(v1 + 328) = v35;
  v36 = *(_QWORD *)(v1 + 312);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0);
    goto LABEL_3;
  }
  if ((v36 & 0xC000000000000001) != 0)
    v37 = (id)MEMORY[0x234933120](0);
  else
    v37 = *(id *)(v36 + 32);
  v44 = v37;
  *(_QWORD *)(v1 + 336) = v37;
  *(_QWORD *)(v1 + 344) = 1;
  sub_233177068(v0, v1 + 24);
  *(_QWORD *)(v1 + 16) = v44;
  v45 = v44;
  v46 = *(_QWORD *)(v1 + 48);
  v47 = *(_QWORD *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), v46);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_233625CF0;
  v49 = *(void **)(v1 + 16);
  *(_QWORD *)(v48 + 32) = v49;
  v57 = v48;
  sub_23361E408();
  *(_QWORD *)(v1 + 352) = v57;
  v50 = *(int **)(v47 + 8);
  v51 = *v50;
  v52 = v49;
  v53 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 360) = v53;
  *v53 = v1;
  v53[1] = sub_23349B910;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v50 + v51))(v57, v46, v47);
}

uint64_t sub_23349B910(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 368) = a1;
  *(_QWORD *)(v3 + 376) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23349B9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int *v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 368);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_233177068(v1 + 32, v0 + 104);
  }
  else
  {
    *(_QWORD *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 128))
  {
    sub_233168608(v0 + 104, &qword_256051E70);
LABEL_11:
    sub_23349F4EC((id *)(v0 + 16));

    goto LABEL_12;
  }
  sub_23318B020((__int128 *)(v0 + 104), v0 + 224);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 224), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  sub_233177068(v0 + 224, v0 + 64);
  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
    __swift_destroy_boxed_opaque_existential_0(v0 + 224);
    goto LABEL_11;
  }
  v6 = *(void **)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  sub_23349F4EC((id *)(v0 + 16));

  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
    goto LABEL_8;
  }
LABEL_12:
  v11 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 312);
  if (v11 == *(_QWORD *)(v0 + 328))
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
    v13 = *(_QWORD *)(v0 + 296);
    if ((*(_WORD *)(v13 + 34) & 1) == 0)
      goto LABEL_14;
    v10 = *(_QWORD *)(v13 + 72);
    if (!v10)
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
    v15 = *(_QWORD *)(v10 + 16);
    if (!v15)
    {
LABEL_14:
      v10 = 0;
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
    }
    v16 = (void **)(v0 + 272);
    v17 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      v18 = objc_allocWithZone(MEMORY[0x24BDC1528]);
      swift_bridgeObjectRetain();
      v19 = (void *)sub_23361E12C();
      *v16 = 0;
      v20 = objc_msgSend(v18, sel_initWithBundleIdentifier_error_, v19, v0 + 272);

      v21 = *v16;
      if (v20)
        break;
      v17 += 16;
      v22 = v21;
      v23 = (void *)sub_23361D1B4();

      swift_willThrow();
      swift_bridgeObjectRelease();
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    v35 = v21;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    v10 = 1;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
  }
  if ((v12 & 0xC000000000000001) != 0)
    v14 = (id)MEMORY[0x234933120](*(_QWORD *)(v0 + 344));
  else
    v14 = *(id *)(v12 + 8 * v11 + 32);
  v25 = v14;
  *(_QWORD *)(v0 + 336) = v14;
  *(_QWORD *)(v0 + 344) = v11 + 1;
  if (__OFADD__(v11, 1))
    __break(1u);
  sub_233177068(v0 + 144, v0 + 24);
  *(_QWORD *)(v0 + 16) = v25;
  v26 = v25;
  v27 = *(_QWORD *)(v0 + 48);
  v28 = *(_QWORD *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), v27);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_233625CF0;
  v30 = *(void **)(v0 + 16);
  *(_QWORD *)(v29 + 32) = v30;
  v36 = v29;
  sub_23361E408();
  *(_QWORD *)(v0 + 352) = v36;
  v31 = *(int **)(v28 + 8);
  v32 = *v31;
  v33 = v30;
  v34 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v34;
  *v34 = v0;
  v34[1] = sub_23349B910;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v31 + v32))(v36, v27, v28);
}

uint64_t sub_23349BDA4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  swift_bridgeObjectRelease();
  sub_23349F4EC((id *)(v0 + 16));
  swift_bridgeObjectRelease();
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 376);
  v2 = *(void **)(v0 + 336);
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  v4 = v2;
  v5 = v1;
  v6 = v4;
  v7 = v1;
  v8 = sub_23361DB68();
  v9 = sub_23361E768();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 376);
  v12 = *(void **)(v0 + 336);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412546;
    *(_QWORD *)(v0 + 288) = v12;
    v15 = v12;
    sub_23361EBC4();
    *v14 = v12;

    *(_WORD *)(v13 + 12) = 2112;
    v16 = v11;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 264) = v17;
    sub_23361EBC4();
    v14[1] = v17;

    _os_log_impl(&dword_233151000, v8, v9, "Failed to determine if %@ was installed with error: %@.", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v14, -1, -1);
    MEMORY[0x234934590](v13, -1, -1);
  }
  else
  {

  }
  v18 = *(_QWORD *)(v0 + 376);
  v19 = *(void **)(v0 + 336);

  sub_233223B30();
  swift_allocError();
  *(_QWORD *)v20 = v18;
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 1;
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23349C058()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = sub_23361D634();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23349C0B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 144);
  sub_23361D5F8();
  return swift_task_switch();
}

uint64_t sub_23349C100()
{
  uint64_t v0;

  sub_2335D9678(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 64) = 0;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349C180()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 64);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 64);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_23361EBC4();
    *v10 = v12;

    _os_log_impl(&dword_233151000, v5, v6, "Error removing expired cached responses: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349C354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_23349C370()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 144);
  return swift_task_switch();
}

uint64_t sub_23349C38C()
{
  uint64_t v0;

  sub_2335D8F30(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  *(_QWORD *)(v0 + 64) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349C3FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 64);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 64);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_23361EBC4();
    *v10 = v12;

    _os_log_impl(&dword_233151000, v5, v6, "Error obtaining cached response with error: %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

  }
  **(_QWORD **)(v0 + 24) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349C5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23349C5F0()
{
  _QWORD *v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0[10];
  v2 = sub_2334967B4(v1);
  v3 = sub_2331C92EC((uint64_t)v2);
  swift_bridgeObjectRelease();
  v4 = sub_2333AFF9C(v3);
  v36 = v0;
  v0[11] = v4;
  swift_bridgeObjectRelease();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
  {
LABEL_13:
    v36[12] = v6;
    v36[5] = &type metadata for BankConnectWebServiceInstitutionsForPassesRequest;
    v36[6] = &protocol witness table for BankConnectWebServiceInstitutionsForPassesRequest;
    v36[2] = v4;
    v36[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = (_QWORD *)swift_task_alloc();
    v36[13] = v33;
    *v33 = v36;
    v33[1] = sub_23349C970;
    return sub_2335B8790((uint64_t)(v36 + 2), 1u, 0, 1);
  }
  v44 = MEMORY[0x24BEE4AF8];
  result = sub_2332742E0(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v34 = v4;
    v8 = 0;
    v6 = v44;
    v37 = v1 & 0xC000000000000001;
    v35 = v36[10] + 32;
    v38 = v5;
    do
    {
      if (v37)
        v9 = (id)MEMORY[0x234933120](v8, v36[10]);
      else
        v9 = *(id *)(v35 + 8 * v8);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_passTypeIdentifier);
      v12 = sub_23361E150();
      v42 = v13;
      v43 = v12;

      v14 = objc_msgSend(v10, sel_serialNumber);
      v15 = sub_23361E150();
      v40 = v16;
      v41 = v15;

      v17 = objc_msgSend(v10, sel_associatedApplicationIdentifiers);
      v18 = sub_23361E5DC();

      v39 = sub_2334965BC(v18);
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v10, sel_associatedStoreIdentifiers);
      sub_233271454();
      v20 = sub_23361E3F0();

      v21 = sub_23349645C(v20);
      swift_bridgeObjectRelease();
      v22 = objc_msgSend(v10, sel_primaryPaymentApplicationPaymentType);
      v23 = sub_23361E150();
      v25 = v24;

      v26 = objc_msgSend(v10, sel_organizationName);
      v27 = sub_23361E150();
      v29 = v28;

      v31 = *(_QWORD *)(v44 + 16);
      v30 = *(_QWORD *)(v44 + 24);
      if (v31 >= v30 >> 1)
        sub_2332742E0(v30 > 1, v31 + 1, 1);
      ++v8;
      *(_QWORD *)(v44 + 16) = v31 + 1;
      v32 = (_QWORD *)(v44 + 80 * v31);
      v32[4] = v43;
      v32[5] = v42;
      v32[6] = v41;
      v32[7] = v40;
      v32[8] = v39;
      v32[9] = v21;
      v32[10] = v23;
      v32[11] = v25;
      v32[12] = v27;
      v32[13] = v29;
    }
    while (v38 != v8);
    v4 = v34;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23349C970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[14] = a1;
  v5[15] = a2;
  v5[16] = a3;
  v5[17] = v3;
  swift_task_dealloc();
  if (!v3)
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
  return swift_task_switch();
}

uint64_t sub_23349C9E8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_23330EB7C(*(void **)(v0 + 128), *(_QWORD **)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);

  sub_23316BEA4(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349CA6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349CAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v5 = sub_23361D634();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23349CBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 72);
  sub_2331686A0(*(_QWORD *)(v0 + 40) + *(int *)(v4 + 20), v3, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 120), (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v7 + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 120), v6);
    sub_23361D5F8();
    v8 = sub_23361D5BC();
    v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    *(_QWORD *)(v0 + 160) = v9;
    v9(v5, v6);
    if ((v8 & 1) != 0)
    {
      *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 144);
      return swift_task_switch();
    }
    v9(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }
  if (qword_256041CA0 != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = sub_23361DB80();
  __swift_project_value_buffer(v13, (uint64_t)qword_2560495B0);
  sub_2331684BC(v12, v11, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  v14 = sub_23361DB68();
  v15 = sub_23361E75C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_2331686A0(v17 + *(int *)(v4 + 20), v16, (uint64_t *)&unk_254247DA0);
    v20 = sub_23361E1C8();
    *(_QWORD *)(v0 + 16) = sub_233164DCC(v20, v21, &v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500(v17, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    _os_log_impl(&dword_233151000, v14, v15, "Response expiration not valid. Expiration: %s.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v19, -1, -1);
    MEMORY[0x234934590](v18, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 96), type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349CEB4()
{
  _QWORD *v0;

  sub_2335D88F0(v0[5], v0[6], v0[7]);
  v0[22] = 0;
  return swift_task_switch();
}

uint64_t sub_23349CF18()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 160))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349CFA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = sub_23361DB80();
  __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
  sub_2331684BC(v1, v3, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  v5 = v2;
  v6 = v2;
  v7 = sub_23361DB68();
  v8 = sub_23361E768();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 152);
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 88);
  if (v9)
  {
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v15 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 152);
    v16 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v16 = 136315394;
    sub_2331684BC(v14, v15, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    v17 = sub_23361E1C8();
    *(_QWORD *)(v0 + 24) = sub_233164DCC(v17, v18, &v27);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500(v14, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    *(_WORD *)(v16 + 12) = 2112;
    v19 = v10;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v20;
    sub_23361EBC4();
    *v22 = v20;

    _os_log_impl(&dword_233151000, v7, v8, "Failed to add response: %s to cache for with error: %@.", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v23, -1, -1);
    MEMORY[0x234934590](v16, -1, -1);

    v26(v24, v25);
  }
  else
  {

    sub_233168500(v14, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    v11(v12, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349D2BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *(_QWORD *)(type metadata accessor for Institution(0) - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v2[8] = swift_task_alloc();
  v3 = type metadata accessor for RawBankConnectData.Institution(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23349D3B0()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_issuerCountryCode);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD **)(v0 + 40);
    v4 = sub_23361E150();
    v6 = v5;

    *(_QWORD *)(v0 + 136) = v4;
    *(_QWORD *)(v0 + 144) = v6;
    v7 = v3 + 7;
    v8 = v3[10];
    v9 = v3[11];
    __swift_project_boxed_opaque_existential_1(v7, v8);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v4, v6, v8, v9) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
    }
    v10 = *(void **)(v0 + 32);
    v11 = objc_msgSend(v10, sel_associatedApplicationIdentifiers);
    v12 = sub_23361E5DC();

    v13 = sub_2334965BC(v12);
    *(_QWORD *)(v0 + 152) = v13;
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v10, sel_associatedStoreIdentifiers);
    sub_233271454();
    v15 = sub_23361E3F0();
    *(_QWORD *)(v0 + 160) = v15;

    if (*(_QWORD *)(v13 + 16))
    {
LABEL_6:
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v16;
      *v16 = v0;
      v16[1] = sub_23349D9E0;
      return sub_23349C058();
    }
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v35)
        goto LABEL_6;
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_256041CA0 != -1)
      swift_once();
    v36 = sub_23361DB80();
    __swift_project_value_buffer(v36, (uint64_t)qword_2560495B0);
    v37 = sub_23361DB68();
    v38 = sub_23361E768();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_233151000, v37, v38, "Failed to fetch the institutions. Payment pass doesn't have any associatedApplicationIdentifiers or associatedStoreIdentifiers.", v39, 2u);
      MEMORY[0x234934590](v39, -1, -1);
    }

    sub_233223B30();
    v23 = (void *)swift_allocError();
    *(_QWORD *)v22 = 0xD000000000000059;
    v24 = "Payment pass doesn't have the associated app identifiers or associated store identifiers.";
  }
  else
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v18 = sub_23361DB80();
    __swift_project_value_buffer(v18, (uint64_t)qword_2560495B0);
    v19 = sub_23361DB68();
    v20 = sub_23361E768();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_233151000, v19, v20, "Pass doesn't have a issuer country code, unable to determine eligibility. Aborting.", v21, 2u);
      MEMORY[0x234934590](v21, -1, -1);
    }

    sub_233223B30();
    v23 = (void *)swift_allocError();
    *(_QWORD *)v22 = 0xD000000000000032;
    v24 = "Payment pass doesn't have the issuer country code.";
  }
  *(_QWORD *)(v22 + 8) = (unint64_t)(v24 - 32) | 0x8000000000000000;
  *(_BYTE *)(v22 + 16) = 0;
  swift_willThrow();
  if (qword_256041CA0 != -1)
    swift_once();
  v25 = sub_23361DB80();
  __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
  v26 = v23;
  v27 = v23;
  v28 = sub_23361DB68();
  v29 = sub_23361E768();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138412290;
    v32 = v23;
    v33 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v33;
    sub_23361EBC4();
    *v31 = v33;

    _os_log_impl(&dword_233151000, v28, v29, "Failed to fetch the institutions: %@.", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v31, -1, -1);
    MEMORY[0x234934590](v30, -1, -1);
  }
  else
  {

  }
  sub_233223B30();
  swift_allocError();
  *(_QWORD *)v34 = v23;
  *(_QWORD *)(v34 + 8) = 0;
  *(_BYTE *)(v34 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349D9E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23349DA34()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_serialNumber);
  v2 = sub_23361E150();
  v4 = v3;

  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v5;
  *v5 = v0;
  v5[1] = sub_23349DAD4;
  v6 = *(_QWORD *)(v0 + 40);
  v5[5] = v4;
  v5[6] = v6;
  v5[3] = v0 + 24;
  v5[4] = v2;
  return swift_task_switch();
}

uint64_t sub_23349DAD4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23349DB28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    v3 = *(void **)(v0 + 32);
    v2 = *(_QWORD **)(v0 + 40);
    v4 = v2[15];
    v5 = v2[16];
    __swift_project_boxed_opaque_existential_1(v2 + 12, v4);
    *(_QWORD *)(v0 + 200) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    v44 = (char *)&dword_2560574E8 + dword_2560574E8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v6 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v7;
    *v7 = v0;
    v7[1] = sub_23349E034;
    __asm { BR              X8; sub_2335B6664 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_25;
  v8 = v1;
  v9 = MEMORY[0x24BEE4AF8];
  v47 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(v8 + 16);
  result = swift_bridgeObjectRetain();
  v43 = v8;
  if (!v10)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 16))
    {
      v23 = v9;
      v24 = *(_QWORD *)(v0 + 104);
      v25 = *(_QWORD *)(v0 + 64);
      v26 = *(_QWORD *)(v0 + 40);
      v27 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80);
      v28 = v23 + ((v27 + 32) & ~v27);
      v29 = sub_23361E534();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v25, 1, 1, v29);
      sub_2331684BC(v28, v24, type metadata accessor for RawBankConnectData.Institution);
      v30 = (v27 + 40) & ~v27;
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = 0;
      v31[3] = 0;
      v31[4] = v26;
      sub_233168580(v24, (uint64_t)v31 + v30, type metadata accessor for RawBankConnectData.Institution);
      swift_retain();
      sub_2333B205C(v25, (uint64_t)&unk_256051EC8, (uint64_t)v31);
      swift_release();
      v32 = *(_QWORD *)(v23 + 16);
      if (v32)
      {
        v33 = *(_QWORD *)(v0 + 80);
        v34 = *(_QWORD *)(v0 + 48);
        v48 = MEMORY[0x24BEE4AF8];
        sub_233274204(0, v32, 0);
        v46 = *(_QWORD *)(v33 + 72);
        v35 = v48;
        do
        {
          v37 = *(uint64_t **)(v0 + 96);
          v36 = *(_QWORD *)(v0 + 104);
          v38 = *(_QWORD *)(v0 + 56);
          sub_2331684BC(v28, v36, type metadata accessor for RawBankConnectData.Institution);
          sub_2331684BC(v36, (uint64_t)v37, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v37, v38);
          sub_233168500(v36, type metadata accessor for RawBankConnectData.Institution);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_233274204(0, *(_QWORD *)(v35 + 16) + 1, 1);
            v35 = v48;
          }
          v40 = *(_QWORD *)(v35 + 16);
          v39 = *(_QWORD *)(v35 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_233274204(v39 > 1, v40 + 1, 1);
            v35 = v48;
          }
          v41 = *(_QWORD *)(v0 + 56);
          *(_QWORD *)(v35 + 16) = v40 + 1;
          sub_233168580(v41, v35+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v40, type metadata accessor for Institution);
          v28 += v46;
          --v32;
        }
        while (v32);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_release();
LABEL_25:
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v35);
  }
  v12 = 0;
  v13 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v42 = v13;
  while (v12 < *(_QWORD *)(v8 + 16))
  {
    v14 = v9;
    v15 = *(_QWORD *)(v0 + 120);
    v16 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v17 = *(_QWORD *)(v45 + 72);
    sub_2331684BC(v8 + v16 + v17 * v12, v15, type metadata accessor for RawBankConnectData.Institution);
    v18 = *(_QWORD *)(v0 + 120);
    if ((*(_BYTE *)(v15 + *(int *)(v13 + 44)) & 1) != 0)
    {
      v19 = v10;
      sub_233168580(v18, *(_QWORD *)(v0 + 112), type metadata accessor for RawBankConnectData.Institution);
      v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233274230(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v9 = v47;
      }
      v21 = *(_QWORD *)(v9 + 16);
      v20 = *(_QWORD *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_233274230(v20 > 1, v21 + 1, 1);
        v9 = v47;
      }
      v22 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v9 + 16) = v21 + 1;
      result = sub_233168580(v22, v9 + v16 + v21 * v17, type metadata accessor for RawBankConnectData.Institution);
      v10 = v19;
      v13 = v42;
      v8 = v43;
    }
    else
    {
      result = sub_233168500(v18, type metadata accessor for RawBankConnectData.Institution);
      v9 = v14;
    }
    if (v10 == ++v12)
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_23349E034()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[27] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)swift_task_alloc();
  v2[28] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_23349E0F4;
  return sub_23349CAB4(v2[16], v2[22], v2[23]);
}

uint64_t sub_23349E0F4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23349E154()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(uint64_t **)(v0 + 128);
  swift_release();
  v2 = *v1;
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v1, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  if (!v2)
    goto LABEL_23;
  v3 = MEMORY[0x24BEE4AF8];
  v40 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v2 + 16);
  result = swift_bridgeObjectRetain();
  v37 = v2;
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 16))
    {
      v17 = v3;
      v18 = *(_QWORD *)(v0 + 104);
      v19 = *(_QWORD *)(v0 + 64);
      v20 = *(_QWORD *)(v0 + 40);
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 80);
      v22 = v17 + ((v21 + 32) & ~v21);
      v23 = sub_23361E534();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
      sub_2331684BC(v22, v18, type metadata accessor for RawBankConnectData.Institution);
      v24 = (v21 + 40) & ~v21;
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = 0;
      v25[3] = 0;
      v25[4] = v20;
      sub_233168580(v18, (uint64_t)v25 + v24, type metadata accessor for RawBankConnectData.Institution);
      swift_retain();
      sub_2333B205C(v19, (uint64_t)&unk_256051EC8, (uint64_t)v25);
      swift_release();
      v26 = *(_QWORD *)(v17 + 16);
      if (v26)
      {
        v27 = *(_QWORD *)(v0 + 80);
        v28 = *(_QWORD *)(v0 + 48);
        v41 = MEMORY[0x24BEE4AF8];
        sub_233274204(0, v26, 0);
        v39 = *(_QWORD *)(v27 + 72);
        v29 = v41;
        do
        {
          v31 = *(uint64_t **)(v0 + 96);
          v30 = *(_QWORD *)(v0 + 104);
          v32 = *(_QWORD *)(v0 + 56);
          sub_2331684BC(v22, v30, type metadata accessor for RawBankConnectData.Institution);
          sub_2331684BC(v30, (uint64_t)v31, type metadata accessor for RawBankConnectData.Institution);
          Institution.init(fromRaw:)(v31, v32);
          sub_233168500(v30, type metadata accessor for RawBankConnectData.Institution);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_233274204(0, *(_QWORD *)(v29 + 16) + 1, 1);
            v29 = v41;
          }
          v34 = *(_QWORD *)(v29 + 16);
          v33 = *(_QWORD *)(v29 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_233274204(v33 > 1, v34 + 1, 1);
            v29 = v41;
          }
          v35 = *(_QWORD *)(v0 + 56);
          *(_QWORD *)(v29 + 16) = v34 + 1;
          sub_233168580(v35, v29+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v34, type metadata accessor for Institution);
          v22 += v39;
          --v26;
        }
        while (v26);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    swift_release();
LABEL_23:
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x24BEE4AF8];
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
  }
  v6 = 0;
  v7 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 80);
  v36 = v7;
  while (v6 < *(_QWORD *)(v2 + 16))
  {
    v8 = v3;
    v9 = *(_QWORD *)(v0 + 120);
    v10 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v11 = *(_QWORD *)(v38 + 72);
    sub_2331684BC(v2 + v10 + v11 * v6, v9, type metadata accessor for RawBankConnectData.Institution);
    v12 = *(_QWORD *)(v0 + 120);
    if ((*(_BYTE *)(v9 + *(int *)(v7 + 44)) & 1) != 0)
    {
      v13 = v4;
      sub_233168580(v12, *(_QWORD *)(v0 + 112), type metadata accessor for RawBankConnectData.Institution);
      v3 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233274230(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v3 = v40;
      }
      v15 = *(_QWORD *)(v3 + 16);
      v14 = *(_QWORD *)(v3 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_233274230(v14 > 1, v15 + 1, 1);
        v3 = v40;
      }
      v16 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v3 + 16) = v15 + 1;
      result = sub_233168580(v16, v3 + v10 + v15 * v11, type metadata accessor for RawBankConnectData.Institution);
      v4 = v13;
      v7 = v36;
      v2 = v37;
    }
    else
    {
      result = sub_233168500(v12, type metadata accessor for RawBankConnectData.Institution);
      v3 = v8;
    }
    if (v4 == ++v6)
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23349E570()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 216);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to fetch the institutions: %@.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {

  }
  sub_233223B30();
  swift_allocError();
  *(_QWORD *)v11 = v1;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349E7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[15] = a8;
  v8[16] = v10;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  v8[9] = a2;
  v8[10] = a3;
  v8[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23349E80C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[15];
  v2 = v0[16];
  v3 = (void *)v0[12];
  v23 = v0[14];
  v24 = v0[13];
  v4 = v0[10];
  v5 = v0[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v6 = swift_allocObject();
  v0[17] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v3, sel_passTypeIdentifier);
  v22 = sub_23361E150();
  v9 = v8;

  v0[18] = v9;
  v10 = sub_23349645C(v2);
  v0[19] = v10;
  v11 = objc_msgSend(v3, sel_primaryPaymentApplicationPaymentType);
  v21 = sub_23361E150();
  v13 = v12;

  v0[20] = v13;
  v14 = objc_msgSend(v3, sel_organizationName);
  v15 = sub_23361E150();
  v17 = v16;

  v0[21] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[5] = &type metadata for BankConnectWebServiceInstitutionsRequest;
  v0[6] = &protocol witness table for BankConnectWebServiceInstitutionsRequest;
  v18 = (_QWORD *)swift_allocObject();
  v0[2] = v18;
  v18[2] = v6;
  v18[3] = v22;
  v18[4] = v9;
  v18[5] = v24;
  v18[6] = v23;
  v18[7] = v1;
  v18[8] = v10;
  v18[9] = v21;
  v18[10] = v13;
  v18[11] = v15;
  v18[12] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)swift_task_alloc();
  v0[22] = v19;
  *v19 = v0;
  v19[1] = sub_23349EA20;
  return sub_2335B8790((uint64_t)(v0 + 2), 1u, 0, 1);
}

uint64_t sub_23349EA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[23] = a1;
  v5[24] = a2;
  v5[25] = a3;
  v5[26] = v3;
  swift_task_dealloc();
  if (!v3)
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
  return swift_task_switch();
}

uint64_t sub_23349EA98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_23330DEE8(*(void **)(v0 + 200), *(_QWORD **)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);

  sub_23316BEA4(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349EB64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23349EBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v5[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23349EC54()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[5] = *(_QWORD *)(v0[2] + 136);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_23349ECB0;
  return BankConnectInstitutionAssetManager.requestInstitutionLogo(for:)(v0[4], v0[3]);
}

uint64_t sub_23349ECB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23349ED04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_23361D340();
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  sub_233168608(v1, &qword_254248700);
  if (v3 == 1)
  {
    v4 = *(uint64_t **)(v0 + 24);
    v6 = *v4;
    v5 = v4[1];
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v7;
    *v7 = v0;
    v7[1] = sub_23349EDC8;
    return BankConnectInstitutionAssetManager.deleteAsset(forInstitutionID:)(v6, v5);
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23349EDC8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23349EE14(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v9 = type metadata accessor for RawBankConnectData.Institution(0);
    sub_2331684BC(v7 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v6, type metadata accessor for RawBankConnectData.Institution);
    swift_bridgeObjectRetain();
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23349EECC(unint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v2 = a1;
  v28 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_24;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
      v27 = v2 & 0xC000000000000001;
      v24 = v3;
      while (v27)
      {
        v5 = (id)MEMORY[0x234933120](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_23;
        v8 = objc_msgSend(v5, sel_issuerCountryCode);
        if (v8)
        {
          v9 = v8;
          v10 = v2;
          v11 = sub_23361E150();
          v13 = v12;

          v15 = a2[10];
          v14 = a2[11];
          __swift_project_boxed_opaque_existential_1(a2 + 7, v15);
          LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v11, v13, v15, v14);
          swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
          {

            v2 = v10;
            v3 = v24;
            goto LABEL_5;
          }
          v16 = objc_msgSend(v6, sel_associatedApplicationIdentifiers);
          v17 = sub_23361E5DC();

          v18 = sub_2334965BC(v17);
          swift_bridgeObjectRelease();
          v19 = objc_msgSend(v6, sel_associatedStoreIdentifiers);
          sub_233271454();
          v20 = sub_23361E3F0();

          v21 = *(_QWORD *)(v18 + 16);
          swift_bridgeObjectRelease();
          if (v21)
          {
            swift_bridgeObjectRelease();
            v2 = v10;
            v3 = v24;
LABEL_18:
            sub_23361EE4C();
            sub_23361EE7C();
            sub_23361EE88();
            sub_23361EE58();
            goto LABEL_5;
          }
          if (v20 >> 62)
          {
            swift_bridgeObjectRetain();
            v22 = sub_23361EF30();
            swift_bridgeObjectRelease();
          }
          else
          {
            v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v2 = v10;
          swift_bridgeObjectRelease();
          v3 = v24;
          if (v22)
            goto LABEL_18;
        }

LABEL_5:
        ++v4;
        if (v7 == v3)
          return v28;
      }
      if (v4 < *(_QWORD *)(v26 + 16))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      v3 = sub_23361EF30();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23349F1A0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x234933120](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v8 = objc_msgSend(v5, sel_serialNumber);
        v9 = sub_23361E150();
        v11 = v10;

        LOBYTE(v8) = sub_233266A38(v9, v11, a2);
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
        {

        }
        else
        {
          sub_23361EE4C();
          sub_23361EE7C();
          sub_23361EE88();
          sub_23361EE58();
        }
        ++v4;
        if (v7 == v3)
          return v14;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v3 = sub_23361EF30();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23349F324()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23349F350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23318C26C;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t dispatch thunk of BankConnectPassMatching.institution(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectPassMatching.institutions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331D7608;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for BankConnectPassMatcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectPassMatcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectPassMatcher.__allocating_init(taskQueueProvider:configurationProvider:webClientProvider:assetManager:institutionMatchingCache:softwareLibrary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

id *sub_23349F4EC(id *a1)
{
  destroy for SoftwareApplication(a1);
  return a1;
}

void sub_23349F520(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  sub_2335D9140(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_23349F53C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23349F54C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(unint64_t, uint64_t, uint64_t);
  unint64_t v8;
  unint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, uint64_t);

  v1 = type metadata accessor for RawBankConnectData.Institution(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 24);
  v4 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    v5 = sub_23361D340();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v3, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v3, v5);
    v8 = v3 + *(int *)(v4 + 20);
    if (!v7(v8, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v0 + v2 + *(int *)(v1 + 52);
  v10 = (int *)type metadata accessor for RawBankConnectData.TermsAndConditions();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    v11 = v9 + v10[5];
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v9 + v10[6];
    v15 = sub_23361D634();
    v16 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v16(v9 + v10[7], v15);
  }
  return swift_deallocObject();
}

uint64_t sub_23349F774(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RawBankConnectData.Institution(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2331676FC;
  return sub_23349EBF8(a1, v5, v6, v7, v8);
}

uint64_t sub_23349F808()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23349F85C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23327399C(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x234932568](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_23327399C(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *CNMutablePostalAddress.init(rawAddress:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *a1;
  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v18 = a1[10];
  v19 = a1[12];
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = v6;
  if (v1)
  {
    v8 = v6;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    sub_23361E0D8();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setStreet_, v9);

    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v16 = v6;
  if (v2)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setCity_, v10);

  }
LABEL_4:
  if (v3)
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubLocality_, v11);

  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setState_, v12);

  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubAdministrativeArea_, v13);

  }
  if (v18)
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setPostalCode_, v14);

  }
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setISOCountryCode_, v15);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t RawAddress.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[5];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];

  v4 = objc_msgSend(a1, sel_street);
  v5 = sub_23361E150();
  v7 = v6;

  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = objc_msgSend(a1, sel_street);
    v10 = sub_23361E150();
    v12 = v11;

    v82[0] = 10;
    v82[1] = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v13);
    v74[2] = v82;
    swift_bridgeObjectRetain();
    v14 = sub_2334A1140(0x7FFFFFFFFFFFFFFFLL, 1, sub_2334A1734, (uint64_t)v74, v10, v12);
    swift_bridgeObjectRelease();
    v15 = sub_23349F85C(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v81 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(a1, sel_city);
  v17 = sub_23361E150();
  v19 = v18;

  swift_bridgeObjectRelease();
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  if (v20)
  {
    v21 = objc_msgSend(a1, sel_city);
    v80 = sub_23361E150();
    v23 = v22;

  }
  else
  {
    v80 = 0;
    v23 = 0;
  }
  v79 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(a1, sel_subLocality);
  v25 = sub_23361E150();
  v27 = v26;

  swift_bridgeObjectRelease();
  v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v28 = v25 & 0xFFFFFFFFFFFFLL;
  if (v28)
  {
    v29 = objc_msgSend(a1, sel_subLocality);
    v78 = sub_23361E150();
    v31 = v30;

  }
  else
  {
    v78 = 0;
    v31 = 0;
  }
  v77 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(a1, sel_state);
  v33 = sub_23361E150();
  v35 = v34;

  swift_bridgeObjectRelease();
  v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v36 = v33 & 0xFFFFFFFFFFFFLL;
  if (v36)
  {
    v37 = objc_msgSend(a1, sel_state);
    v76 = sub_23361E150();
    v39 = v38;

  }
  else
  {
    v76 = 0;
    v39 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(a1, sel_subAdministrativeArea);
  v41 = sub_23361E150();
  v43 = v42;

  swift_bridgeObjectRelease();
  v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0)
    v44 = v41 & 0xFFFFFFFFFFFFLL;
  if (v44)
  {
    v45 = objc_msgSend(a1, sel_subAdministrativeArea);
    v75 = sub_23361E150();
    v47 = v46;

  }
  else
  {
    v75 = 0;
    v47 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(a1, sel_postalCode);
  v49 = sub_23361E150();
  v51 = v50;

  swift_bridgeObjectRelease();
  v52 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0)
    v52 = v49 & 0xFFFFFFFFFFFFLL;
  if (v52)
  {
    v53 = objc_msgSend(a1, sel_postalCode);
    v54 = sub_23361E150();
    v56 = v55;

  }
  else
  {
    v54 = 0;
    v56 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(a1, sel_ISOCountryCode);
  v58 = sub_23361E150();
  v60 = v59;

  swift_bridgeObjectRelease();
  v61 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0)
    v61 = v58 & 0xFFFFFFFFFFFFLL;
  if (v61)
  {
    v62 = objc_msgSend(a1, sel_ISOCountryCode);
    v63 = sub_23361E150();
    v65 = v64;

  }
  else
  {

    v63 = 0;
    v65 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = v77;
  swift_bridgeObjectRelease();
  v67 = v79;
  swift_bridgeObjectRelease();
  v68 = v81;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v70 = v80;
  *a2 = v68;
  a2[1] = v70;
  v71 = v78;
  a2[2] = v67;
  a2[3] = v71;
  v72 = v76;
  a2[4] = v66;
  a2[5] = v72;
  v73 = v75;
  a2[6] = v39;
  a2[7] = v73;
  a2[8] = v47;
  a2[9] = v54;
  a2[10] = v56;
  a2[11] = v63;
  a2[12] = v65;
  return result;
}

uint64_t RawAddress.addressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawAddress.addressLines.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawAddress.addressLines.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.locality.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.locality.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RawAddress.locality.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.subLocality.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.subLocality.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawAddress.subLocality.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.administrativeArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.administrativeArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawAddress.administrativeArea.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.subAdministrativeArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.subAdministrativeArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*RawAddress.subAdministrativeArea.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.postalCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.postalCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*RawAddress.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t RawAddress.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawAddress.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*RawAddress.countryCode.modify())()
{
  return nullsub_1;
}

__n128 RawAddress.init(addressLines:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12)
{
  __n128 result;

  result = a11;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  return result;
}

uint64_t RawAddress.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v2 = v0[2];
  v3 = v0[4];
  v4 = v0[6];
  v5 = v0[8];
  v12 = v0[10];
  v6 = v0[12];
  if (*v0)
  {
    sub_23361F368();
    sub_23361F35C();
    v7 = *(_QWORD *)(v1 + 16);
    if (v7)
    {
      v11 = v6;
      swift_bridgeObjectRetain();
      v8 = v1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
        v8 += 16;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      v6 = v11;
    }
    if (v2)
    {
LABEL_7:
      sub_23361F368();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      v9 = v12;
      if (v3)
        goto LABEL_8;
      goto LABEL_15;
    }
  }
  else
  {
    sub_23361F368();
    if (v2)
      goto LABEL_7;
  }
  sub_23361F368();
  v9 = v12;
  if (v3)
  {
LABEL_8:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_9;
    goto LABEL_16;
  }
LABEL_15:
  sub_23361F368();
  if (v4)
  {
LABEL_9:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_10;
    goto LABEL_17;
  }
LABEL_16:
  sub_23361F368();
  if (v5)
  {
LABEL_10:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_11;
LABEL_18:
    sub_23361F368();
    if (v6)
      goto LABEL_12;
    return sub_23361F368();
  }
LABEL_17:
  sub_23361F368();
  if (!v9)
    goto LABEL_18;
LABEL_11:
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_12:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    return swift_bridgeObjectRelease();
  }
  return sub_23361F368();
}

uint64_t sub_2334A06F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334A072C + 4 * byte_233650EC8[a1]))(0x4C73736572646461, 0xEC00000073656E69);
}

uint64_t sub_2334A072C()
{
  return 0x7974696C61636F6CLL;
}

uint64_t sub_2334A0744()
{
  return 0x6C61636F4C627573;
}

unint64_t sub_2334A0764()
{
  return 0xD000000000000012;
}

unint64_t sub_2334A0780()
{
  return 0xD000000000000015;
}

uint64_t sub_2334A07A0()
{
  return 0x6F436C6174736F70;
}

uint64_t sub_2334A07BC()
{
  return 0x437972746E756F63;
}

uint64_t sub_2334A07DC()
{
  unsigned __int8 *v0;

  return sub_2334A06F0(*v0);
}

uint64_t sub_2334A07E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334A1D78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334A0808()
{
  sub_2334A1A70();
  return sub_23361F428();
}

uint64_t sub_2334A0830()
{
  sub_2334A1A70();
  return sub_23361F434();
}

uint64_t RawAddress.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[13];
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051ED8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v16[11] = v1[2];
  v16[12] = v8;
  v10 = v1[3];
  v16[9] = v1[4];
  v16[10] = v10;
  v11 = v1[5];
  v16[7] = v1[6];
  v16[8] = v11;
  v12 = v1[7];
  v16[5] = v1[8];
  v16[6] = v12;
  v13 = v1[10];
  v16[3] = v1[9];
  v16[4] = v13;
  v14 = v1[11];
  v16[1] = v1[12];
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334A1A70();
  sub_23361F410();
  v24 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23361F110();
  if (!v2)
  {
    v22 = 1;
    sub_23361F0E0();
    v21 = 2;
    sub_23361F0E0();
    v20 = 3;
    sub_23361F0E0();
    v19 = 4;
    sub_23361F0E0();
    v18 = 5;
    sub_23361F0E0();
    v17 = 6;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawAddress.hashValue.getter()
{
  sub_23361F350();
  RawAddress.hash(into:)();
  return sub_23361F3A4();
}

uint64_t RawAddress.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051EE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334A1A70();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v53 = 0;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v10 = v54;
    v52 = 1;
    swift_bridgeObjectRetain();
    v11 = sub_23361EFCC();
    v46 = v10;
    v51 = 2;
    v13 = v12;
    swift_bridgeObjectRetain();
    v44 = sub_23361EFCC();
    v45 = v13;
    v50 = 3;
    v15 = v14;
    swift_bridgeObjectRetain();
    v41 = sub_23361EFCC();
    v42 = a2;
    v43 = v15;
    v49 = 4;
    v17 = v16;
    swift_bridgeObjectRetain();
    v18 = sub_23361EFCC();
    v20 = v19;
    v38 = v18;
    v39 = v11;
    v40 = v17;
    v48 = 5;
    swift_bridgeObjectRetain();
    v21 = sub_23361EFCC();
    v23 = v22;
    v47 = 6;
    swift_bridgeObjectRetain();
    v24 = sub_23361EFCC();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v37 = v24;
    v27(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = v45;
    v29 = v42;
    v30 = v43;
    v31 = v39;
    *v42 = v46;
    v29[1] = v31;
    v32 = v44;
    v29[2] = v28;
    v29[3] = v32;
    v33 = v41;
    v29[4] = v30;
    v29[5] = v33;
    v34 = v38;
    v29[6] = v40;
    v29[7] = v34;
    v29[8] = v20;
    v29[9] = v21;
    v35 = v37;
    v29[10] = v23;
    v29[11] = v35;
    v29[12] = v26;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334A104C()
{
  sub_23361F350();
  RawAddress.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_2334A10B4()
{
  sub_23361F350();
  RawAddress.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_2334A1118@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawAddress.init(from:)(a1, a2);
}

uint64_t sub_2334A112C(_QWORD *a1)
{
  return RawAddress.encode(to:)(a1);
}

uint64_t sub_2334A1140(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2334A15DC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_23361E2F4();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_23361E240();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_23361E240();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_23361E30C();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_2334A5218(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_2334A5218((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_23361E240();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_23361E30C();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2334A5218(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_2334A5218((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_23361EF18();
  __break(1u);
LABEL_42:
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t sub_2334A15DC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_23361E30C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_2334A5218(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_2334A5218((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t sub_2334A1734(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_23361F224() & 1;
}

BOOL _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  _BOOL8 result;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v71 = *(_QWORD *)(a1 + 88);
  v72 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD **)a2;
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v20 = *(_QWORD *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v70 = v27;
  if (v4)
  {
    if (!v15)
      return 0;
    v51 = v26;
    v52 = v16;
    v62 = v22;
    v64 = v10;
    v58 = v11;
    v60 = v23;
    v55 = v25;
    v56 = v12;
    v53 = v14;
    v54 = v24;
    v28 = v13;
    v67 = v21;
    v29 = v20;
    v30 = v7;
    v31 = v8;
    v32 = v18;
    v33 = v19;
    v34 = v5;
    v35 = v6;
    v36 = v17;
    v37 = sub_23322B8BC(v4, v15);
    v17 = v36;
    v6 = v35;
    v5 = v34;
    v19 = v33;
    v18 = v32;
    v8 = v31;
    v7 = v30;
    v20 = v29;
    v10 = v64;
    v21 = v67;
    v13 = v28;
    v16 = v52;
    v14 = v53;
    v24 = v54;
    v25 = v55;
    v12 = v56;
    v11 = v58;
    v23 = v60;
    v22 = v62;
    if ((v37 & 1) == 0)
      return 0;
  }
  else
  {
    v51 = v26;
    if (v15)
      return 0;
  }
  if (!v5)
  {
    if (v16)
      return 0;
LABEL_13:
    if (v7)
    {
      if (!v18)
        return 0;
      if (v8 != v19 || v7 != v18)
      {
        v66 = v20;
        v69 = v21;
        v41 = v13;
        v42 = sub_23361F224();
        v20 = v66;
        v21 = v69;
        v13 = v41;
        v43 = v42;
        result = 0;
        if ((v43 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v9)
    {
      if (!v21)
        return 0;
      if (v10 != v20 || v9 != v21)
      {
        v44 = v13;
        v45 = sub_23361F224();
        v13 = v44;
        v46 = v45;
        result = 0;
        if ((v46 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v11)
    {
      if (!v23)
        return 0;
      if (v12 != v22 || v11 != v23)
      {
        v47 = v13;
        v48 = sub_23361F224();
        v13 = v47;
        v49 = v48;
        result = 0;
        if ((v49 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v14)
    {
      if (!v24)
        return 0;
      if (v13 != v25 || v14 != v24)
      {
        v50 = sub_23361F224();
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v72)
      return v51 && (v71 == v70 && v72 == v51 || (sub_23361F224() & 1) != 0);
    return !v51;
  }
  if (!v16)
    return 0;
  if (v6 == v17 && v5 == v16)
    goto LABEL_13;
  v65 = v20;
  v68 = v21;
  v61 = v13;
  v63 = v7;
  v57 = v19;
  v59 = v18;
  v38 = sub_23361F224();
  v19 = v57;
  v18 = v59;
  v7 = v63;
  v20 = v65;
  v21 = v68;
  v13 = v61;
  v39 = v38;
  result = 0;
  if ((v39 & 1) != 0)
    goto LABEL_13;
  return result;
}

unint64_t sub_2334A1A70()
{
  unint64_t result;

  result = qword_256051EE0;
  if (!qword_256051EE0)
  {
    result = MEMORY[0x234934494](&unk_233651088, &type metadata for RawAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051EE0);
  }
  return result;
}

unint64_t sub_2334A1AB8()
{
  unint64_t result;

  result = qword_256051EF0;
  if (!qword_256051EF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawAddress, &type metadata for RawAddress);
    atomic_store(result, (unint64_t *)&qword_256051EF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RawAddress(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 104))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RawAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAddress()
{
  return &type metadata for RawAddress;
}

uint64_t storeEnumTagSinglePayload for RawAddress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2334A1C20 + 4 * byte_233650ED4[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2334A1C54 + 4 * byte_233650ECF[v4]))();
}

uint64_t sub_2334A1C54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334A1C5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334A1C64);
  return result;
}

uint64_t sub_2334A1C70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334A1C78);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2334A1C7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334A1C84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawAddress.CodingKeys()
{
  return &type metadata for RawAddress.CodingKeys;
}

unint64_t sub_2334A1CA4()
{
  unint64_t result;

  result = qword_256051EF8;
  if (!qword_256051EF8)
  {
    result = MEMORY[0x234934494](&unk_233651060, &type metadata for RawAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051EF8);
  }
  return result;
}

unint64_t sub_2334A1CEC()
{
  unint64_t result;

  result = qword_256051F00;
  if (!qword_256051F00)
  {
    result = MEMORY[0x234934494](&unk_233650FD0, &type metadata for RawAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051F00);
  }
  return result;
}

unint64_t sub_2334A1D34()
{
  unint64_t result;

  result = qword_256051F08;
  if (!qword_256051F08)
  {
    result = MEMORY[0x234934494](&unk_233650FF8, &type metadata for RawAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051F08);
  }
  return result;
}

uint64_t sub_2334A1D78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C73736572646461 && a2 == 0xEC00000073656E69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696C61636F6CLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61636F4C627573 && a2 == 0xEB00000000797469 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233678300 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233678320 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2334A20A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2334A20C8()
{
  return swift_deallocObject();
}

uint64_t sub_2334A20D8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for BankConnectTransactionsDataLoader.DateQuery();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273944(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(sub_23361CB84() - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_233273944(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_233168580((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_2334A224C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047710);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273C68(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for Order.ContentItem(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_233273C68(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_233168478((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, &qword_256047710);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_2334A23C4(void (*a1)(__int128 *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15[2];
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_233273EC0(0, v5, 0);
    v6 = v16;
    v9 = *(_QWORD *)(type metadata accessor for RawOrderFulfillment() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(v15, v10);
      if (v4)
        break;
      v4 = 0;
      v16 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_233273EC0(v12 > 1, v13 + 1, 1);
        v6 = v16;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      sub_23318B020(v15, v6 + 40 * v13 + 32);
      v10 += v11;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_2334A24EC(void (*a1)(_OWORD *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  id v18;
  _OWORD v19[3];
  uint64_t v20;

  v4 = v3;
  if (a3 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x24BEE4AF8];
    if (!v6)
      return v7;
    v20 = MEMORY[0x24BEE4AF8];
    result = sub_233274380(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v20;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x234933120](v9, a3);
      else
        v10 = *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v18 = v10;
      a1(v19, &v18);
      if (v4)
      {
        swift_release();

        return v7;
      }
      v4 = 0;

      v20 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_233274380(v12 > 1, v13 + 1, 1);
        v7 = v20;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = (_OWORD *)(v7 + 48 * v13);
      v15 = v19[0];
      v16 = v19[2];
      v14[3] = v19[1];
      v14[4] = v16;
      v14[2] = v15;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t BankConnectLinkingDateQueryCalculator.init(dataSource:calendar:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  sub_23318B020(a1, a3);
  v5 = a3 + *(int *)(type metadata accessor for BankConnectLinkingDateQueryCalculator() + 20);
  v6 = sub_23361D868();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
}

uint64_t type metadata accessor for BankConnectLinkingDateQueryCalculator()
{
  uint64_t result;

  result = qword_256051F80;
  if (!qword_256051F80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t BankConnectLinkingDateQueryCalculator.linkingDateQueries(forTransactionsFrom:now:calculation:)(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  v6 = sub_23361D634();
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_QWORD *)(v4 + 72) = swift_task_alloc();
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  *(_BYTE *)(v4 + 160) = *a3;
  return swift_task_switch();
}

uint64_t sub_2334A27D4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(id, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23361EF30();
    *(_QWORD *)(v0 + 112) = result;
    if (result)
      goto LABEL_3;
LABEL_9:
    v11 = *(_BYTE *)(v0 + 160);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v11 & 1) != 0)
      v12 = sub_2334A3530();
    else
      v12 = sub_2334A31B8();
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v0 + 32);
    v15 = swift_task_alloc();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = sub_2334A20D8((void (*)(uint64_t))sub_2334A4440, v15, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 112) = v2;
  if (!v2)
    goto LABEL_9;
LABEL_3:
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4B08];
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x234933120](0);
LABEL_7:
    v6 = v5;
    *(_QWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 136) = 1;
    v7 = *(_QWORD **)(v0 + 40);
    v8 = v7[3];
    v9 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v17 = (uint64_t (*)(id, uint64_t, uint64_t))(**(int **)(v9 + 8) + *(_QWORD *)(v9 + 8));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v10;
    *v10 = v0;
    v10[1] = sub_2334A2A84;
    return v17(v6, v8, v9);
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A2A84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2334A2AE0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(id, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  if (v1 >> 62)
    goto LABEL_21;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = swift_bridgeObjectRetain(); v2; i = *(_QWORD *)(v0 + 152))
  {
    v4 = 0;
    v1 &= 0xC000000000000001;
    v67 = i + 32;
    v5 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v6 = v1 ? (id)MEMORY[0x234933120](v4, *(_QWORD *)(v0 + 152)) : *(id *)(v67 + 8 * v4);
      v7 = v6;
      v8 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      v9 = objc_msgSend(v6, sel_transactionDate);
      if (v9)
      {
        v10 = v9;
        sub_23361D5EC();

        v11 = 0;
      }
      else
      {
        v11 = 1;
      }
      v12 = *(_QWORD *)(v0 + 96);
      v14 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 56);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v11, 1, v14);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v14) == 1)
      {
        sub_233168608(*(_QWORD *)(v0 + 96), (uint64_t *)&unk_254247DA0);
      }
      else
      {
        v16 = *(_QWORD *)(v0 + 80);
        v15 = *(_QWORD *)(v0 + 88);
        v17 = *(_QWORD *)(v0 + 48);
        v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 32);
        v18(v15, *(_QWORD *)(v0 + 96), v17);
        v18(v16, v15, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_2334A4758(0, *(_QWORD *)(v5 + 16) + 1, 1, v5, &qword_256047530, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
        v20 = *(_QWORD *)(v5 + 16);
        v19 = *(_QWORD *)(v5 + 24);
        if (v20 >= v19 >> 1)
          v5 = sub_2334A4758(v19 > 1, v20 + 1, 1, v5, &qword_256047530, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
        v21 = *(_QWORD *)(v0 + 80);
        v22 = *(_QWORD *)(v0 + 48);
        v23 = *(_QWORD *)(v0 + 56);
        *(_QWORD *)(v5 + 16) = v20 + 1;
        v18(v5+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v20, v21, v22);
      }
      ++v4;
      if (v8 == v2)
        goto LABEL_23;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
  }
  v5 = MEMORY[0x24BEE4AF8];
LABEL_23:
  swift_bridgeObjectRelease_n();
  v24 = *(_QWORD *)(v0 + 56);
  v65 = *(_QWORD *)(v5 + 16);
  if (v65)
  {
    v25 = 0;
    v64 = v5 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v68 = *(_QWORD *)(v24 + 72);
    v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16);
    v27 = *(_QWORD *)(v0 + 120);
    while (1)
    {
      v34 = *(_QWORD *)(v0 + 104);
      v36 = *(_QWORD *)(v0 + 48);
      v35 = *(_QWORD *)(v0 + 56);
      v26(v34, v64 + v25 * v68, v36);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v37(v34, 0, 1, v36);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v34, 1, v36) == 1)
        break;
      v63 = v37;
      v66 = v25;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 48));
      sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      swift_bridgeObjectRetain();
      v38 = sub_23361E084();
      v39 = -1 << *(_BYTE *)(v27 + 32);
      v40 = v38 & ~v39;
      if (((*(_QWORD *)(v27 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) != 0)
      {
        v41 = ~v39;
        while (1)
        {
          v42 = *(_QWORD *)(v0 + 64);
          v43 = *(_QWORD *)(v0 + 48);
          v44 = *(_QWORD *)(v0 + 56);
          v26(v42, *(_QWORD *)(v27 + 48) + v40 * v68, v43);
          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          v45 = sub_23361E108();
          v33 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
          v33(v42, v43);
          if ((v45 & 1) != 0)
            break;
          v40 = (v40 + 1) & v41;
          if (((*(_QWORD *)(v27 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
            goto LABEL_25;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_25:
        v29 = *(_QWORD *)(v0 + 64);
        v28 = *(_QWORD *)(v0 + 72);
        v30 = *(_QWORD *)(v0 + 48);
        v31 = *(_QWORD *)(v0 + 56);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26(v29, v28, v30);
        sub_2334A9A20(v29, v40, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      }
      v25 = v66 + 1;
      v33(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
      if (v66 + 1 == v65)
      {
        v63(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 48));
        break;
      }
    }
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v24 + 56))(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 48));
  }
  v46 = *(void **)(v0 + 128);
  v47 = *(_QWORD *)(v0 + 136);
  v48 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();

  if (v47 != v48)
  {
    v51 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 120) = v27;
    v52 = *(_QWORD *)(v0 + 24);
    if ((v52 & 0xC000000000000001) != 0)
    {
      v53 = (id)MEMORY[0x234933120](v51);
    }
    else
    {
      if (v51 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_49:
        __break(1u);
        return;
      }
      v53 = *(id *)(v52 + 8 * v51 + 32);
    }
    v55 = v53;
    *(_QWORD *)(v0 + 128) = v53;
    *(_QWORD *)(v0 + 136) = v51 + 1;
    if (!__OFADD__(v51, 1))
    {
      v56 = *(_QWORD **)(v0 + 40);
      v57 = v56[3];
      v58 = v56[4];
      __swift_project_boxed_opaque_existential_1(v56, v57);
      v69 = (void (*)(id, uint64_t, uint64_t))(**(int **)(v58 + 8) + *(_QWORD *)(v58 + 8));
      v59 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v59;
      *v59 = v0;
      v59[1] = sub_2334A2A84;
      v69(v55, v57, v58);
      return;
    }
    __break(1u);
    goto LABEL_49;
  }
  v49 = *(_BYTE *)(v0 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v49 & 1) != 0)
    v50 = sub_2334A3530();
  else
    v50 = sub_2334A31B8();
  v54 = v50;
  swift_bridgeObjectRelease();
  v60 = *(_QWORD *)(v0 + 32);
  v61 = swift_task_alloc();
  *(_QWORD *)(v61 + 16) = v60;
  v62 = sub_2334A20D8((void (*)(uint64_t))sub_2334A4440, v61, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t))(v0 + 8))(v62);
}

uint64_t sub_2334A31B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - v4;
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v34 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v34 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - v15;
  v17 = swift_bridgeObjectRetain();
  v18 = (_QWORD *)sub_2333AFA6C(v17);
  swift_bridgeObjectRelease();
  v40 = v18;
  sub_2334A46B8(&v40);
  if (v0)
    goto LABEL_13;
  v39 = 0;
  v19 = v40;
  v20 = v40[2];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  v37 = v16;
  v34 = v10;
  v21 = (char *)v40 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v5, v21, v6);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v23(v5, 0, 1, v6);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v24(v5, 1, v6) == 1)
  {
LABEL_8:
    swift_release();
    sub_233168608((uint64_t)v5, (uint64_t *)&unk_254247DA0);
    return MEMORY[0x24BEE4AF8];
  }
  v25 = v5;
  v26 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v26(v37, v25, v6);
  if (v20 <= v19[2])
  {
    v27 = &v21[*(_QWORD *)(v7 + 72) * (v20 - 1)];
    v28 = (uint64_t)v38;
    v22(v38, v27, v6);
    v23((char *)v28, 0, 1, v6);
    swift_release();
    if (v24((char *)v28, 1, v6) != 1)
    {
      v31 = v35;
      v26(v35, (char *)v28, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560520C0);
      sub_23361CB84();
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_233623D60;
      Date.advancedByDays(_:)(-2, v36);
      v32 = v37;
      Date.advancedByDays(_:)(3, (uint64_t)v34);
      sub_23361CB54();
      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33(v31, v6);
      v33(v32, v6);
      return v29;
    }
    sub_233168608(v28, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    return MEMORY[0x24BEE4AF8];
  }
  __break(1u);
LABEL_13:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2334A3530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  unint64_t v103;
  char *v104;
  char *v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t result;
  _QWORD v113[2];
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t, uint64_t);
  void (*v128)(char *);
  void (*v129)(void);
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  void (*v147)(char *, uint64_t);
  void (*v148)(char *, _QWORD, uint64_t);
  void (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  char *v152;
  char *v153;
  unsigned int v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, char *, uint64_t);
  unsigned int (*v159)(char *, uint64_t, uint64_t);
  char *v160;
  _QWORD *v161;

  v135 = sub_23361D748();
  v139 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v155 = (char *)v113 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_23361D868();
  v156 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v137 = (char *)v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F10);
  MEMORY[0x24BDAC7A8](v3);
  v134 = (char *)v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F08);
  MEMORY[0x24BDAC7A8](v5);
  v140 = (char *)v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Duration();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v133 = (char *)v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v138 = (char *)v113 - v10;
  v11 = sub_23361CB84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v115 = (char *)v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (char *)v113 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v121 = (char *)v113 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v122 = (char *)v113 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v113 - v21;
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v119 = (char *)v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v118 = (char *)v113 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v131 = (char *)v113 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v113 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v160 = (char *)v113 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v132 = (char *)v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v136 = (char *)v113 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v141 = (char *)v113 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v116 = (char *)v113 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v117 = (char *)v113 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v130 = (uint64_t)v113 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v48 = *(void (**)(void))(v12 + 56);
  v143 = v11;
  v144 = (uint64_t)v113 - v49;
  v129 = v48;
  v48();
  v50 = swift_bridgeObjectRetain();
  v51 = (_QWORD *)sub_2333AFA6C(v50);
  swift_bridgeObjectRelease();
  v161 = v51;
  sub_2334A46B8(&v161);
  if (v0)
    goto LABEL_32;
  v113[1] = 0;
  v52 = v161[2];
  v113[0] = v161;
  if (!v52)
  {
    v96 = v12;
    v97 = MEMORY[0x24BEE4AF8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v141, 1, 1, v23);
LABEL_21:
    v98 = v144;
    v99 = (uint64_t)v116;
LABEL_22:
    swift_release();
    sub_23334E468(v98, v99);
    v100 = v143;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v99, 1, v143) == 1)
    {
      sub_233168608(v98, &qword_256047470);
      v101 = v99;
    }
    else
    {
      v102 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
      v103 = v97;
      v104 = v114;
      v102(v114, v99, v100);
      v105 = v104;
      v106 = v103;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v115, v105, v100);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v106 = sub_2334A4758(0, *(_QWORD *)(v103 + 16) + 1, 1, v103, &qword_2560520C0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
      v108 = *(_QWORD *)(v106 + 16);
      v107 = *(_QWORD *)(v106 + 24);
      v109 = v106;
      if (v108 >= v107 >> 1)
        v109 = sub_2334A4758(v107 > 1, v108 + 1, 1, v106, &qword_2560520C0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
      *(_QWORD *)(v109 + 16) = v108 + 1;
      v97 = v109;
      v110 = v109
           + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))
           + *(_QWORD *)(v96 + 72) * v108;
      v111 = v143;
      v102((char *)v110, (uint64_t)v115, v143);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v114, v111);
      v101 = v144;
    }
    sub_233168608(v101, &qword_256047470);
    return v97;
  }
  v53 = (char *)v161 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  v124 = *(_QWORD *)(v24 + 72);
  v128 = *(void (**)(char *))(v24 + 16);
  v123 = MEMORY[0x24BEE4AF8];
  v154 = *MEMORY[0x24BDCEF50];
  v54 = v120;
  v55 = v140;
  v56 = v141;
  v157 = v23;
  v126 = v12;
  v142 = v22;
  v125 = v24;
  v153 = v33;
  while (1)
  {
    v152 = v53;
    v128(v56);
    v127 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v127(v56, 0, 1, v23);
    v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v159(v56, 1, v23) == 1)
    {
      v96 = v12;
      v98 = v144;
      v99 = (uint64_t)v116;
      v97 = v123;
      goto LABEL_22;
    }
    v145 = v52;
    v158 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v158(v160, v56, v23);
    v58 = v155;
    v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v156 + 56);
    v151(v55, 1, 1, v54);
    v59 = sub_23361D8A4();
    v60 = v134;
    v149 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
    v150 = v59;
    v149(v134, 1, 1);
    v61 = (uint64_t)v138;
    sub_23361CD34();
    v62 = v55;
    v63 = v139;
    v64 = v135;
    v148 = *(void (**)(char *, _QWORD, uint64_t))(v139 + 104);
    v148(v58, v154, v135);
    v65 = v137;
    sub_23361D754();
    v147 = *(void (**)(char *, uint64_t))(v63 + 8);
    v147(v58, v64);
    v66 = v136;
    sub_23361D808();
    v67 = v64;
    v146 = *(void (**)(char *, uint64_t))(v156 + 8);
    v146(v65, v54);
    v68 = v157;
    if (((unsigned int (*)(char *, uint64_t))v159)(v66, 1) == 1)
      break;
    v69 = v66;
    v70 = v68;
    v158(v153, v69, v68);
    sub_233168500(v61, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    v151(v62, 1, 1, v54);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v149)(v60, 1, 1, v150);
    v71 = (uint64_t)v133;
    sub_23361CD34();
    v72 = v155;
    v148(v155, v154, v67);
    sub_23361D754();
    v147(v72, v67);
    v73 = v132;
    sub_23361D808();
    v146(v65, v54);
    if (v159(v73, 1, v70) == 1)
      goto LABEL_31;
    v158(v131, v73, v70);
    sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    v74 = v142;
    sub_23361CB54();
    v75 = v70;
    v76 = v144;
    v77 = v130;
    sub_23334E468(v144, v130);
    v78 = v126;
    v79 = v143;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v77, 1, v143) == 1)
    {
      v24 = v125;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v160, v75);
      sub_233168608(v76, &qword_256047470);
      sub_233168608(v77, &qword_256047470);
      (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v76, v74, v79);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v129)(v76, 0, 1, v79);
      v55 = v140;
    }
    else
    {
      v80 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
      v81 = v74;
      v82 = v122;
      v80(v122, v77, v79);
      if ((sub_23361CB3C() & 1) == 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v121, v82, v79);
        v87 = v123;
        v88 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v87 = sub_2334A4758(0, *(_QWORD *)(v87 + 16) + 1, 1, v87, &qword_2560520C0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
        v89 = v142;
        v24 = v125;
        v57 = v145;
        v123 = v87;
        v91 = *(_QWORD *)(v87 + 16);
        v90 = *(_QWORD *)(v87 + 24);
        if (v91 >= v90 >> 1)
          v123 = sub_2334A4758(v90 > 1, v91 + 1, 1, v123, &qword_2560520C0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
        v92 = v123;
        *(_QWORD *)(v123 + 16) = v91 + 1;
        v93 = v92
            + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))
            + *(_QWORD *)(v88 + 72) * v91;
        v94 = v143;
        v80((char *)v93, (uint64_t)v121, v143);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v122, v94);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v160, v157);
        v95 = v144;
        sub_233168608(v144, &qword_256047470);
        v80((char *)v95, (uint64_t)v89, v94);
        v12 = v88;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v129)(v95, 0, 1, v94);
        v54 = v120;
        v55 = v140;
        goto LABEL_6;
      }
      sub_23361CB60();
      sub_23361CB48();
      v83 = (uint64_t)v117;
      sub_23361CB54();
      v84 = *(void (**)(char *, uint64_t))(v78 + 8);
      v84(v82, v79);
      v84(v81, v79);
      v85 = v125;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v160, v157);
      v86 = v144;
      sub_233168608(v144, &qword_256047470);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v129)(v83, 0, 1, v79);
      sub_233168478(v83, v86, &qword_256047470);
      v55 = v140;
      v24 = v85;
    }
    v12 = v78;
    v57 = v145;
LABEL_6:
    v53 = &v152[v124];
    v52 = v57 - 1;
    v23 = v157;
    v56 = v141;
    if (!v52)
    {
      v96 = v12;
      v97 = v123;
      v127(v141, 1, 1, v157);
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2334A4354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361CB84();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_2334A445C((uint64_t)v12, v9, a3);
}

uint64_t sub_2334A4440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2334A4354(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2334A445C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3 + *(int *)(type metadata accessor for BankConnectTransactionsDataLoader.DateQuery() + 20);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v15 = 1;
  v14(v13, 1, 1, v6);
  sub_23361CB60();
  sub_23361CB48();
  LOBYTE(a3) = sub_23361D5C8();
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v6);
  if ((a3 & 1) != 0)
  {
    sub_23361CB48();
    v15 = 0;
  }
  v16(a2, v6);
  v17 = sub_23361CB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  v14((uint64_t)v12, v15, 1, v6);
  return sub_23318C8A8((uint64_t)v12, v13);
}

uint64_t static BankConnectLinkingDateQueryCalculator.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectLinkingDateQueryCalculator.Error.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t BankConnectLinkingDateQueryCalculator.Error.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

BOOL static BankConnectLinkingDateQueryCalculator.Calculation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BankConnectLinkingDateQueryCalculator.Calculation.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t BankConnectLinkingDateQueryCalculator.Calculation.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2334A46B8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_23361D634() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_233605C2C(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2334A6014(v6);
  *a1 = v3;
  return result;
}

char *sub_2334A4738(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2334A591C(a1, a2, a3, a4, (uint64_t *)&unk_254246960);
}

uint64_t sub_2334A4744(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256042208, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
}

uint64_t sub_2334A4758(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23361EF18();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2334AC39C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2334A4964(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047530, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

_QWORD *sub_2334A4978(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256051FF8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB464(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A4A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_2560476B8, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
}

char *sub_2334A4A98(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2334A591C(a1, a2, a3, a4, &qword_256047788);
}

_QWORD *sub_2334A4AA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB284(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A4BB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB56C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A4CBC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A50EC(a1, a2, a3, a4, &qword_256042CC8);
}

uint64_t sub_2334A4CD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256052050, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

_QWORD *sub_2334A4CE4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A5DBC(a1, a2, a3, a4, &qword_2560476A0);
}

char *sub_2334A4CF8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052048);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 31;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32])
          memmove(v13, a4 + 32, 2 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB65C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A4E00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047550, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_2334A4E14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560520A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334AB950(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A4F34(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A4F70(a1, a2, a3, a4, &qword_256051FD0, &qword_256048678);
}

uint64_t sub_2334A4F48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_2560475F0, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
}

_QWORD *sub_2334A4F5C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A4F70(a1, a2, a3, a4, &qword_256052000, &qword_2560486F0);
}

_QWORD *sub_2334A4F70(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 1;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 5);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[4 * v11 + 4])
          memmove(v16, a4 + 4, 32 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABA3C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A5088(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047540, type metadata accessor for InternalTransaction);
}

_QWORD *sub_2334A509C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A4F70(a1, a2, a3, a4, &qword_256052040, &qword_256048710);
}

uint64_t sub_2334A50B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047740, type metadata accessor for InternalAccountBalance);
}

_QWORD *sub_2334A50C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A4F70(a1, a2, a3, a4, &qword_256051FE8, &qword_2560486C8);
}

_QWORD *sub_2334A50D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A50EC(a1, a2, a3, a4, &qword_256052090);
}

_QWORD *sub_2334A50EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334ABFE0(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A5218(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560520A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB374(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A5324(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256047750);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334ABEEC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A5448(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256052098, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsentDeleter.Metadata);
}

uint64_t sub_2334A545C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047A28, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAccountChange);
}

_QWORD *sub_2334A5470(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052080);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB744(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A557C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560463E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABB40(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A5688(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A56B0(a1, a2, a3, a4, &qword_256052058, &qword_256052060);
}

_QWORD *sub_2334A569C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A56B0(a1, a2, a3, a4, &qword_256052068, &qword_256052070);
}

_QWORD *sub_2334A56B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334AB84C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A57C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A50EC(a1, a2, a3, a4, &qword_256051FF0);
}

uint64_t sub_2334A57DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047718, type metadata accessor for Order.ContentItem);
}

_QWORD *sub_2334A57F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254247DC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABC28(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A58FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256051FE0, type metadata accessor for Transaction.Insight);
}

char *sub_2334A5910(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2334A591C(a1, a2, a3, a4, &qword_256051FC0);
}

char *sub_2334A591C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334AC0D0(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A5A10(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052038);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334AC1B4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2334A5B2C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052030);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2334AC2A8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A5C54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256052010, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
}

uint64_t sub_2334A5C68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256052008, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
}

_QWORD *sub_2334A5C7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256047650);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 95;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABD10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2334A5D88(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2334A591C(a1, a2, a3, a4, &qword_256047580);
}

uint64_t sub_2334A5D94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256052020, type metadata accessor for MapsSuggestionsOrderPickup);
}

_QWORD *sub_2334A5DA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2334A5DBC(a1, a2, a3, a4, &qword_256047608);
}

_QWORD *sub_2334A5DBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABE00(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A5ED4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_2560475B8, (uint64_t (*)(_QWORD))type metadata accessor for InstitutionWithPass);
}

_QWORD *sub_2334A5EE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560475A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2334ABC28(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334A5FF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2334A4758(a1, a2, a3, a4, &qword_256047748, (uint64_t (*)(_QWORD))type metadata accessor for PIIRedactionRegex);
}

char *sub_2334A6008(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2334A591C(a1, a2, a3, a4, &qword_256051FD8);
}

uint64_t sub_2334A6014(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  _QWORD *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  _QWORD *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v3 = sub_23361D634();
  v150 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v135 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v130 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v143 = (char *)&v130 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v142 = (char *)&v130 - v10;
  v11 = a1[1];
  result = sub_23361F1C4();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_140;
    if (v11)
      return sub_2334A6A60(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_148;
  v14 = result;
  v146 = v3;
  v138 = v1;
  if (v11 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v137 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    v131 = MEMORY[0x24BEE4AF8];
    if (v11 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      if (v20 >= 2)
      {
        v122 = *a1;
        do
        {
          v123 = v20 - 2;
          if (v20 < 2)
            goto LABEL_135;
          v124 = v138;
          if (!v122)
            goto LABEL_147;
          v125 = v18;
          v126 = *(_QWORD *)&v18[16 * v123 + 32];
          v127 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_2334A6CB4(v122 + *(_QWORD *)(v150 + 72) * v126, v122 + *(_QWORD *)(v150 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v122 + *(_QWORD *)(v150 + 72) * v127, v137);
          if (v124)
            goto LABEL_103;
          if (v127 < v126)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v125 = sub_233605C04((uint64_t)v18);
          if (v123 >= *((_QWORD *)v125 + 2))
            goto LABEL_137;
          v128 = &v125[16 * v123 + 32];
          *(_QWORD *)v128 = v126;
          *((_QWORD *)v128 + 1) = v127;
          v129 = *((_QWORD *)v125 + 2);
          if (v20 > v129)
            goto LABEL_138;
          v18 = v125;
          memmove(&v125[16 * v20 + 16], &v125[16 * v20 + 32], 16 * (v129 - v20));
          *((_QWORD *)v125 + 2) = v129 - 1;
          v20 = v129 - 1;
          v138 = 0;
        }
        while (v129 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v131 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v13 >> 1;
    v16 = sub_23361E42C();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v150 + 80);
    v131 = v16;
    v137 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v145 = a1;
  v132 = v14;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    v133 = v18;
    if (v19 + 1 >= v11)
    {
      ++v19;
      v42 = v138;
    }
    else
    {
      v23 = *a1;
      v24 = v150;
      v25 = v19;
      v26 = *(_QWORD *)(v150 + 72);
      v27 = *a1 + v26 * v22;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 16);
      v29 = v142;
      v148 = v11;
      v30 = v146;
      v28(v142, v27, v146);
      v31 = v143;
      v28(v143, v23 + v26 * v25, v30);
      LODWORD(v144) = sub_23361D5BC();
      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32(v31, v30);
      v33 = v30;
      v11 = v148;
      v32(v29, v33);
      v19 = v25 + 2;
      v140 = v23;
      v149 = v26;
      if (v25 + 2 >= v11)
      {
        a1 = v145;
        v42 = v138;
        v41 = v26;
        v21 = v25;
        v14 = v132;
      }
      else
      {
        v136 = v25;
        v141 = v26 * v22;
        v34 = v23;
        v35 = v26 * v19;
        while (1)
        {
          v36 = v19;
          v37 = v142;
          v38 = v146;
          v28(v142, v34 + v35, v146);
          v39 = v143;
          v28(v143, v34 + v141, v38);
          v40 = sub_23361D5BC();
          v32(v39, v38);
          v32(v37, v38);
          if (((v144 ^ v40) & 1) != 0)
            break;
          v19 = v36 + 1;
          v41 = v149;
          v34 += v149;
          if (v148 == v36 + 1)
          {
            v11 = v148;
            v19 = v148;
            a1 = v145;
            v42 = v138;
            v14 = v132;
            v21 = v136;
            goto LABEL_24;
          }
        }
        a1 = v145;
        v42 = v138;
        v14 = v132;
        v19 = v36;
        v21 = v136;
        v11 = v148;
        v41 = v149;
      }
LABEL_24:
      v18 = v133;
      if ((v144 & 1) != 0)
      {
        if (v19 < v21)
          goto LABEL_141;
        if (v21 < v19)
        {
          v43 = 0;
          v44 = v41 * (v19 - 1);
          v45 = v19 * v41;
          v46 = v21;
          v136 = v21;
          v47 = v21 * v41;
          do
          {
            if (v46 != v19 + v43 - 1)
            {
              v138 = v42;
              v49 = v140;
              if (!v140)
                goto LABEL_146;
              v50 = v140 + v47;
              v51 = v140 + v44;
              v144 = *(char **)(v150 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v144)(v135, v140 + v47, v146);
              if (v47 < v44 || v50 >= v49 + v45)
              {
                v48 = v146;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v48 = v146;
                if (v47 != v44)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v144)(v51, v135, v48);
              a1 = v145;
              v18 = v133;
              v42 = v138;
              v41 = v149;
            }
            ++v46;
            --v43;
            v44 -= v41;
            v45 -= v41;
            v47 += v41;
          }
          while (v46 < v19 + v43);
          v14 = v132;
          v11 = v148;
          v21 = v136;
        }
      }
    }
    if (v19 < v11)
    {
      if (__OFSUB__(v19, v21))
        goto LABEL_139;
      if (v19 - v21 < v14)
        break;
    }
LABEL_56:
    if (v19 < v21)
      goto LABEL_134;
    v69 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v138 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23360573C(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v72 = *((_QWORD *)v18 + 2);
    v71 = *((_QWORD *)v18 + 3);
    v20 = v72 + 1;
    if (v72 >= v71 >> 1)
      v18 = sub_23360573C((char *)(v71 > 1), v72 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v73 = v18 + 32;
    v74 = &v18[16 * v72 + 32];
    *(_QWORD *)v74 = v69;
    *((_QWORD *)v74 + 1) = v19;
    if (v72)
    {
      while (1)
      {
        v75 = v20 - 1;
        if (v20 >= 4)
        {
          v80 = &v73[16 * v20];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_123;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_124;
          v87 = v20 - 2;
          v88 = &v73[16 * v20 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_126;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_129;
          if (v92 >= v83)
          {
            v110 = &v73[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_133;
            v103 = v78 < v113;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v104 = *((_QWORD *)v18 + 4);
            v105 = *((_QWORD *)v18 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_87;
          }
          v77 = *((_QWORD *)v18 + 4);
          v76 = *((_QWORD *)v18 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_125;
        v87 = v20 - 2;
        v93 = &v73[16 * v20 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_128;
        v99 = &v73[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_131;
        if (__OFADD__(v97, v102))
          goto LABEL_132;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_93:
          if (v103)
            v75 = v87;
          goto LABEL_95;
        }
LABEL_87:
        if ((v98 & 1) != 0)
          goto LABEL_127;
        v106 = &v73[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_130;
        if (v109 < v97)
          goto LABEL_14;
LABEL_95:
        v114 = v75 - 1;
        if (v75 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v115 = *a1;
        if (!*a1)
          goto LABEL_145;
        v116 = &v73[16 * v114];
        v117 = *(_QWORD *)v116;
        v118 = &v73[16 * v75];
        v119 = *((_QWORD *)v118 + 1);
        v120 = v138;
        sub_2334A6CB4(v115 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v116, v115 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v118, v115 + *(_QWORD *)(v150 + 72) * v119, v137);
        v138 = v120;
        if (v120)
        {
LABEL_103:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v131 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v119 < v117)
          goto LABEL_120;
        if (v75 > *((_QWORD *)v18 + 2))
          goto LABEL_121;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v73[16 * v114 + 8] = v119;
        v121 = *((_QWORD *)v18 + 2);
        if (v75 >= v121)
          goto LABEL_122;
        v20 = v121 - 1;
        memmove(&v73[16 * v75], v118 + 16, 16 * (v121 - 1 - v75));
        *((_QWORD *)v18 + 2) = v121 - 1;
        a1 = v145;
        if (v121 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v11 = a1[1];
    v14 = v132;
    if (v19 >= v11)
      goto LABEL_105;
  }
  if (__OFADD__(v21, v14))
    goto LABEL_142;
  if (v21 + v14 >= v11)
    v52 = v11;
  else
    v52 = v21 + v14;
  if (v52 >= v21)
  {
    if (v19 != v52)
    {
      v136 = v21;
      v53 = *(_QWORD *)(v150 + 72);
      v54 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 16);
      v138 = v42;
      v139 = v54;
      v149 = v53 * (v19 - 1);
      v144 = (char *)v19;
      v140 = v53;
      v55 = v19 * v53;
      v56 = v146;
      v134 = (char *)v52;
      do
      {
        v57 = 0;
        v58 = v136;
        v141 = v55;
        while (1)
        {
          v148 = v58;
          v59 = *a1;
          v60 = v55 + v57 + *a1;
          v61 = v142;
          v62 = v139;
          v139(v142, v60, v56);
          v63 = a1;
          v64 = v143;
          v62(v143, v149 + v57 + v59, v56);
          LOBYTE(v62) = sub_23361D5BC();
          v65 = *(void (**)(char *, uint64_t))(v150 + 8);
          v65(v64, v56);
          v65(v61, v56);
          if ((v62 & 1) == 0)
            break;
          v66 = *v63;
          if (!*v63)
            goto LABEL_144;
          v55 = v141;
          v67 = (char *)(v66 + v149 + v57);
          v68 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 32);
          v56 = v146;
          v68(v147, v66 + v141 + v57, v146);
          swift_arrayInitWithTakeFrontToBack();
          v68(v67, (uint64_t)v147, v56);
          v57 -= v140;
          v58 = v148 + 1;
          a1 = v145;
          if (v144 == (char *)(v148 + 1))
            goto LABEL_49;
        }
        v56 = v146;
        a1 = v63;
        v55 = v141;
LABEL_49:
        v149 += v140;
        v55 += v140;
        ++v144;
      }
      while (v144 != v134);
      v19 = (uint64_t)v134;
      v42 = v138;
      v18 = v133;
      v21 = v136;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t sub_2334A6A60(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_23361D634();
  v36 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      v29(v31, v37 + v15 + *a4, v7);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      LOBYTE(v17) = sub_23361D5BC();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v24, v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2334A6CB4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v8 = sub_23361D634();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v44 - v11;
  v51 = v12;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v54 = a1;
  v53 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = a4 + v18;
      v52 = a4 + v18;
      v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v13;
        v45 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
        v46 = a1;
        v47 = a4;
        v33 = v49;
        do
        {
          v48 = a3 + v32;
          v34 = v45;
          v45(v33, v30 + v32, v8);
          v35 = a2 + v32;
          v36 = v50;
          v34(v50, a2 + v32, v8);
          v37 = sub_23361D5BC();
          v38 = *(void (**)(char *, uint64_t))(v51 + 8);
          v38(v36, v8);
          v38(v33, v8);
          if ((v37 & 1) != 0)
          {
            v39 = v48;
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v41 = v46;
              v40 = v47;
            }
            else
            {
              v41 = v46;
              v40 = v47;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v54 += v32;
          }
          else
          {
            v42 = v52;
            v52 += v32;
            v39 = v48;
            if (a3 < v42 || v48 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
              v35 = a2;
              v41 = v46;
              v40 = v47;
            }
            else
            {
              v41 = v46;
              v40 = v47;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront();
              v35 = a2;
            }
          }
          v30 = v52;
          if (v52 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v48 = a4 + v17;
    v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
      do
      {
        v21 = a3;
        v22 = a4;
        v23 = v49;
        v20(v49, a2, v8);
        v24 = v50;
        v20(v50, v22, v8);
        v25 = sub_23361D5BC();
        v26 = *(void (**)(char *, uint64_t))(v51 + 8);
        v26(v24, v8);
        v26(v23, v8);
        v27 = v54;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v13;
          if (v54 < a2 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v54 == a2)
          {
            v27 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v54 != v53)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v53 = v29;
          v28 = a2;
        }
        v54 = v27 + v13;
        a4 = v53;
        if (v53 >= v48)
          break;
        a3 = v21;
        a2 = v28;
      }
      while (v28 < v21);
    }
LABEL_60:
    sub_233605840(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_64:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

void *sub_2334A7188()
{
  return sub_2334A719C((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_256052018);
}

void *sub_2334A719C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_23361ED5C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_2334A73C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE50);
  v2 = *v0;
  v3 = sub_23361ED5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2334A7570(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23361ED5C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2334A76F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052028);
  v2 = *v0;
  v3 = sub_23361ED5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_28;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v13)
          goto LABEL_28;
        v24 = *(_QWORD *)(v6 + 8 * v9);
        if (!v24)
          break;
      }
    }
LABEL_27:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = *(_OWORD *)(v17 + 8);
    v20 = *(_OWORD *)(v17 + 24);
    v21 = *(_OWORD *)(v17 + 40);
    *(_QWORD *)v18 = *(_QWORD *)v17;
    *(_OWORD *)(v18 + 8) = v19;
    *(_OWORD *)(v18 + 24) = v20;
    *(_OWORD *)(v18 + 40) = v21;
    v22 = *((id *)&v21 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 3;
  if (v25 >= v13)
    goto LABEL_28;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2334A78F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FB8);
  v6 = *v0;
  v7 = sub_23361ED5C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_2331C9788(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5);
    result = (void *)sub_233168580((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20, type metadata accessor for MapsSuggestionsOrderPickup);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_2334A7B10(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23361ED5C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2334A7CB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FC8);
  v2 = *v0;
  v3 = sub_23361ED5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2334A7E40(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_23361ED68();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_233167C58(v40, v39, v41);
    result = sub_23361E084();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A815C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE50);
  v3 = sub_23361ED68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23361F350();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    result = sub_23361F3A4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A8408()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560520B0);
  result = sub_23361ED68();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23361F350();
    sub_23361F35C();
    result = sub_23361F3A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A8680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254244F18);
  v3 = sub_23361ED68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_23361F350();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    result = sub_23361F3A4();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A8944()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052028);
  v3 = sub_23361ED68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_45:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v37 = v1;
  v38 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v39 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v40 = v2;
  v41 = v4;
  while (1)
  {
    if (v7)
    {
      v42 = (v7 - 1) & v7;
      v43 = v10;
      v13 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v14 >= v39)
      goto LABEL_43;
    v15 = *(_QWORD *)(v38 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v39)
        goto LABEL_43;
      v15 = *(_QWORD *)(v38 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v39)
          goto LABEL_43;
        v15 = *(_QWORD *)(v38 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v42 = (v15 - 1) & v15;
    v43 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 56 * v13);
    v20 = *v18;
    v19 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    v23 = v18[4];
    v24 = v18[5];
    v25 = (void *)v18[6];
    sub_23361F350();
    if (v19)
    {
      sub_23361F368();
      v26 = v25;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = v20;
      sub_23361E0A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = v20;
      sub_23361F368();
      v28 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (v22)
    {
      sub_23361F368();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      if (v24)
        goto LABEL_29;
    }
    else
    {
      sub_23361F368();
      if (v24)
      {
LABEL_29:
        sub_23361F368();
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
        if (v25)
          goto LABEL_30;
        goto LABEL_33;
      }
    }
    sub_23361F368();
    if (v25)
    {
LABEL_30:
      sub_23361F368();
      v29 = v25;
      sub_23361EA20();

      goto LABEL_34;
    }
LABEL_33:
    sub_23361F368();
LABEL_34:
    result = sub_23361F3A4();
    v4 = v41;
    v30 = -1 << *(_BYTE *)(v41 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v8 + 8 * (v31 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v8 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v8 + 8 * v32);
      }
      while (v36 == -1);
      v11 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v41 + 48) + 56 * v11);
    *v12 = v27;
    v12[1] = v19;
    v12[2] = v21;
    v12[3] = v22;
    v12[4] = v23;
    v12[5] = v24;
    v12[6] = v25;
    ++*(_QWORD *)(v41 + 16);
    v2 = v40;
    v7 = v42;
    v10 = v43;
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v39)
  {
LABEL_43:
    result = swift_release_n();
    v1 = v37;
    goto LABEL_45;
  }
  v15 = *(_QWORD *)(v38 + 8 * v17);
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v39)
      goto LABEL_43;
    v15 = *(_QWORD *)(v38 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_2334A8D54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t i;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FB8);
  v6 = sub_23361ED68();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v30 = v0;
  v31 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32)
      goto LABEL_33;
    v19 = *(_QWORD *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_33;
      v19 = *(_QWORD *)(v31 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v32)
          goto LABEL_33;
        v19 = *(_QWORD *)(v31 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(_QWORD *)(v5 + 48);
    v22 = *(_QWORD *)(v34 + 72);
    sub_2331C9788(v21 + v22 * v17, (uint64_t)v4);
    sub_23361F350();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    result = sub_23361F3A4();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = sub_233168580((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v22, type metadata accessor for MapsSuggestionsOrderPickup);
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v31 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v32)
      goto LABEL_33;
    v19 = *(_QWORD *)(v31 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A90CC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23361ED68();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_23361EA08();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A9340()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FC8);
  result = sub_23361ED68();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23361F350();
    sub_23361F35C();
    result = sub_23361F3A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2334A95B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23361C938();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2334EFCCC(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2334A719C((uint64_t (*)(_QWORD))MEMORY[0x24BDCAEB0], &qword_256052078);
      goto LABEL_12;
    }
    sub_2334A7E40(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], &qword_256052078, &qword_256043F50, MEMORY[0x24BDCAEC0]);
  }
  v13 = *v3;
  sub_233167C58(&qword_256043F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC0]);
  v14 = sub_23361E084();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
      v19 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23361F2A8();
  __break(1u);
  return result;
}

uint64_t sub_2334A97EC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2334EFCF0(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2334A719C((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_256052018);
      goto LABEL_12;
    }
    sub_2334A7E40(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_256052018, &qword_25604DB90, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_23361E084();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23361F2A8();
  __break(1u);
  return result;
}

uint64_t sub_2334A9A20(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2334EFD14(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2334A719C((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &qword_2560520B8);
      goto LABEL_12;
    }
    sub_2334A7E40(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], &qword_2560520B8, (unint64_t *)&qword_256042700, MEMORY[0x24BDCE930]);
  }
  v13 = *v3;
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  v14 = sub_23361E084();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v19 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23361F2A8();
  __break(1u);
  return result;
}

unint64_t sub_2334A9C58()
{
  unint64_t result;

  result = qword_256051F18;
  if (!qword_256051F18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectLinkingDateQueryCalculator.Error, &type metadata for BankConnectLinkingDateQueryCalculator.Error);
    atomic_store(result, (unint64_t *)&qword_256051F18);
  }
  return result;
}

unint64_t sub_2334A9CA0()
{
  unint64_t result;

  result = qword_256051F20;
  if (!qword_256051F20)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectLinkingDateQueryCalculator.Calculation, &type metadata for BankConnectLinkingDateQueryCalculator.Calculation);
    atomic_store(result, (unint64_t *)&qword_256051F20);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23361D868();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t destroy for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D868();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *assignWithCopy for BankConnectLinkingDateQueryCalculator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D868();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BankConnectLinkingDateQueryCalculator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334A9F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D868();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334AA00C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D868();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2334AA080()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D868();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334AA134 + 4 * byte_2336510E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334AA154 + 4 * byte_2336510E5[v4]))();
}

_BYTE *sub_2334AA134(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334AA154(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334AA15C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334AA164(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334AA16C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334AA174(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectLinkingDateQueryCalculator.Error()
{
  return &type metadata for BankConnectLinkingDateQueryCalculator.Error;
}

uint64_t storeEnumTagSinglePayload for BankConnectLinkingDateQueryCalculator.Calculation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334AA1DC + 4 * byte_2336510EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334AA210 + 4 * byte_2336510EA[v4]))();
}

uint64_t sub_2334AA210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334AA218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334AA220);
  return result;
}

uint64_t sub_2334AA22C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334AA234);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334AA238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334AA240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectLinkingDateQueryCalculator.Calculation()
{
  return &type metadata for BankConnectLinkingDateQueryCalculator.Calculation;
}

uint64_t sub_2334AA25C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2334F0098();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2334A73C0();
      goto LABEL_22;
    }
    sub_2334A815C();
  }
  v11 = *v4;
  sub_23361F350();
  sub_23361E0A8();
  result = sub_23361F3A4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23361F224(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23361F2A8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23361F224();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_2334AA3F4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2334F0374();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2334A7570(&qword_2560520B0);
      goto LABEL_14;
    }
    sub_2334A8408();
  }
  v8 = *v3;
  sub_23361F350();
  sub_23361F35C();
  result = sub_23361F3A4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
    {
LABEL_13:
      result = sub_23361F2A8();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_2334AA568(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0628, (void (*)(_QWORD))type metadata accessor for ManagedContactTransactionInsight, &qword_256049F80);
}

void sub_2334AA584(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0634, (void (*)(_QWORD))type metadata accessor for ManagedMapsTransactionInsight, &qword_256049F88);
}

void sub_2334AA5A0(uint64_t a1, unint64_t a2, char a3, void (*a4)(uint64_t), void (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t *v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v10 = *(_QWORD *)(*v6 + 16);
  v11 = *(_QWORD *)(*v6 + 24);
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_14;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    a4(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2334A7B10(a6);
      goto LABEL_14;
    }
    sub_2334A90CC(v12, a6);
  }
  v13 = *v6;
  v14 = sub_23361EA08();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v16 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * a2);
    v17 = sub_23361EA14();

    if ((v17 & 1) != 0)
    {
LABEL_13:
      sub_23361F2A8();
      __break(1u);
    }
    else
    {
      v18 = ~v15;
      while (1)
      {
        a2 = (a2 + 1) & v18;
        if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * a2);
        v20 = sub_23361EA14();

        if ((v20 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v21 = *v6;
  *(_QWORD *)(*v6 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * a2) = a1;
  v22 = *(_QWORD *)(v21 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v24;
}

void sub_2334AA720(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0640, (void (*)(_QWORD))type metadata accessor for ManagedTransactionInsights, &qword_256049F90);
}

void sub_2334AA73C(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F064C, (void (*)(_QWORD))type metadata accessor for ManagedInternalTransaction, &qword_256049F98);
}

uint64_t sub_2334AA758(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char v19;

  v4 = v3;
  v6 = result & 1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  v19 = result & 1;
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_19;
  if ((a3 & 1) != 0)
  {
    sub_2334F0658();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_2334A7570(&qword_254244F18);
      goto LABEL_19;
    }
    sub_2334A8680();
  }
  v9 = *v3;
  sub_23361F350();
  if (v6)
    v10 = 0xEE00617461642D6CLL;
  else
    v10 = 0xED0000617461446CLL;
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  result = sub_23361F3A4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) ? 0xEE00617461642D6CLL : 0xED0000617461446CLL;
      if (v13 == v10)
        goto LABEL_22;
      v14 = sub_23361F224();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_23;
      a2 = (a2 + 1) & v12;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_19:
  v15 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v15 + 48) + a2) = v19;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v15 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRelease_n();
LABEL_23:
  result = sub_23361F2A8();
  __break(1u);
  return result;
}

void sub_2334AA95C(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v24;
  char v26;
  char v28;
  id v29;
  id v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_43;
  if ((a3 & 1) != 0)
  {
    sub_2334F0950();
  }
  else
  {
    if (v7 > v6)
    {
      sub_2334A76F8();
      goto LABEL_43;
    }
    sub_2334A8944();
  }
  v8 = *v3;
  sub_23361F350();
  Order.ShippingRecipient.hash(into:)();
  v9 = sub_23361F3A4();
  v10 = v8;
  v11 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v11;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v11;
    v14 = a1[1];
    v47 = *a1;
    v15 = a1[3];
    v43 = a1[2];
    v39 = a1[4];
    v44 = a1[5];
    v45 = v10;
    v40 = (void *)a1[6];
    v46 = v15;
    do
    {
      v16 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 56 * a2);
      v18 = v16[1];
      v17 = v16[2];
      v20 = v16[3];
      v19 = v16[4];
      v22 = v16[5];
      v21 = (void *)v16[6];
      if (v18)
      {
        if (!v14)
          goto LABEL_11;
        if (*v16 != v47 || v18 != v14)
        {
          v24 = sub_23361F224();
          v10 = v45;
          v15 = v46;
          if ((v24 & 1) == 0)
            goto LABEL_11;
        }
      }
      else if (v14)
      {
        goto LABEL_11;
      }
      if (v20)
      {
        if (!v15)
          goto LABEL_11;
        if (v17 != v43 || v20 != v15)
        {
          v26 = sub_23361F224();
          v10 = v45;
          v15 = v46;
          if ((v26 & 1) == 0)
            goto LABEL_11;
        }
      }
      else if (v15)
      {
        goto LABEL_11;
      }
      if (v22)
      {
        if (!v44)
          goto LABEL_11;
        if (v19 != v39 || v22 != v44)
        {
          v28 = sub_23361F224();
          v10 = v45;
          v15 = v46;
          if ((v28 & 1) == 0)
            goto LABEL_11;
        }
      }
      else if (v44)
      {
        goto LABEL_11;
      }
      if (v21)
      {
        if (v40)
        {
          sub_233168668(0, &qword_254247E48);
          swift_bridgeObjectRetain();
          v29 = v21;
          v30 = v40;
          v31 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v32 = sub_23361EA14();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v10 = v45;
          v15 = v46;
          if ((v32 & 1) != 0)
          {
LABEL_42:
            sub_23361F2A8();
            __break(1u);
            break;
          }
        }
      }
      else if (!v40)
      {
        goto LABEL_42;
      }
LABEL_11:
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_43:
  v33 = *v41;
  *(_QWORD *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v34 = *(_QWORD *)(v33 + 48) + 56 * a2;
  v35 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v34 = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 16) = v35;
  *(_OWORD *)(v34 + 32) = *((_OWORD *)a1 + 2);
  *(_QWORD *)(v34 + 48) = a1[6];
  v36 = *(_QWORD *)(v33 + 16);
  v37 = __OFADD__(v36, 1);
  v38 = v36 + 1;
  if (v37)
    __break(1u);
  else
    *(_QWORD *)(v33 + 16) = v38;
}

void sub_2334AAC9C(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0D6C, (void (*)(_QWORD))type metadata accessor for ManagedOrderLineItem, &qword_256049F78);
}

void sub_2334AACB8(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0D78, (void (*)(_QWORD))type metadata accessor for ManagedOrderPickupFulfillment, &qword_256049F50);
}

void sub_2334AACD4(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0D84, (void (*)(_QWORD))type metadata accessor for ManagedOrderShippingFulfillment, &qword_256049F48);
}

void sub_2334AACF0(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0D90, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturnLabel, &qword_256049F58);
}

void sub_2334AAD0C(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0D9C, (void (*)(_QWORD))type metadata accessor for ManagedOrderReceipt, &qword_256049F60);
}

void sub_2334AAD28(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0DA8, (void (*)(_QWORD))type metadata accessor for ManagedOrderImage, &qword_256049F68);
}

void sub_2334AAD44(uint64_t a1, unint64_t a2, char a3)
{
  sub_2334AA5A0(a1, a2, a3, (void (*)(uint64_t))sub_2334F0DB4, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturn, &qword_256049F70);
}

uint64_t sub_2334AAD60(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t *v26;

  v7 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    v13 = v8;
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    sub_2334F0DC0();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_2334A8D54();
LABEL_8:
    v14 = *v3;
    sub_23361F350();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    v15 = sub_23361F3A4();
    v16 = -1 << *(_BYTE *)(v14 + 32);
    a2 = v15 & ~v16;
    if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v25[1] = v7;
      v17 = ~v16;
      v13 = v8;
      v18 = *(_QWORD *)(v8 + 72);
      while (1)
      {
        sub_2331C9788(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v10);
        v19 = _s10FinanceKit26MapsSuggestionsOrderPickupV2eeoiySbAC_ACtFZ_0(v10, a1);
        sub_233168500((uint64_t)v10, type metadata accessor for MapsSuggestionsOrderPickup);
        if ((v19 & 1) != 0)
          goto LABEL_17;
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_14;
      }
    }
    goto LABEL_13;
  }
  v13 = v8;
  sub_2334A78F4();
LABEL_14:
  v20 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_233168580((uint64_t)a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v13 + 72) * a2, type metadata accessor for MapsSuggestionsOrderPickup);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_17:
  result = sub_23361F2A8();
  __break(1u);
  return result;
}

void sub_2334AAF9C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2334F1178(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_2334A7B10(&qword_256049F38);
      goto LABEL_14;
    }
    sub_2334A90CC(v8, &qword_256049F38);
  }
  v9 = *v3;
  v10 = sub_23361EA08();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_23361EA14();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_23361F2A8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_23361EA14();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_2334AB138(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2334F141C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2334A7CB0();
      goto LABEL_14;
    }
    sub_2334A9340();
  }
  v8 = *v3;
  sub_23361F350();
  sub_23361F35C();
  result = sub_23361F3A4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_23361F2A8();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_2334AB284(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AB374(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AB464(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604D268);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AB56C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

char *sub_2334AB65C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = 2 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AB744(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052088);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AB84C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

char *sub_2334AB950(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334ABA3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v5;
    if (v6 >= v7 || v6 + 32 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

char *sub_2334ABB40(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23361EF6C();
  __break(1u);
  return result;
}

char *sub_2334ABC28(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334ABD10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334ABE00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334ABEEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334ABFE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

char *sub_2334AC0D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AC1B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AC2A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2334AC39C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t RelativeDateFormatStyle.format(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(a3 + 16))(a1, v9, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t dispatch thunk of RelativeDateFormatStyle.format(_:now:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t *PIIStringProcessor.__allocating_init(regexCollectionProvider:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_2334ACA70(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t PIIStringProcessor.redact(from:forCountryCodes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v9 = type metadata accessor for PIIRedactionRegex();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v4[5];
  v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  swift_bridgeObjectRetain();
  v16 = sub_2334AC870(v15, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v23 = a1;
    v24 = a2;
    v18 = v16 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v19 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v20 = 0;
    do
    {
      sub_23326AE14(v18, (uint64_t)v12);
      v20 = v20 || sub_2334ACB1C(&v23, (uint64_t)v12);
      sub_23326AE58((uint64_t)v12);
      v18 += v19;
      --v17;
    }
    while (v17);
    result = swift_bridgeObjectRelease();
    if (v20)
    {
      a1 = v23;
      a2 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRetain();
    }
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
    *(_BYTE *)(a4 + 16) = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
    *(_BYTE *)(a4 + 16) = 0;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *PIIStringProcessor.init(regexCollectionProvider:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_2331C061C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t PIIStringProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PIIStringProcessor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_2334AC844@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PIIStringProcessor.redact(from:forCountryCodes:)(*a1, a1[1], a2, a3);
}

uint64_t sub_2334AC870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a2;
  v4 = type metadata accessor for PIIRedactionRegex();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v26 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v23 - v11;
  result = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v23 = v2;
    v15 = *(_QWORD *)(v10 + 72);
    v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = a1 + v25;
    v17 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_23326AE14(v16, (uint64_t)v12);
      v18 = *(_QWORD *)(*(_QWORD *)&v12[*(int *)(v4 + 32)] + 16);
      sub_23326AE14((uint64_t)v12, (uint64_t)v9);
      if (!v18)
        break;
      v19 = *(_QWORD *)&v9[*(int *)(v4 + 32)];
      swift_bridgeObjectRetain();
      v20 = sub_233611460(v24, v19);
      swift_bridgeObjectRelease();
      sub_23326AE58((uint64_t)v9);
      if ((v20 & 1) == 0)
        goto LABEL_9;
      sub_23326AE58((uint64_t)v12);
LABEL_4:
      v16 += v15;
      if (!--v14)
        return v27;
    }
    sub_23326AE58((uint64_t)v9);
LABEL_9:
    sub_2334AD3B0((uint64_t)v12, v26);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_233273AFC(0, *(_QWORD *)(v17 + 16) + 1, 1);
    v17 = v27;
    v22 = *(_QWORD *)(v27 + 16);
    v21 = *(_QWORD *)(v27 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_233273AFC(v21 > 1, v22 + 1, 1);
      v17 = v27;
    }
    *(_QWORD *)(v17 + 16) = v22 + 1;
    sub_2334AD3B0(v26, v17 + v25 + v22 * v15);
    goto LABEL_4;
  }
  return result;
}

uint64_t *sub_2334ACA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v9, a3);
  return v10;
}

BOOL sub_2334ACB1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *, _QWORD);
  char v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v4 = sub_23361D9D0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v77 = (char *)&v63 - v9;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052180);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052188);
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052190);
  v13 = MEMORY[0x24BDAC7A8](v66);
  v65 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v83 = (uint64_t *)((char *)&v63 - v15);
  v16 = sub_23361D9DC();
  v74 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052198);
  v18 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v69 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a1;
  v24 = *a1;
  v25 = a1[1];
  v85 = v24;
  v86 = v25;
  v78 = type metadata accessor for PIIRedactionRegex();
  v79 = a2;
  swift_bridgeObjectRetain();
  sub_23361DA00();
  sub_233311A50();
  sub_2334AD298();
  v84 = v16;
  v26 = sub_23361E0C0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
    goto LABEL_23;
  v73 = v26 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  swift_bridgeObjectRetain();
  v63 = v27;
  v28 = v77;
  v29 = v18;
  v30 = v75;
  v32 = v69;
  v31 = v70;
  v71 = v26;
  v72 = v29;
  while (1)
  {
    if (v27 > *(_QWORD *)(v26 + 16))
    {
      __break(1u);
LABEL_20:
      swift_bridgeObjectRelease_n();
      v27 = v63;
      return v27 != 0;
    }
    v36 = *(_QWORD *)(v29 + 72);
    v76 = v27 - 1;
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v32, v73 + v36 * (v27 - 1), v31);
    sub_23361DA24();
    v27 = sub_23361D9B8();
    v37 = *(void (**)(char *, uint64_t))(v74 + 8);
    v38 = v30;
    v39 = v30;
    v40 = v32;
    v41 = v84;
    v37(v38, v84);
    if (v27 >= 2)
      break;
    sub_23361DA18();
    v33 = (uint64_t *)(v79 + *(int *)(v78 + 28));
    v35 = *v33;
    v34 = v33[1];
    v85 = v35;
    v86 = v34;
    sub_2334AD2E4();
    sub_23361E210();
    v29 = v72;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v31);
    v32 = v40;
LABEL_4:
    v26 = v71;
    v30 = v75;
    v27 = v76;
    if (!v76)
      goto LABEL_20;
  }
  v81 = v37;
  sub_23361DA24();
  v42 = sub_2334AD370(&qword_2560521B0, MEMORY[0x24BEE7388]);
  sub_23361E648();
  v43 = v85;
  if (v85 >= 1)
  {
    v85 = 1;
    v86 = v43;
    v44 = (uint64_t)v68;
    v82 = v42;
    sub_23361E678();
    v81(v39, v41);
    v45 = v67;
    sub_233168478(v44, v67, &qword_256052180);
    v46 = v65;
    sub_2334AD328(v45, v65);
    v47 = *(_QWORD *)(v45 + 8);
    sub_233168608(v45, &qword_256052180);
    v48 = v66;
    *(_QWORD *)(v46 + *(int *)(v66 + 36)) = v47;
    v49 = v83;
    sub_233168478(v46, (uint64_t)v83, &qword_256052190);
    v50 = (uint64_t *)((char *)v49 + *(int *)(v48 + 36));
    v51 = *v49;
    if (*v50 != *v49)
    {
      v81 = (void (*)(char *, uint64_t))sub_2334AD370(&qword_2560521B8, MEMORY[0x24BEE7380]);
      do
      {
        sub_23361E0CC();
        v87 = *v50;
        v55 = v49[1];
        v85 = v51;
        v86 = v55;
        sub_23361E630();
        v56 = (void (*)(uint64_t *, _QWORD))sub_23361E684();
        (*(void (**)(char *))(v5 + 16))(v28);
        v56(&v85, 0);
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v28, v4);
        sub_23361D9C4();
        if ((v57 & 1) != 0)
        {
          if (qword_256041CC0 != -1)
            swift_once();
          v58 = sub_23361DB80();
          __swift_project_value_buffer(v58, (uint64_t)qword_256049610);
          v59 = sub_23361DB68();
          v60 = sub_23361E768();
          if (os_log_type_enabled(v59, v60))
          {
            v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v61 = 0;
            _os_log_impl(&dword_233151000, v59, v60, "Range of a match group is not available", v61, 2u);
            v28 = v77;
            MEMORY[0x234934590](v61, -1, -1);
          }

        }
        else
        {
          v52 = (uint64_t *)(v79 + *(int *)(v78 + 28));
          v54 = *v52;
          v53 = v52[1];
          v85 = v54;
          v86 = v53;
          sub_2334AD2E4();
          sub_23361E210();
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v49 = v83;
        v51 = *v83;
      }
      while (*v50 != *v83);
    }
    sub_233168608((uint64_t)v49, &qword_256052190);
    v29 = v72;
    v32 = v69;
    v31 = v70;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v70);
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  swift_bridgeObjectRelease();
  return v27 != 0;
}

uint64_t type metadata accessor for PIIStringProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for PIIStringProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PIIStringProcessor.__allocating_init(regexCollectionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_2334AD298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560521A0;
  if (!qword_2560521A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256047300);
    result = MEMORY[0x234934494](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_2560521A0);
  }
  return result;
}

unint64_t sub_2334AD2E4()
{
  unint64_t result;

  result = qword_2560521A8;
  if (!qword_2560521A8)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2560521A8);
  }
  return result;
}

uint64_t sub_2334AD328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2334AD370(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23361D9DC();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2334AD3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PIIRedactionRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static RawBankConnectData.DoubleString.== infix(_:_:)()
{
  JUMPOUT(0x234932E38);
}

uint64_t RawBankConnectData.DoubleString.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t RawBankConnectData.DoubleString.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RawBankConnectData.DoubleString.value.setter(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  return result;
}

uint64_t (*RawBankConnectData.DoubleString.value.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.DoubleString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[4];
  unint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044098);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    sub_23361F230();
    v8 = sub_23361D73C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    v9 = sub_23361EB10();
    v11 = v10;
    v13 = v12;
    sub_2331CC7B0((uint64_t)v7);
    if ((v13 & 0x100000000) != 0 || (sub_23361EAF8() & 1) != 0)
    {
      v18 = 0;
      v19 = 0xE000000000000000;
      sub_23361ED98();
      swift_bridgeObjectRelease();
      v18 = 39;
      v19 = 0xE100000000000000;
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      sub_23361EE10();
      swift_allocError();
      sub_23361EDD4();
      swift_bridgeObjectRelease();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    }
    else
    {
      v21 = v13 >> 16;
      swift_bridgeObjectRelease();
      v16 = HIDWORD(v11);
      v17 = HIWORD(v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      *(_QWORD *)a2 = v9;
      *(_DWORD *)(a2 + 8) = v11;
      *(_WORD *)(a2 + 12) = v16;
      *(_WORD *)(a2 + 14) = v17;
      *(_WORD *)(a2 + 16) = v13;
      *(_WORD *)(a2 + 18) = v21;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t RawBankConnectData.DoubleString.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F404();
  sub_23361EA68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_23361F260();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t RawBankConnectData.DoubleString.hash(into:)()
{
  return sub_23361EAEC();
}

uint64_t RawBankConnectData.DoubleString.hashValue.getter()
{
  sub_23361F350();
  sub_23361EAEC();
  return sub_23361F3A4();
}

uint64_t sub_2334AD830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.DoubleString.init(from:)(a1, a2);
}

uint64_t sub_2334AD844(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F404();
  sub_23361EA68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_23361F260();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

void sub_2334AD908()
{
  JUMPOUT(0x234932E38);
}

uint64_t sub_2334AD920()
{
  sub_23361F350();
  sub_23361EAEC();
  return sub_23361F3A4();
}

uint64_t sub_2334AD978()
{
  return sub_23361EAEC();
}

uint64_t sub_2334AD984()
{
  sub_23361F350();
  sub_23361EAEC();
  return sub_23361F3A4();
}

unint64_t sub_2334AD9DC()
{
  unint64_t result;

  result = qword_2560521C0;
  if (!qword_2560521C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.DoubleString, &type metadata for RawBankConnectData.DoubleString);
    atomic_store(result, (unint64_t *)&qword_2560521C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.DoubleString()
{
  return &type metadata for RawBankConnectData.DoubleString;
}

uint64_t CredentialCenterKeyVault.accessGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CredentialCenterKeyVault.serviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *CredentialCenterKeyVault.__allocating_init(accessGroupName:serviceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *CredentialCenterKeyVault.init(accessGroupName:serviceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

void CredentialCenterKeyVault.currentKey()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560521C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CredentialCenterKey();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = CredentialCenterKeyVault.keys()();
  if (!v2)
  {
    v18 = v1;
    if (!*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_9:
      CredentialCenterKeyVault.createKey()(a1);
      return;
    }
    v17 = a1;
    v20 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560521D0);
    v16[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560521D8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_233623D60;
    swift_getKeyPath();
    sub_233167C58(&qword_2560521E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
    sub_23361CDA0();
    v19 = v12;
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560521E8);
    v16[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560521F0);
    v13 = MEMORY[0x24BEE12C8];
    v16[1] = sub_2331B1A14(&qword_2560521F8, &qword_2560521E8, MEMORY[0x24BEE12C8]);
    sub_2331B1A14(&qword_256052200, &qword_2560521F0, v13);
    sub_2331B1A14(&qword_256052208, &qword_2560521D8, MEMORY[0x24BDCBF20]);
    v14 = sub_23361E318();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 16))
    {
      sub_2334AE2B0(v14 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v6);
      v15 = 0;
      a1 = v17;
    }
    else
    {
      a1 = v17;
      v15 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v15, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_233168608((uint64_t)v6, &qword_2560521C8);
      goto LABEL_9;
    }
    sub_2334AE724((uint64_t)v6, (uint64_t)v10);
    sub_2334AE724((uint64_t)v10, a1);
  }
}

uint64_t type metadata accessor for CredentialCenterKey()
{
  uint64_t result;

  result = qword_256052288;
  if (!qword_256052288)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CredentialCenterKeyVault.keys()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  id *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void **v19;
  void *v20;
  void **v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  const __CFDictionary *v32;
  OSStatus v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  CFStringRef v45;
  __CFString *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  CFTypeRef v61;
  CFTypeRef v62[42];

  v62[40] = *(CFTypeRef *)MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for CredentialCenterKey();
  v53[0] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v59 = (uint64_t)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
  inited = swift_initStackObject();
  v4 = (id *)MEMORY[0x24BDE9220];
  *(_OWORD *)(inited + 16) = xmmword_233633B10;
  v57 = *v4;
  *(_QWORD *)(inited + 32) = v57;
  v55 = (id)*MEMORY[0x24BDE9230];
  v5 = v55;
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 40) = v5;
  v56 = (id)*MEMORY[0x24BDE8F50];
  v6 = v56;
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v6;
  v58 = v7;
  v8 = v0[2];
  v54 = v0[3];
  v9 = v54;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 88) = v9;
  v11 = (void *)*MEMORY[0x24BDE9128];
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 112) = v11;
  v12 = v0[4];
  v13 = v0[5];
  v14 = (void **)MEMORY[0x24BDE9140];
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 128) = v13;
  v15 = *v14;
  *(_QWORD *)(inited + 144) = v10;
  *(_QWORD *)(inited + 152) = v15;
  v16 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 160) = 1;
  v17 = (void *)*MEMORY[0x24BDE93B0];
  *(_QWORD *)(inited + 184) = v16;
  *(_QWORD *)(inited + 192) = v17;
  v18 = (void *)*MEMORY[0x24BDE93B8];
  v19 = (void **)MEMORY[0x24BDE94C8];
  *(_QWORD *)(inited + 200) = *MEMORY[0x24BDE93B8];
  v20 = *v19;
  *(_QWORD *)(inited + 224) = v7;
  *(_QWORD *)(inited + 232) = v20;
  v21 = (void **)MEMORY[0x24BDE94C0];
  *(_BYTE *)(inited + 240) = 1;
  v22 = *v21;
  *(_QWORD *)(inited + 264) = v16;
  *(_QWORD *)(inited + 272) = v22;
  *(_QWORD *)(inited + 304) = v16;
  *(_BYTE *)(inited + 280) = 1;
  v23 = v57;
  v24 = v55;
  v25 = v56;
  swift_bridgeObjectRetain();
  v26 = v11;
  swift_bridgeObjectRetain();
  v27 = v15;
  v28 = v17;
  v29 = v18;
  v30 = v20;
  v31 = v22;
  sub_23315F804(inited);
  v62[0] = 0;
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v32 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v33 = SecItemCopyMatching(v32, v62);

  v34 = MEMORY[0x24BEE4AF8];
  if (v33 == -25300)
    goto LABEL_19;
  if (v33)
  {
    v45 = SecCopyErrorMessageString(v33, 0);
    if (v45)
    {
      v46 = (__CFString *)v45;
      v34 = sub_23361E150();
      v48 = v47;

    }
    else
    {
      LODWORD(v61) = v33;
      v34 = sub_23361F1D0();
      v48 = v51;
    }
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v49 = v34;
    *(_QWORD *)(v49 + 8) = v48;
    v50 = 2;
    goto LABEL_18;
  }
  if (!v62[0]
    || (v61 = v62[0],
        swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_256052218),
        (swift_dynamicCast() & 1) == 0))
  {
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v49 = 0xD000000000000029;
    *(_QWORD *)(v49 + 8) = 0x80000002336784C0;
    v50 = 1;
LABEL_18:
    *(_BYTE *)(v49 + 16) = v50;
    swift_willThrow();
    goto LABEL_19;
  }
  v35 = v60;
  v36 = *(_QWORD *)(v60 + 16);
  if (v36)
  {
    v61 = (CFTypeRef)v34;
    sub_2332742FC(0, v36, 0);
    v37 = 0;
    v34 = (uint64_t)v61;
    v39 = v53[0];
    v38 = v53[1];
    v40 = v59;
    while (1)
    {
      v41 = *(_QWORD *)(v35 + 8 * v37 + 32);
      swift_bridgeObjectRetain_n();
      sub_2334AE7AC(v41, v40);
      if (v38)
        break;
      swift_bridgeObjectRelease();
      v61 = (CFTypeRef)v34;
      v43 = *(_QWORD *)(v34 + 16);
      v42 = *(_QWORD *)(v34 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_2332742FC(v42 > 1, v43 + 1, 1);
        v34 = (uint64_t)v61;
      }
      ++v37;
      *(_QWORD *)(v34 + 16) = v43 + 1;
      v44 = v34
          + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
          + *(_QWORD *)(v39 + 72) * v43;
      v40 = v59;
      sub_2334AE724(v59, v44);
      if (v36 == v37)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_unknownObjectRelease();
  return v34;
}

uint64_t sub_2334AE2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CredentialCenterKeyVault.createKey()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  void **v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  void **v42;
  void *v43;
  void **v44;
  void *v45;
  id v46;
  _QWORD *v47;
  id v48;
  id v49;
  id v50;
  const __CFDictionary *v51;
  OSStatus v52;
  CFStringRef v53;
  __CFString *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  _QWORD *v67;

  v65 = a1;
  v3 = sub_23361DEB0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23361DE98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CredentialCenterKey();
  v63 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D694();
  sub_23361DEA4();
  sub_23361DE8C();
  sub_23361DE68();
  v61 = v1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_OWORD *)&v10[*(int *)(v8 + 20)] = v66;
  sub_2334AE724((uint64_t)v10, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
  inited = swift_initStackObject();
  v12 = (void **)MEMORY[0x24BDE9220];
  *(_OWORD *)(inited + 16) = xmmword_2336513B0;
  v13 = *v12;
  *(_QWORD *)(inited + 32) = *v12;
  v62 = (id)*MEMORY[0x24BDE9230];
  v14 = v62;
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 40) = v14;
  v15 = (void *)*MEMORY[0x24BDE8F50];
  *(_QWORD *)(inited + 64) = v16;
  *(_QWORD *)(inited + 72) = v15;
  v64 = v16;
  v17 = v67[3];
  v18 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v67[2];
  *(_QWORD *)(inited + 88) = v17;
  v19 = (void *)*MEMORY[0x24BDE8F60];
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 112) = v19;
  v20 = (void *)*MEMORY[0x24BDE8F68];
  *(_QWORD *)(inited + 120) = *MEMORY[0x24BDE8F68];
  v21 = (void *)*MEMORY[0x24BDE9008];
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 152) = v21;
  v22 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 160) = 1;
  v23 = (void *)*MEMORY[0x24BDE8FA8];
  *(_QWORD *)(inited + 184) = v22;
  *(_QWORD *)(inited + 192) = v23;
  v24 = v13;
  v25 = v62;
  v26 = v15;
  swift_bridgeObjectRetain();
  v27 = v19;
  v28 = v20;
  v29 = v21;
  v30 = v23;
  v31 = v65;
  *(_QWORD *)(inited + 200) = sub_23361D64C();
  *(_QWORD *)(inited + 208) = v32;
  v33 = (void *)*MEMORY[0x24BDE9128];
  v34 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 224) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 232) = v33;
  v35 = v67[5];
  *(_QWORD *)(inited + 240) = v67[4];
  *(_QWORD *)(inited + 248) = v35;
  v67 = (_QWORD *)*MEMORY[0x24BDE9140];
  v36 = v67;
  *(_QWORD *)(inited + 264) = v34;
  *(_QWORD *)(inited + 272) = v36;
  *(_BYTE *)(inited + 280) = 1;
  v37 = (void *)*MEMORY[0x24BDE9550];
  v38 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 304) = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 312) = v37;
  v39 = (uint64_t *)(v31 + *(int *)(v63 + 20));
  v40 = *v39;
  v41 = v39[1];
  v42 = (void **)MEMORY[0x24BDE94C8];
  *(_QWORD *)(inited + 320) = v40;
  *(_QWORD *)(inited + 328) = v41;
  v43 = *v42;
  *(_QWORD *)(inited + 344) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 352) = v43;
  v44 = (void **)MEMORY[0x24BDE94C0];
  *(_BYTE *)(inited + 360) = 1;
  v45 = *v44;
  *(_QWORD *)(inited + 384) = v38;
  *(_QWORD *)(inited + 392) = v45;
  *(_QWORD *)(inited + 424) = v38;
  *(_BYTE *)(inited + 400) = 1;
  v46 = v33;
  swift_bridgeObjectRetain();
  v47 = v67;
  v48 = v37;
  sub_2331D1374(v40, v41);
  v49 = v43;
  v50 = v45;
  sub_23315F804(inited);
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v51 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v52 = SecItemAdd(v51, 0);

  if (v52)
  {
    v53 = SecCopyErrorMessageString(v52, 0);
    if (v53)
    {
      v54 = (__CFString *)v53;
      v55 = sub_23361E150();
      v57 = v56;

    }
    else
    {
      LODWORD(v66) = v52;
      v55 = sub_23361F1D0();
      v57 = v58;
    }
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v59 = v55;
    *(_QWORD *)(v59 + 8) = v57;
    *(_BYTE *)(v59 + 16) = 2;
    swift_willThrow();
    sub_2334AF518(v65);
  }
}

uint64_t sub_2334AE724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2334AE768()
{
  unint64_t result;

  result = qword_256052210;
  if (!qword_256052210)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for KeychainError, &type metadata for KeychainError);
    atomic_store(result, (unint64_t *)&qword_256052210);
  }
  return result;
}

uint64_t sub_2334AE7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t result;
  void *v19;
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  void (*v28)(char *, uint64_t);
  _QWORD v29[2];
  __int128 v30;
  __int128 v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)*MEMORY[0x24BDE8FA8];
  if (!*(_QWORD *)(a1 + 16))
  {
    v30 = 0u;
    v31 = 0u;
    goto LABEL_9;
  }
  v12 = v11;
  v13 = sub_2331E3FA4(v12);
  if ((v14 & 1) == 0)
  {
    v30 = 0u;
    v31 = 0u;

    goto LABEL_9;
  }
  sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v30);

  if (!*((_QWORD *)&v31 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)&v30, &qword_254245020);
LABEL_10:
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v16 = v11;
    *(_QWORD *)(v16 + 8) = 0;
    *(_BYTE *)(v16 + 16) = 0;
    v17 = v11;
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_23361D640();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)v6, &qword_254246740);
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v15 = 0xD00000000000001DLL;
    *(_QWORD *)(v15 + 8) = 0x8000000233678570;
    *(_BYTE *)(v15 + 16) = 1;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  v19 = (void *)*MEMORY[0x24BDE9550];
  if (*(_QWORD *)(a1 + 16))
  {
    v20 = v19;
    v21 = sub_2331E3FA4(v20);
    if ((v22 & 1) != 0)
    {
      sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v30);
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
    }

  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v31 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v29[0];
      v24 = v29[1];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      result = type metadata accessor for CredentialCenterKey();
      v25 = (_QWORD *)(a2 + *(int *)(result + 20));
      *v25 = v23;
      v25[1] = v24;
      return result;
    }
  }
  else
  {
    sub_233168608((uint64_t)&v30, &qword_254245020);
  }
  sub_2334AE768();
  swift_allocError();
  *(_QWORD *)v26 = v19;
  *(_QWORD *)(v26 + 8) = 0;
  *(_BYTE *)(v26 + 16) = 0;
  v27 = v19;
  swift_willThrow();
  v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(a2, v7);
}

uint64_t CredentialCenterKeyVault.key(with:)@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t inited;
  void **v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  const __CFDictionary *v31;
  OSStatus v32;
  uint64_t v33;
  uint64_t v34;
  CFStringRef v35;
  __CFString *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  CFTypeRef result[47];

  result[45] = *(CFTypeRef *)MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x24BDE9220];
  *(_OWORD *)(inited + 16) = xmmword_233629CC0;
  v48 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v4 = *MEMORY[0x24BDE9230];
  v46 = (void *)*MEMORY[0x24BDE9230];
  type metadata accessor for CFString(0);
  v5 = (void **)MEMORY[0x24BDE8F50];
  *(_QWORD *)(inited + 40) = v4;
  v47 = *v5;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v47;
  v7 = v1[3];
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v1[2];
  *(_QWORD *)(inited + 88) = v7;
  v9 = (void *)*MEMORY[0x24BDE9128];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  v10 = v1[4];
  v11 = v1[5];
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = v11;
  v12 = (void *)*MEMORY[0x24BDE9140];
  *(_QWORD *)(inited + 144) = v8;
  *(_QWORD *)(inited + 152) = v12;
  v13 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 160) = 1;
  v14 = (void *)*MEMORY[0x24BDE93B0];
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v14;
  v15 = (void *)*MEMORY[0x24BDE93C0];
  *(_QWORD *)(inited + 200) = *MEMORY[0x24BDE93C0];
  v16 = (void *)*MEMORY[0x24BDE94C8];
  *(_QWORD *)(inited + 224) = v6;
  *(_QWORD *)(inited + 232) = v16;
  *(_BYTE *)(inited + 240) = 1;
  v17 = (void *)*MEMORY[0x24BDE94C0];
  *(_QWORD *)(inited + 264) = v13;
  *(_QWORD *)(inited + 272) = v17;
  *(_BYTE *)(inited + 280) = 1;
  v18 = (void *)*MEMORY[0x24BDE8FA8];
  *(_QWORD *)(inited + 304) = v13;
  *(_QWORD *)(inited + 312) = v18;
  v19 = v48;
  v20 = v46;
  v21 = v47;
  swift_bridgeObjectRetain();
  v22 = v9;
  swift_bridgeObjectRetain();
  v23 = v12;
  v24 = v14;
  v25 = v15;
  v26 = v16;
  v27 = v17;
  v28 = v18;
  v29 = sub_23361D64C();
  *(_QWORD *)(inited + 344) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 320) = v29;
  *(_QWORD *)(inited + 328) = v30;
  sub_23315F804(inited);
  result[0] = 0;
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v31 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v32 = SecItemCopyMatching(v31, result);

  if (v32 == -25300)
  {
    v34 = type metadata accessor for CredentialCenterKey();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 1, 1, v34);
    return swift_unknownObjectRelease();
  }
  if (v32)
  {
    v35 = SecCopyErrorMessageString(v32, 0);
    if (v35)
    {
      v36 = (__CFString *)v35;
      v37 = sub_23361E150();
      v39 = v38;

    }
    else
    {
      v37 = sub_23361F1D0();
      v39 = v42;
    }
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v40 = v37;
    v41 = 2;
    goto LABEL_14;
  }
  if (!result[0]
    || (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_256052220),
        (swift_dynamicCast() & 1) == 0))
  {
    sub_2334AE768();
    swift_allocError();
    *(_QWORD *)v40 = 0xD000000000000025;
    v39 = 0x80000002336784F0;
    v41 = 1;
LABEL_14:
    *(_QWORD *)(v40 + 8) = v39;
    *(_BYTE *)(v40 + 16) = v41;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  sub_2334AE7AC(v49, a1);
  if (!v45)
  {
    v33 = type metadata accessor for CredentialCenterKey();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 0, 1, v33);
  }
  return swift_unknownObjectRelease();
}

uint64_t CredentialCenterKey.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD v11[4];

  v2 = sub_23361DEB0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23361DE98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D694();
  sub_23361DEA4();
  sub_23361DE8C();
  sub_23361DE68();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v7 = v11[2];
  v8 = v11[3];
  result = type metadata accessor for CredentialCenterKey();
  v10 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v10 = v7;
  v10[1] = v8;
  return result;
}

uint64_t CredentialCenterKeyVault.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CredentialCenterKeyVault.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2334AF054()
{
  return CredentialCenterKeyVault.keys()();
}

void sub_2334AF074(uint64_t a1@<X8>)
{
  CredentialCenterKeyVault.currentKey()(a1);
}

uint64_t sub_2334AF094@<X0>(uint64_t a1@<X8>)
{
  return CredentialCenterKeyVault.key(with:)(a1);
}

uint64_t CredentialCenterKey.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CredentialCenterKey.symmetricKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for CredentialCenterKey();
  sub_2331D1374(*(_QWORD *)(v0 + *(int *)(v1 + 20)), *(_QWORD *)(v0 + *(int *)(v1 + 20) + 8));
  return sub_23361DE80();
}

uint64_t CredentialCenterKey.hash(into:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CredentialCenterKey() + 20));
  v2 = *v1;
  v3 = v1[1];
  sub_2331D1374(*v1, v3);
  sub_23361D3D0();
  return sub_23316BEA4(v2, v3);
}

void static CredentialCenterKey.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;

  if ((sub_23361D670() & 1) != 0)
  {
    v2 = *(int *)(type metadata accessor for CredentialCenterKey() + 20);
    sub_2334C71D4(*(_QWORD *)(a1 + v2), *(_QWORD *)(a1 + v2 + 8));
  }
}

uint64_t CredentialCenterKey.hashValue.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CredentialCenterKey() + 20));
  v2 = *v1;
  v3 = v1[1];
  sub_2331D1374(*v1, v3);
  sub_23361D3D0();
  sub_23316BEA4(v2, v3);
  return sub_23361F3A4();
}

uint64_t sub_2334AF2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  v3 = (uint64_t *)(v1 + *(int *)(a1 + 20));
  v4 = *v3;
  v5 = v3[1];
  sub_2331D1374(*v3, v5);
  sub_23361D3D0();
  sub_23316BEA4(v4, v5);
  return sub_23361F3A4();
}

uint64_t sub_2334AF384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  v4 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v5 = *v4;
  v6 = v4[1];
  sub_2331D1374(*v4, v6);
  sub_23361D3D0();
  return sub_23316BEA4(v5, v6);
}

uint64_t sub_2334AF414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  v4 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v5 = *v4;
  v6 = v4[1];
  sub_2331D1374(*v4, v6);
  sub_23361D3D0();
  sub_23316BEA4(v5, v6);
  return sub_23361F3A4();
}

void sub_2334AF4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_23361D670() & 1) != 0)
    sub_2334C71D4(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
}

uint64_t sub_2334AF518(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CredentialCenterKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2334AF554()
{
  return sub_233167C58(&qword_256052228, (uint64_t (*)(uint64_t))type metadata accessor for CredentialCenterKey, (uint64_t)&protocol conformance descriptor for CredentialCenterKey);
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.keys()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.currentKey()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CredentialCenterKeyVaultProtocol.key(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CredentialCenterKeyVault()
{
  return objc_opt_self();
}

uint64_t method lookup function for CredentialCenterKeyVault()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CredentialCenterKeyVault.__allocating_init(accessGroupName:serviceName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CredentialCenterKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_2331D1374(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
  }
  return a1;
}

uint64_t destroy for CredentialCenterKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_23316BEA4(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t initializeWithCopy for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_2331D1374(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  return a1;
}

uint64_t assignWithCopy for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_2331D1374(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_23316BEA4(v12, v13);
  return a1;
}

uint64_t initializeWithTake for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CredentialCenterKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_23316BEA4(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CredentialCenterKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334AF898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CredentialCenterKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334AF934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_2334AF9BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FinanceStore.setOrderNotificationsEnabled(_:for:)(char a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 24) = type metadata accessor for FinanceStore.Message();
  v5 = swift_task_alloc();
  v6 = *a2;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v3 + 64) = a2[3];
  return swift_task_switch();
}

uint64_t sub_2334AFAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 88);
  *(_QWORD *)v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v4 + 8) = v3;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = v5;
  swift_storeEnumTagMultiPayload();
  v8 = (uint64_t (*)(_QWORD))((char *)&dword_256044370 + dword_256044370);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_2334AFB50;
  return v8(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2334AFB50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2334AFBDC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void InternalAccount.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  char v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132[2];
  char v133;
  _QWORD v134[2];
  char v135;
  char v136;
  char v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;

  v112 = a2;
  v3 = type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v3);
  v114 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v109 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v100 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v115 = (uint64_t)&v100 - v14;
  v15 = sub_23361D6A0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v100 - v19;
  v21 = objc_msgSend(a1, sel_publicAccountObject);
  v22 = objc_msgSend(v21, "id");

  v110 = v20;
  sub_23361D67C();

  v23 = objc_msgSend(a1, sel_accountId);
  v24 = sub_23361E150();
  v26 = v25;

  v27 = objc_msgSend(a1, sel_institutionId);
  v28 = sub_23361E150();
  v30 = v29;

  *(_QWORD *)&v138 = v24;
  *((_QWORD *)&v138 + 1) = v26;
  v139 = v28;
  v140 = v30;
  v31 = objc_msgSend(a1, sel_consentID);
  v111 = v18;
  sub_23361D67C();

  v32 = objc_msgSend(a1, sel_fpanIds);
  v108 = sub_23361E3F0();

  v33 = objc_msgSend(a1, sel_externalAccountId);
  if (v33)
  {
    v34 = v33;
    v107 = sub_23361E150();
    v106 = v35;

  }
  else
  {
    v107 = 0;
    v106 = 0;
  }
  v36 = objc_msgSend(a1, sel_publicAccountObject);
  ManagedAccount.accountType.getter(&v137);

  v136 = v137;
  ManagedInternalAccount.accountNumber.getter((uint64_t)v134);
  v132[0] = v134[0];
  v132[1] = v134[1];
  v133 = v135;
  v37 = objc_msgSend(a1, sel_publicAccountObject);
  v38 = objc_msgSend(v37, sel_displayName);

  v105 = sub_23361E150();
  v104 = v39;

  v40 = objc_msgSend(a1, sel_publicAccountObject);
  v41 = objc_msgSend(v40, sel_accountDescription);

  if (v41)
  {
    v103 = sub_23361E150();
    v102 = v42;

  }
  else
  {
    v103 = 0;
    v102 = 0;
  }
  v113 = v7;
  ManagedInternalAccount.accountStatus.getter(&v131);
  v43 = objc_msgSend(a1, sel_publicAccountObject);
  v44 = objc_msgSend(v43, sel_currency);

  v101 = sub_23361E150();
  v100 = v45;

  v46 = objc_msgSend(a1, sel_publicAccountObject);
  v47 = objc_msgSend(v46, sel_creditLimitAmountValue);
  if (v47)
  {
    v48 = v47;
    objc_msgSend(v47, sel_decimalValue);
    v49 = v128;
    v50 = *((_QWORD *)&v127 + 1);
    v51 = v127;
    v52 = objc_msgSend(v46, sel_currency);
    v53 = sub_23361E150();
    v55 = v54;

  }
  else
  {

    v51 = 0;
    v50 = 0;
    v49 = 0;
    v53 = 0;
    v55 = 0;
  }
  *(_QWORD *)&v127 = v51;
  *((_QWORD *)&v127 + 1) = v50;
  v128 = v49;
  v129 = v53;
  v130 = v55;
  v56 = objc_msgSend(a1, sel_publicAccountObject);
  v57 = objc_msgSend(v56, sel_nextPaymentDate);

  if (v57)
  {
    sub_23361D5EC();

    v58 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v13, 0, 1, v58);
  }
  else
  {
    v59 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v13, 1, 1, v59);
  }
  sub_2331B05C8((uint64_t)v13, v115);
  v60 = objc_msgSend(a1, sel_publicAccountObject);
  v61 = objc_msgSend(v60, sel_minimumPaymentAmountValue);
  if (v61)
  {
    v62 = v61;
    objc_msgSend(v61, sel_decimalValue);
    v63 = v124;
    v64 = *((_QWORD *)&v123 + 1);
    v65 = v123;
    v66 = objc_msgSend(v60, sel_currency);
    v67 = sub_23361E150();
    v69 = v68;

  }
  else
  {

    v65 = 0;
    v64 = 0;
    v63 = 0;
    v67 = 0;
    v69 = 0;
  }
  *(_QWORD *)&v123 = v65;
  *((_QWORD *)&v123 + 1) = v64;
  v124 = v63;
  v125 = v67;
  v126 = v69;
  v70 = objc_msgSend(a1, sel_publicAccountObject);
  v71 = objc_msgSend(v70, sel_overduePaymentAmountValue);
  if (v71)
  {
    v72 = v71;
    objc_msgSend(v71, sel_decimalValue);
    v73 = v120;
    v74 = *((_QWORD *)&v119 + 1);
    v75 = v119;
    v76 = objc_msgSend(v70, sel_currency);
    v77 = sub_23361E150();
    v79 = v78;

  }
  else
  {

    v75 = 0;
    v74 = 0;
    v73 = 0;
    v77 = 0;
    v79 = 0;
  }
  *(_QWORD *)&v119 = v75;
  *((_QWORD *)&v119 + 1) = v74;
  v120 = v73;
  v121 = v77;
  v122 = v79;
  v80 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (v80)
  {
    v81 = v80;
    v82 = (uint64_t)v113;
    InternalAccountBalance.init(_:)(v81, (uint64_t)v113);
    v83 = type metadata accessor for InternalAccountBalance(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);

  }
  else
  {
    v84 = type metadata accessor for InternalAccountBalance(0);
    v82 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v113, 1, 1, v84);
  }
  v85 = v114;
  Actions.init(_:)(objc_msgSend(a1, sel_actionsObject), v114);
  v86 = objc_msgSend(a1, sel_isAccountEnabled);
  v87 = objc_msgSend(a1, sel_isAccountMismatched);
  sub_2334B2D60(objc_msgSend(a1, sel_lastAccountRefreshFailureValue), &v118);
  sub_2334B2D60(objc_msgSend(a1, sel_lastTransactionsRefreshFailureValue), &v117);
  v88 = objc_msgSend(a1, sel_originTypeValue);
  if (v88 > 3)
  {
    __break(1u);
  }
  else
  {
    v116 = v88;
    v89 = objc_msgSend(a1, sel_publicAccountObject);
    v90 = objc_msgSend(v89, sel_institutionName);

    v91 = sub_23361E150();
    v93 = v92;

    v94 = objc_msgSend(a1, sel_thirdPartyShareable);
    v95 = objc_msgSend(a1, (SEL)&selRef_fqoid);
    v96 = objc_msgSend(v95, sel_openingDate);

    if (v96)
    {
      v97 = (uint64_t)v109;
      sub_23361D5EC();

      v98 = sub_23361D634();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 0, 1, v98);
    }
    else
    {
      v99 = sub_23361D634();
      v97 = (uint64_t)v109;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v109, 1, 1, v99);
    }
    InternalAccount.init(id:fullyQualifiedAccountIdentifier:consentID:fpanIds:externalAccountId:accountType:accountNumber:displayName:accountDescription:accountStatus:currency:creditLimit:nextPaymentDate:minimumPaymentAmount:overduePaymentAmount:accountBalance:actions:isAccountEnabled:isAccountMismatched:accountRefreshFailure:transactionsRefreshFailure:originType:institutionName:thirdPartyShareable:openingDate:)((uint64_t)v110, &v138, (uint64_t)v111, v108, v107, v106, &v136, v132, v112, v105, v104, v103, v102, &v131, v101, v100, &v127, v115, &v123,
      &v119,
      v82,
      v85,
      v86,
      v87,
      &v118,
      &v117,
      &v116,
      v91,
      v93,
      v94,
      v97);

  }
}

void sub_2334B0638(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_externalAccountId);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2334B069C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setExternalAccountId_);

}

void ManagedInternalAccount.fullyQualifiedAccountIdentifier.getter(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = objc_msgSend(v1, sel_accountId);
  v4 = sub_23361E150();
  v6 = v5;

  v7 = objc_msgSend(v1, sel_institutionId);
  v8 = sub_23361E150();
  v10 = v9;

  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v10;
}

void ManagedInternalAccount.id.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_publicAccountObject);
  v2 = objc_msgSend(v1, "id");

  sub_23361D67C();
}

void ManagedInternalAccount.accountType.getter(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_publicAccountObject);
  ManagedAccount.accountType.getter(a1);

}

void ManagedInternalAccount.accountStatus.getter(char *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_accountStatusValue);
  if (!v4)
  {
    v7 = 4;
    goto LABEL_5;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_integerValue);
  if ((unint64_t)v6 < 4)
  {
    v7 = (char)v6;

LABEL_5:
    *a1 = v7;
    return;
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_description);
  sub_23361E150();

  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361EF24();
  __break(1u);
}

void ManagedInternalAccount.accountNumber.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = v1;
  AccountNumberSchemeType.init(rawValue:)((Swift::Int16)objc_msgSend(v2, sel_accountNumberSchemeTypeValue));
  if (v8 == 6)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_accountNumberSchemeTypeValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361EF24();
    __break(1u);
  }
  else
  {
    v4 = objc_msgSend(v2, sel_accountNumberValue);
    v5 = sub_23361E150();
    v7 = v6;

    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = v8;
  }
}

uint64_t ManagedInternalAccount.displayName.getter()
{
  return sub_2334B2744((SEL *)&selRef_displayName);
}

uint64_t ManagedInternalAccount.accountDescription.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_publicAccountObject);
  v2 = objc_msgSend(v1, sel_accountDescription);

  if (!v2)
    return 0;
  v3 = sub_23361E150();

  return v3;
}

unint64_t ManagedInternalAccount.latestAccountBalanceObject.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v11;

  v1 = sub_23361D6A0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_managedObjectContext);
  if (!v5)
    return 0;
  v6 = v5;
  type metadata accessor for ManagedInternalAccountBalance();
  v7 = objc_msgSend(v0, sel_publicAccountObject);
  v8 = objc_msgSend(v7, "id");

  sub_23361D67C();
  v9 = static ManagedInternalAccountBalance.latestAccountBalance(forAccountID:in:)((uint64_t)v4, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

  return v9;
}

uint64_t ManagedInternalAccount.nextPaymentDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_publicAccountObject);
  v4 = objc_msgSend(v3, sel_nextPaymentDate);

  if (v4)
  {
    sub_23361D5EC();

    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void ManagedInternalAccount.creditLimit.getter(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v3 = objc_msgSend(v1, sel_publicAccountObject);
  v4 = objc_msgSend(v3, sel_creditLimitAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v15;
    v7 = v14;
    v8 = v13;
    v9 = objc_msgSend(v3, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {

    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *a1 = v8;
  a1[1] = v7;
  a1[2] = v6;
  a1[3] = v10;
  a1[4] = v12;
}

void ManagedInternalAccount.minimumPaymentAmount.getter(_QWORD *a1@<X8>)
{
  sub_2334B0FA8((SEL *)&selRef_minimumPaymentAmountValue, a1);
}

void ManagedInternalAccount.overduePaymentAmount.getter(_QWORD *a1@<X8>)
{
  sub_2334B0FA8((SEL *)&selRef_overduePaymentAmountValue, a1);
}

void sub_2334B0FA8(SEL *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;

  v5 = objc_msgSend(v2, sel_publicAccountObject);
  v6 = objc_msgSend(v5, *a1);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_decimalValue);
    v8 = v17;
    v9 = v16;
    v10 = v15;
    v11 = objc_msgSend(v5, sel_currency);
    v12 = sub_23361E150();
    v14 = v13;

  }
  else
  {

    v10 = 0;
    v9 = 0;
    v8 = 0;
    v12 = 0;
    v14 = 0;
  }
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v8;
  a2[3] = v12;
  a2[4] = v14;
}

id sub_2334B109C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_originTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2334B10CC(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

id sub_2334B10E0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_thirdPartyShareable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2334B1110(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThirdPartyShareable_, *a1);
}

void static ManagedInternalAccount.migrate(_:to:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_23361E12C();
  v9 = objc_msgSend(a2, sel_mutableSetValueForKeyPath_, v8);

  objc_msgSend(v9, sel_addObject_, a1);
  v10 = objc_msgSend(a2, "id");
  sub_23361D67C();

  v11 = (void *)sub_23361D658();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(a1, sel_setConsentID_, v11);

}

void ManagedInternalAccount.lastAccountRefreshFailure.setter(_BYTE *a1)
{
  sub_2334B2F3C(a1, (SEL *)&selRef_setLastAccountRefreshFailureValue_);
}

id ManagedInternalAccount.__allocating_init(_:consent:context:)(uint64_t a1, void *a2, void *a3)
{
  id v5;

  v5 = sub_2334B400C(a1, a2, a3);

  return v5;
}

{
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  id v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a2;
  v6 = sub_23361D634();
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InternalAccountBalance(0);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v56 = (uint64_t)&v54 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v60 = (uint64_t)&v54 - v16;
  v17 = (int *)type metadata accessor for InternalAccount();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a3);
  v24 = (void *)sub_23361E12C();
  objc_msgSend(v23, sel_setAccountId_, v24);

  v25 = (void *)sub_23361E12C();
  objc_msgSend(v23, sel_setInstitutionId_, v25);

  v26 = (void *)sub_23361D658();
  objc_msgSend(v23, sel_setConsentID_, v26);

  v27 = (void *)sub_23361E3D8();
  objc_msgSend(v23, sel_setFpanIds_, v27);

  if (*(_QWORD *)(a1 + v17[8] + 8))
  {
    swift_bridgeObjectRetain();
    v28 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v23, sel_setExternalAccountId_, v28);

  v29 = *(unsigned __int8 *)(a1 + v17[10] + 16);
  swift_bridgeObjectRetain();
  v30 = (void *)sub_23361E12C();
  objc_msgSend(v23, sel_setAccountNumberValue_, v30);

  objc_msgSend(v23, sel_setAccountNumberSchemeTypeValue_, v29);
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedAccountActions();
  sub_2331684BC(a1 + v17[20], (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  v31 = a3;
  v32 = sub_2334E2C40((uint64_t)v22, (uint64_t)v31);

  objc_msgSend(v23, sel_setActionsObject_, v32);
  v33 = 0;
  if (*(_BYTE *)(a1 + v17[13]) != 4)
    v33 = (void *)sub_23361E618();
  objc_msgSend(v23, sel_setAccountStatusValue_, v33);

  objc_msgSend(v23, sel_setOriginTypeValue_, *(unsigned __int8 *)(a1 + v17[25]));
  objc_msgSend(v23, sel_setThirdPartyShareable_, *(unsigned __int8 *)(a1 + v17[27]));
  objc_msgSend(v23, sel_setIsAccountEnabled_, *(unsigned __int8 *)(a1 + v17[21]));
  type metadata accessor for ManagedAccount();
  sub_2331684BC(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  v34 = v31;
  v35 = v61;
  v36 = ManagedAccount.__allocating_init(_:consent:context:)((uint64_t)v19, v35, v34);
  objc_msgSend(v23, sel_setPublicAccountObject_, v36);

  v37 = (void *)sub_23361E12C();
  v38 = objc_msgSend(v35, sel_mutableSetValueForKeyPath_, v37);

  objc_msgSend(v38, sel_addObject_, v23);
  sub_2331686A0(a1 + v17[19], (uint64_t)v10, &qword_256042590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v10, 1, v63) == 1)
  {

    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    sub_233168608((uint64_t)v10, &qword_256042590);
  }
  else
  {
    v39 = v60;
    sub_233168580((uint64_t)v10, v60, type metadata accessor for InternalAccountBalance);
    v40 = v39;
    v41 = v56;
    sub_2331684BC(v40, v56, type metadata accessor for InternalAccountBalance);
    v42 = v23;
    v43 = v34;
    v44 = v57;
    sub_23361D5F8();
    v45 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v43);
    v46 = (void *)sub_23361D5B0();
    objc_msgSend(v45, sel_setLastUpdatedAt_, v46);

    type metadata accessor for ManagedAccountBalance();
    v47 = v55;
    sub_2331684BC(v41, v55, type metadata accessor for InternalAccountBalance);
    v48 = v42;
    v49 = v43;
    v50 = sub_23319E070(v47, v48, (uint64_t)v49);

    objc_msgSend(v45, sel_setPublicAccountBalanceObject_, v50);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
    sub_233168500(v41, type metadata accessor for InternalAccountBalance);

    v51 = (void *)sub_23361E12C();
    v52 = objc_msgSend(v48, sel_mutableSetValueForKeyPath_, v51);

    objc_msgSend(v52, sel_addObject_, v45);
    sub_233168500(v60, type metadata accessor for InternalAccountBalance);
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  }
  return v23;
}

id ManagedInternalAccount.__allocating_init(_:consent:context:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void (*v25)(_BYTE *, uint64_t);
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  id v53;
  id v54;
  _BYTE *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(_BYTE *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  id v64;
  void (*v65)(_BYTE *, uint64_t);
  _BYTE v67[12];
  int v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v4 = v3;
  v76 = sub_23361D634();
  v78 = *(_QWORD *)(v76 - 8);
  v8 = MEMORY[0x24BDAC7A8](v76);
  v75 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v74 = &v67[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v77 = &v67[-v12];
  v13 = sub_23361D6A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v67[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  v73 = a1;
  v21 = objc_msgSend(a1, sel_accountIdentifier);
  if (!v21)
  {
    sub_23361E150();
    v21 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v20, sel_setAccountId_, v21);

  Institution.init(_:)(objc_msgSend(a2, sel_institutionObject), (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v19, type metadata accessor for Institution);
  v22 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setInstitutionId_, v22);

  v23 = objc_msgSend(a2, "id");
  sub_23361D67C();

  v24 = (void *)sub_23361D658();
  v25 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
  v25(v16, v13);
  objc_msgSend(v20, sel_setConsentID_, v24);

  type metadata accessor for ManagedAccountActions();
  v26 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
  objc_msgSend(v20, sel_setActionsObject_, v26);

  v27 = objc_allocWithZone((Class)type metadata accessor for ManagedAccount());
  v28 = v73;
  v29 = a2;
  v30 = a3;
  v31 = objc_msgSend(v27, sel_initWithContext_, v30);
  sub_23361D694();
  v32 = (void *)sub_23361D658();
  v25(v16, v13);
  objc_msgSend(v31, sel_setId_, v32);

  sub_2331BD3F4(v31, v29, v28);
  objc_msgSend(v20, sel_setPublicAccountObject_, v31);

  objc_msgSend(v20, sel_setIsAccountSyncable_, 0);
  _s10FinanceKit22ManagedInternalAccountC6update_7consent09withAppleE0yAC_AA0C7ConsentCSo07FKAppleE0CtFZ_0(v20, v29, v28);
  v33 = (void *)sub_23361E12C();
  v73 = v29;
  v34 = objc_msgSend(v29, sel_mutableSetValueForKeyPath_, v33);

  objc_msgSend(v34, sel_addObject_, v20);
  type metadata accessor for ManagedInternalAccountBalance();
  v35 = v20;
  v36 = v28;
  v71 = v30;
  v37 = sub_2331985F8(v36, v35, v71);
  v38 = (void *)sub_23361E12C();
  v72 = v35;
  v39 = objc_msgSend(v35, sel_mutableSetValueForKeyPath_, v38);

  objc_msgSend(v39, sel_addObject_, v37);
  v70 = v37;
  v40 = objc_msgSend(v37, sel_lastUpdatedAt);
  v41 = v77;
  sub_23361D5EC();

  if (qword_254246F38 != -1)
    swift_once();
  v42 = sub_23361DB80();
  __swift_project_value_buffer(v42, (uint64_t)qword_254246F20);
  v43 = v78;
  v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v78 + 16);
  v45 = v74;
  v46 = v76;
  v44(v74, v41, v76);
  v47 = v75;
  v44(v75, v41, v46);
  v48 = v36;
  v49 = sub_23361DB68();
  v50 = sub_23361E780();
  v51 = v50;
  if (os_log_type_enabled(v49, v50))
  {
    v52 = swift_slowAlloc();
    v69 = swift_slowAlloc();
    v80 = v69;
    *(_DWORD *)v52 = 136315650;
    v53 = objc_msgSend(v48, sel_accountIdentifier);
    v68 = v51;
    v54 = v53;
    v55 = v47;
    v56 = sub_23361E150();
    v58 = v57;

    v79 = sub_233164DCC(v56, v58, &v80);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    sub_233167C58((unint64_t *)&qword_256045060, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v59 = sub_23361F1D0();
    v79 = sub_233164DCC(v59, v60, &v80);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    v61 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
    v61(v45, v46);
    *(_WORD *)(v52 + 22) = 2048;
    sub_23361D5D4();
    v79 = v62;
    sub_23361EBC4();
    v61(v55, v46);
    _os_log_impl(&dword_233151000, v49, (os_log_type_t)v68, "Inserted new balance for account: %s lastUpdateAt: %s (%f ms)", (uint8_t *)v52, 0x20u);
    v63 = v69;
    swift_arrayDestroy();
    MEMORY[0x234934590](v63, -1, -1);
    MEMORY[0x234934590](v52, -1, -1);

    v64 = v72;
    v61(v77, v46);
  }
  else
  {

    v64 = v72;
    v65 = *(void (**)(_BYTE *, uint64_t))(v43 + 8);
    v65(v47, v46);
    v65(v45, v46);

    v65(v41, v46);
  }
  return v64;
}

void ManagedInternalAccount.setTransactionRelationship(_:)(uint64_t a1)
{
  sub_2334B1AC0(a1);
}

void ManagedInternalAccount.accountMatchingType.setter(_BYTE *a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  if (*a1 == 5)
    v2 = 0;
  else
    v2 = sub_23361E618();
  v3 = (id)v2;
  objc_msgSend(v1, sel_setAccountMatchingTypeValue_);

}

void ManagedInternalAccount.setAccountBalanceRelationship(_:)(uint64_t a1)
{
  sub_2334B1AC0(a1);
}

void sub_2334B1AC0(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v1, sel_mutableSetValueForKeyPath_, v3);

  objc_msgSend(v4, sel_addObject_, a1);
}

void sub_2334B1B3C(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_consentID);
  sub_23361D67C();

}

void sub_2334B1B88(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_fpanIds);
  v4 = sub_23361E3F0();

  *a2 = v4;
}

void sub_2334B1BE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_accountPaymentInformationData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361D3C4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2334B1C44(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_23361D3AC();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountPaymentInformationData_);

}

id ManagedInternalAccount.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccount.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccount.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInternalAccount.validateForInsert()()
{
  sub_2334B1E94((SEL *)&selRef_validateForInsert_);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInternalAccount.validateForUpdate()()
{
  sub_2334B1E94((SEL *)&selRef_validateForUpdate_);
}

id sub_2334B1E94(SEL *a1)
{
  void *v1;
  id v3;
  id result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v12.super_class = (Class)swift_getObjectType();
  v13[0] = 0;
  v12.receiver = v1;
  if (objc_msgSendSuper2(&v12, *a1, v13))
  {
    v3 = v13[0];
    result = objc_msgSend(v1, sel_originTypeValue);
    if (result <= 3)
      return result;
    v5 = v1;
    v6 = objc_msgSend(v5, sel_description);
    v7 = sub_23361E150();
    v9 = v8;

    sub_23319F600();
    swift_allocError();
    *(_QWORD *)v10 = v7;
    *(_QWORD *)(v10 + 8) = v9;
    *(_OWORD *)(v10 + 16) = xmmword_233651550;
    *(_BYTE *)(v10 + 32) = 0;
  }
  else
  {
    v11 = v13[0];
    sub_23361D1B4();

  }
  return (id)swift_willThrow();
}

uint64_t ManagedInternalAccount.accountNumber.setter(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccountNumberValue_, v3);

  objc_msgSend(v1, sel_setAccountNumberSchemeTypeValue_, v2);
  return swift_bridgeObjectRelease();
}

id ManagedInternalAccount.originType.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setOriginTypeValue_, *a1);
}

uint64_t ManagedInternalAccount.currency.getter()
{
  return sub_2334B2744((SEL *)&selRef_currency);
}

uint64_t sub_2334B2744(SEL *a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;

  v3 = objc_msgSend(v1, sel_publicAccountObject);
  v4 = objc_msgSend(v3, *a1);

  v5 = sub_23361E150();
  return v5;
}

void ManagedInternalAccount.latestAccountBalance.getter(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (v2)
  {
    v5 = v2;
    InternalAccountBalance.init(_:)(v5, a1);
    v3 = type metadata accessor for InternalAccountBalance(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);

  }
  else
  {
    v4 = type metadata accessor for InternalAccountBalance(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

void ManagedInternalAccount.actions.getter(uint64_t a1@<X8>)
{
  void *v1;

  Actions.init(_:)(objc_msgSend(v1, sel_actionsObject), a1);
}

void ManagedInternalAccount.lastAccountRefreshFailure.getter(char *a1@<X8>)
{
  sub_2334B2898((SEL *)&selRef_lastAccountRefreshFailureValue, a1);
}

void ManagedInternalAccount.lastTransactionsRefreshFailure.getter(char *a1@<X8>)
{
  sub_2334B2898((SEL *)&selRef_lastTransactionsRefreshFailureValue, a1);
}

void sub_2334B2898(SEL *a1@<X0>, char *a2@<X8>)
{
  void *v2;

  sub_2334B2D60(objc_msgSend(v2, *a1), a2);
}

id ManagedInternalAccount.originType.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_originTypeValue);
  if (result > 3)
    __break(1u);
  else
    *a1 = (_BYTE)result;
  return result;
}

id FKAccount.init(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  id v6;
  uint64_t v8;

  v2 = type metadata accessor for InternalAccount();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  InternalAccount.init(_:)(v5, (uint64_t)v4);
  v6 = FKAccount.init(from:)(v4);

  return v6;
}

void sub_2334B2988(_BYTE *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1 == 4)
    v3 = 0;
  else
    v3 = sub_23361E618();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountStatusValue_);

}

uint64_t sub_2334B29E0(uint64_t a1, void **a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v3, sel_setAccountNumberValue_, v4);

  objc_msgSend(v3, sel_setAccountNumberSchemeTypeValue_, v2);
  return swift_bridgeObjectRelease();
}

uint64_t (*ManagedInternalAccount.accountNumber.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  ManagedInternalAccount.accountNumber.getter(a1);
  return sub_2334B2A88;
}

uint64_t sub_2334B2A88(uint64_t a1, char a2)
{
  uint64_t v4;
  void *v5;
  void *v6;

  v4 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_23361E12C();
  v6 = *(void **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v6, sel_setAccountNumberValue_, v5);

    objc_msgSend(v6, sel_setAccountNumberSchemeTypeValue_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccountNumberValue_, v5);

    objc_msgSend(v6, sel_setAccountNumberSchemeTypeValue_, v4);
  }
  return swift_bridgeObjectRelease();
}

void ManagedInternalAccount.accountMatchingType.getter(char *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_accountMatchingTypeValue);
  if (!v4)
  {
    v7 = 5;
    goto LABEL_5;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_integerValue);
  if ((unint64_t)v6 < 5)
  {
    v7 = (char)v6;

LABEL_5:
    *a1 = v7;
    return;
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_description);
  sub_23361E150();

  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361EF24();
  __break(1u);
}

void sub_2334B2C78(_BYTE *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1 == 5)
    v3 = 0;
  else
    v3 = sub_23361E618();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountMatchingTypeValue_);

}

void (*ManagedInternalAccount.accountMatchingType.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedInternalAccount.accountMatchingType.getter((char *)(a1 + 8));
  return sub_2334B2D04;
}

void sub_2334B2D04(uint64_t a1)
{
  uint64_t v2;
  id v3;

  if (*(_BYTE *)(a1 + 8) == 5)
    v2 = 0;
  else
    v2 = sub_23361E618();
  v3 = (id)v2;
  objc_msgSend(*(id *)a1, sel_setAccountMatchingTypeValue_);

}

void sub_2334B2D60(void *a1@<X0>, char *a2@<X8>)
{
  id v3;
  id v4;
  char v5;

  if (!a1)
  {
    v5 = 2;
LABEL_8:
    *a2 = v5;
    return;
  }
  v3 = a1;
  v4 = objc_msgSend(v3, sel_integerValue);
  if (!v4)
  {
    v5 = 0;
LABEL_7:

    goto LABEL_8;
  }
  if (v4 == (id)1)
  {
    v5 = 1;
    goto LABEL_7;
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_integerValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361EF24();
  __break(1u);
}

void (*ManagedInternalAccount.lastAccountRefreshFailure.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  sub_2334B2D60(objc_msgSend(v1, sel_lastAccountRefreshFailureValue), (char *)(a1 + 8));
  return sub_2334B2EC8;
}

void sub_2334B2EC8(uint64_t a1, uint64_t a2)
{
  sub_2334B2FEC(a1, a2, (SEL *)&selRef_setLastAccountRefreshFailureValue_);
}

void sub_2334B2ED4(_BYTE *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*a1 == 2)
    v7 = 0;
  else
    v7 = sub_23361E618();
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

void ManagedInternalAccount.lastTransactionsRefreshFailure.setter(_BYTE *a1)
{
  sub_2334B2F3C(a1, (SEL *)&selRef_setLastTransactionsRefreshFailureValue_);
}

void sub_2334B2F3C(_BYTE *a1, SEL *a2)
{
  void *v2;
  uint64_t v4;
  id v5;

  if (*a1 == 2)
    v4 = 0;
  else
    v4 = sub_23361E618();
  v5 = (id)v4;
  objc_msgSend(v2, *a2);

}

void (*ManagedInternalAccount.lastTransactionsRefreshFailure.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  sub_2334B2D60(objc_msgSend(v1, sel_lastTransactionsRefreshFailureValue), (char *)(a1 + 8));
  return sub_2334B2FE0;
}

void sub_2334B2FE0(uint64_t a1, uint64_t a2)
{
  sub_2334B2FEC(a1, a2, (SEL *)&selRef_setLastTransactionsRefreshFailureValue_);
}

void sub_2334B2FEC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  id v6;

  if (*(_BYTE *)(a1 + 8) == 2)
    v5 = 0;
  else
    v5 = sub_23361E618();
  v6 = (id)v5;
  objc_msgSend(*(id *)a1, *a3);

}

id (*ManagedInternalAccount.originType.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  _BYTE *v2;
  id (*result)(uint64_t);

  *a1 = v1;
  v2 = a1 + 1;
  result = (id (*)(uint64_t))objc_msgSend(v1, sel_originTypeValue);
  if (result > 3)
  {
    __break(1u);
  }
  else
  {
    *v2 = (_BYTE)result;
    return sub_2334B3098;
  }
  return result;
}

id sub_2334B3098(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setOriginTypeValue_, *(unsigned __int8 *)(a1 + 8));
}

void ManagedInternalAccount.transactions.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v1 = type metadata accessor for InternalTransaction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v21 - v6;
  v7 = sub_23361D1CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v0, sel_transactionObjects);
  v12 = (uint64_t)objc_msgSend(v11, sel_count);
  v30 = MEMORY[0x24BEE4AF8];
  sub_233273B70(0, v12 & ~(v12 >> 63), 0);
  v13 = v11;
  sub_23361E9B4();

  if (v12 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  v22 = v13;
  v23 = v8;
  if (v12)
  {
    sub_233167C58((unint64_t *)&qword_256049B58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
    do
    {
      sub_23361EBB8();
      if (!v29)
        goto LABEL_18;
      sub_233168350((uint64_t)&v28, (uint64_t)&v26);
      type metadata accessor for ManagedInternalTransaction();
      swift_dynamicCast();
      InternalTransaction.init(_:)(v25, (uint64_t)v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
      v14 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273B70(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v30;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_233273B70(v15 > 1, v16 + 1, 1);
        v14 = v30;
      }
      *(_QWORD *)(v14 + 16) = v16 + 1;
      sub_233168580((uint64_t)v5, v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v16, type metadata accessor for InternalTransaction);
    }
    while (--v12);
  }
  sub_233167C58((unint64_t *)&qword_256049B58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  v17 = (uint64_t)v24;
  while (v27)
  {
    sub_2331683D0(&v26, &v28);
    sub_233168350((uint64_t)&v28, (uint64_t)&v26);
    type metadata accessor for ManagedInternalTransaction();
    swift_dynamicCast();
    InternalTransaction.init(_:)(v25, v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
    v18 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_233273B70(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v30;
    }
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_233273B70(v19 > 1, v20 + 1, 1);
      v18 = v30;
    }
    *(_QWORD *)(v18 + 16) = v20 + 1;
    sub_233168580(v17, v18+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v20, type metadata accessor for InternalTransaction);
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  sub_233168608((uint64_t)&v26, &qword_254245020);

}

uint64_t static ManagedInternalAccount.entityName.getter()
{
  return 0x6C616E7265746E49;
}

void sub_2334B34AC()
{
  qword_2560522C8 = MEMORY[0x24BEE4B00];
}

uint64_t static ManagedInternalAccount.mappedKeyPaths.getter()
{
  if (qword_256041D28 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ManagedInternalAccount.mappedKeyPaths.setter(uint64_t a1)
{
  if (qword_256041D28 != -1)
    swift_once();
  swift_beginAccess();
  qword_2560522C8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ManagedInternalAccount.mappedKeyPaths.modify())()
{
  if (qword_256041D28 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2334B360C()
{
  return 0x6C616E7265746E49;
}

uint64_t sub_2334B3630()
{
  if (qword_256041D28 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void _s10FinanceKit22ManagedInternalAccountC6update_4withyAC_AA0cE5MatchCtFZ_0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;

  v4 = sub_23361D634();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_accountId);
  v13 = sub_23361E150();
  v15 = v14;

  v16 = objc_msgSend(a2, sel_accountID);
  v17 = sub_23361E150();
  v19 = v18;

  if (v13 == v17 && v15 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }
  v21 = objc_msgSend(a1, sel_institutionId);
  v22 = sub_23361E150();
  v24 = v23;

  v25 = objc_msgSend(a2, sel_institutionID);
  v26 = sub_23361E150();
  v28 = v27;

  if (v22 != v26 || v24 != v28)
  {
    v29 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_9;
LABEL_16:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  objc_msgSend(a1, sel_setAccountMatchObject_, a2);
  v30 = objc_msgSend(a2, sel_fpanID);
  objc_msgSend(a1, sel_setExternalAccountId_, v30);

  ManagedAccountMatch.matchingType.getter(&v41);
  v31 = (void *)sub_23361E618();
  objc_msgSend(a1, sel_setAccountMatchingTypeValue_, v31);

  objc_msgSend(a1, sel_setIsAccountMismatched_, objc_msgSend(a2, sel_isMismatched));
  v32 = objc_msgSend(a1, sel_earliestAccountValidationStartDate);
  if (v32)
  {
    v33 = v32;
    sub_23361D5EC();

    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v11, v8, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v4) != 1)
    {
      sub_233168608((uint64_t)v11, (uint64_t *)&unk_254247DA0);
      return;
    }
  }
  else
  {
    v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v11, 1, 1, v4);
  }
  sub_233168608((uint64_t)v11, (uint64_t *)&unk_254247DA0);
  v35 = v39;
  sub_23361D5F8();
  Date.advancedByDays(_:)(1, (uint64_t)v8);
  v36 = *(void (**)(char *, uint64_t))(v34 + 8);
  v36(v35, v4);
  v37 = (void *)sub_23361D5B0();
  v36(v8, v4);
  objc_msgSend(a1, sel_setEarliestAccountValidationStartDate_, v37);

}

void _s10FinanceKit22ManagedInternalAccountC6update_7consent09withAppleE0yAC_AA0C7ConsentCSo07FKAppleE0CtFZ_0(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v5 = a3;
  v6 = objc_msgSend(v5, sel_accountIdentifier);
  sub_23361E150();

  swift_bridgeObjectRetain();
  v7 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberValue_, v7);

  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, 5);
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, 5);
  objc_msgSend(v5, sel_status);
  v8 = (void *)sub_23361E618();
  objc_msgSend(a1, sel_setAccountStatusValue_, v8);

  v9 = objc_msgSend(v5, sel_type);
  if ((unint64_t)v9 >= 3)
  {
    sub_23361EF24();
    __break(1u);
  }
  else
  {
    objc_msgSend(a1, sel_setOriginTypeValue_, ((_BYTE)v9 + 1));
    objc_msgSend(a1, sel_setThirdPartyShareable_, 1);
    v10 = objc_msgSend(a1, sel_publicAccountObject);
    sub_2331BD3F4(v10, a2, v5);

  }
}

uint64_t _s10FinanceKit22ManagedInternalAccountC6update_7consent07withRawE0yAC_AA0C7ConsentCAA0I15BankConnectDataO0E0OtFZ_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char v35;

  v33 = a2;
  v5 = type metadata accessor for RawBankConnectData.Actions();
  MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RawBankConnectData.Account(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  RawBankConnectData.Account.fpanIds.getter();
  v17 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setFpanIds_, v17);

  sub_2331684BC(a3, (uint64_t)v16, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v16, (uint64_t)v8, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v19 = v8[40];
    swift_bridgeObjectRetain();
    v20 = (uint64_t)v8;
  }
  else
  {
    v18 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v16, (uint64_t)v10, type metadata accessor for RawBankConnectData.AssetAccount);
    v19 = v10[40];
    swift_bridgeObjectRetain();
    v20 = (uint64_t)v10;
  }
  sub_233168500(v20, v18);
  swift_bridgeObjectRetain();
  v21 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccountNumberValue_, v21);

  objc_msgSend(a1, sel_setAccountNumberSchemeTypeValue_, (0x4030201uLL >> (8 * v19)) & 7);
  swift_bridgeObjectRelease();
  RawBankConnectData.Account.accountStatus.getter(&v35);
  if (v35 == 4)
    v22 = 0;
  else
    v22 = (void *)sub_23361E618();
  objc_msgSend(a1, sel_setAccountStatusValue_, v22);

  sub_2331684BC(a3, (uint64_t)v14, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v14, (uint64_t)v8, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v24 = v8[*(int *)(v32 + 64)];
    v25 = (uint64_t)v8;
  }
  else
  {
    v23 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v14, (uint64_t)v10, type metadata accessor for RawBankConnectData.AssetAccount);
    v24 = v10[*(int *)(v31 + 48)];
    v25 = (uint64_t)v10;
  }
  sub_233168500(v25, v23);
  objc_msgSend(a1, sel_setThirdPartyShareable_, v24);
  v26 = objc_msgSend(a1, sel_publicAccountObject);
  _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(v26, v33, a3);

  v27 = objc_msgSend(a1, sel_actionsObject);
  v28 = v34;
  RawBankConnectData.Account.actions.getter(v34);
  _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(v27, v28);

  return sub_233168500(v28, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
}

id sub_2334B400C(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  uint64_t (*v30)(uint64_t);
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;

  v4 = v3;
  v77 = a2;
  v7 = sub_23361D634();
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_23361D6A0();
  v69 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v68);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v67);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RawBankConnectData.Account(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v71 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v72 = (uint64_t)&v67 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v67 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v67 - v26;
  v28 = objc_allocWithZone(v4);
  v70 = a3;
  v29 = objc_msgSend(v28, sel_initWithContext_, a3);
  v76 = a1;
  sub_2331684BC(a1, (uint64_t)v27, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v27, (uint64_t)v15, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v31 = v29;
    swift_bridgeObjectRetain();
    v32 = (uint64_t)v15;
  }
  else
  {
    v30 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v27, (uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    v33 = v29;
    swift_bridgeObjectRetain();
    v32 = (uint64_t)v17;
  }
  sub_233168500(v32, v30);
  v34 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAccountId_, v34);

  v35 = v77;
  Institution.init(_:)(objc_msgSend(v77, sel_institutionObject), (uint64_t)v13);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v13, type metadata accessor for Institution);
  v36 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setInstitutionId_, v36);

  v37 = objc_msgSend(v35, "id");
  sub_23361D67C();

  v38 = (void *)sub_23361D658();
  v39 = *(void (**)(char *, uint64_t))(v69 + 8);
  v39(v10, v78);
  objc_msgSend(v29, sel_setConsentID_, v38);

  objc_msgSend(v29, sel_setOriginTypeValue_, 0);
  v40 = v76;
  sub_2331684BC(v76, (uint64_t)v25, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v25, (uint64_t)v15, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v41 = v15[*(int *)(v68 + 64)];
    v42 = (uint64_t)v15;
    v43 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v25, (uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    v41 = v17[*(int *)(v67 + 48)];
    v42 = (uint64_t)v17;
    v43 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v42, v43);
  objc_msgSend(v29, sel_setThirdPartyShareable_, v41);
  type metadata accessor for ManagedAccountActions();
  v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v45 = v70;
  v46 = objc_msgSend(v44, sel_initWithContext_, v70);
  objc_msgSend(v29, sel_setActionsObject_, v46);

  v47 = v72;
  sub_2331684BC(v40, v72, type metadata accessor for RawBankConnectData.Account);
  v48 = objc_allocWithZone((Class)type metadata accessor for ManagedAccount());
  v49 = v77;
  v50 = v45;
  v51 = objc_msgSend(v48, (SEL)&selRef_factorPackId, v50);
  sub_23361D694();
  v52 = (void *)sub_23361D658();
  v39(v10, v78);
  objc_msgSend(v51, sel_setId_, v52);

  _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(v51, v49, v47);
  sub_233168500(v47, type metadata accessor for RawBankConnectData.Account);
  objc_msgSend(v29, sel_setPublicAccountObject_, v51);

  _s10FinanceKit22ManagedInternalAccountC6update_7consent07withRawE0yAC_AA0C7ConsentCAA0I15BankConnectDataO0E0OtFZ_0(v29, v49, v40);
  v53 = (void *)sub_23361E12C();
  v54 = objc_msgSend(v49, sel_mutableSetValueForKeyPath_, v53);

  objc_msgSend(v54, sel_addObject_, v29);
  sub_2331684BC(v40, v47, type metadata accessor for RawBankConnectData.Account);
  v55 = v29;
  v56 = v50;
  v57 = v73;
  sub_23361D5F8();
  v58 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v56);
  v59 = (void *)sub_23361D5B0();
  objc_msgSend(v58, sel_setLastUpdatedAt_, v59);

  type metadata accessor for ManagedAccountBalance();
  v60 = v71;
  sub_2331684BC(v47, v71, type metadata accessor for RawBankConnectData.Account);
  v61 = v55;
  v62 = v56;
  v63 = sub_23319E6C8(v60, v61, (uint64_t)v62);

  objc_msgSend(v58, sel_setPublicAccountBalanceObject_, v63);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v75);
  sub_233168500(v47, type metadata accessor for RawBankConnectData.Account);

  v64 = (void *)sub_23361E12C();
  v65 = objc_msgSend(v61, sel_mutableSetValueForKeyPath_, v64);

  objc_msgSend(v65, sel_addObject_, v58);
  sub_233168500(v40, type metadata accessor for RawBankConnectData.Account);
  return v61;
}

void sub_2334B4764(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_accountId, a2);
}

void sub_2334B4780(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setAccountId_);
}

char *keypath_get_selector_institutionId()
{
  return sel_institutionId;
}

void sub_2334B4798(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_institutionId, a2);
}

void sub_2334B47B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setInstitutionId_);
}

void sub_2334B47C4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D658();
  objc_msgSend(v2, sel_setConsentID_, v3);

}

char *keypath_get_selector_fpanIds()
{
  return sel_fpanIds;
}

void sub_2334B481C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E3D8();
  objc_msgSend(v2, sel_setFpanIds_, v3);

}

char *keypath_get_selector_externalAccountId()
{
  return sel_externalAccountId;
}

char *keypath_get_selector_accountNumberValue()
{
  return sel_accountNumberValue;
}

void sub_2334B488C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_accountNumberValue, a2);
}

void sub_2334B48A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setAccountNumberValue_);
}

char *keypath_get_selector_accountNumberSchemeTypeValue()
{
  return sel_accountNumberSchemeTypeValue;
}

id sub_2334B48C0@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountNumberSchemeTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2334B48F0(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountNumberSchemeTypeValue_, *a1);
}

char *keypath_get_selector_accountStatusValue()
{
  return sel_accountStatusValue;
}

id sub_2334B4910@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountStatusValue);
  *a2 = result;
  return result;
}

id sub_2334B4948(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountStatusValue_, *a1);
}

char *keypath_get_selector_isAccountEnabled()
{
  return sel_isAccountEnabled;
}

id sub_2334B4968@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isAccountEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2334B4998(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountEnabled_, *a1);
}

char *keypath_get_selector_isAccountSyncable()
{
  return sel_isAccountSyncable;
}

id sub_2334B49B8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isAccountSyncable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2334B49E8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountSyncable_, *a1);
}

char *keypath_get_selector_isAccountMismatched()
{
  return sel_isAccountMismatched;
}

id sub_2334B4A08@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isAccountMismatched);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2334B4A38(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAccountMismatched_, *a1);
}

char *keypath_get_selector_accountMatchingTypeValue()
{
  return sel_accountMatchingTypeValue;
}

id sub_2334B4A58@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountMatchingTypeValue);
  *a2 = result;
  return result;
}

id sub_2334B4A90(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountMatchingTypeValue_, *a1);
}

char *keypath_get_selector_lastAccountRefreshDate()
{
  return sel_lastAccountRefreshDate;
}

uint64_t sub_2334B4AB0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastAccountRefreshDate, a2);
}

void sub_2334B4ACC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastAccountRefreshDate_);
}

char *keypath_get_selector_lastPaymentInfoRefreshDate()
{
  return sel_lastPaymentInfoRefreshDate;
}

uint64_t sub_2334B4AF4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastPaymentInfoRefreshDate, a2);
}

void sub_2334B4B10(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastPaymentInfoRefreshDate_);
}

char *keypath_get_selector_lastTransactionsRefreshDate()
{
  return sel_lastTransactionsRefreshDate;
}

uint64_t sub_2334B4B38@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastTransactionsRefreshDate, a2);
}

void sub_2334B4B54(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastTransactionsRefreshDate_);
}

char *keypath_get_selector_accountRequestAttemptCount()
{
  return sel_accountRequestAttemptCount;
}

id sub_2334B4B7C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2334B4BAC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastAccountRequestAttemptDate()
{
  return sel_lastAccountRequestAttemptDate;
}

uint64_t sub_2334B4BCC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastAccountRequestAttemptDate, a2);
}

void sub_2334B4BE8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastAccountRequestAttemptDate_);
}

char *keypath_get_selector_earliestAccountRequestStartDate()
{
  return sel_earliestAccountRequestStartDate;
}

uint64_t sub_2334B4C10@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_earliestAccountRequestStartDate, a2);
}

void sub_2334B4C2C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setEarliestAccountRequestStartDate_);
}

char *keypath_get_selector_transactionsRequestAttemptCount()
{
  return sel_transactionsRequestAttemptCount;
}

id sub_2334B4C54@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_transactionsRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2334B4C84(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransactionsRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastTransactionsRequestAttemptDate()
{
  return sel_lastTransactionsRequestAttemptDate;
}

uint64_t sub_2334B4CA4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastTransactionsRequestAttemptDate, a2);
}

void sub_2334B4CC0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastTransactionsRequestAttemptDate_);
}

char *keypath_get_selector_earliestTransactionsRequestStartDate()
{
  return sel_earliestTransactionsRequestStartDate;
}

uint64_t sub_2334B4CE8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_earliestTransactionsRequestStartDate, a2);
}

void sub_2334B4D04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setEarliestTransactionsRequestStartDate_);
}

char *keypath_get_selector_historicalTransactionsRequestAttemptCount()
{
  return sel_historicalTransactionsRequestAttemptCount;
}

id sub_2334B4D2C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_historicalTransactionsRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2334B4D5C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHistoricalTransactionsRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastHistoricalTransactionsRequestAttemptDate()
{
  return sel_lastHistoricalTransactionsRequestAttemptDate;
}

uint64_t sub_2334B4D7C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastHistoricalTransactionsRequestAttemptDate, a2);
}

void sub_2334B4D98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setLastHistoricalTransactionsRequestAttemptDate_);
}

char *keypath_get_selector_earliestHistoricalTransactionsRequestStartDate()
{
  return sel_earliestHistoricalTransactionsRequestStartDate;
}

uint64_t sub_2334B4DC0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_earliestHistoricalTransactionsRequestStartDate, a2);
}

void sub_2334B4DDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setEarliestHistoricalTransactionsRequestStartDate_);
}

char *keypath_get_selector_oldestFetchedHistoricalTransactionTimestamp()
{
  return sel_oldestFetchedHistoricalTransactionTimestamp;
}

uint64_t sub_2334B4E04@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_oldestFetchedHistoricalTransactionTimestamp, a2);
}

void sub_2334B4E20(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setOldestFetchedHistoricalTransactionTimestamp_);
}

char *keypath_get_selector_earliestAccountValidationStartDate()
{
  return sel_earliestAccountValidationStartDate;
}

uint64_t sub_2334B4E48@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_earliestAccountValidationStartDate, a2);
}

void sub_2334B4E64(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301A58(a1, a2, a3, a4, (SEL *)&selRef_setEarliestAccountValidationStartDate_);
}

char *keypath_get_selector_actionsObject()
{
  return sel_actionsObject;
}

id sub_2334B4E8C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_actionsObject);
  *a2 = result;
  return result;
}

id sub_2334B4EC4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActionsObject_, *a1);
}

char *keypath_get_selector_accountPaymentInformationData()
{
  return sel_accountPaymentInformationData;
}

char *keypath_get_selector_accountMatchObject()
{
  return sel_accountMatchObject;
}

id sub_2334B4EF8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountMatchObject);
  *a2 = result;
  return result;
}

id sub_2334B4F30(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountMatchObject_, *a1);
}

char *keypath_get_selector_publicAccountObject()
{
  return sel_publicAccountObject;
}

id sub_2334B4F50@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_publicAccountObject);
  *a2 = result;
  return result;
}

id sub_2334B4F88(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPublicAccountObject_, *a1);
}

id sub_2334B4F9C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_transactionObjects);
  *a2 = result;
  return result;
}

id sub_2334B4FD4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransactionObjects_, *a1);
}

char *keypath_get_selector_accountBalanceObjects()
{
  return sel_accountBalanceObjects;
}

id sub_2334B4FF4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountBalanceObjects);
  *a2 = result;
  return result;
}

id sub_2334B502C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountBalanceObjects_, *a1);
}

id sub_2334B5040@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_originTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2334B5070(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

char *keypath_get_selector_labRequestObject()
{
  return sel_labRequestObject;
}

id sub_2334B5090@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_labRequestObject);
  *a2 = result;
  return result;
}

id sub_2334B50C8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLabRequestObject_, *a1);
}

id sub_2334B50DC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_thirdPartyShareable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2334B510C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThirdPartyShareable_, *a1);
}

void sub_2334B5120(_BYTE *a1@<X8>)
{
  char v2;

  ManagedInternalAccount.accountStatus.getter(&v2);
  *a1 = v2;
}

void sub_2334B515C(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  _QWORD v4[2];
  char v5;

  ManagedInternalAccount.accountNumber.getter((uint64_t)v4);
  v2 = v4[1];
  v3 = v5;
  *(_QWORD *)a1 = v4[0];
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
}

void sub_2334B51A0(_BYTE *a1@<X8>)
{
  char v2;

  ManagedInternalAccount.accountMatchingType.getter(&v2);
  *a1 = v2;
}

void sub_2334B51DC(id *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_75Tm(a1, (SEL *)&selRef_lastAccountRefreshFailureValue, a2);
}

void sub_2334B51E8(_BYTE *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334B2ED4(a1, a2, a3, a4, (SEL *)&selRef_setLastAccountRefreshFailureValue_);
}

void sub_2334B5204(id *a1@<X0>, _BYTE *a2@<X8>)
{
  keypath_get_75Tm(a1, (SEL *)&selRef_lastTransactionsRefreshFailureValue, a2);
}

void keypath_get_75Tm(id *a1@<X0>, SEL *a2@<X3>, _BYTE *a3@<X8>)
{
  char v4;

  sub_2334B2D60(objc_msgSend(*a1, *a2), &v4);
  *a3 = v4;
}

void sub_2334B5258(_BYTE *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334B2ED4(a1, a2, a3, a4, (SEL *)&selRef_setLastTransactionsRefreshFailureValue_);
}

id sub_2334B5274@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedInternalAccount.originType.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_2334B52AC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOriginTypeValue_, *a1);
}

uint64_t type metadata accessor for ManagedInternalAccount()
{
  return objc_opt_self();
}

uint64_t InstitutionPrivacyLabels.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t InstitutionPrivacyLabels.init(fromRawPrivacyLabels:)@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3;
  __int16 v4;
  char *v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (char *)(a1 + 32);
    do
    {
      v6 = *v5++;
      v4 |= word_23365182C[v6];
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t InstitutionPrivacyLabels.rawValue.getter()
{
  unsigned __int16 *v0;

  return *v0;
}

void static InstitutionPrivacyLabels.contactDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void static InstitutionPrivacyLabels.accountDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 2;
}

void static InstitutionPrivacyLabels.balances.getter(_WORD *a1@<X8>)
{
  *a1 = 4;
}

void static InstitutionPrivacyLabels.transactions.getter(_WORD *a1@<X8>)
{
  *a1 = 8;
}

void static InstitutionPrivacyLabels.paymentDetails.getter(_WORD *a1@<X8>)
{
  *a1 = 16;
}

void static InstitutionPrivacyLabels.scheduledPayments.getter(_WORD *a1@<X8>)
{
  *a1 = 32;
}

void static InstitutionPrivacyLabels.rewards.getter(_WORD *a1@<X8>)
{
  *a1 = 64;
}

void sub_2334B539C()
{
  word_2560522D0 = 127;
}

uint64_t static InstitutionPrivacyLabels.allLabels.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result;

  if (qword_256041D30 != -1)
    result = swift_once();
  *a1 = word_2560522D0;
  return result;
}

uint64_t sub_2334B5464()
{
  sub_2334B5510();
  return sub_23361E3A8();
}

uint64_t sub_2334B54C0()
{
  sub_2334B5510();
  return sub_23361E36C();
}

unint64_t sub_2334B5510()
{
  unint64_t result;

  result = qword_2560522D8;
  if (!qword_2560522D8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_2560522D8);
  }
  return result;
}

unint64_t sub_2334B5558()
{
  unint64_t result;

  result = qword_2560522E0;
  if (!qword_2560522E0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_2560522E0);
  }
  return result;
}

unint64_t sub_2334B55A0()
{
  unint64_t result;

  result = qword_2560522E8;
  if (!qword_2560522E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_2560522E8);
  }
  return result;
}

unint64_t sub_2334B55E8()
{
  unint64_t result;

  result = qword_2560522F0;
  if (!qword_2560522F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_2560522F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InstitutionPrivacyLabels()
{
  return &type metadata for InstitutionPrivacyLabels;
}

_QWORD *ManagedAccountPaymentInfoImporter.insertOrUpdateAccountPaymentInfo(_:with:context:key:)(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _QWORD *result;
  _OWORD v5[5];
  _OWORD *v6;

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v3 = a1[3];
  v5[2] = a1[2];
  v5[3] = v3;
  v5[4] = a1[4];
  result = sub_2334B5AD0((uint64_t *)v5);
  if (!v1)
  {
    v6 = v5;
    MEMORY[0x24BDAC7A8](result);
    sub_23361E960();
    swift_bridgeObjectRelease();
    return *(_QWORD **)&v5[0];
  }
  return result;
}

BOOL static ManagedAccountPaymentInfoImporterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ManagedAccountPaymentInfoImporterError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedAccountPaymentInfoImporterError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void sub_2334B57B8(uint64_t a1@<X5>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  type metadata accessor for ManagedInternalAccount();
  sub_23361E960();
  if (!v2)
  {
    v5 = sub_2333E28DC(a1);
    v7 = v6;
    v8 = (void *)sub_23361D3AC();
    objc_msgSend(v9, sel_setAccountPaymentInformationData_, v8);

    *a2 = v5;
    a2[1] = v7;
  }
}

uint64_t static ManagedAccountPaymentInfoImporter.existingEnabledAccount(with:context:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  type metadata accessor for ManagedInternalAccount();
  result = sub_23361E960();
  if (!v0)
    return v2;
  return result;
}

void sub_2334B58F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  void *v11;
  void *v12;
  _BYTE *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v19 = a1;
  *((_QWORD *)&v19 + 1) = a2;
  v20 = a3;
  v21 = a4;
  v11 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v19);
  if (!v5)
  {
    v12 = v11;
    if (v11)
    {
      if ((objc_msgSend(v11, sel_isAccountEnabled) & 1) != 0)
      {
        *a5 = v12;
      }
      else
      {
        if (qword_256041CA0 != -1)
          swift_once();
        v14 = sub_23361DB80();
        __swift_project_value_buffer(v14, (uint64_t)qword_2560495B0);
        v15 = sub_23361DB68();
        v16 = sub_23361E750();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v17 = 0;
          _os_log_impl(&dword_233151000, v15, v16, "Unable to update account, account is disabled", v17, 2u);
          MEMORY[0x234934590](v17, -1, -1);
        }

        sub_2334B5E98();
        swift_allocError();
        *v18 = 1;
        swift_willThrow();

      }
    }
    else
    {
      sub_2334B5E98();
      swift_allocError();
      *v13 = 0;
      swift_willThrow();
    }
  }
}

uint64_t ManagedAccountPaymentInfoImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedAccountPaymentInfoImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_2334B5AD0(uint64_t *a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v1 = a1[4];
  v2 = *(_OWORD *)(a1 + 5);
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  v24 = v2;
  if (!a1[1])
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!(_QWORD)v2)
      goto LABEL_12;
    goto LABEL_7;
  }
  v23 = *(_OWORD *)(a1 + 1);
  v25 = a1[9];
  v6 = a1[7];
  v7 = a1[8];
  v8 = *a1;
  v9 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_2334A5A10(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_2334A5A10((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v13 = &v10[5 * v12];
  v13[4] = v8;
  *(_OWORD *)(v13 + 5) = v23;
  v13[7] = v9;
  *((_BYTE *)v13 + 64) = 0;
  v4 = v7;
  v3 = v6;
  v5 = v25;
  if ((_QWORD)v24)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_2334A5A10(0, v10[2] + 1, 1, v10);
    v15 = v10[2];
    v14 = v10[3];
    v16 = v24;
    if (v15 >= v14 >> 1)
    {
      v22 = sub_2334A5A10((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
      v16 = v24;
      v10 = v22;
    }
    v10[2] = v15 + 1;
    v17 = &v10[5 * v15];
    v17[4] = v1;
    *(_OWORD *)(v17 + 5) = v16;
    v17[7] = v3;
    *((_BYTE *)v17 + 64) = 1;
  }
LABEL_12:
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_2334A5A10(0, v10[2] + 1, 1, v10);
    v19 = v10[2];
    v18 = v10[3];
    if (v19 >= v18 >> 1)
      v10 = sub_2334A5A10((_QWORD *)(v18 > 1), v19 + 1, 1, v10);
    v10[2] = v19 + 1;
    v20 = &v10[5 * v19];
    v20[4] = v4;
    v20[5] = v5;
    v20[6] = 0;
    v20[7] = 0;
    *((_BYTE *)v20 + 64) = 2;
  }
  return v10;
}

void sub_2334B5D20(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_2334B57B8(*(_QWORD *)(v1 + 56), a1);
}

void sub_2334B5D44(_QWORD *a1@<X8>)
{
  sub_2334B5EDC(a1);
}

unint64_t sub_2334B5D5C()
{
  unint64_t result;

  result = qword_2560522F8;
  if (!qword_2560522F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedAccountPaymentInfoImporterError, &type metadata for ManagedAccountPaymentInfoImporterError);
    atomic_store(result, (unint64_t *)&qword_2560522F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManagedAccountPaymentInfoImporterError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334B5DEC + 4 * byte_233651845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334B5E20 + 4 * byte_233651840[v4]))();
}

uint64_t sub_2334B5E20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334B5E28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334B5E30);
  return result;
}

uint64_t sub_2334B5E3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334B5E44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334B5E48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334B5E50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedAccountPaymentInfoImporterError()
{
  return &type metadata for ManagedAccountPaymentInfoImporterError;
}

uint64_t type metadata accessor for ManagedAccountPaymentInfoImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedAccountPaymentInfoImporter()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_2334B5E98()
{
  unint64_t result;

  result = qword_256052398;
  if (!qword_256052398)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedAccountPaymentInfoImporterError, &type metadata for ManagedAccountPaymentInfoImporterError);
    atomic_store(result, (unint64_t *)&qword_256052398);
  }
  return result;
}

void sub_2334B5EDC(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  sub_2334B58F8(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t BankConnectService.loadGrantedAccounts(forConsentID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334B5F5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[14];
  v2 = v0[11];
  v3 = v0[10];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t BankConnectService.scheduleHistoricalTransactionTask(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 128) = a1[3];
  return swift_task_switch();
}

uint64_t sub_2334B602C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = (_QWORD *)v0[12];
  v0[17] = *(_QWORD *)(v0[10] + 16);
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2334B6098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return BankConnectService.loadGrantedAccounts(forConsentID:)(a1, a2);
}

uint64_t sub_2334B60F8(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318C26C;
  return BankConnectService.scheduleHistoricalTransactionTask(for:)(a1);
}

uint64_t dispatch thunk of BankConnectConnectionFinanceDataLoading.loadGrantedAccounts(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectConnectionFinanceDataLoading.scheduleHistoricalTransactionTask(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return v9(a1, a2, a3);
}

uint64_t static BankConnectSharedSymmetricKeyManagerError.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectSharedSymmetricKeyManagerError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t BankConnectSharedSymmetricKeyManagerError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t BankConnectSharedSymmetricKeyManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BankConnectSharedSymmetricKeyManager.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t BankConnectSharedSymmetricKeyManager.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560523D0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2334B63A8((uint64_t)v5);
  if (!v1)
  {
    v7 = sub_23361DE98();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      sub_2334B695C(a1);
      return sub_2334B6D00((uint64_t)v5);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    }
  }
  return result;
}

uint64_t sub_2334B63A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  unint64_t v6;
  void *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  const __CFDictionary *v10;
  OSStatus v11;
  NSObject *v12;
  int v13;
  uint8_t *v14;
  __int128 v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  CFStringRef v28;
  __CFString *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v38;
  CFTypeRef result[4];
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = sub_23361DB68();
  v4 = sub_23361E750();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_233151000, v3, v4, "Attempting to obtain existing shared key.", v5, 2u);
    MEMORY[0x234934590](v5, -1, -1);
  }

  v6 = sub_2334B6F6C();
  v7 = (void *)*MEMORY[0x24BDE94C8];
  v41 = MEMORY[0x24BEE1328];
  LOBYTE(v40) = 1;
  sub_2331683D0(&v40, result);
  v8 = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = v6;
  sub_23328E4B0(result, v8, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  result[0] = 0;
  type metadata accessor for CFString(0);
  sub_2331E5ECC();
  v10 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v11 = SecItemCopyMatching(v10, result);

  if (v11 != -25300)
  {
    if (v11)
    {
      v24 = sub_23361DB68();
      v25 = sub_23361E768();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)&v40 = v27;
        *(_DWORD *)v26 = 136315138;
        v28 = SecCopyErrorMessageString(v11, 0);
        if (v28)
        {
          v29 = (__CFString *)v28;
          v30 = sub_23361E150();
          v32 = v31;

        }
        else
        {
          v30 = sub_23361F1D0();
          v32 = v33;
        }
        v38 = sub_233164DCC(v30, v32, (uint64_t *)&v40);
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v24, v25, "keychain error: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v27, -1, -1);
        MEMORY[0x234934590](v26, -1, -1);
      }

      sub_23361E150();
      v34 = v11;
      v35 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v36 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_initWithDomain_code_userInfo_, v36, v34, 0, v38);

    }
    else
    {
      v12 = sub_23361DB68();
      v13 = sub_23361E750();
      if (os_log_type_enabled(v12, (os_log_type_t)v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_233151000, v12, (os_log_type_t)v13, "Obtained existing shared key.", v14, 2u);
        MEMORY[0x234934590](v14, -1, -1);
      }

      if (result[0])
      {
        swift_unknownObjectRetain();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v15 = v40;
          v16 = sub_23361DB68();
          v17 = sub_23361E750();
          if (os_log_type_enabled(v16, v17))
          {
            v18 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v18 = 0;
            _os_log_impl(&dword_233151000, v16, v17, "Creating key with key data.", v18, 2u);
            MEMORY[0x234934590](v18, -1, -1);
          }

          v40 = v15;
          sub_23361DE80();
          v19 = sub_23361DE98();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 0, 1, v19);
          return swift_unknownObjectRelease();
        }
      }
      sub_2334B70C4();
      swift_allocError();
    }
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  v20 = sub_23361DB68();
  v21 = sub_23361E750();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_233151000, v20, v21, "BankConnect shared key does not exist.", v22, 2u);
    MEMORY[0x234934590](v22, -1, -1);
  }

  v23 = sub_23361DE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  return swift_unknownObjectRelease();
}

uint64_t sub_2334B695C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  __int128 v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  void *v15;
  id v16;
  char v17;
  const __CFDictionary *v18;
  OSStatus v19;
  id v20;
  void *v21;
  uint64_t v22;
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;

  v2 = sub_23361DEB0();
  MEMORY[0x24BDAC7A8](v2);
  if (qword_256041CA0 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  v4 = sub_23361DB68();
  v5 = sub_23361E750();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "Creating new shared key", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  sub_23361DEA4();
  sub_23361DE8C();
  v7 = MEMORY[0x24BDCDDE8];
  sub_23361DE68();
  v8 = v25;
  v9 = sub_23361DB68();
  v10 = sub_23361E750();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_233151000, v9, v10, "Adding newly created key to keychain.", v11, 2u);
    MEMORY[0x234934590](v11, -1, -1);
  }

  sub_2334B6F6C();
  v12 = (void *)*MEMORY[0x24BDE9550];
  v26 = v7;
  v25 = v8;
  sub_2331683D0(&v25, v24);
  v13 = v12;
  sub_2331D1374(v8, *((unint64_t *)&v8 + 1));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23328E4B0(v24, v13, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  v15 = (void *)*MEMORY[0x24BDE9008];
  v26 = MEMORY[0x24BEE1328];
  LOBYTE(v25) = 1;
  sub_2331683D0(&v25, v24);
  v16 = v15;
  v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_23328E4B0(v24, v16, v17);

  swift_bridgeObjectRelease();
  type metadata accessor for CFString(0);
  sub_2331E5ECC();
  v18 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v19 = SecItemAdd(v18, 0);

  if (!v19)
    return sub_23316BEA4(v8, *((unint64_t *)&v8 + 1));
  sub_23361E150();
  v20 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v21 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, v19, 0);

  swift_willThrow();
  sub_23316BEA4(v8, *((unint64_t *)&v8 + 1));
  v22 = sub_23361DE98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
}

uint64_t sub_2334B6D00(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560523D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BankConnectSharedSymmetricKeyManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BankConnectSharedSymmetricKeyManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_2334B6D5C()
{
  unint64_t result;

  result = qword_2560523D8;
  if (!qword_2560523D8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectSharedSymmetricKeyManagerError, &type metadata for BankConnectSharedSymmetricKeyManagerError);
    atomic_store(result, (unint64_t *)&qword_2560523D8);
  }
  return result;
}

uint64_t sub_2334B6DA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560523D0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2334B63A8((uint64_t)v5);
  if (!v1)
  {
    v7 = sub_23361DE98();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      sub_2334B695C(a1);
      return sub_2334B6D00((uint64_t)v5);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BankConnectSharedSymmetricKeyManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334B6EC4 + 4 * byte_2336519B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334B6EE4 + 4 * byte_2336519B5[v4]))();
}

_BYTE *sub_2334B6EC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334B6EE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334B6EEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334B6EF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334B6EFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334B6F04(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectSharedSymmetricKeyManagerError()
{
  return &type metadata for BankConnectSharedSymmetricKeyManagerError;
}

uint64_t dispatch thunk of BankConnectSharedSymmetricKeyManaging.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for BankConnectSharedSymmetricKeyManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectSharedSymmetricKeyManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectSharedSymmetricKeyManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_2334B6F6C()
{
  uint64_t inited;
  void **v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
  inited = swift_initStackObject();
  v1 = (void **)MEMORY[0x24BDE9220];
  *(_OWORD *)(inited + 16) = xmmword_233626370;
  v2 = *v1;
  *(_QWORD *)(inited + 32) = *v1;
  v3 = (void *)*MEMORY[0x24BDE9230];
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 40) = v3;
  v4 = (void *)*MEMORY[0x24BDE8F50];
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x800000023366C720;
  v7 = (void *)*MEMORY[0x24BDE9128];
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = 0xD000000000000021;
  *(_QWORD *)(inited + 128) = 0x80000002336731E0;
  v8 = (void *)*MEMORY[0x24BDE8FA8];
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = v8;
  *(_QWORD *)(inited + 160) = 0xD00000000000002CLL;
  *(_QWORD *)(inited + 168) = 0x8000000233678BF0;
  v9 = (void *)*MEMORY[0x24BDE8F60];
  *(_QWORD *)(inited + 184) = v5;
  *(_QWORD *)(inited + 192) = v9;
  v10 = (void *)*MEMORY[0x24BDE8FA0];
  *(_QWORD *)(inited + 224) = v6;
  *(_QWORD *)(inited + 200) = v10;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  return sub_23315F804(inited);
}

unint64_t sub_2334B70C4()
{
  unint64_t result;

  result = qword_2560523E0;
  if (!qword_2560523E0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectSharedSymmetricKeyManagerError, &type metadata for BankConnectSharedSymmetricKeyManagerError);
    atomic_store(result, (unint64_t *)&qword_2560523E0);
  }
  return result;
}

uint64_t sub_2334B7108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int EnumCaseMultiPayload;
  BOOL v22;
  char v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v4 = sub_23361D634();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (unsigned __int8 *)&v30 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (unsigned __int8 *)&v30 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052580);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_2331686A0(a1, (uint64_t)v19, &qword_256043810);
  sub_2331686A0(a2, (uint64_t)v20, &qword_256043810);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2331686A0((uint64_t)v19, (uint64_t)v15, &qword_256043810);
    if (swift_getEnumCaseMultiPayload())
      goto LABEL_11;
    v24 = *v15 == *v20;
LABEL_9:
    sub_233168608((uint64_t)v19, &qword_256043810);
    return v24 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_2331686A0((uint64_t)v19, (uint64_t)v10, &qword_256043810);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
      goto LABEL_11;
    }
    v25 = v30;
    v26 = v20;
    v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v26, v31);
    v24 = sub_23361D5E0();
    v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v6, v27);
    v28(v10, v27);
    goto LABEL_9;
  }
  sub_2331686A0((uint64_t)v19, (uint64_t)v13, &qword_256043810);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_11:
    sub_233168608((uint64_t)v19, &qword_256052580);
    v24 = 0;
    return v24 & 1;
  }
  v22 = *v13 == *v20;
  v23 = v20[1] ^ v13[1] ^ 1;
  sub_233168608((uint64_t)v19, &qword_256043810);
  v24 = v22 & v23;
  return v24 & 1;
}

uint64_t sub_2334B73AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v4 = sub_23361D634();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v29 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (unsigned __int8 *)&v29 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052590);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_2331686A0(a1, (uint64_t)v19, &qword_2560437A0);
  sub_2331686A0(a2, (uint64_t)v20, &qword_2560437A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2331686A0((uint64_t)v19, (uint64_t)v15, &qword_2560437A0);
    if (swift_getEnumCaseMultiPayload())
      goto LABEL_11;
    v23 = *v15 == *v20;
LABEL_9:
    v22 = &qword_2560437A0;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_2331686A0((uint64_t)v19, (uint64_t)v10, &qword_2560437A0);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
      goto LABEL_11;
    }
    v24 = v29;
    v25 = v20;
    v26 = v30;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v6, v25, v30);
    v23 = sub_23361D5E0();
    v27 = *(void (**)(char *, uint64_t))(v24 + 8);
    v27(v6, v26);
    v27(v10, v26);
    goto LABEL_9;
  }
  sub_2331686A0((uint64_t)v19, (uint64_t)v13, &qword_2560437A0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_11:
    v23 = 0;
    v22 = &qword_256052590;
    goto LABEL_12;
  }
  v22 = &qword_2560437A0;
  v23 = sub_23361F344();
LABEL_12:
  sub_233168608((uint64_t)v19, v22);
  return v23 & 1;
}

uint64_t sub_2334B7628(uint64_t a1, uint64_t a2)
{
  return sub_2334B7650(a1, a2, &qword_256043790, qword_256052598);
}

uint64_t sub_2334B763C(uint64_t a1, uint64_t a2)
{
  return sub_2334B7650(a1, a2, &qword_256043800, &qword_256052588);
}

uint64_t sub_2334B7650(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int EnumCaseMultiPayload;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  v8 = sub_23361D634();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (unsigned __int8 *)&v33 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (unsigned __int8 *)&v33 - v18;
  v36 = a4;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v23[*(int *)(v21 + 48)];
  sub_2331686A0(a1, (uint64_t)v23, a3);
  sub_2331686A0(a2, (uint64_t)v24, a3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2331686A0((uint64_t)v23, (uint64_t)v19, a3);
    if (!swift_getEnumCaseMultiPayload())
    {
      v26 = *v19 == *v24;
LABEL_7:
      v27 = v26;
      goto LABEL_12;
    }
LABEL_14:
    v27 = 0;
    v31 = v36;
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_2331686A0((uint64_t)v23, (uint64_t)v17, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = *v17 == *v24;
      goto LABEL_7;
    }
    goto LABEL_14;
  }
  sub_2331686A0((uint64_t)v23, (uint64_t)v14, a3);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
    goto LABEL_14;
  }
  v28 = v34;
  v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v10, v24, v35);
  v27 = sub_23361D5E0();
  v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v10, v29);
  v30(v14, v29);
LABEL_12:
  v31 = a3;
LABEL_15:
  sub_233168608((uint64_t)v23, v31);
  return v27 & 1;
}

void Order.ShippingFulfillment.StatusValues.init(order:orderContent:fulfillment:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  unsigned __int8 v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;

  v41 = a4;
  v7 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v23 = a2;
  v24 = ManagedOrderShippingFulfillment.status.getter();
  v25 = ManagedOrderShippingFulfillment.shippingType.getter();
  v39 = v23;
  v40 = v22;
  Order.Fulfillment.DisplayStatus<>.init(order:orderContent:shippingStatus:shippingType:)(v22, v23, v24, v25 & 1, v21);
  v38 = v18;
  ManagedOrderShippingFulfillment.estimatedDeliveryWindow.getter(v18);
  v26 = objc_msgSend(a3, sel_deliveryDate);
  if (v26)
  {
    v27 = v26;
    sub_23361D5EC();

    v28 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v15, 0, 1, v28);
  }
  else
  {
    v29 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
  }
  v30 = objc_msgSend(a3, sel_shippedDate);
  if (v30)
  {
    v31 = v30;
    sub_23361D5EC();

    v32 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 0, 1, v32);
  }
  else
  {
    v32 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 1, 1, v32);
  }
  v33 = (uint64_t)&v9[v7[5]];
  v34 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v35 = (uint64_t)&v9[v7[6]];
  sub_23361D634();
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v36(v35, 1, 1, v32);
  v37 = (uint64_t)&v9[v7[7]];
  v36(v37, 1, 1, v32);
  sub_2334BEE70((uint64_t)v21, (uint64_t)v9);
  sub_233170B8C((uint64_t)v38, v33, &qword_256043808);
  sub_233170B8C((uint64_t)v15, v35, (uint64_t *)&unk_254247DA0);
  sub_233170B8C((uint64_t)v13, v37, (uint64_t *)&unk_254247DA0);
  sub_233168580((uint64_t)v9, v41, type metadata accessor for Order.ShippingFulfillment.StatusValues);

}

uint64_t Order.ShippingFulfillment.StatusValues.init(orderContent:fulfillment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  v33 = a1;
  v34 = a3;
  v5 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v32 - v12;
  v32 = (uint64_t)&v32 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v19, type metadata accessor for RawECommerceOrderContent);
  v36 = *(_BYTE *)(a2 + 40);
  v23 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  v35 = *(_BYTE *)(a2 + v23[18]);
  Order.Fulfillment.DisplayStatus<>.init(orderContent:shippingStatus:shippingType:)((uint64_t)v19, &v36, &v35, v22);
  RawOrderShippingFulfillment.estimatedDeliveryWindow.getter(v16);
  sub_2331686A0(a2 + v23[15], (uint64_t)v13, (uint64_t *)&unk_254247DA0);
  v24 = (uint64_t)v11;
  sub_2331686A0(a2 + v23[17], (uint64_t)v11, (uint64_t *)&unk_254247DA0);
  v25 = (uint64_t)&v7[v5[5]];
  v26 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = (uint64_t)&v7[v5[6]];
  v28 = sub_23361D634();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  v30 = (uint64_t)&v7[v5[7]];
  v29(v30, 1, 1, v28);
  sub_2334BEE70((uint64_t)v22, (uint64_t)v7);
  sub_233170B8C((uint64_t)v16, v25, &qword_256043808);
  sub_233170B8C(v32, v27, (uint64_t *)&unk_254247DA0);
  sub_233170B8C(v24, v30, (uint64_t *)&unk_254247DA0);
  sub_233168580((uint64_t)v7, v34, type metadata accessor for Order.ShippingFulfillment.StatusValues);
  sub_233168500(a2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
  return sub_233168500(v33, type metadata accessor for RawECommerceOrderContent);
}

uint64_t Order.ShippingFulfillment.StatusFormatter.init(configuration:formatShippedAndDeliveryDates:useRelativeDateFormatting:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_233168580(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  result = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t Order.ShippingFulfillment.StatusFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (unsigned __int8 *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v10, &qword_256043810);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168608((uint64_t)v10, &qword_256043810);
    goto LABEL_8;
  }
  v11 = *v10;
  if ((v11 - 2) < 2)
  {
    v12 = sub_2334BB6DC(a1, a2);
    goto LABEL_14;
  }
  if (v11 == 4)
  {
    if (*(_BYTE *)(v2 + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0) + 20)) != 1)
      goto LABEL_8;
    v12 = sub_2334BB2BC(a1, a2);
LABEL_14:
    v14 = v12;
    v16 = v13;
    sub_2331684BC(a1, (uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
    if (v16)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v11 == 5
    && *(_BYTE *)(v2 + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0) + 20)) == 1)
  {
    v12 = sub_2334BB480(a1, a2);
    goto LABEL_14;
  }
LABEL_8:
  sub_2331684BC(a1, (uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
LABEL_9:
  v14 = Order.Fulfillment.DisplayStatus<>.localizedTitle.getter();
LABEL_10:
  sub_233168500((uint64_t)v7, type metadata accessor for Order.ShippingFulfillment.StatusValues);
  return v14;
}

uint64_t sub_2334B8120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t);
  char v36;
  uint64_t (*v37)(uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  void *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  char v84;
  void *v85;
  void *v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;

  v3 = v2;
  v121 = a2;
  v96 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v96);
  v97 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23361D868();
  v104 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v101 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_23361CD40();
  v113 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v100 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v110 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for FullDateFormatter();
  v10 = MEMORY[0x24BDAC7A8](v108);
  v107 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v109 = (char *)&v95 - v12;
  v13 = type metadata accessor for Duration();
  MEMORY[0x24BDAC7A8](v13);
  v112 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for TimeWindow(0);
  v15 = MEMORY[0x24BDAC7A8](v118);
  v105 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v111 = (uint64_t)&v95 - v17;
  v117 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v117);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for EndOfPickupWindowFormatter();
  MEMORY[0x24BDAC7A8](v114);
  v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23361D634();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v99 = (uint64_t)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v98 = (uint64_t)&v95 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v95 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v95 - v31;
  Order.FulfillmentWindow.endDate.getter((uint64_t)&v95 - v31);
  v106 = v3 + *(int *)(v8 + 20);
  v33 = a1;
  v103 = Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
  LOBYTE(a1) = sub_23361D5BC();
  v115 = v3;
  sub_2331684BC(v3, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v34 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v120 = v32;
  v34(v30, v32, v22);
  if ((a1 & 1) != 0)
  {
    v35 = *(void (**)(char *, uint64_t))(v23 + 8);
    v116 = v22;
    v35(v30, v22);
    sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  }
  else
  {
    v36 = sub_23361D76C();
    v35 = *(void (**)(char *, uint64_t))(v23 + 8);
    v35(v30, v22);
    sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
    if ((v36 & 1) == 0)
    {
      v35(v120, v22);
      return 0;
    }
    v116 = v22;
  }
  v37 = type metadata accessor for Order.FulfillmentWindow;
  sub_2331684BC(v33, (uint64_t)v19, type metadata accessor for Order.FulfillmentWindow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v40 = v118;
  v39 = v119;
  if (EnumCaseMultiPayload == 1)
  {
    v41 = v111;
    sub_2331684BC((uint64_t)v19, v111, type metadata accessor for TimeWindow);
    v42 = v112;
    sub_2331684BC(v41 + *(int *)(v40 + 20), v112, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    sub_23361CCD4();
    v44 = v43;
    v45 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
    v45(v42, v39);
    sub_233168500(v41, type metadata accessor for TimeWindow);
    if ((v44 & 1) == 0)
      goto LABEL_8;
    v46 = v42;
    v37 = type metadata accessor for TimeWindow;
    v47 = v105;
    sub_2331684BC((uint64_t)v19, v105, type metadata accessor for TimeWindow);
    sub_2331684BC(v47 + *(int *)(v40 + 20), v46, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    sub_23361CCEC();
    v49 = v48;
    v45(v46, v39);
    sub_233168500(v47, type metadata accessor for TimeWindow);
    if ((v49 & 1) == 0)
    {
LABEL_8:
      v35(v120, v116);
      sub_233168500((uint64_t)v19, type metadata accessor for TimeWindow);
      return 0;
    }
  }
  sub_233168500((uint64_t)v19, v37);
  v50 = v115;
  if (*(_BYTE *)(v115 + *(int *)(v114 + 20)) == 1)
  {
    v51 = (uint64_t)v120;
    v52 = v106;
    v53 = sub_23361D76C();
    v54 = v116;
    if ((v53 & 1) != 0)
    {
      v55 = (void (*)(uint64_t, uint64_t))v35;
      v56 = v116;
      if (qword_2542450A8 != -1)
        swift_once();
      v57 = (void *)qword_2542450A0;
      v58 = (void *)sub_23361E12C();
      v59 = (void *)sub_23361E12C();
      v60 = (void *)sub_23361E12C();
      v61 = objc_msgSend(v57, sel_localizedStringForKey_value_table_, v58, v59, v60);

      v62 = sub_23361E150();
      v55(v51, v56);
    }
    else if ((sub_23361D7A8() & 1) != 0)
    {
      if ((v103 & 1) != 0)
      {
        v71 = (void (*)(uint64_t, uint64_t))v35;
        if (qword_2542450A8 != -1)
          swift_once();
        v72 = (void *)qword_2542450A0;
      }
      else
      {
        v71 = (void (*)(uint64_t, uint64_t))v35;
        if (qword_2542450A8 != -1)
          swift_once();
        v72 = (void *)qword_2542450A0;
      }
      v85 = (void *)sub_23361E12C();
      v86 = (void *)sub_23361E12C();
      v87 = (void *)sub_23361E12C();
      v88 = objc_msgSend(v72, sel_localizedStringForKey_value_table_, v85, v86, v87);

      v62 = sub_23361E150();
      v71(v51, v54);
    }
    else
    {
      v74 = v101;
      v73 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v101, v52, v102);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
      v75 = sub_23361D850();
      v118 = (uint64_t)v35;
      v76 = *(_QWORD *)(v75 - 8);
      v77 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_233623D60;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v76 + 104))(v78 + v77, *MEMORY[0x24BDCF220], v75);
      sub_2333EF4B0(v78);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v79 = v98;
      Date.noon.getter(v98);
      v80 = v99;
      Date.noon.getter(v99);
      v81 = v100;
      sub_23361D784();
      v82 = (void (*)(uint64_t, uint64_t))v118;
      swift_bridgeObjectRelease();
      v82(v80, v54);
      v82(v79, v54);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v74, v73);
      v83 = sub_23361CC98();
      LOBYTE(v75) = v84;
      (*(void (**)(char *, uint64_t))(v113 + 8))(v81, v119);
      if ((v75 & 1) != 0 || (unint64_t)(v83 - 7) < 0xFFFFFFFFFFFFFFFBLL)
      {
        v89 = v97;
        sub_2331684BC(v50, v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
        *(_BYTE *)(v89 + *(int *)(v96 + 20)) = 0;
        v90 = SingleDateFormatter.format(_:now:)(v51, v121);
        v92 = v91;
        sub_233168500(v89, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
        if ((v103 & 1) != 0)
          v93 = sub_2335DEA4C(v90, v92);
        else
          v93 = sub_2335DEBC0(v90, v92);
        v62 = v93;
        swift_bridgeObjectRelease();
      }
      else
      {
        v62 = sub_2334BA274(v51, v103 & 1);
      }
      v82(v51, v54);
    }
  }
  else
  {
    v63 = v110;
    sub_2331684BC(v115, v110, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v64 = (uint64_t)v107;
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v63, v64);
    v65 = (uint64_t)v109;
    *(_BYTE *)(v64 + *(int *)(v108 + 20)) = 0;
    sub_233168580(v64, v65, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v66 = (void (*)(uint64_t, uint64_t))v35;
    v67 = (uint64_t)v120;
    v68 = FullDateFormatter.format(_:now:)((uint64_t)v120, v121);
    v70 = v69;
    sub_233168500(v65, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v62 = sub_2335DEBC0(v68, v70);
    swift_bridgeObjectRelease();
    v66(v67, v116);
  }
  return v62;
}

uint64_t sub_2334B8BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v3 = v2;
  v94 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v94);
  v95 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D868();
  v101 = *(_QWORD *)(v7 - 8);
  v102 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v99 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_23361CD40();
  v111 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v98 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  v108 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for FullDateFormatter();
  v12 = MEMORY[0x24BDAC7A8](v106);
  v105 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v107 = (char *)&v91 - v14;
  v15 = type metadata accessor for Duration();
  MEMORY[0x24BDAC7A8](v15);
  v109 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for TimeWindow(0);
  v17 = MEMORY[0x24BDAC7A8](v115);
  v103 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v114 = (uint64_t)&v91 - v19;
  v113 = (void (*)(uint64_t, uint64_t))type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v113);
  v116 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for EndOfDeliveryWindowFormatter();
  MEMORY[0x24BDAC7A8](v112);
  v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v97 = (uint64_t)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v96 = (uint64_t)&v91 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v91 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v91 - v32;
  Order.FulfillmentWindow.endDate.getter((uint64_t)&v91 - v32);
  v104 = v3 + *(int *)(v10 + 20);
  v34 = a1;
  v100 = Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
  v110 = a2;
  LOBYTE(a1) = sub_23361D5BC();
  v35 = v3;
  sub_2331684BC(v3, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v31, v33, v23);
  if ((a1 & 1) != 0)
  {
    v36 = *(void (**)(char *, uint64_t))(v24 + 8);
    v36(v31, v23);
    sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
    goto LABEL_4;
  }
  v37 = sub_23361D76C();
  v36 = *(void (**)(char *, uint64_t))(v24 + 8);
  v36(v31, v23);
  sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  if ((v37 & 1) != 0)
  {
LABEL_4:
    v38 = (uint64_t)v33;
    v39 = type metadata accessor for Order.FulfillmentWindow;
    v40 = v34;
    v41 = v116;
    sub_2331684BC(v40, v116, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v43 = v117;
    v45 = v114;
    v44 = v115;
    if (EnumCaseMultiPayload == 1)
    {
      v93 = v35;
      v113 = (void (*)(uint64_t, uint64_t))v36;
      sub_2331684BC(v41, v114, type metadata accessor for TimeWindow);
      v46 = v109;
      sub_2331684BC(v45 + *(int *)(v44 + 20), v109, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      sub_23361CCD4();
      v47 = v44;
      v49 = v48;
      v50 = v43;
      v51 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
      v51(v46, v50);
      if ((v49 & 1) == 0)
      {
        v52 = sub_23320F47C(v38);
        sub_233168500(v45, type metadata accessor for TimeWindow);
        v113(v38, v23);
        v53 = v41;
LABEL_10:
        sub_233168500(v53, type metadata accessor for TimeWindow);
        return v52;
      }
      v92 = v23;
      sub_233168500(v45, type metadata accessor for TimeWindow);
      v54 = v103;
      sub_2331684BC(v41, v103, type metadata accessor for TimeWindow);
      sub_2331684BC(v54 + *(int *)(v47 + 20), v46, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      sub_23361CCEC();
      v56 = v55;
      v51(v46, v50);
      if ((v56 & 1) == 0)
      {
        sub_23320DB6C(v38, v110);
        v52 = v57;
        sub_233168500(v54, type metadata accessor for TimeWindow);
        v113(v38, v92);
        v53 = v41;
        goto LABEL_10;
      }
      v39 = type metadata accessor for TimeWindow;
      sub_233168500(v54, type metadata accessor for TimeWindow);
      v23 = v92;
      v36 = (void (*)(char *, uint64_t))v113;
      v35 = v93;
    }
    sub_233168500(v41, v39);
    if (*(_BYTE *)(v35 + *(int *)(v112 + 20)) == 1)
    {
      v58 = v104;
      if ((sub_23361D76C() & 1) != 0)
      {
        if (qword_2542450A8 != -1)
          swift_once();
        v59 = (void *)qword_2542450A0;
        v60 = (void *)sub_23361E12C();
        v61 = (void *)sub_23361E12C();
        v62 = (void *)sub_23361E12C();
        v63 = objc_msgSend(v59, sel_localizedStringForKey_value_table_, v60, v61, v62);

        v52 = sub_23361E150();
        goto LABEL_20;
      }
      if ((sub_23361D7A8() & 1) != 0)
      {
        if ((v100 & 1) != 0)
        {
          if (qword_2542450A8 != -1)
            swift_once();
          v73 = (void *)qword_2542450A0;
        }
        else
        {
          if (qword_2542450A8 != -1)
            swift_once();
          v73 = (void *)qword_2542450A0;
        }
        v84 = (void *)sub_23361E12C();
        v85 = (void *)sub_23361E12C();
        v86 = (void *)sub_23361E12C();
        v87 = objc_msgSend(v73, sel_localizedStringForKey_value_table_, v84, v85, v86);

        v52 = sub_23361E150();
        goto LABEL_20;
      }
      v74 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v99, v58, v102);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
      v75 = sub_23361D850();
      v76 = *(_QWORD *)(v75 - 8);
      v77 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_233623D60;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v76 + 104))(v78 + v77, *MEMORY[0x24BDCF220], v75);
      sub_2333EF4B0(v78);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v79 = v96;
      Date.noon.getter(v96);
      v80 = v97;
      Date.noon.getter(v97);
      v81 = v98;
      sub_23361D784();
      swift_bridgeObjectRelease();
      v36((char *)v80, v23);
      v36((char *)v79, v23);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v74, v102);
      v82 = sub_23361CC98();
      LOBYTE(v75) = v83;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v81, v117);
      if ((v75 & 1) == 0 && (unint64_t)(v82 - 7) >= 0xFFFFFFFFFFFFFFFBLL)
      {
        v52 = sub_2334BA8F0(v38, v100 & 1);
        goto LABEL_20;
      }
      v88 = v95;
      sub_2331684BC(v35, v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      *(_BYTE *)(v88 + *(int *)(v94 + 20)) = 0;
      v89 = SingleDateFormatter.format(_:now:)(v38, v110);
      v69 = v90;
      sub_233168500(v88, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
      if ((v100 & 1) != 0)
      {
        v71 = sub_23320D884(v89, v69);
        goto LABEL_19;
      }
      v70 = v89;
    }
    else
    {
      v64 = v108;
      sub_2331684BC(v35, v108, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      v65 = (uint64_t)v105;
      sub_23361D6D0();
      sub_23361D7D8();
      sub_23361D88C();
      sub_2331C7090(v64, v65);
      v66 = (uint64_t)v107;
      *(_BYTE *)(v65 + *(int *)(v106 + 20)) = 0;
      sub_233168580(v65, v66, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v67 = FullDateFormatter.format(_:now:)(v38, v110);
      v69 = v68;
      sub_233168500(v66, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v70 = v67;
    }
    v71 = sub_23320D9F8(v70, v69);
LABEL_19:
    v52 = v71;
    swift_bridgeObjectRelease();
LABEL_20:
    v36((char *)v38, v23);
    return v52;
  }
  v36(v33, v23);
  return 0;
}

uint64_t sub_2334B9658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_23361D634();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v37);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FullDateFormatter();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  sub_233167C58((unint64_t *)&qword_2560436A0, v5, MEMORY[0x24BDCE948]);
  v17 = a2;
  v18 = a1;
  v19 = 0;
  if ((sub_23361E0E4() & 1) == 0)
  {
    v33 = v4;
    v20 = v37;
    v21 = type metadata accessor for ShippedDateFormatter(0);
    v22 = v38;
    if (*(_BYTE *)(v38 + *(int *)(v21 + 20)) == 1)
    {
      if ((sub_23361D7B4() & 1) != 0)
        return sub_2334BC730();
      if ((sub_23361D76C() & 1) != 0)
        return sub_2334BC870();
      v28 = v35;
      sub_2331684BC(v22, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      *(_BYTE *)(v28 + *(int *)(v20 + 20)) = 0;
      v29 = (uint64_t)v36;
      sub_23361D5F8();
      v30 = SingleDateFormatter.format(_:now:)(v18, v29);
      v26 = v31;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v33);
      sub_233168500(v28, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
      v27 = v30;
    }
    else
    {
      sub_2331684BC(v38, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_23361D6D0();
      sub_23361D7D8();
      sub_23361D88C();
      sub_2331C7090((uint64_t)v10, (uint64_t)v14);
      v14[*(int *)(v11 + 20)] = 0;
      sub_233168580((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v24 = FullDateFormatter.format(_:now:)(v18, v17);
      v26 = v25;
      sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v27 = v24;
    }
    v19 = sub_2334BC9B0(v27, v26);
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_2334B996C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = sub_23361D634();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v35);
  v36 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FullDateFormatter();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  sub_233167C58((unint64_t *)&qword_2560436A0, v7, MEMORY[0x24BDCE948]);
  v39 = a2;
  v19 = 0;
  if ((sub_23361E0E4() & 1) == 0)
  {
    if (*(_BYTE *)(v3 + *(int *)(type metadata accessor for DeliveryDateFormatter(0) + 20)) == 1)
    {
      if ((sub_23361D7B4() & 1) != 0)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_9;
        goto LABEL_13;
      }
      if ((sub_23361D76C() & 1) != 0)
      {
        if (qword_2542450A8 == -1)
        {
LABEL_9:
          v23 = (void *)qword_2542450A0;
          v24 = (void *)sub_23361E12C();
          v25 = (void *)sub_23361E12C();
          v26 = (void *)sub_23361E12C();
          v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

          v19 = sub_23361E150();
          return v19;
        }
LABEL_13:
        swift_once();
        goto LABEL_9;
      }
      v28 = v36;
      sub_2331684BC(v3, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      *(_BYTE *)(v28 + *(int *)(v35 + 20)) = 0;
      v29 = (uint64_t)v37;
      sub_23361D5F8();
      v30 = SingleDateFormatter.format(_:now:)(a1, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v29, v6);
      sub_233168500(v28, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
      v19 = sub_2334BC180(v30, v32);
    }
    else
    {
      sub_2331684BC(v3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_23361D6D0();
      sub_23361D7D8();
      sub_23361D88C();
      sub_2331C7090((uint64_t)v12, (uint64_t)v16);
      v16[*(int *)(v13 + 20)] = 0;
      sub_233168580((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v20 = FullDateFormatter.format(_:now:)(a1, v39);
      v22 = v21;
      sub_233168500((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v19 = sub_2334BC180(v20, v22);
    }
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_2334B9DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = sub_23361D634();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v35);
  v36 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FullDateFormatter();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  sub_233167C58((unint64_t *)&qword_2560436A0, v7, MEMORY[0x24BDCE948]);
  v39 = a2;
  v19 = 0;
  if ((sub_23361E0E4() & 1) == 0)
  {
    if (*(_BYTE *)(v3 + *(int *)(type metadata accessor for PickedUpDateFormatter(0) + 20)) == 1)
    {
      if ((sub_23361D7B4() & 1) != 0)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_9;
        goto LABEL_13;
      }
      if ((sub_23361D76C() & 1) != 0)
      {
        if (qword_2542450A8 == -1)
        {
LABEL_9:
          v23 = (void *)qword_2542450A0;
          v24 = (void *)sub_23361E12C();
          v25 = (void *)sub_23361E12C();
          v26 = (void *)sub_23361E12C();
          v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

          v19 = sub_23361E150();
          return v19;
        }
LABEL_13:
        swift_once();
        goto LABEL_9;
      }
      v28 = v36;
      sub_2331684BC(v3, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      *(_BYTE *)(v28 + *(int *)(v35 + 20)) = 0;
      v29 = (uint64_t)v37;
      sub_23361D5F8();
      v30 = SingleDateFormatter.format(_:now:)(a1, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v29, v6);
      sub_233168500(v28, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
      v19 = sub_2331C3E08(v30, v32);
    }
    else
    {
      sub_2331684BC(v3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_23361D6D0();
      sub_23361D7D8();
      sub_23361D88C();
      sub_2331C7090((uint64_t)v12, (uint64_t)v16);
      v16[*(int *)(v13 + 20)] = 0;
      sub_233168580((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v20 = FullDateFormatter.format(_:now:)(a1, v39);
      v22 = v21;
      sub_233168500((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
      v19 = sub_2331C3E08(v20, v22);
    }
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_2334BA274(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  int *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (**v48)();
  uint64_t (*v49)();
  uint64_t (**v50)();
  uint64_t (*v51)();
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t (**v56)();
  uint64_t (**v57)();
  uint64_t (**v58)();
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (**v78)();
  char *v79;
  uint64_t (**v80)();
  uint64_t (**v81)();
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v91 = a1;
  v4 = sub_23361D850();
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D748();
  v84 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D868();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EndOfPickupWindowFormatter();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v81 = (uint64_t (**)())((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t (**)())((char *)&v71 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v71 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v75 = (uint64_t)&v71 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v72 = (uint64_t)&v71 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v71 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v71 - v25;
  v27 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (uint64_t (**)())((char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = v29;
  v30 = (int *)type metadata accessor for WeekdayCustomFormatter();
  MEMORY[0x24BDAC7A8](v30);
  v79 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v32 = v2;
  sub_2331684BC(v2, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v33 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = swift_allocObject();
  v76 = v34;
  LOBYTE(v29) = a2;
  *(_BYTE *)(v34 + 16) = a2;
  sub_233168580((uint64_t)v26, v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  sub_2331684BC(v32, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v35 = swift_allocObject();
  v74 = v35;
  *(_BYTE *)(v35 + 16) = a2;
  sub_233168580((uint64_t)v24, v35 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v36 = v72;
  sub_2331684BC(v32, v72, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v37 = swift_allocObject();
  v73 = v37;
  *(_BYTE *)(v37 + 16) = a2;
  sub_233168580(v36, v37 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v38 = v75;
  sub_2331684BC(v32, v75, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v39 = swift_allocObject();
  v72 = v39;
  *(_BYTE *)(v39 + 16) = a2;
  sub_233168580(v38, v39 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v40 = v77;
  sub_2331684BC(v32, v77, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v41 = swift_allocObject();
  *(_BYTE *)(v41 + 16) = (_BYTE)v29;
  sub_233168580(v40, v41 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v42 = (uint64_t)v80;
  sub_2331684BC(v32, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v43 = swift_allocObject();
  *(_BYTE *)(v43 + 16) = (_BYTE)v29;
  sub_233168580(v42, v43 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v44 = v32;
  v45 = (uint64_t)v81;
  sub_2331684BC(v44, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  v46 = swift_allocObject();
  *(_BYTE *)(v46 + 16) = (_BYTE)v29;
  v47 = (uint64_t)v79;
  sub_233168580(v45, v46 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
  sub_233168580((uint64_t)v78, v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v48 = (uint64_t (**)())(v47 + v30[5]);
  v49 = (uint64_t (*)())v76;
  v81 = v48;
  *v48 = sub_2334C07E0;
  v48[1] = v49;
  v50 = (uint64_t (**)())(v47 + v30[6]);
  v51 = (uint64_t (*)())v74;
  *v50 = sub_2334C0800;
  v50[1] = v51;
  v52 = (uint64_t (**)())(v47 + v30[7]);
  v53 = (uint64_t (*)())v73;
  v80 = v52;
  *v52 = sub_2334C0820;
  v52[1] = v53;
  v54 = (uint64_t (**)())(v47 + v30[8]);
  v55 = v72;
  v78 = v54;
  *v54 = sub_2334C0840;
  v54[1] = (uint64_t (*)())v55;
  v56 = (uint64_t (**)())(v47 + v30[9]);
  *v56 = sub_2334C0860;
  v56[1] = (uint64_t (*)())v41;
  v57 = (uint64_t (**)())(v47 + v30[10]);
  *v57 = sub_2334C0880;
  v57[1] = (uint64_t (*)())v43;
  v58 = (uint64_t (**)())(v47 + v30[11]);
  *v58 = sub_2334C0970;
  v58[1] = (uint64_t (*)())v46;
  v60 = v83;
  v59 = v84;
  v61 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *MEMORY[0x24BDCEF50], v85);
  v62 = v82;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  v63 = v88;
  v64 = v89;
  v65 = v90;
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, *MEMORY[0x24BDCF278], v90);
  v66 = v62;
  v67 = sub_23361D85C();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  v68 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v66, v87);
  switch(v67)
  {
    case 1:
      v50 = v81;
      goto LABEL_8;
    case 2:
      goto LABEL_8;
    case 3:
      v50 = v80;
      goto LABEL_8;
    case 4:
      v50 = v78;
      goto LABEL_8;
    case 5:
      v50 = v56;
      goto LABEL_8;
    case 6:
      v50 = v57;
      goto LABEL_8;
    case 7:
      v50 = v58;
LABEL_8:
      v69 = ((uint64_t (*)(uint64_t))*v50)(v68);
      sub_233168500(v47, (uint64_t (*)(_QWORD))type metadata accessor for WeekdayCustomFormatter);
      result = v69;
      break;
    default:
      result = sub_23361EF24();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_2334BA8F0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  int *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (**v48)();
  uint64_t (*v49)();
  uint64_t (**v50)();
  uint64_t (*v51)();
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t (**v56)();
  uint64_t (**v57)();
  uint64_t (**v58)();
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (**v78)();
  char *v79;
  uint64_t (**v80)();
  uint64_t (**v81)();
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v91 = a1;
  v4 = sub_23361D850();
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D748();
  v84 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D868();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EndOfDeliveryWindowFormatter();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v81 = (uint64_t (**)())((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t (**)())((char *)&v71 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v71 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v75 = (uint64_t)&v71 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v72 = (uint64_t)&v71 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v71 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v71 - v25;
  v27 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (uint64_t (**)())((char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = v29;
  v30 = (int *)type metadata accessor for WeekdayCustomFormatter();
  MEMORY[0x24BDAC7A8](v30);
  v79 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v32 = v2;
  sub_2331684BC(v2, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v33 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = swift_allocObject();
  v76 = v34;
  LOBYTE(v29) = a2;
  *(_BYTE *)(v34 + 16) = a2;
  sub_233168580((uint64_t)v26, v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  sub_2331684BC(v32, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v35 = swift_allocObject();
  v74 = v35;
  *(_BYTE *)(v35 + 16) = a2;
  sub_233168580((uint64_t)v24, v35 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v36 = v72;
  sub_2331684BC(v32, v72, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v37 = swift_allocObject();
  v73 = v37;
  *(_BYTE *)(v37 + 16) = a2;
  sub_233168580(v36, v37 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v38 = v75;
  sub_2331684BC(v32, v75, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v39 = swift_allocObject();
  v72 = v39;
  *(_BYTE *)(v39 + 16) = a2;
  sub_233168580(v38, v39 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v40 = v77;
  sub_2331684BC(v32, v77, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v41 = swift_allocObject();
  *(_BYTE *)(v41 + 16) = (_BYTE)v29;
  sub_233168580(v40, v41 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v42 = (uint64_t)v80;
  sub_2331684BC(v32, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v43 = swift_allocObject();
  *(_BYTE *)(v43 + 16) = (_BYTE)v29;
  sub_233168580(v42, v43 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v44 = v32;
  v45 = (uint64_t)v81;
  sub_2331684BC(v44, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  v46 = swift_allocObject();
  *(_BYTE *)(v46 + 16) = (_BYTE)v29;
  v47 = (uint64_t)v79;
  sub_233168580(v45, v46 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  sub_233168580((uint64_t)v78, v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v48 = (uint64_t (**)())(v47 + v30[5]);
  v49 = (uint64_t (*)())v76;
  v81 = v48;
  *v48 = sub_2334C06D8;
  v48[1] = v49;
  v50 = (uint64_t (**)())(v47 + v30[6]);
  v51 = (uint64_t (*)())v74;
  *v50 = sub_2334C06F8;
  v50[1] = v51;
  v52 = (uint64_t (**)())(v47 + v30[7]);
  v53 = (uint64_t (*)())v73;
  v80 = v52;
  *v52 = sub_2334C0718;
  v52[1] = v53;
  v54 = (uint64_t (**)())(v47 + v30[8]);
  v55 = v72;
  v78 = v54;
  *v54 = sub_2334C0738;
  v54[1] = (uint64_t (*)())v55;
  v56 = (uint64_t (**)())(v47 + v30[9]);
  *v56 = sub_2334C0758;
  v56[1] = (uint64_t (*)())v41;
  v57 = (uint64_t (**)())(v47 + v30[10]);
  *v57 = sub_2334C0778;
  v57[1] = (uint64_t (*)())v43;
  v58 = (uint64_t (**)())(v47 + v30[11]);
  *v58 = sub_2334C0798;
  v58[1] = (uint64_t (*)())v46;
  v60 = v83;
  v59 = v84;
  v61 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *MEMORY[0x24BDCEF50], v85);
  v62 = v82;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  v63 = v88;
  v64 = v89;
  v65 = v90;
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, *MEMORY[0x24BDCF278], v90);
  v66 = v62;
  v67 = sub_23361D85C();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  v68 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v66, v87);
  switch(v67)
  {
    case 1:
      v50 = v81;
      goto LABEL_8;
    case 2:
      goto LABEL_8;
    case 3:
      v50 = v80;
      goto LABEL_8;
    case 4:
      v50 = v78;
      goto LABEL_8;
    case 5:
      v50 = v56;
      goto LABEL_8;
    case 6:
      v50 = v57;
      goto LABEL_8;
    case 7:
      v50 = v58;
LABEL_8:
      v69 = ((uint64_t (*)(uint64_t))*v50)(v68);
      sub_233168500(v47, (uint64_t (*)(_QWORD))type metadata accessor for WeekdayCustomFormatter);
      result = v69;
      break;
    default:
      result = sub_23361EF24();
      __break(1u);
      break;
  }
  return result;
}

uint64_t Order.ShippingFulfillment.StatusValues.displayStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331686A0(v1, a1, &qword_256043810);
}

uint64_t Order.ShippingFulfillment.StatusValues.displayStatus.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_233170B8C(a1, v1, &qword_256043810);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.displayStatus.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 20), a1, &qword_256043808);
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 20), &qword_256043808);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.deliveryWindow.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.ShippingFulfillment.StatusValues.deliveryDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.deliveryDate.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.shippedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.ShippingFulfillment.StatusValues.shippedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.ShippingFulfillment.StatusValues.shippedDate.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.StatusValues.init(displayStatus:deliveryWindow:deliveryDate:shippedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v10 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v11 = a5 + v10[5];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a5 + v10[6];
  v14 = sub_23361D634();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = a5 + v10[7];
  v15(v16, 1, 1, v14);
  sub_2334BEE70(a1, a5);
  sub_233170B8C(a2, v11, &qword_256043808);
  sub_233170B8C(a3, v13, (uint64_t *)&unk_254247DA0);
  return sub_233170B8C(a4, v16, (uint64_t *)&unk_254247DA0);
}

uint64_t sub_2334BB2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for DeliveryDateFormatter(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v15 + 24), (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2331684BC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(_BYTE *)(v2
                                     + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                              + 24));
    v16 = sub_2334B996C((uint64_t)v14, a2);
    sub_233168500((uint64_t)v7, type metadata accessor for DeliveryDateFormatter);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v16;
}

uint64_t sub_2334BB480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = type metadata accessor for ShippedDateFormatter(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v16 + 28), (uint64_t)v11, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = (uint64_t *)&unk_254247DA0;
    v18 = (uint64_t)v11;
LABEL_6:
    sub_233168608(v18, v17);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  sub_2331686A0(a1, (uint64_t)v8, &qword_256043810);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v17 = &qword_256043810;
    v18 = (uint64_t)v8;
    goto LABEL_6;
  }
  v19 = v8[1];
  v20 = v23;
  sub_2331684BC(v23, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v5[*(int *)(v3 + 20)] = *(_BYTE *)(v20
                                   + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                            + 24));
  v5[*(int *)(v3 + 24)] = v19;
  v21 = sub_2334B9658((uint64_t)v15, v24);
  sub_233168500((uint64_t)v5, type metadata accessor for ShippedDateFormatter);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v21;
}

uint64_t sub_2334BB6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for EndOfDeliveryWindowFormatter();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v15 + 20), (uint64_t)v10, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, &qword_256043808);
    return 0;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
    sub_2331684BC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(_BYTE *)(v2
                                     + *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0)
                                              + 24));
    v16 = sub_2334B8BA4((uint64_t)v14, a2);
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
    sub_233168500((uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
  }
  return v16;
}

uint64_t Order.ShippingFulfillment.StatusFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  sub_23361F368();
  return sub_23361F368();
}

uint64_t static Order.ShippingFulfillment.StatusFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (v5 = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_2334BBA64()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001DLL;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_2334BBAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334C0560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334BBAFC()
{
  sub_2334BEECC();
  return sub_23361F428();
}

uint64_t sub_2334BBB24()
{
  sub_2334BEECC();
  return sub_23361F434();
}

uint64_t Order.ShippingFulfillment.StatusFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560523E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334BEECC();
  sub_23361F410();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
    v8[14] = 1;
    sub_23361F14C();
    v8[13] = 2;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.ShippingFulfillment.StatusFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  sub_23361F368();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t Order.ShippingFulfillment.StatusFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v17 = a2;
  v18 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560523F8);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334BEECC();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = v5;
  v12 = (uint64_t)v10;
  v23 = 0;
  sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v13 = (uint64_t)v19;
  v14 = v20;
  sub_23361F068();
  sub_233168580(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v22 = 1;
  *(_BYTE *)(v12 + *(int *)(v8 + 20)) = sub_23361F038() & 1;
  v21 = 2;
  v15 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
  *(_BYTE *)(v12 + *(int *)(v8 + 24)) = v15 & 1;
  sub_2331684BC(v12, v17, type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v12, type metadata accessor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2334BC094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = Order.ShippingFulfillment.StatusFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2334BC0B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = Order.ShippingFulfillment.StatusFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2334BC154@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.ShippingFulfillment.StatusFormatter.init(from:)(a1, a2);
}

uint64_t sub_2334BC168(_QWORD *a1)
{
  return Order.ShippingFulfillment.StatusFormatter.encode(to:)(a1);
}

uint64_t sub_2334BC180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_2542450A0;
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = (void *)sub_23361E12C();
  v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  sub_23361E150();
  v11 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_2334BC2F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C0D80();
  sub_23361F410();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for DeliveryDateFormatter(0);
    v8[14] = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2334BC444@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v21 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052740);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DeliveryDateFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C0D80();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration;
    v16 = (uint64_t)v10;
  }
  else
  {
    v19 = v8;
    v12 = v20;
    v11 = v21;
    v25 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v13 = v22;
    sub_23361F068();
    sub_2331C7090(v23, (uint64_t)v10);
    v24 = 1;
    v14 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
    v10[*(int *)(v19 + 20)] = v14 & 1;
    sub_2331684BC((uint64_t)v10, v11, type metadata accessor for DeliveryDateFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v16 = (uint64_t)v10;
    v17 = type metadata accessor for DeliveryDateFormatter;
  }
  return sub_233168500(v16, v17);
}

uint64_t sub_2334BC6AC()
{
  sub_2334C0D80();
  return sub_23361F428();
}

uint64_t sub_2334BC6D4()
{
  sub_2334C0D80();
  return sub_23361F434();
}

uint64_t sub_2334BC6FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2334BD230(a1, (uint64_t (*)(uint64_t, char *))sub_2334B996C, a2);
}

uint64_t sub_2334BC708@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2334BC444(a1, a2);
}

uint64_t sub_2334BC71C(_QWORD *a1)
{
  return sub_2334BC2F4(a1);
}

uint64_t sub_2334BC730()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24)) == 1)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BC870()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24)) == 1)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BC9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v5 = *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for ShippedDateFormatter(0) + 24));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_2331683F0();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v7 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    if (v7 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (v7 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v8 = (void *)qword_2542450A0;
  v9 = (void *)sub_23361E12C();
  v10 = (void *)sub_23361E12C();
  v11 = (void *)sub_23361E12C();
  v12 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v9, v10, v11);

  sub_23361E150();
  v13 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_2334BCBD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052738);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C0D3C();
  sub_23361F410();
  v11[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v2)
  {
    v9 = type metadata accessor for ShippedDateFormatter(0);
    v11[14] = 1;
    sub_23361F14C();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_23344C1E4();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2334BCD6C()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for ShippedDateFormatter(0);
  sub_23361F368();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2334BCE9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v3 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052728);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShippedDateFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C0D3C();
  v21 = v7;
  v11 = (uint64_t)v23;
  sub_23361F3EC();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration;
    v16 = (uint64_t)v10;
  }
  else
  {
    v23 = a1;
    v27 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v13 = (uint64_t)v20;
    v12 = v21;
    v14 = v22;
    sub_23361F068();
    sub_2331C7090(v13, (uint64_t)v10);
    v26 = 1;
    v10[*(int *)(v8 + 20)] = sub_23361F038() & 1;
    v24 = 2;
    sub_23344C2B0();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v14);
    v10[*(int *)(v8 + 24)] = v25;
    sub_2331684BC((uint64_t)v10, v19, type metadata accessor for ShippedDateFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    v16 = (uint64_t)v10;
    v17 = type metadata accessor for ShippedDateFormatter;
  }
  return sub_233168500(v16, v17);
}

uint64_t sub_2334BD13C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000019;
  if (*v0 != 1)
    v1 = 0x676E697070696873;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_2334BD1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334C110C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334BD1D4()
{
  sub_2334C0D3C();
  return sub_23361F428();
}

uint64_t sub_2334BD1FC()
{
  sub_2334C0D3C();
  return sub_23361F434();
}

uint64_t sub_2334BD224@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2334BD230(a1, (uint64_t (*)(uint64_t, char *))sub_2334B9658, a2);
}

uint64_t sub_2334BD230@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v10 = a2(a1, v9);
  v12 = v11;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  a3[1] = v12;
  return result;
}

uint64_t sub_2334BD2D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2334BCE9C(a1, a2);
}

uint64_t sub_2334BD2EC(_QWORD *a1)
{
  return sub_2334BCBD4(a1);
}

uint64_t sub_2334BD304()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  return sub_23361F35C();
}

uint64_t sub_2334BD418()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2334BD548(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BD670(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BD798(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BD8C0(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BD9E8(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BDB10(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BDC38(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BDD60(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BDE88(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BDFB0(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BE0D8(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BE200(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BE328(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BE450(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v1 = (void *)qword_2542450A0;
  }
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_23361E150();
  return v6;
}

uint64_t sub_2334BE578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (v5 = type metadata accessor for ShippedDateFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

BOOL _s10FinanceKit5OrderV19ShippingFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v4 = sub_23361D634();
  v88 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v6 = MEMORY[0x24BDAC7A8](v85);
  v80 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v84 = (uint64_t)&v73 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v77 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v81 = (uint64_t)&v73 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v79 = (uint64_t)&v73 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v83 = (char *)&v73 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v87 = (uint64_t)&v73 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v86 = (uint64_t)&v73 - v20;
  v21 = type metadata accessor for Order.FulfillmentWindow(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v82 = (uint64_t)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_256043D08);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v73 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v73 - v34;
  if ((sub_2334B7108(a1, a2) & 1) == 0)
    return 0;
  v75 = v4;
  v36 = a2;
  v37 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v38 = *(int *)(v37 + 20);
  v73 = a1;
  sub_2331686A0(a1 + v38, (uint64_t)v35, &qword_256043808);
  v76 = v37;
  v39 = *(int *)(v37 + 20);
  v74 = v36;
  sub_2331686A0(v36 + v39, (uint64_t)v33, &qword_256043808);
  v40 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_2331686A0((uint64_t)v35, (uint64_t)v26, &qword_256043808);
  sub_2331686A0((uint64_t)v33, v40, &qword_256043808);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v41((uint64_t)v26, 1, v21) == 1)
  {
    sub_233168608((uint64_t)v33, &qword_256043808);
    sub_233168608((uint64_t)v35, &qword_256043808);
    if (v41(v40, 1, v21) == 1)
    {
      sub_233168608((uint64_t)v26, &qword_256043808);
      goto LABEL_9;
    }
LABEL_7:
    v42 = qword_256043D08;
    v43 = (uint64_t)v26;
LABEL_21:
    sub_233168608(v43, v42);
    return 0;
  }
  sub_2331686A0((uint64_t)v26, (uint64_t)v30, &qword_256043808);
  if (v41(v40, 1, v21) == 1)
  {
    sub_233168608((uint64_t)v33, &qword_256043808);
    sub_233168608((uint64_t)v35, &qword_256043808);
    sub_233168500((uint64_t)v30, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_7;
  }
  v44 = v82;
  sub_233168580(v40, v82, type metadata accessor for Order.FulfillmentWindow);
  v45 = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0((uint64_t)v30, v44);
  sub_233168500(v44, type metadata accessor for Order.FulfillmentWindow);
  sub_233168608((uint64_t)v33, &qword_256043808);
  sub_233168608((uint64_t)v35, &qword_256043808);
  sub_233168500((uint64_t)v30, type metadata accessor for Order.FulfillmentWindow);
  sub_233168608((uint64_t)v26, &qword_256043808);
  if ((v45 & 1) == 0)
    return 0;
LABEL_9:
  v46 = v76;
  v47 = v73;
  v48 = v86;
  sub_2331686A0(v73 + *(int *)(v76 + 24), v86, (uint64_t *)&unk_254247DA0);
  v49 = v74;
  v50 = v87;
  sub_2331686A0(v74 + *(int *)(v46 + 24), v87, (uint64_t *)&unk_254247DA0);
  v51 = v84;
  v52 = v85;
  v53 = v84 + *(int *)(v85 + 48);
  sub_2331686A0(v48, v84, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(v50, v53, (uint64_t *)&unk_254247DA0);
  v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
  v55 = v75;
  if (v54(v51, 1, v75) != 1)
  {
    v56 = (uint64_t)v83;
    sub_2331686A0(v51, (uint64_t)v83, (uint64_t *)&unk_254247DA0);
    if (v54(v53, 1, v55) != 1)
    {
      v57 = v88;
      v58 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v78, v53, v55);
      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      LODWORD(v82) = sub_23361E108();
      v59 = v51;
      v60 = *(void (**)(char *, uint64_t))(v57 + 8);
      v60(v58, v55);
      sub_233168608(v87, (uint64_t *)&unk_254247DA0);
      sub_233168608(v86, (uint64_t *)&unk_254247DA0);
      v60(v83, v55);
      sub_233168608(v59, (uint64_t *)&unk_254247DA0);
      if ((v82 & 1) == 0)
        return 0;
      goto LABEL_15;
    }
    sub_233168608(v87, (uint64_t *)&unk_254247DA0);
    sub_233168608(v48, (uint64_t *)&unk_254247DA0);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v56, v55);
LABEL_20:
    v42 = &qword_256042DA0;
    v43 = v51;
    goto LABEL_21;
  }
  sub_233168608(v50, (uint64_t *)&unk_254247DA0);
  sub_233168608(v48, (uint64_t *)&unk_254247DA0);
  if (v54(v53, 1, v55) != 1)
    goto LABEL_20;
  sub_233168608(v51, (uint64_t *)&unk_254247DA0);
LABEL_15:
  v61 = v76;
  v62 = v47 + *(int *)(v76 + 28);
  v63 = v79;
  sub_2331686A0(v62, v79, (uint64_t *)&unk_254247DA0);
  v64 = v81;
  sub_2331686A0(v49 + *(int *)(v61 + 28), v81, (uint64_t *)&unk_254247DA0);
  v51 = v80;
  v65 = v80 + *(int *)(v52 + 48);
  sub_2331686A0(v63, v80, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(v64, v65, (uint64_t *)&unk_254247DA0);
  if (v54(v51, 1, v55) == 1)
  {
    sub_233168608(v64, (uint64_t *)&unk_254247DA0);
    sub_233168608(v63, (uint64_t *)&unk_254247DA0);
    if (v54(v65, 1, v55) == 1)
    {
      sub_233168608(v51, (uint64_t *)&unk_254247DA0);
      return 1;
    }
    goto LABEL_20;
  }
  v66 = v77;
  sub_2331686A0(v51, v77, (uint64_t *)&unk_254247DA0);
  if (v54(v65, 1, v55) == 1)
  {
    sub_233168608(v81, (uint64_t *)&unk_254247DA0);
    sub_233168608(v63, (uint64_t *)&unk_254247DA0);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v66, v55);
    goto LABEL_20;
  }
  v68 = v88;
  v69 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v78, v65, v55);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v70 = sub_23361E108();
  v71 = v63;
  v72 = *(void (**)(char *, uint64_t))(v68 + 8);
  v72(v69, v55);
  sub_233168608(v81, (uint64_t *)&unk_254247DA0);
  sub_233168608(v71, (uint64_t *)&unk_254247DA0);
  v72((char *)v66, v55);
  sub_233168608(v51, (uint64_t *)&unk_254247DA0);
  return (v70 & 1) != 0;
}

uint64_t type metadata accessor for Order.ShippingFulfillment.StatusValues(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256052480);
}

uint64_t sub_2334BEE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Order.ShippingFulfillment.StatusFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256052528);
}

unint64_t sub_2334BEECC()
{
  unint64_t result;

  result = qword_2560523F0;
  if (!qword_2560523F0)
  {
    result = MEMORY[0x234934494](&unk_233651DBC, &_s15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560523F0);
  }
  return result;
}

uint64_t sub_2334BEF10(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256052400, type metadata accessor for Order.ShippingFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.StatusFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2334BEF4C()
{
  return sub_233167C58(&qword_256052408, type metadata accessor for Order.ShippingFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2334BEF78()
{
  return sub_233167C58(&qword_256052410, type metadata accessor for Order.ShippingFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2334BEFA4()
{
  return sub_233167C58(&qword_256052418, type metadata accessor for Order.ShippingFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t sub_2334BEFD0()
{
  return sub_233167C58(&qword_256052420, type metadata accessor for Order.ShippingFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.StatusFormatter);
}

uint64_t *_s12StatusValuesVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for Order.FulfillmentWindow(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v11[v18];
        v20 = &v12[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v22 = a3[6];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23361D634();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v29 = a3[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    if (v27(v31, 1, v25))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t _s12StatusValuesVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v4 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = v5 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v10 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
  }
  v11 = a1 + a2[6];
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v15 = a1 + a2[7];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v15, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  return result;
}

char *_s12StatusValuesVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  if (v25(v29, 1, v23))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v29, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  return a1;
}

char *_s12StatusValuesVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043810);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    v23 = swift_getEnumCaseMultiPayload();
    v24 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v9, v10, v24);
    if (v23 == 1)
    {
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v29 = a3[6];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_23:
  v38 = a3[7];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = v34(&a1[v38], 1, v32);
  v42 = v34(v40, 1, v32);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v39, v40, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v32);
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v39, v40, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
  return a1;
}

char *_s12StatusValuesVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  if (v25(v29, 1, v23))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  return a1;
}

char *_s12StatusValuesVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043810);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    v23 = swift_getEnumCaseMultiPayload();
    v24 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v9, v10, v24);
    if (v23 == 1)
    {
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v29 = a3[6];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_23:
  v38 = a3[7];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = v34(&a1[v38], 1, v32);
  v42 = v34(v40, 1, v32);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v39, v40, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v32);
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v39, v40, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
  return a1;
}

uint64_t _s12StatusValuesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C0190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s12StatusValuesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C0240(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2334C02EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2334C03AC(319);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_256043C20, (void (*)(uint64_t))type metadata accessor for Order.FulfillmentWindow);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2334C03AC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256052490)
  {
    v2 = sub_2334C0404();
    v4 = type metadata accessor for Order.Fulfillment.DisplayStatus(a1, (uint64_t)&type metadata for Order.Fulfillment.ShippingDisplayStatusTypeModel, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256052490);
  }
}

unint64_t sub_2334C0404()
{
  unint64_t result;

  result = qword_256052498[0];
  if (!qword_256052498[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.Fulfillment.ShippingDisplayStatusTypeModel, &type metadata for Order.Fulfillment.ShippingDisplayStatusTypeModel);
    atomic_store(result, qword_256052498);
  }
  return result;
}

uint64_t _s15StatusFormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s15StatusFormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *_s15StatusFormatterV10CodingKeysOMa()
{
  return &_s15StatusFormatterV10CodingKeysON;
}

unint64_t sub_2334C048C()
{
  unint64_t result;

  result = qword_256052568;
  if (!qword_256052568)
  {
    result = MEMORY[0x234934494](&unk_233651D94, &_s15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256052568);
  }
  return result;
}

unint64_t sub_2334C04D4()
{
  unint64_t result;

  result = qword_256052570;
  if (!qword_256052570)
  {
    result = MEMORY[0x234934494](&unk_233651D04, &_s15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256052570);
  }
  return result;
}

unint64_t sub_2334C051C()
{
  unint64_t result;

  result = qword_256052578;
  if (!qword_256052578)
  {
    result = MEMORY[0x234934494](&unk_233651D2C, &_s15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256052578);
  }
  return result;
}

uint64_t sub_2334C0560(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000233678C20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023366BAD0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2334C06CC()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C06D8()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BD670);
}

uint64_t sub_2334C06EC()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C06F8()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BD8C0);
}

uint64_t sub_2334C070C()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C0718()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BDB10);
}

uint64_t sub_2334C072C()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C0738()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BDD60);
}

uint64_t sub_2334C074C()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C0758()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BDFB0);
}

uint64_t sub_2334C076C()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C0778()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BE200);
}

uint64_t sub_2334C078C()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_2334C0798()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BE450);
}

uint64_t type metadata accessor for DeliveryDateFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256052690);
}

uint64_t type metadata accessor for ShippedDateFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_2560525F8);
}

uint64_t sub_2334C07D4()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C07E0()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BD548);
}

uint64_t sub_2334C07F4()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C0800()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BD798);
}

uint64_t sub_2334C0814()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C0820()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BD9E8);
}

uint64_t sub_2334C0834()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C0840()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BDC38);
}

uint64_t sub_2334C0854()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C0860()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BDE88);
}

uint64_t sub_2334C0874()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t sub_2334C0880()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BE0D8);
}

uint64_t sub_2334C0894()
{
  return objectdestroyTm_7((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
}

uint64_t objectdestroyTm_7(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  v3 = v1 + ((v2 + 17) & ~v2);
  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for FormatterConfiguration();
  v6 = v3 + *(int *)(v5 + 20);
  v7 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v3 + *(int *)(v5 + 24);
  v9 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_2334C0970()
{
  return sub_2334C0984((uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter, (uint64_t (*)(_QWORD, uint64_t))sub_2334BE328);
}

uint64_t sub_2334C0984(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(unsigned __int8 *)(v2 + 16), v2 + ((v3 + 17) & ~v3));
}

uint64_t sub_2334C09C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C09D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C09E8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2334C0A5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C0A6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C0A7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2334C0AEC()
{
  return sub_233167C58(&qword_2560526C8, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651E48);
}

uint64_t sub_2334C0B18()
{
  return sub_233167C58(&qword_2560526D0, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651ED8);
}

uint64_t sub_2334C0B44()
{
  return sub_233167C58(&qword_2560526D8, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651EB0);
}

uint64_t sub_2334C0B70()
{
  return sub_233167C58(&qword_2560526E0, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651E70);
}

uint64_t sub_2334C0B9C(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560526E8, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651F00);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2334C0BD8(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560526F0, type metadata accessor for DeliveryDateFormatter, (uint64_t)&unk_233651F58);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2334C0C14()
{
  return sub_233167C58(&qword_2560526F8, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_233651F90);
}

uint64_t sub_2334C0C40()
{
  return sub_233167C58(&qword_256052700, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_233652020);
}

uint64_t sub_2334C0C6C()
{
  return sub_233167C58(&qword_256052708, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_233651FF8);
}

uint64_t sub_2334C0C98()
{
  return sub_233167C58(&qword_256052710, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_233651FB8);
}

uint64_t sub_2334C0CC4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256052718, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_233652048);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2334C0D00(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256052720, type metadata accessor for ShippedDateFormatter, (uint64_t)&unk_2336520A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2334C0D3C()
{
  unint64_t result;

  result = qword_256052730;
  if (!qword_256052730)
  {
    result = MEMORY[0x234934494](&unk_233652298, &type metadata for ShippedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052730);
  }
  return result;
}

unint64_t sub_2334C0D80()
{
  unint64_t result;

  result = qword_256052748;
  if (!qword_256052748)
  {
    result = MEMORY[0x234934494](&unk_233652248, &type metadata for DeliveryDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052748);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeliveryDateFormatter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334C0E10 + 4 * byte_233651B33[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334C0E44 + 4 * byte_233651B2E[v4]))();
}

uint64_t sub_2334C0E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C0E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334C0E54);
  return result;
}

uint64_t sub_2334C0E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334C0E68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334C0E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C0E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeliveryDateFormatter.CodingKeys()
{
  return &type metadata for DeliveryDateFormatter.CodingKeys;
}

uint64_t _s15StatusFormatterV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2334C0EDC + 4 * byte_233651B3D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2334C0F10 + 4 * byte_233651B38[v4]))();
}

uint64_t sub_2334C0F10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C0F18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334C0F20);
  return result;
}

uint64_t sub_2334C0F2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334C0F34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334C0F38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C0F40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShippedDateFormatter.CodingKeys()
{
  return &type metadata for ShippedDateFormatter.CodingKeys;
}

unint64_t sub_2334C0F60()
{
  unint64_t result;

  result = qword_256052758;
  if (!qword_256052758)
  {
    result = MEMORY[0x234934494](&unk_233652168, &type metadata for ShippedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052758);
  }
  return result;
}

unint64_t sub_2334C0FA8()
{
  unint64_t result;

  result = qword_256052760;
  if (!qword_256052760)
  {
    result = MEMORY[0x234934494](&unk_233652220, &type metadata for DeliveryDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052760);
  }
  return result;
}

unint64_t sub_2334C0FF0()
{
  unint64_t result;

  result = qword_256052768;
  if (!qword_256052768)
  {
    result = MEMORY[0x234934494](&unk_233652190, &type metadata for DeliveryDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052768);
  }
  return result;
}

unint64_t sub_2334C1038()
{
  unint64_t result;

  result = qword_256052770;
  if (!qword_256052770)
  {
    result = MEMORY[0x234934494](&unk_2336521B8, &type metadata for DeliveryDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052770);
  }
  return result;
}

unint64_t sub_2334C1080()
{
  unint64_t result;

  result = qword_256052778;
  if (!qword_256052778)
  {
    result = MEMORY[0x234934494](&unk_2336520D8, &type metadata for ShippedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052778);
  }
  return result;
}

unint64_t sub_2334C10C8()
{
  unint64_t result;

  result = qword_256052780;
  if (!qword_256052780)
  {
    result = MEMORY[0x234934494](&unk_233652100, &type metadata for ShippedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052780);
  }
  return result;
}

uint64_t sub_2334C110C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023366BAD0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697070696873 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedInstitutionDeleter.deleteAll(context:)(NSManagedObjectContext context)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  objc_super v19;

  type metadata accessor for ManagedInstitution();
  v19.receiver = (id)swift_getObjCClassFromMetadata();
  v19.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  v3 = objc_msgSendSuper2(&v19, sel_fetchRequest);
  v4 = sub_23361E984();
  if (!v1)
  {
    v13 = v4;

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (!v14)
        goto LABEL_17;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v14)
        goto LABEL_17;
    }
    if (v14 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x234933120](i, v13);
      else
        v16 = *(id *)(v13 + 8 * i + 32);
      v17 = v16;
      -[objc_class deleteObject:](context.super.isa, sel_deleteObject_, v16);

    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }

  if (qword_256041CA0 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = v1;
  v7 = v1;
  v8 = sub_23361DB68();
  v9 = sub_23361E768();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v1;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    sub_23361EBC4();
    *v11 = v18;

    _os_log_impl(&dword_233151000, v8, v9, "Could not delete institution: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
}

ValueMetadata *type metadata accessor for ManagedInstitutionDeleter()
{
  return &type metadata for ManagedInstitutionDeleter;
}

CLLocation __swiftcall CLLocation.init(rawLocation:)(FinanceKit::RawLocation rawLocation)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  objc_class *v11;
  void *v12;
  objc_class *v13;
  CLLocation result;
  uint64_t v15;

  v1 = *(_QWORD *)&rawLocation.altitude.is_nil;
  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v1;
  v7 = *(double *)(v1 + 8);
  if (*(_BYTE *)(v1 + 24))
    v8 = 0.0;
  else
    v8 = *(double *)(v1 + 16);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_23361D628();
  v10 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11 = (objc_class *)objc_msgSend(v9, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v10, v6, v7, v8, 0.0, 1.0);

  v13 = v11;
  result._internal = v12;
  result.super.isa = v13;
  return result;
}

FinanceKit::RawLocation __swiftcall RawLocation.init(_:)(CLLocation a1)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool v10;
  double v11;
  double v12;
  double v13;
  FinanceKit::RawLocation result;

  isa = a1.super.isa;
  v3 = v1;
  -[objc_class coordinate](a1.super.isa, sel_coordinate);
  v5 = v4;
  -[objc_class coordinate](isa, sel_coordinate);
  v7 = v6;
  -[objc_class altitude](isa, sel_altitude);
  v9 = v8;

  *(_QWORD *)v3 = v5;
  *(_QWORD *)(v3 + 8) = v7;
  *(_QWORD *)(v3 + 16) = v9;
  *(_BYTE *)(v3 + 24) = 0;
  result.altitude.value = v13;
  result.longitude = v12;
  result.latitude = v11;
  result.altitude.is_nil = v10;
  return result;
}

double RawLocation.latitude.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void RawLocation.latitude.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*RawLocation.latitude.modify())()
{
  return nullsub_1;
}

double RawLocation.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void RawLocation.longitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*RawLocation.longitude.modify())()
{
  return nullsub_1;
}

uint64_t RawLocation.altitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t RawLocation.altitude.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*RawLocation.altitude.modify())()
{
  return nullsub_1;
}

FinanceKit::RawLocation __swiftcall RawLocation.init(latitude:longitude:altitude:)(Swift::Double latitude, Swift::Double longitude, Swift::Double_optional altitude)
{
  char v3;
  uint64_t v4;
  FinanceKit::RawLocation result;

  *(Swift::Double *)v4 = latitude;
  *(Swift::Double *)(v4 + 8) = longitude;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)&altitude.is_nil;
  *(_BYTE *)(v4 + 24) = v3 & 1;
  result.altitude.value = altitude.value;
  result.altitude.is_nil = altitude.is_nil;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

uint64_t sub_2334C1758()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64757469676E6F6CLL;
  if (*v0 != 1)
    v1 = 0x6564757469746C61;
  if (*v0)
    return v1;
  else
    return 0x656475746974616CLL;
}

uint64_t sub_2334C17AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334C1DC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334C17D0()
{
  sub_2334C1B7C();
  return sub_23361F428();
}

uint64_t sub_2334C17F8()
{
  sub_2334C1B7C();
  return sub_23361F434();
}

uint64_t RawLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052788);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C1B7C();
  sub_23361F410();
  v12 = 0;
  sub_23361F158();
  if (!v2)
  {
    v11 = 1;
    sub_23361F158();
    v10 = 2;
    sub_23361F0F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawLocation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052798);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C1B7C();
  sub_23361F3EC();
  if (!v2)
  {
    v20 = 0;
    sub_23361F044();
    v10 = v9;
    v19 = 1;
    sub_23361F044();
    v12 = v11;
    v18 = 2;
    v14 = sub_23361EFE4();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 24) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2334C1B0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawLocation.init(from:)(a1, a2);
}

uint64_t sub_2334C1B20(_QWORD *a1)
{
  return RawLocation.encode(to:)(a1);
}

uint64_t _s10FinanceKit11RawLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_2334C1B7C()
{
  unint64_t result;

  result = qword_256052790;
  if (!qword_256052790)
  {
    result = MEMORY[0x234934494](&unk_233652470, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052790);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RawLocation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RawLocation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RawLocation()
{
  return &type metadata for RawLocation;
}

uint64_t storeEnumTagSinglePayload for RawLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2334C1C6C + 4 * byte_233652311[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2334C1CA0 + 4 * asc_23365230C[v4]))();
}

uint64_t sub_2334C1CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C1CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334C1CB0);
  return result;
}

uint64_t sub_2334C1CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334C1CC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334C1CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C1CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawLocation.CodingKeys()
{
  return &type metadata for RawLocation.CodingKeys;
}

unint64_t sub_2334C1CF0()
{
  unint64_t result;

  result = qword_2560527A0;
  if (!qword_2560527A0)
  {
    result = MEMORY[0x234934494](&unk_233652448, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527A0);
  }
  return result;
}

unint64_t sub_2334C1D38()
{
  unint64_t result;

  result = qword_2560527A8;
  if (!qword_2560527A8)
  {
    result = MEMORY[0x234934494](&unk_2336523B8, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527A8);
  }
  return result;
}

unint64_t sub_2334C1D80()
{
  unint64_t result;

  result = qword_2560527B0;
  if (!qword_2560527B0)
  {
    result = MEMORY[0x234934494](&unk_2336523E0, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527B0);
  }
  return result;
}

uint64_t sub_2334C1DC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id ManagedInternalTransaction.bankMerchantInformationInsight.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_insightsObject);
  v2 = objc_msgSend(v1, sel_bankMerchantInformationInsightObject);

  return v2;
}

uint64_t ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  int v4;
  uint64_t v5;
  void *v6;
  int v7;
  int v8;
  uint64_t v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v1 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_willAccessValueForKey_, v1);

  v2 = (void *)sub_23361E12C();
  v3 = objc_msgSend(v0, sel_primitiveValueForKey_, v2);

  if (v3)
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_23319F578((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    if (swift_dynamicCast())
    {
      v4 = 0;
      v5 = v10;
      goto LABEL_9;
    }
  }
  else
  {
    sub_23319F5C0((uint64_t)v12);
  }
  v5 = 0;
  v4 = 1;
LABEL_9:
  v6 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_didAccessValueForKey_, v6);

  if (v5 < -32768)
    v7 = 1;
  else
    v7 = v4;
  if (v5 >= 0x8000)
    v7 = 1;
  v8 = (unsigned __int16)v5;
  if (v7)
    v8 = 0;
  return v8 | (v7 << 16);
}

void TransactionMerchantInformation.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter();
  v5 = objc_msgSend(a1, sel_standardIndustrialClassificationCode);
  if (v5)
  {
    v6 = v5;
    v7 = sub_23361E150();
    v25 = v8;
    v27 = v7;

  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  v9 = objc_msgSend(a1, sel_categoryDescription, v25, v27);
  if (v9)
  {
    v10 = v9;
    v11 = sub_23361E150();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = objc_msgSend(a1, sel_merchantName);
  if (v14)
  {
    v15 = v14;
    v16 = sub_23361E150();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v19 = objc_msgSend(a1, sel_merchantNumber);
  if (v19)
  {
    v20 = v19;
    v21 = sub_23361E150();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = objc_msgSend(a1, sel_merchantAddress);

  *(_WORD *)a2 = v4;
  *(_BYTE *)(a2 + 2) = BYTE2(v4) & 1;
  *(_QWORD *)(a2 + 8) = v28;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v21;
  *(_QWORD *)(a2 + 64) = v23;
  *(_QWORD *)(a2 + 72) = v24;
}

void sub_2334C2250(int a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  if ((a1 & 0x10000) != 0)
    v4 = 0;
  else
    v4 = sub_23361F32C();
  v5 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_setPrimitiveValue_forKey_, v4, v5);
  swift_unknownObjectRelease();

  v6 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v6);

}

id ManagedBankMerchantInformationInsight.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankMerchantInformationInsight.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankMerchantInformationInsight.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedBankMerchantInformationInsight.__allocating_init(insight:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v4 = *(_BYTE *)(a1 + 2);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v11 = *(void **)(a1 + 72);
  v16 = *(_WORD *)a1;
  v17 = v4;
  v18 = v6;
  v19 = v5;
  v20 = v15;
  v21 = v7;
  v22 = v14;
  v23 = v8;
  v24 = v10;
  v25 = v9;
  v26 = v11;
  v12 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  ManagedBankMerchantInformationInsight.update(with:)(&v16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v12;
}

id ManagedBankMerchantInformationInsight.update(with:)(unsigned __int16 *a1)
{
  void *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v13;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 2);
  v4 = *((_QWORD *)a1 + 2);
  v13 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 8);
  v6 = *((_QWORD *)a1 + 9);
  if (*((_QWORD *)a1 + 6))
    v8 = (void *)sub_23361E12C();
  else
    v8 = 0;
  objc_msgSend(v1, sel_setMerchantName_, v8, v13);

  if (v5)
    v9 = (void *)sub_23361E12C();
  else
    v9 = 0;
  objc_msgSend(v1, sel_setCategoryDescription_, v9);

  sub_2334C2250(v2 | (v3 << 16));
  if (v7)
    v10 = (void *)sub_23361E12C();
  else
    v10 = 0;
  objc_msgSend(v1, sel_setMerchantNumber_, v10);

  if (v4)
    v11 = (void *)sub_23361E12C();
  else
    v11 = 0;
  objc_msgSend(v1, sel_setStandardIndustrialClassificationCode_, v11);

  return objc_msgSend(v1, sel_setMerchantAddress_, v6);
}

id static ManagedBankMerchantInformationInsight.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit37ManagedBankMerchantInformationInsight;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

char *keypath_get_selector_categoryDescription()
{
  return sel_categoryDescription;
}

void sub_2334C26F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_categoryDescription, a2);
}

void sub_2334C270C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCategoryDescription_);
}

char *keypath_get_selector_merchantAddress()
{
  return sel_merchantAddress;
}

id sub_2334C2734@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_merchantAddress);
  *a2 = result;
  return result;
}

id sub_2334C276C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMerchantAddress_, *a1);
}

uint64_t sub_2334C2780@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter();
  *(_WORD *)a1 = result;
  *(_BYTE *)(a1 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_2334C27B0(unsigned __int16 *a1)
{
  sub_2334C2250(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

void sub_2334C27E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_merchantName, a2);
}

void sub_2334C2800(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setMerchantName_);
}

char *keypath_get_selector_merchantNumber()
{
  return sel_merchantNumber;
}

void sub_2334C2828(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_merchantNumber, a2);
}

void sub_2334C2844(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setMerchantNumber_);
}

char *keypath_get_selector_standardIndustrialClassificationCode()
{
  return sel_standardIndustrialClassificationCode;
}

void sub_2334C286C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_standardIndustrialClassificationCode, a2);
}

void sub_2334C2888(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setStandardIndustrialClassificationCode_);
}

uint64_t type metadata accessor for ManagedBankMerchantInformationInsight()
{
  return objc_opt_self();
}

uint64_t RawMerchant.address.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v12 = v1[10];
  v13 = v1[11];
  v14 = v1[12];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  return sub_23332938C(v2);
}

__n128 RawMerchant.address.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v5 = a1[4];
  v6 = a1[3];
  v4 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  sub_233329310(*(_QWORD *)v1);
  *(_OWORD *)v1 = v9;
  *(_OWORD *)(v1 + 16) = v8;
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v6;
  result = v4;
  *(_OWORD *)(v1 + 64) = v5;
  *(__n128 *)(v1 + 80) = v4;
  *(_QWORD *)(v1 + 96) = v2;
  return result;
}

uint64_t (*RawMerchant.address.modify())()
{
  return nullsub_1;
}

uint64_t RawMerchant.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 20);
  return sub_233199624(v3, a1);
}

uint64_t type metadata accessor for RawMerchant()
{
  uint64_t result;

  result = qword_254245FD8;
  if (!qword_254245FD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawMerchant.businessChatURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 20);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawMerchant.businessChatURL.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.contactURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 24);
  return sub_233199624(v3, a1);
}

uint64_t RawMerchant.contactURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 24);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawMerchant.contactURL.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.displayName.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.emailAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.emailAddress.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.logo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.logo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.logo.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.merchantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.merchantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.merchantIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawMerchant.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawMerchant() + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawMerchant.phoneNumber.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 48);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawMerchant.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawMerchant() + 48);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawMerchant.url.modify())(_QWORD)
{
  type metadata accessor for RawMerchant();
  return nullsub_1;
}

uint64_t RawMerchant.init(address:businessChatURL:contactURL:displayName:emailAddress:logo:merchantIdentifier:phoneNumber:url:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v33 = a1[1];
  v34 = *a1;
  v31 = a1[3];
  v32 = a1[2];
  v29 = a1[5];
  v30 = a1[4];
  v16 = *((_QWORD *)a1 + 12);
  v17 = (int *)type metadata accessor for RawMerchant();
  v18 = a9 + v17[5];
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v21(v18, 1, 1, v19);
  v22 = a9 + v17[6];
  v21(v22, 1, 1, v19);
  v23 = (_QWORD *)(a9 + v17[8]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)(a9 + v17[9]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(a9 + v17[11]);
  *v25 = 0;
  v25[1] = 0;
  *(_OWORD *)a9 = v34;
  *(_OWORD *)(a9 + 16) = v33;
  *(_OWORD *)(a9 + 32) = v32;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v30;
  *(_OWORD *)(a9 + 80) = v29;
  *(_QWORD *)(a9 + 96) = v16;
  sub_2331AAFB8(a2, v18);
  sub_2331AAFB8(a3, v22);
  v26 = (_QWORD *)(a9 + v17[7]);
  *v26 = a4;
  v26[1] = a5;
  swift_bridgeObjectRelease();
  *v23 = a6;
  v23[1] = a7;
  swift_bridgeObjectRelease();
  *v24 = a8;
  v24[1] = a10;
  v27 = (_QWORD *)(a9 + v17[10]);
  *v27 = a11;
  v27[1] = a12;
  swift_bridgeObjectRelease();
  *v25 = a13;
  v25[1] = a14;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(a9 + v17[12], a15, v19);
}

uint64_t sub_2334C30F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334C312C + 4 * byte_233652508[a1]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_2334C312C()
{
  return 0x7373656E69737562;
}

uint64_t sub_2334C3150()
{
  return 0x55746361746E6F63;
}

uint64_t sub_2334C316C()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2334C318C()
{
  return 0x6464416C69616D65;
}

uint64_t sub_2334C31AC()
{
  return 1869049708;
}

unint64_t sub_2334C31BC()
{
  return 0xD000000000000012;
}

uint64_t sub_2334C31D8()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_2334C31F8()
{
  return 7107189;
}

uint64_t sub_2334C3208()
{
  unsigned __int8 *v0;

  return sub_2334C30F8(*v0);
}

uint64_t sub_2334C3210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334C5D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334C3234()
{
  sub_2334C4988();
  return sub_23361F428();
}

uint64_t sub_2334C325C()
{
  sub_2334C4988();
  return sub_23361F434();
}

uint64_t RawMerchant.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[6];
  uint64_t v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560527B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C4988();
  sub_23361F410();
  v9 = *(_QWORD *)(v3 + 96);
  v10 = *(_OWORD *)(v3 + 16);
  v14[0] = *(_OWORD *)v3;
  v14[1] = v10;
  v11 = *(_OWORD *)(v3 + 48);
  v14[2] = *(_OWORD *)(v3 + 32);
  v14[3] = v11;
  v12 = *(_OWORD *)(v3 + 80);
  v14[4] = *(_OWORD *)(v3 + 64);
  v14[5] = v12;
  v15 = v9;
  v16 = 0;
  sub_23320C808();
  sub_23361F110();
  if (!v2)
  {
    type metadata accessor for RawMerchant();
    LOBYTE(v14[0]) = 1;
    sub_23361D340();
    sub_2333A3430((unint64_t *)&unk_256042310, MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    LOBYTE(v14[0]) = 2;
    sub_23361F110();
    LOBYTE(v14[0]) = 3;
    sub_23361F140();
    LOBYTE(v14[0]) = 4;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 5;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 6;
    sub_23361F140();
    LOBYTE(v14[0]) = 7;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 8;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawMerchant.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(void);
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  int *v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char v76;

  v56 = a2;
  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v54 - v9;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560527C8);
  v11 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for RawMerchant();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v17 = 1;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  v18 = *(void (**)(void))(v4 + 56);
  v66 = &v17[*(int *)(v15 + 20)];
  v18();
  v68 = &v17[v14[6]];
  v18();
  v19 = &v17[v14[8]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v65 = v19;
  v20 = &v17[v14[9]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v64 = v20;
  v67 = v14;
  v21 = &v17[v14[11]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v61 = v21;
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334C4988();
  v59 = v13;
  v22 = v63;
  sub_23361F3EC();
  if (v22)
  {
    v25 = (uint64_t)v66;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
    sub_233329310(*(_QWORD *)v17);
    sub_233168608(v25, &qword_254248700);
    sub_233168608((uint64_t)v68, &qword_254248700);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v23 = (uint64_t)v10;
    v24 = v58;
    v55 = v11;
    v63 = v4;
    v76 = 0;
    sub_23320C7C4();
    sub_23361EFFC();
    v26 = v75;
    v27 = v70;
    *(_OWORD *)v17 = v69;
    *((_OWORD *)v17 + 1) = v27;
    v28 = v72;
    *((_OWORD *)v17 + 2) = v71;
    *((_OWORD *)v17 + 3) = v28;
    v29 = v74;
    *((_OWORD *)v17 + 4) = v73;
    *((_OWORD *)v17 + 5) = v29;
    *((_QWORD *)v17 + 12) = v26;
    LOBYTE(v69) = 1;
    v30 = sub_2333A3430(&qword_256042340, MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_2331AAFB8(v23, (uint64_t)v66);
    LOBYTE(v69) = 2;
    v31 = (uint64_t)v24;
    sub_23361EFFC();
    v54[1] = v30;
    v32 = v3;
    sub_2331AAFB8(v31, (uint64_t)v68);
    LOBYTE(v69) = 3;
    v33 = sub_23361F02C();
    v35 = (uint64_t *)v61;
    v34 = (uint64_t)v62;
    v36 = (uint64_t *)&v17[v67[7]];
    *v36 = v33;
    v36[1] = v37;
    LOBYTE(v69) = 4;
    v38 = sub_23361EFCC();
    v40 = v39;
    v41 = (uint64_t *)v65;
    swift_bridgeObjectRelease();
    *v41 = v38;
    v41[1] = v40;
    LOBYTE(v69) = 5;
    v42 = sub_23361EFCC();
    v44 = v43;
    v45 = (uint64_t *)v64;
    swift_bridgeObjectRelease();
    *v45 = v42;
    v45[1] = v44;
    LOBYTE(v69) = 6;
    v46 = sub_23361F02C();
    v47 = (uint64_t *)&v17[v67[10]];
    *v47 = v46;
    v47[1] = v48;
    LOBYTE(v69) = 7;
    v49 = sub_23361EFCC();
    v51 = v50;
    swift_bridgeObjectRelease();
    *v35 = v49;
    v35[1] = v51;
    LOBYTE(v69) = 8;
    v52 = v57;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v60);
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v17[v67[12]], v52, v32);
    sub_2334C49CC((uint64_t)v17, v56);
    __swift_destroy_boxed_opaque_existential_0(v34);
    return sub_23335A2F4((uint64_t)v17);
  }
}

uint64_t sub_2334C3C1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawMerchant.init(from:)(a1, a2);
}

uint64_t sub_2334C3C30(_QWORD *a1)
{
  return RawMerchant.encode(to:)(a1);
}

void RawMerchant.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  Swift::String v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  _OWORD v59[6];
  uint64_t v60;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v55 - v8;
  v10 = (int *)type metadata accessor for RawMerchant();
  v11 = a2 + v10[5];
  v12 = sub_23361D340();
  v13 = *(void (**)(void))(*(_QWORD *)(v12 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1, v12);
  v56 = a2 + v10[6];
  v13();
  v14 = a2 + v10[8];
  *(_OWORD *)v14 = 0u;
  v57 = (uint64_t *)(a2 + v10[9]);
  *(_OWORD *)v57 = 0u;
  v58 = (uint64_t *)(a2 + v10[11]);
  *(_OWORD *)v58 = 0u;
  v15 = objc_msgSend(a1, sel_address);
  if (v15)
  {
    RawAddress.init(_:)(v15, (uint64_t *)v59);
    v16 = v59[0];
    v17 = v59[1];
    v18 = v59[2];
    v19 = v59[3];
    v20 = v59[4];
    v21 = v59[5];
    v22 = v60;
  }
  else
  {
    v22 = 0;
    v16 = xmmword_23362E5A0;
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
    v17 = 0uLL;
  }
  *(_OWORD *)a2 = v16;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v20;
  *(_OWORD *)(a2 + 80) = v21;
  *(_QWORD *)(a2 + 96) = v22;
  v23 = objc_msgSend(a1, sel_businessChatURL);
  if (v23)
  {
    v24 = v23;
    sub_23361D2D4();

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v9, v25, 1, v12);
  sub_2331AAFB8((uint64_t)v9, v11);
  v27 = objc_msgSend(a1, sel_contactURL);
  if (v27)
  {
    v28 = v27;
    sub_23361D2D4();

    v26 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v7, v26, 1, v12);
  sub_2331AAFB8((uint64_t)v7, v56);
  v29 = objc_msgSend(a1, sel_displayName);
  v30 = sub_23361D6B8();
  v31 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v30);

  swift_bridgeObjectRelease();
  *(Swift::String *)(a2 + v10[7]) = v31;
  v32 = objc_msgSend(a1, sel_emailAddress);
  if (v32)
  {
    v33 = v32;
    v34 = sub_23361E150();
    v36 = v35;

  }
  else
  {
    v34 = 0;
    v36 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)v14 = v34;
  *(_QWORD *)(v14 + 8) = v36;
  v37 = objc_msgSend(a1, sel_logoName);
  if (v37)
  {
    v38 = v37;
    v39 = sub_23361E150();
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v42 = v57;
  swift_bridgeObjectRelease();
  *v42 = v39;
  v42[1] = v41;
  v43 = objc_msgSend(a1, sel_merchantIdentifier);
  v44 = sub_23361E150();
  v46 = v45;

  v47 = (uint64_t *)(a2 + v10[10]);
  *v47 = v44;
  v47[1] = v46;
  v48 = objc_msgSend(a1, sel_phoneNumber);
  if (v48)
  {
    v49 = v48;
    v50 = sub_23361E150();
    v52 = v51;

  }
  else
  {
    v50 = 0;
    v52 = 0;
  }
  v53 = v58;
  swift_bridgeObjectRelease();
  *v53 = v50;
  v53[1] = v52;
  v54 = objc_msgSend(a1, "url");
  sub_23361D2D4();

}

uint64_t _s10FinanceKit11RawMerchantV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  _QWORD v140[13];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  v130 = v4;
  v131 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v121 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  v7 = MEMORY[0x24BDAC7A8](v133);
  v122 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v129 = (uint64_t)&v112 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v112 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v134 = (uint64_t)&v112 - v23;
  v24 = *a1;
  v25 = a1[1];
  v26 = a1[2];
  v27 = a1[3];
  v28 = a1[4];
  v29 = a1[5];
  v30 = a1[6];
  v31 = a1[7];
  v32 = a1[8];
  v33 = a1[9];
  v35 = a1[10];
  v34 = a1[11];
  v127 = a1;
  v128 = a2;
  v36 = a1[12];
  v37 = *a2;
  v38 = a2[1];
  v39 = a2[2];
  v40 = a2[3];
  v41 = a2[5];
  v138 = a2[4];
  v42 = a2[7];
  v139 = (int *)a2[6];
  v43 = a2[8];
  v44 = a2[9];
  v137 = a2[10];
  v135 = a2[11];
  v45 = a2[12];
  v46 = v24;
  v136 = v45;
  v132 = v27;
  if (v24 == 1)
  {
    v124 = v34;
    v125 = v31;
    v126 = v19;
    v114 = v20;
    v115 = v21;
    v116 = v22;
    v113 = v13;
    v47 = v33;
    if (v37 == 1)
      goto LABEL_8;
LABEL_6:
    v141 = v46;
    v142 = v25;
    v143 = v26;
    v144 = v132;
    v145 = v28;
    v146 = v29;
    v147 = v30;
    v148 = v125;
    v149 = (int *)v32;
    v150 = v47;
    v151 = v35;
    v152 = v124;
    v153 = v36;
    v154 = v37;
    v155 = v38;
    v156 = v39;
    v157 = v40;
    v158 = v138;
    v159 = v41;
    v160 = v139;
    v161 = v42;
    v162 = v43;
    v163 = v44;
    v164 = v137;
    v165 = v135;
    v166 = v136;
    sub_23332938C(v37);
    sub_2334C6164(&v141);
    goto LABEL_20;
  }
  v141 = v24;
  v142 = v25;
  v143 = v26;
  v144 = v27;
  v145 = v28;
  v146 = v29;
  v147 = v30;
  v148 = v31;
  v149 = (int *)v32;
  v150 = v33;
  v151 = v35;
  v152 = v34;
  v153 = v36;
  v118 = v36;
  v119 = v32;
  v120 = v35;
  v117 = v30;
  v123 = v28;
  v48 = v26;
  if (v37 == 1)
  {
    v47 = v33;
    v124 = v34;
    v125 = v31;
    v133 = v41;
    v134 = v42;
    v130 = v39;
    v131 = v40;
    v128 = (uint64_t *)v43;
    v129 = v38;
    v49 = v118;
    v127 = (uint64_t *)v44;
    swift_bridgeObjectRetain();
    v112 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = v117;
    swift_bridgeObjectRetain();
    v51 = v119;
    swift_bridgeObjectRetain();
    v52 = v120;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = 1;
    v44 = (uint64_t)v127;
    v43 = (uint64_t)v128;
    v38 = v129;
    v39 = v130;
    v40 = v131;
    v41 = v133;
    v42 = v134;
    v36 = v49;
    v35 = v52;
    v32 = v51;
    v30 = v50;
    v28 = v123;
    v26 = v112;
    goto LABEL_6;
  }
  v126 = v19;
  v114 = v20;
  v115 = v21;
  v116 = v22;
  v113 = v13;
  v140[0] = v37;
  v140[1] = v38;
  v140[2] = v39;
  v140[3] = v40;
  v140[4] = v138;
  v140[5] = v41;
  v140[6] = v139;
  v140[7] = v42;
  v140[8] = v43;
  v140[9] = v44;
  v140[10] = v137;
  v140[11] = v135;
  v140[12] = v136;
  v53 = _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0((uint64_t)&v141, (uint64_t)v140);
  v139 = v149;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v53)
    goto LABEL_20;
LABEL_8:
  v54 = type metadata accessor for RawMerchant();
  v55 = v127;
  v56 = v134;
  sub_233199624((uint64_t)v127 + *(int *)(v54 + 20), v134);
  v139 = (int *)v54;
  v57 = v128;
  v58 = (uint64_t)v126;
  sub_233199624((uint64_t)v128 + *(int *)(v54 + 20), (uint64_t)v126);
  v59 = v129;
  v60 = v129 + *(int *)(v133 + 48);
  sub_233199624(v56, v129);
  sub_233199624(v58, v60);
  v61 = v130;
  v62 = v131;
  v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
  if (v63(v59, 1, v130) == 1)
  {
    sub_233168608(v58, &qword_254248700);
    sub_233168608(v56, &qword_254248700);
    if (v63(v60, 1, v61) != 1)
      goto LABEL_19;
    v64 = v63;
    v65 = v61;
    sub_233168608(v59, &qword_254248700);
  }
  else
  {
    v66 = v115;
    sub_233199624(v59, v115);
    if (v63(v60, 1, v61) == 1)
    {
      sub_233168608((uint64_t)v126, &qword_254248700);
      sub_233168608(v134, &qword_254248700);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v61);
      goto LABEL_19;
    }
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    v68 = v62;
    v69 = v121;
    v67(v121, v60, v61);
    sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
    LODWORD(v138) = sub_23361E108();
    v70 = v59;
    v71 = *(void (**)(char *, uint64_t))(v68 + 8);
    v64 = v63;
    v71(v69, v61);
    sub_233168608((uint64_t)v126, &qword_254248700);
    sub_233168608(v134, &qword_254248700);
    v71((char *)v66, v61);
    sub_233168608(v70, &qword_254248700);
    v65 = v61;
    if ((v138 & 1) == 0)
      goto LABEL_20;
  }
  v72 = v139;
  v73 = v116;
  sub_233199624((uint64_t)v55 + v139[6], v116);
  v74 = v114;
  sub_233199624((uint64_t)v57 + v72[6], v114);
  v59 = v122;
  v75 = v122 + *(int *)(v133 + 48);
  sub_233199624(v73, v122);
  sub_233199624(v74, v75);
  if (v64(v59, 1, v65) == 1)
  {
    sub_233168608(v74, &qword_254248700);
    sub_233168608(v73, &qword_254248700);
    if (v64(v75, 1, v65) == 1)
    {
      sub_233168608(v59, &qword_254248700);
      goto LABEL_23;
    }
LABEL_19:
    sub_233168608(v59, &qword_256045948);
    goto LABEL_20;
  }
  v76 = (uint64_t)v113;
  sub_233199624(v59, (uint64_t)v113);
  if (v64(v75, 1, v65) == 1)
  {
    sub_233168608(v74, &qword_254248700);
    sub_233168608(v116, &qword_254248700);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v76, v65);
    goto LABEL_19;
  }
  v79 = v131;
  v80 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v121, v75, v65);
  sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
  v81 = sub_23361E108();
  v82 = *(void (**)(char *, uint64_t))(v79 + 8);
  v82(v80, v65);
  sub_233168608(v74, &qword_254248700);
  sub_233168608(v116, &qword_254248700);
  v82((char *)v76, v65);
  sub_233168608(v59, &qword_254248700);
  if ((v81 & 1) == 0)
    goto LABEL_20;
LABEL_23:
  v83 = v139;
  v84 = v139[7];
  v85 = *(uint64_t *)((char *)v55 + v84);
  v86 = *(uint64_t *)((char *)v55 + v84 + 8);
  v87 = (uint64_t *)((char *)v57 + v84);
  if (v85 != *v87 || v86 != v87[1])
  {
    v88 = sub_23361F224();
    v77 = 0;
    if ((v88 & 1) == 0)
      return v77 & 1;
  }
  v89 = v83[8];
  v90 = (uint64_t *)((char *)v55 + v89);
  v91 = *(uint64_t *)((char *)v55 + v89 + 8);
  v92 = (uint64_t *)((char *)v57 + v89);
  v93 = v92[1];
  if (v91)
  {
    if (!v93)
      goto LABEL_20;
    if (*v90 != *v92 || v91 != v93)
    {
      v94 = sub_23361F224();
      v77 = 0;
      if ((v94 & 1) == 0)
        return v77 & 1;
    }
  }
  else if (v93)
  {
    goto LABEL_20;
  }
  v95 = v83[9];
  v96 = (uint64_t *)((char *)v55 + v95);
  v97 = *(uint64_t *)((char *)v55 + v95 + 8);
  v98 = (uint64_t *)((char *)v57 + v95);
  v99 = v98[1];
  if (v97)
  {
    if (!v99)
      goto LABEL_20;
    if (*v96 != *v98 || v97 != v99)
    {
      v100 = sub_23361F224();
      v77 = 0;
      if ((v100 & 1) == 0)
        return v77 & 1;
    }
  }
  else if (v99)
  {
    goto LABEL_20;
  }
  v101 = v83[10];
  v102 = *(uint64_t *)((char *)v55 + v101);
  v103 = *(uint64_t *)((char *)v55 + v101 + 8);
  v104 = (uint64_t *)((char *)v57 + v101);
  if (v102 != *v104 || v103 != v104[1])
  {
    v105 = sub_23361F224();
    v77 = 0;
    if ((v105 & 1) == 0)
      return v77 & 1;
  }
  v106 = v83[11];
  v107 = (uint64_t *)((char *)v55 + v106);
  v108 = *(uint64_t *)((char *)v55 + v106 + 8);
  v109 = (uint64_t *)((char *)v57 + v106);
  v110 = v109[1];
  if (!v108)
  {
    if (!v110)
    {
LABEL_50:
      v77 = MEMORY[0x234931620]((char *)v55 + v83[12], (char *)v57 + v83[12]);
      return v77 & 1;
    }
    goto LABEL_20;
  }
  if (!v110)
  {
LABEL_20:
    v77 = 0;
    return v77 & 1;
  }
  if (*v107 == *v109 && v108 == v110)
    goto LABEL_50;
  v111 = sub_23361F224();
  v77 = 0;
  if ((v111 & 1) != 0)
    goto LABEL_50;
  return v77 & 1;
}

unint64_t sub_2334C4988()
{
  unint64_t result;

  result = qword_2560527C0;
  if (!qword_2560527C0)
  {
    result = MEMORY[0x234934494](&unk_2336526F4, &type metadata for RawMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527C0);
  }
  return result;
}

uint64_t sub_2334C49CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for RawMerchant(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      v7 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v7;
      *(_QWORD *)(a1 + 96) = a2[12];
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      v9 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      v11 = a2[1];
      v12 = a2[2];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      v13 = a2[3];
      v14 = a2[4];
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      v15 = a2[5];
      v16 = a2[6];
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      v17 = a2[7];
      v18 = a2[8];
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      v19 = a2[9];
      v20 = a2[10];
      *(_QWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 72) = v19;
      v21 = a2[11];
      v22 = a2[12];
      *(_QWORD *)(a1 + 80) = v20;
      *(_QWORD *)(a1 + 88) = v21;
      *(_QWORD *)(a1 + 96) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v23 = a3[5];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_23361D340();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v30 = a3[6];
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    if (v28((char *)a2 + v30, 1, v26))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    v34 = a3[7];
    v35 = a3[8];
    v36 = (_QWORD *)((char *)v4 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (_QWORD *)((char *)v4 + v35);
    v40 = (uint64_t *)((char *)a2 + v35);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = a3[9];
    v43 = a3[10];
    v44 = (_QWORD *)((char *)v4 + v42);
    v45 = (uint64_t *)((char *)a2 + v42);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = (_QWORD *)((char *)v4 + v43);
    v48 = (uint64_t *)((char *)a2 + v43);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    v50 = a3[11];
    v51 = a3[12];
    v52 = (_QWORD *)((char *)v4 + v50);
    v53 = (uint64_t *)((char *)a2 + v50);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = (char *)v4 + v51;
    v56 = (uint64_t)a2 + v51;
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v55, v56, v26);
  }
  return v4;
}

uint64_t destroy for RawMerchant(char *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  char *v8;

  if (*(_QWORD *)a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = &a1[a2[5]];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v8 = &a1[a2[6]];
  if (!v7(v8, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(&a1[a2[12]], v5);
}

uint64_t initializeWithCopy for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);

  if (*(_QWORD *)a2 == 1)
  {
    v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v9;
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    v15 = *(_QWORD *)(a2 + 56);
    v16 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v15;
    v17 = *(_QWORD *)(a2 + 72);
    v18 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    v19 = *(_QWORD *)(a2 + 88);
    v20 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v19;
    *(_QWORD *)(a1 + 96) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v21 = a3[5];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_23361D340();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = a3[6];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  if (v26((const void *)(a2 + v28), 1, v24))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v29, v30, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  v32 = a3[7];
  v33 = a3[8];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = (_QWORD *)(a1 + v33);
  v38 = (_QWORD *)(a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a3[9];
  v41 = a3[10];
  v42 = (_QWORD *)(a1 + v40);
  v43 = (_QWORD *)(a2 + v40);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = (_QWORD *)(a1 + v41);
  v46 = (_QWORD *)(a2 + v41);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = a3[11];
  v49 = a3[12];
  v50 = (_QWORD *)(a1 + v48);
  v51 = (_QWORD *)(a2 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v53 = a1 + v49;
  v54 = a2 + v49;
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(v53, v54, v24);
  return a1;
}

uint64_t assignWithCopy for RawMerchant(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;

  v6 = *(_QWORD *)a1;
  v7 = *a2;
  if (v6 == 1)
  {
    if (v7 == 1)
    {
      v8 = *(_OWORD *)a2;
      v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      v10 = *((_OWORD *)a2 + 3);
      v11 = *((_OWORD *)a2 + 4);
      v12 = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_233326AE4(a1);
    v14 = *((_OWORD *)a2 + 1);
    v13 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v13;
    v16 = *((_OWORD *)a2 + 4);
    v15 = *((_OWORD *)a2 + 5);
    v17 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 48) = v17;
  }
  else
  {
    *(_QWORD *)a1 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = a3[5];
  v19 = (void *)(a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = sub_23361D340();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
LABEL_13:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_14:
  v27 = a3[6];
  v28 = (void *)(a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = v23((void *)(a1 + v27), 1, v21);
  v31 = v23(v29, 1, v21);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 24))(v28, v29, v21);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v28, v21);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v28, v29, v21);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
LABEL_20:
  v33 = a3[7];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)((char *)a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[9];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[10];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[11];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)((char *)a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24))(a1 + a3[12], (uint64_t)a2 + a3[12], v21);
  return a1;
}

uint64_t initializeWithTake for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  void (*v20)(void *, const void *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    v20 = *(void (**)(void *, const void *, uint64_t))(v13 + 32);
  }
  else
  {
    v20 = *(void (**)(void *, const void *, uint64_t))(v13 + 32);
    v20(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v21 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v20((void *)(a1 + v23), (const void *)(a2 + v23), v12);
  return a1;
}

uint64_t assignWithTake for RawMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  if (*(_QWORD *)a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_233326AE4(a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = a3[5];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_12:
  v24 = a3[6];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v20((void *)(a1 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v25, v26, v18);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_17;
  }
  if (v28)
  {
LABEL_17:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v25, v26, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
LABEL_18:
  v30 = a3[7];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[9];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[10];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[11];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(a1 + a3[12], a2 + a3[12], v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawMerchant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C59B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23361D340();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RawMerchant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334C5A70(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_23361D340();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[12];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2334C5B18()
{
  unint64_t v0;
  unint64_t v1;

  sub_233233038();
  if (v0 <= 0x3F)
  {
    sub_23361D340();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for RawMerchant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2334C5C10 + 4 * byte_233652516[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2334C5C44 + 4 * byte_233652511[v4]))();
}

uint64_t sub_2334C5C44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C5C4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334C5C54);
  return result;
}

uint64_t sub_2334C5C60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334C5C68);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2334C5C6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334C5C74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawMerchant.CodingKeys()
{
  return &type metadata for RawMerchant.CodingKeys;
}

unint64_t sub_2334C5C94()
{
  unint64_t result;

  result = qword_2560527D0;
  if (!qword_2560527D0)
  {
    result = MEMORY[0x234934494](&unk_2336526CC, &type metadata for RawMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527D0);
  }
  return result;
}

unint64_t sub_2334C5CDC()
{
  unint64_t result;

  result = qword_2560527D8;
  if (!qword_2560527D8)
  {
    result = MEMORY[0x234934494](&unk_23365263C, &type metadata for RawMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527D8);
  }
  return result;
}

unint64_t sub_2334C5D24()
{
  unint64_t result;

  result = qword_2560527E0;
  if (!qword_2560527E0)
  {
    result = MEMORY[0x234934494](&unk_233652664, &type metadata for RawMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560527E0);
  }
  return result;
}

uint64_t sub_2334C5D68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55746361746E6F63 && a2 == 0xEA00000000004C52 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233672360 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t *sub_2334C6164(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[13];
  sub_233329310(*a1);
  sub_233329310(v2);
  return a1;
}

uint64_t ManagedInstitutionImporter.__allocating_init()()
{
  return swift_allocObject();
}

id ManagedInstitutionImporter.insertOrUpdateInstitution(_:context:)(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v5 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (id)type metadata accessor for ManagedInstitution();
  v9 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*a1, a1[1], (uint64_t)a2);
  if (!v2)
  {
    v10 = v9;
    if (v9)
    {
      v8 = v9;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(v8, (uint64_t)a1, a2);
    }
    else
    {
      sub_2331684BC((uint64_t)a1, (uint64_t)v7, type metadata accessor for Institution);
      v8 = ManagedInstitution.__allocating_init(_:context:)((uint64_t)v7, a2);
    }
    sub_2334C6820((uint64_t)a1 + *(int *)(v5 + 60), v8, (uint64_t)a2);

  }
  return v8;
}

uint64_t ManagedInstitutionImporter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t *ManagedInstitutionImporter.insertOrUpdateInstitution(_:context:)(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v61;
  id v62;
  char *v63;
  uint64_t *v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;

  v79 = a2;
  v3 = type metadata accessor for BankConnectTermsAndConditions();
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v71 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_23361D634();
  v73 = *(_QWORD *)(v69 - 8);
  v7 = MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v61 - v9;
  v72 = type metadata accessor for RawBankConnectData.TermsAndConditions();
  v75 = *(_QWORD *)(v72 - 8);
  v10 = MEMORY[0x24BDAC7A8](v72);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v61 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046520);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for RawBankConnectData.Institution(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  v24 = (uint64_t)v78;
  v25 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*a1, a1[1], (uint64_t)v79);
  if (!v24)
  {
    v63 = v17;
    v64 = a1;
    v66 = 0;
    v67 = v14;
    v78 = v20;
    v27 = v72;
    v26 = v73;
    v61 = (uint64_t *)v12;
    v65 = v25;
    if (v25)
    {
      v62 = v25;
      v28 = (uint64_t)v64;
      v29 = (uint64_t)v79;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA18RawBankConnectDataO0D0VSo22NSManagedObjectContextCtFZ_0(v62, (uint64_t)v64, v79);
    }
    else
    {
      v28 = (uint64_t)v64;
      sub_2331684BC((uint64_t)v64, (uint64_t)v23, type metadata accessor for RawBankConnectData.Institution);
      v30 = (uint64_t)v79;
      v31 = v79;
      v32 = (uint64_t)v23;
      v29 = v30;
      v62 = (id)ManagedInstitution.__allocating_init(_:context:)(v32, v31);
    }
    v33 = v26;
    v34 = (uint64_t)v67;
    v35 = v27;
    v36 = v75;
    v37 = (uint64_t)v63;
    sub_2331686A0(v28 + *(int *)(v21 + 52), (uint64_t)v63, &qword_256046520);
    v38 = 1;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v35);
    v41 = v76;
    v40 = v77;
    v42 = v74;
    if (v39 != 1)
    {
      sub_233168580(v37, v34, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      v43 = v34;
      v44 = v61;
      sub_2331684BC(v43, (uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      v45 = v44[1];
      v75 = *v44;
      v46 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v47 = v35;
      v48 = v69;
      v46(v70, (char *)v44 + *(int *)(v35 + 24), v69);
      v49 = v33;
      v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      v50(v71, 1, 1, v48);
      v51 = (char *)v44 + *(int *)(v47 + 28);
      v52 = v68;
      v46(v68, v51, v48);
      v53 = (char *)v42 + *(int *)(v40 + 24);
      v50((uint64_t)v53, 1, 1, v48);
      *v42 = v75;
      v42[1] = v45;
      v54 = (char *)v42 + *(int *)(v40 + 20);
      v55 = (uint64_t)v42;
      v56 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      v56(v54, v70, v48);
      swift_bridgeObjectRetain();
      v57 = (uint64_t)v53;
      v29 = (uint64_t)v79;
      sub_23318C8A8(v71, v57);
      v56((char *)(v55 + *(int *)(v77 + 28)), v52, v48);
      v41 = v76;
      v40 = v77;
      sub_233168580(v55, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
      sub_233168500((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      sub_233168500((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      v38 = 0;
    }
    v58 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v78, v38, 1, v40);
    a1 = (uint64_t *)v62;
    v59 = v66;
    sub_2334C6820(v58, v62, v29);
    sub_2334C6B4C(v58);
    if (v59)

  }
  return a1;
}

uint64_t ManagedInstitutionImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedInstitutionImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_2334C6820(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;

  v4 = v3;
  v35 = (void *)a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BankConnectTermsAndConditions();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v33 - v15);
  sub_2331686A0(a1, (uint64_t)v9, &qword_254247CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2334C6B4C((uint64_t)v9);
    return objc_msgSend(a2, sel_setTermsAndConditionsObject_, 0);
  }
  else
  {
    v18 = (uint64_t)v14;
    v34 = a2;
    sub_233168580((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    v19 = (objc_class *)type metadata accessor for ManagedBankConnectTermsAndConditions();
    v20 = *v16;
    v21 = v16[1];
    swift_bridgeObjectRetain();
    v22 = v35;
    v23 = static ManagedBankConnectTermsAndConditions.existingTermsAndConditions(withID:in:)(v20, v21, (uint64_t)v35);
    if (v4)
    {
      sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      v24 = (void *)v23;
      swift_bridgeObjectRelease();
      if (v24)
      {
        v25 = v24;
        v26 = (void *)sub_23361D5B0();
        objc_msgSend(v25, sel_setPublishedAt_, v26);

        v27 = (void *)sub_23361D5B0();
        objc_msgSend(v25, sel_setInEffectOn_, v27);

        objc_msgSend(v34, sel_setTermsAndConditionsObject_, v25);
      }
      else
      {
        sub_2331684BC((uint64_t)v16, v18, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
        v28 = objc_allocWithZone(v19);
        v29 = v22;
        v25 = objc_msgSend(v28, sel_initWithContext_, v29);
        v30 = (void *)sub_23361E12C();
        objc_msgSend(v25, sel_setId_, v30);

        v31 = (void *)sub_23361D5B0();
        objc_msgSend(v25, sel_setPublishedAt_, v31);

        v32 = (void *)sub_23361D5B0();
        objc_msgSend(v25, sel_setInEffectOn_, v32);

        sub_233168500(v18, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
        objc_msgSend(v34, sel_setTermsAndConditionsObject_, v25);
      }

      return (id)sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    }
  }
}

uint64_t sub_2334C6B4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ManagedInstitutionImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedInstitutionImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedInstitutionImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void static ApplePayTransactionIdentifier.== infix(_:_:)(uint64_t *a1)
{
  sub_2334C71D4(*a1, a1[1]);
}

uint64_t ApplePayTransactionIdentifier.init(hexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = _s10Foundation4DataV10FinanceKitE10hexEncodedACSgSS_tcfC_0(a1, a2);
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = result;
  v7 = 0xF000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a3 = v6;
  a3[1] = v7;
  return result;
}

uint64_t ApplePayTransactionIdentifier.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ApplePayTransactionIdentifier.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2331D1374(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t ApplePayTransactionIdentifier.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23316BEA4(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ApplePayTransactionIdentifier.data.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayTransactionIdentifier.hexEncodedString.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  sub_2331D1374(v1, v2);
  sub_2331D32A4(v1, v2);
  v4 = v3;
  sub_23316BEA4(v1, v2);
  return v4;
}

uint64_t ApplePayTransactionIdentifier.hash(into:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_2331D1374(v2, v1);
  sub_23361D3D0();
  return sub_23316BEA4(v2, v1);
}

uint64_t ApplePayTransactionIdentifier.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_23361F350();
  sub_2331D1374(v1, v2);
  sub_23361D3D0();
  sub_23316BEA4(v1, v2);
  return sub_23361F3A4();
}

uint64_t ApplePayTransactionIdentifier.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  sub_2331D1374(v1, v2);
  sub_2331D32A4(v1, v2);
  v4 = v3;
  sub_23316BEA4(v1, v2);
  return v4;
}

void sub_2334C6DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2334C6E44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x2334C7028);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_2334C704C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_2334C6DE4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_2334C7120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23361CC38();
  v11 = result;
  if (result)
  {
    result = sub_23361CC5C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23361CC50();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2334C6DE4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_2334C71D4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2334C7220()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2334C7254 + dword_2334C742C[v0 >> 62]))();
}

uint64_t sub_2334C7264@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_2334C7450()
{
  unint64_t result;

  result = qword_256052880;
  if (!qword_256052880)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ApplePayTransactionIdentifier, &type metadata for ApplePayTransactionIdentifier);
    atomic_store(result, (unint64_t *)&qword_256052880);
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplePayTransactionIdentifier()
{
  return &type metadata for ApplePayTransactionIdentifier;
}

uint64_t sub_2334C74A4(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderApplication();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_21;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    if (!v9)
      return v10;
    v39 = MEMORY[0x24BEE4AF8];
    result = sub_233273E94(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v39;
    v32[1] = v2;
    v33 = a1 & 0xC000000000000001;
    v34 = v9;
    v35 = a1;
    while (v9 != v12)
    {
      if (v33)
        v13 = (id)MEMORY[0x234933120](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_storeIdentifier);
      v16 = objc_msgSend(v14, sel_launchURL);
      if (v16)
      {
        v17 = v16;
        v18 = v38;
        sub_23361D2D4();

        v19 = sub_23361D340();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
      }
      else
      {
        v20 = sub_23361D340();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v38, 1, 1, v20);
      }
      v21 = objc_msgSend(v14, sel_customProductPageIdentifier);
      if (v21)
      {
        v22 = v21;
        v23 = sub_23361E150();
        v25 = v24;

      }
      else
      {
        v23 = 0;
        v25 = 0;
      }
      v26 = v37;
      v27 = (uint64_t)v8 + *(int *)(v37 + 20);
      v28 = sub_23361D340();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
      v29 = (_QWORD *)((char *)v8 + *(int *)(v26 + 24));
      *v29 = 0;
      v29[1] = 0;
      *v8 = v15;
      sub_233170B8C(v38, v27, &qword_254248700);

      swift_bridgeObjectRelease();
      *v29 = v23;
      v29[1] = v25;
      v39 = v10;
      v31 = *(_QWORD *)(v10 + 16);
      v30 = *(_QWORD *)(v10 + 24);
      v2 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_233273E94(v30 > 1, v31 + 1, 1);
        v10 = v39;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v2;
      sub_233168580((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
      v9 = v34;
      a1 = v35;
      if (v34 == v12)
        return v10;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v9 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2334C77B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  BOOL v17;
  unsigned int v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RawOrderFulfillment();
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (v12)
  {
    v23[1] = v1;
    v26 = MEMORY[0x24BEE4AF8];
    sub_233273FCC(0, v12, 0);
    v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v24 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_2331684BC(v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_233168580((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v15 = v5[8];
        sub_233168500((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        LOBYTE(v16) = (v15 & 0x1F) == 3;
        v17 = v15 >= 5;
      }
      else
      {
        sub_233168580((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v18 = v8[40];
        sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v17 = v18 >= 7;
        v16 = (0x24u >> v18) & 1;
      }
      if (v17)
        v19 = 1;
      else
        v19 = v16;
      v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273FCC(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v26;
      }
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_233273FCC(v20 > 1, v21 + 1, 1);
        v13 = v26;
      }
      *(_QWORD *)(v13 + 16) = v21 + 1;
      *(_BYTE *)(v13 + v21 + 32) = v19;
      v14 += v24;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_2334C7A10(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_233273FCC(0, v1, 0);
    v2 = v11;
    v4 = *(_QWORD *)(type metadata accessor for RawOrderReturn() - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (unsigned __int8 *)(a1
                           + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                           + 8);
    do
    {
      v7 = *v6;
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_233273FCC(v8 > 1, v9 + 1, 1);
      v6 += v5;
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_BYTE *)(v11 + v9 + 32) = v7 > 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2334C7B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for RawOrderFulfillment();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v23 = v1;
    v29 = MEMORY[0x24BEE4AF8];
    sub_23327399C(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_2331684BC(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = v25;
        sub_233168580((uint64_t)v8, v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v13 = (uint64_t *)(v12 + *(int *)(v26 + 60));
        v15 = *v13;
        v14 = v13[1];
        swift_bridgeObjectRetain();
        v16 = v12;
        v17 = type metadata accessor for RawOrderPickupFulfillment;
      }
      else
      {
        sub_233168580((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v18 = &v5[*(int *)(v24 + 64)];
        v15 = *(_QWORD *)v18;
        v14 = *((_QWORD *)v18 + 1);
        swift_bridgeObjectRetain();
        v16 = (uint64_t)v5;
        v17 = type metadata accessor for RawOrderShippingFulfillment;
      }
      sub_233168500(v16, (uint64_t (*)(_QWORD))v17);
      v10 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23327399C(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v29;
      }
      v20 = *(_QWORD *)(v10 + 16);
      v19 = *(_QWORD *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_23327399C(v19 > 1, v20 + 1, 1);
        v10 = v29;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      v21 = v10 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v15;
      *(_QWORD *)(v21 + 40) = v14;
      v11 += v27;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_2334C7D68(_QWORD *(*a1)(uint64_t *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  result = MEMORY[0x24BEE4AF8];
  v12 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v11 = *(_OWORD *)(a3 + 16 * i + 32);
      v9 = a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v10)
      {
        MEMORY[0x234932730](v9);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23361E414();
        sub_23361E438();
        sub_23361E408();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_2334C7E8C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void (*v25)(_QWORD);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v30 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23361D634();
  v9 = *(_QWORD *)(v27 - 8);
  v10 = MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)&v24 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(type metadata accessor for RawOrderFulfillment() - 8);
  v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v28 = *(_QWORD *)(v14 + 72);
  v24 = a3;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BEE4AF8];
  v25 = a1;
  v17 = v27;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v17) == 1)
    {
      sub_233168608((uint64_t)v8, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      v18 = v9;
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v20 = v26;
      v19(v26, v8, v17);
      v19(v29, v20, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_2334A4964(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v22 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      if (v22 >= v21 >> 1)
        v16 = sub_2334A4964(v21 > 1, v22 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v22 + 1;
      v17 = v27;
      v19((char *)(v16+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v22), v29, v27);
      v9 = v18;
      a1 = v25;
    }
    v15 += v28;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_2334C8104(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id *);
  uint64_t v28;
  id v29;

  v27 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v28 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v21 - v10;
  if (a3 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_23361EF30())
  {
    v12 = MEMORY[0x24BEE4AF8];
    v24 = a3 & 0xC000000000000001;
    v13 = 4;
    v22 = a3;
    while (1)
    {
      v14 = v24 ? (id)MEMORY[0x234933120](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v29 = v14;
      v27(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v26) == 1)
      {
        sub_233168608((uint64_t)v7, &qword_256052AD8);
      }
      else
      {
        v17 = v23;
        sub_233168580((uint64_t)v7, v23, type metadata accessor for MapsSuggestionsOrderPickup);
        sub_233168580(v17, v25, type metadata accessor for MapsSuggestionsOrderPickup);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2334A5D94(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
          v12 = sub_2334A5D94(v18 > 1, v19 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_233168580(v25, v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v19, type metadata accessor for MapsSuggestionsOrderPickup);
        a3 = v22;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2334C83D8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t RawECommerceOrderContent.init(order:orderContent:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  Swift::String v97;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t *v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  uint64_t v105;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t *v111;
  void (*v112)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  void (*v117)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v6);
  v120 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  MEMORY[0x24BDAC7A8](v8);
  v115 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v11 = (uint64_t *)(a3 + v10[7]);
  *v11 = 0;
  v11[1] = 0;
  v111 = v11;
  v12 = (uint64_t *)(a3 + v10[10]);
  *v12 = 0;
  v12[1] = 0;
  v116 = v12;
  v13 = a3 + v10[14];
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)v13 = 0u;
  v14 = a3 + v10[15];
  v15 = type metadata accessor for RawOrderReturnInfo();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v114 = v14;
  v113 = v15;
  v112 = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1);
  v17 = a3 + v10[18];
  *(_OWORD *)v17 = xmmword_23363ADC0;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = 0u;
  *(_OWORD *)(v17 + 64) = 0u;
  v18 = (uint64_t *)(a3 + v10[22]);
  v18[6] = 0;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  *(_OWORD *)v18 = 0u;
  v19 = a3 + v10[23];
  v20 = type metadata accessor for RawOrderProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = a3 + v10[24];
  v22 = sub_23361D340();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v119 = v21;
  v118 = v22;
  v117 = v23;
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1);
  v24 = v10[25];
  v123 = a3;
  v25 = (uint64_t *)(a3 + v24);
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)&v122 = a2;
  v26 = objc_msgSend(a2, sel_associatedApplicationIdentifiers);
  if (v26)
  {
    v27 = v26;
    v28 = sub_23361E3F0();

  }
  else
  {
    v28 = MEMORY[0x24BEE4AF8];
  }
  v29 = v123;
  *(_QWORD *)(v123 + v10[21]) = v28;
  v30 = ManagedECommerceOrderContent.associatedApplications.getter();
  v31 = sub_2334C74A4(v30);
  v110 = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + v10[20]) = v31;
  v32 = objc_msgSend(a1, sel_authenticationToken);
  if (v32)
  {
    v33 = v32;
    v34 = sub_23361E150();
    v36 = v35;

  }
  else
  {
    v34 = 0;
    v36 = 0;
  }
  v121 = a1;
  swift_bridgeObjectRelease();
  *v25 = v34;
  v25[1] = v36;
  v37 = objc_msgSend((id)v122, sel_barcode);
  if (v37)
  {
    ManagedOrderBarcode.rawOrderBarcode.getter((uint64_t)&v124);

    v38 = *((_QWORD *)&v124 + 1);
    *(_QWORD *)&v109 = v124;
    v39 = v125;
    v40 = *((_QWORD *)&v125 + 1);
    v41 = *((_QWORD *)&v126 + 1);
    v37 = (id)v126;
    v42 = v127;
  }
  else
  {
    *(_QWORD *)&v109 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
  }
  sub_2333BD360(*v18, v18[1], v18[2], v18[3], v18[4]);
  *v18 = v109;
  v18[1] = v38;
  v18[2] = v39;
  v18[3] = v40;
  v18[4] = (uint64_t)v37;
  v18[5] = v41;
  v18[6] = v42;
  v43 = (void *)v122;
  ManagedECommerceOrderContent.changeNotifications.getter(&v124);
  v44 = v123;
  *(_BYTE *)(v123 + v10[8]) = v124;
  v45 = objc_msgSend(v43, sel_createdDate);
  sub_23361D5EC();

  v46 = v43;
  RawOrderCustomer.init(_:)(v46, (uint64_t *)&v124);
  v122 = v124;
  v109 = v125;
  v108 = v126;
  v107 = v127;
  v47 = v128;
  v48 = v129;
  sub_2332705EC(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
  v49 = v109;
  *(_OWORD *)v17 = v122;
  *(_OWORD *)(v17 + 16) = v49;
  v50 = v107;
  *(_OWORD *)(v17 + 32) = v108;
  *(_OWORD *)(v17 + 48) = v50;
  *(_QWORD *)(v17 + 64) = v47;
  *(_QWORD *)(v17 + 72) = v48;
  v51 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v52 = v110;
  v53 = sub_2331A6FB8(v51);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v124 = v53;
  v54 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v55 = sub_2331A70F4(v54);
  swift_bridgeObjectRelease();
  sub_2331896C8(v55);
  sub_2331A8628((_QWORD **)&v124);
  v56 = sub_2334067AC(v124);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v44 + v10[17]) = v56;
  v57 = ManagedECommerceOrderContent.lineItems.getter();
  v58 = sub_233361AE0(v57);
  *(_QWORD *)&v122 = v52;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v44 + v10[19]) = v58;
  RawMerchant.init(_:)(objc_msgSend(v46, sel_merchant), v44);
  v59 = v121;
  v60 = objc_msgSend(v121, sel_orderIdentifier);
  v61 = sub_23361E150();
  v63 = v62;

  v64 = (uint64_t *)(v44 + v10[6]);
  *v64 = v61;
  v64[1] = v63;
  v65 = objc_msgSend(v46, sel_orderManagementURL);
  sub_23361D2D4();

  v66 = objc_msgSend(v46, sel_orderNumber);
  if (v66)
  {
    v67 = v66;
    v68 = sub_23361E150();
    v70 = v69;

  }
  else
  {
    v68 = 0;
    v70 = 0;
  }
  v71 = v111;
  swift_bridgeObjectRelease();
  *v71 = v68;
  v71[1] = v70;
  v72 = v59;
  v73 = objc_msgSend(v59, sel_orderTypeIdentifier);
  v74 = sub_23361E150();
  v76 = v75;

  v77 = (uint64_t *)(v123 + v10[5]);
  *v77 = v74;
  v77[1] = v76;
  v78 = objc_msgSend(v46, sel_payment);
  if (v78)
  {
    RawOrderPayment.init(_:)(v78, &v124);
    v111 = (uint64_t *)v124;
    v110 = DWORD2(v125);
    *(_QWORD *)&v109 = v126;
    v79 = v127;
    *(_QWORD *)&v108 = *((_QWORD *)&v126 + 1);
    v80 = *((_QWORD *)&v127 + 1);
    v81 = v128;
    v82 = v129;
    v84 = *((_QWORD *)&v124 + 1);
    v83 = v125;
  }
  else
  {
    v111 = 0;
    v84 = 0;
    v83 = 0;
    v110 = 0;
    *(_QWORD *)&v109 = 0;
    *(_QWORD *)&v108 = 0;
    v79 = 0;
    v80 = 0;
    v81 = 0;
    v82 = 0;
  }
  sub_2333BD308(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40));
  *(_QWORD *)v13 = v111;
  *(_QWORD *)(v13 + 8) = v84;
  v85 = v110;
  *(_QWORD *)(v13 + 16) = v83;
  *(_QWORD *)(v13 + 24) = v85;
  v86 = v108;
  *(_QWORD *)(v13 + 32) = v109;
  *(_QWORD *)(v13 + 40) = v86;
  *(_QWORD *)(v13 + 48) = v79;
  *(_QWORD *)(v13 + 56) = v80;
  *(_QWORD *)(v13 + 64) = v81;
  *(_QWORD *)(v13 + 72) = v82;
  v87 = objc_msgSend(v46, sel_returnInfo);
  if (v87)
  {
    v88 = v87;
    v89 = v115;
    RawOrderReturnInfo.init(_:)(v88, v115);
    v112(v89, 0, 1, v113);

  }
  else
  {
    v89 = v115;
    v112(v115, 1, 1, v113);
  }
  v90 = (uint64_t)v120;
  sub_233170B8C(v89, v114, &qword_25604A468);
  v91 = ManagedECommerceOrderContent.returns.getter();
  v92 = sub_233406920(v91);
  swift_bridgeObjectRelease();
  v93 = v123;
  *(_QWORD *)(v123 + v10[16]) = v92;
  *(_WORD *)(v93 + v10[26]) = (unsigned __int16)objc_msgSend(v46, sel_schemaVersion);
  ManagedECommerceOrderContent.status.getter(&v124);
  *(_BYTE *)(v93 + v10[9]) = v124;
  v94 = objc_msgSend(v46, sel_statusDescription);
  if (v94)
  {
    v95 = v94;
    v96 = sub_23361D6B8();
    v97 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v96);
    countAndFlagsBits = v97._countAndFlagsBits;
    object = v97._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  v100 = v116;
  swift_bridgeObjectRelease();
  *v100 = countAndFlagsBits;
  v100[1] = (uint64_t)object;
  v101 = objc_msgSend(v46, sel_updatedDate);
  sub_23361D5EC();

  v102 = objc_msgSend(v72, sel_orderWebService);
  if (v102)
  {
    v103 = v102;
    v104 = objc_msgSend(v102, sel_baseURL);

    sub_23361D2D4();
    v105 = 0;
  }
  else
  {
    v105 = 1;
  }

  v117(v90, v105, 1, v118);
  return sub_233170B8C(v90, v119, &qword_254248700);
}

uint64_t RawOrderStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6574656C706D6F63;
  if (*v0 != 1)
    v1 = 0x656C6C65636E6163;
  if (*v0)
    return v1;
  else
    return 1852141679;
}

uint64_t RawECommerceOrderContent.ContentItem.lineItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for RawOrderReturn();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for RawOrderFulfillment();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - v15;
  v17 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
    v21 = *v4;
    swift_bridgeObjectRetain();
    v22 = (uint64_t)v4;
    v23 = type metadata accessor for RawOrderReturn;
  }
  else
  {
    sub_233168580((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_2331684BC((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v21 = *v7;
      swift_bridgeObjectRetain();
      v24 = (uint64_t)v7;
      v25 = type metadata accessor for RawOrderPickupFulfillment;
    }
    else
    {
      sub_233168580((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v21 = *v10;
      swift_bridgeObjectRetain();
      v24 = (uint64_t)v10;
      v25 = type metadata accessor for RawOrderShippingFulfillment;
    }
    sub_233168500(v24, (uint64_t (*)(_QWORD))v25);
    v23 = type metadata accessor for RawOrderFulfillment;
    v22 = (uint64_t)v16;
  }
  sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
  return v21;
}

uint64_t RawECommerceOrderContent.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  v4 = *(int *)(v3 + 24);
  v5 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  v7 = *v5;
  v6 = v5[1];
  v8 = v1 + v4;
  v9 = *(_QWORD *)(v1 + v4);
  v10 = *(_QWORD *)(v8 + 8);
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v10;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.showsAsActiveUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  if ((RawECommerceOrderContent.isActive.getter() & 1) != 0)
  {
    v2 = sub_23361D634();
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
    v4 = a1;
    v5 = 1;
  }
  else
  {
    sub_2334CEB74(a1);
    v2 = sub_23361D634();
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
    v4 = a1;
    v5 = 0;
  }
  return v3(v4, v5, 1, v2);
}

uint64_t RawECommerceOrderContent.automaticUpdatesEnabledUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v81)(_QWORD, _QWORD, _QWORD);
  int v82;
  void (*v83)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(_QWORD, _QWORD, _QWORD, _QWORD);
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;
  char *v123;
  uint64_t (*v124)(char *, char *, uint64_t);
  char *v125;
  char *v126;
  char v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t);
  char *v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  void (*v182)(unsigned int (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t (*v183)(uint64_t, uint64_t, uint64_t);
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t (*v200)(uint64_t, uint64_t, uint64_t);

  v176 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  MEMORY[0x24BDAC7A8](v2);
  v170 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for RawOrderReturn();
  v4 = *(_QWORD *)(v191 - 8);
  v5 = MEMORY[0x24BDAC7A8](v191);
  v186 = (uint64_t)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v161 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v196 = (uint64_t *)((char *)&v161 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v161 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052888);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v189 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v188 = (char *)&v161 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v195 = (uint64_t *)((char *)&v161 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v161 - v21);
  v194 = sub_23361D634();
  v199 = *(_QWORD *)(v194 - 8);
  v22 = MEMORY[0x24BDAC7A8](v194);
  v193 = (char *)&v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v190 = (char *)&v161 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v174 = (uint64_t)&v161 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v185 = (char *)&v161 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v187 = (char *)&v161 - v30;
  v177 = type metadata accessor for RawECommerceOrderContent(0);
  v31 = MEMORY[0x24BDAC7A8](v177);
  v172 = (uint64_t)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v179 = (uint64_t)&v161 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v165 = (uint64_t)&v161 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v180 = (uint64_t)&v161 - v37;
  v192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v169 = *(_QWORD *)(v192 - 8);
  v38 = MEMORY[0x24BDAC7A8](v192);
  v197 = (uint64_t)&v161 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v198 = (char *)&v161 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v173 = (uint64_t)&v161 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v171 = (char *)&v161 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v164 = (uint64_t)&v161 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v175 = (uint64_t)&v161 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v178 = (uint64_t)&v161 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v161 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52);
  v57 = (char *)&v161 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55);
  v60 = (char *)&v161 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58);
  v63 = (char *)&v161 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61);
  v66 = (char *)&v161 - v65;
  MEMORY[0x24BDAC7A8](v64);
  v68 = (char *)&v161 - v67;
  v69 = RawECommerceOrderContent.isActive.getter();
  if ((v69 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56))(v176, 1, 1, v194);
  v161 = v57;
  v163 = v60;
  v184 = v54;
  v162 = v63;
  v166 = v66;
  v71 = v177;
  v72 = *(_QWORD *)(v1 + *(int *)(v177 + 68));
  MEMORY[0x24BDAC7A8](v69);
  *(&v161 - 2) = (char *)v1;
  swift_bridgeObjectRetain();
  v73 = sub_2334C7E8C((void (*)(_QWORD))sub_2334DA814, (uint64_t)(&v161 - 4), v72);
  swift_bridgeObjectRelease();
  v167 = v68;
  sub_233300E84(v73, v68);
  swift_bridgeObjectRelease();
  v74 = *(_QWORD *)(v1 + *(int *)(v71 + 64));
  v168 = v1;
  sub_2331684BC(v1, v180, type metadata accessor for RawECommerceOrderContent);
  v75 = *(_QWORD *)(v74 + 16);
  result = swift_bridgeObjectRetain();
  v76 = v191;
  v77 = v194;
  if (v75)
  {
    v78 = 0;
    while (v78 < *(_QWORD *)(v74 + 16))
    {
      v79 = v78 + 1;
      sub_2331684BC(v74+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v78, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      if (v13[8] > 3u)
      {
        v80 = v200;
        sub_233168580((uint64_t)v13, (uint64_t)v200, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        v182 = *(void (**)(unsigned int (*)(_QWORD, _QWORD, _QWORD), _QWORD, uint64_t, uint64_t))(v4 + 56);
        v182((unsigned int (*)(_QWORD, _QWORD, _QWORD))v80, 0, 1, v76);
        goto LABEL_10;
      }
      result = sub_233168500((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v78 = v79;
      if (v75 == v79)
        goto LABEL_8;
    }
    goto LABEL_60;
  }
LABEL_8:
  v80 = v200;
  v182 = *(void (**)(unsigned int (*)(_QWORD, _QWORD, _QWORD), _QWORD, uint64_t, uint64_t))(v4 + 56);
  v182((unsigned int (*)(_QWORD, _QWORD, _QWORD))v200, 1, 1, v76);
  v79 = v75;
LABEL_10:
  v81 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v195;
  sub_233168478((uint64_t)v80, (uint64_t)v195, &qword_256052888);
  v183 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 48);
  v82 = v183(v81, 1, v76);
  v83 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v196;
  if (v82 == 1)
  {
    v84 = v199;
    v85 = (uint64_t)v163;
    v196 = *(uint64_t **)(v199 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v196)(v163, 1, 1, v77);
    v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
    v87 = (uint64_t)v189;
    v88 = v86(v85, 1, v77);
  }
  else
  {
    sub_233168580((uint64_t)v81, (uint64_t)v196, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
    v89 = (uint64_t)v161;
    sub_2331686A0((uint64_t)v83 + *(int *)(v76 + 40), (uint64_t)v161, (uint64_t *)&unk_254247DA0);
    v90 = v165;
    sub_2331684BC(v180, v165, type metadata accessor for RawECommerceOrderContent);
    v91 = v199;
    v200 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 48);
    if (v200(v89, 1, v77) == 1)
    {
      v85 = (uint64_t)v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v163, v90 + *(int *)(v177 + 48), v77);
      sub_233168608(v89, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      v85 = (uint64_t)v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v163, v89, v77);
    }
    v92 = v90;
    v93 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v196;
    sub_233168500(v92, type metadata accessor for RawECommerceOrderContent);
    sub_233168500((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
    v196 = *(uint64_t **)(v91 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v196)(v85, 0, 1, v77);
    v87 = (uint64_t)v189;
    v86 = v200;
    v88 = v200(v85, 1, v77);
  }
  v200 = v86;
  if (v88 != 1)
  {
    v195 = *(uint64_t **)(v199 + 32);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v195)(v187, v85, v77);
    v103 = (uint64_t)v188;
    v181 = v75;
    while (v79 == v75)
    {
LABEL_25:
      v105 = v103;
      v106 = v103;
      v107 = v191;
      v182((unsigned int (*)(_QWORD, _QWORD, _QWORD))v105, 1, 1, v191);
      v79 = v75;
LABEL_27:
      sub_233168478(v106, v87, &qword_256052888);
      v109 = v183(v87, 1, v107);
      v110 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v200;
      if (v109 == 1)
      {
        v111 = (uint64_t)v184;
        v112 = (uint64_t)v184;
        v113 = 1;
        v114 = v194;
      }
      else
      {
        v115 = v87;
        v116 = v186;
        sub_233168580(v115, v186, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        v117 = v116 + *(int *)(v107 + 40);
        v118 = v178;
        sub_2331686A0(v117, v178, (uint64_t *)&unk_254247DA0);
        v119 = v179;
        sub_2331684BC(v180, v179, type metadata accessor for RawECommerceOrderContent);
        v114 = v194;
        if (v110(v118, 1, v194) == 1)
        {
          v111 = (uint64_t)v184;
          (*(void (**)(char *, uint64_t, uint64_t))(v199 + 16))(v184, v119 + *(int *)(v177 + 48), v114);
          sub_233168608(v118, (uint64_t *)&unk_254247DA0);
        }
        else
        {
          v111 = (uint64_t)v184;
          ((void (*)(char *, uint64_t, uint64_t))v195)(v184, v118, v114);
        }
        v120 = v119;
        v121 = v186;
        sub_233168500(v120, type metadata accessor for RawECommerceOrderContent);
        sub_233168500(v121, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        v112 = v111;
        v113 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v196)(v112, v113, 1, v114);
      v94 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v200;
      v122 = v200(v111, 1, v114);
      v103 = (uint64_t)v188;
      if (v122 == 1)
      {
        sub_233168608(v111, (uint64_t *)&unk_254247DA0);
        v95 = (uint64_t)v162;
        ((void (*)(char *, char *, uint64_t))v195)(v162, v187, v114);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v196)(v95, 0, 1, v114);
        swift_bridgeObjectRelease();
        v96 = v168;
        v97 = v199;
        v98 = v174;
        v99 = v177;
        v100 = (uint64_t)v167;
        v102 = (uint64_t)v166;
        v101 = v180;
        v77 = v114;
        goto LABEL_37;
      }
      v123 = v185;
      v124 = (uint64_t (*)(char *, char *, uint64_t))v195;
      ((void (*)(char *, uint64_t, uint64_t))v195)(v185, v111, v114);
      sub_233167C58((unint64_t *)&qword_2560436A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v125 = v123;
      v126 = v187;
      v127 = sub_23361E0E4();
      v128 = *(void (**)(char *, uint64_t))(v199 + 8);
      if ((v127 & 1) != 0)
      {
        v128(v126, v114);
        result = v124(v126, v125, v114);
      }
      else
      {
        result = ((uint64_t (*)(char *, uint64_t))v128)(v125, v114);
      }
      v75 = v181;
      v87 = (uint64_t)v189;
    }
    while (v79 < *(_QWORD *)(v74 + 16))
    {
      v104 = v79 + 1;
      sub_2331684BC(v74+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v79, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      if (v9[8] > 3u)
      {
        sub_233168580((uint64_t)v9, v103, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        v108 = v103;
        v106 = v103;
        v107 = v191;
        v182((unsigned int (*)(_QWORD, _QWORD, _QWORD))v108, 0, 1, v191);
        ++v79;
        goto LABEL_27;
      }
      result = sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      ++v79;
      if (v75 == v104)
        goto LABEL_25;
    }
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
  v94 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v86;
  sub_233168608(v85, (uint64_t *)&unk_254247DA0);
  v95 = (uint64_t)v162;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v196)(v162, 1, 1, v77);
  swift_bridgeObjectRelease();
  v96 = v168;
  v97 = v199;
  v98 = v174;
  v99 = v177;
  v100 = (uint64_t)v167;
  v101 = v180;
  v102 = (uint64_t)v166;
LABEL_37:
  sub_233168500(v101, type metadata accessor for RawECommerceOrderContent);
  if (v94(v95, 1, v77) == 1)
  {
    sub_233168608(v95, (uint64_t *)&unk_254247DA0);
    v129 = 1;
  }
  else
  {
    Date.noon.getter(v98);
    v130 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v130(v95, v77);
    Date.advancedByDays(_:)(1, v102);
    v130(v98, v77);
    v129 = 0;
  }
  v131 = (uint64_t)v170;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v196)(v102, v129, 1, v77);
  sub_2331686A0(v96 + *(int *)(v99 + 60), v131, &qword_25604A468);
  v132 = type metadata accessor for RawOrderReturnInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 48))(v131, 1, v132) == 1)
  {
    v133 = &qword_25604A468;
    v134 = v131;
LABEL_44:
    sub_233168608(v134, v133);
    v136 = 1;
    v137 = v175;
    goto LABEL_46;
  }
  v135 = v164;
  sub_2331686A0(v131 + *(int *)(v132 + 28), v164, (uint64_t *)&unk_254247DA0);
  sub_233168500(v131, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
  if (v200(v135, 1, v77) == 1)
  {
    v133 = (uint64_t *)&unk_254247DA0;
    v134 = v135;
    goto LABEL_44;
  }
  Date.noon.getter(v98);
  v138 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
  v138(v135, v77);
  v137 = v175;
  Date.advancedByDays(_:)(5, v175);
  v138(v98, v77);
  v136 = 0;
LABEL_46:
  v139 = v169;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v196)(v137, v136, 1, v77);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052890);
  v140 = *(_QWORD *)(v139 + 72);
  v141 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  v142 = (uint64_t *)swift_allocObject();
  *((_OWORD *)v142 + 1) = xmmword_233627000;
  v195 = v142;
  v143 = (uint64_t)v142 + v141;
  sub_2331686A0(v100, v143, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(v102, v143 + v140, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(v137, v143 + 2 * v140, (uint64_t *)&unk_254247DA0);
  v144 = MEMORY[0x24BEE4AF8];
  v145 = 3;
  v194 = v143;
  v146 = v143;
  v147 = v193;
  v148 = (uint64_t)v198;
  do
  {
    sub_2331686A0(v146, v148, (uint64_t *)&unk_254247DA0);
    v149 = v148;
    v150 = v197;
    sub_233168478(v149, v197, (uint64_t *)&unk_254247DA0);
    if (v200(v150, 1, v77) == 1)
    {
      sub_233168608(v150, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      v151 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
      v152 = v190;
      v151(v190, v150, v77);
      v151(v147, (uint64_t)v152, v77);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v144 = sub_2334A4964(0, *(_QWORD *)(v144 + 16) + 1, 1, v144);
      v154 = *(_QWORD *)(v144 + 16);
      v153 = *(_QWORD *)(v144 + 24);
      if (v154 >= v153 >> 1)
        v144 = sub_2334A4964(v153 > 1, v154 + 1, 1, v144);
      *(_QWORD *)(v144 + 16) = v154 + 1;
      v97 = v199;
      v155 = v144
           + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))
           + *(_QWORD *)(v199 + 72) * v154;
      v147 = v193;
      v151((char *)v155, (uint64_t)v193, v77);
    }
    v148 = (uint64_t)v198;
    v146 += v140;
    --v145;
  }
  while (v145);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v156 = v171;
  sub_233300E84(v144, v171);
  swift_bridgeObjectRelease();
  v157 = v173;
  sub_2331686A0((uint64_t)v156, v173, (uint64_t *)&unk_254247DA0);
  v158 = v172;
  sub_2331684BC(v168, v172, type metadata accessor for RawECommerceOrderContent);
  if (v200(v157, 1, v77) == 1)
  {
    v159 = v174;
    Date.noon.getter(v174);
    v160 = v176;
    Date.advancedByDays(_:)(1, v176);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v159, v77);
    sub_233168500(v158, type metadata accessor for RawECommerceOrderContent);
    sub_233168608((uint64_t)v156, (uint64_t *)&unk_254247DA0);
    sub_233168608(v175, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v166, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v167, (uint64_t *)&unk_254247DA0);
    sub_233168608(v157, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    sub_233168500(v158, type metadata accessor for RawECommerceOrderContent);
    sub_233168608((uint64_t)v156, (uint64_t *)&unk_254247DA0);
    sub_233168608(v175, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v166, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v167, (uint64_t *)&unk_254247DA0);
    v160 = v176;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v176, v157, v77);
  }
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v196)(v160, 0, 1, v77);
}

_WORD *RawECommerceOrderContent.DecodingConfiguration.init(schemaVersion:)@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

uint64_t RawECommerceOrderContent.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  int v24;
  char *v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(void);
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  void (*v71)(uint64_t, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t *v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(void);
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  int *v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  unint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  int v163;
  char v164;

  v155 = a1;
  v128 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v4);
  v127 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  MEMORY[0x24BDAC7A8](v6);
  v126 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&v130 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_23361D340();
  v10 = *(_QWORD *)(v154 - 8);
  v11 = MEMORY[0x24BDAC7A8](v154);
  v129 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)&v131 = (char *)&v123 - v13;
  v151 = sub_23361D634();
  v147 = *(_QWORD *)(v151 - 8);
  v14 = MEMORY[0x24BDAC7A8](v151);
  *(_QWORD *)&v132 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v133 = (char *)&v123 - v16;
  v136 = type metadata accessor for RawMerchant();
  MEMORY[0x24BDAC7A8](v136);
  v138 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052898);
  v139 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v19 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v21 = (int *)MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a2;
  v163 = *((unsigned __int8 *)a2 + 2);
  v25 = &v23[v21[7]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v153 = (uint64_t *)v25;
  v134 = v21[8];
  v23[v134] = 2;
  v26 = &v23[v21[10]];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v150 = (uint64_t *)v26;
  v27 = (uint64_t *)&v23[v21[14]];
  *((_OWORD *)v27 + 3) = 0u;
  *((_OWORD *)v27 + 4) = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  v146 = v27;
  *(_OWORD *)v27 = 0u;
  v28 = (uint64_t)&v23[v21[15]];
  v29 = type metadata accessor for RawOrderReturnInfo();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v145 = v28;
  v30(v28, 1, 1, v29);
  v31 = (uint64_t *)&v23[v20[18]];
  *(_OWORD *)v31 = xmmword_23363ADC0;
  *((_OWORD *)v31 + 1) = 0u;
  *((_OWORD *)v31 + 2) = 0u;
  *((_OWORD *)v31 + 3) = 0u;
  v144 = v31;
  *((_OWORD *)v31 + 4) = 0u;
  v32 = &v23[v20[22]];
  *((_QWORD *)v32 + 6) = 0;
  *((_OWORD *)v32 + 1) = 0u;
  *((_OWORD *)v32 + 2) = 0u;
  v140 = (uint64_t *)v32;
  *(_OWORD *)v32 = 0u;
  v33 = (uint64_t)&v23[v20[23]];
  v34 = type metadata accessor for RawOrderProvider();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v141 = v33;
  v35(v33, 1, 1, v34);
  v36 = (uint64_t)&v23[v20[24]];
  v137 = v10;
  v37 = *(void (**)(void))(v10 + 56);
  v142 = v36;
  v37();
  v38 = &v23[v20[25]];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v143 = v38;
  v148 = v20;
  v149 = v23;
  *(_WORD *)&v23[v20[26]] = v24;
  v39 = v24;
  __swift_project_boxed_opaque_existential_1(v155, v155[3]);
  sub_2334D2694();
  v40 = v152;
  sub_23361F3EC();
  if (v40)
  {
    v152 = v40;
    v45 = v147;
    v47 = v148;
    v46 = (uint64_t)v149;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
    v48 = 0;
    v49 = 0;
    LODWORD(v138) = 0;
    LODWORD(v139) = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    goto LABEL_4;
  }
  v41 = v134;
  *(_QWORD *)&v125 = v29;
  v123 = v34;
  v124 = v37;
  LOBYTE(v158) = 0;
  sub_233167C58(&qword_2560528A8, (uint64_t (*)(uint64_t))type metadata accessor for RawMerchant, (uint64_t)&protocol conformance descriptor for RawMerchant);
  v42 = v138;
  v43 = v135;
  v44 = v19;
  sub_23361F068();
  LODWORD(v136) = v39;
  v55 = (uint64_t)v42;
  v46 = (uint64_t)v149;
  sub_233168580(v55, (uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  LOBYTE(v158) = 1;
  v56 = sub_23361F02C();
  v45 = v147;
  v47 = v148;
  v57 = (uint64_t *)(v46 + v148[5]);
  *v57 = v56;
  v57[1] = v58;
  LOBYTE(v158) = 2;
  v59 = sub_23361F02C();
  v60 = (uint64_t *)(v46 + v47[6]);
  *v60 = v59;
  v60[1] = v61;
  LOBYTE(v158) = 3;
  v62 = sub_23361EFCC();
  v63 = v153;
  *v153 = v62;
  v63[1] = v64;
  LOBYTE(v156) = 4;
  sub_2334D26D8();
  sub_23361EFFC();
  *(_BYTE *)(v46 + v41) = v158;
  LOBYTE(v156) = 5;
  sub_2334D271C();
  sub_23361F068();
  *(_BYTE *)(v46 + v47[9]) = v158;
  LOBYTE(v158) = 6;
  v65 = sub_23361EFCC();
  v66 = v150;
  *v150 = v65;
  v66[1] = v67;
  LOBYTE(v158) = 7;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v68 = v133;
  sub_23361F068();
  v152 = 0;
  v134 = 0;
  v69 = v43;
  v70 = v68;
  v71 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v71(v46 + v47[11], v70, v151);
  LOBYTE(v158) = 8;
  v72 = (char *)v132;
  v73 = v152;
  sub_23361F068();
  v74 = v73;
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v44, v43);
    v49 = 0;
    LODWORD(v138) = 0;
    LODWORD(v139) = 0;
    v53 = 0;
    LODWORD(v136) = 1;
    v48 = 1;
LABEL_32:
    v87 = v134;
    v152 = v74;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
    sub_233168500(v46, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
    if (v87)
    {
      v50 = v53;
      v51 = v53;
      v52 = v53;
      if (!(_DWORD)v136)
        goto LABEL_4;
    }
    else
    {
      swift_bridgeObjectRelease();
      v50 = v53;
      v51 = v53;
      v52 = v53;
      if ((v136 & 1) == 0)
        goto LABEL_4;
    }
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48)
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46 + v47[11], v151);
    if (v49)
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46 + v47[12], v151);
    if ((_DWORD)v138)
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v46 + v47[13], v154);
    sub_2333BD308(*v146, v146[1], v146[2], v146[3], v146[4], v146[5]);
    sub_233168608(v145, &qword_25604A468);
    if ((_DWORD)v139)
      swift_bridgeObjectRelease();
    if (v50)
      swift_bridgeObjectRelease();
    sub_2332705EC(*v144, v144[1]);
    if (v51)
    {
      swift_bridgeObjectRelease();
      if (!v52)
      {
LABEL_16:
        if (!v53)
        {
LABEL_18:
          sub_2333BD360(*v140, v140[1], v140[2], v140[3], v140[4]);
          sub_233168608(v141, &qword_25604A470);
          sub_233168608(v142, &qword_254248700);
          return swift_bridgeObjectRelease();
        }
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else if (!v52)
    {
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    if (!v53)
      goto LABEL_18;
    goto LABEL_17;
  }
  v71(v46 + v47[12], v72, v151);
  LOBYTE(v158) = 9;
  sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v75 = v44;
  sub_23361F068();
  v76 = &v149[v148[13]];
  v138 = *(char **)(v137 + 32);
  ((void (*)(char *, _QWORD, uint64_t))v138)(v76, v131, v154);
  v164 = 10;
  LOWORD(v156) = v136;
  v77 = sub_23361F0B0();
  v78 = 0uLL;
  if ((v77 & 1) != 0)
  {
    v79 = 0uLL;
    v80 = 0uLL;
    v81 = 0uLL;
    v82 = 0uLL;
  }
  else
  {
    sub_2334D2864();
    sub_23361EFB4();
    v78 = v158;
    v79 = v159;
    v80 = v160;
    v81 = v161;
    v82 = v162;
  }
  v83 = v146;
  *(_OWORD *)v146 = v78;
  *((_OWORD *)v83 + 1) = v79;
  *((_OWORD *)v83 + 2) = v80;
  *((_OWORD *)v83 + 3) = v81;
  *((_OWORD *)v83 + 4) = v82;
  LOBYTE(v158) = 11;
  sub_233167C58(&qword_2560528C0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderReturnInfo, (uint64_t)&protocol conformance descriptor for RawOrderReturnInfo);
  sub_23361EFFC();
  sub_233170B8C(v130, v145, &qword_25604A468);
  type metadata accessor for RawOrderReturn.DecodingConfiguration();
  v84 = swift_allocObject();
  v85 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v84 + 16) = MEMORY[0x24BEE4B08];
  v136 = v84;
  v86 = sub_2334CD618(12, v84, &qword_256052938, (void (*)(void))sub_2334DA780);
  v88 = MEMORY[0x24BEE4AF8];
  if (v86)
    v89 = v86;
  else
    v89 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v149[v148[16]] = v89;
  type metadata accessor for RawOrderFulfillment.DecodingConfiguration();
  v90 = swift_allocObject();
  *(_QWORD *)(v90 + 16) = v85;
  v133 = (char *)v90;
  v91 = sub_2334CD618(13, v90, &qword_256052950, (void (*)(void))sub_2334DA704);
  if (v91)
    v92 = v91;
  else
    v92 = v88;
  *(_QWORD *)&v149[v148[17]] = v92;
  LOBYTE(v156) = 14;
  sub_2334D2760();
  sub_23361EFFC();
  v152 = 0;
  v132 = v158;
  v131 = v159;
  v130 = v160;
  v125 = v161;
  v93 = v162;
  v94 = v144;
  sub_2332705EC(*v144, v144[1]);
  v95 = v131;
  *(_OWORD *)v94 = v132;
  *((_OWORD *)v94 + 1) = v95;
  v96 = v125;
  *((_OWORD *)v94 + 2) = v130;
  *((_OWORD *)v94 + 3) = v96;
  *((_OWORD *)v94 + 4) = v93;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
  LOBYTE(v156) = 15;
  sub_23330A8EC(&qword_256049D58, (uint64_t (*)(void))sub_23330A864, MEMORY[0x24BEE12D0]);
  v97 = v152;
  sub_23361EFFC();
  v152 = v97;
  if (v97)
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v44, v69);
    swift_release();
    swift_release();
    v51 = 0;
    v52 = 0;
    v53 = 0;
LABEL_42:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
    v46 = (uint64_t)v149;
    sub_233168500((uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
    v47 = v148;
    swift_bridgeObjectRelease();
    v48 = 1;
    v49 = 1;
    LODWORD(v138) = 1;
    LODWORD(v139) = 1;
    v50 = 1;
    v45 = v147;
    goto LABEL_26;
  }
  v98 = v158;
  if (!(_QWORD)v158)
    v98 = v88;
  *(_QWORD *)&v149[v148[19]] = v98;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560528D0);
  LOBYTE(v156) = 18;
  sub_2334D27A4();
  v99 = v152;
  sub_23361EFFC();
  v152 = v99;
  if (v99)
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v44, v69);
    swift_release();
    swift_release();
    v52 = 0;
    v53 = 0;
    v51 = 1;
    goto LABEL_42;
  }
  v100 = v158;
  if (!(_QWORD)v158)
    v100 = v88;
  *(_QWORD *)&v149[v148[20]] = v100;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  LOBYTE(v156) = 19;
  sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v101 = v152;
  sub_23361EFFC();
  v152 = v101;
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v44, v69);
    swift_release();
    swift_release();
    v53 = 0;
    v51 = 1;
    v52 = 1;
    goto LABEL_42;
  }
  v102 = v158;
  if (!(_QWORD)v158)
    v102 = v88;
  *(_QWORD *)&v149[v148[21]] = v102;
  LOBYTE(v156) = 20;
  sub_2334D2820();
  v103 = v152;
  sub_23361EFFC();
  v152 = v103;
  if (v103)
    goto LABEL_56;
  v132 = v158;
  v131 = v159;
  v130 = v160;
  v104 = v161;
  v105 = v140;
  sub_2333BD360(*v140, v140[1], v140[2], v140[3], v140[4]);
  v106 = v131;
  *(_OWORD *)v105 = v132;
  *((_OWORD *)v105 + 1) = v106;
  *((_OWORD *)v105 + 2) = v130;
  v105[6] = v104;
  LOBYTE(v158) = 21;
  sub_233167C58(&qword_2560528F0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderProvider, (uint64_t)&protocol conformance descriptor for RawOrderProvider);
  v107 = v152;
  sub_23361EFFC();
  v152 = v107;
  if (v107
    || (sub_233170B8C(v126, v141, &qword_25604A470), LOBYTE(v158) = 22, v108 = v152, sub_23361EFFC(), (v152 = v108) != 0))
  {
LABEL_56:
    (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v69);
    swift_release();
    swift_release();
LABEL_57:
    v51 = 1;
    v52 = 1;
    v53 = 1;
    goto LABEL_42;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v127, 1, v154) != 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v138)(v129, v127, v154);
    v114 = sub_23361D31C();
    if (v115)
    {
      *(_QWORD *)&v158 = v114;
      *((_QWORD *)&v158 + 1) = v115;
      v156 = 0x7370747468;
      v157 = 0xE500000000000000;
      sub_2331685C4();
      v116 = sub_23361EBF4();
      swift_bridgeObjectRelease();
      v117 = v163;
      if (!v116)
        v117 = 1;
      if ((v117 & 1) != 0)
        goto LABEL_65;
    }
    else if (v163)
    {
LABEL_65:
      v118 = v142;
      sub_233168608(v142, &qword_254248700);
      v119 = v154;
      (*(void (**)(uint64_t, char *, uint64_t))(v137 + 16))(v118, v129, v154);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v124)(v118, 0, 1, v119);
      LOBYTE(v158) = 23;
      v120 = v152;
      v121 = sub_23361F02C();
      v152 = v120;
      if (v120)
      {
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v137 + 8))(v129, v154);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v69);
        goto LABEL_57;
      }
      v110 = v121;
      v111 = v122;
      if (sub_23361E234() >= 16)
      {
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v137 + 8))(v129, v154);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v69);
        goto LABEL_60;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v158) = 23;
      sub_23361EE10();
      v74 = swift_allocError();
      sub_2331B1A14(&qword_2560528F8, &qword_256052898, MEMORY[0x24BEE33F8]);
LABEL_69:
      sub_23361EDE0();
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v129, v154);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v69);
      LODWORD(v136) = 1;
      v48 = 1;
      v49 = 1;
      LODWORD(v138) = 1;
      LODWORD(v139) = 1;
      v53 = 1;
      v45 = v147;
      v47 = v148;
      v46 = (uint64_t)v149;
      goto LABEL_32;
    }
    LOBYTE(v158) = 22;
    sub_23361EE10();
    v74 = swift_allocError();
    sub_2331B1A14(&qword_2560528F8, &qword_256052898, MEMORY[0x24BEE33F8]);
    goto LABEL_69;
  }
  (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v69);
  swift_release();
  swift_release();
  sub_233168608(v127, &qword_254248700);
  v109 = v142;
  sub_233168608(v142, &qword_254248700);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v124)(v109, 1, 1, v154);
  v110 = 0;
  v111 = 0;
LABEL_60:
  v112 = v143;
  swift_bridgeObjectRelease();
  *v112 = v110;
  v112[1] = v111;
  v113 = (uint64_t)v149;
  sub_2331684BC((uint64_t)v149, v128, type metadata accessor for RawECommerceOrderContent);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  return sub_233168500(v113, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawECommerceOrderContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  int v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  __int16 v29;
  char v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052908);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334D2694();
  sub_23361F410();
  LOBYTE(v23) = 0;
  type metadata accessor for RawMerchant();
  sub_233167C58(&qword_256052910, (uint64_t (*)(uint64_t))type metadata accessor for RawMerchant, (uint64_t)&protocol conformance descriptor for RawMerchant);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for RawECommerceOrderContent(0);
    LOBYTE(v23) = 1;
    sub_23361F140();
    LOBYTE(v23) = 2;
    sub_23361F140();
    LOBYTE(v23) = 3;
    sub_23361F0E0();
    LOBYTE(v23) = *(_BYTE *)(v3 + v9[8]);
    LOBYTE(v29) = 4;
    sub_2334D28A8();
    sub_23361F110();
    LOBYTE(v23) = *(_BYTE *)(v3 + v9[9]);
    LOBYTE(v29) = 5;
    sub_2334D28EC();
    sub_23361F17C();
    LOBYTE(v23) = 6;
    sub_23361F0E0();
    LOBYTE(v23) = 7;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    LOBYTE(v23) = 8;
    sub_23361F17C();
    LOBYTE(v23) = 9;
    v10 = sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F17C();
    v22[1] = v10;
    v11 = *(unsigned __int16 *)(v3 + v9[26]);
    v12 = (__int128 *)(v3 + v9[14]);
    v13 = v12[1];
    v23 = *v12;
    v24 = v13;
    v14 = v12[3];
    v25 = v12[2];
    v26 = v14;
    v27 = v12[4];
    v30 = 10;
    v28 = v11;
    v29 = v11;
    sub_2334D2930();
    sub_23361F0D4();
    LOBYTE(v23) = 11;
    type metadata accessor for RawOrderReturnInfo();
    sub_233167C58(&qword_256052930, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderReturnInfo, (uint64_t)&protocol conformance descriptor for RawOrderReturnInfo);
    sub_23361F110();
    if (*(_QWORD *)(*(_QWORD *)(v3 + v9[16]) + 16))
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v3 + v9[16]);
      LOBYTE(v29) = 12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052938);
      sub_2334D2974();
      sub_23361F17C();
    }
    if (*(_QWORD *)(*(_QWORD *)(v3 + v9[17]) + 16))
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v3 + v9[17]);
      LOBYTE(v29) = 13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256052950);
      sub_2334D29F0();
      sub_23361F17C();
    }
    v16 = (__int128 *)(v3 + v9[18]);
    v17 = v16[1];
    v23 = *v16;
    v24 = v17;
    v18 = v16[3];
    v25 = v16[2];
    v26 = v18;
    v27 = v16[4];
    LOBYTE(v29) = 14;
    sub_2334D2A6C();
    sub_23361F110();
    if (*(_QWORD *)(*(_QWORD *)(v3 + v9[19]) + 16))
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v3 + v9[19]);
      LOBYTE(v29) = 15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
      sub_23330A8EC(&qword_256049D78, (uint64_t (*)(void))sub_23330A954, MEMORY[0x24BEE12A0]);
      sub_23361F17C();
    }
    LOBYTE(v23) = 17;
    sub_2334D2AB0();
    sub_23361F17C();
    if (*(_QWORD *)(*(_QWORD *)(v3 + v9[20]) + 16))
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v3 + v9[20]);
      LOBYTE(v29) = 18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560528D0);
      sub_2334D2AF4();
      sub_23361F17C();
    }
    if (*(_QWORD *)(*(_QWORD *)(v3 + v9[21]) + 16))
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v3 + v9[21]);
      LOBYTE(v29) = 19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
      sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
      sub_23361F17C();
    }
    v19 = (__int128 *)(v3 + v9[22]);
    v20 = *((_QWORD *)v19 + 6);
    v21 = v19[1];
    v23 = *v19;
    v24 = v21;
    v25 = v19[2];
    *(_QWORD *)&v26 = v20;
    LOBYTE(v29) = 20;
    sub_2334D2B70();
    sub_23361F110();
    LOBYTE(v23) = 21;
    type metadata accessor for RawOrderProvider();
    sub_233167C58(&qword_256052990, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderProvider, (uint64_t)&protocol conformance descriptor for RawOrderProvider);
    sub_23361F110();
    LOBYTE(v23) = 22;
    sub_23361F110();
    LOBYTE(v23) = 23;
    sub_23361F0E0();
    LOWORD(v23) = v28;
    LOBYTE(v29) = 24;
    sub_2334D2BB4();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

FinanceKit::RawOrderStatus_optional __swiftcall RawOrderStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawOrderStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2334CC310(char *a1, unsigned __int8 *a2)
{
  return sub_233228530(*a1, *a2);
}

uint64_t sub_2334CC31C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334CC3BC()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334CC438()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawOrderStatus_optional sub_2334CC4D4(Swift::String *a1)
{
  return RawOrderStatus.init(rawValue:)(*a1);
}

void sub_2334CC4E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0x6574656C706D6F63;
  if (v2 != 1)
    v4 = 0x656C6C65636E6163;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 1852141679;
  if (!v5)
    v3 = 0xE900000000000064;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_2334CC540()
{
  sub_2334DA6C0();
  return sub_23361E390();
}

uint64_t sub_2334CC59C()
{
  sub_2334DA6C0();
  return sub_23361E354();
}

BOOL static RawOrderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RawOrderError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t RawOrderError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t RawECommerceOrderContent.merchant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
}

uint64_t RawECommerceOrderContent.merchant.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2334D2BF8(a1, v1);
}

uint64_t (*RawECommerceOrderContent.merchant.modify())()
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderTypeIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.orderNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.orderNumber.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.changeNotifications.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t RawECommerceOrderContent.changeNotifications.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RawECommerceOrderContent(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.changeNotifications.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.status.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t RawECommerceOrderContent.status.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RawECommerceOrderContent(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.status.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawECommerceOrderContent.statusDescription.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 44);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.createdAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 44);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.createdAt.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 48);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.updatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 48);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.updatedAt.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderManagementURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 52);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawECommerceOrderContent.orderManagementURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 52);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawECommerceOrderContent.orderManagementURL.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.payment.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_2333BF1C8(v4, v5, v6, v7, v8, v9);
}

__n128 RawECommerceOrderContent.payment.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;

  v9 = *a1;
  v7 = a1[2];
  v8 = a1[1];
  v6 = a1[3];
  v2 = a1[4].n128_u64[0];
  v3 = a1[4].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56));
  sub_2333BD308(v4->n128_u64[0], v4->n128_i64[1], v4[1].n128_i64[0], v4[1].n128_i64[1], v4[2].n128_i64[0], v4[2].n128_i64[1]);
  *v4 = v9;
  v4[1] = v8;
  result = v6;
  v4[2] = v7;
  v4[3] = v6;
  v4[4].n128_u64[0] = v2;
  v4[4].n128_u64[1] = v3;
  return result;
}

uint64_t (*RawECommerceOrderContent.payment.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.returnInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 60), a1, &qword_25604A468);
}

uint64_t RawECommerceOrderContent.returnInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 60), &qword_25604A468);
}

uint64_t (*RawECommerceOrderContent.returnInfo.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.returns.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.fulfillments.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.customer.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 72));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_233270458(v4, v5);
}

__n128 RawECommerceOrderContent.customer.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v9 = *a1;
  v7 = a1[2];
  v8 = a1[1];
  v6 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  v4 = v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 72);
  sub_2332705EC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_OWORD *)v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 64) = v2;
  *(_QWORD *)(v4 + 72) = v3;
  return result;
}

uint64_t (*RawECommerceOrderContent.customer.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.lineItems.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.lineItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 76);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.lineItems.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.associatedApplications.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.associatedApplications.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 80);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.associatedApplications.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.associatedApplicationIdentifiers.getter()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.associatedApplicationIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 84);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RawECommerceOrderContent.associatedApplicationIdentifiers.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.barcode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 88));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return sub_233364468(v4, v5, v6, v7, v8);
}

__n128 RawECommerceOrderContent.barcode.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 88));
  sub_2333BD360(*v3, v3[1], v3[2], v3[3], v3[4]);
  *(_OWORD *)v3 = v7;
  *((_OWORD *)v3 + 1) = v6;
  result = v5;
  *((__n128 *)v3 + 2) = v5;
  v3[6] = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.barcode.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.orderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 92), a1, &qword_25604A470);
}

uint64_t RawECommerceOrderContent.orderProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 92), &qword_25604A470);
}

uint64_t (*RawECommerceOrderContent.orderProvider.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.webServiceURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 96), a1, &qword_254248700);
}

uint64_t RawECommerceOrderContent.authenticationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 100));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawECommerceOrderContent.schemaVersion.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawECommerceOrderContent(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 104));
  return result;
}

uint64_t RawECommerceOrderContent.schemaVersion.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RawECommerceOrderContent(0);
  *(_WORD *)(v1 + *(int *)(result + 104)) = v2;
  return result;
}

uint64_t (*RawECommerceOrderContent.schemaVersion.modify())(_QWORD)
{
  type metadata accessor for RawECommerceOrderContent(0);
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.init(orderTypeIdentifier:orderIdentifier:status:merchant:orderManagementURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v14;
  _QWORD *v15;
  _QWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char v36;
  uint64_t v38;

  v36 = *a5;
  v14 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v15 = (_QWORD *)(a8 + v14[7]);
  *v15 = 0;
  v15[1] = 0;
  v38 = v14[8];
  *(_BYTE *)(a8 + v38) = 2;
  v16 = (_QWORD *)(a8 + v14[10]);
  *v16 = 0;
  v16[1] = 0;
  v17 = (_OWORD *)(a8 + v14[14]);
  v17[3] = 0u;
  v17[4] = 0u;
  v17[1] = 0u;
  v17[2] = 0u;
  *v17 = 0u;
  v18 = a8 + v14[15];
  v19 = type metadata accessor for RawOrderReturnInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_OWORD *)(a8 + v14[18]);
  *v20 = xmmword_23363ADC0;
  v20[1] = 0u;
  v20[2] = 0u;
  v20[3] = 0u;
  v20[4] = 0u;
  v21 = a8 + v14[22];
  *(_QWORD *)(v21 + 48) = 0;
  *(_OWORD *)(v21 + 16) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)v21 = 0u;
  v22 = a8 + v14[23];
  v23 = type metadata accessor for RawOrderProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = a8 + v14[24];
  v25 = sub_23361D340();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
  v27 = (_QWORD *)(a8 + v14[25]);
  *v27 = 0;
  v27[1] = 0;
  *(_WORD *)(a8 + v14[26]) = 1;
  v28 = (_QWORD *)(a8 + v14[5]);
  *v28 = a1;
  v28[1] = a2;
  v29 = (_QWORD *)(a8 + v14[6]);
  *v29 = a3;
  v29[1] = a4;
  *(_BYTE *)(a8 + v14[9]) = v36;
  v30 = a6;
  sub_2331684BC(a6, a8, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  v31 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + v14[19]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + v14[17]) = v31;
  *(_QWORD *)(a8 + v14[16]) = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(a8 + v14[13], a7, v25);
  v32 = a8 + v14[11];
  sub_23361D5F8();
  v33 = a8 + v14[12];
  v34 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v33, v32, v34);
  *(_QWORD *)(a8 + v14[20]) = v31;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a7, v25);
  result = sub_233168500(v30, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  *(_QWORD *)(a8 + v14[21]) = v31;
  *(_BYTE *)(a8 + v38) = 0;
  return result;
}

uint64_t sub_2334CD618(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  void *v4;
  char v7;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256052898);
  v7 = sub_23361F0B0();
  if (v4)
  {

    return 0;
  }
  else if ((v7 & 1) != 0)
  {
    return 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    a4();
    sub_23361EFB4();
    return v9;
  }
}

uint64_t sub_2334CD6E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334CD718 + 4 * byte_233652840[a1]))(0x746E61686372656DLL, 0xE800000000000000);
}

unint64_t sub_2334CD718()
{
  return 0xD000000000000013;
}

uint64_t sub_2334CD974()
{
  return 0x6556616D65686373;
}

uint64_t sub_2334CD998(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2334CD6E4(*a1);
  v5 = v4;
  if (v3 == sub_2334CD6E4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2334CDA20()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23361F350();
  sub_2334CD6E4(v1);
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334CDA80()
{
  unsigned __int8 *v0;

  sub_2334CD6E4(*v0);
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334CDAC0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23361F350();
  sub_2334CD6E4(v1);
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334CDB1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2334D2C80();
  *a1 = result;
  return result;
}

uint64_t sub_2334CDB48@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2334CD6E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2334CDB70()
{
  unsigned __int8 *v0;

  return sub_2334CD6E4(*v0);
}

uint64_t sub_2334CDB78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2334D2C80();
  *a1 = result;
  return result;
}

uint64_t sub_2334CDB9C()
{
  sub_2334D2694();
  return sub_23361F428();
}

uint64_t sub_2334CDBC4()
{
  sub_2334D2694();
  return sub_23361F434();
}

uint64_t RawECommerceOrderContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned __int16 v11;
  unsigned __int16 *v12;
  uint64_t v14;
  _QWORD v15[5];
  unsigned __int16 v16;
  char v17;

  v14 = a2;
  v4 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052898);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334D2694();
  sub_23361F3EC();
  if (!v2)
  {
    LOBYTE(v16) = 24;
    sub_23346C5D0();
    sub_23361F068();
    v11 = v15[0];
    if (SLOWORD(v15[0]) <= 1)
    {
      LOBYTE(v15[0]) = 17;
      sub_23346C614();
      sub_23361F068();
      sub_233177068((uint64_t)a1, (uint64_t)v15);
      v16 = v11;
      v17 = 0;
      RawECommerceOrderContent.init(from:configuration:)(v15, &v16, (uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_233168580((uint64_t)v6, v14, type metadata accessor for RawECommerceOrderContent);
    }
    else
    {
      sub_23346C658();
      swift_allocError();
      *v12 = v11;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void RawECommerceOrderContent.DecodingConfiguration.schemaVersion.getter(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

_WORD *RawECommerceOrderContent.DecodingConfiguration.schemaVersion.setter(_WORD *result)
{
  _WORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RawECommerceOrderContent.DecodingConfiguration.schemaVersion.modify())()
{
  return nullsub_1;
}

uint64_t RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*RawECommerceOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.modify())()
{
  return nullsub_1;
}

uint64_t sub_2334CDE5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawECommerceOrderContent.init(from:)(a1, a2);
}

uint64_t sub_2334CDE70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  unsigned __int16 v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 2);
  v5 = *(_WORD *)a2;
  v6 = v3;
  return RawECommerceOrderContent.init(from:configuration:)(a1, &v5, a3);
}

uint64_t sub_2334CDEA0(_QWORD *a1)
{
  return RawECommerceOrderContent.encode(to:)(a1);
}

FinanceKit::RawOrderStatus __swiftcall RawOrderStatus.init(_:)(FinanceKit::RawOrderStatus result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

FinanceKit::RawOrderChangeNotificationsValue __swiftcall RawOrderChangeNotificationsValue.init(_:)(FinanceKit::RawOrderChangeNotificationsValue result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

uint64_t type metadata accessor for RawECommerceOrderContent(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254246080);
}

Swift::Void __swiftcall RawECommerceOrderContent.clearFulfillments()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 68);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + v1) = MEMORY[0x24BEE4AF8];
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RawECommerceOrderContent.setFulfillments(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12[4];

  v2 = v1;
  v12[3] = MEMORY[0x24BEE4B08];
  v4 = sub_2334C7B04((uint64_t)a1._rawValue);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (uint64_t *)(v4 + 40);
    while (1)
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      swift_bridgeObjectRetain();
      v9 = sub_233308400(v12, v8, v7);
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
        break;
      v6 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2334D2C3C();
    swift_allocError();
    *v11 = 2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    v10 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(Swift::OpaquePointer *)(v2 + v10) = a1;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RawECommerceOrderContent.setReturns(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *rawValue;
  uint64_t v22[4];

  v4 = type metadata accessor for RawOrderReturn();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[3] = MEMORY[0x24BEE4B08];
  v9 = *((_QWORD *)a1._rawValue + 2);
  if (v9)
  {
    v19 = v1;
    v20 = v2;
    v10 = (uint64_t *)&v8[*(int *)(v5 + 64)];
    v11 = (char *)a1._rawValue
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    rawValue = a1._rawValue;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2331684BC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v13 = *v10;
      v14 = v10[1];
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v15 = sub_233308400(v22, v13, v14);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        break;
      v11 += v12;
      if (!--v9)
      {
        a1._rawValue = rawValue;
        swift_bridgeObjectRelease();
        v1 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2334D2C3C();
    swift_allocError();
    *v17 = 3;
    swift_willThrow();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    v16 = *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(Swift::OpaquePointer *)(v1 + v16) = a1;
  }
}

uint64_t RawECommerceOrderContent.setAutomaticUpdatesInfo(webServiceURL:authenticationToken:allowHTTP:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  result = sub_2334D2CD0(a1, a2, a3, a4);
  if (!v5)
  {
    v10 = type metadata accessor for RawECommerceOrderContent(0);
    v11 = v4 + *(int *)(v10 + 96);
    sub_233168608(v11, &qword_254248700);
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    v14 = (uint64_t *)(v4 + *(int *)(v10 + 100));
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *v14 = a2;
    v14[1] = a3;
  }
  return result;
}

uint64_t RawECommerceOrderContent.versionIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v4 = v3[6];
  v5 = (uint64_t *)(v1 + v3[5]);
  v7 = *v5;
  v6 = v5[1];
  v9 = *(_QWORD *)(v1 + v4);
  v8 = *(_QWORD *)(v1 + v4 + 8);
  v10 = v1 + v3[12];
  v11 = (char *)a1 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  v12 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RawECommerceOrderContent.imageNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawOrderProvider();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = RawECommerceOrderContent.lineItemsImageNames.getter();
  v8 = (uint64_t *)(v0 + *(int *)(type metadata accessor for RawMerchant() + 36));
  v9 = v8[1];
  if (v9)
  {
    v10 = *v8;
    swift_bridgeObjectRetain();
    sub_233308400(&v18, v10, v9);
    swift_bridgeObjectRelease();
  }
  v11 = type metadata accessor for RawECommerceOrderContent(0);
  sub_2331686A0(v0 + *(int *)(v11 + 92), (uint64_t)v3, &qword_25604A470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v3, &qword_25604A470);
  }
  else
  {
    sub_233168580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v12 = v7[4];
    v13 = v7[5];
    swift_bridgeObjectRetain();
    sub_233308400(&v18, v12, v13);
    swift_bridgeObjectRelease();
    v14 = v7[2];
    v15 = v7[3];
    swift_bridgeObjectRetain();
    sub_233308400(&v18, v14, v15);
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
  }
  return v19;
}

uint64_t RawECommerceOrderContent.lineItemsImageNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_QWORD *)((char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for RawOrderFulfillment();
  v42[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BEE4B08];
  v43 = type metadata accessor for RawECommerceOrderContent(0);
  v44 = v0;
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23331E51C(v10);
  v42[1] = 0;
  swift_bridgeObjectRelease();
  v12 = v11[2];
  if (v12)
  {
    v13 = v11 + 5;
    do
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      swift_bridgeObjectRetain();
      sub_233308400(&v45, v14, v15);
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v44 + *(int *)(v43 + 68));
  v17 = MEMORY[0x24BEE4AF8];
  v45 = MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v19 = v16 + ((*(unsigned __int8 *)(v42[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42[0] + 80));
    v20 = *(_QWORD *)(v42[0] + 72);
    v42[0] = v16;
    swift_bridgeObjectRetain();
    do
    {
      sub_2331684BC(v19, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_233168580((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v21 = *v3;
        swift_bridgeObjectRetain();
        v22 = (uint64_t)v3;
        v23 = type metadata accessor for RawOrderPickupFulfillment;
      }
      else
      {
        sub_233168580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v21 = *v6;
        swift_bridgeObjectRetain();
        v22 = (uint64_t)v6;
        v23 = type metadata accessor for RawOrderShippingFulfillment;
      }
      sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
      sub_233189CE4(v21);
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v24 = v45;
    v17 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  v25 = sub_23331E51C(v24);
  swift_bridgeObjectRelease();
  v26 = v25[2];
  if (v26)
  {
    v27 = v25 + 5;
    do
    {
      v28 = *(v27 - 1);
      v29 = *v27;
      swift_bridgeObjectRetain();
      sub_233308400(&v45, v28, v29);
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v44 + *(int *)(v43 + 64));
  v45 = v17;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v32 = *(_QWORD *)(type metadata accessor for RawOrderReturn() - 8);
    v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v34 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v35 = swift_bridgeObjectRetain();
      sub_233189CE4(v35);
      v33 += v34;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    v17 = v45;
  }
  v36 = sub_23331E51C(v17);
  swift_bridgeObjectRelease();
  v37 = v36[2];
  if (v37)
  {
    v38 = v36 + 5;
    do
    {
      v39 = *(v38 - 1);
      v40 = *v38;
      swift_bridgeObjectRetain();
      sub_233308400(&v45, v39, v40);
      swift_bridgeObjectRelease();
      v38 += 2;
      --v37;
    }
    while (v37);
  }
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t RawECommerceOrderContent.receiptNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (!*(_QWORD *)(v0 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 56) + 40))
    return MEMORY[0x24BEE4B08];
  v1 = swift_bridgeObjectRetain();
  v2 = sub_233563948(v1);
  swift_bridgeObjectRelease();
  v3 = sub_2331C92EC((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t RawECommerceOrderContent.returnLabelNames.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  type metadata accessor for RawECommerceOrderContent(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_233563A80(v0);
  swift_bridgeObjectRelease();
  v2 = sub_2331C92EC((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t RawECommerceOrderContent.isActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _BYTE v22[8];
  uint64_t v23;

  v1 = type metadata accessor for RawOrderReturn();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for RawECommerceOrderContent(0);
  if (*(_BYTE *)(v0 + *(int *)(v5 + 36)))
  {
    if (*(_BYTE *)(v0 + *(int *)(v5 + 36)) != 1)
      return 0;
    v6 = *(_QWORD *)(v0 + *(int *)(v5 + 64));
    v7 = *(_QWORD *)(v6 + 16);
    if (!v7)
      return 0;
    v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2331684BC(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v10 = v4[8];
      sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      if (v10 <= 3)
        break;
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  v12 = swift_bridgeObjectRetain();
  v13 = sub_2334C77B8(v12);
  swift_bridgeObjectRelease();
  v23 = v13;
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2334C7A10(v14);
  swift_bridgeObjectRelease();
  sub_23318A0B0(v15);
  result = v23;
  v17 = *(_QWORD *)(v23 + 16);
  if (!v17 || *(_BYTE *)(v23 + 32) != 1)
  {
    v11 = 1;
    swift_bridgeObjectRelease();
    return v11;
  }
  if (v17 == 1)
  {
    v11 = 0;
    swift_bridgeObjectRelease();
    return v11;
  }
  v18 = 33;
  while (1)
  {
    v19 = v18 - 31;
    if (__OFADD__(v18 - 32, 1))
      break;
    v20 = *(unsigned __int8 *)(v23 + v18++);
    if (v20 != 1 || v19 == v17)
    {
      v11 = v20 ^ 1u;
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2334CEB74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t result;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t);
  int v97;
  uint64_t v98;
  void (*v99)(_QWORD, _QWORD, _QWORD);
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t (*v117)(uint64_t, uint64_t, char *);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  char v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  int v143;
  int v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(char *, uint64_t, uint64_t);
  char *v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  char *v171;
  unsigned int (*v172)(uint64_t, uint64_t, uint64_t);
  uint64_t v173;
  char *v174;
  char *v175;
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  char v178;
  char v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t (*v215)(char *, uint64_t, uint64_t);
  void (*v216)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  void (*v222)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v223;
  uint64_t v224;
  _QWORD *v225;
  char *v226;

  v2 = v1;
  v197 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AE0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v185 = (uint64_t)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v200 = (char *)&v183 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v190 = (uint64_t)&v183 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v203 = (uint64_t)&v183 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v202 = (char *)&v183 - v12;
  v221 = type metadata accessor for RawOrderReturn();
  v13 = *(_QWORD *)(v221 - 8);
  v14 = MEMORY[0x24BDAC7A8](v221);
  v217 = (uint64_t)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v183 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v223 = (uint64_t *)((char *)&v183 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v183 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052888);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v219 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v218 = (char *)&v183 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v183 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v225 = (uint64_t *)((char *)&v183 - v31);
  v32 = sub_23361D634();
  v224 = *(_QWORD *)(v32 - 8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v187 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v189 = (char *)&v183 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v201 = (char *)&v183 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v191 = (uint64_t)&v183 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v214 = (char *)&v183 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v220 = (char *)&v183 - v43;
  v44 = type metadata accessor for RawECommerceOrderContent(0);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v204 = (char *)&v183 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v193 = (char *)&v183 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v211 = (uint64_t)&v183 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v222 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v183 - v52);
  MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v183 - v53;
  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v195 = (char *)&v183 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x24BDAC7A8](v56);
  v205 = (uint64_t)&v183 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v196 = (char *)&v183 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v188 = (uint64_t)&v183 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v192 = (uint64_t)&v183 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v194 = (char *)&v183 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v199 = (char *)&v183 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v186 = (char *)&v183 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v210 = (uint64_t)&v183 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v226 = (char *)&v183 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v78 = (char *)&v183 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76);
  v213 = (char *)&v183 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v198 = (char *)&v183 - v82;
  MEMORY[0x24BDAC7A8](v81);
  v207 = (char *)&v183 - v83;
  v209 = v44;
  v84 = *(_QWORD *)(v2 + *(int *)(v44 + 64));
  v206 = v2;
  v212 = v54;
  sub_2331684BC(v2, (uint64_t)v54, type metadata accessor for RawECommerceOrderContent);
  v85 = *(_QWORD *)(v84 + 16);
  result = swift_bridgeObjectRetain();
  if (!v85)
  {
LABEL_6:
    v89 = v225;
    v90 = v221;
    v216 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v216(v225, 1, 1, v221);
    v88 = v85;
LABEL_8:
    sub_233168478((uint64_t)v89, (uint64_t)v30, &qword_256052888);
    v215 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v92 = v215(v30, 1, v90);
    v93 = (uint64_t)v226;
    if (v92 == 1)
    {
      v94 = v224;
      v95 = (uint64_t)v213;
      v222 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v224 + 56);
      v222(v213, 1, 1, v32);
      v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
      v97 = v96(v95, 1, v32);
    }
    else
    {
      v98 = (uint64_t)v30;
      v99 = (void (*)(_QWORD, _QWORD, _QWORD))v223;
      sub_233168580(v98, (uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      sub_2331686A0((uint64_t)v99 + *(int *)(v90 + 40), (uint64_t)v78, (uint64_t *)&unk_254247DA0);
      v100 = v222;
      sub_2331684BC((uint64_t)v212, (uint64_t)v222, type metadata accessor for RawECommerceOrderContent);
      v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v224 + 48);
      v184 = v78;
      v102 = v101(v78, 1, v32);
      v225 = v101;
      v103 = v224;
      v95 = (uint64_t)v213;
      if (v102 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v213, (char *)v100 + *(int *)(v209 + 48), v32);
        sub_233168608((uint64_t)v184, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v213, v184, v32);
      }
      sub_233168500((uint64_t)v100, type metadata accessor for RawECommerceOrderContent);
      sub_233168500((uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v222 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56);
      v222((char *)v95, 0, 1, v32);
      v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v225;
      v97 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v225)(v95, 1, v32);
    }
    v225 = v96;
    if (v97 == 1)
    {
      sub_233168608(v95, (uint64_t *)&unk_254247DA0);
      v104 = (uint64_t)v198;
      v222(v198, 1, 1, v32);
      swift_bridgeObjectRelease();
      v105 = v224;
      v106 = (uint64_t)v207;
      v107 = (uint64_t)v200;
      v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v96;
LABEL_37:
      sub_233168500((uint64_t)v212, type metadata accessor for RawECommerceOrderContent);
      if (v108(v104, 1, v32) == 1)
      {
        sub_233168608(v104, (uint64_t *)&unk_254247DA0);
        v130 = 1;
      }
      else
      {
        v131 = v191;
        Date.noon.getter(v191);
        v132 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
        v132(v104, v32);
        Date.advancedByDays(_:)(1, v106);
        v132(v131, v32);
        v130 = 0;
      }
      v133 = 1;
      v222((char *)v106, v130, 1, v32);
      v13 = *(int *)(v209 + 68);
      v134 = *(_QWORD *)(v206 + v13);
      v135 = Array<A>.shippingFulfillments.getter(v134);
      v136 = *(_QWORD *)(v135 + 16);
      v109 = type metadata accessor for RawOrderShippingFulfillment();
      v137 = *(_QWORD *)(v109 - 8);
      if (v136)
      {
        v18 = v202;
        sub_2331684BC(v135 + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80)), (uint64_t)v202, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v133 = 0;
      }
      else
      {
        v18 = v202;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v18, v133, 1, v109);
      swift_bridgeObjectRelease();
      v138 = *(_QWORD *)(v134 + 16);
      v139 = v203;
      sub_2331686A0((uint64_t)v18, v203, &qword_256052AE0);
      if (v138 != 1)
        goto LABEL_47;
      v140 = v190;
      sub_2331686A0(v139, v190, &qword_256052AE0);
      v141 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
      if (v141(v140, 1, v109) == 1)
      {
        sub_233168608(v140, &qword_256052AE0);
LABEL_47:
        sub_233168608(v139, &qword_256052AE0);
        sub_2331686A0((uint64_t)v18, v107, &qword_256052AE0);
LABEL_48:
        sub_233168608(v107, &qword_256052AE0);
        v144 = 0;
        v84 = (uint64_t)v207;
        v145 = v201;
        v146 = (uint64_t)v199;
        v147 = (uint64_t)v204;
        v148 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
        goto LABEL_49;
      }
      v142 = v140;
      v143 = *(unsigned __int8 *)(v140 + 40);
      sub_233168500(v142, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      if (v143 == 8)
        goto LABEL_47;
      sub_233226984(v143);
      v179 = v178;
      sub_233168608(v139, &qword_256052AE0);
      sub_2331686A0((uint64_t)v18, v107, &qword_256052AE0);
      if ((v179 & 1) == 0)
        goto LABEL_48;
      v93 = v185;
      sub_233168478(v107, v185, &qword_256052AE0);
      v180 = v141(v93, 1, v109);
      v84 = (uint64_t)v207;
      if (v180 == 1)
      {
        sub_233168608(v93, &qword_256052AE0);
        v222(v186, 1, 1, v32);
        v148 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
        goto LABEL_74;
      }
    }
    else
    {
      v223 = *(_QWORD **)(v224 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v223)(v220, v95, v32);
      v109 = (uint64_t)type metadata accessor for RawOrderReturn;
      v213 = (char *)v32;
      v110 = (uint64_t)v218;
      v111 = (uint64_t)v219;
      v208 = v85;
      while (v88 == v85)
      {
LABEL_24:
        v114 = v221;
        v216((_QWORD *)v110, 1, 1, v221);
        v88 = v85;
LABEL_26:
        sub_233168478(v110, v111, &qword_256052888);
        v113 = v215((char *)v111, 1, v114) == 1;
        v115 = v111;
        v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
        if (v113)
        {
          v32 = (uint64_t)v213;
          v222((char *)v93, 1, 1, (uint64_t)v213);
          v116 = v220;
        }
        else
        {
          v117 = (uint64_t (*)(uint64_t, uint64_t, char *))v225;
          v118 = v217;
          sub_233168580(v115, v217, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
          v119 = v210;
          sub_2331686A0(v118 + *(int *)(v114 + 40), v210, (uint64_t *)&unk_254247DA0);
          v120 = v211;
          sub_2331684BC((uint64_t)v212, v211, type metadata accessor for RawECommerceOrderContent);
          v32 = (uint64_t)v213;
          v121 = v117(v119, 1, v213);
          v116 = v220;
          if (v121 == 1)
          {
            v122 = v226;
            (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v226, v120 + *(int *)(v209 + 48), v32);
            v123 = v119;
            v93 = (uint64_t)v122;
            v85 = v208;
            sub_233168608(v123, (uint64_t *)&unk_254247DA0);
          }
          else
          {
            v93 = (uint64_t)v226;
            ((void (*)(void))v223)();
          }
          v124 = v120;
          v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
          sub_233168500(v124, type metadata accessor for RawECommerceOrderContent);
          sub_233168500(v217, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
          v222((char *)v93, 0, 1, v32);
        }
        if (v108(v93, 1, v32) == 1)
        {
          sub_233168608(v93, (uint64_t *)&unk_254247DA0);
          v104 = (uint64_t)v198;
          ((void (*)(char *, char *, uint64_t))v223)(v198, v116, v32);
          v222((char *)v104, 0, 1, v32);
          swift_bridgeObjectRelease();
          v105 = v224;
          v106 = (uint64_t)v207;
          v107 = (uint64_t)v200;
          goto LABEL_37;
        }
        v125 = v93;
        v126 = v32;
        v32 = (uint64_t)v214;
        v127 = (void (*)(char *, uint64_t, uint64_t))v223;
        ((void (*)(char *, uint64_t, uint64_t))v223)(v214, v125, v126);
        sub_233167C58((unint64_t *)&qword_2560436A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        v128 = sub_23361E0E4();
        v129 = *(void (**)(char *, uint64_t))(v224 + 8);
        if ((v128 & 1) != 0)
        {
          v129(v116, v126);
          v127(v116, v32, v126);
        }
        else
        {
          v129((char *)v32, v126);
        }
        v110 = (uint64_t)v218;
        v111 = (uint64_t)v219;
        v93 = (uint64_t)v226;
      }
      while (v88 < *(_QWORD *)(v84 + 16))
      {
        v112 = v88 + 1;
        sub_2331684BC(v84+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v88, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        if (v18[8] > 3u)
        {
          sub_233168580((uint64_t)v18, v110, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
          v114 = v221;
          v216((_QWORD *)v110, 0, 1, v221);
          ++v88;
          v93 = (uint64_t)v226;
          goto LABEL_26;
        }
        sub_233168500((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
        ++v88;
        v113 = v85 == v112;
        v93 = (uint64_t)v226;
        if (v113)
          goto LABEL_24;
      }
      __break(1u);
    }
    v181 = v93 + *(int *)(v109 + 68);
    v182 = (uint64_t)v186;
    sub_2331686A0(v181, (uint64_t)v186, (uint64_t *)&unk_254247DA0);
    sub_233168500(v93, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v148 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v225)(v182, 1, v32) != 1)
    {
      v144 = 0;
      goto LABEL_76;
    }
LABEL_74:
    v144 = 1;
LABEL_76:
    v145 = v201;
    v146 = (uint64_t)v199;
    v147 = (uint64_t)v204;
    sub_233168608((uint64_t)v186, (uint64_t *)&unk_254247DA0);
LABEL_49:
    sub_2331686A0(v84, v146, (uint64_t *)&unk_254247DA0);
    if (v148(v146, 1, v32) == 1)
    {
      v149 = sub_233168608(v146, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      v150 = v147;
      v151 = v84;
      v152 = v224;
      v153 = *(void (**)(char *, uint64_t, uint64_t))(v224 + 32);
      v153(v145, v146, v32);
      if (v144)
      {
        sub_233168608((uint64_t)v18, &qword_256052AE0);
        sub_233168608(v151, (uint64_t *)&unk_254247DA0);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v153)(v197, v145, v32);
      }
      v149 = (*(uint64_t (**)(char *, uint64_t))(v152 + 8))(v145, v32);
      v84 = v151;
      v147 = v150;
    }
    v154 = *(_QWORD *)(v206 + v13);
    MEMORY[0x24BDAC7A8](v149);
    *(&v183 - 2) = v155;
    swift_bridgeObjectRetain();
    v156 = sub_2334C7E8C((void (*)(_QWORD))sub_2334DA7FC, (uint64_t)(&v183 - 4), v154);
    swift_bridgeObjectRelease();
    v157 = v194;
    sub_233300E84(v156, v194);
    swift_bridgeObjectRelease();
    v158 = v192;
    sub_2331686A0((uint64_t)v157, v192, (uint64_t *)&unk_254247DA0);
    v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v225;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v225)(v158, 1, v32) == 1)
    {
      v160 = v158;
      v161 = (uint64_t)v196;
      v162 = (uint64_t)v195;
      v163 = (uint64_t)v193;
    }
    else
    {
      v164 = v84;
      v165 = v224;
      v166 = *(void (**)(char *, uint64_t, uint64_t))(v224 + 32);
      v167 = v189;
      v166(v189, v158, v32);
      v168 = v164;
      v169 = v188;
      sub_2331686A0(v168, v188, (uint64_t *)&unk_254247DA0);
      v170 = v159(v169, 1, v32);
      v161 = (uint64_t)v196;
      v171 = v195;
      v163 = (uint64_t)v193;
      if (v170 != 1)
      {
        v174 = v187;
        v166(v187, v169, v32);
        sub_233167C58((unint64_t *)&qword_2560436A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        if ((sub_23361E0F0() & 1) != 0)
          v175 = v174;
        else
          v175 = v167;
        (*(void (**)(uint64_t, char *, uint64_t))(v165 + 16))(v197, v175, v32);
        v176 = *(void (**)(char *, uint64_t))(v165 + 8);
        v176(v174, v32);
        v176(v167, v32);
        sub_233168608((uint64_t)v157, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v18, &qword_256052AE0);
        v177 = (uint64_t)v207;
        return sub_233168608(v177, (uint64_t *)&unk_254247DA0);
      }
      (*(void (**)(char *, uint64_t))(v165 + 8))(v167, v32);
      v160 = v169;
      v147 = (uint64_t)v204;
      v84 = (uint64_t)v207;
      v162 = (uint64_t)v171;
    }
    sub_233168608(v160, (uint64_t *)&unk_254247DA0);
    sub_2331686A0((uint64_t)v157, v161, (uint64_t *)&unk_254247DA0);
    sub_2331686A0(v84, v205, (uint64_t *)&unk_254247DA0);
    sub_2331684BC(v206, v163, type metadata accessor for RawECommerceOrderContent);
    v172 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v225;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v225)(v161, 1, v32) != 1)
    {
      sub_233168500(v163, type metadata accessor for RawECommerceOrderContent);
      sub_233168608(v205, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v157, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v18, &qword_256052AE0);
      sub_233168608(v84, (uint64_t *)&unk_254247DA0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v197, v161, v32);
    }
    sub_2331686A0(v205, v162, (uint64_t *)&unk_254247DA0);
    sub_2331684BC(v163, v147, type metadata accessor for RawECommerceOrderContent);
    if (v172(v162, 1, v32) == 1)
    {
      v173 = v191;
      Date.noon.getter(v191);
      Date.advancedByDays(_:)(1, v197);
      (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v173, v32);
      sub_233168500(v147, type metadata accessor for RawECommerceOrderContent);
      sub_233168500(v163, type metadata accessor for RawECommerceOrderContent);
      sub_233168608(v205, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v157, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v18, &qword_256052AE0);
      sub_233168608(v84, (uint64_t *)&unk_254247DA0);
      sub_233168608(v162, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      sub_233168500(v147, type metadata accessor for RawECommerceOrderContent);
      sub_233168500(v163, type metadata accessor for RawECommerceOrderContent);
      sub_233168608(v205, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v157, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v18, &qword_256052AE0);
      sub_233168608(v84, (uint64_t *)&unk_254247DA0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v197, v162, v32);
    }
    v177 = v161;
    return sub_233168608(v177, (uint64_t *)&unk_254247DA0);
  }
  v87 = 0;
  while (v87 < *(_QWORD *)(v84 + 16))
  {
    v88 = v87 + 1;
    sub_2331684BC(v84+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v87, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
    if (v22[8] > 3u)
    {
      v91 = (uint64_t)v22;
      v89 = v225;
      sub_233168580(v91, (uint64_t)v225, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v90 = v221;
      v216 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v216(v89, 0, 1, v221);
      goto LABEL_8;
    }
    result = sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
    v87 = v88;
    if (v85 == v88)
      goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334D0004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(_QWORD);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v73 = a3;
  v72 = a2;
  v76 = a1;
  v66 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v66);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for RawECommerceOrderContent(0);
  v5 = MEMORY[0x24BDAC7A8](v69);
  v68 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v65 = (uint64_t)&v61 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v61 - v9;
  v10 = sub_23361D634();
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v71 = (uint64_t)&v61 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)&v61 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v62 = (char *)&v61 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v61 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v61 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v61 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v70 = (uint64_t)&v61 - v31;
  v32 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v61 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v76, (uint64_t)v37, v38);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168580((uint64_t)v37, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v45 = v34[40];
    if (v45 == 7 || v45 == 5)
    {
      sub_2331686A0((uint64_t)&v34[*(int *)(v32 + 60)], (uint64_t)v27, (uint64_t *)&unk_254247DA0);
      v50 = v65;
      sub_2331684BC(v72, v65, type metadata accessor for RawECommerceOrderContent);
      v48 = v74;
      v47 = v75;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v27, 1, v75) == 1)
      {
        v51 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v64, v50 + *(int *)(v69 + 48), v47);
        sub_233168500(v50, type metadata accessor for RawECommerceOrderContent);
        sub_233168608((uint64_t)v27, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        sub_233168500(v50, type metadata accessor for RawECommerceOrderContent);
        v51 = v64;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v64, v27, v47);
      }
      v53 = v73;
      v56 = v70;
      v57 = v71;
      Date.noon.getter(v71);
      v58 = *(void (**)(char *, uint64_t))(v48 + 8);
      v58(v51, v47);
      Date.advancedByDays(_:)(1, v56);
      v58((char *)v57, v47);
    }
    else
    {
      if (v45 != 2)
      {
        v59 = 1;
        v53 = v73;
        v48 = v74;
        v47 = v75;
        v56 = v70;
LABEL_23:
        sub_233168500((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v56, v59, 1, v47);
        return sub_233168478(v56, v53, (uint64_t *)&unk_254247DA0);
      }
      sub_2331686A0((uint64_t)&v34[*(int *)(v32 + 68)], (uint64_t)v30, (uint64_t *)&unk_254247DA0);
      v46 = v63;
      sub_2331684BC(v72, v63, type metadata accessor for RawECommerceOrderContent);
      v48 = v74;
      v47 = v75;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v30, 1, v75) == 1)
      {
        v49 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v62, v46 + *(int *)(v69 + 48), v47);
        sub_233168500(v46, type metadata accessor for RawECommerceOrderContent);
        sub_233168608((uint64_t)v30, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        sub_233168500(v46, type metadata accessor for RawECommerceOrderContent);
        v49 = v62;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v62, v30, v47);
      }
      v53 = v73;
      v56 = v70;
      Date.advancedByDays(_:)(14, v70);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
    }
    v59 = 0;
    goto LABEL_23;
  }
  sub_233168580((uint64_t)v37, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
  v39 = v4[8];
  v40 = (uint64_t)v4;
  if (v39 == 5 || v39 == 3)
  {
    sub_2331686A0((uint64_t)&v4[*(int *)(v66 + 56)], (uint64_t)v21, (uint64_t *)&unk_254247DA0);
    v41 = v68;
    sub_2331684BC(v72, v68, type metadata accessor for RawECommerceOrderContent);
    v43 = v74;
    v42 = v75;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v21, 1, v75) == 1)
    {
      v44 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v67, v41 + *(int *)(v69 + 48), v42);
      sub_233168500(v41, type metadata accessor for RawECommerceOrderContent);
      sub_233168608((uint64_t)v21, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      sub_233168500(v41, type metadata accessor for RawECommerceOrderContent);
      v44 = v67;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v67, v21, v42);
    }
    v53 = v73;
    v54 = v71;
    Date.noon.getter(v71);
    v55 = *(void (**)(char *, uint64_t))(v43 + 8);
    v55(v44, v42);
    Date.advancedByDays(_:)(1, (uint64_t)v24);
    v55((char *)v54, v42);
    v52 = 0;
  }
  else
  {
    v52 = 1;
    v53 = v73;
    v43 = v74;
    v42 = v75;
  }
  sub_233168500(v40, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v24, v52, 1, v42);
  v56 = (uint64_t)v24;
  return sub_233168478(v56, v53, (uint64_t *)&unk_254247DA0);
}

uint64_t RawECommerceOrderContent.supportsAutomaticUpdates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(v1 + *(int *)(v2 + 96), (uint64_t)v7, &qword_254248700);
  v8 = sub_23361D340();
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  sub_233168608((uint64_t)v7, &qword_254248700);
  sub_2331684BC(v1, (uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
  if (v9 == 1)
  {
    sub_233168500((uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
  }
  else
  {
    v10 = *(_QWORD *)&v4[*(int *)(v2 + 100) + 8];
    swift_bridgeObjectRetain();
    sub_233168500((uint64_t)v4, type metadata accessor for RawECommerceOrderContent);
    if (v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return 0;
}

FinanceKit::RawOrderChangeNotificationsValue_optional __swiftcall RawOrderChangeNotificationsValue.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::RawOrderChangeNotificationsValue_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static RawOrderChangeNotificationsValue.allCases.getter()
{
  return &unk_25046AFE8;
}

uint64_t RawOrderChangeNotificationsValue.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0x64656C62616E65;
}

uint64_t sub_2334D08C8(char *a1, char *a2)
{
  return sub_233228488(*a1, *a2);
}

uint64_t sub_2334D08D4()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334D0958()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334D09B8()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawOrderChangeNotificationsValue_optional sub_2334D0A38(Swift::String *a1)
{
  return RawOrderChangeNotificationsValue.init(rawValue:)(*a1);
}

void sub_2334D0A44(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x64656C62616E65;
  if (*v1)
    v2 = 0xD000000000000016;
  v3 = 0x8000000233669B20;
  if (!*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2334D0A88()
{
  sub_2334DA67C();
  return sub_23361E390();
}

uint64_t sub_2334D0AE4()
{
  sub_2334DA67C();
  return sub_23361E354();
}

void sub_2334D0B30(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B010;
}

uint64_t type metadata accessor for RawECommerceOrderContent.ContentItem(uint64_t a1)
{
  return sub_233177414(a1, qword_256052A40);
}

uint64_t _s10FinanceKit24RawECommerceOrderContentV0F4ItemO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for RawOrderReturn();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2331684BC(a1, (uint64_t)v19, type metadata accessor for RawECommerceOrderContent.ContentItem);
  sub_2331684BC(a2, v20, type metadata accessor for RawECommerceOrderContent.ContentItem);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v13, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v20, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v21 = static RawOrderReturn.== infix(_:_:)((uint64_t)v13, v6);
      sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for RawOrderReturn;
LABEL_9:
      sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
      sub_233168500((uint64_t)v19, type metadata accessor for RawECommerceOrderContent.ContentItem);
      return v21 & 1;
    }
    v24 = type metadata accessor for RawOrderReturn;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v15, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      v21 = static RawOrderFulfillment.== infix(_:_:)((uint64_t)v15, (uint64_t)v9);
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for RawOrderFulfillment;
      goto LABEL_9;
    }
    v24 = type metadata accessor for RawOrderFulfillment;
    v25 = (uint64_t)v15;
  }
  sub_233168500(v25, (uint64_t (*)(_QWORD))v24);
  sub_233168608((uint64_t)v19, &qword_256052AA0);
  v21 = 0;
  return v21 & 1;
}

BOOL _s10FinanceKit24RawECommerceOrderContentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  char v44;
  _BOOL8 result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char v81;
  char v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  int *v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v117;
  uint64_t v118;
  char v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int (*v154)(uint64_t, uint64_t, uint64_t);
  int *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t *v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  char v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  void (*v172)(char *, uint64_t);
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  char v182;
  _QWORD v183[3];
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  int *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char v244;

  v205 = sub_23361D340();
  v200 = *(_QWORD *)(v205 - 8);
  MEMORY[0x24BDAC7A8](v205);
  v197 = (char *)v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v198);
  v204 = (uint64_t)v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v199 = (uint64_t)v183 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v201 = (uint64_t)v183 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v202 = (uint64_t)v183 - v11;
  v211 = type metadata accessor for RawOrderProvider();
  v207 = *(_QWORD *)(v211 - 8);
  MEMORY[0x24BDAC7A8](v211);
  v203 = (_QWORD *)((char *)v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AC8);
  MEMORY[0x24BDAC7A8](v206);
  v212 = (uint64_t)v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v208 = (_QWORD *)((char *)v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v209 = (uint64_t)v183 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v210 = (uint64_t)v183 - v19;
  v20 = type metadata accessor for RawOrderReturnInfo();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AD0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v183 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v183 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)v183 - v34;
  if ((static RawMerchant.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v36 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v37 = v36[5];
  v38 = *(_QWORD *)(a1 + v37);
  v39 = *(_QWORD *)(a1 + v37 + 8);
  v40 = (_QWORD *)(a2 + v37);
  v41 = v40[1];
  v42 = v38 == *v40;
  v213 = v36;
  if (v42 && v39 == v41 || (v43 = sub_23361F224(), v36 = v213, v44 = v43, result = 0, (v44 & 1) != 0))
  {
    v46 = v36[6];
    v47 = *(_QWORD *)(a1 + v46);
    v48 = *(_QWORD *)(a1 + v46 + 8);
    v49 = (_QWORD *)(a2 + v46);
    if (v47 == *v49 && v48 == v49[1])
      goto LABEL_9;
    v50 = sub_23361F224();
    v36 = v213;
    v51 = v50;
    result = 0;
    if ((v51 & 1) != 0)
    {
LABEL_9:
      v52 = v36[7];
      v53 = (_QWORD *)(a1 + v52);
      v54 = *(_QWORD *)(a1 + v52 + 8);
      v55 = (_QWORD *)(a2 + v52);
      v56 = v55[1];
      if (v54)
      {
        if (!v56)
          return 0;
        if (*v53 != *v55 || v54 != v56)
        {
          v57 = sub_23361F224();
          v36 = v213;
          v58 = v57;
          result = 0;
          if ((v58 & 1) == 0)
            return result;
        }
      }
      else if (v56)
      {
        return 0;
      }
      v59 = v36[8];
      v60 = *(unsigned __int8 *)(a1 + v59);
      v61 = *(unsigned __int8 *)(a2 + v59);
      if (v60 == 2)
      {
        if (v61 != 2)
          return 0;
      }
      else
      {
        if (v61 == 2)
          return 0;
        if ((v60 & 1) != 0)
          v62 = 0xD000000000000016;
        else
          v62 = 0x64656C62616E65;
        if ((v60 & 1) != 0)
          v63 = 0x8000000233669B20;
        else
          v63 = 0xE700000000000000;
        if ((v61 & 1) != 0)
          v64 = 0xD000000000000016;
        else
          v64 = 0x64656C62616E65;
        if ((v61 & 1) != 0)
          v65 = 0x8000000233669B20;
        else
          v65 = 0xE700000000000000;
        if (v62 == v64 && v63 == v65)
        {
          swift_bridgeObjectRelease_n();
          v36 = v213;
        }
        else
        {
          v193 = v63;
          v194 = v65;
          LODWORD(v195) = sub_23361F224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = 0;
          v36 = v213;
          if ((v195 & 1) == 0)
            return result;
        }
      }
      v66 = a2;
      v67 = 0xE900000000000064;
      v68 = 1852141679;
      v69 = v36[9];
      v70 = *(unsigned __int8 *)(a1 + v69);
      v196 = v66;
      v71 = *(unsigned __int8 *)(v66 + v69);
      if (v70)
      {
        if (v70 == 1)
          v72 = 0x6574656C706D6F63;
        else
          v72 = 0x656C6C65636E6163;
        v73 = 0xE900000000000064;
      }
      else
      {
        v73 = 0xE400000000000000;
        v72 = 1852141679;
      }
      if (v71)
      {
        if (v71 == 1)
          v68 = 0x6574656C706D6F63;
        else
          v68 = 0x656C6C65636E6163;
      }
      else
      {
        v67 = 0xE400000000000000;
      }
      if (v72 == v68 && v73 == v67)
      {
        swift_bridgeObjectRelease_n();
        v74 = v213;
        v75 = v196;
      }
      else
      {
        v195 = a1;
        LODWORD(v194) = sub_23361F224();
        a1 = v195;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        v74 = v213;
        v75 = v196;
        if ((v194 & 1) == 0)
          return result;
      }
      v76 = v74[10];
      v77 = (_QWORD *)(a1 + v76);
      v78 = *(_QWORD *)(a1 + v76 + 8);
      v79 = (_QWORD *)(v75 + v76);
      v80 = v79[1];
      if (v78)
      {
        if (!v80)
          return 0;
        if (*v77 != *v79 || v78 != v80)
        {
          v81 = sub_23361F224();
          v74 = v213;
          v82 = v81;
          result = 0;
          if ((v82 & 1) == 0)
            return result;
        }
      }
      else if (v80)
      {
        return 0;
      }
      v83 = v74;
      if ((sub_23361D5E0() & 1) == 0
        || (sub_23361D5E0() & 1) == 0
        || (MEMORY[0x234931620](a1 + v83[13], v196 + v83[13]) & 1) == 0)
      {
        return 0;
      }
      v84 = v83[14];
      v85 = *(_QWORD *)(a1 + v84);
      v86 = *(_QWORD *)(a1 + v84 + 8);
      v88 = *(_QWORD *)(a1 + v84 + 16);
      v87 = *(_QWORD *)(a1 + v84 + 24);
      v90 = *(_QWORD *)(a1 + v84 + 32);
      v89 = *(_QWORD *)(a1 + v84 + 40);
      v92 = *(_QWORD *)(a1 + v84 + 48);
      v91 = *(_QWORD *)(a1 + v84 + 56);
      v93 = *(_QWORD *)(a1 + v84 + 64);
      v94 = *(_QWORD *)(a1 + v84 + 72);
      v95 = (uint64_t *)(v196 + v84);
      v194 = *v95;
      v96 = v95[2];
      v195 = v95[1];
      v97 = v95[3];
      v98 = v95[4];
      v99 = v95[5];
      v100 = v95[6];
      v101 = (int *)v95[7];
      v102 = v95[8];
      v103 = v95[9];
      if (v89)
      {
        v187 = v103;
        v224 = v85;
        v225 = v86;
        v226 = v88;
        v227 = v87;
        v228 = v90;
        v229 = v89;
        v230 = v92;
        v231 = v91;
        v232 = v93;
        v233 = v94;
        v192 = v85;
        v193 = v89;
        v191 = v90;
        v190 = v87;
        v189 = v88;
        v188 = v86;
        if (v99)
        {
          LOBYTE(v214) = v194;
          v215 = v195;
          v216 = v96;
          LODWORD(v217) = v97;
          v218 = v98;
          v219 = v99;
          v220 = v100;
          v221 = (uint64_t)v101;
          v222 = v102;
          v223 = v187;
          v195 = v93;
          v194 = v94;
          v186 = v92;
          v185 = v91;
          sub_2333BF1C8(v85, v86, v88, v87, v90, v89);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v104 = _s10FinanceKit15RawOrderPaymentV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v224, (unsigned __int8 *)&v214);
          v187 = v229;
          v184 = v230;
          v183[2] = v231;
          v183[1] = v232;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2333BD308(v192, v188, v189, v190, v191, v193);
          v105 = v213;
          if ((v104 & 1) == 0)
            return 0;
LABEL_66:
          sub_2331686A0(a1 + v105[15], (uint64_t)v35, &qword_25604A468);
          sub_2331686A0(v196 + v213[15], (uint64_t)v33, &qword_25604A468);
          v106 = (uint64_t)&v26[*(int *)(v24 + 48)];
          sub_2331686A0((uint64_t)v35, (uint64_t)v26, &qword_25604A468);
          sub_2331686A0((uint64_t)v33, v106, &qword_25604A468);
          v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
          if (v107((uint64_t)v26, 1, v20) == 1)
          {
            sub_233168608((uint64_t)v33, &qword_25604A468);
            sub_233168608((uint64_t)v35, &qword_25604A468);
            if (v107(v106, 1, v20) == 1)
            {
              sub_233168608((uint64_t)v26, &qword_25604A468);
LABEL_77:
              v120 = v213;
              v121 = v196;
              if ((sub_23322D5E0(*(_QWORD *)(a1 + v213[16]), *(_QWORD *)(v196 + v213[16])) & 1) == 0
                || (sub_23322D5F4(*(_QWORD *)(a1 + v120[17]), *(_QWORD *)(v121 + v120[17])) & 1) == 0)
              {
                return 0;
              }
              v122 = v120[18];
              v195 = a1;
              v123 = *(_QWORD *)(a1 + v122 + 8);
              v190 = *(_QWORD *)(a1 + v122);
              v124 = *(_QWORD *)(a1 + v122 + 16);
              v191 = *(_QWORD *)(a1 + v122 + 24);
              v125 = *(_QWORD *)(a1 + v122 + 32);
              v192 = *(_QWORD *)(a1 + v122 + 40);
              v126 = *(_QWORD *)(a1 + v122 + 48);
              v193 = *(_QWORD *)(a1 + v122 + 56);
              v127 = *(_QWORD *)(a1 + v122 + 64);
              v194 = *(_QWORD *)(a1 + v122 + 72);
              v128 = (uint64_t *)(v121 + v122);
              v129 = v128[1];
              v184 = *v128;
              v185 = v128[2];
              v186 = v128[3];
              v130 = v128[5];
              v187 = v128[4];
              v188 = v128[6];
              v131 = v128[8];
              v189 = v128[7];
              v132 = v128[9];
              if (v123 == 1)
              {
                if (v129 == 1)
                  goto LABEL_86;
              }
              else
              {
                v224 = v190;
                v225 = v123;
                v226 = v124;
                v227 = v191;
                v228 = v125;
                v229 = v192;
                v230 = v126;
                v231 = v193;
                v232 = v127;
                v233 = v194;
                if (v129 != 1)
                {
                  v214 = v184;
                  v215 = v129;
                  v216 = v185;
                  v217 = v186;
                  v218 = v187;
                  v219 = v130;
                  v220 = v188;
                  v221 = v189;
                  v222 = v131;
                  v223 = v132;
                  v133 = _s10FinanceKit5OrderV8CustomerV2eeoiySbAE_AEtFZ_0(&v224, &v214);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v133 & 1) == 0)
                    return 0;
LABEL_86:
                  if ((sub_23322B4CC(*(_QWORD *)(v195 + v213[19]), *(_QWORD *)(v196 + v213[19])) & 1) == 0
                    || (sub_23322D9CC(*(_QWORD *)(v195 + v213[20]), *(_QWORD *)(v196 + v213[20])) & 1) == 0
                    || (sub_23322B8BC(*(_QWORD **)(v195 + v213[21]), *(_QWORD **)(v196 + v213[21])) & 1) == 0)
                  {
                    return 0;
                  }
                  v134 = v213[22];
                  v135 = *(_QWORD *)(v195 + v134 + 8);
                  v191 = *(_QWORD *)(v195 + v134);
                  v192 = *(_QWORD *)(v195 + v134 + 16);
                  v136 = *(_QWORD *)(v195 + v134 + 32);
                  v193 = *(_QWORD *)(v195 + v134 + 24);
                  v137 = *(_QWORD *)(v195 + v134 + 48);
                  v194 = *(_QWORD *)(v195 + v134 + 40);
                  v138 = (uint64_t *)(v196 + v134);
                  v139 = *v138;
                  v140 = v138[1];
                  v141 = v138[2];
                  v142 = v138[3];
                  v144 = v138[4];
                  v143 = v138[5];
                  v190 = v138[6];
                  if (v136)
                  {
                    v224 = v191;
                    v225 = v135;
                    v226 = v192;
                    v227 = v193;
                    v228 = v136;
                    v229 = v194;
                    v230 = v137;
                    if (v144)
                    {
                      v214 = v139;
                      v215 = v140;
                      LOBYTE(v216) = v141;
                      v217 = v142;
                      v218 = v144;
                      v219 = v143;
                      v220 = v190;
                      v145 = v191;
                      v146 = v192;
                      v147 = v193;
                      sub_233364468(v191, v135, v192, v193, v136);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v148 = _s10FinanceKit15RawOrderBarcodeV2eeoiySbAC_ACtFZ_0((uint64_t)&v224, &v214);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_2333BD360(v145, v135, v146, v147, v136);
                      if ((v148 & 1) == 0)
                        return 0;
LABEL_94:
                      v149 = v213;
                      v150 = v210;
                      sub_2331686A0(v195 + v213[23], v210, &qword_25604A470);
                      v151 = v209;
                      sub_2331686A0(v196 + v149[23], v209, &qword_25604A470);
                      v152 = v212;
                      v153 = v212 + *(int *)(v206 + 48);
                      sub_2331686A0(v150, v212, &qword_25604A470);
                      sub_2331686A0(v151, v153, &qword_25604A470);
                      v154 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
                      if (v154(v152, 1, v211) == 1)
                      {
                        sub_233168608(v209, &qword_25604A470);
                        sub_233168608(v210, &qword_25604A470);
                        if (v154(v153, 1, v211) == 1)
                        {
                          sub_233168608(v212, &qword_25604A470);
LABEL_97:
                          v155 = v213;
                          v156 = v202;
                          sub_2331686A0(v195 + v213[24], v202, &qword_254248700);
                          v157 = v201;
                          sub_2331686A0(v196 + v155[24], v201, &qword_254248700);
                          v158 = v204;
                          v159 = v204 + *(int *)(v198 + 48);
                          sub_2331686A0(v156, v204, &qword_254248700);
                          sub_2331686A0(v157, v159, &qword_254248700);
                          v160 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v200 + 48);
                          if (v160(v158, 1, v205) == 1)
                          {
                            sub_233168608(v201, &qword_254248700);
                            sub_233168608(v202, &qword_254248700);
                            if (v160(v159, 1, v205) == 1)
                            {
                              sub_233168608(v204, &qword_254248700);
LABEL_124:
                              v173 = v213[25];
                              v174 = (_QWORD *)(v195 + v173);
                              v175 = *(_QWORD *)(v195 + v173 + 8);
                              v176 = (_QWORD *)(v196 + v173);
                              v177 = v176[1];
                              if (v175)
                              {
                                if (v177)
                                {
                                  v42 = *v174 == *v176;
                                  v178 = v213;
                                  v179 = v196;
                                  v180 = v195;
                                  if (!v42 || v175 != v177)
                                  {
                                    v181 = sub_23361F224();
                                    v178 = v213;
                                    v182 = v181;
                                    result = 0;
                                    if ((v182 & 1) == 0)
                                      return result;
                                  }
                                  return *(unsigned __int16 *)(v180 + v178[26]) == *(unsigned __int16 *)(v179 + v178[26]);
                                }
                              }
                              else
                              {
                                v178 = v213;
                                v179 = v196;
                                v180 = v195;
                                if (!v177)
                                  return *(unsigned __int16 *)(v180 + v178[26]) == *(unsigned __int16 *)(v179 + v178[26]);
                              }
                              return 0;
                            }
                          }
                          else
                          {
                            sub_2331686A0(v204, v199, &qword_254248700);
                            if (v160(v159, 1, v205) != 1)
                            {
                              v167 = v200;
                              v168 = v197;
                              v169 = v205;
                              (*(void (**)(char *, uint64_t, uint64_t))(v200 + 32))(v197, v159, v205);
                              sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
                              v170 = v199;
                              v171 = sub_23361E108();
                              v172 = *(void (**)(char *, uint64_t))(v167 + 8);
                              v172(v168, v169);
                              sub_233168608(v201, &qword_254248700);
                              sub_233168608(v202, &qword_254248700);
                              v172((char *)v170, v169);
                              sub_233168608(v204, &qword_254248700);
                              if ((v171 & 1) == 0)
                                return 0;
                              goto LABEL_124;
                            }
                            sub_233168608(v201, &qword_254248700);
                            sub_233168608(v202, &qword_254248700);
                            (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v199, v205);
                          }
                          v117 = &qword_256045948;
                          v161 = &v236;
                          goto LABEL_121;
                        }
                      }
                      else
                      {
                        sub_2331686A0(v212, (uint64_t)v208, &qword_25604A470);
                        if (v154(v153, 1, v211) != 1)
                        {
                          v162 = v153;
                          v163 = v203;
                          sub_233168580(v162, (uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                          if ((*v208 != *v163 || v208[1] != v163[1]) && (sub_23361F224() & 1) == 0
                            || (v208[2] != v203[2] || v208[3] != v203[3]) && (sub_23361F224() & 1) == 0
                            || (v208[4] != v203[4] || v208[5] != v203[5]) && (sub_23361F224() & 1) == 0)
                          {
                            sub_233168500((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                            sub_233168608(v209, &qword_25604A470);
                            sub_233168608(v210, &qword_25604A470);
                            sub_233168500((uint64_t)v208, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                            v118 = v212;
                            v117 = &qword_25604A470;
                            goto LABEL_75;
                          }
                          v164 = v208;
                          v165 = v203;
                          v166 = MEMORY[0x234931620]((char *)v208 + *(int *)(v211 + 28), (char *)v203 + *(int *)(v211 + 28));
                          sub_233168500((uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                          sub_233168608(v209, &qword_25604A470);
                          sub_233168608(v210, &qword_25604A470);
                          sub_233168500((uint64_t)v164, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                          sub_233168608(v212, &qword_25604A470);
                          if ((v166 & 1) == 0)
                            return 0;
                          goto LABEL_97;
                        }
                        sub_233168608(v209, &qword_25604A470);
                        sub_233168608(v210, &qword_25604A470);
                        sub_233168500((uint64_t)v208, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
                      }
                      v117 = &qword_256052AC8;
                      v161 = (uint64_t *)&v244;
LABEL_121:
                      v118 = *(v161 - 32);
                      goto LABEL_75;
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else if (!v144)
                  {
                    goto LABEL_94;
                  }
                  sub_233364468(v139, v140, v141, v142, v144);
                  sub_2333BD360(v191, v135, v192, v193, v136);
                  sub_2333BD360(v139, v140, v141, v142, v144);
                  return 0;
                }
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              v224 = v190;
              v225 = v123;
              v226 = v124;
              v227 = v191;
              v228 = v125;
              v229 = v192;
              v230 = v126;
              v231 = v193;
              v232 = v127;
              v233 = v194;
              v234 = v184;
              v235 = v129;
              v236 = v185;
              v237 = v186;
              v238 = v187;
              v239 = v130;
              v240 = v188;
              v241 = v189;
              v242 = v131;
              v243 = v132;
              sub_233270458(v184, v129);
              v116 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2332705EC;
LABEL_71:
              sub_2333C3E78(&v224, v116);
              return 0;
            }
          }
          else
          {
            sub_2331686A0((uint64_t)v26, (uint64_t)v30, &qword_25604A468);
            if (v107(v106, 1, v20) != 1)
            {
              sub_233168580(v106, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
              v119 = _s10FinanceKit18RawOrderReturnInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v23);
              sub_233168500((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
              sub_233168608((uint64_t)v33, &qword_25604A468);
              sub_233168608((uint64_t)v35, &qword_25604A468);
              sub_233168500((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
              sub_233168608((uint64_t)v26, &qword_25604A468);
              if ((v119 & 1) == 0)
                return 0;
              goto LABEL_77;
            }
            sub_233168608((uint64_t)v33, &qword_25604A468);
            sub_233168608((uint64_t)v35, &qword_25604A468);
            sub_233168500((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
          }
          v117 = &qword_256052AD0;
          v118 = (uint64_t)v26;
LABEL_75:
          sub_233168608(v118, v117);
          return 0;
        }
        v108 = v91;
        v109 = v92;
        v110 = v93;
        v111 = v94;
        v213 = v101;
        v112 = v100;
        v113 = v98;
        v114 = v97;
        v115 = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96 = v115;
        v97 = v114;
        v98 = v113;
        v99 = 0;
        v100 = v112;
        v101 = v213;
        v94 = v111;
        v93 = v110;
        v85 = v192;
        v86 = v188;
        v88 = v189;
        v87 = v190;
        v90 = v191;
        v92 = v109;
        v89 = v193;
        v91 = v108;
        v103 = v187;
      }
      else
      {
        v105 = v83;
        if (!v99)
          goto LABEL_66;
      }
      v224 = v85;
      v225 = v86;
      v226 = v88;
      v227 = v87;
      v228 = v90;
      v229 = v89;
      v230 = v92;
      v231 = v91;
      v232 = v93;
      v233 = v94;
      v234 = v194;
      v235 = v195;
      v236 = v96;
      v237 = v97;
      v238 = v98;
      v239 = v99;
      v240 = v100;
      v241 = (uint64_t)v101;
      v242 = v102;
      v243 = v103;
      sub_2333BF1C8(v194, v195, v96, v97, v98, v99);
      v116 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2333BD308;
      goto LABEL_71;
    }
  }
  return result;
}

unint64_t sub_2334D2694()
{
  unint64_t result;

  result = qword_2560528A0;
  if (!qword_2560528A0)
  {
    result = MEMORY[0x234934494](&unk_233652F38, &type metadata for RawECommerceOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560528A0);
  }
  return result;
}

unint64_t sub_2334D26D8()
{
  unint64_t result;

  result = qword_2560528B0;
  if (!qword_2560528B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderChangeNotificationsValue, &type metadata for RawOrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_2560528B0);
  }
  return result;
}

unint64_t sub_2334D271C()
{
  unint64_t result;

  result = qword_2560528B8;
  if (!qword_2560528B8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderStatus, &type metadata for RawOrderStatus);
    atomic_store(result, (unint64_t *)&qword_2560528B8);
  }
  return result;
}

unint64_t sub_2334D2760()
{
  unint64_t result;

  result = qword_2560528C8;
  if (!qword_2560528C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderCustomer, &type metadata for RawOrderCustomer);
    atomic_store(result, (unint64_t *)&qword_2560528C8);
  }
  return result;
}

unint64_t sub_2334D27A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2560528D8;
  if (!qword_2560528D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560528D0);
    v2 = sub_233167C58(&qword_2560528E0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderApplication, (uint64_t)&protocol conformance descriptor for RawOrderApplication);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2560528D8);
  }
  return result;
}

unint64_t sub_2334D2820()
{
  unint64_t result;

  result = qword_2560528E8;
  if (!qword_2560528E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderBarcode, &type metadata for RawOrderBarcode);
    atomic_store(result, (unint64_t *)&qword_2560528E8);
  }
  return result;
}

unint64_t sub_2334D2864()
{
  unint64_t result;

  result = qword_256052900;
  if (!qword_256052900)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment, &type metadata for RawOrderPayment);
    atomic_store(result, (unint64_t *)&qword_256052900);
  }
  return result;
}

unint64_t sub_2334D28A8()
{
  unint64_t result;

  result = qword_256052918;
  if (!qword_256052918)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderChangeNotificationsValue, &type metadata for RawOrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_256052918);
  }
  return result;
}

unint64_t sub_2334D28EC()
{
  unint64_t result;

  result = qword_256052920;
  if (!qword_256052920)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderStatus, &type metadata for RawOrderStatus);
    atomic_store(result, (unint64_t *)&qword_256052920);
  }
  return result;
}

unint64_t sub_2334D2930()
{
  unint64_t result;

  result = qword_256052928;
  if (!qword_256052928)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment, &type metadata for RawOrderPayment);
    atomic_store(result, (unint64_t *)&qword_256052928);
  }
  return result;
}

unint64_t sub_2334D2974()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256052940;
  if (!qword_256052940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256052938);
    v2 = sub_233167C58(&qword_256052948, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderReturn, (uint64_t)&protocol conformance descriptor for RawOrderReturn);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256052940);
  }
  return result;
}

unint64_t sub_2334D29F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256052958;
  if (!qword_256052958)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256052950);
    v2 = sub_233167C58(&qword_256052960, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderFulfillment, (uint64_t)&protocol conformance descriptor for RawOrderFulfillment);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256052958);
  }
  return result;
}

unint64_t sub_2334D2A6C()
{
  unint64_t result;

  result = qword_256052968;
  if (!qword_256052968)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderCustomer, &type metadata for RawOrderCustomer);
    atomic_store(result, (unint64_t *)&qword_256052968);
  }
  return result;
}

unint64_t sub_2334D2AB0()
{
  unint64_t result;

  result = qword_256052970;
  if (!qword_256052970)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.OrderType, &type metadata for RawOrderContent.OrderType);
    atomic_store(result, (unint64_t *)&qword_256052970);
  }
  return result;
}

unint64_t sub_2334D2AF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256052978;
  if (!qword_256052978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560528D0);
    v2 = sub_233167C58(&qword_256052980, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderApplication, (uint64_t)&protocol conformance descriptor for RawOrderApplication);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256052978);
  }
  return result;
}

unint64_t sub_2334D2B70()
{
  unint64_t result;

  result = qword_256052988;
  if (!qword_256052988)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderBarcode, &type metadata for RawOrderBarcode);
    atomic_store(result, (unint64_t *)&qword_256052988);
  }
  return result;
}

unint64_t sub_2334D2BB4()
{
  unint64_t result;

  result = qword_256052998;
  if (!qword_256052998)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.SchemaVersion, &type metadata for RawOrderContent.SchemaVersion);
    atomic_store(result, (unint64_t *)&qword_256052998);
  }
  return result;
}

uint64_t sub_2334D2BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2334D2C3C()
{
  unint64_t result;

  result = qword_2560529A0;
  if (!qword_2560529A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderError, &type metadata for RawOrderError);
    atomic_store(result, (unint64_t *)&qword_2560529A0);
  }
  return result;
}

uint64_t sub_2334D2C80()
{
  unint64_t v0;

  v0 = sub_23361F278();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

uint64_t sub_2334D2CD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  char *v9;

  sub_23361D31C();
  if (v5 && (sub_2331685C4(), v6 = sub_23361EBF4(), swift_bridgeObjectRelease(), !v6) || (a4 & 1) != 0)
  {
    result = sub_23361E234();
    if (result >= 16)
      return result;
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  sub_2334D2C3C();
  swift_allocError();
  *v9 = v7;
  return swift_willThrow();
}

unint64_t sub_2334D2DC4()
{
  unint64_t result;

  result = qword_2560529A8;
  if (!qword_2560529A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderStatus, &type metadata for RawOrderStatus);
    atomic_store(result, (unint64_t *)&qword_2560529A8);
  }
  return result;
}

unint64_t sub_2334D2E0C()
{
  unint64_t result;

  result = qword_2560529B0;
  if (!qword_2560529B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderError, &type metadata for RawOrderError);
    atomic_store(result, (unint64_t *)&qword_2560529B0);
  }
  return result;
}

unint64_t sub_2334D2E54()
{
  unint64_t result;

  result = qword_2560529B8;
  if (!qword_2560529B8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderChangeNotificationsValue, &type metadata for RawOrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_2560529B8);
  }
  return result;
}

uint64_t sub_2334D2E98()
{
  return sub_2331B1A14(&qword_2560529C0, &qword_2560529C8, MEMORY[0x24BEE12E0]);
}

uint64_t storeEnumTagSinglePayload for RawOrderStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2334D2F10 + 4 * byte_23365285E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2334D2F44 + 4 * byte_233652859[v4]))();
}

uint64_t sub_2334D2F44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334D2F4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334D2F54);
  return result;
}

uint64_t sub_2334D2F60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334D2F68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334D2F6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334D2F74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderStatus()
{
  return &type metadata for RawOrderStatus;
}

uint64_t storeEnumTagSinglePayload for RawOrderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2334D2FDC + 4 * byte_233652868[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2334D3010 + 4 * byte_233652863[v4]))();
}

uint64_t sub_2334D3010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334D3018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334D3020);
  return result;
}

uint64_t sub_2334D302C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334D3034);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2334D3038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334D3040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderError()
{
  return &type metadata for RawOrderError;
}

_QWORD *initializeBufferWithCopyOfBuffer for RawECommerceOrderContent(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  unsigned int (*v154)(char *, uint64_t, uint64_t);
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  int *v157;
  uint64_t v158;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      v7 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v7;
      *(_QWORD *)(a1 + 96) = a2[12];
      v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      v9 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      v11 = a2[1];
      v12 = a2[2];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      v13 = a2[3];
      v14 = a2[4];
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      v15 = a2[5];
      v16 = a2[6];
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      v17 = a2[7];
      v18 = a2[8];
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      v19 = a2[9];
      v20 = a2[10];
      *(_QWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 72) = v19;
      v21 = a2[11];
      v22 = a2[12];
      *(_QWORD *)(a1 + 80) = v20;
      *(_QWORD *)(a1 + 88) = v21;
      *(_QWORD *)(a1 + 96) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v23 = (int *)type metadata accessor for RawMerchant();
    v24 = v23[5];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23361D340();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v31 = v23[6];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v158 = v27;
    v154 = v29;
    if (v29((char *)a2 + v31, 1, v27))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v33, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    v35 = v28;
    v36 = v23[7];
    v37 = (_QWORD *)((char *)v4 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v23[8];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v23[9];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = v23[10];
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v23[11];
    v53 = (_QWORD *)((char *)v4 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = v23[12];
    v57 = (char *)v4 + v56;
    v58 = (char *)a2 + v56;
    v153 = v35;
    v59 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v155 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59(v57, v58, v158);
    v60 = a3[5];
    v61 = a3[6];
    v62 = (_QWORD *)((char *)v4 + v60);
    v63 = (uint64_t *)((char *)a2 + v60);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = (_QWORD *)((char *)v4 + v61);
    v66 = (uint64_t *)((char *)a2 + v61);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    v68 = a3[7];
    v69 = a3[8];
    v70 = (_QWORD *)((char *)v4 + v68);
    v71 = (uint64_t *)((char *)a2 + v68);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    *((_BYTE *)v4 + v69) = *((_BYTE *)a2 + v69);
    v73 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v74 = (_QWORD *)((char *)v4 + v73);
    v75 = (uint64_t *)((char *)a2 + v73);
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    v77 = a3[11];
    v156 = (char *)v4 + v77;
    v151 = (uint64_t)a2 + v77;
    v78 = sub_23361D634();
    v150 = *(_QWORD *)(v78 - 8);
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v156, v151, v78);
    v152 = (void (*)(char *, char *, uint64_t))v79;
    v79((char *)v4 + a3[12], (uint64_t)a2 + a3[12], v78);
    v59((char *)v4 + a3[13], (char *)a2 + a3[13], v158);
    v157 = a3;
    v80 = a3[14];
    v81 = (char *)v4 + v80;
    v82 = (char *)a2 + v80;
    v83 = *((_QWORD *)v82 + 5);
    if (v83)
    {
      *v81 = *v82;
      *(_OWORD *)(v81 + 8) = *(_OWORD *)(v82 + 8);
      *((_DWORD *)v81 + 6) = *((_DWORD *)v82 + 6);
      *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
      *((_QWORD *)v81 + 5) = v83;
      v84 = *((_QWORD *)v82 + 7);
      *((_QWORD *)v81 + 6) = *((_QWORD *)v82 + 6);
      *((_QWORD *)v81 + 7) = v84;
      v85 = *((_QWORD *)v82 + 9);
      *((_QWORD *)v81 + 8) = *((_QWORD *)v82 + 8);
      *((_QWORD *)v81 + 9) = v85;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v86 = *((_OWORD *)v82 + 3);
      *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
      *((_OWORD *)v81 + 3) = v86;
      *((_OWORD *)v81 + 4) = *((_OWORD *)v82 + 4);
      v87 = *((_OWORD *)v82 + 1);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v87;
    }
    v88 = a3[15];
    v89 = (char *)v4 + v88;
    v90 = (char *)a2 + v88;
    v91 = (int *)type metadata accessor for RawOrderReturnInfo();
    v92 = *((_QWORD *)v91 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v90, 1, v91))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      v149 = v78;
      v155(v89, v90, v158);
      v94 = v91[5];
      v95 = &v89[v94];
      v96 = &v90[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v91[6];
      v99 = &v89[v98];
      v100 = &v90[v98];
      swift_bridgeObjectRetain();
      if (v154(v100, 1, v158))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v155(v99, v100, v158);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v99, 0, 1, v158);
      }
      v102 = v91[7];
      v103 = &v89[v102];
      v104 = &v90[v102];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(&v90[v102], 1, v149))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v152(v103, v104, v149);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v103, 0, 1, v149);
      }
      v89[v91[8]] = v90[v91[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56))(v89, 0, 1, v91);
    }
    v106 = v157[17];
    *(_QWORD *)((char *)v4 + v157[16]) = *(uint64_t *)((char *)a2 + v157[16]);
    *(_QWORD *)((char *)v4 + v106) = *(uint64_t *)((char *)a2 + v106);
    v107 = v157[18];
    v108 = (char *)v4 + v107;
    v109 = (uint64_t)a2 + v107;
    v110 = *(uint64_t *)((char *)a2 + v107 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v110 == 1)
    {
      v111 = *(_OWORD *)(v109 + 48);
      *((_OWORD *)v108 + 2) = *(_OWORD *)(v109 + 32);
      *((_OWORD *)v108 + 3) = v111;
      *((_OWORD *)v108 + 4) = *(_OWORD *)(v109 + 64);
      v112 = *(_OWORD *)(v109 + 16);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v112;
    }
    else
    {
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v113 = *(_QWORD *)(v109 + 24);
      *((_QWORD *)v108 + 2) = *(_QWORD *)(v109 + 16);
      *((_QWORD *)v108 + 3) = v113;
      v114 = *(_QWORD *)(v109 + 40);
      *((_QWORD *)v108 + 4) = *(_QWORD *)(v109 + 32);
      *((_QWORD *)v108 + 5) = v114;
      v115 = *(_QWORD *)(v109 + 56);
      *((_QWORD *)v108 + 6) = *(_QWORD *)(v109 + 48);
      *((_QWORD *)v108 + 7) = v115;
      v116 = *(_QWORD *)(v109 + 64);
      v117 = *(_QWORD *)(v109 + 72);
      *((_QWORD *)v108 + 8) = v116;
      *((_QWORD *)v108 + 9) = v117;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v118 = v157[20];
    *(_QWORD *)((char *)v4 + v157[19]) = *(uint64_t *)((char *)a2 + v157[19]);
    *(_QWORD *)((char *)v4 + v118) = *(uint64_t *)((char *)a2 + v118);
    v119 = v157[22];
    *(_QWORD *)((char *)v4 + v157[21]) = *(uint64_t *)((char *)a2 + v157[21]);
    v120 = (char *)v4 + v119;
    v121 = (uint64_t)a2 + v119;
    v122 = *(uint64_t *)((char *)a2 + v119 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v122)
    {
      v123 = *(_QWORD *)(v121 + 8);
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = v123;
      v120[16] = *(_BYTE *)(v121 + 16);
      *((_QWORD *)v120 + 3) = *(_QWORD *)(v121 + 24);
      *((_QWORD *)v120 + 4) = v122;
      v124 = *(_QWORD *)(v121 + 48);
      *((_QWORD *)v120 + 5) = *(_QWORD *)(v121 + 40);
      *((_QWORD *)v120 + 6) = v124;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v125 = *(_OWORD *)(v121 + 16);
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v125;
      *((_OWORD *)v120 + 2) = *(_OWORD *)(v121 + 32);
      *((_QWORD *)v120 + 6) = *(_QWORD *)(v121 + 48);
    }
    v126 = v158;
    v127 = v157[23];
    v128 = (_QWORD *)((char *)v4 + v127);
    v129 = (uint64_t *)((char *)a2 + v127);
    v130 = type metadata accessor for RawOrderProvider();
    v131 = *(_QWORD *)(v130 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
    {
      v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
      memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    }
    else
    {
      v133 = v129[1];
      *v128 = *v129;
      v128[1] = v133;
      v134 = v129[3];
      v128[2] = v129[2];
      v128[3] = v134;
      v135 = v129[5];
      v128[4] = v129[4];
      v128[5] = v135;
      v136 = *(int *)(v130 + 28);
      v137 = (char *)v128 + v136;
      v138 = (char *)v129 + v136;
      swift_bridgeObjectRetain();
      v126 = v158;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v155(v137, v138, v158);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
    }
    v139 = v157[24];
    v140 = (char *)v4 + v139;
    v141 = (char *)a2 + v139;
    if (v154((char *)a2 + v139, 1, v126))
    {
      v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    }
    else
    {
      v155(v140, v141, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v140, 0, 1, v126);
    }
    v143 = v157[25];
    v144 = v157[26];
    v145 = (_QWORD *)((char *)v4 + v143);
    v146 = (uint64_t *)((char *)a2 + v143);
    v147 = v146[1];
    *v145 = *v146;
    v145[1] = v147;
    *(_WORD *)((char *)v4 + v144) = *(_WORD *)((char *)a2 + v144);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawECommerceOrderContent(char *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  char *v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v25)(char *, uint64_t);

  if (*(_QWORD *)a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = (int *)type metadata accessor for RawMerchant();
  v5 = &a1[v4[5]];
  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v9 = &a1[v4[6]];
  if (!v8(v9, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *(void (**)(char *, uint64_t))(v7 + 8);
  v10(&a1[v4[12]], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = &a1[a2[11]];
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(&a1[a2[12]], v12);
  v10(&a1[a2[13]], v6);
  if (*(_QWORD *)&a1[a2[14] + 40])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = &a1[a2[15]];
  v16 = type metadata accessor for RawOrderReturnInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v25 = v10;
    v10(v15, v6);
    swift_bridgeObjectRelease();
    v17 = v8;
    v18 = &v15[*(int *)(v16 + 24)];
    v19 = v17;
    if (!v17(v18, 1, v6))
      v25(v18, v6);
    v20 = &v15[*(int *)(v16 + 28)];
    v8 = v19;
    v10 = v25;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12))
      v14(v20, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&a1[a2[18] + 8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&a1[a2[22] + 32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v21 = &a1[a2[23]];
  v22 = type metadata accessor for RawOrderProvider();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10(&v21[*(int *)(v22 + 28)], v6);
  }
  v23 = &a1[a2[24]];
  if (!v8(v23, 1, v6))
    v10(v23, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  int *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void *v137;
  const void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  char *__dst;
  char *__dsta;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  int *v151;
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;

  if (*(_QWORD *)a2 == 1)
  {
    v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v9;
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    v15 = *(_QWORD *)(a2 + 56);
    v16 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v15;
    v17 = *(_QWORD *)(a2 + 72);
    v18 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    v19 = *(_QWORD *)(a2 + 88);
    v20 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v19;
    *(_QWORD *)(a1 + 96) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v21 = (int *)type metadata accessor for RawMerchant();
  v22 = v21[5];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_23361D340();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v29 = v21[6];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v153 = (unsigned int (*)(char *, uint64_t, uint64_t))v27;
  v151 = a3;
  if (v27((const void *)(a2 + v29), 1, v25))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v30, v31, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  v33 = v26;
  v34 = v21[7];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v21[8];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v21[9];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = v21[10];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v21[11];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v21[12];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v152 = v33;
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v154 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(v55, v56, v25);
  v58 = v151;
  v59 = v151[5];
  v60 = v151[6];
  v61 = (_QWORD *)(a1 + v59);
  v62 = (_QWORD *)(a2 + v59);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = (_QWORD *)(a1 + v60);
  v65 = (_QWORD *)(a2 + v60);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = v151[7];
  v68 = v151[8];
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(a2 + v68);
  v72 = v151[10];
  *(_BYTE *)(a1 + v151[9]) = *(_BYTE *)(a2 + v151[9]);
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = v151[11];
  v155 = a1 + v76;
  v149 = a2 + v76;
  v77 = sub_23361D634();
  v148 = *(_QWORD *)(v77 - 8);
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78(v155, v149, v77);
  v150 = (void (*)(char *, char *, uint64_t))v78;
  v78(a1 + v58[12], a2 + v58[12], v77);
  v156 = v25;
  v154(a1 + v58[13], a2 + v58[13], v25);
  v79 = v151[14];
  v80 = a1 + v79;
  v81 = a2 + v79;
  v82 = *(_QWORD *)(v81 + 40);
  if (v82)
  {
    *(_BYTE *)v80 = *(_BYTE *)v81;
    *(_OWORD *)(v80 + 8) = *(_OWORD *)(v81 + 8);
    *(_DWORD *)(v80 + 24) = *(_DWORD *)(v81 + 24);
    *(_QWORD *)(v80 + 32) = *(_QWORD *)(v81 + 32);
    *(_QWORD *)(v80 + 40) = v82;
    v83 = *(_QWORD *)(v81 + 56);
    *(_QWORD *)(v80 + 48) = *(_QWORD *)(v81 + 48);
    *(_QWORD *)(v80 + 56) = v83;
    v84 = *(_QWORD *)(v81 + 72);
    *(_QWORD *)(v80 + 64) = *(_QWORD *)(v81 + 64);
    *(_QWORD *)(v80 + 72) = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v85 = *(_OWORD *)(v81 + 48);
    *(_OWORD *)(v80 + 32) = *(_OWORD *)(v81 + 32);
    *(_OWORD *)(v80 + 48) = v85;
    *(_OWORD *)(v80 + 64) = *(_OWORD *)(v81 + 64);
    v86 = *(_OWORD *)(v81 + 16);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    *(_OWORD *)(v80 + 16) = v86;
  }
  v87 = v151[15];
  v88 = (char *)(a1 + v87);
  v89 = (char *)(a2 + v87);
  v90 = (int *)type metadata accessor for RawOrderReturnInfo();
  v91 = *((_QWORD *)v90 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v91 + 48))(v89, 1, v90))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v154((uint64_t)v88, (uint64_t)v89, v156);
    v93 = v90[5];
    v94 = &v88[v93];
    v95 = &v89[v93];
    v96 = *((_QWORD *)v95 + 1);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    *((_QWORD *)v94 + 1) = v96;
    v97 = v90[6];
    __dst = &v88[v97];
    v98 = &v89[v97];
    swift_bridgeObjectRetain();
    if (v153(v98, 1, v156))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v154((uint64_t)__dst, (uint64_t)v98, v156);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(__dst, 0, 1, v156);
    }
    v100 = v90[7];
    __dsta = &v88[v100];
    v101 = &v89[v100];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(&v89[v100], 1, v77))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dsta, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v150(__dsta, v101, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(__dsta, 0, 1, v77);
    }
    v88[v90[8]] = v89[v90[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56))(v88, 0, 1, v90);
  }
  v103 = v151[17];
  *(_QWORD *)(a1 + v151[16]) = *(_QWORD *)(a2 + v151[16]);
  *(_QWORD *)(a1 + v103) = *(_QWORD *)(a2 + v103);
  v104 = v151[18];
  v105 = a1 + v104;
  v106 = a2 + v104;
  v107 = *(_QWORD *)(a2 + v104 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v107 == 1)
  {
    v108 = *(_OWORD *)(v106 + 48);
    *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
    *(_OWORD *)(v105 + 48) = v108;
    *(_OWORD *)(v105 + 64) = *(_OWORD *)(v106 + 64);
    v109 = *(_OWORD *)(v106 + 16);
    *(_OWORD *)v105 = *(_OWORD *)v106;
    *(_OWORD *)(v105 + 16) = v109;
  }
  else
  {
    *(_QWORD *)v105 = *(_QWORD *)v106;
    *(_QWORD *)(v105 + 8) = v107;
    v110 = *(_QWORD *)(v106 + 24);
    *(_QWORD *)(v105 + 16) = *(_QWORD *)(v106 + 16);
    *(_QWORD *)(v105 + 24) = v110;
    v111 = *(_QWORD *)(v106 + 40);
    *(_QWORD *)(v105 + 32) = *(_QWORD *)(v106 + 32);
    *(_QWORD *)(v105 + 40) = v111;
    v112 = *(_QWORD *)(v106 + 56);
    *(_QWORD *)(v105 + 48) = *(_QWORD *)(v106 + 48);
    *(_QWORD *)(v105 + 56) = v112;
    v113 = *(_QWORD *)(v106 + 64);
    v114 = *(_QWORD *)(v106 + 72);
    *(_QWORD *)(v105 + 64) = v113;
    *(_QWORD *)(v105 + 72) = v114;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v115 = v151[20];
  *(_QWORD *)(a1 + v151[19]) = *(_QWORD *)(a2 + v151[19]);
  *(_QWORD *)(a1 + v115) = *(_QWORD *)(a2 + v115);
  v116 = v151[22];
  *(_QWORD *)(a1 + v151[21]) = *(_QWORD *)(a2 + v151[21]);
  v117 = a1 + v116;
  v118 = a2 + v116;
  v119 = *(_QWORD *)(a2 + v116 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v119)
  {
    v120 = *(_QWORD *)(v118 + 8);
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *(_QWORD *)(v117 + 8) = v120;
    *(_BYTE *)(v117 + 16) = *(_BYTE *)(v118 + 16);
    *(_QWORD *)(v117 + 24) = *(_QWORD *)(v118 + 24);
    *(_QWORD *)(v117 + 32) = v119;
    v121 = *(_QWORD *)(v118 + 48);
    *(_QWORD *)(v117 + 40) = *(_QWORD *)(v118 + 40);
    *(_QWORD *)(v117 + 48) = v121;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v122 = *(_OWORD *)(v118 + 16);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    *(_OWORD *)(v117 + 16) = v122;
    *(_OWORD *)(v117 + 32) = *(_OWORD *)(v118 + 32);
    *(_QWORD *)(v117 + 48) = *(_QWORD *)(v118 + 48);
  }
  v123 = v156;
  v124 = v151[23];
  v125 = (_QWORD *)(a1 + v124);
  v126 = (_QWORD *)(a2 + v124);
  v127 = type metadata accessor for RawOrderProvider();
  v128 = *(_QWORD *)(v127 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
  {
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v130 = v126[1];
    *v125 = *v126;
    v125[1] = v130;
    v131 = v126[3];
    v125[2] = v126[2];
    v125[3] = v131;
    v132 = v126[5];
    v125[4] = v126[4];
    v125[5] = v132;
    v133 = *(int *)(v127 + 28);
    v134 = (char *)v125 + v133;
    v135 = (char *)v126 + v133;
    swift_bridgeObjectRetain();
    v123 = v156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v154((uint64_t)v134, (uint64_t)v135, v156);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
  }
  v136 = v151[24];
  v137 = (void *)(a1 + v136);
  v138 = (const void *)(a2 + v136);
  if (v153((char *)(a2 + v136), 1, v123))
  {
    v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
  }
  else
  {
    v154((uint64_t)v137, (uint64_t)v138, v123);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v137, 0, 1, v123);
  }
  v140 = v151[25];
  v141 = v151[26];
  v142 = (_QWORD *)(a1 + v140);
  v143 = (_QWORD *)(a2 + v140);
  v144 = v143[1];
  *v142 = *v143;
  v142[1] = v144;
  *(_WORD *)(a1 + v141) = *(_WORD *)(a2 + v141);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawECommerceOrderContent(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(void *, uint64_t, uint64_t);
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  int *v86;
  uint64_t v87;
  uint64_t (*v88)(_BYTE *, uint64_t, int *);
  int v89;
  int v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  int v103;
  unsigned int v104;
  uint64_t v105;
  size_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  __int128 *v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(_QWORD *, uint64_t, uint64_t);
  int v140;
  int v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  void (*v146)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  char *v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v159;
  char *v160;
  uint64_t (*v161)(void);
  int v162;
  int v163;
  size_t v164;
  char *v165;
  _BYTE *__src;
  char *__srca;
  void *v168;
  char *v169;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  char *__dstb;
  uint64_t v173;
  void (*v174)(uint64_t, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  unsigned int (*v179)(char *, uint64_t, uint64_t);

  v6 = *(_QWORD *)a1;
  v7 = *a2;
  if (v6 == 1)
  {
    if (v7 == 1)
    {
      v8 = *(_OWORD *)a2;
      v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      v10 = *((_OWORD *)a2 + 3);
      v11 = *((_OWORD *)a2 + 4);
      v12 = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_233326AE4(a1);
    v14 = *((_OWORD *)a2 + 1);
    v13 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v13;
    v16 = *((_OWORD *)a2 + 4);
    v15 = *((_OWORD *)a2 + 5);
    v17 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 48) = v17;
  }
  else
  {
    *(_QWORD *)a1 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = (int *)type metadata accessor for RawMerchant();
  v19 = v18[5];
  v20 = (void *)(a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = sub_23361D340();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
LABEL_13:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_14:
  v28 = v18[6];
  v29 = (void *)(a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = v24((void *)(a1 + v28), 1, v22);
  v32 = v24(v30, 1, v22);
  v179 = (unsigned int (*)(char *, uint64_t, uint64_t))v24;
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v29, v30, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v29, v22);
LABEL_19:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v23 + 24))(v29, v30, v22);
LABEL_20:
  v34 = v18[7];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v18[8];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)((char *)a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = v18[9];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)((char *)a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v18[10];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)((char *)a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = v18[11];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)((char *)a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 24);
  v49(a1 + v18[12], (char *)a2 + v18[12], v22);
  v50 = a3[5];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)((char *)a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[6];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)((char *)a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[7];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)((char *)a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v59 = a3[10];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)((char *)a2 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = a3[11];
  v63 = a1 + v62;
  v64 = (uint64_t)a2 + v62;
  v65 = v23;
  v66 = a3;
  v67 = sub_23361D634();
  v173 = *(_QWORD *)(v67 - 8);
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 24);
  v68(v63, v64, v67);
  v176 = v67;
  v69 = v67;
  v70 = v66;
  __dst = (void (*)(char *, char *, uint64_t))v68;
  v68(a1 + v66[12], (uint64_t)a2 + v66[12], v69);
  v178 = v22;
  v174 = v49;
  v49(a1 + v66[13], (char *)a2 + v66[13], v22);
  v71 = v66[14];
  v72 = a1 + v71;
  v73 = (uint64_t)a2 + v71;
  v74 = *(_QWORD *)(a1 + v71 + 40);
  v75 = *(uint64_t *)((char *)a2 + v71 + 40);
  v175 = v65;
  if (v74)
  {
    if (v75)
    {
      *(_BYTE *)v72 = *(_BYTE *)v73;
      *(_DWORD *)(v72 + 8) = *(_DWORD *)(v73 + 8);
      *(_WORD *)(v72 + 12) = *(_WORD *)(v73 + 12);
      *(_WORD *)(v72 + 14) = *(_WORD *)(v73 + 14);
      *(_WORD *)(v72 + 16) = *(_WORD *)(v73 + 16);
      *(_WORD *)(v72 + 18) = *(_WORD *)(v73 + 18);
      *(_WORD *)(v72 + 20) = *(_WORD *)(v73 + 20);
      *(_WORD *)(v72 + 22) = *(_WORD *)(v73 + 22);
      *(_WORD *)(v72 + 24) = *(_WORD *)(v73 + 24);
      *(_WORD *)(v72 + 26) = *(_WORD *)(v73 + 26);
      *(_QWORD *)(v72 + 32) = *(_QWORD *)(v73 + 32);
      *(_QWORD *)(v72 + 40) = *(_QWORD *)(v73 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v72 + 56) = *(_QWORD *)(v73 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v72 + 64) = *(_QWORD *)(v73 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v72 + 72) = *(_QWORD *)(v73 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233326B18(v72);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      v77 = *(_OWORD *)(v73 + 64);
      v79 = *(_OWORD *)(v73 + 16);
      v78 = *(_OWORD *)(v73 + 32);
      *(_OWORD *)(v72 + 48) = *(_OWORD *)(v73 + 48);
      *(_OWORD *)(v72 + 64) = v77;
      *(_OWORD *)(v72 + 16) = v79;
      *(_OWORD *)(v72 + 32) = v78;
    }
  }
  else if (v75)
  {
    *(_BYTE *)v72 = *(_BYTE *)v73;
    v76 = *(_OWORD *)(v73 + 8);
    *(_DWORD *)(v72 + 24) = *(_DWORD *)(v73 + 24);
    *(_OWORD *)(v72 + 8) = v76;
    *(_QWORD *)(v72 + 32) = *(_QWORD *)(v73 + 32);
    *(_QWORD *)(v72 + 40) = *(_QWORD *)(v73 + 40);
    *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
    *(_QWORD *)(v72 + 56) = *(_QWORD *)(v73 + 56);
    *(_QWORD *)(v72 + 64) = *(_QWORD *)(v73 + 64);
    *(_QWORD *)(v72 + 72) = *(_QWORD *)(v73 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v72 = *(_OWORD *)v73;
    v80 = *(_OWORD *)(v73 + 16);
    v81 = *(_OWORD *)(v73 + 32);
    v82 = *(_OWORD *)(v73 + 64);
    *(_OWORD *)(v72 + 48) = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 64) = v82;
    *(_OWORD *)(v72 + 16) = v80;
    *(_OWORD *)(v72 + 32) = v81;
  }
  v83 = v66[15];
  v84 = (_BYTE *)(a1 + v83);
  v85 = (char *)a2 + v83;
  v86 = (int *)type metadata accessor for RawOrderReturnInfo();
  v87 = *((_QWORD *)v86 - 1);
  v88 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v87 + 48);
  v89 = v88(v84, 1, v86);
  v90 = v88(v85, 1, v86);
  if (v89)
  {
    if (!v90)
    {
      v168 = *(void **)(v175 + 16);
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v168)(v84, v85, v178);
      v91 = v86[5];
      v92 = &v84[v91];
      v93 = &v85[v91];
      *v92 = *v93;
      v92[1] = v93[1];
      v94 = v86[6];
      __dsta = &v84[v94];
      v95 = &v85[v94];
      swift_bridgeObjectRetain();
      if (v179(v95, 1, v178))
      {
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dsta, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v168)(__dsta, v95, v178);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(__dsta, 0, 1, v178);
      }
      v108 = v86[7];
      __dstb = &v84[v108];
      v109 = &v85[v108];
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v173 + 48))(&v85[v108], 1, v176))
      {
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dstb, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v173 + 16))(__dstb, v109, v176);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(__dstb, 0, 1, v176);
      }
      v84[v86[8]] = v85[v86[8]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v87 + 56))(v84, 0, 1, v86);
      goto LABEL_44;
    }
LABEL_35:
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
LABEL_44:
    v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v179;
    goto LABEL_45;
  }
  if (v90)
  {
    sub_233168500((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    goto LABEL_35;
  }
  v174((uint64_t)v84, v85, v178);
  v98 = v86[5];
  v99 = &v84[v98];
  v100 = &v85[v98];
  *v99 = *v100;
  v99[1] = v100[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v101 = v86[6];
  v102 = &v85[v101];
  v169 = &v84[v101];
  v103 = ((uint64_t (*)(void))v179)();
  __src = v102;
  v104 = v179(v102, 1, v178);
  if (v103)
  {
    v105 = v176;
    if (v104)
    {
      v106 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v107 = v169;
LABEL_76:
      memcpy(v107, __src, v106);
      goto LABEL_79;
    }
    (*(void (**)(char *, _BYTE *, uint64_t))(v175 + 16))(v169, __src, v178);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v169, 0, 1, v178);
  }
  else
  {
    v105 = v176;
    if (v104)
    {
      (*(void (**)(char *, uint64_t))(v175 + 8))(v169, v178);
      v106 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v107 = v169;
      goto LABEL_76;
    }
    v174((uint64_t)v169, __src, v178);
  }
LABEL_79:
  v159 = v86[7];
  v160 = &v85[v159];
  v161 = *(uint64_t (**)(void))(v173 + 48);
  __srca = &v84[v159];
  v162 = v161();
  v163 = ((uint64_t (*)(char *, uint64_t, uint64_t))v161)(v160, 1, v105);
  if (v162)
  {
    if (!v163)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(__srca, v160, v105);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(__srca, 0, 1, v105);
      goto LABEL_87;
    }
    v164 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v165 = __srca;
  }
  else
  {
    if (!v163)
    {
      __dst(__srca, v160, v105);
      goto LABEL_87;
    }
    (*(void (**)(char *, uint64_t))(v173 + 8))(__srca, v105);
    v164 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v165 = __srca;
  }
  memcpy(v165, v160, v164);
LABEL_87:
  v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v179;
  v84[v86[8]] = v85[v86[8]];
LABEL_45:
  *(_QWORD *)(a1 + v70[16]) = *(uint64_t *)((char *)a2 + v70[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v70[17]) = *(uint64_t *)((char *)a2 + v70[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v112 = v70[18];
  v113 = a1 + v112;
  v114 = (uint64_t)a2 + v112;
  v115 = *(_QWORD *)(a1 + v112 + 8);
  v116 = *(uint64_t *)((char *)a2 + v112 + 8);
  if (v115 == 1)
  {
    if (v116 == 1)
    {
      *(_OWORD *)v113 = *(_OWORD *)v114;
      v117 = *(_OWORD *)(v114 + 16);
      v118 = *(_OWORD *)(v114 + 32);
      v119 = *(_OWORD *)(v114 + 64);
      *(_OWORD *)(v113 + 48) = *(_OWORD *)(v114 + 48);
      *(_OWORD *)(v113 + 64) = v119;
      *(_OWORD *)(v113 + 16) = v117;
      *(_OWORD *)(v113 + 32) = v118;
    }
    else
    {
      *(_QWORD *)v113 = *(_QWORD *)v114;
      *(_QWORD *)(v113 + 8) = *(_QWORD *)(v114 + 8);
      *(_QWORD *)(v113 + 16) = *(_QWORD *)(v114 + 16);
      *(_QWORD *)(v113 + 24) = *(_QWORD *)(v114 + 24);
      *(_QWORD *)(v113 + 32) = *(_QWORD *)(v114 + 32);
      *(_QWORD *)(v113 + 40) = *(_QWORD *)(v114 + 40);
      *(_QWORD *)(v113 + 48) = *(_QWORD *)(v114 + 48);
      *(_QWORD *)(v113 + 56) = *(_QWORD *)(v114 + 56);
      *(_QWORD *)(v113 + 64) = *(_QWORD *)(v114 + 64);
      *(_QWORD *)(v113 + 72) = *(_QWORD *)(v114 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v116 == 1)
  {
    sub_233326B4C(v113);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    v120 = *(_OWORD *)(v114 + 64);
    v122 = *(_OWORD *)(v114 + 16);
    v121 = *(_OWORD *)(v114 + 32);
    *(_OWORD *)(v113 + 48) = *(_OWORD *)(v114 + 48);
    *(_OWORD *)(v113 + 64) = v120;
    *(_OWORD *)(v113 + 16) = v122;
    *(_OWORD *)(v113 + 32) = v121;
  }
  else
  {
    *(_QWORD *)v113 = *(_QWORD *)v114;
    *(_QWORD *)(v113 + 8) = *(_QWORD *)(v114 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v113 + 16) = *(_QWORD *)(v114 + 16);
    *(_QWORD *)(v113 + 24) = *(_QWORD *)(v114 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v113 + 32) = *(_QWORD *)(v114 + 32);
    *(_QWORD *)(v113 + 40) = *(_QWORD *)(v114 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v113 + 48) = *(_QWORD *)(v114 + 48);
    *(_QWORD *)(v113 + 56) = *(_QWORD *)(v114 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v113 + 64) = *(_QWORD *)(v114 + 64);
    *(_QWORD *)(v113 + 72) = *(_QWORD *)(v114 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + v70[19]) = *(uint64_t *)((char *)a2 + v70[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v70[20]) = *(uint64_t *)((char *)a2 + v70[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v70[21]) = *(uint64_t *)((char *)a2 + v70[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v123 = v70[22];
  v124 = a1 + v123;
  v125 = (__int128 *)((char *)a2 + v123);
  v126 = *(_QWORD *)(a1 + v123 + 32);
  v127 = *(uint64_t *)((char *)a2 + v123 + 32);
  if (v126)
  {
    if (v127)
    {
      *(_QWORD *)v124 = *(_QWORD *)v125;
      *(_QWORD *)(v124 + 8) = *((_QWORD *)v125 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v124 + 16) = *((_BYTE *)v125 + 16);
      *(_QWORD *)(v124 + 24) = *((_QWORD *)v125 + 3);
      *(_QWORD *)(v124 + 32) = *((_QWORD *)v125 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v124 + 40) = *((_QWORD *)v125 + 5);
      *(_QWORD *)(v124 + 48) = *((_QWORD *)v125 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233326B80(v124);
      v129 = v125[1];
      v128 = v125[2];
      v130 = *v125;
      *(_QWORD *)(v124 + 48) = *((_QWORD *)v125 + 6);
      *(_OWORD *)(v124 + 16) = v129;
      *(_OWORD *)(v124 + 32) = v128;
      *(_OWORD *)v124 = v130;
    }
  }
  else if (v127)
  {
    *(_QWORD *)v124 = *(_QWORD *)v125;
    *(_QWORD *)(v124 + 8) = *((_QWORD *)v125 + 1);
    *(_BYTE *)(v124 + 16) = *((_BYTE *)v125 + 16);
    *(_QWORD *)(v124 + 24) = *((_QWORD *)v125 + 3);
    *(_QWORD *)(v124 + 32) = *((_QWORD *)v125 + 4);
    *(_QWORD *)(v124 + 40) = *((_QWORD *)v125 + 5);
    *(_QWORD *)(v124 + 48) = *((_QWORD *)v125 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v131 = *v125;
    v132 = v125[1];
    v133 = v125[2];
    *(_QWORD *)(v124 + 48) = *((_QWORD *)v125 + 6);
    *(_OWORD *)(v124 + 16) = v132;
    *(_OWORD *)(v124 + 32) = v133;
    *(_OWORD *)v124 = v131;
  }
  v134 = v70[23];
  v135 = (_QWORD *)(a1 + v134);
  v136 = (uint64_t *)((char *)a2 + v134);
  v137 = type metadata accessor for RawOrderProvider();
  v138 = *(_QWORD *)(v137 - 8);
  v139 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v138 + 48);
  v140 = v139(v135, 1, v137);
  v141 = v139(v136, 1, v137);
  if (v140)
  {
    if (!v141)
    {
      *v135 = *v136;
      v135[1] = v136[1];
      v135[2] = v136[2];
      v135[3] = v136[3];
      v135[4] = v136[4];
      v135[5] = v136[5];
      v142 = *(int *)(v137 + 28);
      v143 = (char *)v135 + v142;
      v144 = (char *)v136 + v142;
      v177 = *(void (**)(char *, char *, uint64_t))(v175 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v145 = v143;
      v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v179;
      v177(v145, v144, v178);
      v146 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v138 + 56);
      v147 = v178;
      v146(v135, 0, 1, v137);
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  if (v141)
  {
    sub_233168500((uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
LABEL_64:
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    v147 = v178;
    goto LABEL_65;
  }
  *v135 = *v136;
  v135[1] = v136[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v135[2] = v136[2];
  v135[3] = v136[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v135[4] = v136[4];
  v135[5] = v136[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v147 = v178;
  v174((uint64_t)v135 + *(int *)(v137 + 28), (char *)v136 + *(int *)(v137 + 28), v178);
LABEL_65:
  v149 = v70[24];
  v150 = (_BYTE *)(a1 + v149);
  v151 = (char *)a2 + v149;
  v152 = v111(a1 + v149, 1, v147);
  v153 = v111((uint64_t)v151, 1, v147);
  if (!v152)
  {
    if (!v153)
    {
      v174((uint64_t)v150, v151, v147);
      goto LABEL_71;
    }
    (*(void (**)(_BYTE *, uint64_t))(v175 + 8))(v150, v147);
    goto LABEL_70;
  }
  if (v153)
  {
LABEL_70:
    v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(_BYTE *, char *, uint64_t))(v175 + 16))(v150, v151, v147);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v150, 0, 1, v147);
LABEL_71:
  v155 = v70[25];
  v156 = (_QWORD *)(a1 + v155);
  v157 = (uint64_t *)((char *)a2 + v155);
  *v156 = *v157;
  v156[1] = v157[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v70[26]) = *(_WORD *)((char *)a2 + v70[26]);
  return a1;
}

uint64_t initializeWithTake for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  void (*v21)(void *, const void *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = (int *)type metadata accessor for RawMerchant();
  v10 = v9[5];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D340();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = v9[6];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v85 = v14;
  v86 = (unsigned int (*)(char *, uint64_t, uint64_t))v15;
  if (v15((const void *)(a2 + v17), 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v21 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
  }
  else
  {
    v21 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
    v21(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  *(_OWORD *)(a1 + v9[7]) = *(_OWORD *)(a2 + v9[7]);
  *(_OWORD *)(a1 + v9[8]) = *(_OWORD *)(a2 + v9[8]);
  *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
  *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
  *(_OWORD *)(a1 + v9[11]) = *(_OWORD *)(a2 + v9[11]);
  v21((void *)(a1 + v9[12]), (const void *)(a2 + v9[12]), v13);
  v22 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_23361D634();
  v29 = v13;
  v82 = *(_QWORD *)(v28 - 8);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32);
  v30(v26, v27, v28);
  v30(a1 + a3[12], a2 + a3[12], v28);
  v84 = v29;
  v21((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), v29);
  v31 = a3[14];
  v32 = a3[15];
  v33 = (_OWORD *)(a1 + v31);
  v34 = (_OWORD *)(a2 + v31);
  v35 = v34[3];
  v33[2] = v34[2];
  v33[3] = v35;
  v33[4] = v34[4];
  v36 = v34[1];
  *v33 = *v34;
  v33[1] = v36;
  v37 = (char *)(a1 + v32);
  v38 = (char *)(a2 + v32);
  v39 = (int *)type metadata accessor for RawOrderReturnInfo();
  v40 = *((_QWORD *)v39 - 1);
  v83 = (void (*)(char *, char *, uint64_t))v21;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    v42 = v84;
    v43 = v85;
  }
  else
  {
    v80 = v40;
    v81 = v28;
    v79 = (void (*)(char *, char *, uint64_t))v30;
    v42 = v84;
    v21(v37, v38, v84);
    *(_OWORD *)&v37[v39[5]] = *(_OWORD *)&v38[v39[5]];
    v44 = v39[6];
    v45 = &v37[v44];
    v46 = &v38[v44];
    if (v86(&v38[v44], 1, v84))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v21(v45, v46, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v84);
    }
    v48 = v39[7];
    v49 = &v37[v48];
    v50 = &v38[v48];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(&v38[v48], 1, v81))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v79(v49, v50, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v49, 0, 1, v81);
    }
    v37[v39[8]] = v38[v39[8]];
    (*(void (**)(void))(v80 + 56))();
    v43 = v85;
  }
  v52 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  v53 = a3[18];
  v54 = a3[19];
  v55 = (_OWORD *)(a1 + v53);
  v56 = (_OWORD *)(a2 + v53);
  v57 = v56[4];
  v58 = v56[2];
  v55[3] = v56[3];
  v55[4] = v57;
  v59 = v56[1];
  *v55 = *v56;
  v55[1] = v59;
  v55[2] = v58;
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  v60 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  v61 = a3[22];
  v62 = a3[23];
  v63 = a1 + v61;
  v64 = a2 + v61;
  v65 = *(_OWORD *)(v64 + 16);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *(_OWORD *)(v63 + 16) = v65;
  v66 = *(_OWORD *)(v64 + 32);
  *(_QWORD *)(v63 + 48) = *(_QWORD *)(v64 + 48);
  *(_OWORD *)(v63 + 32) = v66;
  v67 = (_OWORD *)(a1 + v62);
  v68 = (_OWORD *)(a2 + v62);
  v69 = type metadata accessor for RawOrderProvider();
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v72 = v68[1];
    *v67 = *v68;
    v67[1] = v72;
    v67[2] = v68[2];
    v83((char *)v67 + *(int *)(v69 + 28), (char *)v68 + *(int *)(v69 + 28), v42);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  v73 = a3[24];
  v74 = (void *)(a1 + v73);
  v75 = (void *)(a2 + v73);
  if (v86((char *)(a2 + v73), 1, v42))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v83((char *)v74, (char *)v75, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v74, 0, 1, v42);
  }
  v77 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(_WORD *)(a1 + v77) = *(_WORD *)(a2 + v77);
  return a1;
}

uint64_t assignWithTake for RawECommerceOrderContent(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t, int *);
  int v100;
  int v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t (*v125)(void);
  int v126;
  int v127;
  size_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(char *, uint64_t, uint64_t);
  int v153;
  int v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  _BYTE *v160;
  int v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  _BYTE *__src;
  uint64_t (*v182)(void *, uint64_t, uint64_t);

  if (*(_QWORD *)a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_233326AE4(a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = (int *)type metadata accessor for RawMerchant();
  v16 = v15[5];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v182 = v21;
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_11:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_12:
  v25 = v15[6];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = v21((void *)(a1 + v25), 1, v19);
  v29 = v21(v27, 1, v19);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v26, v27, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v19);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v26, v19);
LABEL_17:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v26, v27, v19);
LABEL_18:
  v31 = v15[7];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = v15[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = v15[9];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = v15[10];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v51 = v15[11];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v179 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40);
  v179(a1 + v15[12], a2 + v15[12], v19);
  v56 = a3[5];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  v61 = a3[6];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  v66 = a3[7];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v71) = *(_BYTE *)(a2 + v71);
  v72 = a3[10];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  v77 = a3[11];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = sub_23361D634();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = a3;
  v83 = v20;
  v84 = v19;
  v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 40);
  v85(v78, v79, v80);
  __dst = (void (*)(char *, char *, uint64_t))v85;
  v85(a1 + v82[12], a2 + v82[12], v80);
  v86 = v84;
  v179(a1 + v82[13], a2 + v82[13], v84);
  v87 = v82[14];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v180 = v83;
  v177 = v81;
  v178 = v80;
  if (*(_QWORD *)(a1 + v87 + 40))
  {
    v90 = *(_QWORD *)(v89 + 40);
    if (v90)
    {
      *(_BYTE *)v88 = *(_BYTE *)v89;
      *(_DWORD *)(v88 + 8) = *(_DWORD *)(v89 + 8);
      *(_OWORD *)(v88 + 12) = *(_OWORD *)(v89 + 12);
      *(_QWORD *)(v88 + 32) = *(_QWORD *)(v89 + 32);
      *(_QWORD *)(v88 + 40) = v90;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v88 + 48) = *(_QWORD *)(v89 + 48);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v88 + 56) = *(_QWORD *)(v89 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v88 + 64) = *(_QWORD *)(v89 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v88 + 72) = *(_QWORD *)(v89 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_233326B18(v88);
  }
  v91 = *(_OWORD *)(v89 + 48);
  *(_OWORD *)(v88 + 32) = *(_OWORD *)(v89 + 32);
  *(_OWORD *)(v88 + 48) = v91;
  *(_OWORD *)(v88 + 64) = *(_OWORD *)(v89 + 64);
  v92 = *(_OWORD *)(v89 + 16);
  *(_OWORD *)v88 = *(_OWORD *)v89;
  *(_OWORD *)(v88 + 16) = v92;
LABEL_23:
  v93 = v82;
  v94 = v82[15];
  v95 = (char *)(a1 + v94);
  v96 = (char *)(a2 + v94);
  v97 = (int *)type metadata accessor for RawOrderReturnInfo();
  v98 = *((_QWORD *)v97 - 1);
  v99 = *(uint64_t (**)(char *, uint64_t, int *))(v98 + 48);
  v100 = v99(v95, 1, v97);
  __src = v96;
  v101 = v99(v96, 1, v97);
  if (!v100)
  {
    if (v101)
    {
      sub_233168500((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_29;
    }
    v179((uint64_t)v95, (uint64_t)v96, v86);
    v107 = v97[5];
    v108 = &v95[v107];
    v109 = &v96[v107];
    v111 = *(_QWORD *)v109;
    v110 = *((_QWORD *)v109 + 1);
    *v108 = v111;
    v108[1] = v110;
    swift_bridgeObjectRelease();
    v112 = v97[6];
    v113 = &v95[v112];
    v114 = &v96[v112];
    v115 = v182(&v95[v112], 1, v86);
    v116 = v182(v114, 1, v86);
    if (v115)
    {
      v117 = v177;
      if (!v116)
      {
        (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v113, v114, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v113, 0, 1, v86);
        goto LABEL_43;
      }
    }
    else
    {
      v117 = v177;
      if (!v116)
      {
        v179((uint64_t)v113, (uint64_t)v114, v86);
LABEL_43:
        v123 = v97[7];
        v124 = &__src[v123];
        v125 = *(uint64_t (**)(void))(v117 + 48);
        v173 = &v95[v123];
        v126 = v125();
        v127 = ((uint64_t (*)(char *, uint64_t, uint64_t))v125)(v124, 1, v178);
        if (v126)
        {
          if (!v127)
          {
            (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v173, v124, v178);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v173, 0, 1, v178);
            goto LABEL_52;
          }
          v128 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                           + 64);
          v129 = v173;
        }
        else
        {
          if (!v127)
          {
            __dst(v173, v124, v178);
            goto LABEL_52;
          }
          (*(void (**)(char *, uint64_t))(v177 + 8))(v173, v178);
          v128 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                           + 64);
          v129 = v173;
        }
        memcpy(v129, v124, v128);
LABEL_52:
        v95[v97[8]] = __src[v97[8]];
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v180 + 8))(v113, v86);
    }
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_43;
  }
  if (v101)
  {
LABEL_29:
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    goto LABEL_53;
  }
  v102 = *(void (**)(char *, char *, uint64_t))(v180 + 32);
  v102(v95, v96, v86);
  *(_OWORD *)&v95[v97[5]] = *(_OWORD *)&v96[v97[5]];
  v103 = v97[6];
  __dsta = &v95[v103];
  v104 = &v96[v103];
  v174 = v86;
  if (v182(&v96[v103], 1, v86))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dsta, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    v102(__dsta, v104, v86);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v180 + 56))(__dsta, 0, 1, v86);
  }
  v118 = v97[7];
  v119 = &v95[v118];
  v120 = &v96[v118];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(&v96[v118], 1, v178))
  {
    v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v119, v120, v178);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v119, 0, 1, v178);
  }
  v95[v97[8]] = v96[v97[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v98 + 56))(v95, 0, 1, v97);
  v86 = v174;
LABEL_53:
  *(_QWORD *)(a1 + v93[16]) = *(_QWORD *)(a2 + v93[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v93[17]) = *(_QWORD *)(a2 + v93[17]);
  swift_bridgeObjectRelease();
  v130 = v93[18];
  v131 = a1 + v130;
  v132 = a2 + v130;
  if (*(_QWORD *)(a1 + v130 + 8) == 1)
  {
LABEL_56:
    v134 = *(_OWORD *)(v132 + 48);
    *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
    *(_OWORD *)(v131 + 48) = v134;
    *(_OWORD *)(v131 + 64) = *(_OWORD *)(v132 + 64);
    v135 = *(_OWORD *)(v132 + 16);
    *(_OWORD *)v131 = *(_OWORD *)v132;
    *(_OWORD *)(v131 + 16) = v135;
    goto LABEL_58;
  }
  v133 = *(_QWORD *)(v132 + 8);
  if (v133 == 1)
  {
    sub_233326B4C(v131);
    goto LABEL_56;
  }
  *(_QWORD *)v131 = *(_QWORD *)v132;
  *(_QWORD *)(v131 + 8) = v133;
  swift_bridgeObjectRelease();
  v136 = *(_QWORD *)(v132 + 24);
  *(_QWORD *)(v131 + 16) = *(_QWORD *)(v132 + 16);
  *(_QWORD *)(v131 + 24) = v136;
  swift_bridgeObjectRelease();
  v137 = *(_QWORD *)(v132 + 40);
  *(_QWORD *)(v131 + 32) = *(_QWORD *)(v132 + 32);
  *(_QWORD *)(v131 + 40) = v137;
  swift_bridgeObjectRelease();
  v138 = *(_QWORD *)(v132 + 56);
  *(_QWORD *)(v131 + 48) = *(_QWORD *)(v132 + 48);
  *(_QWORD *)(v131 + 56) = v138;
  swift_bridgeObjectRelease();
  v139 = *(_QWORD *)(v132 + 72);
  *(_QWORD *)(v131 + 64) = *(_QWORD *)(v132 + 64);
  *(_QWORD *)(v131 + 72) = v139;
  swift_bridgeObjectRelease();
LABEL_58:
  *(_QWORD *)(a1 + v93[19]) = *(_QWORD *)(a2 + v93[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v93[20]) = *(_QWORD *)(a2 + v93[20]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v93[21]) = *(_QWORD *)(a2 + v93[21]);
  swift_bridgeObjectRelease();
  v140 = v93[22];
  v141 = a1 + v140;
  v142 = a2 + v140;
  if (*(_QWORD *)(a1 + v140 + 32))
  {
    if (*(_QWORD *)(v142 + 32))
    {
      v143 = *(_QWORD *)(v142 + 8);
      *(_QWORD *)v141 = *(_QWORD *)v142;
      *(_QWORD *)(v141 + 8) = v143;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v141 + 16) = *(_BYTE *)(v142 + 16);
      v144 = *(_QWORD *)(v142 + 32);
      *(_QWORD *)(v141 + 24) = *(_QWORD *)(v142 + 24);
      *(_QWORD *)(v141 + 32) = v144;
      swift_bridgeObjectRelease();
      v145 = *(_QWORD *)(v142 + 48);
      *(_QWORD *)(v141 + 40) = *(_QWORD *)(v142 + 40);
      *(_QWORD *)(v141 + 48) = v145;
      swift_bridgeObjectRelease();
      goto LABEL_63;
    }
    sub_233326B80(v141);
  }
  v146 = *(_OWORD *)(v142 + 16);
  *(_OWORD *)v141 = *(_OWORD *)v142;
  *(_OWORD *)(v141 + 16) = v146;
  *(_OWORD *)(v141 + 32) = *(_OWORD *)(v142 + 32);
  *(_QWORD *)(v141 + 48) = *(_QWORD *)(v142 + 48);
LABEL_63:
  v147 = v93[23];
  v148 = (char *)(a1 + v147);
  v149 = (char *)(a2 + v147);
  v150 = type metadata accessor for RawOrderProvider();
  v151 = *(_QWORD *)(v150 - 8);
  v152 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 48);
  v153 = v152(v148, 1, v150);
  v154 = v152(v149, 1, v150);
  if (v153)
  {
    if (!v154)
    {
      v155 = *((_OWORD *)v149 + 1);
      *(_OWORD *)v148 = *(_OWORD *)v149;
      *((_OWORD *)v148 + 1) = v155;
      *((_OWORD *)v148 + 2) = *((_OWORD *)v149 + 2);
      v156 = v180;
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))(&v148[*(int *)(v150 + 28)], &v149[*(int *)(v150 + 28)], v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
      goto LABEL_70;
    }
  }
  else
  {
    if (!v154)
    {
      v170 = *((_QWORD *)v149 + 1);
      *(_QWORD *)v148 = *(_QWORD *)v149;
      *((_QWORD *)v148 + 1) = v170;
      swift_bridgeObjectRelease();
      v171 = *((_QWORD *)v149 + 3);
      *((_QWORD *)v148 + 2) = *((_QWORD *)v149 + 2);
      *((_QWORD *)v148 + 3) = v171;
      swift_bridgeObjectRelease();
      v172 = *((_QWORD *)v149 + 5);
      *((_QWORD *)v148 + 4) = *((_QWORD *)v149 + 4);
      *((_QWORD *)v148 + 5) = v172;
      swift_bridgeObjectRelease();
      v179((uint64_t)&v148[*(int *)(v150 + 28)], (uint64_t)&v149[*(int *)(v150 + 28)], v86);
      goto LABEL_69;
    }
    sub_233168500((uint64_t)v148, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
  }
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
LABEL_69:
  v156 = v180;
LABEL_70:
  v158 = v93[24];
  v159 = (void *)(a1 + v158);
  v160 = (_BYTE *)(a2 + v158);
  v161 = v182((void *)(a1 + v158), 1, v86);
  v162 = v182(v160, 1, v86);
  if (!v161)
  {
    if (!v162)
    {
      v179((uint64_t)v159, (uint64_t)v160, v86);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v156 + 8))(v159, v86);
    goto LABEL_75;
  }
  if (v162)
  {
LABEL_75:
    v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, _BYTE *, uint64_t))(v156 + 32))(v159, v160, v86);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v159, 0, 1, v86);
LABEL_76:
  v164 = v93[25];
  v165 = (_QWORD *)(a1 + v164);
  v166 = (uint64_t *)(a2 + v164);
  v168 = *v166;
  v167 = v166[1];
  *v165 = v168;
  v165[1] = v167;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v93[26]) = *(_WORD *)(a2 + v93[26]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawECommerceOrderContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334D6848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for RawMerchant();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[11];
    }
    else
    {
      v16 = sub_23361D340();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[15];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
          {
            v8 = v18;
            v15 = a3[23];
          }
          else
          {
            v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            v14 = *(_QWORD *)(v8 - 8);
            v15 = a3[24];
          }
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for RawECommerceOrderContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334D699C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = type metadata accessor for RawMerchant();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[11];
    }
    else
    {
      v16 = sub_23361D340();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[15];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[23];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[24];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2334D6AE0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  type metadata accessor for RawMerchant();
  if (v0 <= 0x3F)
  {
    sub_23361D634();
    if (v1 <= 0x3F)
    {
      sub_23361D340();
      if (v2 <= 0x3F)
      {
        sub_233176020(319, &qword_254246010, (void (*)(uint64_t))type metadata accessor for RawOrderReturnInfo);
        if (v3 <= 0x3F)
        {
          sub_233176020(319, &qword_254245FF8, (void (*)(uint64_t))type metadata accessor for RawOrderProvider);
          if (v4 <= 0x3F)
          {
            sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(const void *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(const void *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  char *v156;
  uint64_t v157;
  uint64_t v159;
  void *v160;
  unsigned int (*v161)(const void *, uint64_t, uint64_t);
  void *__dst;
  int *__dsta;
  void *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  int *v166;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      v6 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v6;
      v7 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v7;
      v8 = type metadata accessor for RawOrderReturn();
      v9 = *(int *)(v8 + 32);
      __dst = (void *)(a1 + v9);
      v166 = (int *)v8;
      v10 = (char *)a2 + v9;
      v11 = sub_23361D634();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      v34 = v166[9];
      v35 = (void *)(a1 + v34);
      v36 = (char *)a2 + v34;
      if (v13((char *)a2 + v34, 1, v11))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v35, v36, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v35, 0, 1, v11);
      }
      v38 = v166[10];
      v39 = (void *)(a1 + v38);
      v40 = (char *)a2 + v38;
      if (v13((char *)a2 + v38, 1, v11))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v39, v40, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
      }
      v42 = v166[11];
      v43 = (_QWORD *)(a1 + v42);
      v44 = (uint64_t *)((char *)a2 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      v46 = v166[12];
      v47 = (_QWORD *)(a1 + v46);
      v48 = (uint64_t *)((char *)a2 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      v50 = v166[13];
      v51 = (_QWORD *)(a1 + v50);
      v52 = (uint64_t *)((char *)a2 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v166[14];
      v55 = (_QWORD *)(a1 + v54);
      v56 = (uint64_t *)((char *)a2 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v166[15];
      __dstb = (void *)(a1 + v58);
      v59 = (char *)a2 + v58;
      v60 = sub_23361D340();
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v62(v59, 1, v60))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dstb, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(__dstb, v59, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dstb, 0, 1, v60);
      }
      v64 = v166[16];
      v65 = (_QWORD *)(a1 + v64);
      v66 = (uint64_t *)((char *)a2 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    type metadata accessor for RawOrderFulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload != 1)
    {
      v25 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v25;
      v26 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v26;
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      v27 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v27;
      v28 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v28;
      v29 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v29;
      __dsta = (int *)type metadata accessor for RawOrderShippingFulfillment();
      v30 = __dsta[11];
      v160 = (void *)(a1 + v30);
      v31 = (char *)a2 + v30;
      v32 = sub_23361D340();
      v159 = *(_QWORD *)(v32 - 8);
      v161 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v159 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v161(v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v160, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v159 + 16))(v160, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v160, 0, 1, v32);
      }
      v91 = __dsta[12];
      v92 = a1 + v91;
      v93 = (uint64_t)a2 + v91;
      v94 = *(uint64_t *)((char *)a2 + v91 + 8);
      if (v94 == 1)
      {
        v95 = *(_OWORD *)(v93 + 112);
        *(_OWORD *)(v92 + 96) = *(_OWORD *)(v93 + 96);
        *(_OWORD *)(v92 + 112) = v95;
        *(_OWORD *)(v92 + 128) = *(_OWORD *)(v93 + 128);
        *(_QWORD *)(v92 + 144) = *(_QWORD *)(v93 + 144);
        v96 = *(_OWORD *)(v93 + 48);
        *(_OWORD *)(v92 + 32) = *(_OWORD *)(v93 + 32);
        *(_OWORD *)(v92 + 48) = v96;
        v97 = *(_OWORD *)(v93 + 80);
        *(_OWORD *)(v92 + 64) = *(_OWORD *)(v93 + 64);
        *(_OWORD *)(v92 + 80) = v97;
        v98 = *(_OWORD *)(v93 + 16);
        *(_OWORD *)v92 = *(_OWORD *)v93;
        *(_OWORD *)(v92 + 16) = v98;
      }
      else
      {
        *(_QWORD *)v92 = *(_QWORD *)v93;
        *(_QWORD *)(v92 + 8) = v94;
        v99 = *(_QWORD *)(v93 + 24);
        *(_QWORD *)(v92 + 16) = *(_QWORD *)(v93 + 16);
        *(_QWORD *)(v92 + 24) = v99;
        v100 = *(_QWORD *)(v93 + 40);
        *(_QWORD *)(v92 + 32) = *(_QWORD *)(v93 + 32);
        *(_QWORD *)(v92 + 40) = v100;
        v101 = *(_QWORD *)(v93 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v101 == 1)
        {
          v102 = *(_OWORD *)(v93 + 128);
          *(_OWORD *)(v92 + 112) = *(_OWORD *)(v93 + 112);
          *(_OWORD *)(v92 + 128) = v102;
          *(_QWORD *)(v92 + 144) = *(_QWORD *)(v93 + 144);
          v103 = *(_OWORD *)(v93 + 64);
          *(_OWORD *)(v92 + 48) = *(_OWORD *)(v93 + 48);
          *(_OWORD *)(v92 + 64) = v103;
          v104 = *(_OWORD *)(v93 + 96);
          *(_OWORD *)(v92 + 80) = *(_OWORD *)(v93 + 80);
          *(_OWORD *)(v92 + 96) = v104;
        }
        else
        {
          v120 = *(_QWORD *)(v93 + 56);
          v121 = *(_QWORD *)(v93 + 64);
          *(_QWORD *)(v92 + 48) = v101;
          *(_QWORD *)(v92 + 56) = v120;
          v122 = *(_QWORD *)(v93 + 72);
          v123 = *(_QWORD *)(v93 + 80);
          *(_QWORD *)(v92 + 64) = v121;
          *(_QWORD *)(v92 + 72) = v122;
          v124 = *(_QWORD *)(v93 + 88);
          v125 = *(_QWORD *)(v93 + 96);
          *(_QWORD *)(v92 + 80) = v123;
          *(_QWORD *)(v92 + 88) = v124;
          v126 = *(_QWORD *)(v93 + 104);
          v127 = *(_QWORD *)(v93 + 112);
          *(_QWORD *)(v92 + 96) = v125;
          *(_QWORD *)(v92 + 104) = v126;
          v128 = *(_QWORD *)(v93 + 120);
          v129 = *(_QWORD *)(v93 + 128);
          *(_QWORD *)(v92 + 112) = v127;
          *(_QWORD *)(v92 + 120) = v128;
          v130 = *(_QWORD *)(v93 + 136);
          v131 = *(_QWORD *)(v93 + 144);
          *(_QWORD *)(v92 + 128) = v129;
          *(_QWORD *)(v92 + 136) = v130;
          *(_QWORD *)(v92 + 144) = v131;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      v132 = __dsta[13];
      v133 = (void *)(a1 + v132);
      v134 = (char *)a2 + v132;
      v135 = sub_23361D634();
      v136 = *(_QWORD *)(v135 - 8);
      v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48);
      if (v137(v134, 1, v135))
      {
        v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v136 + 16))(v133, v134, v135);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
      }
      v139 = __dsta[14];
      v140 = (void *)(a1 + v139);
      v141 = (char *)a2 + v139;
      v142 = type metadata accessor for Duration();
      v143 = *(_QWORD *)(v142 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
      {
        v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
      }
      else
      {
        v145 = sub_23361CD40();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v140, v141, v145);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
      }
      v146 = __dsta[15];
      v147 = (void *)(a1 + v146);
      v148 = (char *)a2 + v146;
      if (v137((char *)a2 + v146, 1, v135))
      {
        v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v136 + 16))(v147, v148, v135);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v147, 0, 1, v135);
      }
      v150 = __dsta[16];
      v151 = (_QWORD *)(a1 + v150);
      v152 = (uint64_t *)((char *)a2 + v150);
      v153 = v152[1];
      *v151 = *v152;
      v151[1] = v153;
      v154 = __dsta[17];
      v155 = (void *)(a1 + v154);
      v156 = (char *)a2 + v154;
      swift_bridgeObjectRetain();
      if (v137(v156, 1, v135))
      {
        v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v136 + 16))(v155, v156, v135);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v155, 0, 1, v135);
      }
      *(_BYTE *)(a1 + __dsta[18]) = *((_BYTE *)a2 + __dsta[18]);
      goto LABEL_54;
    }
    v17 = a2[4];
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v18 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      v19 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v19;
      *(_QWORD *)(a1 + 128) = a2[16];
      v20 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v20;
      v21 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v21;
      v22 = a2[21];
      if (v22)
      {
LABEL_9:
        v23 = a2[18];
        *(_QWORD *)(a1 + 136) = a2[17];
        *(_QWORD *)(a1 + 144) = v23;
        *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
        *(_QWORD *)(a1 + 160) = a2[20];
        *(_QWORD *)(a1 + 168) = v22;
        v24 = a2[23];
        *(_QWORD *)(a1 + 176) = a2[22];
        *(_QWORD *)(a1 + 184) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_25:
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)a2 + 202);
        v81 = a2[29];
        *(_QWORD *)(a1 + 224) = a2[28];
        *(_QWORD *)(a1 + 232) = v81;
        v82 = a2[31];
        *(_QWORD *)(a1 + 240) = a2[30];
        *(_QWORD *)(a1 + 248) = v82;
        v83 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v84 = v83[12];
        v85 = (void *)(a1 + v84);
        v86 = (char *)a2 + v84;
        v87 = sub_23361D634();
        v88 = *(_QWORD *)(v87 - 8);
        v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstc = v89;
        if (v89(v86, 1, v87))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v85, v86, v87);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        }
        v105 = v83[13];
        v106 = (void *)(a1 + v105);
        v107 = (char *)a2 + v105;
        v108 = type metadata accessor for Duration();
        v109 = *(_QWORD *)(v108 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
        {
          v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          v111 = sub_23361CD40();
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v106, v107, v111);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
        }
        v112 = v83[14];
        v113 = (void *)(a1 + v112);
        v114 = (char *)a2 + v112;
        if (__dstc((char *)a2 + v112, 1, v87))
        {
          v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v113, v114, v87);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v113, 0, 1, v87);
        }
        v116 = v83[15];
        v117 = (_QWORD *)(a1 + v116);
        v118 = (uint64_t *)((char *)a2 + v116);
        v119 = v118[1];
        *v117 = *v118;
        v117[1] = v119;
        swift_bridgeObjectRetain();
LABEL_54:
        swift_storeEnumTagMultiPayload();
LABEL_55:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      v68 = a2[5];
      v69 = a2[6];
      *(_QWORD *)(a1 + 32) = v17;
      *(_QWORD *)(a1 + 40) = v68;
      v70 = a2[7];
      v71 = a2[8];
      *(_QWORD *)(a1 + 48) = v69;
      *(_QWORD *)(a1 + 56) = v70;
      v72 = a2[9];
      v73 = a2[10];
      *(_QWORD *)(a1 + 64) = v71;
      *(_QWORD *)(a1 + 72) = v72;
      v74 = a2[11];
      v75 = a2[12];
      *(_QWORD *)(a1 + 80) = v73;
      *(_QWORD *)(a1 + 88) = v74;
      v76 = a2[13];
      v77 = a2[14];
      *(_QWORD *)(a1 + 96) = v75;
      *(_QWORD *)(a1 + 104) = v76;
      v78 = a2[15];
      v79 = a2[16];
      *(_QWORD *)(a1 + 112) = v77;
      *(_QWORD *)(a1 + 120) = v78;
      *(_QWORD *)(a1 + 128) = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = a2[21];
      if (v22)
        goto LABEL_9;
    }
    v80 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v80;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_QWORD *)(a1 + 184) = a2[23];
    goto LABEL_25;
  }
  v15 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for RawECommerceOrderContent.ContentItem(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = (int *)type metadata accessor for RawOrderReturn();
    v3 = a1 + v2[8];
    v4 = sub_23361D634();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + v2[9];
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    v8 = a1 + v2[10];
    if (!v6(v8, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = a1 + v2[15];
    v10 = sub_23361D340();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for RawOrderFulfillment();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 32) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (int *)type metadata accessor for RawOrderPickupFulfillment();
    v14 = a1 + v13[12];
    v15 = sub_23361D634();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v18 = a1 + v13[13];
    v19 = type metadata accessor for Duration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      v20 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
    }
    v21 = a1 + v13[14];
    if (!v17(v21, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  v24 = a1 + v23[11];
  v25 = sub_23361D340();
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  v27 = a1 + v23[12];
  if (*(_QWORD *)(v27 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 48) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v28 = a1 + v23[13];
  v29 = sub_23361D634();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v31(v28, 1, v29))
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  v32 = a1 + v23[14];
  v33 = type metadata accessor for Duration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
  {
    v34 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
  }
  v35 = a1 + v23[15];
  if (!v31(v35, 1, v29))
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v29);
  swift_bridgeObjectRelease();
  v36 = a1 + v23[17];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v31)(v36, 1, v29);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v36, v29);
  return result;
}

uint64_t initializeWithCopy for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(const void *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  void *v105;
  const void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  const void *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(const void *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void *v139;
  const void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  const void *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  const void *v155;
  uint64_t v156;
  uint64_t v158;
  unsigned int (*v159)(const void *, uint64_t, uint64_t);
  void *v160;
  int *v161;
  void *v162;
  void *__dst;
  int *__dsta;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for RawOrderFulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload != 1)
    {
      v22 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v22;
      v23 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v23;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v24 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v24;
      v25 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v25;
      v26 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v26;
      v27 = type metadata accessor for RawOrderShippingFulfillment();
      v28 = *(int *)(v27 + 44);
      v160 = (void *)(a1 + v28);
      v161 = (int *)v27;
      v29 = (const void *)(a2 + v28);
      v30 = sub_23361D340();
      v158 = *(_QWORD *)(v30 - 8);
      v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v158 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v159(v29, 1, v30))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v160, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v158 + 16))(v160, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v160, 0, 1, v30);
      }
      v90 = v161[12];
      v91 = a1 + v90;
      v92 = a2 + v90;
      v93 = *(_QWORD *)(a2 + v90 + 8);
      if (v93 == 1)
      {
        v94 = *(_OWORD *)(v92 + 112);
        *(_OWORD *)(v91 + 96) = *(_OWORD *)(v92 + 96);
        *(_OWORD *)(v91 + 112) = v94;
        *(_OWORD *)(v91 + 128) = *(_OWORD *)(v92 + 128);
        *(_QWORD *)(v91 + 144) = *(_QWORD *)(v92 + 144);
        v95 = *(_OWORD *)(v92 + 48);
        *(_OWORD *)(v91 + 32) = *(_OWORD *)(v92 + 32);
        *(_OWORD *)(v91 + 48) = v95;
        v96 = *(_OWORD *)(v92 + 80);
        *(_OWORD *)(v91 + 64) = *(_OWORD *)(v92 + 64);
        *(_OWORD *)(v91 + 80) = v96;
        v97 = *(_OWORD *)(v92 + 16);
        *(_OWORD *)v91 = *(_OWORD *)v92;
        *(_OWORD *)(v91 + 16) = v97;
      }
      else
      {
        *(_QWORD *)v91 = *(_QWORD *)v92;
        *(_QWORD *)(v91 + 8) = v93;
        v98 = *(_QWORD *)(v92 + 24);
        *(_QWORD *)(v91 + 16) = *(_QWORD *)(v92 + 16);
        *(_QWORD *)(v91 + 24) = v98;
        v99 = *(_QWORD *)(v92 + 40);
        *(_QWORD *)(v91 + 32) = *(_QWORD *)(v92 + 32);
        *(_QWORD *)(v91 + 40) = v99;
        v100 = *(_QWORD *)(v92 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v100 == 1)
        {
          v101 = *(_OWORD *)(v92 + 128);
          *(_OWORD *)(v91 + 112) = *(_OWORD *)(v92 + 112);
          *(_OWORD *)(v91 + 128) = v101;
          *(_QWORD *)(v91 + 144) = *(_QWORD *)(v92 + 144);
          v102 = *(_OWORD *)(v92 + 64);
          *(_OWORD *)(v91 + 48) = *(_OWORD *)(v92 + 48);
          *(_OWORD *)(v91 + 64) = v102;
          v103 = *(_OWORD *)(v92 + 96);
          *(_OWORD *)(v91 + 80) = *(_OWORD *)(v92 + 80);
          *(_OWORD *)(v91 + 96) = v103;
        }
        else
        {
          v119 = *(_QWORD *)(v92 + 56);
          v120 = *(_QWORD *)(v92 + 64);
          *(_QWORD *)(v91 + 48) = v100;
          *(_QWORD *)(v91 + 56) = v119;
          v121 = *(_QWORD *)(v92 + 72);
          v122 = *(_QWORD *)(v92 + 80);
          *(_QWORD *)(v91 + 64) = v120;
          *(_QWORD *)(v91 + 72) = v121;
          v123 = *(_QWORD *)(v92 + 88);
          v124 = *(_QWORD *)(v92 + 96);
          *(_QWORD *)(v91 + 80) = v122;
          *(_QWORD *)(v91 + 88) = v123;
          v125 = *(_QWORD *)(v92 + 104);
          v126 = *(_QWORD *)(v92 + 112);
          *(_QWORD *)(v91 + 96) = v124;
          *(_QWORD *)(v91 + 104) = v125;
          v127 = *(_QWORD *)(v92 + 120);
          v128 = *(_QWORD *)(v92 + 128);
          *(_QWORD *)(v91 + 112) = v126;
          *(_QWORD *)(v91 + 120) = v127;
          v129 = *(_QWORD *)(v92 + 136);
          v130 = *(_QWORD *)(v92 + 144);
          *(_QWORD *)(v91 + 128) = v128;
          *(_QWORD *)(v91 + 136) = v129;
          *(_QWORD *)(v91 + 144) = v130;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      v131 = v161[13];
      v132 = (void *)(a1 + v131);
      v133 = (const void *)(a2 + v131);
      v134 = sub_23361D634();
      v135 = *(_QWORD *)(v134 - 8);
      v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48);
      if (v136(v133, 1, v134))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v132, v133, v134);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
      }
      v138 = v161[14];
      v139 = (void *)(a1 + v138);
      v140 = (const void *)(a2 + v138);
      v141 = type metadata accessor for Duration();
      v142 = *(_QWORD *)(v141 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        v144 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v139, v140, v144);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
      }
      v145 = v161[15];
      v146 = (void *)(a1 + v145);
      v147 = (const void *)(a2 + v145);
      if (v136((const void *)(a2 + v145), 1, v134))
      {
        v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v146, v147, v134);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v146, 0, 1, v134);
      }
      v149 = v161[16];
      v150 = (_QWORD *)(a1 + v149);
      v151 = (_QWORD *)(a2 + v149);
      v152 = v151[1];
      *v150 = *v151;
      v150[1] = v152;
      v153 = v161[17];
      v154 = (void *)(a1 + v153);
      v155 = (const void *)(a2 + v153);
      swift_bridgeObjectRetain();
      if (v136(v155, 1, v134))
      {
        v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v154, v155, v134);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v154, 0, 1, v134);
      }
      *(_BYTE *)(a1 + v161[18]) = *(_BYTE *)(a2 + v161[18]);
      goto LABEL_52;
    }
    v14 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v15 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      v16 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v16;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v17 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v17;
      v18 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v18;
      v19 = *(_QWORD *)(a2 + 168);
      if (v19)
      {
LABEL_7:
        v20 = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = v20;
        *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = v19;
        v21 = *(_QWORD *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        v79 = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = v79;
        v80 = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = v80;
        v81 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v82 = v81[12];
        v83 = (void *)(a1 + v82);
        v84 = (const void *)(a2 + v82);
        v85 = sub_23361D634();
        v86 = *(_QWORD *)(v85 - 8);
        v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
        swift_bridgeObjectRetain();
        v88 = v87;
        swift_bridgeObjectRetain();
        if (v87((uint64_t)v84, 1, v85))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v83, v84, v85);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        }
        v104 = v81[13];
        v105 = (void *)(a1 + v104);
        v106 = (const void *)(a2 + v104);
        v107 = type metadata accessor for Duration();
        v108 = *(_QWORD *)(v107 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          v110 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v105, v106, v110);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
        }
        v111 = v81[14];
        v112 = (void *)(a1 + v111);
        v113 = (const void *)(a2 + v111);
        if (v88(a2 + v111, 1, v85))
        {
          v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v86 + 16))(v112, v113, v85);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v112, 0, 1, v85);
        }
        v115 = v81[15];
        v116 = (_QWORD *)(a1 + v115);
        v117 = (_QWORD *)(a2 + v115);
        v118 = v117[1];
        *v116 = *v117;
        v116[1] = v118;
        swift_bridgeObjectRetain();
LABEL_52:
        swift_storeEnumTagMultiPayload();
        goto LABEL_53;
      }
    }
    else
    {
      v66 = *(_QWORD *)(a2 + 40);
      v67 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v66;
      v68 = *(_QWORD *)(a2 + 56);
      v69 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 48) = v67;
      *(_QWORD *)(a1 + 56) = v68;
      v70 = *(_QWORD *)(a2 + 72);
      v71 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 64) = v69;
      *(_QWORD *)(a1 + 72) = v70;
      v72 = *(_QWORD *)(a2 + 88);
      v73 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 80) = v71;
      *(_QWORD *)(a1 + 88) = v72;
      v74 = *(_QWORD *)(a2 + 104);
      v75 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 96) = v73;
      *(_QWORD *)(a1 + 104) = v74;
      v76 = *(_QWORD *)(a2 + 120);
      v77 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 112) = v75;
      *(_QWORD *)(a1 + 120) = v76;
      *(_QWORD *)(a1 + 128) = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = *(_QWORD *)(a2 + 168);
      if (v19)
        goto LABEL_7;
    }
    v78 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v78;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    goto LABEL_23;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (int *)type metadata accessor for RawOrderReturn();
  v7 = v6[8];
  __dst = (void *)(a1 + v7);
  v8 = (const void *)(a2 + v7);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  v32 = v6[9];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v11((const void *)(a2 + v32), 1, v9))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v33, v34, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v33, 0, 1, v9);
  }
  v36 = v6[10];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v11((const void *)(a2 + v36), 1, v9))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v37, v38, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
  }
  v40 = v6[11];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v6[12];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = v6[13];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = v6[14];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = v6[15];
  v162 = (void *)(a1 + v56);
  __dsta = v6;
  v57 = (const void *)(a2 + v56);
  v58 = sub_23361D340();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v57, 1, v58))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v162, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(v162, v57, v58);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v162, 0, 1, v58);
  }
  v62 = __dsta[16];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  swift_bridgeObjectRetain();
LABEL_53:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int *v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const void *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(const void *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  void *v103;
  const void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  void *v117;
  const void *v118;
  uint64_t v119;
  uint64_t v121;
  unsigned int (*v122)(const void *, uint64_t, uint64_t);
  void *v123;
  int *v124;
  void *v125;
  void *__dst;
  int *__dsta;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v4 = (int *)type metadata accessor for RawOrderReturn();
      v5 = v4[8];
      __dst = (void *)(a1 + v5);
      v6 = (const void *)(a2 + v5);
      v7 = sub_23361D634();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      v23 = v4[9];
      v24 = (void *)(a1 + v23);
      v25 = (const void *)(a2 + v23);
      if (v9((const void *)(a2 + v23), 1, v7))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v24, v25, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v24, 0, 1, v7);
      }
      v27 = v4[10];
      v28 = (void *)(a1 + v27);
      v29 = (const void *)(a2 + v27);
      if (v9((const void *)(a2 + v27), 1, v7))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v28, v29, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
      }
      v31 = v4[11];
      v32 = (_QWORD *)(a1 + v31);
      v33 = (_QWORD *)(a2 + v31);
      *v32 = *v33;
      v32[1] = v33[1];
      v34 = v4[12];
      v35 = (_QWORD *)(a1 + v34);
      v36 = (_QWORD *)(a2 + v34);
      *v35 = *v36;
      v35[1] = v36[1];
      v37 = v4[13];
      v38 = (_QWORD *)(a1 + v37);
      v39 = (_QWORD *)(a2 + v37);
      *v38 = *v39;
      v38[1] = v39[1];
      v40 = v4[14];
      v41 = (_QWORD *)(a1 + v40);
      v42 = (_QWORD *)(a2 + v40);
      *v41 = *v42;
      v41[1] = v42[1];
      v43 = v4[15];
      v125 = (void *)(a1 + v43);
      __dsta = v4;
      v44 = (const void *)(a2 + v43);
      v45 = sub_23361D340();
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v47(v44, 1, v45))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v125, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v125, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v125, 0, 1, v45);
      }
      v49 = __dsta[16];
      v50 = (_QWORD *)(a1 + v49);
      v51 = (_QWORD *)(a2 + v49);
      *v50 = *v51;
      v50[1] = v51[1];
      swift_bridgeObjectRetain();
      goto LABEL_54;
    }
    type metadata accessor for RawOrderFulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v18 = type metadata accessor for RawOrderShippingFulfillment();
      v19 = *(int *)(v18 + 44);
      v123 = (void *)(a1 + v19);
      v124 = (int *)v18;
      v20 = (const void *)(a2 + v19);
      v21 = sub_23361D340();
      v121 = *(_QWORD *)(v21 - 8);
      v122 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v122(v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v123, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v121 + 16))(v123, v20, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v123, 0, 1, v21);
      }
      v65 = v124[12];
      v66 = a1 + v65;
      v67 = a2 + v65;
      if (*(_QWORD *)(a2 + v65 + 8) == 1)
      {
        v68 = *(_OWORD *)(v67 + 16);
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *(_OWORD *)(v66 + 16) = v68;
        v69 = *(_OWORD *)(v67 + 32);
        v70 = *(_OWORD *)(v67 + 48);
        v71 = *(_OWORD *)(v67 + 80);
        *(_OWORD *)(v66 + 64) = *(_OWORD *)(v67 + 64);
        *(_OWORD *)(v66 + 80) = v71;
        *(_OWORD *)(v66 + 32) = v69;
        *(_OWORD *)(v66 + 48) = v70;
        v72 = *(_OWORD *)(v67 + 96);
        v73 = *(_OWORD *)(v67 + 112);
        v74 = *(_OWORD *)(v67 + 128);
        *(_QWORD *)(v66 + 144) = *(_QWORD *)(v67 + 144);
        *(_OWORD *)(v66 + 112) = v73;
        *(_OWORD *)(v66 + 128) = v74;
        *(_OWORD *)(v66 + 96) = v72;
      }
      else
      {
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
        *(_QWORD *)(v66 + 16) = *(_QWORD *)(v67 + 16);
        *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
        *(_QWORD *)(v66 + 32) = *(_QWORD *)(v67 + 32);
        *(_QWORD *)(v66 + 40) = *(_QWORD *)(v67 + 40);
        v75 = *(_QWORD *)(v67 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v75 == 1)
        {
          v76 = *(_OWORD *)(v67 + 48);
          v77 = *(_OWORD *)(v67 + 80);
          *(_OWORD *)(v66 + 64) = *(_OWORD *)(v67 + 64);
          *(_OWORD *)(v66 + 80) = v77;
          *(_OWORD *)(v66 + 48) = v76;
          v78 = *(_OWORD *)(v67 + 96);
          v79 = *(_OWORD *)(v67 + 112);
          v80 = *(_OWORD *)(v67 + 128);
          *(_QWORD *)(v66 + 144) = *(_QWORD *)(v67 + 144);
          *(_OWORD *)(v66 + 112) = v79;
          *(_OWORD *)(v66 + 128) = v80;
          *(_OWORD *)(v66 + 96) = v78;
        }
        else
        {
          *(_QWORD *)(v66 + 48) = v75;
          *(_QWORD *)(v66 + 56) = *(_QWORD *)(v67 + 56);
          *(_QWORD *)(v66 + 64) = *(_QWORD *)(v67 + 64);
          *(_QWORD *)(v66 + 72) = *(_QWORD *)(v67 + 72);
          *(_QWORD *)(v66 + 80) = *(_QWORD *)(v67 + 80);
          *(_QWORD *)(v66 + 88) = *(_QWORD *)(v67 + 88);
          *(_QWORD *)(v66 + 96) = *(_QWORD *)(v67 + 96);
          *(_QWORD *)(v66 + 104) = *(_QWORD *)(v67 + 104);
          *(_QWORD *)(v66 + 112) = *(_QWORD *)(v67 + 112);
          *(_QWORD *)(v66 + 120) = *(_QWORD *)(v67 + 120);
          *(_QWORD *)(v66 + 128) = *(_QWORD *)(v67 + 128);
          *(_QWORD *)(v66 + 136) = *(_QWORD *)(v67 + 136);
          *(_QWORD *)(v66 + 144) = *(_QWORD *)(v67 + 144);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      v95 = v124[13];
      v96 = (void *)(a1 + v95);
      v97 = (const void *)(a2 + v95);
      v98 = sub_23361D634();
      v99 = *(_QWORD *)(v98 - 8);
      v100 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48);
      if (v100(v97, 1, v98))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v96, v97, v98);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      v102 = v124[14];
      v103 = (void *)(a1 + v102);
      v104 = (const void *)(a2 + v102);
      v105 = type metadata accessor for Duration();
      v106 = *(_QWORD *)(v105 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        v108 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v103, v104, v108);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
      }
      v109 = v124[15];
      v110 = (void *)(a1 + v109);
      v111 = (const void *)(a2 + v109);
      if (v100((const void *)(a2 + v109), 1, v98))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v110, v111, v98);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v110, 0, 1, v98);
      }
      v113 = v124[16];
      v114 = (_QWORD *)(a1 + v113);
      v115 = (_QWORD *)(a2 + v113);
      *v114 = *v115;
      v114[1] = v115[1];
      v116 = v124[17];
      v117 = (void *)(a1 + v116);
      v118 = (const void *)(a2 + v116);
      swift_bridgeObjectRetain();
      if (v100(v118, 1, v98))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v117, v118, v98);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v117, 0, 1, v98);
      }
      *(_BYTE *)(a1 + v124[18]) = *(_BYTE *)(a2 + v124[18]);
      goto LABEL_53;
    }
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      v13 = *(_OWORD *)(a2 + 32);
      v14 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v14;
      *(_OWORD *)(a1 + 32) = v13;
      v15 = *(_OWORD *)(a2 + 80);
      v16 = *(_OWORD *)(a2 + 96);
      v17 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v16;
      *(_OWORD *)(a1 + 112) = v17;
      *(_OWORD *)(a1 + 80) = v15;
      if (*(_QWORD *)(a2 + 168))
      {
LABEL_8:
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_24:
        v55 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        *(_OWORD *)(a1 + 192) = v55;
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        v56 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v57 = v56[12];
        v58 = (void *)(a1 + v57);
        v59 = (const void *)(a2 + v57);
        v60 = sub_23361D634();
        v61 = *(_QWORD *)(v60 - 8);
        v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        v63 = v62;
        swift_bridgeObjectRetain();
        if (v62((uint64_t)v59, 1, v60))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v81 = v56[13];
        v82 = (void *)(a1 + v81);
        v83 = (const void *)(a2 + v81);
        v84 = type metadata accessor for Duration();
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
        {
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v87 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v82, v83, v87);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        v88 = v56[14];
        v89 = (void *)(a1 + v88);
        v90 = (const void *)(a2 + v88);
        if (v63(a2 + v88, 1, v60))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(v89, v90, v60);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v89, 0, 1, v60);
        }
        v92 = v56[15];
        v93 = (_QWORD *)(a1 + v92);
        v94 = (_QWORD *)(a2 + v92);
        *v93 = *v94;
        v93[1] = v94[1];
        swift_bridgeObjectRetain();
LABEL_53:
        swift_storeEnumTagMultiPayload();
LABEL_54:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*(_QWORD *)(a2 + 168))
        goto LABEL_8;
    }
    v52 = *(_OWORD *)(a2 + 136);
    v53 = *(_OWORD *)(a2 + 152);
    v54 = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v53;
    *(_OWORD *)(a1 + 168) = v54;
    *(_OWORD *)(a1 + 136) = v52;
    goto LABEL_24;
  }
  return a1;
}

uint64_t initializeWithTake for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  int *v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(const void *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  uint64_t v87;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v4;
    v5 = (int *)type metadata accessor for RawOrderReturn();
    v6 = v5[8];
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23361D634();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v34 = v5[9];
    v35 = (void *)(a1 + v34);
    v36 = (const void *)(a2 + v34);
    if (v11((const void *)(a2 + v34), 1, v9))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    v38 = v5[10];
    v39 = (void *)(a1 + v38);
    v40 = (const void *)(a2 + v38);
    if (v11((const void *)(a2 + v38), 1, v9))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v39, v40, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
    *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
    *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
    *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
    v42 = v5[15];
    v43 = (void *)(a1 + v42);
    v44 = (const void *)(a2 + v42);
    v45 = sub_23361D340();
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  }
  else
  {
    type metadata accessor for RawOrderFulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v14 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v14;
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v15 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v15;
      v16 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
      v17 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v17;
      v18 = (int *)type metadata accessor for RawOrderPickupFulfillment();
      v19 = v18[12];
      v20 = (void *)(a1 + v19);
      v21 = (const void *)(a2 + v19);
      v22 = sub_23361D634();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v21, 1, v22))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v48 = v18[13];
      v49 = (void *)(a1 + v48);
      v50 = (const void *)(a2 + v48);
      v51 = type metadata accessor for Duration();
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v68 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v69 = v18[14];
      v70 = (void *)(a1 + v69);
      v71 = (const void *)(a2 + v69);
      if (v24((const void *)(a2 + v69), 1, v22))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v70, v71, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v70, 0, 1, v22);
      }
      *(_OWORD *)(a1 + v18[15]) = *(_OWORD *)(a2 + v18[15]);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v26 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v26;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      v27 = (int *)type metadata accessor for RawOrderShippingFulfillment();
      v28 = v27[11];
      v29 = (void *)(a1 + v28);
      v30 = (const void *)(a2 + v28);
      v31 = sub_23361D340();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v54 = v27[12];
      v55 = a1 + v54;
      v56 = a2 + v54;
      v57 = *(_OWORD *)(v56 + 112);
      *(_OWORD *)(v55 + 96) = *(_OWORD *)(v56 + 96);
      *(_OWORD *)(v55 + 112) = v57;
      *(_OWORD *)(v55 + 128) = *(_OWORD *)(v56 + 128);
      *(_QWORD *)(v55 + 144) = *(_QWORD *)(v56 + 144);
      v58 = *(_OWORD *)(v56 + 48);
      *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
      *(_OWORD *)(v55 + 48) = v58;
      v59 = *(_OWORD *)(v56 + 80);
      *(_OWORD *)(v55 + 64) = *(_OWORD *)(v56 + 64);
      *(_OWORD *)(v55 + 80) = v59;
      v60 = *(_OWORD *)(v56 + 16);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *(_OWORD *)(v55 + 16) = v60;
      v61 = v27[13];
      v62 = (void *)(a1 + v61);
      v63 = (const void *)(a2 + v61);
      v64 = sub_23361D634();
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48);
      if (v66(v63, 1, v64))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v73 = v27[14];
      v74 = (void *)(a1 + v73);
      v75 = (const void *)(a2 + v73);
      v76 = type metadata accessor for Duration();
      v77 = *(_QWORD *)(v76 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v79 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v74, v75, v79);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      v80 = v27[15];
      v81 = (void *)(a1 + v80);
      v82 = (const void *)(a2 + v80);
      if (v66((const void *)(a2 + v80), 1, v64))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v81, v82, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v81, 0, 1, v64);
      }
      *(_OWORD *)(a1 + v27[16]) = *(_OWORD *)(a2 + v27[16]);
      v84 = v27[17];
      v85 = (void *)(a1 + v84);
      v86 = (const void *)(a2 + v84);
      if (v66((const void *)(a2 + v84), 1, v64))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v85, v86, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v85, 0, 1, v64);
      }
      *(_BYTE *)(a1 + v27[18]) = *(_BYTE *)(a2 + v27[18]);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for RawECommerceOrderContent.ContentItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  int *v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(const void *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  uint64_t v87;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for RawECommerceOrderContent.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v4 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v4;
      v5 = (int *)type metadata accessor for RawOrderReturn();
      v6 = v5[8];
      v7 = (void *)(a1 + v6);
      v8 = (const void *)(a2 + v6);
      v9 = sub_23361D634();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v34 = v5[9];
      v35 = (void *)(a1 + v34);
      v36 = (const void *)(a2 + v34);
      if (v11((const void *)(a2 + v34), 1, v9))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v35, v36, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      }
      v38 = v5[10];
      v39 = (void *)(a1 + v38);
      v40 = (const void *)(a2 + v38);
      if (v11((const void *)(a2 + v38), 1, v9))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v39, v40, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
      }
      *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
      *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
      *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
      *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
      v42 = v5[15];
      v43 = (void *)(a1 + v42);
      v44 = (const void *)(a2 + v42);
      v45 = sub_23361D340();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
    }
    else
    {
      type metadata accessor for RawOrderFulfillment();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v14 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v14;
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        v15 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v15;
        v16 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v16;
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        v17 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 240) = v17;
        v18 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v19 = v18[12];
        v20 = (void *)(a1 + v19);
        v21 = (const void *)(a2 + v19);
        v22 = sub_23361D634();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
        if (v24(v21, 1, v22))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v48 = v18[13];
        v49 = (void *)(a1 + v48);
        v50 = (const void *)(a2 + v48);
        v51 = type metadata accessor for Duration();
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v68 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        v69 = v18[14];
        v70 = (void *)(a1 + v69);
        v71 = (const void *)(a2 + v69);
        if (v24((const void *)(a2 + v69), 1, v22))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v70, v71, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v70, 0, 1, v22);
        }
        *(_OWORD *)(a1 + v18[15]) = *(_OWORD *)(a2 + v18[15]);
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v26 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v26;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        v27 = (int *)type metadata accessor for RawOrderShippingFulfillment();
        v28 = v27[11];
        v29 = (void *)(a1 + v28);
        v30 = (const void *)(a2 + v28);
        v31 = sub_23361D340();
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        v54 = v27[12];
        v55 = a1 + v54;
        v56 = a2 + v54;
        v57 = *(_OWORD *)(v56 + 112);
        *(_OWORD *)(v55 + 96) = *(_OWORD *)(v56 + 96);
        *(_OWORD *)(v55 + 112) = v57;
        *(_OWORD *)(v55 + 128) = *(_OWORD *)(v56 + 128);
        *(_QWORD *)(v55 + 144) = *(_QWORD *)(v56 + 144);
        v58 = *(_OWORD *)(v56 + 48);
        *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
        *(_OWORD *)(v55 + 48) = v58;
        v59 = *(_OWORD *)(v56 + 80);
        *(_OWORD *)(v55 + 64) = *(_OWORD *)(v56 + 64);
        *(_OWORD *)(v55 + 80) = v59;
        v60 = *(_OWORD *)(v56 + 16);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *(_OWORD *)(v55 + 16) = v60;
        v61 = v27[13];
        v62 = (void *)(a1 + v61);
        v63 = (const void *)(a2 + v61);
        v64 = sub_23361D634();
        v65 = *(_QWORD *)(v64 - 8);
        v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48);
        if (v66(v63, 1, v64))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v62, v63, v64);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        }
        v73 = v27[14];
        v74 = (void *)(a1 + v73);
        v75 = (const void *)(a2 + v73);
        v76 = type metadata accessor for Duration();
        v77 = *(_QWORD *)(v76 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          v79 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v74, v75, v79);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        v80 = v27[15];
        v81 = (void *)(a1 + v80);
        v82 = (const void *)(a2 + v80);
        if (v66((const void *)(a2 + v80), 1, v64))
        {
          v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v81, v82, v64);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v81, 0, 1, v64);
        }
        *(_OWORD *)(a1 + v27[16]) = *(_OWORD *)(a2 + v27[16]);
        v84 = v27[17];
        v85 = (void *)(a1 + v84);
        v86 = (const void *)(a2 + v84);
        if (v66((const void *)(a2 + v84), 1, v64))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v85, v86, v64);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v85, 0, 1, v64);
        }
        *(_BYTE *)(a1 + v27[18]) = *(_BYTE *)(a2 + v27[18]);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2334DA37C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for RawOrderFulfillment();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RawOrderReturn();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawECommerceOrderContent.DecodingConfiguration()
{
  return &type metadata for RawECommerceOrderContent.DecodingConfiguration;
}

uint64_t storeEnumTagSinglePayload for RawOrderChangeNotificationsValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334DA458 + 4 * byte_233652872[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334DA48C + 4 * byte_23365286D[v4]))();
}

uint64_t sub_2334DA48C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DA494(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334DA49CLL);
  return result;
}

uint64_t sub_2334DA4A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334DA4B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334DA4B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DA4BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderChangeNotificationsValue()
{
  return &type metadata for RawOrderChangeNotificationsValue;
}

uint64_t storeEnumTagSinglePayload for RawECommerceOrderContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_2334DA524 + 4 * byte_23365287C[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_2334DA558 + 4 * byte_233652877[v4]))();
}

uint64_t sub_2334DA558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DA560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334DA568);
  return result;
}

uint64_t sub_2334DA574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334DA57CLL);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_2334DA580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DA588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawECommerceOrderContent.CodingKeys()
{
  return &type metadata for RawECommerceOrderContent.CodingKeys;
}

unint64_t sub_2334DA5A8()
{
  unint64_t result;

  result = qword_256052A78;
  if (!qword_256052A78)
  {
    result = MEMORY[0x234934494](&unk_233652F10, &type metadata for RawECommerceOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052A78);
  }
  return result;
}

unint64_t sub_2334DA5F0()
{
  unint64_t result;

  result = qword_256052A80;
  if (!qword_256052A80)
  {
    result = MEMORY[0x234934494](&unk_233652E48, &type metadata for RawECommerceOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052A80);
  }
  return result;
}

unint64_t sub_2334DA638()
{
  unint64_t result;

  result = qword_256052A88;
  if (!qword_256052A88)
  {
    result = MEMORY[0x234934494](&unk_233652E70, &type metadata for RawECommerceOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052A88);
  }
  return result;
}

unint64_t sub_2334DA67C()
{
  unint64_t result;

  result = qword_256052A90;
  if (!qword_256052A90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderChangeNotificationsValue, &type metadata for RawOrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_256052A90);
  }
  return result;
}

unint64_t sub_2334DA6C0()
{
  unint64_t result;

  result = qword_256052A98;
  if (!qword_256052A98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderStatus, &type metadata for RawOrderStatus);
    atomic_store(result, (unint64_t *)&qword_256052A98);
  }
  return result;
}

unint64_t sub_2334DA704()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256052AA8;
  if (!qword_256052AA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256052950);
    v2 = sub_233167C58(&qword_256052AB0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderFulfillment, (uint64_t)&protocol conformance descriptor for RawOrderFulfillment);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFBE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256052AA8);
  }
  return result;
}

unint64_t sub_2334DA780()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256052AB8;
  if (!qword_256052AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256052938);
    v2 = sub_233167C58(&qword_256052AC0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderReturn, (uint64_t)&protocol conformance descriptor for RawOrderReturn);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFBE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256052AB8);
  }
  return result;
}

uint64_t sub_2334DA7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2334D0004(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2334DA814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2334DA7FC(a1, a2);
}

void DisplayableStringConvertibleTransaction.displayTransactionDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (*(uint64_t (**)(void))(a2 + 8))();
  if (!v5)
    goto LABEL_6;
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    v8 = v7(a1, a2);
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v8 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      v7(a1, a2);
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 24))(&v12, a1, a2);
      TransactionType.localizedDescription.getter();
    }
  }
}

uint64_t dispatch thunk of DisplayableStringConvertibleTransaction.merchantName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DisplayableStringConvertibleTransaction.transactionDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DisplayableStringConvertibleTransaction.transactionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id ManagedLabRequest.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedLabRequest.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedLabRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedLabRequest.__allocating_init(success:date:context:)(char a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  int v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  if ((a1 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v14(v11, 0, 1, v12);
    v14(v9, 1, 1, v12);
    v15 = 0;
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v15 = 1;
    v16(v11, 1, 1, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a2, v12);
    v16(v9, 0, 1, v12);
  }
  v17 = sub_2334DAEB4((uint64_t)v11, (uint64_t)v9, v15, (uint64_t)a3);

  sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v17;
}

id ManagedLabRequest.__allocating_init(lastSuccessDate:lastFailureDate:failedAttemptCount:context:)(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v5;

  v5 = sub_2334DAEB4(a1, a2, a3, (uint64_t)a4);

  return v5;
}

void static ManagedLabRequest.insertOrUpdate(for:success:date:context:)(void *a1, char a2, uint64_t a3, void *a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  int v23;
  unsigned int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  id v26;
  id v27;
  id v28;
  id v29;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v28 - v13;
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, sel_labRequestObject);
  if (v19)
  {
    v29 = v19;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v19, sel_setFailedAttemptCount_, 0);
      v20 = (void *)sub_23361D5B0();
      objc_msgSend(v29, sel_setLastSuccessDate_, v20);
LABEL_8:

      return;
    }
    v24 = objc_msgSend(v19, sel_failedAttemptCount);
    if ((__int16)(v24 + 1) == v24 + 1)
    {
      objc_msgSend(v29, sel_setFailedAttemptCount_);
      v20 = (void *)sub_23361D5B0();
      objc_msgSend(v29, sel_setLastFailureDate_, v20);
      goto LABEL_8;
    }
    __break(1u);
  }
  else
  {
    v28 = a4;
    v29 = v4;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v21(v18, a3, v15);
    if ((a2 & 1) != 0)
    {
      v21(v14, (uint64_t)v18, v15);
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v22(v14, 0, 1, v15);
      v22(v12, 1, 1, v15);
      v23 = 0;
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v23 = 1;
      v25(v14, 1, 1, v15);
      v21(v12, (uint64_t)v18, v15);
      v25(v12, 0, 1, v15);
    }
    v26 = v28;
    v27 = sub_2334DAEB4((uint64_t)v14, (uint64_t)v12, v23, (uint64_t)v26);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    objc_msgSend(a1, sel_setLabRequestObject_, v27);

  }
}

id static ManagedLabRequest.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit17ManagedLabRequest;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id sub_2334DAEB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  int v19;
  id v20;
  void *v21;
  void *v22;
  _BYTE v24[12];
  int v25;

  v5 = v4;
  v25 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v24[-v13];
  v15 = objc_msgSend(objc_allocWithZone(v5), sel_initWithContext_, a4);
  sub_23319F164(a1, (uint64_t)v14);
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v15;
  v21 = 0;
  if (v19 != 1)
  {
    v21 = (void *)sub_23361D5B0();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v14, v16);
  }
  objc_msgSend(v20, sel_setLastSuccessDate_, v21);

  sub_23319F164(a2, (uint64_t)v12);
  if (v18(v12, 1, v16) == 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = (void *)sub_23361D5B0();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v12, v16);
  }
  objc_msgSend(v20, sel_setLastFailureDate_, v22);

  objc_msgSend(v20, sel_setFailedAttemptCount_, (__int16)v25);
  sub_2331D0F20(a2);
  sub_2331D0F20(a1);
  return v20;
}

char *keypath_get_selector_lastSuccessDate()
{
  return sel_lastSuccessDate;
}

uint64_t sub_2334DB08C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastSuccessDate, a2);
}

void sub_2334DB0A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastSuccessDate_);
}

char *keypath_get_selector_lastFailureDate()
{
  return sel_lastFailureDate;
}

uint64_t sub_2334DB0D0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastFailureDate, a2);
}

void sub_2334DB0EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastFailureDate_);
}

char *keypath_get_selector_failedAttemptCount()
{
  return sel_failedAttemptCount;
}

id sub_2334DB114@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_failedAttemptCount);
  *a2 = (_WORD)result;
  return result;
}

id sub_2334DB144(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFailedAttemptCount_, *a1);
}

uint64_t type metadata accessor for ManagedLabRequest()
{
  return objc_opt_self();
}

uint64_t RawOrderApplication.init(storeIdentifier:launchURL:customProductPageIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;

  v10 = type metadata accessor for RawOrderApplication();
  v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  v12 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)((char *)a5 + *(int *)(v10 + 24));
  *v13 = 0;
  v13[1] = 0;
  *a5 = a1;
  sub_2331AAFB8(a2, v11);
  result = swift_bridgeObjectRelease();
  *v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t type metadata accessor for RawOrderApplication()
{
  uint64_t result;

  result = qword_256052B58;
  if (!qword_256052B58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawOrderApplication.storeIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RawOrderApplication.storeIdentifier.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*RawOrderApplication.storeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderApplication.launchURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawOrderApplication() + 20);
  return sub_233199624(v3, a1);
}

uint64_t RawOrderApplication.launchURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawOrderApplication() + 20);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawOrderApplication.launchURL.modify())(_QWORD)
{
  type metadata accessor for RawOrderApplication();
  return nullsub_1;
}

uint64_t RawOrderApplication.customProductPageIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawOrderApplication() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderApplication.customProductPageIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawOrderApplication() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderApplication.customProductPageIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawOrderApplication();
  return nullsub_1;
}

uint64_t sub_2334DB3AC()
{
  sub_2334DBB98();
  return sub_23361F428();
}

uint64_t sub_2334DB3D4()
{
  sub_2334DBB98();
  return sub_23361F434();
}

uint64_t RawOrderApplication.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334DBB98();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F194();
  if (!v1)
  {
    type metadata accessor for RawOrderApplication();
    v8[14] = 1;
    sub_23361D340();
    sub_2333A3430((unint64_t *)&unk_256042310, MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    v8[13] = 2;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderApplication.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  char v33;
  char v34;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AF8);
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderApplication();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  v12 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t *)((char *)v10 + *(int *)(v7 + 24));
  *v13 = 0;
  v13[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334DBB98();
  v29 = v6;
  v14 = (uint64_t)v31;
  sub_23361F3EC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_233168608(v11, &qword_254248700);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v13;
    v31 = a1;
    v16 = v27;
    v15 = (uint64_t)v28;
    v34 = 0;
    v17 = v29;
    v18 = v30;
    *v10 = sub_23361F080();
    v33 = 1;
    sub_2333A3430(&qword_256042340, MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_2331AAFB8(v15, v11);
    v32 = 2;
    v19 = sub_23361EFCC();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    v22 = v25;
    swift_bridgeObjectRelease();
    *v22 = v19;
    v22[1] = v21;
    sub_2334DBBDC((uint64_t)v10, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    return sub_23330DABC((uint64_t)v10);
  }
}

uint64_t sub_2334DB824@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderApplication.init(from:)(a1, a2);
}

uint64_t sub_2334DB838(_QWORD *a1)
{
  return RawOrderApplication.encode(to:)(a1);
}

uint64_t _s10FinanceKit19RawOrderApplicationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (*a1 != *a2)
    return 0;
  v20 = type metadata accessor for RawOrderApplication();
  v21 = a1;
  v22 = v20;
  v23 = *(int *)(v20 + 20);
  v35 = v21;
  sub_233199624((uint64_t)v21 + v23, (uint64_t)v19);
  v36 = v22;
  v37 = a2;
  sub_233199624((uint64_t)a2 + *(int *)(v22 + 20), (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_233199624((uint64_t)v19, (uint64_t)v10);
  sub_233199624((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_233199624((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
      v26 = sub_23361E108();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      sub_233168608((uint64_t)v17, &qword_254248700);
      sub_233168608((uint64_t)v19, &qword_254248700);
      v27(v14, v4);
      sub_233168608((uint64_t)v10, &qword_254248700);
      if ((v26 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_233168608((uint64_t)v17, &qword_254248700);
    sub_233168608((uint64_t)v19, &qword_254248700);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_233168608((uint64_t)v10, &qword_256045948);
    return 0;
  }
  sub_233168608((uint64_t)v17, &qword_254248700);
  sub_233168608((uint64_t)v19, &qword_254248700);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_7;
  sub_233168608((uint64_t)v10, &qword_254248700);
LABEL_9:
  v28 = *(int *)(v36 + 24);
  v29 = (_QWORD *)((char *)v35 + v28);
  v30 = *(_QWORD *)((char *)v35 + v28 + 8);
  v31 = (_QWORD *)((char *)v37 + v28);
  v32 = v31[1];
  if (v30)
  {
    if (v32 && (*v29 == *v31 && v30 == v32 || (sub_23361F224() & 1) != 0))
      return 1;
  }
  else if (!v32)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_2334DBB98()
{
  unint64_t result;

  result = qword_256052AF0;
  if (!qword_256052AF0)
  {
    result = MEMORY[0x234934494](&unk_2336531B4, &type metadata for RawOrderApplication.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052AF0);
  }
  return result;
}

uint64_t sub_2334DBBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawOrderApplication();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for RawOrderApplication()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334DBC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderApplication()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334DBCCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_2334DBD50()
{
  unint64_t v0;

  sub_233233038();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for RawOrderApplication.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2334DBE1C + 4 * byte_233653025[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2334DBE50 + 4 * byte_233653020[v4]))();
}

uint64_t sub_2334DBE50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DBE58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334DBE60);
  return result;
}

uint64_t sub_2334DBE6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334DBE74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334DBE78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DBE80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderApplication.CodingKeys()
{
  return &type metadata for RawOrderApplication.CodingKeys;
}

unint64_t sub_2334DBEA0()
{
  unint64_t result;

  result = qword_256052B98;
  if (!qword_256052B98)
  {
    result = MEMORY[0x234934494](&unk_23365318C, &type metadata for RawOrderApplication.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052B98);
  }
  return result;
}

unint64_t sub_2334DBEE8()
{
  unint64_t result;

  result = qword_256052BA0;
  if (!qword_256052BA0)
  {
    result = MEMORY[0x234934494](&unk_2336530FC, &type metadata for RawOrderApplication.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052BA0);
  }
  return result;
}

unint64_t sub_2334DBF30()
{
  unint64_t result;

  result = qword_256052BA8;
  if (!qword_256052BA8)
  {
    result = MEMORY[0x234934494](&unk_233653124, &type metadata for RawOrderApplication.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052BA8);
  }
  return result;
}

FinanceKit::BankConnectWebServiceTermsAndConditionsRequest __swiftcall BankConnectWebServiceTermsAndConditionsRequest.init(ids:languageIds:)(Swift::OpaquePointer ids, Swift::OpaquePointer languageIds)
{
  Swift::OpaquePointer *v2;
  FinanceKit::BankConnectWebServiceTermsAndConditionsRequest result;

  v2->_rawValue = ids._rawValue;
  v2[1]._rawValue = languageIds._rawValue;
  result.languageIds = languageIds;
  result.ids = ids;
  return result;
}

void *BankConnectWebServiceTermsAndConditionsRequest.pathComponents.getter()
{
  return &unk_250467DB8;
}

void BankConnectWebServiceTermsAndConditionsRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t BankConnectWebServiceTermsAndConditionsRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServiceTermsAndConditionsRequest.makeJSONEncoder()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23361CAC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_23361CADC();
  return v4;
}

uint64_t sub_2334DC090@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_2334DC0B8()
{
  return &unk_250467DB8;
}

void static BankConnectWebServiceTermsAndConditionsResponse.parse(data:urlResponse:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = sub_23361CA40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v22 = v3;
    v11 = a3;
    v12 = objc_msgSend(v10, sel_statusCode);
    if (v12 == (id)200)
    {
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      if (qword_256041BF0 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v5, (uint64_t)qword_2560458E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      sub_23361CA4C();
      sub_2334DC374();
      v14 = v22;
      sub_23361CA58();
      if (v14)
      {
        swift_release();
        type metadata accessor for FinanceNetworkError();
        sub_2332F3EFC();
        swift_allocError();
        *v15 = v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      v19 = v12;
      type metadata accessor for FinanceNetworkError();
      sub_2332F3EFC();
      swift_allocError();
      *v20 = v19;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    v17 = v16;
    *v16 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v17[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v17[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v18 = a3;
    swift_willThrow();
  }
}

unint64_t sub_2334DC374()
{
  unint64_t result;

  result = qword_256052BB0;
  if (!qword_256052BB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.TermsAndConditionsResponse, &type metadata for RawBankConnectData.TermsAndConditionsResponse);
    atomic_store(result, (unint64_t *)&qword_256052BB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceTermsAndConditionsRequest()
{
  return &type metadata for BankConnectWebServiceTermsAndConditionsRequest;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceTermsAndConditionsResponse()
{
  return &type metadata for BankConnectWebServiceTermsAndConditionsResponse;
}

_QWORD *sub_2334DC3DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = v2[3];
    v6 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_2334A4AA4(0, v3[2] + 1, 1, v3);
      v12 = v3[2];
      v11 = v3[3];
      if (v12 >= v11 >> 1)
        v3 = sub_2334A4AA4((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
      v3[2] = v12 + 1;
      v4 = &v3[2 * v12];
      v4[4] = v9;
      v4[5] = v10;
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *sub_2334DC4F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = v2[3];
    v6 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_2334A4AA4(0, v3[2] + 1, 1, v3);
      v12 = v3[2];
      v11 = v3[3];
      if (v12 >= v11 >> 1)
        v3 = sub_2334A4AA4((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
      v3[2] = v12 + 1;
      v4 = &v3[2 * v12];
      v4[4] = v9;
      v4[5] = v10;
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t SoftwareApplication.init(storeIdentifier:softwareLibrary:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_23318B020(a2, (uint64_t)(a3 + 1));
}

uint64_t SoftwareApplication.isInstalled()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_2334DC63C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v1 = v0[17];
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 8), v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233625CF0;
  v5 = *(void **)v1;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)v1;
  v10 = v4;
  sub_23361E408();
  v0[18] = v10;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v6 = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[19] = v7;
  *v7 = v0;
  v7[1] = sub_2334DC718;
  return v9(v10, v2, v3);
}

uint64_t sub_2334DC718(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2334DC78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 160);
  if (!*(_QWORD *)(v1 + 16))
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_233177068(v1 + 32, v0 + 56);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_7:
    sub_233168608(v0 + 56, &qword_256051E70);
    LOBYTE(v5) = 0;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5 & 1);
  }
  sub_23318B020((__int128 *)(v0 + 56), v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  sub_233177068(v0 + 16, v0 + 96);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v6);
    LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7) ^ 1;
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5 & 1);
}

uint64_t sub_2334DC8B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t SoftwareLibrary.applicationsFor(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  uint64_t v10;

  v6 = ManagedECommerceOrderContent.associatedApplications.getter();
  v9[2] = a2;
  v9[3] = a3;
  v10 = v3;
  v7 = sub_2334A24EC((void (*)(_OWORD *__return_ptr, id *))sub_2334DC95C, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2334DC95C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return SoftwareLibrary.application(forStoreIdentifier:)((uint64_t)objc_msgSend(*a1, sel_storeIdentifier), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t SoftwareLibrary.application(forStoreIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  id v8;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, a1);
  a4[4] = a2;
  a4[5] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4 + 1);
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, v4, a2);
  *a4 = v8;
  return result;
}

uint64_t SoftwareLibrary.bundleIdentifiersFor(storeIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return swift_task_switch();
}

uint64_t sub_2334DCA50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD, _QWORD);
  uint64_t v9;

  v1 = v0[12];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v4 = (uint64_t *)(v1 + 32);
    do
    {
      v5 = *v4++;
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v5);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      --v2;
    }
    while (v2);
    v3 = v9;
  }
  v0[16] = v3;
  v8 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(v0[14] + 8) + *(_QWORD *)(v0[14] + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v0[17] = v6;
  *v6 = v0;
  v6[1] = sub_2334DCB5C;
  return v8(v3, v0[13], v0[14]);
}

uint64_t sub_2334DCB5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_2334DCBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = MEMORY[0x24BEE4AF8];
  v21 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (__int128 *)(v0 + 16);
    v19 = v1;
    v20 = v0 + 56;
    v6 = v1 + 32;
    v18 = *(_QWORD *)(v1 + 16);
    while (v4 < *(_QWORD *)(v1 + 16))
    {
      sub_233177068(v6, (uint64_t)v5);
      v7 = *(_QWORD *)(v0 + 40);
      v8 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1(v5, v7);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      }
      else
      {
        sub_23318B020(v5, v20);
        v9 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23327425C(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v21;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
          sub_23327425C(v10 > 1, v11 + 1, 1);
        v12 = *(_QWORD *)(v0 + 80);
        v13 = *(_QWORD *)(v0 + 88);
        v14 = __swift_mutable_project_boxed_opaque_existential_1(v20, v12);
        v15 = *(_QWORD *)(v12 - 8);
        v16 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v12);
        sub_2334DDC60(v11, v16, &v21, v12, v13);
        __swift_destroy_boxed_opaque_existential_0(v20);
        swift_task_dealloc();
        v3 = v18;
        v1 = v19;
        v5 = (__int128 *)(v0 + 16);
      }
      ++v4;
      v6 += 40;
      if (v3 == v4)
      {
        v2 = v21;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v17 = sub_2334DC3DC(v2);
    swift_release();
    (*(void (**)(_QWORD *))(v0 + 8))(v17);
  }
}

uint64_t sub_2334DCDAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SoftwareLibrary.storeIdentifiersFor(bundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 96) = v7;
  *v7 = v3;
  v7[1] = sub_2334DCE58;
  return v9(a1, a2, a3);
}

uint64_t sub_2334DCE58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

void sub_2334DCECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];

  v1 = *(_QWORD *)(v0 + 104);
  v2 = MEMORY[0x24BEE4AF8];
  v53[0] = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
  {
LABEL_13:
    v17 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    v18 = sub_2334DC4F8(v2);
    swift_release();
    v19 = v18[2];
    if (!v19)
    {
      swift_bridgeObjectRelease();
      v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_80:
      (*(void (**)(_QWORD *))(v0 + 8))(v22);
      return;
    }
    v52 = v0;
    v20 = v18 + 4;
    swift_bridgeObjectRetain();
    v21 = 0;
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v23 = &v20[2 * v21];
      v24 = *v23;
      v25 = v23[1];
      v26 = HIBYTE(v25) & 0xF;
      v27 = v24 & 0xFFFFFFFFFFFFLL;
      if ((v25 & 0x2000000000000000) != 0)
        v28 = HIBYTE(v25) & 0xF;
      else
        v28 = v24 & 0xFFFFFFFFFFFFLL;
      if (!v28)
        goto LABEL_16;
      if ((v25 & 0x1000000000000000) == 0)
        break;
      swift_bridgeObjectRetain();
      v32 = (uint64_t)sub_233490318(v24, v25, 10);
      v48 = v47;
      swift_bridgeObjectRelease();
      if ((v48 & 1) == 0)
        goto LABEL_63;
LABEL_16:
      if (++v21 == v19)
      {
        swift_bridgeObjectRelease_n();
        v0 = v52;
        goto LABEL_80;
      }
    }
    if ((v25 & 0x2000000000000000) == 0)
    {
      if ((v24 & 0x1000000000000000) != 0)
        v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v29 = (unsigned __int8 *)sub_23361EE34();
      v30 = sub_2334902F0(v29, v27, 10);
      if (v17)
        return;
      if ((v31 & 1) != 0)
        goto LABEL_16;
      v32 = (uint64_t)v30;
LABEL_63:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_2334A5EE8(0, v22[2] + 1, 1, v22);
      v43 = v22[2];
      v42 = v22[3];
      if (v43 >= v42 >> 1)
        v22 = sub_2334A5EE8((_QWORD *)(v42 > 1), v43 + 1, 1, v22);
      v22[2] = v43 + 1;
      v22[v43 + 4] = v32;
      goto LABEL_16;
    }
    v53[0] = v24;
    v53[1] = v25 & 0xFFFFFFFFFFFFFFLL;
    if (v24 == 43)
    {
      if (!v26)
        goto LABEL_84;
      if (v26 == 1)
        goto LABEL_77;
      if ((BYTE1(v24) - 48) > 9u)
        goto LABEL_49;
      v32 = (BYTE1(v24) - 48);
      if (v26 != 2)
      {
        if ((BYTE2(v24) - 48) > 9u)
          goto LABEL_49;
        v32 = 10 * (BYTE1(v24) - 48) + (BYTE2(v24) - 48);
        v33 = v26 - 3;
        if (v26 != 3)
        {
          v34 = (unsigned __int8 *)v53 + 3;
          while (1)
          {
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_16;
            v36 = 10 * v32;
            if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
              goto LABEL_16;
            v32 = v36 + v35;
            if (__OFADD__(v36, v35))
              goto LABEL_16;
            LOBYTE(v26) = 0;
            ++v34;
            if (!--v33)
              goto LABEL_62;
          }
        }
      }
    }
    else
    {
      if (v24 == 45)
      {
        if (!v26)
          goto LABEL_83;
        if (v26 != 1)
        {
          if ((BYTE1(v24) - 48) <= 9u)
          {
            if (v26 == 2)
            {
              LOBYTE(v26) = 0;
              v32 = -(uint64_t)(BYTE1(v24) - 48);
              goto LABEL_62;
            }
            if ((BYTE2(v24) - 48) <= 9u)
            {
              v32 = -10 * (BYTE1(v24) - 48) - (BYTE2(v24) - 48);
              v41 = v26 - 3;
              if (v26 != 3)
              {
                v44 = (unsigned __int8 *)v53 + 3;
                while (1)
                {
                  v45 = *v44 - 48;
                  if (v45 > 9)
                    goto LABEL_16;
                  v46 = 10 * v32;
                  if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
                    goto LABEL_16;
                  v32 = v46 - v45;
                  if (__OFSUB__(v46, v45))
                    goto LABEL_16;
                  LOBYTE(v26) = 0;
                  ++v44;
                  if (!--v41)
                    goto LABEL_62;
                }
              }
              goto LABEL_61;
            }
          }
LABEL_49:
          v32 = 0;
          LOBYTE(v26) = 1;
          goto LABEL_62;
        }
LABEL_77:
        v32 = 0;
LABEL_62:
        if ((v26 & 1) == 0)
          goto LABEL_63;
        goto LABEL_16;
      }
      if (!v26 || (v24 - 48) > 9u)
        goto LABEL_49;
      v32 = (v24 - 48);
      if (v26 != 1)
      {
        if ((BYTE1(v24) - 48) > 9u)
          goto LABEL_49;
        v32 = 10 * (v24 - 48) + (BYTE1(v24) - 48);
        v37 = v26 - 2;
        if (v26 != 2)
        {
          v38 = (unsigned __int8 *)v53 + 2;
          while (1)
          {
            v39 = *v38 - 48;
            if (v39 > 9)
              goto LABEL_16;
            v40 = 10 * v32;
            if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
              goto LABEL_16;
            v32 = v40 + v39;
            if (__OFADD__(v40, v39))
              goto LABEL_16;
            LOBYTE(v26) = 0;
            ++v38;
            if (!--v37)
              goto LABEL_62;
          }
        }
      }
    }
LABEL_61:
    LOBYTE(v26) = 0;
    goto LABEL_62;
  }
  v4 = 0;
  v5 = (__int128 *)(v0 + 16);
  v50 = v1;
  v51 = v0 + 56;
  v6 = v1 + 32;
  v49 = *(_QWORD *)(v1 + 16);
  while (v4 < *(_QWORD *)(v1 + 16))
  {
    sub_233177068(v6, (uint64_t)v5);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v5, v7);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    }
    else
    {
      sub_23318B020(v5, v51);
      v9 = v53[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23327425C(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v53[0];
      }
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      if (v11 >= v10 >> 1)
        sub_23327425C(v10 > 1, v11 + 1, 1);
      v12 = *(_QWORD *)(v0 + 80);
      v13 = *(_QWORD *)(v0 + 88);
      v14 = __swift_mutable_project_boxed_opaque_existential_1(v51, v12);
      v15 = *(_QWORD *)(v12 - 8);
      v16 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v12);
      sub_2334DDC60(v11, v16, v53, v12, v13);
      __swift_destroy_boxed_opaque_existential_0(v51);
      swift_task_dealloc();
      v3 = v49;
      v1 = v50;
      v5 = (__int128 *)(v0 + 16);
    }
    ++v4;
    v6 += 40;
    if (v3 == v4)
    {
      v2 = v53[0];
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
}

uint64_t StoreSoftwareLibrary.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB1FD0]), sel_init);
  return v0;
}

uint64_t StoreSoftwareLibrary.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB1FD0]), sel_init);
  return v0;
}

uint64_t StoreSoftwareLibrary.items(forStoreIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  return swift_task_switch();
}

uint64_t sub_2334DD4F0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[21] + 112);
  sub_2331CEAC0(v0[20]);
  v2 = sub_23361E3D8();
  v0[22] = v2;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2334DD5C4;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_2334DD80C;
  v4[3] = &block_descriptor_19;
  v4[4] = v3;
  objc_msgSend(v1, sel_getLibraryItemsForITunesStoreItemIdentifiers_completionBlock_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_2334DD5C4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2334DD624()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 120);

  if (!v1)
    goto LABEL_11;
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v4 = MEMORY[0x24BEE4AF8];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
  }
  v9 = MEMORY[0x24BEE4AF8];
  sub_23327425C(0, v2, 0);
  v3 = v1 + 32;
  v4 = v9;
  do
  {
    sub_233168350(v3, v0 + 80);
    sub_233168350(v0 + 80, v0 + 120);
    sub_2334DDCD8();
    swift_dynamicCast();
    v5 = *(_QWORD *)(v0 + 152);
    __swift_destroy_boxed_opaque_existential_0(v0 + 80);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23327425C(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v4 = v9;
    }
    v7 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
    if (v7 >= v6 >> 1)
    {
      sub_23327425C(v6 > 1, v7 + 1, 1);
      v4 = v9;
    }
    *(_QWORD *)(v0 + 104) = &type metadata for StoreSoftwareLibraryItem;
    *(_QWORD *)(v0 + 112) = &off_25048D370;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v4 + 16) = v7 + 1;
    sub_23318B020((__int128 *)(v0 + 80), v4 + 40 * v7 + 32);
    v3 += 32;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_2334DD7CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334DD80C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
      v8 = sub_23361E3F0();
    else
      v8 = 0;
    v9 = v8;
    sub_233168478((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_256052CE8);
    return swift_continuation_throwingResume();
  }
}

uint64_t StoreSoftwareLibrary.items(forBundleIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  return swift_task_switch();
}

uint64_t sub_2334DD8E8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[21] + 112);
  sub_2331CE4DC(v0[20]);
  v2 = sub_23361E3D8();
  v0[22] = v2;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2334DD9BC;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_2334DD80C;
  v4[3] = &block_descriptor_8;
  v4[4] = v3;
  objc_msgSend(v1, sel_getLibraryItemForBundleIdentifiers_completionBlock_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_2334DD9BC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t StoreSoftwareLibrary.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t StoreSoftwareLibrary.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t StoreSoftwareLibrary.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2334DDA70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_233160FEC;
  v5[20] = a1;
  v5[21] = v4;
  return swift_task_switch();
}

uint64_t sub_2334DDAD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23334E4CC;
  v5[20] = a1;
  v5[21] = v4;
  return swift_task_switch();
}

uint64_t sub_2334DDB38(void *a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  if (objc_msgSend(a1, sel_valueForProperty_, *a2))
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_233168478((uint64_t)v4, (uint64_t)&v5, &qword_254245020);
  if (v6)
  {
    sub_2331683D0(&v5, &v7);
    swift_dynamicCast();
    return v3;
  }
  else
  {
    sub_233168608((uint64_t)&v5, &qword_254245020);
    return 0;
  }
}

id sub_2334DDC00()
{
  id *v0;

  return objc_msgSend(*v0, sel_isPlaceholder);
}

uint64_t sub_2334DDC20()
{
  void **v0;

  return sub_2334DDB38(*v0, MEMORY[0x24BEB2A60]);
}

uint64_t sub_2334DDC40()
{
  void **v0;

  return sub_2334DDB38(*v0, MEMORY[0x24BEB2A80]);
}

uint64_t sub_2334DDC60(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_23318B020(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_2334DDCD8()
{
  unint64_t result;

  result = qword_256052C10;
  if (!qword_256052C10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256052C10);
  }
  return result;
}

uint64_t destroy for SoftwareApplication(id *a1)
{
  uint64_t v1;

  v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for SoftwareApplication(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for SoftwareApplication(void **a1, void **a2)
{
  void *v3;
  uint64_t *v4;
  void *v5;
  uint64_t *v6;
  id v7;

  v4 = (uint64_t *)(a2 + 1);
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = (uint64_t *)(a1 + 1);
  v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t assignWithTake for SoftwareApplication(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for SoftwareApplication()
{
  return &type metadata for SoftwareApplication;
}

uint64_t dispatch thunk of SoftwareLibrary.items(forStoreIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331D7608;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SoftwareLibrary.items(forBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2334DDFB0;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for StoreSoftwareLibrary()
{
  return objc_opt_self();
}

uint64_t method lookup function for StoreSoftwareLibrary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreSoftwareLibrary.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.isPlaceholder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SoftwareLibraryItem.storeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for StoreSoftwareLibraryItem()
{
  return &type metadata for StoreSoftwareLibraryItem;
}

void __swiftcall RawOrderBarcode.init(altText:format:message:messageEncoding:)(FinanceKit::RawOrderBarcode *__return_ptr retstr, Swift::String_optional altText, FinanceKit::RawBarcodeFormat format, Swift::String message, Swift::String messageEncoding)
{
  FinanceKit::RawBarcodeFormat v5;

  v5 = *(_BYTE *)format;
  retstr->altText = altText;
  retstr->format = v5;
  retstr->message = message;
  retstr->messageEncoding = messageEncoding;
}

FinanceKit::RawBarcodeFormat_optional __swiftcall RawBarcodeFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawBarcodeFormat_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RawBarcodeFormat.allCases.getter()
{
  return &unk_25046B0B8;
}

uint64_t RawBarcodeFormat.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334DE054 + 4 * byte_233653390[*v0]))(29297, 0xE200000000000000);
}

uint64_t sub_2334DE054()
{
  return 0x373134666470;
}

uint64_t sub_2334DE068()
{
  return 0x6365747A61;
}

uint64_t sub_2334DE07C()
{
  return 0x38323165646F63;
}

void sub_2334DE094(char *a1)
{
  sub_233228198(*a1);
}

void sub_2334DE0A0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_2334DE0E0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_2334DE148()
{
  __asm { BR              X10 }
}

uint64_t sub_2334DE178()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_2334DE1CC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_2334DE208()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawBarcodeFormat_optional sub_2334DE270(Swift::String *a1)
{
  return RawBarcodeFormat.init(rawValue:)(*a1);
}

uint64_t sub_2334DE27C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2334DE2A0 + 4 * byte_2336533A0[*v0]))();
}

void sub_2334DE2A0(_QWORD *a1@<X8>)
{
  *a1 = 0x373134666470;
  a1[1] = 0xE600000000000000;
}

void sub_2334DE2B8(_QWORD *a1@<X8>)
{
  *a1 = 0x6365747A61;
  a1[1] = 0xE500000000000000;
}

void sub_2334DE2D0(_QWORD *a1@<X8>)
{
  *a1 = 0x38323165646F63;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2334DE2EC()
{
  sub_2334DEEAC();
  return sub_23361E390();
}

uint64_t sub_2334DE348()
{
  sub_2334DEEAC();
  return sub_23361E354();
}

void sub_2334DE394(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B0E0;
}

uint64_t RawOrderBarcode.altText.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.altText.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderBarcode.altText.modify())()
{
  return nullsub_1;
}

void RawOrderBarcode.format.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *RawOrderBarcode.format.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*RawOrderBarcode.format.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderBarcode.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawOrderBarcode.message.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderBarcode.messageEncoding.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderBarcode.messageEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawOrderBarcode.messageEncoding.modify())()
{
  return nullsub_1;
}

uint64_t sub_2334DE520()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334DE550 + 4 * byte_2336533A4[*v0]))(0x74786554746C61, 0xE700000000000000);
}

uint64_t sub_2334DE550()
{
  return 0x74616D726F66;
}

uint64_t sub_2334DE564()
{
  return 0x6567617373656DLL;
}

uint64_t sub_2334DE578()
{
  return 0x456567617373656DLL;
}

uint64_t sub_2334DE59C()
{
  sub_2334DEB80();
  return sub_23361F428();
}

uint64_t sub_2334DE5C4()
{
  sub_2334DEB80();
  return sub_23361F434();
}

uint64_t RawOrderBarcode.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052CF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v11[2] = *(_QWORD *)(v1 + 32);
  v11[3] = v7;
  v8 = *(_QWORD *)(v1 + 40);
  v11[0] = *(_QWORD *)(v1 + 48);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334DEB80();
  sub_23361F410();
  v18 = 0;
  v9 = v13;
  sub_23361F0E0();
  if (!v9)
  {
    v17 = v12;
    v16 = 1;
    sub_2334DEBC4();
    sub_23361F17C();
    v15 = 2;
    sub_23361F140();
    v14 = 3;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderBarcode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  unsigned __int8 v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334DEB80();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v29 = 0;
    v10 = sub_23361EFCC();
    v12 = v11;
    v27 = 1;
    sub_2334DEC08();
    swift_bridgeObjectRetain();
    sub_23361F068();
    v24 = v10;
    v23 = v28;
    v26 = 2;
    v13 = sub_23361F02C();
    v15 = v14;
    v22 = v13;
    v25 = 3;
    swift_bridgeObjectRetain();
    v16 = sub_23361F02C();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v23;
    *(_QWORD *)(a2 + 24) = v22;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v20;
    *(_QWORD *)(a2 + 48) = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334DEA30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderBarcode.init(from:)(a1, a2);
}

uint64_t sub_2334DEA44(_QWORD *a1)
{
  return RawOrderBarcode.encode(to:)(a1);
}

uint64_t _s10FinanceKit15RawOrderBarcodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  char v16;
  char v17;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = a2[1];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  v13 = a2[6];
  if (!v3)
  {
    if (!v9)
      goto LABEL_8;
    return 0;
  }
  if (!v9)
    return 0;
  if (*(_QWORD *)a1 != *a2 || v3 != v9)
  {
    v14 = sub_23361F224();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
LABEL_8:
  sub_233228198(v4);
  if ((v16 & 1) == 0)
    return 0;
  if (v5 == v10 && v6 == v11 || (v17 = sub_23361F224(), result = 0, (v17 & 1) != 0))
  {
    if (v7 == v12 && v8 == v13)
      return 1;
    else
      return sub_23361F224();
  }
  return result;
}

unint64_t sub_2334DEB80()
{
  unint64_t result;

  result = qword_256052CF8;
  if (!qword_256052CF8)
  {
    result = MEMORY[0x234934494](&unk_233653668, &type metadata for RawOrderBarcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052CF8);
  }
  return result;
}

unint64_t sub_2334DEBC4()
{
  unint64_t result;

  result = qword_256052D00;
  if (!qword_256052D00)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBarcodeFormat, &type metadata for RawBarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256052D00);
  }
  return result;
}

unint64_t sub_2334DEC08()
{
  unint64_t result;

  result = qword_256052D10;
  if (!qword_256052D10)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBarcodeFormat, &type metadata for RawBarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256052D10);
  }
  return result;
}

unint64_t sub_2334DEC50()
{
  unint64_t result;

  result = qword_256052D18;
  if (!qword_256052D18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBarcodeFormat, &type metadata for RawBarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256052D18);
  }
  return result;
}

unint64_t sub_2334DEC98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256052D20;
  if (!qword_256052D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256052D28);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256052D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBarcodeFormat()
{
  return &type metadata for RawBarcodeFormat;
}

ValueMetadata *type metadata accessor for RawOrderBarcode()
{
  return &type metadata for RawOrderBarcode;
}

uint64_t _s10FinanceKit16RawBarcodeFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2334DED54 + 4 * byte_2336533AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2334DED88 + 4 * byte_2336533A8[v4]))();
}

uint64_t sub_2334DED88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DED90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334DED98);
  return result;
}

uint64_t sub_2334DEDA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334DEDACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2334DEDB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334DEDB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderBarcode.CodingKeys()
{
  return &type metadata for RawOrderBarcode.CodingKeys;
}

unint64_t sub_2334DEDD8()
{
  unint64_t result;

  result = qword_256052D30;
  if (!qword_256052D30)
  {
    result = MEMORY[0x234934494](&unk_233653640, &type metadata for RawOrderBarcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052D30);
  }
  return result;
}

unint64_t sub_2334DEE20()
{
  unint64_t result;

  result = qword_256052D38;
  if (!qword_256052D38)
  {
    result = MEMORY[0x234934494](&unk_2336535B0, &type metadata for RawOrderBarcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052D38);
  }
  return result;
}

unint64_t sub_2334DEE68()
{
  unint64_t result;

  result = qword_256052D40;
  if (!qword_256052D40)
  {
    result = MEMORY[0x234934494](&unk_2336535D8, &type metadata for RawOrderBarcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052D40);
  }
  return result;
}

unint64_t sub_2334DEEAC()
{
  unint64_t result;

  result = qword_256052D48;
  if (!qword_256052D48)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBarcodeFormat, &type metadata for RawBarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256052D48);
  }
  return result;
}

uint64_t MapsWalletCategory.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t MapsWalletCategory.rawValue.getter()
{
  unsigned __int16 *v0;

  return *v0;
}

uint64_t sub_2334DEF00()
{
  sub_2334DF03C();
  return sub_23361E3A8();
}

uint64_t sub_2334DEF5C()
{
  sub_2334DF03C();
  return sub_23361E36C();
}

ValueMetadata *type metadata accessor for MapsWalletCategory()
{
  return &type metadata for MapsWalletCategory;
}

uint64_t dispatch thunk of MapsItem.muid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MapsItem.resultProviderIdentifier.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t dispatch thunk of MapsItem.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MapsItem.phoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MapsItem.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MapsItem.heroImageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MapsItem.heroImageAttributionName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MapsItem.walletCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MapsItem.mapsCategoryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MapsItem.encodedStylingInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MapsItem.businessChatURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MapsItem.lastProcessedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

unint64_t sub_2334DF03C()
{
  unint64_t result;

  result = qword_256052D50;
  if (!qword_256052D50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MapsWalletCategory, &type metadata for MapsWalletCategory);
    atomic_store(result, (unint64_t *)&qword_256052D50);
  }
  return result;
}

uint64_t sub_2334DF080(int *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v2 = *v1;
  v3 = (uint64_t)v1 + a1[5];
  v4 = *(void **)((char *)v1 + a1[6]);
  v5 = *((_BYTE *)v1 + a1[8]);
  v6 = *__swift_project_boxed_opaque_existential_1((uint64_t *)((char *)v1 + a1[7]), *(uint64_t *)((char *)v1 + a1[7] + 24));
  v7 = v4;
  v8 = sub_2334DF9D4(v3, v4, v5, v6, v2);

  return v8;
}

void FinanceStore.accountBalanceHistory(forAccountID:since:isMonitoring:)(uint64_t a1@<X0>, void **a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  int *v10;
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  char v17;

  v8 = *a2;
  static DeviceInfo.deviceType.getter(&v17);
  if (v17)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 16);
    v10 = (int *)_s37AccountBalanceHistoryIteratorProviderVMa();
    a4[3] = (uint64_t)v10;
    a4[4] = sub_233167C58(&qword_256052D58, (uint64_t (*)(uint64_t))_s37AccountBalanceHistoryIteratorProviderVMa, (uint64_t)&unk_233653810);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    v12 = (char *)boxed_opaque_existential_0 + v10[5];
    v13 = sub_23361D6A0();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v15 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]);
    v15[3] = type metadata accessor for FinanceStore();
    v15[4] = &off_250487D20;
    *v15 = v4;
    *boxed_opaque_existential_0 = v9;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[6]) = (uint64_t)v8;
    *((_BYTE *)boxed_opaque_existential_0 + v10[8]) = a3 & 1;
    v16 = v8;
    swift_retain();
    swift_retain();
  }
}

uint64_t _s37AccountBalanceHistoryIteratorProviderVMa()
{
  uint64_t result;

  result = qword_256052DD8;
  if (!qword_256052DD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2334DF268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2334DF284()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;
  char v4[9];

  v4[0] = 2;
  if ((FinanceStore.isDataRestricted(for:)(v4) & 1) != 0)
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_2331D625C;
    return sub_2332A3F0C(*(_QWORD *)(v0 + 32));
  }
}

uint64_t FinanceStore.accountBalances(query:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_2334DF354()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;
  void (*v3)(int *);
  char v4;

  static DeviceInfo.deviceType.getter(&v4);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v1 = (int8x16_t *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v1;
    v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    v3 = (void (*)(int *))((char *)&dword_2560443E8 + dword_2560443E8);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_2334DF3EC;
    v3((int *)&unk_256052D70);
  }
}

uint64_t sub_2334DF3EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2334DF474()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) != 0 && *(_BYTE *)(v0 + 64) == 4)
    return sub_23361EF24();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334DF564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_2331676FC;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

void FinanceStore.accountBalanceHistory(since:isMonitoring:)(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t *boxed_opaque_existential_0;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  char v14;

  v6 = *a1;
  static DeviceInfo.deviceType.getter(&v14);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 16);
    v8 = (int *)_s37AccountBalanceHistoryIteratorProviderVMa();
    a3[3] = (uint64_t)v8;
    a3[4] = sub_233167C58(&qword_256052D58, (uint64_t (*)(uint64_t))_s37AccountBalanceHistoryIteratorProviderVMa, (uint64_t)&unk_233653810);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    v10 = (char *)boxed_opaque_existential_0 + v8[5];
    v11 = sub_23361D6A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]);
    v12[3] = type metadata accessor for FinanceStore();
    v12[4] = &off_250487D20;
    *v12 = v3;
    *boxed_opaque_existential_0 = v7;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[6]) = (uint64_t)v6;
    *((_BYTE *)boxed_opaque_existential_0 + v8[8]) = a2 & 1;
    v13 = v6;
    swift_retain();
    swift_retain();
  }
}

uint64_t FinanceStore.privateAccountBalances(query:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 1);
  *(_BYTE *)(v2 + 57) = *((_BYTE *)a1 + 24);
  *(_QWORD *)(v2 + 96) = a1[4];
  *(_BYTE *)(v2 + 58) = *((_BYTE *)a1 + 40);
  return swift_task_switch();
}

void sub_2334DF714()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  char v6;
  char v7[9];

  static DeviceInfo.deviceType.getter(&v6);
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7[0] = 2;
    if ((FinanceStore.isDataRestricted(for:)(v7) & 1) != 0)
    {
      sub_23316853C();
      swift_allocError();
      *v1 = 2;
      swift_willThrow();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v2 = *(_BYTE *)(v0 + 58);
      v3 = *(_QWORD *)(v0 + 96);
      v4 = *(_BYTE *)(v0 + 57);
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
      *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 80);
      *(_BYTE *)(v0 + 40) = v4;
      *(_QWORD *)(v0 + 48) = v3;
      *(_BYTE *)(v0 + 56) = v2;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v5;
      *v5 = v0;
      v5[1] = sub_2331D69C0;
      sub_2332A3578((_OWORD *)(v0 + 16));
    }
  }
}

uint64_t sub_2334DF804()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334DF810(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2334DF890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2334DF89C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2334DF914()
{
  unint64_t v0;

  sub_2332C25A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2334DF9A8()
{
  return sub_233167C58(qword_256052E20, type metadata accessor for AccountBalance, (uint64_t)&protocol conformance descriptor for AccountBalance);
}

uint64_t sub_2334DF9D4(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char **v14;
  os_unfair_lock_s *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  _BYTE v27[24];
  uint64_t v28;
  _QWORD v29[5];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[3] = type metadata accessor for FinanceStore();
  v29[4] = &off_250487D20;
  v29[0] = a4;
  sub_2331D7514(a1, (uint64_t)v12);
  sub_233177068((uint64_t)v29, (uint64_t)v27);
  v13 = *(_QWORD *)(a5 + 16);
  v14 = (char **)(v13 + 16);
  v15 = (os_unfair_lock_s *)(v13 + 24);
  v16 = a2;
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_2332A14D8(v14, &v26);
  os_unfair_lock_unlock(v15);
  v17 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052E48);
  v18 = swift_allocObject();
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = sub_2334DFB8C((unint64_t)v12, (unint64_t)a2, a3, *v21, 0, 0, (uint64_t)v17, v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return v23;
}

uint64_t sub_2334DFB8C(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(void *@<X0>, uint64_t@<X8>);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  os_activity_t v49;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v52 = a6;
  v54 = a5;
  LOBYTE(v11) = a3;
  v14 = sub_23361E900();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FinanceStore();
  v63 = &off_250487D20;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + qword_2560CD360) = 0;
  v62 = v17;
  v61[0] = a4;
  v18 = (char *)qword_2560CD368;
  *(_QWORD *)(a8 + qword_2560CD368) = 0;
  v19 = a8 + qword_2560CD3A0;
  v20 = qword_256041CB0;
  swift_retain();
  if (v20 != -1)
LABEL_25:
    swift_once();
  v21 = sub_23361DB80();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2560495E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v22, v21);
  v53 = a1;
  sub_2331D7514(a1, a8 + qword_2560CD380);
  *(_BYTE *)(a8 + 32) = v11 & 1;
  *(_QWORD *)(a8 + qword_2560CD358) = a7;
  v23 = (void (**)(void *@<X0>, uint64_t@<X8>))(a8 + qword_2560CD390);
  *v23 = sub_2334E0124;
  v23[1] = 0;
  v24 = *(void **)&v18[a8];
  *(_QWORD *)&v18[a8] = a2;
  swift_retain();

  v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v25;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v26 = swift_allocObject();
  sub_23318B020(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v27 = (_QWORD *)(a8 + qword_2560CD370);
  *v27 = &unk_2560443D8;
  v27[1] = v26;
  v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v28;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v29 = swift_allocObject();
  sub_23318B020(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v30 = (_QWORD *)(a8 + qword_2560CD378);
  *v30 = &unk_256048730;
  v30[1] = v29;
  *(_QWORD *)(a8 + qword_2560CD388) = v54;
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23361E90C();

  sub_23361E8E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_2560CD348, v16, v56);
  v32 = objc_msgSend(*(id *)(a7 + 16), sel_persistentStoreCoordinator);
  v33 = objc_msgSend(v32, sel_persistentStores);

  sub_2331D767C();
  a1 = sub_23361E3F0();

  if (!(a1 >> 62))
  {
    a7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    v41 = 0;
    v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a7 = sub_23361EF30();
  if (!a7)
    goto LABEL_15;
LABEL_4:
  a2 = a1 & 0xC000000000000001;
  v11 = 4;
  while (1)
  {
    v19 = v11 - 4;
    if (a2)
      v34 = (char *)MEMORY[0x234933120](v11 - 4, a1);
    else
      v34 = (char *)*(id *)(a1 + 8 * v11);
    v18 = v34;
    v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v35 = objc_msgSend(v34, sel_configurationName);
    v16 = (char *)sub_23361E150();
    v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      break;

    ++v11;
    if (v17 == a7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v40 = objc_msgSend(v18, sel_identifier);

  if (!v40)
    goto LABEL_20;
  v41 = sub_23361E150();
  v43 = v42;

LABEL_21:
  v44 = v52;
  v45 = v53;
  v46 = (uint64_t *)(a8 + qword_2560CD350);
  *v46 = v41;
  v46[1] = v43;
  *(_QWORD *)(a8 + qword_2560CD398) = v44;
  v47 = qword_254246ED0;
  v48 = v44;
  if (v47 != -1)
    swift_once();
  v49 = _os_activity_create(&dword_233151000, "FinancialDataAsyncIterator", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_2331D76B8(v45);
  *(_QWORD *)(a8 + qword_2560CD3A8) = v49;
  return a8;
}

void sub_2334E0124(void *a1@<X0>, uint64_t a2@<X8>)
{
  AccountBalance.init(_:)(a1, a2);
}

uint64_t sub_2334E0154()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t RawOrderCustomer.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = objc_msgSend(a1, sel_customerEmailAddress);
  if (v4)
  {
    v5 = v4;
    v29 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v29 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(a1, sel_customerFamilyName);
  if (v8)
  {
    v9 = v8;
    v28 = sub_23361E150();
    v11 = v10;

  }
  else
  {
    v28 = 0;
    v11 = 0;
  }
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(a1, sel_customerGivenName);
  if (v12)
  {
    v13 = v12;
    v27 = sub_23361E150();
    v15 = v14;

  }
  else
  {
    v27 = 0;
    v15 = 0;
  }
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(a1, sel_customerOrganizationName);
  if (v16)
  {
    v17 = v16;
    v18 = sub_23361E150();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  swift_bridgeObjectRetain();
  v21 = objc_msgSend(a1, sel_customerPhoneNumber);
  if (v21)
  {
    v22 = v21;
    v23 = sub_23361E150();
    v25 = v24;

  }
  else
  {

    v23 = 0;
    v25 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v11;
  a2[2] = v27;
  a2[3] = v15;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v29;
  a2[7] = v7;
  a2[8] = v23;
  a2[9] = v25;
  return result;
}

uint64_t RawOrderCustomer.familyName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.familyName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderCustomer.familyName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.givenName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.givenName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.givenName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.organizationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.organizationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.organizationName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.emailAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderCustomer.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderCustomer.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawOrderCustomer.phoneNumber.modify())()
{
  return nullsub_1;
}

void __swiftcall RawOrderCustomer.init(familyName:givenName:organizationName:emailAddress:phoneNumber:)(FinanceKit::RawOrderCustomer *__return_ptr retstr, Swift::String_optional familyName, Swift::String_optional givenName, Swift::String_optional organizationName, Swift::String_optional emailAddress, Swift::String_optional phoneNumber)
{
  retstr->familyName = familyName;
  retstr->givenName = givenName;
  retstr->organizationName = organizationName;
  retstr->emailAddress = emailAddress;
  retstr->phoneNumber = phoneNumber;
}

uint64_t sub_2334E05A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334E05D8 + 4 * byte_233653830[*v0]))(0x614E796C696D6166, 0xEA0000000000656DLL);
}

uint64_t sub_2334E05D8()
{
  return 0x6D614E6E65766967;
}

unint64_t sub_2334E05F4()
{
  return 0xD000000000000010;
}

uint64_t sub_2334E0610()
{
  return 0x6464416C69616D65;
}

uint64_t sub_2334E0630()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_2334E0650()
{
  sub_2334E0BFC();
  return sub_23361F428();
}

uint64_t sub_2334E0678()
{
  sub_2334E0BFC();
  return sub_23361F434();
}

uint64_t RawOrderCustomer.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052E50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334E0BFC();
  sub_23361F410();
  v18 = 0;
  v11 = v13[9];
  sub_23361F0E0();
  if (!v11)
  {
    v17 = 1;
    sub_23361F0E0();
    v16 = 2;
    sub_23361F0E0();
    v15 = 3;
    sub_23361F0E0();
    v14 = 4;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderCustomer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052E60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334E0BFC();
  sub_23361F3EC();
  if (!v2)
  {
    v40 = 0;
    v10 = sub_23361EFCC();
    v12 = v11;
    v39 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361EFCC();
    v15 = v14;
    v33 = v13;
    v34 = v10;
    v38 = 2;
    swift_bridgeObjectRetain();
    v35 = v15;
    v16 = sub_23361EFCC();
    v18 = v17;
    v31 = v16;
    v32 = a2;
    v37 = 3;
    swift_bridgeObjectRetain();
    v19 = sub_23361EFCC();
    v21 = v20;
    v30 = v19;
    v36 = 4;
    swift_bridgeObjectRetain();
    v22 = sub_23361EFCC();
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v32;
    v27 = v35;
    *v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334E0BD4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawOrderCustomer.init(from:)(a1, a2);
}

uint64_t sub_2334E0BE8(_QWORD *a1)
{
  return RawOrderCustomer.encode(to:)(a1);
}

unint64_t sub_2334E0BFC()
{
  unint64_t result;

  result = qword_256052E58;
  if (!qword_256052E58)
  {
    result = MEMORY[0x234934494](&unk_2336539A4, &type metadata for RawOrderCustomer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052E58);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderCustomer()
{
  return &type metadata for RawOrderCustomer;
}

uint64_t storeEnumTagSinglePayload for RawOrderCustomer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2334E0C9C + 4 * byte_23365383A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2334E0CD0 + 4 * byte_233653835[v4]))();
}

uint64_t sub_2334E0CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334E0CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334E0CE0);
  return result;
}

uint64_t sub_2334E0CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334E0CF4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2334E0CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334E0D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderCustomer.CodingKeys()
{
  return &type metadata for RawOrderCustomer.CodingKeys;
}

unint64_t sub_2334E0D20()
{
  unint64_t result;

  result = qword_256052E68;
  if (!qword_256052E68)
  {
    result = MEMORY[0x234934494](&unk_23365397C, &type metadata for RawOrderCustomer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052E68);
  }
  return result;
}

unint64_t sub_2334E0D68()
{
  unint64_t result;

  result = qword_256052E70;
  if (!qword_256052E70)
  {
    result = MEMORY[0x234934494](&unk_2336538EC, &type metadata for RawOrderCustomer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052E70);
  }
  return result;
}

unint64_t sub_2334E0DB0()
{
  unint64_t result;

  result = qword_256052E78;
  if (!qword_256052E78)
  {
    result = MEMORY[0x234934494](&unk_233653914, &type metadata for RawOrderCustomer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256052E78);
  }
  return result;
}

uint64_t static NotificationAttachmentStoreError.== infix(_:_:)()
{
  return 1;
}

uint64_t NotificationAttachmentStoreError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t NotificationAttachmentStoreError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2334E0E60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23361D340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23361D2D4();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2334E0EF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[2];

  v20 = a3;
  v24 = a1;
  v25 = a2;
  v23 = a5;
  v22 = sub_23361D340();
  v6 = *(_QWORD *)(v22 - 8);
  v7 = MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v19 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)&v19 - v13;
  if (a4)
  {
    strcpy((char *)v26, "fulfillment_");
    BYTE5(v26[1]) = 0;
    HIWORD(v26[1]) = -5120;
    v19 = v6;
    sub_23361E27C();
    v14 = v26[1];
    v20 = v26[0];
    sub_2334E1DB4();
    sub_23361D274();
    sub_23361D280();
    v15 = *(void (**)(char *, uint64_t))(v19 + 8);
    v16 = v22;
    v15(v9, v22);
    v26[0] = v20;
    v26[1] = v14;
    swift_bridgeObjectRetain();
    sub_23361E27C();
    v17 = (uint64_t)v21;
    sub_23361D280();
    swift_bridgeObjectRelease();
    v15(v12, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2334E1DB4();
    sub_23361D274();
    sub_23361D280();
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16 = v22;
    v15(v9, v22);
    v26[0] = 0x6567616D69;
    v26[1] = 0xE500000000000000;
    sub_23361E27C();
    v17 = (uint64_t)v21;
    sub_23361D280();
    swift_bridgeObjectRelease();
    v15(v12, v16);
  }
  sub_2334E1184(v24, v25, v17, v23);
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v17, v16);
}

void sub_2334E1184(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id aBlock[6];
  id v29[2];

  v26 = a2;
  v24 = a4;
  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v29[0] = 0;
  v27 = *(id *)(v4 + 16);
  sub_23361D2B0();
  v12 = sub_23361D268();
  v22 = v8;
  v23 = v7;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v25 = a3;
  v13 = (void *)sub_23361D268();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a1;
  v15 = v26;
  v14[4] = v26;
  v14[5] = v29;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_2334E2218;
  v16[3] = v14;
  aBlock[4] = sub_2331683B0;
  aBlock[5] = v16;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_2334E1564;
  aBlock[3] = &block_descriptor_22_0;
  v17 = _Block_copy(aBlock);
  v18 = v11;
  swift_retain();
  sub_2331D1374(a1, v15);
  swift_release();
  aBlock[0] = 0;
  v19 = v27;
  objc_msgSend(v27, sel_coordinateWritingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v12, 0, v13, 8, aBlock, v17);
  _Block_release(v17);

  v20 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v12 & 1) != 0)
    __break(1u);
  if (v20 || v29[0])
  {
    sub_2334E21A8();
    swift_allocError();
    swift_willThrow();

    swift_release();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v25, v23);
    swift_release();
  }
}

void sub_2334E1460(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void **a6)
{
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = (void *)sub_23361D268();
  v13[0] = 0;
  LODWORD(a3) = objc_msgSend(a3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v8, 1, 0, v13);

  if ((_DWORD)a3)
  {
    v9 = v13[0];
    sub_23361D3DC();
  }
  else
  {
    v10 = v13[0];
    v11 = sub_23361D1B4();

    swift_willThrow();
    v12 = *a6;
    *a6 = (void *)v11;

  }
}

uint64_t sub_2334E1564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, char *);
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v2 = sub_23361D340();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - v7;
  v9 = *(void (**)(char *, char *))(a1 + 32);
  sub_23361D2D4();
  sub_23361D2D4();
  v9(v8, v6);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

void sub_2334E1644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD v28[3];
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  uint64_t (*v38)();
  uint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_23361D340();
  v31 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v32 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v28 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v28 - v6;
  sub_2334E1DB4();
  sub_23361D274();
  sub_23361D280();
  v8 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 = v0;
  v29 = v8;
  v8(v5, v0);
  sub_2334E1DB4();
  sub_23361D274();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v40[0] = 0;
  v10 = *(id *)(v33 + 16);
  v30 = v7;
  v11 = sub_23361D268();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v40;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_2334E2170;
  *(_QWORD *)(v13 + 24) = v12;
  v28[2] = v12;
  v38 = sub_2331683B0;
  v39 = v13;
  aBlock = (id)MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_2334E0E60;
  v37 = &block_descriptor_20;
  v14 = _Block_copy(&aBlock);
  v15 = v9;
  swift_retain();
  swift_release();
  aBlock = 0;
  objc_msgSend(v10, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v11, 1, &aBlock, v14);
  _Block_release(v14);

  v16 = aBlock;
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
  }
  v17 = *(id *)(v33 + 16);
  v18 = (void *)sub_23361D268();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v15;
  *(_QWORD *)(v19 + 24) = v40;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_2334E2190;
  *(_QWORD *)(v20 + 24) = v19;
  v38 = sub_2334E2248;
  v39 = v20;
  aBlock = (id)MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_2334E0E60;
  v37 = &block_descriptor_13_0;
  v21 = _Block_copy(&aBlock);
  v22 = v15;
  swift_retain();
  swift_release();
  aBlock = v16;
  objc_msgSend(v17, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v18, 1, &aBlock, v21);
  _Block_release(v21);

  v23 = aBlock;
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v17 & 1) != 0)
    goto LABEL_8;
  if (v23 || v40[0])
  {
    sub_2334E21A8();
    swift_allocError();
    swift_willThrow();

    v26 = v31;
    v27 = v29;
    v29(v32, v31);
    v27(v30, v26);

    swift_release();
    swift_release();

  }
  else
  {

    v24 = v31;
    v25 = v29;
    v29(v32, v31);
    v25(v30, v24);

    swift_release();
    swift_release();
  }
}

void sub_2334E1AFC(uint64_t a1, void *a2, void **a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_23361D268();
  v11[0] = 0;
  LODWORD(a2) = objc_msgSend(a2, sel_removeItemAtURL_error_, v5, v11);

  if ((_DWORD)a2)
  {
    v6 = v11[0];
  }
  else
  {
    v7 = v11[0];
    v8 = (void *)sub_23361D1B4();

    swift_willThrow();
    sub_2334E21A8();
    v9 = swift_allocError();

    v10 = *a3;
    *a3 = (void *)v9;

  }
}

void sub_2334E1C14(uint64_t a1, void *a2, void **a3)
{
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19[2];

  v19[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_23361D268();
  v19[0] = 0;
  v6 = objc_msgSend(a2, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v5, 0, 4, v19);

  v7 = v19[0];
  if (!v6)
    goto LABEL_5;
  v18 = v19[0];
  sub_23361D340();
  v8 = sub_23361E3F0();
  v9 = v18;

  v10 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v10)
    return;
  v11 = (void *)sub_23361D268();
  v19[0] = 0;
  v12 = objc_msgSend(a2, sel_removeItemAtURL_error_, v11, v19);

  v7 = v19[0];
  if (v12)
  {
    v13 = v19[0];
  }
  else
  {
LABEL_5:
    v14 = v7;
    v15 = (void *)sub_23361D1B4();

    swift_willThrow();
    sub_2334E21A8();
    v16 = swift_allocError();

    v17 = *a3;
    *a3 = (void *)v16;

  }
}

uint64_t sub_2334E1DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t result;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v17 - v4;
  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - v11;
  static URL.libraryURL.getter((uint64_t)v3);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v13(v3, 1, v6) == 1)
  {
    sub_2331A046C((uint64_t)v3);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14(v10, v3, v6);
    sub_23361D280();
    v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if (v13(v5, 1, v6) != 1)
    {
      v14(v12, v5, v6);
      sub_23361D280();
      return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
    }
  }
  sub_2331A046C((uint64_t)v5);
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t NotificationAttachmentStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NotificationAttachmentStore.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

unint64_t sub_2334E2040()
{
  unint64_t result;

  result = qword_256052E80;
  if (!qword_256052E80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for NotificationAttachmentStoreError, &type metadata for NotificationAttachmentStoreError);
    atomic_store(result, (unint64_t *)&qword_256052E80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationAttachmentStoreError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334E20C4 + 4 * byte_233653A00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334E20E4 + 4 * byte_233653A05[v4]))();
}

_BYTE *sub_2334E20C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334E20E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334E20EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334E20F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334E20FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334E2104(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NotificationAttachmentStoreError()
{
  return &type metadata for NotificationAttachmentStoreError;
}

uint64_t type metadata accessor for NotificationAttachmentStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for NotificationAttachmentStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2334E214C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2334E2170(uint64_t a1)
{
  uint64_t v1;

  sub_2334E1AFC(a1, *(void **)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t sub_2334E2178()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

void sub_2334E2190(uint64_t a1)
{
  uint64_t v1;

  sub_2334E1C14(a1, *(void **)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t sub_2334E2198()
{
  return swift_deallocObject();
}

unint64_t sub_2334E21A8()
{
  unint64_t result;

  result = qword_256052FA8[0];
  if (!qword_256052FA8[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for NotificationAttachmentStoreError, &type metadata for NotificationAttachmentStoreError);
    atomic_store(result, qword_256052FA8);
  }
  return result;
}

uint64_t sub_2334E21EC()
{
  uint64_t v0;

  sub_23316BEA4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

void sub_2334E2218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2334E1460(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void ***)(v2 + 40));
}

uint64_t sub_2334E2224()
{
  return swift_deallocObject();
}

id ManagedAccountActions.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  id v3;

  v3 = sub_2334E2C40(a1, (uint64_t)a2);

  return v3;
}

{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(v5, a1);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
  return v5;
}

void sub_2334E26BC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233199624(a1, (uint64_t)v10);
  v11 = *a2;
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);

}

id ManagedAccountActions.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountActions.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountActions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s10FinanceKit21ManagedAccountActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  int *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v29 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v29 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  sub_233199624(a2, (uint64_t)&v29 - v16);
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(v17, 1, v18) != 1)
  {
    v21 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  objc_msgSend(a1, sel_setTransferFunds_, v21);

  v22 = (int *)type metadata accessor for RawBankConnectData.Actions();
  sub_233199624(a2 + v22[5], (uint64_t)v15);
  v23 = 0;
  if (v20(v15, 1, v18) != 1)
  {
    v23 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  objc_msgSend(a1, sel_setPayNow_, v23);

  sub_233199624(a2 + v22[6], (uint64_t)v12);
  if (v20(v12, 1, v18) == 1)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v18);
  }
  objc_msgSend(a1, sel_setDigitalServicing_, v24);

  sub_233199624(a2 + v22[7], (uint64_t)v9);
  if (v20(v9, 1, v18) == 1)
  {
    v25 = 0;
  }
  else
  {
    v25 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
  }
  objc_msgSend(a1, sel_setPostInstallment_, v25);

  v26 = a2 + v22[8];
  v27 = v30;
  sub_233199624(v26, v30);
  if (v20((char *)v27, 1, v18) == 1)
  {
    v28 = 0;
  }
  else
  {
    v28 = (void *)sub_23361D268();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v27, v18);
  }
  objc_msgSend(a1, sel_setRedeemRewards_, v28);

}

id sub_2334E2C40(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  id v24;
  void *v25;
  int *v26;
  void *v27;
  int v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v35 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v35 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v35 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v35 - v17;
  v19 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  sub_233199624(a1, (uint64_t)v18);
  v20 = sub_23361D340();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v19;
  v25 = 0;
  if (v23 != 1)
  {
    v25 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  objc_msgSend(v24, sel_setTransferFunds_, v25);

  v26 = (int *)type metadata accessor for Actions();
  sub_233199624(a1 + v26[5], (uint64_t)v16);
  v27 = 0;
  if (v22(v16, 1, v20) != 1)
  {
    v27 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
  }
  objc_msgSend(v24, sel_setPayNow_, v27);

  sub_233199624(a1 + v26[6], (uint64_t)v13);
  v28 = v22(v13, 1, v20);
  v29 = (uint64_t)v35;
  if (v28 == 1)
  {
    v30 = 0;
  }
  else
  {
    v30 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
  }
  objc_msgSend(v24, sel_setDigitalServicing_, v30);

  sub_233199624(a1 + v26[7], v29);
  if (v22((char *)v29, 1, v20) == 1)
  {
    v31 = 0;
  }
  else
  {
    v31 = (void *)sub_23361D268();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v20);
  }
  objc_msgSend(v24, sel_setPostInstallment_, v31);

  v32 = v36;
  sub_233199624(a1 + v26[8], v36);
  if (v22((char *)v32, 1, v20) == 1)
  {
    v33 = 0;
  }
  else
  {
    v33 = (void *)sub_23361D268();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v20);
  }
  objc_msgSend(v24, sel_setRedeemRewards_, v33);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  return v24;
}

uint64_t sub_2334E2F88@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_transferFunds, a2);
}

void sub_2334E2FA4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334E26BC(a1, a2, a3, a4, (SEL *)&selRef_setTransferFunds_);
}

uint64_t sub_2334E2FC0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_payNow, a2);
}

void sub_2334E2FDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334E26BC(a1, a2, a3, a4, (SEL *)&selRef_setPayNow_);
}

uint64_t sub_2334E2FF8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_digitalServicing, a2);
}

void sub_2334E3014(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334E26BC(a1, a2, a3, a4, (SEL *)&selRef_setDigitalServicing_);
}

uint64_t sub_2334E3030@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_postInstallment, a2);
}

void sub_2334E304C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334E26BC(a1, a2, a3, a4, (SEL *)&selRef_setPostInstallment_);
}

uint64_t sub_2334E3068@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_redeemRewards, a2);
}

void sub_2334E3084(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2334E26BC(a1, a2, a3, a4, (SEL *)&selRef_setRedeemRewards_);
}

uint64_t type metadata accessor for ManagedAccountActions()
{
  return objc_opt_self();
}

uint64_t FinanceAppExtensionConfiguration.init(connectionHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FinanceAppExtensionConfiguration.connectionHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

Swift::Bool __swiftcall FinanceAppExtensionConfiguration.accept(connection:)(NSXPCConnection connection)
{
  uint64_t v1;
  uint64_t v2;
  void (**v3)(uint64_t);
  void (*v5)(uint64_t);
  objc_class *v6;
  uint64_t v7;
  uint64_t v9[5];

  v5 = *v3;
  type metadata accessor for ServiceToClientXPCConnection(0, *(_QWORD *)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8), v2);
  sub_23323FBC4(v9);
  v6 = connection.super.isa;
  v7 = sub_2332D9D08(v6, (uint64_t)v9);

  v5(v7);
  swift_release();
  return 1;
}

_QWORD *sub_2334E31A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2334E31DC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FinanceAppExtensionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceAppExtensionConfiguration);
}

Swift::Void __swiftcall FinancialDataTCC.setGranted(_:forBundleID:)(Swift::Bool _, Swift::String forBundleID)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  if (*MEMORY[0x24BEB3898])
  {
    object = forBundleID._object;
    countAndFlagsBits = forBundleID._countAndFlagsBits;
    v5 = qword_256041CB0;
    v6 = (id)*MEMORY[0x24BEB3898];
    if (v5 != -1)
      swift_once();
    v7 = sub_23361DB80();
    __swift_project_value_buffer(v7, (uint64_t)qword_2560495E0);
    swift_bridgeObjectRetain_n();
    v8 = sub_23361DB68();
    v9 = sub_23361E768();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v10 = 136315394;
      if (_)
        v11 = 0x676E696C62616E45;
      else
        v11 = 0x6E696C6261736944;
      if (_)
        v12 = 0xE800000000000000;
      else
        v12 = 0xE900000000000067;
      sub_233164DCC(v11, v12, &v16);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_233164DCC(countAndFlagsBits, (unint64_t)object, &v16);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v8, v9, "%s access for %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v15, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v13 = v6;
    v14 = (void *)sub_23361E12C();
    TCCAccessSetForBundleId();

  }
  else
  {
    __break(1u);
  }
}

FinanceKit::PrivacySettingsTCCInfo_optional __swiftcall FinancialDataTCC.tccInfo(forBundleID:)(Swift::String forBundleID)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::Bool v15;
  __int128 v16;
  uint64_t v17;
  FinanceKit::PrivacySettingsTCCInfo_optional result;

  object = forBundleID._object;
  countAndFlagsBits = forBundleID._countAndFlagsBits;
  v4 = v1;
  v5 = (void *)sub_23361E12C();
  v6 = (void *)TCCAccessCopyInformationForBundleId();

  if (v6)
  {
    v7 = v6;
    v17 = 0;
    sub_2334E3FC0();
    sub_23361E3E4();

  }
  if (qword_256041CB0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495E0);
  swift_bridgeObjectRetain_n();
  v9 = sub_23361DB68();
  v10 = sub_23361E768();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v16 = sub_233164DCC(countAndFlagsBits, (unint64_t)object, &v17);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v9, v10, "Unable to retrieve financialData for %s.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v12, -1, -1);
    MEMORY[0x234934590](v11, -1, -1);

  }
  else
  {

    v13 = swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 0;
  result.value.bundleID._object = v14;
  result.value.bundleID._countAndFlagsBits = v13;
  result.value.granted = v15;
  return result;
}

void FinancialDataTCC.allFinancialDataTCCInfos()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (*MEMORY[0x24BEB3898])
  {
    v0 = (id)*MEMORY[0x24BEB3898];
    v1 = (void *)TCCAccessCopyInformation();
    if (v1)
    {
      v2 = v1;
      sub_2334E3FC0();
      sub_23361E3E4();

    }
    if (qword_256041CB0 != -1)
      swift_once();
    v3 = sub_23361DB80();
    __swift_project_value_buffer(v3, (uint64_t)qword_2560495E0);
    v4 = sub_23361DB68();
    v5 = sub_23361E768();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_233151000, v4, v5, "Unable to retrieve financial data TCC info.", v6, 2u);
      MEMORY[0x234934590](v6, -1, -1);
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_2334E3EA4()
{
  void *v0;
  id v1;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (*MEMORY[0x24BEB3818])
  {
    v1 = (id)*MEMORY[0x24BEB3818];
    if (objc_msgSend(v0, sel___swift_objectForKeyedSubscript_, v1))
    {
      sub_23361EC24();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v2, 0, sizeof(v2));
    }
    sub_23319F578((uint64_t)v2, (uint64_t)v3);
    if (v4)
    {
      swift_dynamicCast();

    }
    else
    {

      sub_23319F5C0((uint64_t)v3);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2334E3F84()
{
  FinancialDataTCC.allFinancialDataTCCInfos()();
}

unint64_t sub_2334E3F98(uint64_t a1, uint64_t a2)
{
  return (unint64_t)FinancialDataTCC.tccInfo(forBundleID:)(*(Swift::String *)&a1);
}

void sub_2334E3FAC(Swift::Bool a1, uint64_t a2, uint64_t a3)
{
  FinancialDataTCC.setGranted(_:forBundleID:)(a1, *(Swift::String *)&a2);
}

unint64_t sub_2334E3FC0()
{
  unint64_t result;

  result = qword_256048E78;
  if (!qword_256048E78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256048E78);
  }
  return result;
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.allFinancialDataTCCInfos()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.tccInfo(forBundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PrivacySettingsTCCCoordinating.setGranted(_:forBundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

ValueMetadata *type metadata accessor for PrivacySettingsTCCInfo()
{
  return &type metadata for PrivacySettingsTCCInfo;
}

ValueMetadata *type metadata accessor for FinancialDataTCC()
{
  return &type metadata for FinancialDataTCC;
}

uint64_t sub_2334E4034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23361E534();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23361E528();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_233168608(a1, (uint64_t *)&unk_254247060);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23361E474();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t BankConnectInstitutionAssetManager.requestInstitutionLogo(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v3[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604A668);
  v3[8] = swift_task_alloc();
  v4 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for RawBankConnectData.Institution(0);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334E4254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  sub_2331684BC(v2, v1, type metadata accessor for RawBankConnectData.Institution);
  v4 = sub_23361DB68();
  v5 = sub_23361E750();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(uint64_t **)(v0 + 120);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v44 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = *v7;
    v11 = v7[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_233164DCC(v10, v11, &v44);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Institution);
    _os_log_impl(&dword_233151000, v4, v5, "requestInstitutionLogo for institution ID: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 120), type metadata accessor for RawBankConnectData.Institution);
  }

  v13 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 64);
  sub_2331686A0(*(_QWORD *)(v0 + 40) + *(int *)(*(_QWORD *)(v0 + 112) + 24), v14, &qword_25604A668);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v13) == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 64), &qword_25604A668);
    v15 = sub_23361DB68();
    v16 = sub_23361E750();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_233151000, v15, v16, "requestInstitutionLogo: No icon payload.", v17, 2u);
      MEMORY[0x234934590](v17, -1, -1);
    }
    v18 = *(_QWORD *)(v0 + 32);

    v19 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_2334E8658(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 104));
  result = GSMainScreenScaleFactor();
  if ((~LODWORD(v21) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v21 <= -9.2234e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v21 < 9.2234e18)
  {
    v22 = *(_QWORD *)(v0 + 104);
    if ((uint64_t)v21 != 2)
      v22 += *(int *)(*(_QWORD *)(v0 + 72) + 20);
    v23 = *(_QWORD *)(v0 + 56);
    sub_2331686A0(v22, v23, &qword_254248700);
    v24 = sub_23361D340();
    *(_QWORD *)(v0 + 128) = v24;
    v25 = *(_QWORD *)(v24 - 8);
    *(_QWORD *)(v0 + 136) = v25;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
    {
      v39 = *(uint64_t **)(v0 + 40);
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v25 + 32))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56), v24);
      v41 = *v39;
      v40 = v39[1];
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v42;
      *v42 = v0;
      v42[1] = sub_2334E4810;
      return BankConnectInstitutionAssetManager.requestAsset(assetURL:institutionID:)(*(_QWORD *)(v0 + 32), v41, v40);
    }
    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 104);
    sub_233168608(*(_QWORD *)(v0 + 56), &qword_254248700);
    sub_2331684BC(v27, v26, type metadata accessor for RawBankConnectData.Institution.Icons);
    v28 = sub_23361DB68();
    v29 = sub_23361E768();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 96);
    v31 = *(_QWORD *)(v0 + 104);
    if (v30)
    {
      v33 = *(_QWORD *)(v0 + 88);
      v34 = (uint8_t *)swift_slowAlloc();
      v43 = v31;
      v35 = swift_slowAlloc();
      v44 = v35;
      *(_DWORD *)v34 = 136315138;
      sub_2331684BC(v32, v33, type metadata accessor for RawBankConnectData.Institution.Icons);
      v36 = sub_23361E1C8();
      *(_QWORD *)(v0 + 16) = sub_233164DCC(v36, v37, &v44);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500(v32, type metadata accessor for RawBankConnectData.Institution.Icons);
      _os_log_impl(&dword_233151000, v28, v29, "icon URL for screen scale is required in icons: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v35, -1, -1);
      MEMORY[0x234934590](v34, -1, -1);

      v38 = v43;
    }
    else
    {

      sub_233168500(v32, type metadata accessor for RawBankConnectData.Institution.Icons);
      v38 = v31;
    }
    sub_233168500(v38, type metadata accessor for RawBankConnectData.Institution.Icons);
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v25 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v24);
    goto LABEL_21;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_2334E4810()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2334E4868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 32);
  sub_233168500(*(_QWORD *)(v0 + 104), type metadata accessor for RawBankConnectData.Institution.Icons);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectInstitutionAssetManager.deleteAsset(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_2334E4928()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_233164DCC(v6, v5, &v15);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v3, "Asset deletion requested for institution id: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_QWORD *)(v0 + 24);
  v10 = *(_QWORD *)(v0 + 32);
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 112) + 16), sel_newBackgroundContext);
  v12 = (_QWORD *)swift_task_alloc();
  v12[2] = v9;
  v12[3] = v10;
  v12[4] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v13[2] = sub_2334E869C;
  v13[3] = v12;
  v13[4] = v11;
  sub_23361E960();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static BankConnectInstitutionAssetManagerError.== infix(_:_:)()
{
  return 1;
}

uint64_t BankConnectInstitutionAssetManagerError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t BankConnectInstitutionAssetManagerError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t BankConnectInstitutionAssetManager.__allocating_init(store:webServiceClientProvider:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + 160) = sub_233160B5C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v4 + 112) = a1;
  sub_23318B020(a2, v4 + 120);
  return v4;
}

uint64_t BankConnectInstitutionAssetManager.init(store:webServiceClientProvider:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 160) = sub_233160B5C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 112) = a1;
  sub_23318B020(a2, v2 + 120);
  return v2;
}

uint64_t BankConnectInstitutionAssetManager.requestAsset(assetURL:institutionID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v4[21] = swift_task_alloc();
  v5 = sub_23361D340();
  v4[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 + 64);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334E4F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  os_log_type_t v69[8];
  uint64_t v70;
  uint64_t v71;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = sub_23361DB80();
  *(_QWORD *)(v0 + 224) = __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 176);
  v11 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 152);
  if (v9)
  {
    type = v8;
    v14 = *(_QWORD *)(v0 + 144);
    v67 = v6;
    v15 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v71 = v65;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 120) = sub_233164DCC(v14, v13, &v71);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    sub_2334E87D4((unint64_t *)&qword_256042F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v16 = sub_23361F1D0();
    *(_QWORD *)(v0 + 128) = sub_233164DCC(v16, v17, &v71);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v18(v10, v12);
    _os_log_impl(&dword_233151000, v7, type, "Asset requested for institution id: %s url: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v65, -1, -1);
    v19 = v15;
    v6 = v67;
    MEMORY[0x234934590](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v18(v10, v12);
  }

  v20 = *(_QWORD *)(v0 + 160) + 160;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v20 + 16))
  {
    v22 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRetain();
    sub_2331E3D18(v22, v21);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(v0 + 200);
      v25 = *(_QWORD *)(v0 + 176);
      v26 = *(_QWORD *)(v0 + 136);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v6(v24, v26, v25);
      swift_bridgeObjectRetain_n();
      v27 = sub_23361DB68();
      v28 = sub_23361E750();
      v29 = os_log_type_enabled(v27, v28);
      v30 = *(_QWORD *)(v0 + 200);
      v31 = *(_QWORD *)(v0 + 176);
      v32 = *(_QWORD *)(v0 + 152);
      if (v29)
      {
        v33 = *(_QWORD *)(v0 + 144);
        v34 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        v71 = v70;
        *(_DWORD *)v34 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 104) = sub_233164DCC(v33, v32, &v71);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2080;
        sub_2334E87D4((unint64_t *)&qword_256042F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v35 = sub_23361F1D0();
        *(_QWORD *)(v0 + 112) = sub_233164DCC(v35, v36, &v71);
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        v18(v30, v31);
        _os_log_impl(&dword_233151000, v27, v28, "Already downloading asset for: %s url: %s. Returning.", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x234934590](v70, -1, -1);
        MEMORY[0x234934590](v34, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v18(v30, v31);
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    swift_bridgeObjectRelease();
  }
  v37 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 144);
  swift_endAccess();
  v39 = sub_2334E5814(v38, v37);
  v68 = v40;
  *(_QWORD *)v69 = v39;
  if (v40)
    sub_2334E5BEC();
  v41 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  v61 = v45;
  v62 = v41;
  v46 = *(_QWORD *)(v0 + 160);
  v47 = *(_QWORD *)(v0 + 136);
  typea = *(_QWORD *)(v0 + 152);
  v66 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 232) = os_transaction_create();
  sub_23361E51C();
  v48 = sub_23361E534();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v44, 0, 1, v48);
  v6(v41, v47, v45);
  v50 = sub_2334E87D4(&qword_256053050, v49, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectInstitutionAssetManager, (uint64_t)&protocol conformance descriptor for BankConnectInstitutionAssetManager);
  v51 = (*(unsigned __int8 *)(v42 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v52 = (v43 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  v54 = (char *)swift_allocObject();
  *((_QWORD *)v54 + 2) = v46;
  *((_QWORD *)v54 + 3) = v50;
  *((_QWORD *)v54 + 4) = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(&v54[v51], v62, v61);
  v55 = &v54[v52];
  *(_QWORD *)v55 = *(_QWORD *)v69;
  *((_QWORD *)v55 + 1) = v68;
  *(_QWORD *)&v54[v53] = 0x4014000000000000;
  v56 = (uint64_t *)&v54[(v53 + 15) & 0xFFFFFFFFFFFFFFF8];
  *v56 = v66;
  v56[1] = typea;
  swift_retain_n();
  swift_bridgeObjectRetain();
  v57 = sub_2334E4034(v44, (uint64_t)&unk_256053058, (uint64_t)v54);
  *(_QWORD *)(v0 + 240) = v57;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v71 = *(_QWORD *)v20;
  *(_QWORD *)v20 = 0x8000000000000000;
  sub_23328EF38(v57, v66, typea, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v20 = v71;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v59 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  *v59 = v0;
  v59[1] = sub_2334E5674;
  return sub_23361E558();
}

uint64_t sub_2334E5674()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_2334E87C8(*(id *)(v1 + 88), *(_BYTE *)(v1 + 96));
  return swift_task_switch();
}

uint64_t sub_2334E56D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  sub_23328DB38(v2, v1);
  swift_endAccess();
  swift_release();
  v3 = sub_23361DB68();
  v4 = sub_23361E750();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_233151000, v3, v4, "Releasing transaction for institution logo download.", v5, 2u);
    MEMORY[0x234934590](v5, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E5814(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22[2];
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v23 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    v22[0] = sub_233164DCC(a1, a2, &v23);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Asset data store etag request for id: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 112) + 16), sel_newBackgroundContext);
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A8);
  sub_23361E960();
  v13 = v23;
  v12 = v24;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_23361DB68();
  v15 = sub_23361E750();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = a1;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_DWORD *)v17 = 136315394;
    v22[0] = v18;
    swift_bridgeObjectRetain();
    v23 = sub_233164DCC(v16, a2, v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    v23 = v13;
    v24 = v12;
    swift_bridgeObjectRetain();
    v19 = sub_23361E1C8();
    v23 = sub_233164DCC(v19, v20, v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v14, v15, "Asset data store etag request for id: %s returning %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v18, -1, -1);
    MEMORY[0x234934590](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v13;
}

void sub_2334E5BEC()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 112) + 16), sel_newBackgroundContext);
  sub_23361E960();

}

uint64_t BankConnectInstitutionAssetManager.downloadAssetIfNecessary(fromAssetURL:institutionID:etag:timeoutSeconds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a4;
  v31 = a5;
  v32 = a2;
  v33 = a3;
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361E51C();
  v15 = sub_23361E534();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v17 = sub_2334E87D4(&qword_256053050, v16, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectInstitutionAssetManager, (uint64_t)&protocol conformance descriptor for BankConnectInstitutionAssetManager);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  v22 = v29;
  *((_QWORD *)v21 + 2) = v29;
  *((_QWORD *)v21 + 3) = v17;
  *((_QWORD *)v21 + 4) = v22;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v21[v18], v11, v8);
  v23 = &v21[v19];
  v24 = v31;
  *(_QWORD *)v23 = v30;
  *((_QWORD *)v23 + 1) = v24;
  *(double *)&v21[v20] = a6;
  v25 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  v26 = v33;
  *(_QWORD *)v25 = v32;
  *((_QWORD *)v25 + 1) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain_n();
  return sub_2334E4034((uint64_t)v14, (uint64_t)&unk_256053060, (uint64_t)v21);
}

uint64_t BankConnectInstitutionAssetManager.assetData(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_2334E60A4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 56);
  if (v4)
  {
    v18 = *(_QWORD *)(v0 + 48);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v19 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_233164DCC(v18, v5, &v19);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v3, "Asset data request for institution id: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v7, -1, -1);
    MEMORY[0x234934590](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v8 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 160);
  if (*(_QWORD *)(v9 + 16))
  {
    v11 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    v12 = sub_2331E3D18(v11, v10);
    if ((v13 & 1) != 0)
    {
      *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v12);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
      *v14 = v0;
      v14[1] = sub_2334E63BC;
      return sub_23361E540();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  v16 = sub_2334E64CC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  if (v17 >> 60 != 15)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  sub_2334E88D0();
  swift_allocError();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E63BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_2334E642C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  swift_release();
  v1 = sub_2334E64CC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  if (v2 >> 60 != 15)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  sub_2334E88D0();
  swift_allocError();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E64C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E64CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _DWORD *v20;
  uint64_t v22[2];

  v3 = v2;
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(a1, a2, v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Asset data store request data for id: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 112) + 16), sel_newBackgroundContext);
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256048128);
  sub_23361E960();
  v12 = v22[0];
  v13 = v22[1];
  swift_bridgeObjectRetain();
  if (v13 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23361DB68();
    v15 = sub_23361E750();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v22[0] = v17;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain();
      sub_233164DCC(a1, a2, v22);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v14, v15, "No asset data for id: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v17, -1, -1);
      MEMORY[0x234934590](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  else
  {
    sub_2331D4424(v12, v13);
    swift_bridgeObjectRetain();
    v18 = sub_23361DB68();
    v19 = sub_23361E750();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (_DWORD *)swift_slowAlloc();
      v22[0] = swift_slowAlloc();
      *v20 = 134218242;
      __asm { BR              X11 }
    }
    sub_2331B04E8(v12, v13);

    swift_bridgeObjectRelease_n();
  }
  return v12;
}

void sub_2334E6A04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInstitutionAsset();
  static ManagedInstitutionAsset.deleteAsset(institutionID:context:)(a1, a2, a3);
  if (!v3)
  {
    v9[0] = 0;
    if (objc_msgSend(a3, sel_save_, v9))
    {
      v7 = v9[0];
    }
    else
    {
      v8 = v9[0];
      sub_23361D1B4();

      swift_willThrow();
    }
  }
}

uint64_t sub_2334E6AE0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v9 + 144) = a9;
  *(_QWORD *)(v9 + 152) = v12;
  *(double *)(v9 + 136) = a1;
  *(_QWORD *)(v9 + 120) = a7;
  *(_QWORD *)(v9 + 128) = a8;
  *(_QWORD *)(v9 + 104) = a5;
  *(_QWORD *)(v9 + 112) = a6;
  *(_QWORD *)(v9 + 160) = type metadata accessor for BankConnectWebServiceInstitutionLogoRequest();
  *(_QWORD *)(v9 + 168) = swift_task_alloc();
  v10 = sub_23361D340();
  *(_QWORD *)(v9 + 176) = v10;
  *(_QWORD *)(v9 + 184) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334E6B78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, int *);
  uint64_t v37;

  if (qword_256041CA0 != -1)
    swift_once();
  v2 = v0[23];
  v1 = v0[24];
  v3 = v0[22];
  v4 = v0[14];
  v5 = sub_23361DB80();
  v0[25] = __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  v9 = os_log_type_enabled(v7, v8);
  v11 = v0[23];
  v10 = v0[24];
  v12 = v0[22];
  if (v9)
  {
    v13 = v0[17];
    v34 = v0[16];
    v33 = v0[15];
    v14 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v37 = v35;
    *(_DWORD *)v14 = 136315650;
    sub_2334E87D4((unint64_t *)&qword_256042F10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v15 = sub_23361F1D0();
    v0[9] = sub_233164DCC(v15, v16, &v37);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v14 + 12) = 2080;
    v0[6] = v33;
    v0[7] = v34;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A8);
    v17 = sub_23361E1C8();
    v0[11] = sub_233164DCC(v17, v18, &v37);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2048;
    v0[12] = v13;
    sub_23361EBC4();
    _os_log_impl(&dword_233151000, v7, v8, "downloadAssetIfNecessary called for url: %s etag: %s timeoutSeconds: %f).", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v35, -1, -1);
    MEMORY[0x234934590](v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(v0[24], v0[22]);
    swift_bridgeObjectRelease_n();
  }

  v19 = v0[21];
  v20 = v0[20];
  v21 = v0[17];
  v23 = v0[15];
  v22 = v0[16];
  v24 = (_QWORD *)v0[13];
  v6(v19, v0[14], v0[22]);
  v25 = (_QWORD *)(v19 + *(int *)(v20 + 20));
  *v25 = v23;
  v25[1] = v22;
  *(_QWORD *)(v19 + *(int *)(v20 + 24)) = v21;
  v26 = v24[18];
  v27 = v24[19];
  __swift_project_boxed_opaque_existential_1(v24 + 15, v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
  swift_bridgeObjectRetain();
  v29 = v28(v26, v27);
  v0[26] = v29;
  v30 = swift_task_alloc();
  v0[27] = v30;
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v19;
  v36 = (uint64_t (*)(uint64_t, int *))((char *)&dword_256057868 + dword_256057868);
  v31 = (_QWORD *)swift_task_alloc();
  v0[28] = v31;
  *v31 = v0;
  v31[1] = sub_2334E6F0C;
  return v36((uint64_t)(v0 + 2), (int *)&unk_256053088);
}

uint64_t sub_2334E6F0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2334E6F80()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain_n();
  if (v4 == 1)
  {
    v5 = sub_23361DB68();
    v6 = sub_23361E750();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 152);
    if (v7)
    {
      v9 = *(_QWORD *)(v0 + 144);
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v20 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_233164DCC(v9, v8, &v20);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v5, v6, "downloadAssetIfNecessary: asset is unchanged for institution id: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v11, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_release();

  }
  else
  {
    sub_233311B5C(v1, v2, v3, v4);
    v12 = sub_23361DB68();
    v13 = sub_23361E750();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 152);
    if (v14)
    {
      v18 = *(_QWORD *)(v0 + 144);
      v16 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v19;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 64) = sub_233164DCC(v18, v15, &v20);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v12, v13, "downloadAssetIfNecessary: received modified data for institution id: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v19, -1, -1);
      MEMORY[0x234934590](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_2334E738C(v1, v2, v3, v4, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    swift_release();
    sub_233311B8C(v1, v2, v3, v4);
    sub_23316BEA4(v1, v2);
    swift_bridgeObjectRelease();
  }
  sub_233168500(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectWebServiceInstitutionLogoRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E72C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectWebServiceInstitutionLogoRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334E7320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2331676FC;
  return BankConnectWebServiceClient.institutionLogo(for:)(a1, a3);
}

void sub_2334E738C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = v6;
  if (qword_256041CA0 != -1)
    swift_once();
  v12 = sub_23361DB80();
  __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain();
  sub_2331D1374(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2331D1374(a1, a2);
  swift_bridgeObjectRetain();
  v13 = sub_23361DB68();
  v14 = sub_23361E750();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v15 = 136315650;
    swift_bridgeObjectRetain();
    v22 = sub_233164DCC(a5, a6, &v23);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2048;
    __asm { BR              X9 }
  }
  sub_23316BEA4(a1, a2);
  swift_bridgeObjectRelease_n();
  sub_23316BEA4(a1, a2);

  swift_bridgeObjectRelease_n();
  v16 = objc_msgSend(*(id *)(*(_QWORD *)(v7 + 112) + 16), sel_newBackgroundContext);
  v21 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v21);
  sub_23361E960();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_23361DB68();
  v18 = sub_23361E750();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    v23 = sub_233164DCC(a5, a6, &v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v17, v18, "Asset saved for id: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v20, -1, -1);
    MEMORY[0x234934590](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t BankConnectInstitutionAssetManager.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BankConnectInstitutionAssetManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t BankConnectInstitutionAssetManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

void sub_2334E7AEC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  type metadata accessor for ManagedInstitutionAsset();
  v9 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, a3);
  if (v4)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v10 = sub_23361DB80();
    __swift_project_value_buffer(v10, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain();
    v11 = v4;
    swift_bridgeObjectRetain();
    v12 = v4;
    v13 = sub_23361DB68();
    v14 = sub_23361E768();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v25 = v17;
      *(_DWORD *)v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_233164DCC(a1, a2, &v25);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      v18 = v4;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_23361EBC4();
      *v16 = v24;

      _os_log_impl(&dword_233151000, v13, v14, "Error obtaining asset data for id: %s: %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x234934590](v17, -1, -1);
      MEMORY[0x234934590](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v21 = 0;
    goto LABEL_10;
  }
  v19 = v9;
  if (!v9)
  {
    v21 = 0;
LABEL_10:
    v23 = 0xF000000000000000;
    goto LABEL_11;
  }
  v20 = objc_msgSend(v9, sel_data);
  v21 = sub_23361D3C4();
  v23 = v22;

LABEL_11:
  *a4 = v21;
  a4[1] = v23;
}

void sub_2334E7DE0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  type metadata accessor for ManagedInstitutionAsset();
  v9 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, a3);
  if (v4)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v10 = sub_23361DB80();
    __swift_project_value_buffer(v10, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain();
    v11 = v4;
    swift_bridgeObjectRetain();
    v12 = v4;
    v13 = sub_23361DB68();
    v14 = sub_23361E768();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v26 = v17;
      *(_DWORD *)v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_233164DCC(a1, a2, &v26);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2112;
      v18 = v4;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_23361EBC4();
      *v16 = v25;

      _os_log_impl(&dword_233151000, v13, v14, "Error obtaining etag for id: %s: %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x234934590](v17, -1, -1);
      MEMORY[0x234934590](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_10;
  }
  v19 = v9;
  if (!v9)
  {
LABEL_10:
    *a4 = 0;
    a4[1] = 0;
    return;
  }
  v20 = objc_msgSend(v9, sel_etag);
  if (v20)
  {
    v21 = v20;
    v22 = sub_23361E150();
    v24 = v23;

  }
  else
  {

    v22 = 0;
    v24 = 0;
  }
  *a4 = v22;
  a4[1] = v24;
}

void sub_2334E80DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitutionAsset();
  v11 = static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, (uint64_t)a3);
  if (!v3)
  {
    v12 = (void *)v11;
    if (v11)
    {
      sub_23361D5F8();
      v13 = (void *)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      objc_msgSend(v12, sel_setLastRequestDate_, v13);

      v16[0] = 0;
      if (objc_msgSend(a3, sel_save_, v16))
      {
        v14 = v16[0];
      }
      else
      {
        v15 = v16[0];
        sub_23361D1B4();

        swift_willThrow();
      }

    }
  }
}

void sub_2334E8248(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  void *v8;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  os_log_type_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInstitutionAsset();
  v14 = (void *)static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(a1, a2, (uint64_t)a3);
  if (v8)
  {
    v15 = a1;
    if (qword_256041CA0 != -1)
      swift_once();
    v16 = sub_23361DB80();
    __swift_project_value_buffer(v16, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain();
    v17 = v8;
    swift_bridgeObjectRetain();
    v18 = v8;
    v19 = sub_23361DB68();
    v20 = sub_23361E768();
    if (os_log_type_enabled(v19, v20))
    {
      v32 = a6;
      v21 = swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      v36[0] = v31;
      *(_DWORD *)v21 = 136315394;
      swift_bridgeObjectRetain();
      sub_233164DCC(v15, a2, (uint64_t *)v36);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2112;
      v22 = v8;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      sub_23361EBC4();
      *v30 = v35;

      v23 = v20;
      a1 = v15;
      _os_log_impl(&dword_233151000, v19, v23, "Query for existing asset failed for id: %s. Error: %@", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v30, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      v24 = v21;
      a6 = v32;
      MEMORY[0x234934590](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      a1 = v15;
    }
    goto LABEL_10;
  }
  v25 = v14;
  if (!v14)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2331D1374(a7, a8);

    v25 = 0;
    goto LABEL_12;
  }
  v26 = v14;
  if (a6)
    a6 = (void *)sub_23361E12C();
  objc_msgSend(v25, sel_setEtag_, a6);

  v27 = (void *)sub_23361D3AC();
  objc_msgSend(v25, sel_setData_, v27);

LABEL_12:
  v36[0] = 0;
  if ((objc_msgSend(a3, sel_save_, v36) & 1) != 0)
  {
    v28 = v36[0];
  }
  else
  {
    v29 = v36[0];
    sub_23361D1B4();

    swift_willThrow();
  }

}

uint64_t sub_2334E8658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Institution.Icons(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2334E869C()
{
  uint64_t v0;

  sub_2334E6A04(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t type metadata accessor for BankConnectInstitutionAssetManager()
{
  return objc_opt_self();
}

uint64_t sub_2334E86DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(sub_23361D340() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = (uint64_t)v1 + v5;
  v12 = (_QWORD *)((char *)v1 + v6);
  v13 = *(double *)((char *)v1 + v7);
  v14 = *v12;
  v15 = v12[1];
  v16 = *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_23318C26C;
  return sub_2334E6AE0(v13, a1, v8, v9, v10, v11, v14, v15, v16);
}

void sub_2334E87C8(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_2334E87D4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x234934494](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23361D340();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2334E88D0()
{
  unint64_t result;

  result = qword_256053070;
  if (!qword_256053070)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectInstitutionAssetManagerError, &type metadata for BankConnectInstitutionAssetManagerError);
    atomic_store(result, (unint64_t *)&qword_256053070);
  }
  return result;
}

unint64_t sub_2334E8918()
{
  unint64_t result;

  result = qword_256053078;
  if (!qword_256053078)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectInstitutionAssetManagerError, &type metadata for BankConnectInstitutionAssetManagerError);
    atomic_store(result, &qword_256053078);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BankConnectInstitutionAssetManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334E899C + 4 * asc_233653C40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334E89BC + 4 * byte_233653C45[v4]))();
}

_BYTE *sub_2334E899C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334E89BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334E89C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334E89CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334E89D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334E89DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectInstitutionAssetManagerError()
{
  return &type metadata for BankConnectInstitutionAssetManagerError;
}

uint64_t method lookup function for BankConnectInstitutionAssetManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectInstitutionAssetManager.__allocating_init(store:webServiceClientProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_2334E8A0C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_2334E7AEC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_2334E8A28()
{
  uint64_t v0;

  sub_2334E80DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_2334E8A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 24);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_2331676FC;
  return BankConnectWebServiceClient.institutionLogo(for:)(a1, v4);
}

void sub_2334E8AC8()
{
  uint64_t v0;

  sub_2334E8248(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

void sub_2334E8AEC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_2334E7DE0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t InternalAccountBalanceAsyncSequence.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[24];
  uint64_t v21;
  _BYTE v22[40];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v20[-v7];
  sub_2331D7514(v1 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_accountID, (uint64_t)&v20[-v7]);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_historyToken);
  v10 = *(_BYTE *)(v1 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_isMonitoring);
  sub_233177068(v1 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_historyProvider, (uint64_t)v22);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_coreDataStore);
  sub_2331D7514((uint64_t)v8, (uint64_t)v6);
  sub_233177068((uint64_t)v22, (uint64_t)v20);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)&v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = *v14;
  v17 = v9;
  swift_retain();
  v18 = sub_2334E94E0((uint64_t)v6, (unint64_t)v9, v10, v16, 0xD000000000000020, 0x80000002336798C0, 0, v11);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  result = sub_2331D76B8((uint64_t)v8);
  *a1 = v18;
  return result;
}

uint64_t InternalAccountBalanceAsyncSequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2560486B8 + dword_2560486B8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return v5(a1);
}

uint64_t sub_2334E8D24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2560486B8 + dword_2560486B8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318C26C;
  return v5(a1);
}

uint64_t sub_2334E8D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = v4;
  v5[5] = a4;
  v5[3] = a1;
  if (a2)
  {
    swift_getObjectType();
    v6 = sub_23361E474();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v5[6] = v6;
  v5[7] = v8;
  return swift_task_switch();
}

uint64_t sub_2334E8E08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((char *)&dword_2560486B8 + dword_2560486B8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_2332B6674;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t InternalAccountBalanceAsyncSequence.deinit()
{
  uint64_t v0;

  sub_2331D76B8(v0 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_accountID);

  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_historyProvider);
  swift_release();
  return v0;
}

uint64_t InternalAccountBalanceAsyncSequence.__deallocating_deinit()
{
  uint64_t v0;

  sub_2331D76B8(v0 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_accountID);

  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10FinanceKit35InternalAccountBalanceAsyncSequence_historyProvider);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2334E8F24@<X0>(uint64_t *a1@<X8>)
{
  InternalAccountBalanceAsyncSequence.makeAsyncIterator()(a1);
  return swift_release();
}

uint64_t sub_2334E8F48(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)@<X0>(void *@<X0>, uint64_t@<X8>);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  os_activity_t v49;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v52 = a6;
  v54 = a5;
  LOBYTE(v11) = a3;
  v14 = sub_23361E900();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FinanceStore();
  v63 = &off_250487D20;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + qword_2560CD360) = 0;
  v62 = v17;
  v61[0] = a4;
  v18 = (char *)qword_2560CD368;
  *(_QWORD *)(a8 + qword_2560CD368) = 0;
  v19 = a8 + qword_2560CD3A0;
  v20 = qword_256041CB0;
  swift_retain();
  if (v20 != -1)
LABEL_25:
    swift_once();
  v21 = sub_23361DB80();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2560495E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v22, v21);
  v53 = a1;
  sub_2331D7514(a1, a8 + qword_2560CD380);
  *(_BYTE *)(a8 + 32) = v11 & 1;
  *(_QWORD *)(a8 + qword_2560CD358) = a7;
  v23 = (uint64_t (**)@<X0>(void *@<X0>, uint64_t@<X8>))(a8 + qword_2560CD390);
  *v23 = sub_2334E97F0;
  v23[1] = 0;
  v24 = *(void **)&v18[a8];
  *(_QWORD *)&v18[a8] = a2;
  swift_retain();

  v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v25;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v26 = swift_allocObject();
  sub_23318B020(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v27 = (_QWORD *)(a8 + qword_2560CD370);
  *v27 = &unk_2560443D8;
  v27[1] = v26;
  v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v28;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v29 = swift_allocObject();
  sub_23318B020(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v30 = (_QWORD *)(a8 + qword_2560CD378);
  *v30 = &unk_256048730;
  v30[1] = v29;
  *(_QWORD *)(a8 + qword_2560CD388) = v54;
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23361E90C();

  sub_23361E8E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_2560CD348, v16, v56);
  v32 = objc_msgSend(*(id *)(a7 + 16), sel_persistentStoreCoordinator);
  v33 = objc_msgSend(v32, sel_persistentStores);

  sub_2331D767C();
  a1 = sub_23361E3F0();

  if (!(a1 >> 62))
  {
    a7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    v41 = 0;
    v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a7 = sub_23361EF30();
  if (!a7)
    goto LABEL_15;
LABEL_4:
  a2 = a1 & 0xC000000000000001;
  v11 = 4;
  while (1)
  {
    v19 = v11 - 4;
    if (a2)
      v34 = (char *)MEMORY[0x234933120](v11 - 4, a1);
    else
      v34 = (char *)*(id *)(a1 + 8 * v11);
    v18 = v34;
    v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v35 = objc_msgSend(v34, sel_configurationName);
    v16 = (char *)sub_23361E150();
    v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      break;

    ++v11;
    if (v17 == a7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v40 = objc_msgSend(v18, sel_identifier);

  if (!v40)
    goto LABEL_20;
  v41 = sub_23361E150();
  v43 = v42;

LABEL_21:
  v44 = v52;
  v45 = v53;
  v46 = (uint64_t *)(a8 + qword_2560CD350);
  *v46 = v41;
  v46[1] = v43;
  *(_QWORD *)(a8 + qword_2560CD398) = v44;
  v47 = qword_254246ED0;
  v48 = v44;
  if (v47 != -1)
    swift_once();
  v49 = _os_activity_create(&dword_233151000, "FinancialDataAsyncIterator", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_2331D76B8(v45);
  *(_QWORD *)(a8 + qword_2560CD3A8) = v49;
  return a8;
}

uint64_t sub_2334E94E0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t inited;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];
  uint64_t v29;
  _QWORD v30[5];

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30[3] = type metadata accessor for FinanceStore();
  v30[4] = &off_250487D20;
  v30[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542465E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  strcpy((char *)(inited + 32), "AccountBalance");
  *(_BYTE *)(inited + 47) = -18;
  *(_QWORD *)(inited + 48) = a5;
  *(_QWORD *)(inited + 56) = a6;
  v20 = sub_23315F950(inited);
  sub_2331D7514(a1, (uint64_t)v18);
  sub_233177068((uint64_t)v30, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256053180);
  v21 = swift_allocObject();
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)&v28[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  v26 = sub_2334E8F48((unint64_t)v18, a2, a3, *v24, v20, a7, a8, v21);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  sub_2331D76B8(a1);
  return v26;
}

unint64_t sub_2334E96B4()
{
  unint64_t result;

  result = qword_2560530A8;
  if (!qword_2560530A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InternalAccountBalanceAsyncSequence.Iterator, &type metadata for InternalAccountBalanceAsyncSequence.Iterator);
    atomic_store(result, (unint64_t *)&qword_2560530A8);
  }
  return result;
}

uint64_t sub_2334E96F8()
{
  return type metadata accessor for InternalAccountBalanceAsyncSequence();
}

uint64_t type metadata accessor for InternalAccountBalanceAsyncSequence()
{
  uint64_t result;

  result = qword_2560530D8;
  if (!qword_2560530D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2334E973C()
{
  unint64_t v0;

  sub_2332C25A4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for InternalAccountBalanceAsyncSequence()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for InternalAccountBalanceAsyncSequence.Iterator()
{
  return &type metadata for InternalAccountBalanceAsyncSequence.Iterator;
}

uint64_t sub_2334E97F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalAccountBalance.init(_:)(a1, a2);
}

uint64_t sub_2334E9820()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t RawOrderFulfillment.lineItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2334E99D8(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v11 = *v4;
    swift_bridgeObjectRetain();
    v12 = (uint64_t)v4;
    v13 = type metadata accessor for RawOrderPickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v11 = *v7;
    swift_bridgeObjectRetain();
    v12 = (uint64_t)v7;
    v13 = type metadata accessor for RawOrderShippingFulfillment;
  }
  sub_233168500(v12, (uint64_t (*)(_QWORD))v13);
  return v11;
}

uint64_t type metadata accessor for RawOrderFulfillment()
{
  uint64_t result;

  result = qword_254246018;
  if (!qword_254246018)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2334E99D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawOrderFulfillment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t RawOrderFulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2334E99D8(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v11 = *(_QWORD *)&v4[*(int *)(v2 + 60)];
    swift_bridgeObjectRetain();
    v12 = (uint64_t)v4;
    v13 = type metadata accessor for RawOrderPickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v11 = *(_QWORD *)&v7[*(int *)(v5 + 64)];
    swift_bridgeObjectRetain();
    v12 = (uint64_t)v7;
    v13 = type metadata accessor for RawOrderShippingFulfillment;
  }
  sub_233168500(v12, (uint64_t (*)(_QWORD))v13);
  return v11;
}

unint64_t Array<A>.pickupFulfillments.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053188);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for RawOrderPickupFulfillment();
  v5 = *(_QWORD *)(v33 - 8);
  v6 = MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v31 = (uint64_t)v28 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v30 = (uint64_t)v28 - v11;
  v34 = type metadata accessor for RawOrderFulfillment();
  v12 = MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v28 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x24BEE4AF8];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v32 = *(_QWORD *)(v15 + 72);
  v28[1] = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v29 = v8;
  do
  {
    sub_2334E99D8(v19, (uint64_t)v17);
    sub_2334E99D8((uint64_t)v17, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = v31;
      sub_233168580((uint64_t)v14, v31, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      sub_233168580(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v22 = 0;
    }
    else
    {
      sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      v22 = 1;
    }
    v23 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, v22, 1, v33);
    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v23) == 1)
    {
      sub_233168608((uint64_t)v4, &qword_256053188);
    }
    else
    {
      v24 = v30;
      sub_233168580((uint64_t)v4, v30, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      sub_233168580(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_2334A5C54(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v26 = *(_QWORD *)(v20 + 16);
      v25 = *(_QWORD *)(v20 + 24);
      if (v26 >= v25 >> 1)
        v20 = sub_2334A5C54(v25 > 1, v26 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v26 + 1;
      v8 = v29;
      sub_233168580((uint64_t)v29, v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    }
    v19 += v32;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t Array<A>.shippingFulfillments.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256052AE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for RawOrderShippingFulfillment();
  v5 = *(_QWORD *)(v33 - 8);
  v6 = MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v31 = (uint64_t)v28 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v30 = (uint64_t)v28 - v11;
  v34 = type metadata accessor for RawOrderFulfillment();
  v12 = MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v28 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x24BEE4AF8];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v32 = *(_QWORD *)(v15 + 72);
  v28[1] = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v29 = v8;
  do
  {
    sub_2334E99D8(v19, (uint64_t)v17);
    sub_2334E99D8((uint64_t)v17, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      v21 = 1;
    }
    else
    {
      v22 = v31;
      sub_233168580((uint64_t)v14, v31, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      sub_233168580(v22, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v21 = 0;
    }
    v23 = v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, v21, 1, v33);
    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v23) == 1)
    {
      sub_233168608((uint64_t)v4, &qword_256052AE0);
    }
    else
    {
      v24 = v30;
      sub_233168580((uint64_t)v4, v30, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      sub_233168580(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_2334A5C68(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v26 = *(_QWORD *)(v20 + 16);
      v25 = *(_QWORD *)(v20 + 24);
      if (v26 >= v25 >> 1)
        v20 = sub_2334A5C68(v25 > 1, v26 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v26 + 1;
      v8 = v29;
      sub_233168580((uint64_t)v29, v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    }
    v19 += v32;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t RawOrderFulfillment.DecodingConfiguration.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4B08];
  return result;
}

BOOL RawOrderFulfillment.isStatusTerminal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned int v11;
  unsigned int v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2334E99D8(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v11 = v4[8];
    sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    if (v11 < 5)
      return (v11 & 0x1F) == 3;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v13 = v7[40];
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    if (v13 < 7)
      return (0x24u >> v13) & 1;
  }
  return 1;
}

uint64_t sub_2334EA3BC(char *a1, char *a2)
{
  return sub_233227064(*a1, *a2);
}

uint64_t sub_2334EA3C8()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334EA444()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334EA49C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334EA514@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2334EA570(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x676E697070696873;
  if (*v1)
    v2 = 0x70756B636970;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2334EA5AC()
{
  sub_2334EDE30();
  return sub_23361E390();
}

uint64_t sub_2334EA608()
{
  sub_2334EDE30();
  return sub_23361E354();
}

uint64_t sub_2334EA654()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2334EA6B0()
{
  return sub_23361E0A8();
}

uint64_t sub_2334EA6D4()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2334EA72C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2334EA77C(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6C6C69666C7566;
  a1[1] = 0xEF65707954746E65;
}

uint64_t sub_2334EA7A4()
{
  return 0x6D6C6C69666C7566;
}

uint64_t sub_2334EA7C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2334EA81C()
{
  sub_2334EB270();
  return sub_23361F428();
}

uint64_t sub_2334EA844()
{
  sub_2334EB270();
  return sub_23361F434();
}

uint64_t RawOrderFulfillment.DecodingConfiguration.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B08];
  return result;
}

uint64_t RawOrderFulfillment.DecodingConfiguration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RawOrderFulfillment.DecodingConfiguration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RawOrderFulfillment.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD *v32;

  v29 = a3;
  v30 = a2;
  v5 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053190);
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_2334EB270();
  sub_23361F3EC();
  if (v3)
  {
    swift_release();
  }
  else
  {
    v17 = v10;
    v18 = (uint64_t)v27;
    v25 = v15;
    v26 = v13;
    v19 = v29;
    v20 = v30;
    sub_2334EB2B4();
    v21 = v28;
    sub_23361F068();
    if ((v31[0] & 1) != 0)
    {
      sub_233177068((uint64_t)v32, (uint64_t)v31);
      RawOrderPickupFulfillment.init(from:configuration:)(v31, v20, v18);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v21);
      v23 = (uint64_t)v25;
      sub_233168580(v18, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    }
    else
    {
      sub_233177068((uint64_t)v32, (uint64_t)v31);
      RawOrderShippingFulfillment.init(from:configuration:)(v31, v20, (uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v21);
      v23 = (uint64_t)v25;
      sub_233168580((uint64_t)v9, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    }
    swift_storeEnumTagMultiPayload();
    sub_233168580(v23, v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
}

uint64_t RawOrderFulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v2 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v19 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560531A8);
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334EB270();
  sub_23361F410();
  sub_2334E99D8(v21, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = v19;
    sub_233168580((uint64_t)v9, v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v24 = 1;
    sub_2334EB2F8();
    v14 = v22;
    sub_23361F17C();
    if (!v14)
      RawOrderPickupFulfillment.encode(to:)(a1);
    v15 = type metadata accessor for RawOrderPickupFulfillment;
    v16 = v13;
  }
  else
  {
    sub_233168580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v23 = 0;
    sub_2334EB2F8();
    v17 = v22;
    sub_23361F17C();
    if (!v17)
      RawOrderShippingFulfillment.encode(to:)(a1);
    v15 = type metadata accessor for RawOrderShippingFulfillment;
    v16 = (uint64_t)v6;
  }
  sub_233168500(v16, (uint64_t (*)(_QWORD))v15);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v10);
}

uint64_t sub_2334EADF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return RawOrderFulfillment.init(from:configuration:)(a1, *a2, a3);
}

uint64_t sub_2334EAE0C(_QWORD *a1)
{
  return RawOrderFulfillment.encode(to:)(a1);
}

uint64_t RawOrderFulfillment.pickupFulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2334E99D8(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v7 = type metadata accessor for RawOrderPickupFulfillment();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v9 = type metadata accessor for RawOrderPickupFulfillment();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t RawOrderFulfillment.shippingFulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2334E99D8(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v7 = type metadata accessor for RawOrderShippingFulfillment();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    sub_233168580((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v9 = type metadata accessor for RawOrderShippingFulfillment();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
}

uint64_t _s10FinanceKit19RawOrderFulfillmentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for RawOrderFulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046328);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2334E99D8(a1, (uint64_t)v19);
  sub_2334E99D8(a2, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2334E99D8((uint64_t)v19, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v20, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v21 = _s10FinanceKit25RawOrderPickupFulfillmentV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v6);
      sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for RawOrderPickupFulfillment;
LABEL_9:
      sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
      sub_233168500((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      return v21 & 1;
    }
    v24 = type metadata accessor for RawOrderPickupFulfillment;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2334E99D8((uint64_t)v19, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v21 = _s10FinanceKit27RawOrderShippingFulfillmentV2eeoiySbAC_ACtFZ_0((uint64_t)v15, v9);
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for RawOrderShippingFulfillment;
      goto LABEL_9;
    }
    v24 = type metadata accessor for RawOrderShippingFulfillment;
    v25 = (uint64_t)v15;
  }
  sub_233168500(v25, (uint64_t (*)(_QWORD))v24);
  sub_233168608((uint64_t)v19, &qword_256046328);
  v21 = 0;
  return v21 & 1;
}

unint64_t sub_2334EB270()
{
  unint64_t result;

  result = qword_256053198;
  if (!qword_256053198)
  {
    result = MEMORY[0x234934494](&unk_2336541F4, &type metadata for RawOrderFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053198);
  }
  return result;
}

unint64_t sub_2334EB2B4()
{
  unint64_t result;

  result = qword_2560531A0;
  if (!qword_2560531A0)
  {
    result = MEMORY[0x234934494](&unk_2336541CC, &type metadata for RawOrderFulfillment.FulfillmentType);
    atomic_store(result, (unint64_t *)&qword_2560531A0);
  }
  return result;
}

unint64_t sub_2334EB2F8()
{
  unint64_t result;

  result = qword_2560531B0;
  if (!qword_2560531B0)
  {
    result = MEMORY[0x234934494](&unk_2336541A4, &type metadata for RawOrderFulfillment.FulfillmentType);
    atomic_store(result, (unint64_t *)&qword_2560531B0);
  }
  return result;
}

uint64_t sub_2334EB33C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for RawOrderFulfillment(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(const void *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(const void *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  uint64_t v114;
  uint64_t v116;
  void *__dst;
  unsigned int (*v118)(const void *, uint64_t, uint64_t);
  int *v119;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload != 1)
    {
      v16 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v16;
      v17 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v17;
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      v18 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v18;
      v19 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v19;
      v20 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v20;
      v119 = (int *)type metadata accessor for RawOrderShippingFulfillment();
      v21 = v119[11];
      __dst = (void *)(a1 + v21);
      v22 = (char *)a2 + v21;
      v23 = sub_23361D340();
      v116 = *(_QWORD *)(v23 - 8);
      v118 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v116 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v118(v22, 1, v23))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v116 + 16))(__dst, v22, v23);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v116 + 56))(__dst, 0, 1, v23);
      }
      v48 = v119[12];
      v49 = a1 + v48;
      v50 = (uint64_t)a2 + v48;
      v51 = *(uint64_t *)((char *)a2 + v48 + 8);
      if (v51 == 1)
      {
        v52 = *(_OWORD *)(v50 + 112);
        *(_OWORD *)(v49 + 96) = *(_OWORD *)(v50 + 96);
        *(_OWORD *)(v49 + 112) = v52;
        *(_OWORD *)(v49 + 128) = *(_OWORD *)(v50 + 128);
        *(_QWORD *)(v49 + 144) = *(_QWORD *)(v50 + 144);
        v53 = *(_OWORD *)(v50 + 48);
        *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
        *(_OWORD *)(v49 + 48) = v53;
        v54 = *(_OWORD *)(v50 + 80);
        *(_OWORD *)(v49 + 64) = *(_OWORD *)(v50 + 64);
        *(_OWORD *)(v49 + 80) = v54;
        v55 = *(_OWORD *)(v50 + 16);
        *(_OWORD *)v49 = *(_OWORD *)v50;
        *(_OWORD *)(v49 + 16) = v55;
      }
      else
      {
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *(_QWORD *)(v49 + 8) = v51;
        v56 = *(_QWORD *)(v50 + 24);
        *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
        *(_QWORD *)(v49 + 24) = v56;
        v57 = *(_QWORD *)(v50 + 40);
        *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
        *(_QWORD *)(v49 + 40) = v57;
        v58 = *(_QWORD *)(v50 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v58 == 1)
        {
          v59 = *(_OWORD *)(v50 + 128);
          *(_OWORD *)(v49 + 112) = *(_OWORD *)(v50 + 112);
          *(_OWORD *)(v49 + 128) = v59;
          *(_QWORD *)(v49 + 144) = *(_QWORD *)(v50 + 144);
          v60 = *(_OWORD *)(v50 + 64);
          *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
          *(_OWORD *)(v49 + 64) = v60;
          v61 = *(_OWORD *)(v50 + 96);
          *(_OWORD *)(v49 + 80) = *(_OWORD *)(v50 + 80);
          *(_OWORD *)(v49 + 96) = v61;
        }
        else
        {
          v77 = *(_QWORD *)(v50 + 56);
          v78 = *(_QWORD *)(v50 + 64);
          *(_QWORD *)(v49 + 48) = v58;
          *(_QWORD *)(v49 + 56) = v77;
          v79 = *(_QWORD *)(v50 + 72);
          v80 = *(_QWORD *)(v50 + 80);
          *(_QWORD *)(v49 + 64) = v78;
          *(_QWORD *)(v49 + 72) = v79;
          v81 = *(_QWORD *)(v50 + 88);
          v82 = *(_QWORD *)(v50 + 96);
          *(_QWORD *)(v49 + 80) = v80;
          *(_QWORD *)(v49 + 88) = v81;
          v83 = *(_QWORD *)(v50 + 104);
          v84 = *(_QWORD *)(v50 + 112);
          *(_QWORD *)(v49 + 96) = v82;
          *(_QWORD *)(v49 + 104) = v83;
          v85 = *(_QWORD *)(v50 + 120);
          v86 = *(_QWORD *)(v50 + 128);
          *(_QWORD *)(v49 + 112) = v84;
          *(_QWORD *)(v49 + 120) = v85;
          v87 = *(_QWORD *)(v50 + 136);
          v88 = *(_QWORD *)(v50 + 144);
          *(_QWORD *)(v49 + 128) = v86;
          *(_QWORD *)(v49 + 136) = v87;
          *(_QWORD *)(v49 + 144) = v88;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      v89 = v119[13];
      v90 = (void *)(a1 + v89);
      v91 = (char *)a2 + v89;
      v92 = sub_23361D634();
      v93 = *(_QWORD *)(v92 - 8);
      v94 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48);
      if (v94(v91, 1, v92))
      {
        v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
      }
      v96 = v119[14];
      v97 = (void *)(a1 + v96);
      v98 = (char *)a2 + v96;
      v99 = type metadata accessor for Duration();
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v102 = sub_23361CD40();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v97, v98, v102);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      }
      v103 = v119[15];
      v104 = (void *)(a1 + v103);
      v105 = (char *)a2 + v103;
      if (v94((char *)a2 + v103, 1, v92))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v104, v105, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v104, 0, 1, v92);
      }
      v107 = v119[16];
      v108 = (_QWORD *)(a1 + v107);
      v109 = (uint64_t *)((char *)a2 + v107);
      v110 = v109[1];
      *v108 = *v109;
      v108[1] = v110;
      v111 = v119[17];
      v112 = (void *)(a1 + v111);
      v113 = (char *)a2 + v111;
      swift_bridgeObjectRetain();
      if (v94(v113, 1, v92))
      {
        v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v112, v113, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v112, 0, 1, v92);
      }
      *(_BYTE *)(a1 + v119[18]) = *((_BYTE *)a2 + v119[18]);
      goto LABEL_40;
    }
    v7 = a2[4];
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      v9 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v9;
      *(_QWORD *)(a1 + 128) = a2[16];
      v10 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v10;
      v11 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v11;
      v12 = a2[21];
      if (v12)
      {
LABEL_5:
        v13 = a2[18];
        *(_QWORD *)(a1 + 136) = a2[17];
        *(_QWORD *)(a1 + 144) = v13;
        *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
        *(_QWORD *)(a1 + 160) = a2[20];
        *(_QWORD *)(a1 + 168) = v12;
        v14 = a2[23];
        *(_QWORD *)(a1 + 176) = a2[22];
        *(_QWORD *)(a1 + 184) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)a2 + 202);
        v38 = a2[29];
        *(_QWORD *)(a1 + 224) = a2[28];
        *(_QWORD *)(a1 + 232) = v38;
        v39 = a2[31];
        *(_QWORD *)(a1 + 240) = a2[30];
        *(_QWORD *)(a1 + 248) = v39;
        v40 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v41 = v40[12];
        v42 = (void *)(a1 + v41);
        v43 = (char *)a2 + v41;
        v44 = sub_23361D634();
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46(v43, 1, v44))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        v62 = v40[13];
        v63 = (void *)(a1 + v62);
        v64 = (char *)a2 + v62;
        v65 = type metadata accessor for Duration();
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v68 = sub_23361CD40();
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v63, v64, v68);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        v69 = v40[14];
        v70 = (void *)(a1 + v69);
        v71 = (char *)a2 + v69;
        if (v46((char *)a2 + v69, 1, v44))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v70, v71, v44);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v70, 0, 1, v44);
        }
        v73 = v40[15];
        v74 = (_QWORD *)(a1 + v73);
        v75 = (uint64_t *)((char *)a2 + v73);
        v76 = v75[1];
        *v74 = *v75;
        v74[1] = v76;
        swift_bridgeObjectRetain();
LABEL_40:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      v25 = a2[5];
      v26 = a2[6];
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = v25;
      v27 = a2[7];
      v28 = a2[8];
      *(_QWORD *)(a1 + 48) = v26;
      *(_QWORD *)(a1 + 56) = v27;
      v29 = a2[9];
      v30 = a2[10];
      *(_QWORD *)(a1 + 64) = v28;
      *(_QWORD *)(a1 + 72) = v29;
      v31 = a2[11];
      v32 = a2[12];
      *(_QWORD *)(a1 + 80) = v30;
      *(_QWORD *)(a1 + 88) = v31;
      v33 = a2[13];
      v34 = a2[14];
      *(_QWORD *)(a1 + 96) = v32;
      *(_QWORD *)(a1 + 104) = v33;
      v35 = a2[15];
      v36 = a2[16];
      *(_QWORD *)(a1 + 112) = v34;
      *(_QWORD *)(a1 + 120) = v35;
      *(_QWORD *)(a1 + 128) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = a2[21];
      if (v12)
        goto LABEL_5;
    }
    v37 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v37;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_QWORD *)(a1 + 184) = a2[23];
    goto LABEL_11;
  }
  v15 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for RawOrderFulfillment(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 32) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = (int *)type metadata accessor for RawOrderPickupFulfillment();
    v4 = a1 + v3[12];
    v5 = sub_23361D634();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = a1 + v3[13];
    v9 = type metadata accessor for Duration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      v10 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    }
    v11 = a1 + v3[14];
    if (!v7(v11, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (int *)type metadata accessor for RawOrderShippingFulfillment();
    v14 = a1 + v13[11];
    v15 = sub_23361D340();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = a1 + v13[12];
    if (*(_QWORD *)(v17 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v17 + 48) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v18 = a1 + v13[13];
    v19 = sub_23361D634();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    if (!v21(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v22 = a1 + v13[14];
    v23 = type metadata accessor for Duration();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
    {
      v24 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
    }
    v25 = a1 + v13[15];
    if (!v21(v25, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v19);
    swift_bridgeObjectRelease();
    v26 = a1 + v13[17];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v21)(v26, 1, v19);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v26, v19);
  }
  return result;
}

uint64_t initializeWithCopy for RawOrderFulfillment(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(const void *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(const void *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  const void *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v114;
  unsigned int (*v115)(const void *, uint64_t, uint64_t);
  void *__dst;
  int *v117;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5 == 1)
    {
      v7 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v7;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      v10 = *(_QWORD *)(a2 + 168);
      if (v10)
      {
LABEL_4:
        v11 = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = v11;
        *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = v10;
        v12 = *(_QWORD *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_9:
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        v36 = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = v36;
        v37 = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = v37;
        v38 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v39 = v38[12];
        v40 = (void *)(a1 + v39);
        v41 = (const void *)(a2 + v39);
        v42 = sub_23361D634();
        v43 = *(_QWORD *)(v42 - 8);
        v44 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v44(v41, 1, v42))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        v60 = v38[13];
        v61 = (void *)(a1 + v60);
        v62 = (const void *)(a2 + v60);
        v63 = type metadata accessor for Duration();
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v66 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v61, v62, v66);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v67 = v38[14];
        v68 = (void *)(a1 + v67);
        v69 = (const void *)(a2 + v67);
        if (v44((const void *)(a2 + v67), 1, v42))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v68, v69, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v68, 0, 1, v42);
        }
        v71 = v38[15];
        v72 = (_QWORD *)(a1 + v71);
        v73 = (_QWORD *)(a2 + v71);
        v74 = v73[1];
        *v72 = *v73;
        v72[1] = v74;
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
    }
    else
    {
      v23 = *(_QWORD *)(a2 + 40);
      v24 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = v23;
      v25 = *(_QWORD *)(a2 + 56);
      v26 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 48) = v24;
      *(_QWORD *)(a1 + 56) = v25;
      v27 = *(_QWORD *)(a2 + 72);
      v28 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 64) = v26;
      *(_QWORD *)(a1 + 72) = v27;
      v29 = *(_QWORD *)(a2 + 88);
      v30 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 80) = v28;
      *(_QWORD *)(a1 + 88) = v29;
      v31 = *(_QWORD *)(a2 + 104);
      v32 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 96) = v30;
      *(_QWORD *)(a1 + 104) = v31;
      v33 = *(_QWORD *)(a2 + 120);
      v34 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 112) = v32;
      *(_QWORD *)(a1 + 120) = v33;
      *(_QWORD *)(a1 + 128) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = *(_QWORD *)(a2 + 168);
      if (v10)
        goto LABEL_4;
    }
    v35 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v35;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v13;
  v14 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v15 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v15;
  v16 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v16;
  v17 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v17;
  v18 = type metadata accessor for RawOrderShippingFulfillment();
  v19 = *(int *)(v18 + 44);
  __dst = (void *)(a1 + v19);
  v117 = (int *)v18;
  v20 = (const void *)(a2 + v19);
  v21 = sub_23361D340();
  v114 = *(_QWORD *)(v21 - 8);
  v115 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v114 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v115(v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v114 + 16))(__dst, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v114 + 56))(__dst, 0, 1, v21);
  }
  v46 = v117[12];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a2 + v46 + 8);
  if (v49 == 1)
  {
    v50 = *(_OWORD *)(v48 + 112);
    *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
    *(_OWORD *)(v47 + 112) = v50;
    *(_OWORD *)(v47 + 128) = *(_OWORD *)(v48 + 128);
    *(_QWORD *)(v47 + 144) = *(_QWORD *)(v48 + 144);
    v51 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v51;
    v52 = *(_OWORD *)(v48 + 80);
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(_OWORD *)(v47 + 80) = v52;
    v53 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v53;
  }
  else
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *(_QWORD *)(v47 + 8) = v49;
    v54 = *(_QWORD *)(v48 + 24);
    *(_QWORD *)(v47 + 16) = *(_QWORD *)(v48 + 16);
    *(_QWORD *)(v47 + 24) = v54;
    v55 = *(_QWORD *)(v48 + 40);
    *(_QWORD *)(v47 + 32) = *(_QWORD *)(v48 + 32);
    *(_QWORD *)(v47 + 40) = v55;
    v56 = *(_QWORD *)(v48 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56 == 1)
    {
      v57 = *(_OWORD *)(v48 + 128);
      *(_OWORD *)(v47 + 112) = *(_OWORD *)(v48 + 112);
      *(_OWORD *)(v47 + 128) = v57;
      *(_QWORD *)(v47 + 144) = *(_QWORD *)(v48 + 144);
      v58 = *(_OWORD *)(v48 + 64);
      *(_OWORD *)(v47 + 48) = *(_OWORD *)(v48 + 48);
      *(_OWORD *)(v47 + 64) = v58;
      v59 = *(_OWORD *)(v48 + 96);
      *(_OWORD *)(v47 + 80) = *(_OWORD *)(v48 + 80);
      *(_OWORD *)(v47 + 96) = v59;
    }
    else
    {
      v75 = *(_QWORD *)(v48 + 56);
      v76 = *(_QWORD *)(v48 + 64);
      *(_QWORD *)(v47 + 48) = v56;
      *(_QWORD *)(v47 + 56) = v75;
      v77 = *(_QWORD *)(v48 + 72);
      v78 = *(_QWORD *)(v48 + 80);
      *(_QWORD *)(v47 + 64) = v76;
      *(_QWORD *)(v47 + 72) = v77;
      v79 = *(_QWORD *)(v48 + 88);
      v80 = *(_QWORD *)(v48 + 96);
      *(_QWORD *)(v47 + 80) = v78;
      *(_QWORD *)(v47 + 88) = v79;
      v81 = *(_QWORD *)(v48 + 104);
      v82 = *(_QWORD *)(v48 + 112);
      *(_QWORD *)(v47 + 96) = v80;
      *(_QWORD *)(v47 + 104) = v81;
      v83 = *(_QWORD *)(v48 + 120);
      v84 = *(_QWORD *)(v48 + 128);
      *(_QWORD *)(v47 + 112) = v82;
      *(_QWORD *)(v47 + 120) = v83;
      v85 = *(_QWORD *)(v48 + 136);
      v86 = *(_QWORD *)(v48 + 144);
      *(_QWORD *)(v47 + 128) = v84;
      *(_QWORD *)(v47 + 136) = v85;
      *(_QWORD *)(v47 + 144) = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v87 = v117[13];
  v88 = (void *)(a1 + v87);
  v89 = (const void *)(a2 + v87);
  v90 = sub_23361D634();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48);
  if (v92(v89, 1, v90))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v88, v89, v90);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
  }
  v94 = v117[14];
  v95 = (void *)(a1 + v94);
  v96 = (const void *)(a2 + v94);
  v97 = type metadata accessor for Duration();
  v98 = *(_QWORD *)(v97 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    v100 = sub_23361CD40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v95, v96, v100);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
  }
  v101 = v117[15];
  v102 = (void *)(a1 + v101);
  v103 = (const void *)(a2 + v101);
  if (v92((const void *)(a2 + v101), 1, v90))
  {
    v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v102, v103, v90);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v102, 0, 1, v90);
  }
  v105 = v117[16];
  v106 = (_QWORD *)(a1 + v105);
  v107 = (_QWORD *)(a2 + v105);
  v108 = v107[1];
  *v106 = *v107;
  v106[1] = v108;
  v109 = v117[17];
  v110 = (void *)(a1 + v109);
  v111 = (const void *)(a2 + v109);
  swift_bridgeObjectRetain();
  if (v92(v111, 1, v90))
  {
    v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v110, v111, v90);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v110, 0, 1, v90);
  }
  *(_BYTE *)(a1 + v117[18]) = *(_BYTE *)(a2 + v117[18]);
LABEL_38:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for RawOrderFulfillment(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(const void *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  uint64_t v84;
  unsigned int (*v85)(const void *, uint64_t, uint64_t);
  void *__dst;
  int *v87;

  if (a1 != a2)
  {
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v11 = type metadata accessor for RawOrderShippingFulfillment();
      v12 = *(int *)(v11 + 44);
      __dst = (void *)(a1 + v12);
      v87 = (int *)v11;
      v13 = (const void *)(a2 + v12);
      v14 = sub_23361D340();
      v84 = *(_QWORD *)(v14 - 8);
      v85 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v85(v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(__dst, v13, v14);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v14);
      }
      v28 = v87[12];
      v29 = a1 + v28;
      v30 = a2 + v28;
      if (*(_QWORD *)(a2 + v28 + 8) == 1)
      {
        v31 = *(_OWORD *)(v30 + 16);
        *(_OWORD *)v29 = *(_OWORD *)v30;
        *(_OWORD *)(v29 + 16) = v31;
        v32 = *(_OWORD *)(v30 + 32);
        v33 = *(_OWORD *)(v30 + 48);
        v34 = *(_OWORD *)(v30 + 80);
        *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
        *(_OWORD *)(v29 + 80) = v34;
        *(_OWORD *)(v29 + 32) = v32;
        *(_OWORD *)(v29 + 48) = v33;
        v35 = *(_OWORD *)(v30 + 96);
        v36 = *(_OWORD *)(v30 + 112);
        v37 = *(_OWORD *)(v30 + 128);
        *(_QWORD *)(v29 + 144) = *(_QWORD *)(v30 + 144);
        *(_OWORD *)(v29 + 112) = v36;
        *(_OWORD *)(v29 + 128) = v37;
        *(_OWORD *)(v29 + 96) = v35;
      }
      else
      {
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
        *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
        *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
        *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
        *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
        v38 = *(_QWORD *)(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v38 == 1)
        {
          v39 = *(_OWORD *)(v30 + 48);
          v40 = *(_OWORD *)(v30 + 80);
          *(_OWORD *)(v29 + 64) = *(_OWORD *)(v30 + 64);
          *(_OWORD *)(v29 + 80) = v40;
          *(_OWORD *)(v29 + 48) = v39;
          v41 = *(_OWORD *)(v30 + 96);
          v42 = *(_OWORD *)(v30 + 112);
          v43 = *(_OWORD *)(v30 + 128);
          *(_QWORD *)(v29 + 144) = *(_QWORD *)(v30 + 144);
          *(_OWORD *)(v29 + 112) = v42;
          *(_OWORD *)(v29 + 128) = v43;
          *(_OWORD *)(v29 + 96) = v41;
        }
        else
        {
          *(_QWORD *)(v29 + 48) = v38;
          *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
          *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
          *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
          *(_QWORD *)(v29 + 80) = *(_QWORD *)(v30 + 80);
          *(_QWORD *)(v29 + 88) = *(_QWORD *)(v30 + 88);
          *(_QWORD *)(v29 + 96) = *(_QWORD *)(v30 + 96);
          *(_QWORD *)(v29 + 104) = *(_QWORD *)(v30 + 104);
          *(_QWORD *)(v29 + 112) = *(_QWORD *)(v30 + 112);
          *(_QWORD *)(v29 + 120) = *(_QWORD *)(v30 + 120);
          *(_QWORD *)(v29 + 128) = *(_QWORD *)(v30 + 128);
          *(_QWORD *)(v29 + 136) = *(_QWORD *)(v30 + 136);
          *(_QWORD *)(v29 + 144) = *(_QWORD *)(v30 + 144);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      v58 = v87[13];
      v59 = (void *)(a1 + v58);
      v60 = (const void *)(a2 + v58);
      v61 = sub_23361D634();
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48);
      if (v63(v60, 1, v61))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      v65 = v87[14];
      v66 = (void *)(a1 + v65);
      v67 = (const void *)(a2 + v65);
      v68 = type metadata accessor for Duration();
      v69 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        v71 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v66, v67, v71);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      }
      v72 = v87[15];
      v73 = (void *)(a1 + v72);
      v74 = (const void *)(a2 + v72);
      if (v63((const void *)(a2 + v72), 1, v61))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v73, v74, v61);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v73, 0, 1, v61);
      }
      v76 = v87[16];
      v77 = (_QWORD *)(a1 + v76);
      v78 = (_QWORD *)(a2 + v76);
      *v77 = *v78;
      v77[1] = v78[1];
      v79 = v87[17];
      v80 = (void *)(a1 + v79);
      v81 = (const void *)(a2 + v79);
      swift_bridgeObjectRetain();
      if (v63(v81, 1, v61))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v80, v81, v61);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v80, 0, 1, v61);
      }
      *(_BYTE *)(a1 + v87[18]) = *(_BYTE *)(a2 + v87[18]);
      goto LABEL_39;
    }
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v5 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 32);
      v7 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 32) = v6;
      v8 = *(_OWORD *)(a2 + 80);
      v9 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 80) = v8;
      if (*(_QWORD *)(a2 + 168))
      {
LABEL_5:
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_10:
        v19 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
        *(_OWORD *)(a1 + 192) = v19;
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        v20 = (int *)type metadata accessor for RawOrderPickupFulfillment();
        v21 = v20[12];
        v22 = (void *)(a1 + v21);
        v23 = (const void *)(a2 + v21);
        v24 = sub_23361D634();
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v26(v23, 1, v24))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        v44 = v20[13];
        v45 = (void *)(a1 + v44);
        v46 = (const void *)(a2 + v44);
        v47 = type metadata accessor for Duration();
        v48 = *(_QWORD *)(v47 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          v50 = sub_23361CD40();
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v45, v46, v50);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
        }
        v51 = v20[14];
        v52 = (void *)(a1 + v51);
        v53 = (const void *)(a2 + v51);
        if (v26((const void *)(a2 + v51), 1, v24))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v52, v53, v24);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v52, 0, 1, v24);
        }
        v55 = v20[15];
        v56 = (_QWORD *)(a1 + v55);
        v57 = (_QWORD *)(a2 + v55);
        *v56 = *v57;
        v56[1] = v57[1];
        swift_bridgeObjectRetain();
LABEL_39:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*(_QWORD *)(a2 + 168))
        goto LABEL_5;
    }
    v16 = *(_OWORD *)(a2 + 136);
    v17 = *(_OWORD *)(a2 + 152);
    v18 = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v17;
    *(_OWORD *)(a1 + 168) = v18;
    *(_OWORD *)(a1 + 136) = v16;
    goto LABEL_10;
  }
  return a1;
}

uint64_t initializeWithTake for RawOrderFulfillment(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(const void *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v5 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v5;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
    v8 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v8;
    v9 = (int *)type metadata accessor for RawOrderPickupFulfillment();
    v10 = v9[12];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v25 = v9[13];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    v28 = type metadata accessor for Duration();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v45 = sub_23361CD40();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v26, v27, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v46 = v9[14];
    v47 = (void *)(a1 + v46);
    v48 = (const void *)(a2 + v46);
    if (v15((const void *)(a2 + v46), 1, v13))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v47, v48, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v47, 0, 1, v13);
    }
    *(_OWORD *)(a1 + v9[15]) = *(_OWORD *)(a2 + v9[15]);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v17 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v17;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    v18 = (int *)type metadata accessor for RawOrderShippingFulfillment();
    v19 = v18[11];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = sub_23361D340();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v31 = v18[12];
    v32 = a1 + v31;
    v33 = a2 + v31;
    v34 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v34;
    *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
    *(_QWORD *)(v32 + 144) = *(_QWORD *)(v33 + 144);
    v35 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v35;
    v36 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v36;
    v37 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v37;
    v38 = v18[13];
    v39 = (void *)(a1 + v38);
    v40 = (const void *)(a2 + v38);
    v41 = sub_23361D634();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
    if (v43(v40, 1, v41))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v50 = v18[14];
    v51 = (void *)(a1 + v50);
    v52 = (const void *)(a2 + v50);
    v53 = type metadata accessor for Duration();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v56 = sub_23361CD40();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v51, v52, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v57 = v18[15];
    v58 = (void *)(a1 + v57);
    v59 = (const void *)(a2 + v57);
    if (v43((const void *)(a2 + v57), 1, v41))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v58, v59, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v58, 0, 1, v41);
    }
    *(_OWORD *)(a1 + v18[16]) = *(_OWORD *)(a2 + v18[16]);
    v61 = v18[17];
    v62 = (void *)(a1 + v61);
    v63 = (const void *)(a2 + v61);
    if (v43((const void *)(a2 + v61), 1, v41))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v62, v63, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v62, 0, 1, v41);
    }
    *(_BYTE *)(a1 + v18[18]) = *(_BYTE *)(a2 + v18[18]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for RawOrderFulfillment(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(const void *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;

  if (a1 != a2)
  {
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v5 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v5;
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v6;
      v7 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
      v8 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v8;
      v9 = (int *)type metadata accessor for RawOrderPickupFulfillment();
      v10 = v9[12];
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      v13 = sub_23361D634();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v25 = v9[13];
      v26 = (void *)(a1 + v25);
      v27 = (const void *)(a2 + v25);
      v28 = type metadata accessor for Duration();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v45 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v26, v27, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v46 = v9[14];
      v47 = (void *)(a1 + v46);
      v48 = (const void *)(a2 + v46);
      if (v15((const void *)(a2 + v46), 1, v13))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v47, v48, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v47, 0, 1, v13);
      }
      *(_OWORD *)(a1 + v9[15]) = *(_OWORD *)(a2 + v9[15]);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v17 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      v18 = (int *)type metadata accessor for RawOrderShippingFulfillment();
      v19 = v18[11];
      v20 = (void *)(a1 + v19);
      v21 = (const void *)(a2 + v19);
      v22 = sub_23361D340();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v31 = v18[12];
      v32 = a1 + v31;
      v33 = a2 + v31;
      v34 = *(_OWORD *)(v33 + 112);
      *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
      *(_OWORD *)(v32 + 112) = v34;
      *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
      *(_QWORD *)(v32 + 144) = *(_QWORD *)(v33 + 144);
      v35 = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
      *(_OWORD *)(v32 + 48) = v35;
      v36 = *(_OWORD *)(v33 + 80);
      *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
      *(_OWORD *)(v32 + 80) = v36;
      v37 = *(_OWORD *)(v33 + 16);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v37;
      v38 = v18[13];
      v39 = (void *)(a1 + v38);
      v40 = (const void *)(a2 + v38);
      v41 = sub_23361D634();
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
      if (v43(v40, 1, v41))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v50 = v18[14];
      v51 = (void *)(a1 + v50);
      v52 = (const void *)(a2 + v50);
      v53 = type metadata accessor for Duration();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v56 = sub_23361CD40();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v51, v52, v56);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      v57 = v18[15];
      v58 = (void *)(a1 + v57);
      v59 = (const void *)(a2 + v57);
      if (v43((const void *)(a2 + v57), 1, v41))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v58, v59, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v58, 0, 1, v41);
      }
      *(_OWORD *)(a1 + v18[16]) = *(_OWORD *)(a2 + v18[16]);
      v61 = v18[17];
      v62 = (void *)(a1 + v61);
      v63 = (const void *)(a2 + v61);
      if (v43((const void *)(a2 + v61), 1, v41))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v62, v63, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v62, 0, 1, v41);
      }
      *(_BYTE *)(a1 + v18[18]) = *(_BYTE *)(a2 + v18[18]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2334EDAD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for RawOrderShippingFulfillment();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RawOrderPickupFulfillment();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for RawOrderFulfillment.DecodingConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for RawOrderFulfillment.DecodingConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RawOrderFulfillment.DecodingConfiguration.knownFulfillmentIdentifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of RawOrderFulfillment.DecodingConfiguration.knownFulfillmentIdentifiers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of RawOrderFulfillment.DecodingConfiguration.knownFulfillmentIdentifiers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of RawOrderFulfillment.DecodingConfiguration.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for RawOrderFulfillment.FulfillmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334EDBF4 + 4 * byte_233653F05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334EDC28 + 4 * asc_233653F00[v4]))();
}

uint64_t sub_2334EDC28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334EDC30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334EDC38);
  return result;
}

uint64_t sub_2334EDC44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334EDC4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334EDC50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334EDC58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderFulfillment.FulfillmentType()
{
  return &type metadata for RawOrderFulfillment.FulfillmentType;
}

uint64_t storeEnumTagSinglePayload for RawOrderFulfillment.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334EDCB4 + 4 * byte_233653F0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334EDCD4 + 4 * byte_233653F0F[v4]))();
}

_BYTE *sub_2334EDCB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334EDCD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334EDCDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334EDCE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334EDCEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334EDCF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderFulfillment.CodingKeys()
{
  return &type metadata for RawOrderFulfillment.CodingKeys;
}

unint64_t sub_2334EDD14()
{
  unint64_t result;

  result = qword_256053270;
  if (!qword_256053270)
  {
    result = MEMORY[0x234934494](&unk_2336540DC, &type metadata for RawOrderFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053270);
  }
  return result;
}

unint64_t sub_2334EDD5C()
{
  unint64_t result;

  result = qword_256053278;
  if (!qword_256053278)
  {
    result = MEMORY[0x234934494](&unk_23365417C, &type metadata for RawOrderFulfillment.FulfillmentType);
    atomic_store(result, (unint64_t *)&qword_256053278);
  }
  return result;
}

unint64_t sub_2334EDDA4()
{
  unint64_t result;

  result = qword_256053280;
  if (!qword_256053280)
  {
    result = MEMORY[0x234934494](&unk_233654014, &type metadata for RawOrderFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053280);
  }
  return result;
}

unint64_t sub_2334EDDEC()
{
  unint64_t result;

  result = qword_256053288;
  if (!qword_256053288)
  {
    result = MEMORY[0x234934494](&unk_23365403C, &type metadata for RawOrderFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053288);
  }
  return result;
}

unint64_t sub_2334EDE30()
{
  unint64_t result;

  result = qword_256053290;
  if (!qword_256053290)
  {
    result = MEMORY[0x234934494](&unk_233654104, &type metadata for RawOrderFulfillment.FulfillmentType);
    atomic_store(result, (unint64_t *)&qword_256053290);
  }
  return result;
}

id BankConnectPrivacySettingsController.__allocating_init(bundleID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  objc_super v11;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_authorizationManager;
  type metadata accessor for AppAuthorizationStateManager();
  v7 = swift_allocObject();
  v13 = &type metadata for FinancialDataTCC;
  v14 = &protocol witness table for FinancialDataTCC;
  v8 = v5;
  *(_QWORD *)(v7 + 16) = sub_233160224(MEMORY[0x24BEE4AF8]);
  sub_23318B020(&v12, v7 + 24);
  *(_QWORD *)&v5[v6] = v7;
  v9 = &v8[OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_bundleID];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;

  v11.receiver = v8;
  v11.super_class = v2;
  return objc_msgSendSuper2(&v11, sel_init);
}

id BankConnectPrivacySettingsController.init(bundleID:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_super v10;
  __int128 v11;
  ValueMetadata *v12;
  _UNKNOWN **v13;

  v5 = OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_authorizationManager;
  type metadata accessor for AppAuthorizationStateManager();
  v6 = swift_allocObject();
  v12 = &type metadata for FinancialDataTCC;
  v13 = &protocol witness table for FinancialDataTCC;
  v7 = v2;
  *(_QWORD *)(v6 + 16) = sub_233160224(MEMORY[0x24BEE4AF8]);
  sub_23318B020(&v11, v6 + 24);
  *(_QWORD *)&v2[v5] = v6;
  v8 = &v7[OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_bundleID];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for BankConnectPrivacySettingsController();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for BankConnectPrivacySettingsController()
{
  return objc_opt_self();
}

uint64_t sub_2334EE14C()
{
  uint64_t v0;

  return AppAuthorizationStateManager.authorizationType(bundleID:)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_bundleID), *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit36BankConnectPrivacySettingsController_bundleID + 8));
}

id BankConnectPrivacySettingsController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectPrivacySettingsController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectPrivacySettingsController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectPrivacySettingsController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BankConnectPrivacySettingsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectPrivacySettingsController.__allocating_init(bundleID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BankConnectPrivacySettingsController.authorizationType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

__n128 RawOrderLineItem.init(image:quantity:subtitle:title:price:sku:gtin:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11, uint64_t a12)
{
  __int128 v12;
  __n128 result;
  uint64_t v14;

  v12 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a8;
  result = a10;
  v14 = *(_QWORD *)(a8 + 32);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_OWORD *)(a9 + 72) = v12;
  *(_QWORD *)(a9 + 88) = v14;
  *(__n128 *)(a9 + 96) = a10;
  *(_QWORD *)(a9 + 112) = a11;
  *(_QWORD *)(a9 + 120) = a12;
  return result;
}

uint64_t RawOrderLineItem.image.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderLineItem.image.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderLineItem.image.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.quantity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t RawOrderLineItem.quantity.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*RawOrderLineItem.quantity.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderLineItem.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawOrderLineItem.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderLineItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawOrderLineItem.title.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.price.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 RawOrderLineItem.price.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 56) = v5;
  result = v4;
  *(__n128 *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 88) = v2;
  return result;
}

uint64_t (*RawOrderLineItem.price.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.sku.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderLineItem.sku.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*RawOrderLineItem.sku.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderLineItem.gtin.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderLineItem.gtin.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*RawOrderLineItem.gtin.modify())()
{
  return nullsub_1;
}

void sub_2334EE598(char *a1)
{
  sub_233227FEC(*a1);
}

void sub_2334EE5A4()
{
  char *v0;

  sub_23353ED54(0, *v0);
}

void sub_2334EE5B0()
{
  __asm { BR              X10 }
}

uint64_t sub_2334EE5E8()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_2334EE66C(uint64_t a1)
{
  char *v1;

  sub_23353ED54(a1, *v1);
}

uint64_t sub_2334EE674@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2334EF26C();
  *a1 = result;
  return result;
}

uint64_t sub_2334EE6A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2334EE6CC + 4 * byte_2336542A7[*v0]))();
}

void sub_2334EE6CC(_QWORD *a1@<X8>)
{
  *a1 = 0x797469746E617571;
  a1[1] = 0xE800000000000000;
}

void sub_2334EE6E8(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974627573;
  a1[1] = 0xE800000000000000;
}

void sub_2334EE704(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C746974;
  a1[1] = v1;
}

void sub_2334EE724(_QWORD *a1@<X8>)
{
  *a1 = 7695219;
  a1[1] = 0xE300000000000000;
}

void sub_2334EE738(_QWORD *a1@<X8>)
{
  *a1 = 1852404839;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_2334EE74C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334EE778 + 4 * byte_2336542AE[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_2334EE778()
{
  return 0x797469746E617571;
}

uint64_t sub_2334EE790()
{
  return 0x656C746974627573;
}

uint64_t sub_2334EE7A8()
{
  return 0x656C746974;
}

uint64_t sub_2334EE7B8()
{
  return 0x6563697270;
}

uint64_t sub_2334EE7C8()
{
  return 7695219;
}

uint64_t sub_2334EE7D8()
{
  return 1852404839;
}

uint64_t sub_2334EE7E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2334EF26C();
  *a1 = result;
  return result;
}

uint64_t sub_2334EE80C()
{
  sub_2334EEDCC();
  return sub_23361F428();
}

uint64_t sub_2334EE834()
{
  sub_2334EEDCC();
  return sub_23361F434();
}

uint64_t RawOrderLineItem.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560532D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2334EEDCC();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v6;
    v49 = a2;
    LOBYTE(v61) = 0;
    v11 = sub_23361EFCC();
    v13 = v12;
    LOBYTE(v61) = 1;
    swift_bridgeObjectRetain();
    v14 = sub_23361F080();
    LOBYTE(v61) = 2;
    v47 = sub_23361EFCC();
    v48 = v14;
    LOBYTE(v61) = 3;
    v16 = v15;
    swift_bridgeObjectRetain();
    v45 = sub_23361F02C();
    v46 = v16;
    LOBYTE(v53) = 4;
    v75 = 1;
    v50 = v17;
    swift_bridgeObjectRetain();
    v18 = sub_23361F0B0();
    v19 = v48;
    if ((v18 & 1) != 0)
    {
      v44 = v11;
      v20 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    else
    {
      sub_2333C603C();
      sub_23361EFB4();
      v43 = v61;
      v44 = v11;
      v41 = v62;
      v42 = *((_QWORD *)&v61 + 1);
      v20 = v63;
      v40 = *((_QWORD *)&v62 + 1);
    }
    LOBYTE(v61) = 5;
    swift_bridgeObjectRetain();
    v21 = sub_23361EFCC();
    v23 = v22;
    v48 = v21;
    v75 = 6;
    swift_bridgeObjectRetain();
    v24 = sub_23361EFCC();
    v25 = *(void (**)(char *, uint64_t))(v51 + 8);
    v26 = v24;
    v38 = v27;
    v39 = v24;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v53 = v44;
    *((_QWORD *)&v53 + 1) = v13;
    v28 = v13;
    v29 = v46;
    *(_QWORD *)&v54 = v19;
    *((_QWORD *)&v54 + 1) = v47;
    *(_QWORD *)&v55 = v46;
    *((_QWORD *)&v55 + 1) = v45;
    *(_QWORD *)&v56 = v50;
    *((_QWORD *)&v56 + 1) = v43;
    *(_QWORD *)&v57 = v42;
    *((_QWORD *)&v57 + 1) = v41;
    *(_QWORD *)&v58 = v40;
    *((_QWORD *)&v58 + 1) = v20;
    *(_QWORD *)&v59 = v48;
    *((_QWORD *)&v59 + 1) = v23;
    v30 = v38;
    *(_QWORD *)&v60 = v26;
    *((_QWORD *)&v60 + 1) = v38;
    sub_23328C0F4((uint64_t)&v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v58;
    v33 = v49;
    v49[4] = v57;
    v33[5] = v32;
    v34 = v60;
    v33[6] = v59;
    v33[7] = v34;
    v35 = v54;
    *v33 = v53;
    v33[1] = v35;
    v36 = v56;
    v33[2] = v55;
    v33[3] = v36;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    *(_QWORD *)&v61 = v44;
    *((_QWORD *)&v61 + 1) = v28;
    *(_QWORD *)&v62 = v19;
    *((_QWORD *)&v62 + 1) = v47;
    v63 = v29;
    v64 = v45;
    v65 = v31;
    v66 = v43;
    v67 = v42;
    v68 = v41;
    v69 = v40;
    v70 = v20;
    v71 = v48;
    v72 = v23;
    v73 = v39;
    v74 = v30;
    return sub_23328C168((uint64_t)&v61);
  }
}

unint64_t sub_2334EEDCC()
{
  unint64_t result;

  result = qword_2560532D8;
  if (!qword_2560532D8)
  {
    result = MEMORY[0x234934494](&unk_23365446C, &type metadata for RawOrderLineItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560532D8);
  }
  return result;
}

uint64_t RawOrderLineItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560532E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v25 = v1[3];
  v26 = v7;
  v8 = v1[4];
  v23 = v1[5];
  v24 = v8;
  v9 = v1[6];
  v10 = v1[8];
  v17 = v1[7];
  v18 = v10;
  v11 = v1[10];
  v19 = v1[9];
  v20 = v11;
  v21 = v1[11];
  v22 = v9;
  v12 = v1[13];
  v16[3] = v1[12];
  v16[4] = v12;
  v13 = v1[14];
  v16[1] = v1[15];
  v16[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334EEDCC();
  sub_23361F410();
  LOBYTE(v28) = 0;
  v14 = v27;
  sub_23361F0E0();
  if (!v14)
  {
    LOBYTE(v28) = 1;
    sub_23361F194();
    LOBYTE(v28) = 2;
    sub_23361F0E0();
    LOBYTE(v28) = 3;
    sub_23361F140();
    v28 = v17;
    v29 = v18;
    v30 = v19;
    v31 = v20;
    v32 = v21;
    v33 = 4;
    sub_23317231C();
    sub_23361F110();
    LOBYTE(v28) = 5;
    sub_23361F0E0();
    LOBYTE(v28) = 6;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2334EF090@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return RawOrderLineItem.init(from:)(a1, a2);
}

uint64_t sub_2334EF0A4(_QWORD *a1)
{
  return RawOrderLineItem.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for RawOrderLineItem()
{
  return &type metadata for RawOrderLineItem;
}

uint64_t storeEnumTagSinglePayload for RawOrderLineItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2334EF114 + 4 * byte_2336542BA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2334EF148 + 4 * byte_2336542B5[v4]))();
}

uint64_t sub_2334EF148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334EF150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334EF158);
  return result;
}

uint64_t sub_2334EF164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334EF16CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2334EF170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334EF178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderLineItem.CodingKeys()
{
  return &type metadata for RawOrderLineItem.CodingKeys;
}

unint64_t sub_2334EF198()
{
  unint64_t result;

  result = qword_2560532E8;
  if (!qword_2560532E8)
  {
    result = MEMORY[0x234934494](&unk_233654444, &type metadata for RawOrderLineItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560532E8);
  }
  return result;
}

unint64_t sub_2334EF1E0()
{
  unint64_t result;

  result = qword_2560532F0;
  if (!qword_2560532F0)
  {
    result = MEMORY[0x234934494](&unk_23365437C, &type metadata for RawOrderLineItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560532F0);
  }
  return result;
}

unint64_t sub_2334EF228()
{
  unint64_t result;

  result = qword_2560532F8;
  if (!qword_2560532F8)
  {
    result = MEMORY[0x234934494](&unk_2336543A4, &type metadata for RawOrderLineItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560532F8);
  }
  return result;
}

uint64_t sub_2334EF26C()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_2334EF2B4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  void (*v19)(_BYTE *, _QWORD);
  _BYTE v20[32];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_23361ECE4();
    result = MEMORY[0x24BEE4AF8];
    if (!v3)
      return result;
    v24 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v21 = sub_23361EC9C();
    v22 = v5;
    v23 = 1;
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v21 = sub_2334F28D8(a1);
    v22 = v6;
    v23 = v7 & 1;
    while (1)
    {
LABEL_9:
      while (1)
      {
        v14 = v21;
        v13 = v22;
        v15 = v23;
        sub_2334F23F0(v21, v22, v23, a1, (unint64_t *)&qword_256042F80);
        v17 = v16;
        v18 = objc_msgSend(v16, sel_objectID);

        sub_23361EE4C();
        sub_23361EE7C();
        sub_23361EE88();
        result = sub_23361EE58();
        if (v2)
          break;
        v8 = sub_2334F22E4(v14, v13, v15, a1);
        v10 = v9;
        v12 = v11;
        sub_233193A50(v14, v13, v15);
        v21 = v8;
        v22 = v10;
        v23 = v12 & 1;
        if (!--v3)
          goto LABEL_14;
      }
      if ((v15 & 1) == 0)
        break;
      if (sub_23361ECB4())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2560533E8);
      v19 = (void (*)(_BYTE *, _QWORD))sub_23361E600();
      sub_23361ED2C();
      v19(v20, 0);
      if (!--v3)
      {
LABEL_14:
        sub_233193A50(v21, v22, v23);
        return v24;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2334EF4E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[5];
  id v39[2];
  __int128 v40;

  v2 = v1;
  v3 = objc_msgSend(a1, sel_userInfo);
  if (!v3)
  {
    *(_OWORD *)v39 = 0u;
    v40 = 0u;
    return sub_23319F5C0((uint64_t)v39);
  }
  v4 = v3;
  v5 = sub_23361E06C();

  sub_23361E150();
  sub_23361ED50();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_2331E3EC4((uint64_t)v38), (v7 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)v39);
  }
  else
  {
    *(_OWORD *)v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C((uint64_t)v38);
  if (!*((_QWORD *)&v40 + 1))
    return sub_23319F5C0((uint64_t)v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560533D8);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  if ((v38[0] & 0xC000000000000001) == 0)
  {
    v9 = sub_2334F1EBC(v38[0]);
    goto LABEL_41;
  }
  v9 = MEMORY[0x24BEE4B08];
  v38[0] = MEMORY[0x24BEE4B08];
  sub_23361ECA8();
  if (!sub_23361ED08())
    goto LABEL_40;
  v37 = v2;
  sub_233168668(0, (unint64_t *)&qword_256042F80);
  v2 = MEMORY[0x24BEE4AD0] + 8;
  do
  {
    swift_dynamicCast();
    v17 = objc_msgSend(v39[0], sel_entity);
    v18 = objc_msgSend(v17, sel_name);

    if (v18)
    {
      v19 = sub_23361E150();
      v21 = v20;

    }
    else
    {
      v19 = 0;
      v21 = 0;
    }
    type metadata accessor for ManagedTransaction();
    v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
    v23 = sub_23361E150();
    v25 = v24;

    if (!v21)
    {
      swift_bridgeObjectRelease();
LABEL_26:

      continue;
    }
    if (v19 == v23 && v21 == v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        goto LABEL_26;
    }
    v27 = v39[0];
    v28 = v38[0];
    v29 = *(_QWORD *)(v38[0] + 16);
    if (*(_QWORD *)(v38[0] + 24) <= v29)
    {
      sub_2334F1184(v29 + 1, &qword_2560533E0);
      v28 = v38[0];
    }
    v10 = (unint64_t)v27;
    v11 = sub_23361EA08();
    v12 = v28 + 56;
    v13 = -1 << *(_BYTE *)(v28 + 32);
    v14 = v11 & ~v13;
    v15 = v14 >> 6;
    if (((-1 << v14) & ~*(_QWORD *)(v28 + 56 + 8 * (v14 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v28 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (++v15 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v32 = v15 == v31;
        if (v15 == v31)
          v15 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v15);
      }
      while (v33 == -1);
      v16 = __clz(__rbit64(~v33)) + (v15 << 6);
    }
    *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * v16) = v27;
    ++*(_QWORD *)(v28 + 16);
  }
  while (sub_23361ED08());
  v9 = v38[0];
  v2 = v37;
LABEL_40:
  swift_release();
LABEL_41:
  v10 = sub_2334EF2B4(v9);
  swift_release();
  if (v10 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v36 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v36)
      return swift_bridgeObjectRelease();
LABEL_43:
    v34 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain();
    v35 = sub_2334F29B8(v10, v34);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v35;
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_43;
    return swift_bridgeObjectRelease();
  }
}

void sub_2334EF970(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_23361ECA8();
    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    sub_2333EA430();
    sub_23361E60C();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9)
        goto LABEL_32;
      v15 = v17[(_QWORD)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9)
          goto LABEL_32;
        v15 = v17[(_QWORD)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9)
            goto LABEL_32;
          v15 = v17[(_QWORD)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9)
              goto LABEL_32;
            v15 = v17[(_QWORD)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(_QWORD)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_2331961F0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((_QWORD)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_2333092EC(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_23361ED08())
      {
        sub_233168668(0, (unint64_t *)&qword_2560466E8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_2334EFC80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransactionRelationshipChangesObserver()
{
  return objc_opt_self();
}

uint64_t sub_2334EFCCC(uint64_t a1)
{
  return sub_2334EFD38(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], &qword_256052078, &qword_256043F50, MEMORY[0x24BDCAEC0]);
}

uint64_t sub_2334EFCF0(uint64_t a1)
{
  return sub_2334EFD38(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_256052018, &qword_25604DB90, MEMORY[0x24BDCEA88]);
}

uint64_t sub_2334EFD14(uint64_t a1)
{
  return sub_2334EFD38(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], &qword_2560520B8, (unint64_t *)&qword_256042700, MEMORY[0x24BDCE930]);
}

uint64_t sub_2334EFD38(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23361ED68();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_233167C58(v45, v44, v46);
      result = sub_23361E084();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_2334F0098()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE50);
  v3 = sub_23361ED68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23361F350();
      sub_23361E0A8();
      result = sub_23361F3A4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2334F0374()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560520B0);
  result = sub_23361ED68();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23361F350();
      sub_23361F35C();
      result = sub_23361F3A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2334F061C(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_25604DE78);
}

uint64_t sub_2334F0628(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F80);
}

uint64_t sub_2334F0634(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F88);
}

uint64_t sub_2334F0640(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F90);
}

uint64_t sub_2334F064C(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F98);
}

uint64_t sub_2334F0658()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254244F18);
  v3 = sub_23361ED68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_23361F350();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      result = sub_23361F3A4();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2334F0950()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052028);
  v3 = sub_23361ED68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v39 = v1;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v41 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v40 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v42 = v2;
    v43 = v4;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v44 = v10;
        v15 = v14 | (v10 << 6);
      }
      else
      {
        v16 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        if (v16 >= v40)
          goto LABEL_42;
        v17 = v41[v16];
        v18 = v10 + 1;
        if (!v17)
        {
          v18 = v10 + 2;
          if (v10 + 2 >= v40)
            goto LABEL_42;
          v17 = v41[v18];
          if (!v17)
          {
            v18 = v10 + 3;
            if (v10 + 3 >= v40)
              goto LABEL_42;
            v17 = v41[v18];
            if (!v17)
            {
              v19 = v10 + 4;
              if (v10 + 4 >= v40)
              {
LABEL_42:
                swift_release();
                v1 = v39;
                v38 = 1 << *(_BYTE *)(v2 + 32);
                if (v38 > 63)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v41[v19];
              if (!v17)
              {
                while (1)
                {
                  v18 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_48;
                  if (v18 >= v40)
                    goto LABEL_42;
                  v17 = v41[v18];
                  ++v19;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v18 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v44 = v18;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 56 * v15);
      v22 = *v20;
      v21 = v20[1];
      v23 = v20[2];
      v24 = v20[3];
      v26 = v20[4];
      v25 = v20[5];
      v27 = (void *)v20[6];
      sub_23361F350();
      v45 = v22;
      sub_23361F368();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
      }
      v28 = v23;
      sub_23361F368();
      if (v24)
      {
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
      }
      v29 = v26;
      if (v25)
      {
        sub_23361F368();
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
        if (v27)
          goto LABEL_30;
      }
      else
      {
        sub_23361F368();
        if (v27)
        {
LABEL_30:
          sub_23361F368();
          v30 = v27;
          sub_23361EA20();

          goto LABEL_33;
        }
      }
      sub_23361F368();
LABEL_33:
      result = sub_23361F3A4();
      v4 = v43;
      v31 = -1 << *(_BYTE *)(v43 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v8 + 8 * (v32 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v8 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
        v12 = v45;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        v12 = v45;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v8 + 8 * v33);
        }
        while (v37 == -1);
        v11 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v13 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 56 * v11);
      *v13 = v12;
      v13[1] = v21;
      v13[2] = v28;
      v13[3] = v24;
      v13[4] = v29;
      v13[5] = v25;
      v13[6] = v27;
      ++*(_QWORD *)(v43 + 16);
      v2 = v42;
      v10 = v44;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2334F0D6C(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F78);
}

uint64_t sub_2334F0D78(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F50);
}

uint64_t sub_2334F0D84(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F48);
}

uint64_t sub_2334F0D90(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F58);
}

uint64_t sub_2334F0D9C(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F60);
}

uint64_t sub_2334F0DA8(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F68);
}

uint64_t sub_2334F0DB4(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F70);
}

uint64_t sub_2334F0DC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t i;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int64_t v35;

  v1 = v0;
  v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FB8);
  v6 = sub_23361ED68();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v33 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v31 = v0;
    v32 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    for (i = 0; ; i = v35)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v35 = i;
        v17 = v16 | (i << 6);
      }
      else
      {
        v18 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32)
          goto LABEL_33;
        v19 = v33[v18];
        v20 = i + 1;
        if (!v19)
        {
          v20 = i + 2;
          if (i + 2 >= v32)
            goto LABEL_33;
          v19 = v33[v20];
          if (!v19)
          {
            v20 = i + 3;
            if (i + 3 >= v32)
              goto LABEL_33;
            v19 = v33[v20];
            if (!v19)
            {
              v21 = i + 4;
              if (i + 4 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                v30 = 1 << *(_BYTE *)(v5 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v33[v21];
              if (!v19)
              {
                while (1)
                {
                  v20 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v20 >= v32)
                    goto LABEL_33;
                  v19 = v33[v20];
                  ++v21;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v20 = i + 4;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v35 = v20;
        v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      v22 = *(_QWORD *)(v34 + 72);
      sub_23330B538(*(_QWORD *)(v5 + 48) + v22 * v17, (uint64_t)v4);
      sub_23361F350();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      result = sub_23361F3A4();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_23330B538((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v22);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2334F1178(uint64_t a1)
{
  return sub_2334F1184(a1, &qword_256049F38);
}

uint64_t sub_2334F1184(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23361ED68();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_23361EA08();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_2334F141C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051FC8);
  result = sub_23361ED68();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23361F350();
      sub_23361F35C();
      result = sub_23361F3A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2334F16C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23361D6A0();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256052018);
  result = sub_23361ED80();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23361E084();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2334F19C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE50);
  result = sub_23361ED80();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_23361F350();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    result = sub_23361F3A4();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2334F1C58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2334F1C64(a1, a2, a3, a4, &qword_25604DE78);
}

uint64_t sub_2334F1C64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_23361ED80();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_36;
    v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_36;
      v17 = v29[v12];
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_36;
        v17 = v29[v12];
        if (!v17)
          break;
      }
    }
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    result = sub_23361EA08();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
      goto LABEL_36;
  }
  v18 = v16 + 3;
  if (v18 >= a2)
    goto LABEL_36;
  v17 = v29[v18];
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= a2)
      goto LABEL_36;
    v17 = v29[v12];
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2334F1EBC(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_2334F2018((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_2334F2018((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x234934590](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_2334F2018(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v27 = a2;
  v28 = (unint64_t *)result;
  v29 = 0;
  v3 = 0;
  v6 = *(_QWORD *)(a3 + 56);
  v4 = a3 + 56;
  v5 = v6;
  v7 = 1 << *(_BYTE *)(v4 - 24);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v5;
  v30 = v4;
  v31 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v3 << 6);
LABEL_21:
    v16 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v17 = objc_msgSend(v16, sel_entity, v27);
    v18 = objc_msgSend(v17, sel_name);

    if (v18)
    {
      v19 = sub_23361E150();
      v21 = v20;

    }
    else
    {
      v19 = 0;
      v21 = 0;
    }
    type metadata accessor for ManagedTransaction();
    v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
    v23 = sub_23361E150();
    v25 = v24;

    if (v21)
    {
      if (v19 == v23 && v21 == v25)
      {

        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      v10 = sub_23361F224();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
LABEL_28:
        *(unint64_t *)((char *)v28 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        if (__OFADD__(v29++, 1))
          goto LABEL_35;
      }
    }
    else
    {

      result = swift_bridgeObjectRelease();
    }
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v13 >= v31)
    goto LABEL_32;
  v14 = *(_QWORD *)(v30 + 8 * v13);
  ++v3;
  if (v14)
    goto LABEL_20;
  v3 = v13 + 1;
  if (v13 + 1 >= v31)
    goto LABEL_32;
  v14 = *(_QWORD *)(v30 + 8 * v3);
  if (v14)
    goto LABEL_20;
  v3 = v13 + 2;
  if (v13 + 2 >= v31)
    goto LABEL_32;
  v14 = *(_QWORD *)(v30 + 8 * v3);
  if (v14)
  {
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_21;
  }
  v15 = v13 + 3;
  if (v15 >= v31)
  {
LABEL_32:
    swift_retain();
    return sub_2334F1C64(v28, v27, v29, a3, &qword_2560533E0);
  }
  v14 = *(_QWORD *)(v30 + 8 * v15);
  if (v14)
  {
    v3 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v3 >= v31)
      goto LABEL_32;
    v14 = *(_QWORD *)(v30 + 8 * v3);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

int64_t sub_2334F22E4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_2334F23C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F23F0(a1, a2, a3, a4, &qword_256042100);
}

void sub_2334F23DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F23F0(a1, a2, a3, a4, (unint64_t *)&qword_256042B60);
}

void sub_2334F23F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_23361ECCC() == *(_DWORD *)(a4 + 36))
      {
        sub_23361ECD8();
        sub_233168668(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_23361EA08();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_23361EA14();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_23361EA14();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x234933060](a1, a2, v8);
  sub_233168668(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

void sub_2334F2650(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F265C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for ManagedInternalAccount);
}

void sub_2334F265C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(_QWORD))
{
  void *v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  id v17;
  void *v18;

  v8 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_23361ECCC() == *(_DWORD *)(a4 + 36))
      {
        sub_23361ECD8();
        a5(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v5 = v18;
        swift_unknownObjectRelease();
        v10 = sub_23361EA08();
        v11 = -1 << *(_BYTE *)(a4 + 32);
        v8 = v10 & ~v11;
        if (((*(_QWORD *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
        {
          v12 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
          v13 = sub_23361EA14();

          if ((v13 & 1) == 0)
          {
            v14 = ~v11;
            do
            {
              v8 = (v8 + 1) & v14;
              if (((*(_QWORD *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
                goto LABEL_24;
              v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
              v16 = sub_23361EA14();

            }
            while ((v16 & 1) == 0);
          }

LABEL_20:
          v17 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v9 = a4;
  else
    v9 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x234933060](a1, a2, v9);
  a5(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

void sub_2334F28A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F265C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for ManagedContactTransactionInsight);
}

void sub_2334F28B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F265C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for ManagedTransactionInsights);
}

void sub_2334F28C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_2334F23F0(a1, a2, a3, a4, (unint64_t *)&qword_254248750);
}

uint64_t sub_2334F28D8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2334F2960(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_2334F29B8(unint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = result;
  v9 = a2;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return v9;
  }
  result = sub_23361EF30();
  v3 = result;
  if (!result)
    return v9;
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v3; ++i)
      {
        v5 = (void *)MEMORY[0x234933120](i, v2);
        sub_2333092EC(&v8, v5);

      }
    }
    else
    {
      v6 = (void **)(v2 + 32);
      do
      {
        v7 = *v6++;
        sub_2333092EC(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

void sub_2334F2A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23361ECE4();
    swift_bridgeObjectRelease();
    if (!v2)
      return;
  }
  else if (!*(_QWORD *)(v1 + 16))
  {
    return;
  }
  v3 = *(void **)(v0 + 24);
  v4 = objc_msgSend(v3, sel_fetchedObjects);
  if (v4)
  {
    v5 = v4;
    type metadata accessor for ManagedInternalTransaction();
    v6 = sub_23361E3F0();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (!v7)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v7)
        goto LABEL_32;
    }
    if (v7 < 1)
    {
      __break(1u);
      return;
    }
    v8 = v6 & 0xC000000000000001;
    v9 = 0;
    v30 = v6 + 32;
    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    v28 = v6;
    v29 = v0;
    v26 = v3;
    v27 = v6 & 0xC000000000000001;
    while (1)
    {
      if (v8)
        v11 = (id)MEMORY[0x234933120](v9, v6);
      else
        v11 = *(id *)(v30 + 8 * v9);
      v12 = v11;
      v13 = *(_QWORD *)(v0 + 16);
      swift_bridgeObjectRetain();
      v14 = objc_msgSend(v12, sel_publicTransactionObject);
      v15 = objc_msgSend(v14, sel_objectID);

      if ((v13 & 0xC000000000000001) != 0)
      {
        v16 = v15;
        v17 = sub_23361ED14();
        swift_bridgeObjectRelease();

        if ((v17 & 1) == 0)
        {

          goto LABEL_12;
        }
      }
      else
      {
        if (!*(_QWORD *)(v13 + 16))
        {

          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        v18 = sub_23361EA08();
        v19 = -1 << *(_BYTE *)(v13 + 32);
        v20 = v18 & ~v19;
        if (((*(_QWORD *)(v13 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        {

          swift_bridgeObjectRelease();
          v0 = v29;
LABEL_29:
          v8 = v27;
          v6 = v28;
          goto LABEL_12;
        }
        v21 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * v20);
        v22 = sub_23361EA14();

        if ((v22 & 1) == 0)
        {
          v23 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v23;
            if (((*(_QWORD *)(v13 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            v24 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * v20);
            v25 = sub_23361EA14();

            if ((v25 & 1) != 0)
              goto LABEL_10;
          }

          swift_bridgeObjectRelease();
          v0 = v29;
          v3 = v26;
          goto LABEL_29;
        }
LABEL_10:

        swift_bridgeObjectRelease();
        v6 = v28;
        v0 = v29;
        v3 = v26;
        v8 = v27;
      }
      v10 = objc_msgSend(v3, sel_managedObjectContext, v26);
      objc_msgSend(v10, sel_refreshObject_mergeChanges_, v12, 1);

LABEL_12:
      if (++v9 == v7)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B08];
        goto LABEL_32;
      }
    }
  }
}

uint64_t BankConnectCloudKitActivityVoucherManaging.__allocating_init(coreDataStore:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t BankConnectCloudKitActivityVoucherManaging.init(coreDataStore:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

Swift::Void __swiftcall BankConnectCloudKitActivityVoucherManaging.applyImportVoucher(forConsentID:)(Swift::String forConsentID)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id *v35;
  id v36;
  id v37;

  v2 = v1;
  object = forConsentID._object;
  countAndFlagsBits = forConsentID._countAndFlagsBits;
  v5 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v6 = (void *)sub_23361E12C();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = countAndFlagsBits;
  *(_QWORD *)(v8 + 40) = object;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  sub_23361ED98();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  v10 = (void *)sub_2334F3364();
  v11 = objc_allocWithZone(MEMORY[0x24BDBB6E0]);
  v12 = v7;
  v13 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v11, sel_initWithLabel_forEventsOfType_withConfiguration_affectingObjectsMatching_, v13, 1, v10, v12);

  v34 = v12;
  v35 = *(id **)(v2 + 16);
  v14 = objc_msgSend(v35[2], sel_persistentStoreCoordinator);
  v15 = objc_msgSend(v14, sel_persistentStores);

  v16 = sub_233168668(0, (unint64_t *)&qword_2542482A0);
  v17 = sub_23361E3F0();

  v32 = v16;
  if (v17 >> 62)
    goto LABEL_20;
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v18; v18 = sub_23361EF30())
  {
    v19 = 4;
    while (1)
    {
      v20 = (v17 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x234933120](v19 - 4, v17)
          : *(id *)(v17 + 8 * v19);
      v21 = v20;
      v22 = v19 - 3;
      if (__OFADD__(v19 - 4, 1))
        break;
      v23 = objc_msgSend(v20, sel_configurationName);
      v24 = sub_23361E150();
      v26 = v25;

      if (v24 == 0x64756F6C43 && v26 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_233625CF0;
        *(_QWORD *)(v31 + 32) = v21;
        sub_23361E408();
        v29 = v35[2];
        v36 = (id)sub_23361E3D8();
        swift_bridgeObjectRelease();
        v30 = v36;
        goto LABEL_18;
      }
      v28 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_17;
      }

      ++v19;
      if (v22 == v18)
        goto LABEL_14;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  v29 = v35[2];
  v30 = 0;
LABEL_18:
  v37 = v30;
  objc_msgSend(v29, sel_applyActivityVoucher_toStores_, v33, v32);

}

id sub_2334F32AC(void **a1)
{
  id v2;
  void *v3;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9188]), sel_init);
  v3 = *a1;
  *a1 = v2;

  result = *a1;
  if (*a1)
    return objc_msgSend(result, sel_setQualityOfService_, 25);
  __break(1u);
  return result;
}

uint64_t BankConnectCloudKitActivityVoucherManaging.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BankConnectCloudKitActivityVoucherManaging.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2334F3344(uint64_t a1, uint64_t a2)
{
  BankConnectCloudKitActivityVoucherManaging.applyImportVoucher(forConsentID:)(*(Swift::String *)&a1);
}

uint64_t sub_2334F3364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  uint64_t v9;
  _QWORD aBlock[6];
  uint64_t v12;

  v0 = sub_23361DDE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  sub_233168668(0, qword_254245350);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5480], v0);
  v4 = sub_23361E8A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = &v12;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2334F3570;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_233167E10;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2332714C0;
  aBlock[3] = &block_descriptor_21;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v4, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = v12;
    if (v12)
    {
      swift_release();
      return v9;
    }
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of BankConnectCloudKitActivityVoucherManager.applyImportVoucher(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for BankConnectCloudKitActivityVoucherManaging()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectCloudKitActivityVoucherManaging()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectCloudKitActivityVoucherManaging.__allocating_init(coreDataStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2334F3560()
{
  return swift_deallocObject();
}

id sub_2334F3570()
{
  uint64_t v0;

  return sub_2334F32AC(*(void ***)(v0 + 16));
}

uint64_t sub_2334F3578()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t FraudAssessmentResult.__allocating_init(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FraudAssessmentResult.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FraudAssessmentResult.init(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

BOOL FraudAssessmentResult.assessmentWasComputed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24) != 0;
}

uint64_t FraudAssessmentResult.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 24))
    return sub_23361F368();
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334F368C()
{
  return 1635017060;
}

uint64_t sub_2334F369C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2334F3720()
{
  sub_2334F3DB4();
  return sub_23361F428();
}

uint64_t sub_2334F3748()
{
  sub_2334F3DB4();
  return sub_23361F434();
}

uint64_t FraudAssessmentResult.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FraudAssessmentResult.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FraudAssessmentResult.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560533F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F3DB4();
  sub_23361F410();
  sub_23361F0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FraudAssessmentResult.hashValue.getter()
{
  uint64_t v0;

  sub_23361F350();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  return sub_23361F3A4();
}

uint64_t FraudAssessmentResult.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FraudAssessmentResult.init(from:)(a1);
  return v2;
}

uint64_t FraudAssessmentResult.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053400);
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F3DB4();
  sub_23361F3EC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v14;
    v10 = sub_23361EFCC();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v8);
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_2334F3A9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FraudAssessmentResult.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_2334F3AF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560533F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F3DB4();
  sub_23361F410();
  sub_23361F0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2334F3BD8(uint64_t *a1, uint64_t *a2)
{
  return _s10FinanceKit21FraudAssessmentResultC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_2334F3BE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  if (*(_QWORD *)(v1 + 24))
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  return sub_23361F3A4();
}

uint64_t sub_2334F3C6C()
{
  uint64_t v0;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 24))
    return sub_23361F368();
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334F3CE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  if (*(_QWORD *)(v1 + 24))
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit21FraudAssessmentResultC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  result = (v4 | v5) == 0;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v4 == v5)
      return 1;
    else
      return sub_23361F224();
  }
  return result;
}

unint64_t sub_2334F3DB4()
{
  unint64_t result;

  result = qword_2560533F8;
  if (!qword_2560533F8)
  {
    result = MEMORY[0x234934494](&unk_23365475C, &type metadata for FraudAssessmentResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560533F8);
  }
  return result;
}

unint64_t sub_2334F3DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256053408;
  if (!qword_256053408)
  {
    v1 = type metadata accessor for FraudAssessmentResult();
    result = MEMORY[0x234934494](&protocol conformance descriptor for FraudAssessmentResult, v1);
    atomic_store(result, (unint64_t *)&qword_256053408);
  }
  return result;
}

uint64_t type metadata accessor for FraudAssessmentResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for FraudAssessmentResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FraudAssessmentResult.__allocating_init(data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FraudAssessmentResult.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for FraudAssessmentResult.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334F3ECC + 4 * byte_233654590[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334F3EEC + 4 * byte_233654595[v4]))();
}

_BYTE *sub_2334F3ECC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334F3EEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334F3EF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334F3EFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334F3F04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334F3F0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FraudAssessmentResult.CodingKeys()
{
  return &type metadata for FraudAssessmentResult.CodingKeys;
}

unint64_t sub_2334F3F2C()
{
  unint64_t result;

  result = qword_2560534B8;
  if (!qword_2560534B8)
  {
    result = MEMORY[0x234934494](&unk_233654734, &type metadata for FraudAssessmentResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560534B8);
  }
  return result;
}

unint64_t sub_2334F3F74()
{
  unint64_t result;

  result = qword_2560534C0;
  if (!qword_2560534C0)
  {
    result = MEMORY[0x234934494](&unk_2336546A4, &type metadata for FraudAssessmentResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560534C0);
  }
  return result;
}

unint64_t sub_2334F3FBC()
{
  unint64_t result;

  result = qword_2560534C8;
  if (!qword_2560534C8)
  {
    result = MEMORY[0x234934494](&unk_2336546CC, &type metadata for FraudAssessmentResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560534C8);
  }
  return result;
}

uint64_t RawOrderPaymentStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334F4030 + 4 * byte_2336547B0[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_2334F4030()
{
  return 0x7A69726F68747561;
}

uint64_t sub_2334F404C()
{
  return 1684627824;
}

uint64_t sub_2334F405C()
{
  return 0x6465646E75666572;
}

uint64_t sub_2334F4074()
{
  return 0x64656E696C636564;
}

uint64_t sub_2334F408C()
{
  return 0x646564696F76;
}

_WORD *RawOrderPayment.CodingConfiguration.init(schemaVersion:)@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void RawOrderPayment.init(_:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  id v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  int v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  __int128 v61;
  int v62;
  _BYTE *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  char v70[32];

  v4 = type metadata accessor for RawOrderPaymentTransaction();
  v67 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedOrderPayment.status.getter(v70);
  v7 = v70[0];
  v8 = objc_msgSend(a1, sel_totalAmount);
  objc_msgSend(v8, sel_decimalValue);
  v9 = *(_DWORD *)v70;
  v61 = *(_OWORD *)&v70[4];

  v10 = objc_msgSend(a1, sel_totalCurrencyCode);
  v11 = sub_23361E150();
  v13 = v12;

  v14 = ManagedOrderPayment.summaryItems.getter();
  if (v14 >> 62)
    v15 = sub_23361EF30();
  else
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  v63 = a2;
  v62 = v7;
  v60 = v9;
  v58 = v13;
  v59 = v11;
  if (v15)
  {
    v69 = MEMORY[0x24BEE4AF8];
    sub_233274354(0, v15 & ~(v15 >> 63), 0);
    if ((v15 & 0x8000000000000000) == 0)
    {
      v65 = v15;
      v56 = v6;
      v57 = a1;
      v16 = 0;
      v17 = v69;
      v64 = v14 & 0xC000000000000001;
      v66 = v14;
      while (1)
      {
        if (v64)
          v18 = (id)MEMORY[0x234933120](v16, v14);
        else
          v18 = *(id *)(v14 + 8 * v16 + 32);
        v19 = v18;
        v20 = (char *)objc_msgSend(v18, sel_label);
        v21 = (_QWORD *)sub_23361D6B8();
        v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC10FinanceKit15LocalizedString_localizedStrings];
        if (!*(_QWORD *)(v22 + 16))
          goto LABEL_15;
        v23 = (_QWORD *)sub_2332DA944(v21);
        if (!v23[2])
          break;
        v24 = v23[4];
        v25 = v23[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v22 + 16))
          break;
        v26 = sub_2331E3D18(v24, v25);
        if ((v27 & 1) == 0)
          break;
        v28 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 16 * v26);
        v29 = *v28;
        v30 = v28[1];
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        v31 = objc_msgSend(v19, sel_valueAmount);
        objc_msgSend(v31, sel_decimalValue);
        v32 = *(_DWORD *)v70;
        v68 = *(_OWORD *)&v70[4];

        v33 = objc_msgSend(v19, sel_valueCurrencyCode);
        v34 = sub_23361E150();
        v36 = v35;

        v69 = v17;
        v38 = *(_QWORD *)(v17 + 16);
        v37 = *(_QWORD *)(v17 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_233274354(v37 > 1, v38 + 1, 1);
          v17 = v69;
        }
        ++v16;
        *(_QWORD *)(v17 + 16) = v38 + 1;
        v39 = v17 + 56 * v38;
        *(_QWORD *)(v39 + 32) = v29;
        *(_QWORD *)(v39 + 40) = v30;
        *(_DWORD *)(v39 + 48) = v32;
        *(_OWORD *)(v39 + 52) = v68;
        *(_QWORD *)(v39 + 72) = v34;
        *(_QWORD *)(v39 + 80) = v36;
        v14 = v66;
        if (v65 == v16)
        {
          swift_bridgeObjectRelease();
          a1 = v57;
          v6 = v56;
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      v29 = *(_QWORD *)&v20[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key];
      v30 = *(_QWORD *)&v20[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key + 8];
      swift_bridgeObjectRetain();

      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x24BEE4AF8];
LABEL_21:
  v40 = objc_msgSend(a1, sel_paymentMethods);
  v41 = MEMORY[0x24BEE4AF8];
  if (v40)
  {
    v42 = v40;
    v43 = sub_23361E3F0();

  }
  else
  {
    v43 = MEMORY[0x24BEE4AF8];
  }
  v44 = ManagedOrderPayment.applePayTransactionIdentifiers.getter();
  *(_QWORD *)&v68 = sub_233424924(v44);
  swift_bridgeObjectRelease();
  v45 = ManagedOrderPayment.transactions.getter();
  if (!(v45 >> 62))
  {
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v46)
      goto LABEL_26;
LABEL_37:
    swift_bridgeObjectRelease();

    v48 = MEMORY[0x24BEE4AF8];
LABEL_38:
    v53 = v63;
    *v63 = v62;
    *((_DWORD *)v53 + 2) = v60;
    *(_OWORD *)(v53 + 12) = v61;
    v54 = v58;
    *((_QWORD *)v53 + 4) = v59;
    *((_QWORD *)v53 + 5) = v54;
    *((_QWORD *)v53 + 6) = v17;
    *((_QWORD *)v53 + 7) = v43;
    *((_QWORD *)v53 + 8) = v68;
    *((_QWORD *)v53 + 9) = v48;
    return;
  }
  v46 = sub_23361EF30();
  if (!v46)
    goto LABEL_37;
LABEL_26:
  *(_QWORD *)v70 = v41;
  sub_233274328(0, v46 & ~(v46 >> 63), 0);
  if ((v46 & 0x8000000000000000) == 0)
  {
    v66 = v43;
    v47 = 0;
    v48 = *(_QWORD *)v70;
    do
    {
      if ((v45 & 0xC000000000000001) != 0)
        v49 = (id)MEMORY[0x234933120](v47, v45);
      else
        v49 = *(id *)(v45 + 8 * v47 + 32);
      RawOrderPaymentTransaction.init(_:)(v49, (uint64_t)v6);
      *(_QWORD *)v70 = v48;
      v50 = (uint64_t)v6;
      v52 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v48 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_233274328(v51 > 1, v52 + 1, 1);
        v48 = *(_QWORD *)v70;
      }
      ++v47;
      *(_QWORD *)(v48 + 16) = v52 + 1;
      sub_233360CE4(v50, v48+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v52);
      v6 = (char *)v50;
    }
    while (v46 != v47);
    swift_bridgeObjectRelease();

    v43 = v66;
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
}

FinanceKit::RawOrderPaymentStatus_optional __swiftcall RawOrderPaymentStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawOrderPaymentStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RawOrderPaymentStatus.allCases.getter()
{
  return &unk_25046B340;
}

void sub_2334F4664(char *a1)
{
  sub_2332282D0(*a1);
}

void sub_2334F4670()
{
  char *v0;

  sub_23353DB98(*v0);
}

void sub_2334F4678()
{
  __asm { BR              X10 }
}

uint64_t sub_2334F46B4()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_2334F4738(uint64_t a1)
{
  char *v1;

  sub_23353F3EC(a1, *v1);
}

FinanceKit::RawOrderPaymentStatus_optional sub_2334F4740(Swift::String *a1)
{
  return RawOrderPaymentStatus.init(rawValue:)(*a1);
}

uint64_t sub_2334F474C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2334F477C + 4 * byte_2336547BC[*v0]))();
}

void sub_2334F477C(_QWORD *a1@<X8>)
{
  *a1 = 0x7A69726F68747561;
  a1[1] = 0xEA00000000006465;
}

void sub_2334F479C(_QWORD *a1@<X8>)
{
  *a1 = 1684627824;
  a1[1] = 0xE400000000000000;
}

void sub_2334F47B0(_QWORD *a1@<X8>)
{
  *a1 = 0x6465646E75666572;
  a1[1] = 0xE800000000000000;
}

void sub_2334F47E0(_QWORD *a1@<X8>)
{
  *a1 = 0x646564696F76;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_2334F47F8()
{
  sub_2334F6B98();
  return sub_23361E390();
}

uint64_t sub_2334F4854()
{
  sub_2334F6B98();
  return sub_23361E354();
}

void sub_2334F48A0(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B340;
}

void RawOrderPayment.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *RawOrderPayment.status.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RawOrderPayment.status.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPayment.total.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 12);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 RawOrderPayment.total.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 8) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 12) = result;
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*RawOrderPayment.total.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPayment.summaryItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPayment.summaryItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*RawOrderPayment.summaryItems.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPayment.paymentMethods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPayment.paymentMethods.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*RawOrderPayment.paymentMethods.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPayment.applePayTransactionIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPayment.applePayTransactionIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*RawOrderPayment.applePayTransactionIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPayment.transactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPayment.transactions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*RawOrderPayment.transactions.modify())()
{
  return nullsub_1;
}

__n128 RawOrderPayment.init(status:total:summaryItems:paymentMethods:applePayTransactionIdentifiers:transactions:)@<Q0>(_BYTE *a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;

  v7 = *a2;
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_QWORD *)a2 + 4);
  *(_BYTE *)a7 = *a1;
  *(_DWORD *)(a7 + 8) = v7;
  result = *(__n128 *)(a2 + 1);
  *(__n128 *)(a7 + 12) = result;
  *(_QWORD *)(a7 + 32) = v8;
  *(_QWORD *)(a7 + 40) = v9;
  *(_QWORD *)(a7 + 48) = a3;
  *(_QWORD *)(a7 + 56) = a4;
  *(_QWORD *)(a7 + 64) = a5;
  *(_QWORD *)(a7 + 72) = a6;
  return result;
}

void RawOrderPayment.CodingConfiguration.schemaVersion.getter(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

_WORD *RawOrderPayment.CodingConfiguration.schemaVersion.setter(_WORD *result)
{
  _WORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RawOrderPayment.CodingConfiguration.schemaVersion.modify())()
{
  return nullsub_1;
}

BOOL static RawOrderPayment.CodingKeys.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RawOrderPayment.CodingKeys.hash(into:)()
{
  return sub_23361F35C();
}

FinanceKit::RawOrderPayment::CodingKeys_optional __swiftcall RawOrderPayment.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  FinanceKit::RawOrderPayment::CodingKeys_optional result;
  char v7;
  char v8;

  v2 = v1;
  v3 = stringValue._countAndFlagsBits == 0x737574617473 && stringValue._object == (void *)0xE600000000000000;
  if (v3
    || (object = stringValue._object, countAndFlagsBits = stringValue._countAndFlagsBits, (sub_23361F224() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else if (countAndFlagsBits == 0x6C61746F74 && object == (void *)0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 1;
  }
  else if (countAndFlagsBits == 0x497972616D6D7573 && object == (void *)0xEC000000736D6574
         || (sub_23361F224() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 2;
  }
  else if (countAndFlagsBits == 0x4D746E656D796170 && object == (void *)0xEE0073646F687465
         || (sub_23361F224() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 3;
  }
  else if (countAndFlagsBits == 0xD00000000000001ELL && object == (void *)0x8000000233676E60
         || (sub_23361F224() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 4;
  }
  else if (countAndFlagsBits == 0x746361736E617274 && object == (void *)0xEC000000736E6F69)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 5;
  }
  else
  {
    v8 = sub_23361F224();
    result.value = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      v7 = 5;
    else
      v7 = 6;
  }
  *v2 = v7;
  return result;
}

FinanceKit::RawOrderPayment::CodingKeys_optional __swiftcall RawOrderPayment.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 6;
  return (FinanceKit::RawOrderPayment::CodingKeys_optional)intValue;
}

uint64_t RawOrderPayment.CodingKeys.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t RawOrderPayment.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t RawOrderPayment.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334F4E34 + 4 * byte_2336547C2[*v0]))(0x737574617473, 0xE600000000000000);
}

uint64_t sub_2334F4E34()
{
  return 0x6C61746F74;
}

uint64_t sub_2334F4E48()
{
  return 0x497972616D6D7573;
}

uint64_t sub_2334F4E68()
{
  return 0x4D746E656D796170;
}

unint64_t sub_2334F4E8C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2334F4EA8()
{
  return 0x746361736E617274;
}

uint64_t sub_2334F4EC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334F4EF4 + 4 * byte_2336547C8[*v0]))(0x737574617473, 0xE600000000000000);
}

uint64_t sub_2334F4EF4()
{
  return 0x6C61746F74;
}

uint64_t sub_2334F4F08()
{
  return 0x497972616D6D7573;
}

uint64_t sub_2334F4F28()
{
  return 0x4D746E656D796170;
}

unint64_t sub_2334F4F4C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2334F4F68()
{
  return 0x746361736E617274;
}

uint64_t sub_2334F4F8C()
{
  sub_2334F6108();
  return sub_23361F428();
}

uint64_t sub_2334F4FB4()
{
  sub_2334F6108();
  return sub_23361F434();
}

uint64_t RawOrderPayment.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD v35[5];
  int v36;
  char v37;
  char v38;

  v34 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560534D0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F6108();
  sub_23361F3EC();
  if (v3)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = v9;
  v33 = a1;
  v12 = v7;
  v13 = v34;
  v14 = MEMORY[0x24BEE4AF8];
  if (v10 > 1)
  {
    v36 = 6;
    v32 = MEMORY[0x24BEE4AF8];
    v16 = MEMORY[0x24BEE4AF8];
    v15 = v6;
  }
  else
  {
    v38 = 0;
    sub_2334F620C();
    v15 = v6;
    sub_23361F068();
    v16 = v14;
    v17 = LOBYTE(v35[0]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v38 = 3;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v36 = v17;
    v23 = v35[0];
    if (!v35[0])
      v23 = v14;
    v32 = v23;
    v38 = 4;
    sub_23361EFFC();
    if (v35[0])
      v14 = v35[0];
  }
  v38 = 1;
  v37 = 1;
  sub_2333C603C();
  sub_23361EFB4();
  v31 = v14;
  v30 = v35[0];
  v19 = *(_QWORD *)((char *)v35 + 4);
  v20 = *(_QWORD *)((char *)&v35[1] + 4);
  v21 = v35[4];
  v29 = v35[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560534E0);
  v38 = 2;
  sub_2334F6250(&qword_2560534E8, (uint64_t (*)(void))sub_2334F614C, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23361EFFC();
  if (v35[0])
    v22 = v35[0];
  else
    v22 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560534F8);
  v38 = 5;
  sub_2334F6190(&qword_256053500, &qword_256053508, (uint64_t)&protocol conformance descriptor for RawOrderPaymentTransaction, MEMORY[0x24BEE12D0]);
  v28 = v22;
  swift_bridgeObjectRetain();
  sub_23361EFFC();
  if (v35[0])
    v24 = v35[0];
  else
    v24 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v15);
  swift_bridgeObjectRetain();
  v25 = v32;
  swift_bridgeObjectRetain();
  v26 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)v13 = v36;
  *(_DWORD *)(v13 + 8) = v30;
  *(_QWORD *)(v13 + 12) = v19;
  *(_QWORD *)(v13 + 20) = v20;
  v27 = v28;
  *(_QWORD *)(v13 + 32) = v29;
  *(_QWORD *)(v13 + 40) = v21;
  *(_QWORD *)(v13 + 48) = v27;
  *(_QWORD *)(v13 + 56) = v25;
  *(_QWORD *)(v13 + 64) = v26;
  *(_QWORD *)(v13 + 72) = v24;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t RawOrderPayment.encode(to:configuration:)(_QWORD *a1, __int16 *a2)
{
  unsigned __int8 *v2;
  uint64_t v5;
  char *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD v32[5];
  int v33;
  char v34;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053518);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v8 = *v2;
  v33 = *((_DWORD *)v2 + 2);
  v27 = *(_OWORD *)(v2 + 12);
  v9 = *((_QWORD *)v2 + 4);
  v25 = *((_QWORD *)v2 + 5);
  v26 = v9;
  v10 = *((_QWORD *)v2 + 6);
  v11 = *((_QWORD *)v2 + 7);
  v12 = *((_QWORD *)v2 + 8);
  v23 = *((_QWORD *)v2 + 9);
  v24 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_2334F6108();
  v30 = v6;
  sub_23361F410();
  if (v7 > 1)
  {
    v19 = v30;
    v20 = v31;
    v21 = v28;
LABEL_5:
    LODWORD(v32[0]) = v33;
    *(_OWORD *)((char *)v32 + 4) = v27;
    v32[3] = v26;
    v32[4] = v25;
    v34 = 1;
    sub_23317231C();
    sub_23361F17C();
    if (!v21)
    {
      if (*(_QWORD *)(v24 + 16))
      {
        v32[0] = v24;
        v34 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2560534E0);
        sub_2334F6250(&qword_256053520, (uint64_t (*)(void))sub_2334F62B8, MEMORY[0x24BEE12A0]);
        sub_23361F17C();
      }
      if (*(_QWORD *)(v23 + 16))
      {
        v32[0] = v23;
        v34 = 5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2560534F8);
        sub_2334F6190(&qword_256053530, &qword_256053538, (uint64_t)&protocol conformance descriptor for RawOrderPaymentTransaction, MEMORY[0x24BEE12A0]);
        sub_23361F17C();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v19, v20);
  }
  if (v8 == 6)
  {
    v14 = sub_23361EE28();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256053540);
    *(_QWORD *)(v16 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_256053548);
    *(_BYTE *)v16 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256053550);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_233623D60;
    *(_QWORD *)(v17 + 56) = &type metadata for RawOrderPayment.CodingKeys;
    *(_QWORD *)(v17 + 64) = v13;
    *(_BYTE *)(v17 + 32) = 0;
    sub_23361EDEC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE2728], v14);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  }
  LOBYTE(v32[0]) = v8;
  v34 = 0;
  sub_2334F633C();
  v19 = v30;
  v20 = v31;
  v22 = v28;
  sub_23361F17C();
  v21 = v22;
  if (!v22)
  {
    if (*(_QWORD *)(v11 + 16))
    {
      v32[0] = v11;
      v34 = 3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
      sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
      sub_23361F17C();
    }
    if (*(_QWORD *)(v12 + 16))
    {
      v32[0] = v12;
      v34 = 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
      sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
      sub_23361F17C();
    }
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v19, v20);
}

uint64_t sub_2334F58EC@<X0>(_QWORD *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v4;

  v4 = *a2;
  return RawOrderPayment.init(from:configuration:)(a1, &v4, a3);
}

uint64_t sub_2334F5914(_QWORD *a1, __int16 *a2)
{
  return RawOrderPayment.encode(to:configuration:)(a1, a2);
}

uint64_t RawOrderPaymentSummaryItem.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPaymentSummaryItem.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderPaymentSummaryItem.label.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPaymentSummaryItem.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 20);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 RawOrderPaymentSummaryItem.value.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 20) = result;
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v5;
  return result;
}

uint64_t (*RawOrderPaymentSummaryItem.value.modify())()
{
  return nullsub_1;
}

__n128 RawOrderPaymentSummaryItem.init(label:value:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v4 = *a3;
  v5 = *((_QWORD *)a3 + 3);
  v6 = *((_QWORD *)a3 + 4);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = v4;
  result = *(__n128 *)(a3 + 1);
  *(__n128 *)(a4 + 20) = result;
  *(_QWORD *)(a4 + 40) = v5;
  *(_QWORD *)(a4 + 48) = v6;
  return result;
}

uint64_t sub_2334F5A34(char *a1, char *a2)
{
  return sub_2332261F8(*a1, *a2);
}

uint64_t sub_2334F5A40()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334F5AAC()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334F5AEC()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2334F5B54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2334F5BB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x6C6562616CLL;
  if (*v1)
    v2 = 0x65756C6176;
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_2334F5BE0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2334F5C40()
{
  sub_2334F65B0();
  return sub_23361F428();
}

uint64_t sub_2334F5C68()
{
  sub_2334F65B0();
  return sub_23361F434();
}

uint64_t RawOrderPaymentSummaryItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053560);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F65B0();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v18) = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v23 = 1;
  v22 = 1;
  sub_2333C603C();
  swift_bridgeObjectRetain();
  sub_23361EFB4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v18;
  v13 = v20;
  v14 = v21;
  v15 = v19;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 20) = v15;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t RawOrderPaymentSummaryItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053570);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_DWORD *)(v1 + 16);
  v11 = *(_OWORD *)(v1 + 20);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334F65B0();
  sub_23361F410();
  LOBYTE(v13) = 0;
  sub_23361F140();
  if (!v2)
  {
    v13 = v17;
    v14 = v11;
    v15 = v10;
    v16 = v9;
    v18 = 1;
    sub_23317231C();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t sub_2334F5FD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderPaymentSummaryItem.init(from:)(a1, a2);
}

uint64_t sub_2334F5FEC(_QWORD *a1)
{
  return RawOrderPaymentSummaryItem.encode(to:)(a1);
}

FinanceKit::RawOrderPaymentStatus __swiftcall RawOrderPaymentStatus.init(_:)(FinanceKit::RawOrderPaymentStatus result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

__n128 RawOrderPaymentSummaryItem.init(_:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  Swift::String v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;
  __n128 v14;
  int v15;
  __n128 v16;

  v4 = objc_msgSend(a1, sel_label);
  v5 = sub_23361D6B8();
  v6 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v5);

  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_valueAmount);
  objc_msgSend(v7, sel_decimalValue);
  v8 = v15;
  v14 = v16;

  v9 = objc_msgSend(a1, sel_valueCurrencyCode);
  v10 = sub_23361E150();
  v12 = v11;

  *(Swift::String *)a2 = v6;
  *(_DWORD *)(a2 + 16) = v8;
  result = v14;
  *(__n128 *)(a2 + 20) = v14;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v12;
  return result;
}

unint64_t sub_2334F6108()
{
  unint64_t result;

  result = qword_2560534D8;
  if (!qword_2560534D8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment.CodingKeys, &type metadata for RawOrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560534D8);
  }
  return result;
}

unint64_t sub_2334F614C()
{
  unint64_t result;

  result = qword_2560534F0;
  if (!qword_2560534F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentSummaryItem, &type metadata for RawOrderPaymentSummaryItem);
    atomic_store(result, (unint64_t *)&qword_2560534F0);
  }
  return result;
}

uint64_t sub_2334F6190(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560534F8);
    v10 = sub_2334F62FC(a2, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2334F620C()
{
  unint64_t result;

  result = qword_256053510;
  if (!qword_256053510)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentStatus, &type metadata for RawOrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_256053510);
  }
  return result;
}

uint64_t sub_2334F6250(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560534E0);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2334F62B8()
{
  unint64_t result;

  result = qword_256053528;
  if (!qword_256053528)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentSummaryItem, &type metadata for RawOrderPaymentSummaryItem);
    atomic_store(result, (unint64_t *)&qword_256053528);
  }
  return result;
}

uint64_t sub_2334F62FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RawOrderPaymentTransaction();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2334F633C()
{
  unint64_t result;

  result = qword_256053558;
  if (!qword_256053558)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentStatus, &type metadata for RawOrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_256053558);
  }
  return result;
}

uint64_t _s10FinanceKit15RawOrderPaymentV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;

  v4 = *a1;
  v5 = *((unsigned int *)a1 + 2);
  v6 = *((unsigned __int16 *)a1 + 6);
  v7 = *((unsigned __int16 *)a1 + 7);
  v8 = *((_QWORD *)a1 + 2);
  v9 = *((unsigned int *)a1 + 6);
  v11 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v12 = *((_QWORD *)a1 + 6);
  v13 = *a2;
  v14 = *((unsigned int *)a2 + 2);
  v15 = *((unsigned __int16 *)a2 + 6);
  v16 = *((unsigned __int16 *)a2 + 7);
  v17 = *((_QWORD *)a2 + 2);
  v18 = *((unsigned int *)a2 + 6);
  v19 = *((_QWORD *)a2 + 4);
  v20 = *((_QWORD *)a2 + 5);
  v22 = *((_QWORD *)a2 + 6);
  v21 = (_QWORD *)*((_QWORD *)a2 + 7);
  v49 = *((_QWORD *)a1 + 9);
  v51 = (_QWORD *)*((_QWORD *)a1 + 8);
  v48 = *((_QWORD *)a2 + 9);
  v52 = (_QWORD *)*((_QWORD *)a1 + 7);
  v50 = (_QWORD *)*((_QWORD *)a2 + 8);
  if (v4 == 6)
  {
    if (v13 != 6)
      return 0;
  }
  else
  {
    if (v13 == 6)
      return 0;
    v43 = *((_QWORD *)a1 + 5);
    v44 = *((_QWORD *)a2 + 5);
    v41 = *((_QWORD *)a1 + 2);
    v42 = *((_QWORD *)a2 + 6);
    v39 = *((unsigned __int16 *)a2 + 7);
    v40 = (_QWORD *)*((_QWORD *)a2 + 7);
    v23 = *((_QWORD *)a1 + 6);
    v24 = *((_QWORD *)a2 + 4);
    v25 = *((unsigned int *)a1 + 6);
    v26 = *((_QWORD *)a2 + 2);
    v27 = *((unsigned int *)a2 + 6);
    v28 = *((unsigned __int16 *)a1 + 6);
    v38 = *((unsigned int *)a2 + 2);
    v29 = *((unsigned __int16 *)a1 + 7);
    v30 = *((unsigned __int16 *)a2 + 6);
    sub_2332282D0(v4);
    v15 = v30;
    v7 = v29;
    v14 = v38;
    v16 = v39;
    v6 = v28;
    v18 = v27;
    v17 = v26;
    v9 = v25;
    v19 = v24;
    v12 = v23;
    v21 = v40;
    v8 = v41;
    v22 = v42;
    v10 = v43;
    v20 = v44;
    if ((v31 & 1) == 0)
      return 0;
  }
  v46 = v19;
  v47 = v11;
  v45 = v12;
  v32 = v5 | (v6 << 32) | (v7 << 48);
  v33 = v14 | (v15 << 32) | (v16 << 48);
  v34 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((MEMORY[0x234932E38](v32, v8, v34, v33, v17, v18) & 1) != 0)
  {
    if (v47 == v46 && v10 == v20)
    {
      swift_bridgeObjectRelease_n();
      v35 = v45;
    }
    else
    {
      v36 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = v45;
      if ((v36 & 1) == 0)
        return 0;
    }
    if ((sub_23322D5C8(v35, v22) & 1) != 0 && (sub_23322B8BC(v52, v21) & 1) != 0 && (sub_23322B8BC(v51, v50) & 1) != 0)
      return sub_23322D5CC(v49, v48);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

unint64_t sub_2334F65B0()
{
  unint64_t result;

  result = qword_256053568;
  if (!qword_256053568)
  {
    result = MEMORY[0x234934494](&unk_233654CCC, &type metadata for RawOrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053568);
  }
  return result;
}

unint64_t sub_2334F65F8()
{
  unint64_t result;

  result = qword_256053578;
  if (!qword_256053578)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentStatus, &type metadata for RawOrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_256053578);
  }
  return result;
}

unint64_t sub_2334F6640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256053580;
  if (!qword_256053580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053588);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256053580);
  }
  return result;
}

unint64_t sub_2334F6690()
{
  unint64_t result;

  result = qword_256053590;
  if (!qword_256053590)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment.CodingKeys, &type metadata for RawOrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053590);
  }
  return result;
}

unint64_t sub_2334F66D8()
{
  unint64_t result;

  result = qword_256053598;
  if (!qword_256053598)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment.CodingKeys, &type metadata for RawOrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053598);
  }
  return result;
}

unint64_t sub_2334F6720()
{
  unint64_t result;

  result = qword_2560535A0;
  if (!qword_2560535A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPayment.CodingKeys, &type metadata for RawOrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560535A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentStatus()
{
  return &type metadata for RawOrderPaymentStatus;
}

uint64_t assignWithCopy for RawOrderPayment(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RawOrderPayment(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RawOrderPayment()
{
  return &type metadata for RawOrderPayment;
}

ValueMetadata *type metadata accessor for RawOrderPayment.CodingConfiguration()
{
  return &type metadata for RawOrderPayment.CodingConfiguration;
}

uint64_t _s10FinanceKit21RawOrderPaymentStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2334F6964 + 4 * byte_2336547D3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2334F6998 + 4 * byte_2336547CE[v4]))();
}

uint64_t sub_2334F6998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F69A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334F69A8);
  return result;
}

uint64_t sub_2334F69B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334F69BCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2334F69C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F69C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPayment.CodingKeys()
{
  return &type metadata for RawOrderPayment.CodingKeys;
}

ValueMetadata *type metadata accessor for RawOrderPaymentSummaryItem()
{
  return &type metadata for RawOrderPaymentSummaryItem;
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentSummaryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334F6A40 + 4 * byte_2336547DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334F6A74 + 4 * byte_2336547D8[v4]))();
}

uint64_t sub_2334F6A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F6A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334F6A84);
  return result;
}

uint64_t sub_2334F6A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334F6A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334F6A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F6AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentSummaryItem.CodingKeys()
{
  return &type metadata for RawOrderPaymentSummaryItem.CodingKeys;
}

unint64_t sub_2334F6AC4()
{
  unint64_t result;

  result = qword_2560535A8;
  if (!qword_2560535A8)
  {
    result = MEMORY[0x234934494](&unk_233654CA4, &type metadata for RawOrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560535A8);
  }
  return result;
}

unint64_t sub_2334F6B0C()
{
  unint64_t result;

  result = qword_2560535B0;
  if (!qword_2560535B0)
  {
    result = MEMORY[0x234934494](&unk_233654BDC, &type metadata for RawOrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560535B0);
  }
  return result;
}

unint64_t sub_2334F6B54()
{
  unint64_t result;

  result = qword_2560535B8;
  if (!qword_2560535B8)
  {
    result = MEMORY[0x234934494](&unk_233654C04, &type metadata for RawOrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560535B8);
  }
  return result;
}

unint64_t sub_2334F6B98()
{
  unint64_t result;

  result = qword_2560535C0;
  if (!qword_2560535C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentStatus, &type metadata for RawOrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_2560535C0);
  }
  return result;
}

unint64_t TransactionStatus.init(from:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result > 8)
    *a2 = 3;
  else
    *a2 = asc_233673D11[result];
  return result;
}

{
  if (result > 8)
    *a2 = 3;
  else
    *a2 = asc_233673D11[result];
  return result;
}

uint64_t PKPaymentTransactionStatus.init(from:)(char *a1)
{
  return qword_233654D20[*a1];
}

uint64_t sub_2334F6C40()
{
  sub_2334F8498(&qword_256053678, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
  return sub_23361F2D8();
}

uint64_t sub_2334F6C78()
{
  sub_2334F8498(&qword_256053678, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
  return sub_23361F2CC();
}

unint64_t static FinanceNetworkError.errorDomain.getter()
{
  return 0xD00000000000001FLL;
}

void FinanceNetworkError.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FinanceNetworkError();
  MEMORY[0x24BDAC7A8](v1);
  sub_2334F6E20(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_2334F6D50 + 4 * byte_233654D50[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2334F6D50()
{
  uint64_t v0;

  sub_2334F6E64(v0);
  return 0;
}

uint64_t FinanceNetworkError.Code.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t type metadata accessor for FinanceNetworkError()
{
  uint64_t result;

  result = qword_256053640;
  if (!qword_256053640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2334F6E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FinanceNetworkError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2334F6E64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FinanceNetworkError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void FinanceNetworkError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for FinanceNetworkError();
  MEMORY[0x24BDAC7A8](v4);
  sub_2334F6E20(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_2334F6FC0 + 4 * byte_233654D58[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_2334F6FC0()
{
  uint64_t *v0;
  void **v1;
  void *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v8;

  v2 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = sub_23361E150();
  *(_QWORD *)(inited + 40) = v4;
  swift_getErrorValue();
  v5 = *v0;
  v6 = v0[1];
  *(_QWORD *)(inited + 72) = v6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_0, v5, v6);
  v8 = sub_23315F6D0(inited);

  return v8;
}

void FinanceNetworkError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for FinanceNetworkError();
  MEMORY[0x24BDAC7A8](v4);
  sub_2334F6E20(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_2334F7500 + 4 * byte_233654D60[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2334F7500()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *v0;
  *(_QWORD *)(v2 - 144) = 0;
  *(_QWORD *)(v2 - 136) = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 144) = v1 + 15;
  *(_QWORD *)(v2 - 136) = 0x8000000233679D30;
  swift_getErrorValue();
  sub_23361F2E4();
  sub_23361E27C();
  swift_bridgeObjectRelease();

  return *(_QWORD *)(v2 - 144);
}

FinanceKit::FinanceNetworkError::Code_optional __swiftcall FinanceNetworkError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::FinanceNetworkError::Code_optional)rawValue;
}

unint64_t sub_2334F7920()
{
  unint64_t result;

  result = qword_2560535C8;
  if (!qword_2560535C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceNetworkError.Code, &type metadata for FinanceNetworkError.Code);
    atomic_store(result, (unint64_t *)&qword_2560535C8);
  }
  return result;
}

FinanceKit::FinanceNetworkError::Code_optional sub_2334F7964(Swift::Int *a1)
{
  return FinanceNetworkError.Code.init(rawValue:)(*a1);
}

uint64_t sub_2334F796C()
{
  return sub_2334F8498((unint64_t *)&qword_256051070, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
}

unint64_t sub_2334F7990()
{
  return 0xD00000000000001FLL;
}

char *initializeBufferWithCopyOfBuffer for FinanceNetworkError(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 5u:
        v7 = *a2;
        v8 = v7;
        *(_QWORD *)a1 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_QWORD *)a1 = *a2;
        v11 = a2[4];
        *((_QWORD *)a1 + 4) = v11;
        (**((void (***)(uint64_t, uint64_t))v11 - 1))((uint64_t)(a1 + 8), (uint64_t)(a2 + 1));
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v12 = sub_23361D634();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v15 = sub_23361D634();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E8);
        *(_WORD *)&a1[*(int *)(v16 + 48)] = *(_WORD *)((char *)a2 + *(int *)(v16 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FinanceNetworkError(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(id *, uint64_t);
  id *v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 5u:

      break;
    case 2u:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
      break;
    case 3u:
      v2 = sub_23361D634();
      v3 = *(_QWORD *)(v2 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
      {
        v5 = *(void (**)(id *, uint64_t))(v3 + 8);
        v6 = a1;
        v4 = v2;
        goto LABEL_8;
      }
      break;
    case 6u:
      v4 = sub_23361D634();
      v5 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v6 = a1;
LABEL_8:
      v5(v6, v4);
      break;
    default:
      return;
  }
}

void **initializeWithCopy for FinanceNetworkError(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 5u:
      v6 = *a2;
      v7 = v6;
      *a1 = v6;
      goto LABEL_9;
    case 2u:
      *a1 = *a2;
      v8 = a2[4];
      a1[4] = v8;
      (**((void (***)(uint64_t, uint64_t))v8 - 1))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
      goto LABEL_9;
    case 3u:
      v9 = sub_23361D634();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      goto LABEL_9;
    case 6u:
      v12 = sub_23361D634();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E8);
      *(_WORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_WORD *)((char *)a2 + *(int *)(v13 + 48));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **assignWithCopy for FinanceNetworkError(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_2334F6E64((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 5u:
        v6 = *a2;
        v7 = v6;
        *a1 = v6;
        goto LABEL_10;
      case 2u:
        *a1 = *a2;
        v8 = a2[4];
        a1[4] = v8;
        (**((void (***)(uint64_t, uint64_t))v8 - 1))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
        goto LABEL_10;
      case 3u:
        v9 = sub_23361D634();
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        goto LABEL_10;
      case 6u:
        v12 = sub_23361D634();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E8);
        *(_WORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_WORD *)((char *)a2 + *(int *)(v13 + 48));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for FinanceNetworkError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    v10 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E8);
    *(_WORD *)&a1[*(int *)(v11 + 48)] = *(_WORD *)&a2[*(int *)(v11 + 48)];
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 3)
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for FinanceNetworkError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_2334F6E64((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6)
    {
      v10 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E8);
      *(_WORD *)&a1[*(int *)(v11 + 48)] = *(_WORD *)&a2[*(int *)(v11 + 48)];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 3)
    {
      v7 = sub_23361D634();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_2334F830C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  const char *v4;
  const char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  char *v10;

  v4 = "\b";
  v5 = "\b";
  v6 = &unk_233654F30;
  sub_2331FE95C();
  if (v1 <= 0x3F)
  {
    v7 = *(_QWORD *)(v0 - 8) + 64;
    v8 = MEMORY[0x24BEE0178] + 64;
    v9 = "\b";
    sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v10 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t storeEnumTagSinglePayload for FinanceNetworkError.Code(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2334F8418 + 4 * byte_233654D89[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2334F844C + 4 * byte_233654D84[v4]))();
}

uint64_t sub_2334F844C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F8454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334F845CLL);
  return result;
}

uint64_t sub_2334F8468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334F8470);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2334F8474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334F847C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceNetworkError.Code()
{
  return &type metadata for FinanceNetworkError.Code;
}

uint64_t sub_2334F8498(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FinanceNetworkError();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RawOrderPickupFulfillment.pickupWindow.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v24 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Duration();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v23 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for RawOrderPickupFulfillment();
  sub_2331686A0(v1 + *(int *)(v15 + 48), (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
    v16 = type metadata accessor for Order.FulfillmentWindow(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v24, 1, 1, v16);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
    sub_2331686A0(v1 + *(int *)(v15 + 52), (uint64_t)v4, &qword_25604A478);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_233168608((uint64_t)v4, &qword_25604A478);
      v19 = v24;
      v18(v24, v14, v11);
    }
    else
    {
      v21 = v23;
      sub_233168580((uint64_t)v4, v23, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      v19 = v24;
      v18(v24, v14, v11);
      v22 = type metadata accessor for TimeWindow(0);
      sub_233168580(v21, (uint64_t)&v19[*(int *)(v22 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    }
    v20 = type metadata accessor for Order.FulfillmentWindow(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  }
}

uint64_t type metadata accessor for RawOrderPickupFulfillment()
{
  uint64_t result;

  result = qword_254246090;
  if (!qword_254246090)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawOrderPickupStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334F87E4 + 4 * byte_233654F70[*v0]))(1852141679, 0xE400000000000000);
}

uint64_t sub_2334F87E4()
{
  return 0x69737365636F7270;
}

uint64_t sub_2334F8800()
{
  return 0x726F467964616572;
}

uint64_t sub_2334F8824()
{
  return 0x705564656B636970;
}

uint64_t sub_2334F883C()
{
  return 0x6575737369;
}

uint64_t sub_2334F8850()
{
  return 0x656C6C65636E6163;
}

uint64_t RawOrderPickupFulfillment.init(fulfillmentIdentifier:status:displayName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;

  v11 = *a3;
  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = 0;
  *(_QWORD *)(a6 + 32) = 1;
  *(_OWORD *)(a6 + 40) = 0u;
  *(_OWORD *)(a6 + 56) = 0u;
  *(_OWORD *)(a6 + 72) = 0u;
  *(_OWORD *)(a6 + 88) = 0u;
  *(_OWORD *)(a6 + 104) = 0u;
  *(_OWORD *)(a6 + 120) = 0u;
  *(_OWORD *)(a6 + 136) = 0u;
  *(_OWORD *)(a6 + 152) = 0u;
  *(_OWORD *)(a6 + 168) = 0u;
  *(_OWORD *)(a6 + 184) = 0u;
  *(_OWORD *)(a6 + 200) = 0u;
  *(_WORD *)(a6 + 216) = 256;
  v12 = (int *)type metadata accessor for RawOrderPickupFulfillment();
  *(_QWORD *)(a6 + 224) = 0;
  *(_QWORD *)(a6 + 232) = 0;
  v13 = a6 + v12[12];
  v14 = sub_23361D634();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = a6 + v12[13];
  v17 = type metadata accessor for Duration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(a6 + v12[14], 1, 1, v14);
  v19 = (_QWORD *)(a6 + v12[15]);
  *v19 = a1;
  v19[1] = a2;
  *(_BYTE *)(a6 + 8) = v11;
  *(_QWORD *)(a6 + 240) = a4;
  *(_QWORD *)(a6 + 248) = a5;
  *(_QWORD *)a6 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t RawOrderPickupFulfillment.setPickupWindowDuration(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  v7 = type metadata accessor for Duration();
  v8 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 0, 1, v7);
  v9 = type metadata accessor for RawOrderPickupFulfillment();
  sub_2334FC018((uint64_t)v6, v1 + *(int *)(v9 + 48));
  result = sub_233168608((uint64_t)v6, &qword_25604A478);
  if (!v2)
  {
    v11 = v1 + *(int *)(v9 + 52);
    sub_233168608(v11, &qword_25604A478);
    sub_2331684BC(a1, v11, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(v11, 0, 1, v7);
  }
  return result;
}

uint64_t RawOrderPickupFulfillment.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  int v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106[5];
  uint64_t v107;
  uint64_t v108;

  v106[4] = a2;
  v84 = a3;
  v78 = sub_23361D748();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23361D868();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Duration();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v85 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v90 = (uint64_t)&v71 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v88 = (uint64_t)&v71 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v89 = (uint64_t)&v71 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v91 = (uint64_t)&v71 - v23;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053680);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RawOrderPickupFulfillment();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v29 + 2) = 0;
  *((_QWORD *)v29 + 3) = 0;
  *((_QWORD *)v29 + 4) = 1;
  *(_OWORD *)(v29 + 40) = 0u;
  *(_OWORD *)(v29 + 56) = 0u;
  *(_OWORD *)(v29 + 72) = 0u;
  *(_OWORD *)(v29 + 88) = 0u;
  *(_OWORD *)(v29 + 104) = 0u;
  *(_OWORD *)(v29 + 120) = 0u;
  *(_OWORD *)(v29 + 136) = 0u;
  *(_OWORD *)(v29 + 152) = 0u;
  *(_OWORD *)(v29 + 168) = 0u;
  *(_OWORD *)(v29 + 184) = 0u;
  *(_OWORD *)(v29 + 200) = 0u;
  *((_WORD *)v29 + 108) = 256;
  *((_QWORD *)v29 + 28) = 0;
  *((_QWORD *)v29 + 29) = 0;
  v30 = (uint64_t)&v29[*(int *)(v27 + 48)];
  v87 = v10;
  v31 = *(void (**)(void))(v10 + 56);
  v98 = v30;
  v31();
  v32 = (uint64_t)&v29[*(int *)(v26 + 52)];
  v83 = v7;
  v33 = *(void (**)(void))(v7 + 56);
  v97 = v32;
  v33();
  v94 = v26;
  v96 = &v29[*(int *)(v26 + 56)];
  v31();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334FC3B8();
  v34 = v95;
  sub_23361F3EC();
  if (!v34)
  {
    v74 = v6;
    v95 = v9;
    LOBYTE(v99) = 11;
    v36 = sub_23361F02C();
    v38 = v37;
    v72 = v25;
    v73 = a1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v39 = sub_233308400(v106, v36, v38);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v99) = 11;
      sub_23361EE10();
      swift_allocError();
      sub_2331B1A14(&qword_256053690, &qword_256053680, MEMORY[0x24BEE33F8]);
      v41 = v72;
      v42 = v93;
      sub_23361EDE0();
      swift_willThrow();
      swift_release();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v41, v42);
      v35 = 0;
      a1 = v73;
      goto LABEL_6;
    }
    v40 = (uint64_t *)&v29[*(int *)(v94 + 60)];
    *v40 = v36;
    v40[1] = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
    LOBYTE(v106[0]) = 0;
    sub_23330A8EC(&qword_256049D58, (uint64_t (*)(void))sub_23330A864, MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v45 = MEMORY[0x24BEE4AF8];
    if ((_QWORD)v99)
      v45 = v99;
    *(_QWORD *)v29 = v45;
    LOBYTE(v106[0]) = 1;
    sub_2334FC3FC();
    sub_23361F068();
    v29[8] = v99;
    LOBYTE(v99) = 2;
    *((_QWORD *)v29 + 2) = sub_23361EFCC();
    *((_QWORD *)v29 + 3) = v46;
    LOBYTE(v106[0]) = 3;
    sub_23320C7C4();
    sub_23361EFFC();
    v47 = v105;
    v48 = v100;
    *((_OWORD *)v29 + 2) = v99;
    *((_OWORD *)v29 + 3) = v48;
    v49 = v102;
    *((_OWORD *)v29 + 4) = v101;
    *((_OWORD *)v29 + 5) = v49;
    v50 = v104;
    *((_OWORD *)v29 + 6) = v103;
    *((_OWORD *)v29 + 7) = v50;
    *((_QWORD *)v29 + 16) = v47;
    LOBYTE(v106[0]) = 4;
    sub_2334D2820();
    sub_23361EFFC();
    v51 = v102;
    v52 = v100;
    *(_OWORD *)(v29 + 136) = v99;
    *(_OWORD *)(v29 + 152) = v52;
    *(_OWORD *)(v29 + 168) = v101;
    *((_QWORD *)v29 + 23) = v51;
    LOBYTE(v106[0]) = 5;
    sub_2333936BC();
    sub_23361EFFC();
    v53 = v100;
    v54 = BYTE8(v100);
    v55 = BYTE9(v100);
    *((_OWORD *)v29 + 12) = v99;
    *((_QWORD *)v29 + 26) = v53;
    v29[216] = v54;
    v29[217] = v55;
    LOBYTE(v99) = 6;
    *((_QWORD *)v29 + 28) = sub_23361EFCC();
    *((_QWORD *)v29 + 29) = v56;
    LOBYTE(v99) = 7;
    *((_QWORD *)v29 + 30) = sub_23361F02C();
    *((_QWORD *)v29 + 31) = v57;
    LOBYTE(v99) = 8;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361EFFC();
    sub_233170B8C(v91, v98, (uint64_t *)&unk_254247DA0);
    LOBYTE(v99) = 9;
    sub_233167C58(&qword_254244EF0, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
    sub_23361EFFC();
    sub_233170B8C(v90, v97, &qword_25604A478);
    LOBYTE(v99) = 10;
    sub_23361EFFC();
    sub_233170B8C(v89, (uint64_t)v96, (uint64_t *)&unk_254247DA0);
    v58 = v88;
    sub_2331686A0(v98, v88, (uint64_t *)&unk_254247DA0);
    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    if (v59(v58, 1, v95) == 1)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v93);
      v60 = (uint64_t *)&unk_254247DA0;
      v61 = &v108;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v86, v88, v95);
      v62 = v85;
      sub_2331686A0(v97, v85, &qword_25604A478);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v62, 1, v74) != 1)
      {
        sub_233168580(v85, v82, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
        v63 = v77;
        v64 = v76;
        v65 = v78;
        (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v76, *MEMORY[0x24BDCEF50], v78);
        v66 = v79;
        sub_23361D754();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
        v67 = (uint64_t)v75;
        sub_23361D808();
        v68 = v59(v67, 1, v95);
        sub_233168608(v67, (uint64_t *)&unk_254247DA0);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v66, v81);
        if (v68 == 1)
        {
          LOBYTE(v99) = 9;
          sub_23361EE10();
          swift_allocError();
          sub_2331B1A14(&qword_256053690, &qword_256053680, MEMORY[0x24BEE33F8]);
          v69 = v72;
          v70 = v93;
          sub_23361EDE0();
          swift_willThrow();
          swift_release();
          sub_233168500(v82, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v95);
          (*(void (**)(char *, uint64_t))(v92 + 8))(v69, v70);
          v43 = 1;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
          swift_bridgeObjectRelease();
          v35 = 1;
          goto LABEL_7;
        }
        swift_release();
        sub_233168500(v82, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v95);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v93);
LABEL_19:
        sub_2331684BC((uint64_t)v29, v84, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
        return sub_233168500((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      }
      swift_release();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v95);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v93);
      v60 = &qword_25604A478;
      v61 = &v107;
    }
    sub_233168608(*(v61 - 32), v60);
    goto LABEL_19;
  }
  swift_release();
  v35 = 0;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v43 = 0;
LABEL_7:
  swift_bridgeObjectRelease();
  sub_233329310(*((_QWORD *)v29 + 4));
  sub_2333BD360(*((_QWORD *)v29 + 17), *((_QWORD *)v29 + 18), *((_QWORD *)v29 + 19), *((_QWORD *)v29 + 20), *((_QWORD *)v29 + 21));
  swift_bridgeObjectRelease();
  if (v43)
    swift_bridgeObjectRelease();
  sub_233168608(v98, (uint64_t *)&unk_254247DA0);
  sub_233168608(v97, &qword_25604A478);
  result = sub_233168608((uint64_t)v96, (uint64_t *)&unk_254247DA0);
  if (v35)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t RawOrderPickupFulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560536A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334FC3B8();
  sub_23361F410();
  *(_QWORD *)&v21 = *(_QWORD *)v3;
  v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
  sub_23330A8EC(&qword_256049D78, (uint64_t (*)(void))sub_23330A954, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (!v2)
  {
    LOBYTE(v21) = *(_BYTE *)(v3 + 8);
    v28 = 1;
    sub_2334FC440();
    sub_23361F17C();
    LOBYTE(v21) = 2;
    sub_23361F0E0();
    v9 = *(_QWORD *)(v3 + 128);
    v10 = *(_OWORD *)(v3 + 48);
    v21 = *(_OWORD *)(v3 + 32);
    v22 = v10;
    v11 = *(_OWORD *)(v3 + 80);
    v23 = *(_OWORD *)(v3 + 64);
    v24 = v11;
    v12 = *(_OWORD *)(v3 + 112);
    v25 = *(_OWORD *)(v3 + 96);
    v26 = v12;
    v27 = v9;
    v28 = 3;
    sub_23320C808();
    sub_23361F110();
    v13 = *(_QWORD *)(v3 + 184);
    v14 = *(_OWORD *)(v3 + 152);
    v21 = *(_OWORD *)(v3 + 136);
    v22 = v14;
    v23 = *(_OWORD *)(v3 + 168);
    *(_QWORD *)&v24 = v13;
    v28 = 4;
    sub_2334D2B70();
    sub_23361F110();
    v15 = *(_QWORD *)(v3 + 208);
    v16 = *(_BYTE *)(v3 + 216);
    v17 = *(_BYTE *)(v3 + 217);
    v21 = *(_OWORD *)(v3 + 192);
    *(_QWORD *)&v22 = v15;
    BYTE8(v22) = v16;
    BYTE9(v22) = v17;
    v28 = 5;
    sub_233393700();
    sub_23361F110();
    LOBYTE(v21) = 6;
    sub_23361F0E0();
    LOBYTE(v21) = 7;
    sub_23361F140();
    v18 = type metadata accessor for RawOrderPickupFulfillment();
    LOBYTE(v21) = 8;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    v20[1] = v3 + *(int *)(v18 + 52);
    LOBYTE(v21) = 9;
    type metadata accessor for Duration();
    sub_233167C58((unint64_t *)&unk_254245170, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
    sub_23361F110();
    LOBYTE(v21) = 10;
    sub_23361F110();
    LOBYTE(v21) = 11;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL RawOrderPickupStatus.isTerminal.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *v0;
  v2 = v1 > 4;
  v3 = v1 & 0x1F;
  return v2 || v3 == 3;
}

FinanceKit::RawOrderPickupStatus_optional __swiftcall RawOrderPickupStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawOrderPickupStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RawOrderPickupStatus.allCases.getter()
{
  return &unk_25046B468;
}

void sub_2334F9D80(char *a1)
{
  sub_2332264F0(*a1);
}

void sub_2334F9D8C()
{
  char *v0;

  sub_23353D9B8(*v0);
}

void sub_2334F9D94()
{
  __asm { BR              X10 }
}

uint64_t sub_2334F9DC8()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_2334F9E64(uint64_t a1)
{
  char *v1;

  sub_23353F214(a1, *v1);
}

FinanceKit::RawOrderPickupStatus_optional sub_2334F9E6C(Swift::String *a1)
{
  return RawOrderPickupStatus.init(rawValue:)(*a1);
}

uint64_t sub_2334F9E78()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2334F9EA0 + 4 * byte_233654F7C[*v0]))();
}

void sub_2334F9EA0(_QWORD *a1@<X8>)
{
  *a1 = 0x69737365636F7270;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_2334F9EC0(char *a1@<X8>)
{
  strcpy(a1, "readyForPickup");
  a1[15] = -18;
}

void sub_2334F9EE8(_QWORD *a1@<X8>)
{
  *a1 = 0x705564656B636970;
  a1[1] = 0xE800000000000000;
}

void sub_2334F9F04(_QWORD *a1@<X8>)
{
  *a1 = 0x6575737369;
  a1[1] = 0xE500000000000000;
}

void sub_2334F9F1C(_QWORD *a1@<X8>)
{
  *a1 = 0x656C6C65636E6163;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_2334F9F3C()
{
  sub_2334FE4FC();
  return sub_23361E390();
}

uint64_t sub_2334F9F98()
{
  sub_2334FE4FC();
  return sub_23361E354();
}

void sub_2334F9FE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B468;
}

uint64_t static RawOrderPickupFulfillmentError.== infix(_:_:)()
{
  return 1;
}

uint64_t RawOrderPickupFulfillmentError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t RawOrderPickupFulfillmentError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t RawOrderPickupFulfillment.lineItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPickupFulfillment.lineItems.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.lineItems.modify())()
{
  return nullsub_1;
}

void RawOrderPickupFulfillment.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *RawOrderPickupFulfillment.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.status.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPickupFulfillment.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.statusDescription.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.address.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v9 = v1[11];
  v10 = v1[12];
  v11 = v1[13];
  v12 = v1[14];
  v13 = v1[15];
  v14 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  return sub_23332938C(v2);
}

__n128 RawOrderPickupFulfillment.address.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v5 = a1[4];
  v6 = a1[3];
  v4 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  sub_233329310(*(_QWORD *)(v1 + 32));
  *(_OWORD *)(v1 + 32) = v9;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v7;
  *(_OWORD *)(v1 + 80) = v6;
  result = v4;
  *(_OWORD *)(v1 + 96) = v5;
  *(__n128 *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 128) = v2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.address.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.barcode.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[17];
  v3 = v1[18];
  v4 = v1[19];
  v5 = v1[20];
  v6 = v1[21];
  v7 = v1[22];
  v8 = v1[23];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_233364468(v2, v3, v4, v5, v6);
}

__n128 RawOrderPickupFulfillment.barcode.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_2333BD360(v1[17], v1[18], v1[19], v1[20], v1[21]);
  *(_OWORD *)(v1 + 17) = v6;
  *(_OWORD *)(v1 + 19) = v5;
  result = v4;
  *(__n128 *)(v1 + 21) = v4;
  v1[23] = v2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.barcode.modify())()
{
  return nullsub_1;
}

__n128 RawOrderPickupFulfillment.location.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  __n128 result;

  v2 = v1[13].n128_u64[0];
  v3 = v1[13].n128_u8[8];
  v4 = v1[13].n128_u8[9];
  result = v1[12];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  a1[1].n128_u8[9] = v4;
  return result;
}

__n128 RawOrderPickupFulfillment.location.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  __n128 result;

  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = a1[1].n128_u8[9];
  result = *a1;
  v1[12] = *a1;
  v1[13].n128_u64[0] = v2;
  v1[13].n128_u8[8] = v3;
  v1[13].n128_u8[9] = v4;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.location.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPickupFulfillment.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.notes.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPickupFulfillment.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 240) = a1;
  *(_QWORD *)(v2 + 248) = a2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.displayName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.pickupAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 48), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderPickupFulfillment.pickupAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 48), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderPickupFulfillment.pickupAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderPickupFulfillment();
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.pickupWindowDuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 52), a1, &qword_25604A478);
}

uint64_t RawOrderPickupFulfillment.pickedUpAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 56), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderPickupFulfillment.pickedUpAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderPickupFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 56), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderPickupFulfillment.pickedUpAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderPickupFulfillment();
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawOrderPickupFulfillment() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPickupFulfillment.fulfillmentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawOrderPickupFulfillment() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderPickupFulfillment.fulfillmentIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawOrderPickupFulfillment();
  return nullsub_1;
}

uint64_t RawOrderPickupFulfillment.estimatedEndOfPickupWindow.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v41 = a1;
  v40 = sub_23361D748();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23361D868();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Duration();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v33 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - v13;
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RawOrderPickupFulfillment();
  sub_2331686A0(v1 + *(int *)(v19 + 48), (uint64_t)v14, (uint64_t *)&unk_254247DA0);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v20(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
    v21 = 1;
    v22 = v41;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v22, v21, 1, v15);
  }
  v23 = v14;
  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v18, v23, v15);
  sub_2331686A0(v1 + *(int *)(v19 + 52), (uint64_t)v6, &qword_25604A478);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_233168608((uint64_t)v6, &qword_25604A478);
    v22 = v41;
    v24(v41, v18, v15);
LABEL_7:
    v21 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v22, v21, 1, v15);
  }
  v25 = v34;
  sub_233168580((uint64_t)v6, v34, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  v26 = v38;
  v27 = v36;
  v28 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v36, *MEMORY[0x24BDCEF50], v40);
  v29 = v35;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  v30 = v33;
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v39);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v30, 1, v15);
  if ((_DWORD)result != 1)
  {
    v22 = v41;
    v24(v41, v30, v15);
    sub_233168500(v25, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2334FA9C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334FAA00 + 4 * byte_233654F82[a1]))(0x6D657449656E696CLL, 0xE900000000000073);
}

uint64_t sub_2334FAA00()
{
  return 0x737574617473;
}

unint64_t sub_2334FAA14()
{
  return 0xD000000000000011;
}

uint64_t sub_2334FAA30()
{
  return 0x73736572646461;
}

uint64_t sub_2334FAA48()
{
  return 0x65646F63726162;
}

uint64_t sub_2334FAA60()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_2334FAA78()
{
  return 0x7365746F6ELL;
}

uint64_t sub_2334FAA8C()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2334FAAAC()
{
  return 0x744170756B636970;
}

unint64_t sub_2334FAAC4()
{
  return 0xD000000000000014;
}

uint64_t sub_2334FAB18()
{
  unsigned __int8 *v0;

  return sub_2334FA9C8(*v0);
}

uint64_t sub_2334FAB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334FE01C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334FAB44()
{
  sub_2334FC3B8();
  return sub_23361F428();
}

uint64_t sub_2334FAB6C()
{
  sub_2334FC3B8();
  return sub_23361F434();
}

uint64_t sub_2334FAB98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return RawOrderPickupFulfillment.init(from:configuration:)(a1, *a2, a3);
}

uint64_t sub_2334FABB0(_QWORD *a1)
{
  return RawOrderPickupFulfillment.encode(to:)(a1);
}

Swift::Void __swiftcall RawOrderPickupFulfillment.clearPickupWindowDuration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RawOrderPickupFulfillment() + 52);
  sub_233168608(v1, &qword_25604A478);
  v2 = type metadata accessor for Duration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_2334FAC1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v4, &qword_256043808);
  return RawOrderPickupFulfillment.pickupWindow.setter((uint64_t)v4);
}

uint64_t RawOrderPickupFulfillment.pickupWindow.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v34);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.FulfillmentWindow(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v18, &qword_256043808);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v22(v18, 1, v6) == 1)
  {
    sub_233168608((uint64_t)v18, &qword_256043808);
    v23 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
  }
  else
  {
    sub_2331684BC((uint64_t)v18, (uint64_t)v12, type metadata accessor for Order.FulfillmentWindow);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v12, (uint64_t)v5, type metadata accessor for TimeWindow);
      v24 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v5, v24);
      sub_233168500((uint64_t)v5, type metadata accessor for TimeWindow);
    }
    else
    {
      v24 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v12, v24);
    }
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 0, 1, v24);
  }
  v25 = v36;
  v26 = type metadata accessor for RawOrderPickupFulfillment();
  sub_233170B8C((uint64_t)v21, v25 + *(int *)(v26 + 48), (uint64_t *)&unk_254247DA0);
  sub_2331686A0(a1, (uint64_t)v16, &qword_256043808);
  if (v22(v16, 1, v6) == 1)
  {
    sub_233168608(a1, &qword_256043808);
    sub_233168608((uint64_t)v16, &qword_256043808);
    v27 = type metadata accessor for Duration();
    v28 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v35, 1, 1, v27);
  }
  else
  {
    sub_2331684BC((uint64_t)v16, (uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v28 = (uint64_t)v35;
    if (EnumCaseMultiPayload == 1)
    {
      sub_233168580((uint64_t)v10, (uint64_t)v5, type metadata accessor for TimeWindow);
      sub_2331684BC((uint64_t)&v5[*(int *)(v34 + 20)], v28, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      sub_233168500((uint64_t)v5, type metadata accessor for TimeWindow);
      v30 = type metadata accessor for Duration();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 0, 1, v30);
    }
    else
    {
      v31 = type metadata accessor for Duration();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v28, 1, 1, v31);
      sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    }
    sub_233168608(a1, &qword_256043808);
    sub_233168500((uint64_t)v16, type metadata accessor for Order.FulfillmentWindow);
  }
  return sub_233170B8C(v28, v25 + *(int *)(v26 + 52), &qword_25604A478);
}

void (*RawOrderPickupFulfillment.pickupWindow.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  char *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256043808) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = (char *)malloc(v3);
  a1[2] = v4;
  RawOrderPickupFulfillment.pickupWindow.getter(v4);
  return sub_2334FB174;
}

void sub_2334FB174(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_2331686A0(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_256043808);
    RawOrderPickupFulfillment.pickupWindow.setter((uint64_t)v2);
    sub_233168608((uint64_t)v3, &qword_256043808);
  }
  else
  {
    RawOrderPickupFulfillment.pickupWindow.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t _s10FinanceKit25RawOrderPickupFulfillmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(_QWORD, _QWORD, _QWORD);
  int *v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  unsigned int (*v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(_QWORD, _QWORD, _QWORD);
  uint64_t *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(_QWORD, _QWORD, _QWORD);
  int *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  unsigned int (*v154)(_QWORD, _QWORD, _QWORD);
  int *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int (*v178)(_QWORD, _QWORD, _QWORD);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned int (*v193)(_QWORD, _QWORD, _QWORD);
  uint64_t v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unsigned int (*v204)(_QWORD, _QWORD, _QWORD);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v164 = type metadata accessor for Duration();
  v162 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v158 = (uint64_t)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560536F0);
  MEMORY[0x24BDAC7A8](v5);
  v165 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v159 = (uint64_t)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v167 = (uint64_t)&v140 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v163 = (uint64_t)&v140 - v12;
  v13 = sub_23361D634();
  v169 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v166 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v15 = MEMORY[0x24BDAC7A8](v168);
  v17 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v140 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v157 = (uint64_t)&v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v160 = (uint64_t)&v140 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v161 = (uint64_t)&v140 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v140 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v140 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v140 - v33;
  if ((sub_23322B4CC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_32;
  sub_2332264F0(*(_BYTE *)(a1 + 8));
  if ((v35 & 1) == 0)
    goto LABEL_32;
  v36 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(a2 + 24);
  if (v36)
  {
    if (!v37)
      goto LABEL_32;
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v36 != v37)
    {
      v38 = sub_23361F224();
      v39 = 0;
      if ((v38 & 1) == 0)
        return v39 & 1;
    }
  }
  else if (v37)
  {
    goto LABEL_32;
  }
  v146 = v13;
  v147 = v19;
  v151 = v5;
  v145 = v17;
  v40 = *(_QWORD *)(a1 + 32);
  v155 = *(int **)(a1 + 40);
  v41 = *(_QWORD *)(a1 + 48);
  v42 = *(int **)(a1 + 56);
  v43 = *(_QWORD *)(a1 + 64);
  v44 = *(_QWORD *)(a1 + 72);
  v45 = *(int **)(a1 + 80);
  v46 = *(_QWORD *)(a1 + 88);
  v47 = *(_QWORD *)(a1 + 96);
  v48 = *(_QWORD *)(a1 + 104);
  v49 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(a1 + 112);
  v50 = *(_QWORD *)(a1 + 120);
  v51 = *(int **)(a1 + 128);
  v52 = *(_QWORD *)(a2 + 32);
  v53 = *(_QWORD *)(a2 + 40);
  v54 = *(_QWORD *)(a2 + 48);
  v55 = *(_QWORD *)(a2 + 56);
  v56 = *(char **)(a2 + 64);
  v57 = *(_QWORD *)(a2 + 72);
  v58 = *(_QWORD *)(a2 + 80);
  v59 = *(_QWORD *)(a2 + 88);
  v154 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(a2 + 96);
  v60 = *(_QWORD *)(a2 + 104);
  v61 = *(_QWORD *)(a2 + 112);
  v152 = v42;
  v153 = v60;
  v63 = *(_QWORD *)(a2 + 120);
  v62 = *(_QWORD *)(a2 + 128);
  v156 = v40;
  if (v40 == 1)
  {
    v148 = v50;
    v149 = v46;
    v64 = v48;
    v150 = v44;
    v65 = 1;
    if (v52 == 1)
      goto LABEL_17;
LABEL_15:
    v183 = v65;
    v184 = v155;
    v185 = v41;
    v186 = v152;
    v187 = v43;
    v188 = v150;
    v189 = v45;
    v190 = v149;
    v191 = v47;
    v192 = v64;
    v193 = v49;
    v194 = v148;
    v195 = v51;
    v196 = v52;
    v197 = v53;
    v198 = v54;
    v199 = v55;
    v200 = v56;
    v201 = v57;
    v202 = v58;
    v203 = v59;
    v204 = v154;
    v205 = v153;
    v206 = v61;
    v207 = v63;
    v208 = v62;
    sub_23332938C(v52);
    sub_2334C6164(&v183);
    goto LABEL_32;
  }
  v183 = v156;
  v184 = v155;
  v185 = v41;
  v186 = v42;
  v187 = v43;
  v188 = v44;
  v189 = v45;
  v190 = v46;
  v191 = v47;
  v192 = v48;
  v193 = v49;
  v194 = v50;
  v195 = v51;
  v143 = v49;
  v144 = v51;
  v141 = v43;
  v142 = v47;
  v66 = v41;
  if (v52 == 1)
  {
    v148 = v50;
    v149 = v46;
    v67 = v45;
    v64 = v48;
    v150 = v44;
    v165 = v62;
    v166 = v56;
    v65 = v156;
    v168 = v58;
    v169 = v59;
    v167 = v57;
    v163 = v54;
    v164 = v55;
    v161 = 1;
    v162 = v53;
    v68 = v142;
    v160 = v61;
    v69 = v63;
    swift_bridgeObjectRetain();
    v70 = v66;
    swift_bridgeObjectRetain();
    v71 = v141;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v143;
    swift_bridgeObjectRetain();
    v73 = v144;
    swift_bridgeObjectRetain();
    v55 = v164;
    v62 = v165;
    v63 = v69;
    v61 = v160;
    v52 = v161;
    v53 = v162;
    v54 = v163;
    v56 = v166;
    v57 = v167;
    v58 = v168;
    v59 = v169;
    v51 = v73;
    v49 = v72;
    v47 = v68;
    v45 = v67;
    v43 = v71;
    v41 = v70;
    goto LABEL_15;
  }
  v170 = v52;
  v171 = v53;
  v172 = v54;
  v173 = v55;
  v174 = (uint64_t)v56;
  v175 = v57;
  v176 = v58;
  v177 = v59;
  v178 = v154;
  v179 = v153;
  v180 = v61;
  v181 = v63;
  v182 = v62;
  v74 = _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0((uint64_t)&v183, (uint64_t)&v170);
  v149 = v185;
  v150 = v187;
  v152 = v189;
  v153 = v191;
  v154 = v193;
  v155 = v195;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v74)
    goto LABEL_32;
LABEL_17:
  v76 = *(_QWORD *)(a1 + 136);
  v75 = *(_QWORD *)(a1 + 144);
  v78 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(a1 + 152);
  v77 = *(int **)(a1 + 160);
  v80 = *(_QWORD *)(a1 + 168);
  v79 = *(_QWORD *)(a1 + 176);
  v81 = *(int **)(a1 + 184);
  v83 = *(_QWORD *)(a2 + 136);
  v82 = *(_QWORD *)(a2 + 144);
  v85 = *(_QWORD *)(a2 + 152);
  v84 = *(_QWORD *)(a2 + 160);
  v87 = *(_QWORD *)(a2 + 168);
  v86 = *(_QWORD *)(a2 + 176);
  v88 = *(_QWORD *)(a2 + 184);
  v155 = v77;
  v156 = v79;
  v153 = v76;
  v154 = v78;
  if (v80)
  {
    v183 = v76;
    v184 = (int *)v75;
    v185 = (uint64_t)v78;
    v186 = v77;
    v187 = v80;
    v188 = v79;
    v189 = v81;
    if (v87)
    {
      v170 = v83;
      v171 = v82;
      LOBYTE(v172) = v85;
      v173 = v84;
      v174 = v87;
      v175 = v86;
      v176 = v88;
      v89 = v75;
      sub_233364468(v76, v75, (uint64_t)v78, (uint64_t)v77, v80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v152) = _s10FinanceKit15RawOrderBarcodeV2eeoiySbAC_ACtFZ_0((uint64_t)&v183, &v170);
      v150 = (uint64_t)v184;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v90 = v80;
      v91 = v151;
      sub_2333BD360(v153, v89, (uint64_t)v154, (uint64_t)v155, v90);
      if ((v152 & 1) == 0)
        goto LABEL_32;
      goto LABEL_22;
    }
    v149 = v75;
    v96 = v81;
    v97 = v85;
    v98 = v84;
    v99 = v82;
    swift_bridgeObjectRetain();
    v150 = v80;
    swift_bridgeObjectRetain();
    v152 = v96;
    swift_bridgeObjectRetain();
    v82 = v99;
    v84 = v98;
    v85 = v97;
LABEL_31:
    v100 = v82;
    v101 = v85;
    v102 = v84;
    sub_233364468(v83, v82, v85, v84, v87);
    sub_2333BD360(v153, v149, (uint64_t)v154, (uint64_t)v155, v150);
    sub_2333BD360(v83, v100, v101, v102, v87);
    goto LABEL_32;
  }
  v149 = v75;
  v150 = 0;
  v152 = v81;
  v91 = v151;
  if (v87)
    goto LABEL_31;
LABEL_22:
  v92 = *(_BYTE *)(a2 + 217);
  if ((*(_BYTE *)(a1 + 217) & 1) != 0)
    goto LABEL_23;
  v39 = 0;
  if ((*(_BYTE *)(a2 + 217) & 1) != 0
    || *(double *)(a1 + 192) != *(double *)(a2 + 192)
    || *(double *)(a1 + 200) != *(double *)(a2 + 200))
  {
    return v39 & 1;
  }
  v92 = *(_BYTE *)(a2 + 216);
  if ((*(_BYTE *)(a1 + 216) & 1) != 0)
  {
LABEL_23:
    if ((v92 & 1) == 0)
      goto LABEL_32;
  }
  else
  {
    v39 = 0;
    if ((*(_BYTE *)(a2 + 216) & 1) != 0 || *(double *)(a1 + 208) != *(double *)(a2 + 208))
      return v39 & 1;
  }
  v93 = *(_QWORD *)(a1 + 232);
  v94 = *(_QWORD *)(a2 + 232);
  if (v93)
  {
    if (!v94)
      goto LABEL_32;
    if (*(_QWORD *)(a1 + 224) != *(_QWORD *)(a2 + 224) || v93 != v94)
    {
      v95 = sub_23361F224();
      v39 = 0;
      if ((v95 & 1) == 0)
        return v39 & 1;
    }
  }
  else if (v94)
  {
    goto LABEL_32;
  }
  if (*(_QWORD *)(a1 + 240) == *(_QWORD *)(a2 + 240) && *(_QWORD *)(a1 + 248) == *(_QWORD *)(a2 + 248)
    || (v104 = sub_23361F224(), v39 = 0, (v104 & 1) != 0))
  {
    v105 = (int *)type metadata accessor for RawOrderPickupFulfillment();
    sub_2331686A0(a1 + v105[12], (uint64_t)v34, (uint64_t *)&unk_254247DA0);
    v155 = v105;
    sub_2331686A0(a2 + v105[12], (uint64_t)v32, (uint64_t *)&unk_254247DA0);
    v106 = (uint64_t)v147;
    v107 = (uint64_t)&v147[*(int *)(v168 + 48)];
    sub_2331686A0((uint64_t)v34, (uint64_t)v147, (uint64_t *)&unk_254247DA0);
    v156 = v107;
    v108 = v146;
    sub_2331686A0((uint64_t)v32, v107, (uint64_t *)&unk_254247DA0);
    v109 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v169 + 48);
    if (v109(v106, 1, v108) == 1)
    {
      sub_233168608((uint64_t)v32, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v34, (uint64_t *)&unk_254247DA0);
      if (v109(v156, 1, v108) == 1)
      {
        v154 = v109;
        sub_233168608((uint64_t)v147, (uint64_t *)&unk_254247DA0);
LABEL_52:
        v113 = v155;
        v114 = v163;
        sub_2331686A0(a1 + v155[13], v163, &qword_25604A478);
        v115 = v167;
        sub_2331686A0(a2 + v113[13], v167, &qword_25604A478);
        v116 = v165;
        v117 = v165 + *(int *)(v91 + 48);
        sub_2331686A0(v114, v165, &qword_25604A478);
        sub_2331686A0(v115, v117, &qword_25604A478);
        v118 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
        v119 = v164;
        if (v118(v116, 1, v164) == 1)
        {
          sub_233168608(v115, &qword_25604A478);
          sub_233168608(v114, &qword_25604A478);
          if (v118(v117, 1, v119) == 1)
          {
            sub_233168608(v116, &qword_25604A478);
LABEL_59:
            v123 = v155;
            v124 = v161;
            sub_2331686A0(a1 + v155[14], v161, (uint64_t *)&unk_254247DA0);
            v125 = v160;
            sub_2331686A0(a2 + v123[14], v160, (uint64_t *)&unk_254247DA0);
            v126 = (uint64_t)v145;
            v127 = (uint64_t)&v145[*(int *)(v168 + 48)];
            sub_2331686A0(v124, (uint64_t)v145, (uint64_t *)&unk_254247DA0);
            sub_2331686A0(v125, v127, (uint64_t *)&unk_254247DA0);
            v128 = v126;
            v129 = v146;
            v130 = v154;
            if (v154(v128, 1, v146) == 1)
            {
              sub_233168608(v160, (uint64_t *)&unk_254247DA0);
              sub_233168608(v161, (uint64_t *)&unk_254247DA0);
              if (v130(v127, 1, v129) == 1)
              {
                sub_233168608((uint64_t)v145, (uint64_t *)&unk_254247DA0);
LABEL_67:
                v136 = v155[15];
                v137 = *(_QWORD *)(a1 + v136);
                v138 = *(_QWORD *)(a1 + v136 + 8);
                v139 = (_QWORD *)(a2 + v136);
                if (v137 == *v139 && v138 == v139[1])
                  v39 = 1;
                else
                  v39 = sub_23361F224();
                return v39 & 1;
              }
              goto LABEL_64;
            }
            v131 = v157;
            sub_2331686A0((uint64_t)v145, v157, (uint64_t *)&unk_254247DA0);
            if (v130(v127, 1, v129) == 1)
            {
              sub_233168608(v160, (uint64_t *)&unk_254247DA0);
              sub_233168608(v161, (uint64_t *)&unk_254247DA0);
              (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v131, v129);
LABEL_64:
              v110 = &qword_256042DA0;
              v111 = (uint64_t)v145;
              goto LABEL_65;
            }
            v132 = v169;
            v133 = v166;
            (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v166, v127, v129);
            sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
            v134 = sub_23361E108();
            v135 = *(void (**)(char *, uint64_t))(v132 + 8);
            v135(v133, v129);
            sub_233168608(v160, (uint64_t *)&unk_254247DA0);
            sub_233168608(v161, (uint64_t *)&unk_254247DA0);
            v135((char *)v131, v129);
            sub_233168608((uint64_t)v145, (uint64_t *)&unk_254247DA0);
            if ((v134 & 1) != 0)
              goto LABEL_67;
LABEL_32:
            v39 = 0;
            return v39 & 1;
          }
        }
        else
        {
          v120 = v159;
          sub_2331686A0(v116, v159, &qword_25604A478);
          if (v118(v117, 1, v119) != 1)
          {
            v121 = v158;
            sub_233168580(v117, v158, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
            v122 = MEMORY[0x234930FF0](v120, v121);
            sub_233168500(v121, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
            sub_233168608(v167, &qword_25604A478);
            sub_233168608(v114, &qword_25604A478);
            sub_233168500(v120, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
            sub_233168608(v116, &qword_25604A478);
            if ((v122 & 1) == 0)
              goto LABEL_32;
            goto LABEL_59;
          }
          sub_233168608(v167, &qword_25604A478);
          sub_233168608(v114, &qword_25604A478);
          sub_233168500(v120, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
        }
        v110 = &qword_2560536F0;
        v111 = v116;
LABEL_65:
        sub_233168608(v111, v110);
        goto LABEL_32;
      }
    }
    else
    {
      sub_2331686A0(v106, (uint64_t)v29, (uint64_t *)&unk_254247DA0);
      v154 = v109;
      if (v109(v156, 1, v108) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v166, v156, v108);
        sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        LODWORD(v156) = sub_23361E108();
        v112 = *(void (**)(char *, uint64_t))(v169 + 8);
        v112(v166, v108);
        sub_233168608((uint64_t)v32, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v34, (uint64_t *)&unk_254247DA0);
        v112(v29, v146);
        sub_233168608(v106, (uint64_t *)&unk_254247DA0);
        if ((v156 & 1) == 0)
          goto LABEL_32;
        goto LABEL_52;
      }
      sub_233168608((uint64_t)v32, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v34, (uint64_t *)&unk_254247DA0);
      (*(void (**)(char *, uint64_t))(v169 + 8))(v29, v108);
    }
    v110 = &qword_256042DA0;
    v111 = (uint64_t)v147;
    goto LABEL_65;
  }
  return v39 & 1;
}

uint64_t sub_2334FC018(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a2;
  v35 = sub_23361D748();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D868();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_23361D634();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v34 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Duration();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v16, &qword_25604A478);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v21 = &qword_25604A478;
    v22 = (uint64_t)v16;
    return sub_233168608(v22, v21);
  }
  sub_233168580((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  sub_2331686A0(v39, (uint64_t)v11, (uint64_t *)&unk_254247DA0);
  v23 = v40;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  if (v24(v11, 1, v12) == 1)
  {
    sub_233168500((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    v21 = (uint64_t *)&unk_254247DA0;
    v22 = (uint64_t)v11;
    return sub_233168608(v22, v21);
  }
  v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v34, v11, v12);
  v27 = v32;
  v28 = v33;
  v29 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x24BDCEF50], v35);
  v30 = v36;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
  sub_23361D808();
  LODWORD(v29) = v24(v9, 1, v12);
  sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
  if ((_DWORD)v29 == 1)
  {
    sub_2334FE540();
    swift_allocError();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v12);
  return sub_233168500((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
}

unint64_t sub_2334FC3B8()
{
  unint64_t result;

  result = qword_256053688;
  if (!qword_256053688)
  {
    result = MEMORY[0x234934494](&unk_233655414, &type metadata for RawOrderPickupFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053688);
  }
  return result;
}

unint64_t sub_2334FC3FC()
{
  unint64_t result;

  result = qword_256053698;
  if (!qword_256053698)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupStatus, &type metadata for RawOrderPickupStatus);
    atomic_store(result, (unint64_t *)&qword_256053698);
  }
  return result;
}

unint64_t sub_2334FC440()
{
  unint64_t result;

  result = qword_2560536A8;
  if (!qword_2560536A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupStatus, &type metadata for RawOrderPickupStatus);
    atomic_store(result, (unint64_t *)&qword_2560536A8);
  }
  return result;
}

unint64_t sub_2334FC488()
{
  unint64_t result;

  result = qword_2560536B0;
  if (!qword_2560536B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupStatus, &type metadata for RawOrderPickupStatus);
    atomic_store(result, (unint64_t *)&qword_2560536B0);
  }
  return result;
}

uint64_t sub_2334FC4CC()
{
  return sub_2331B1A14(&qword_2560536B8, &qword_2560536C0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2334FC4FC()
{
  unint64_t result;

  result = qword_2560536C8;
  if (!qword_2560536C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupFulfillmentError, &type metadata for RawOrderPickupFulfillmentError);
    atomic_store(result, (unint64_t *)&qword_2560536C8);
  }
  return result;
}

uint64_t sub_2334FC540@<X0>(char *a1@<X8>)
{
  return RawOrderPickupFulfillment.pickupWindow.getter(a1);
}

uint64_t storeEnumTagSinglePayload for RawOrderPickupStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2334FC5B0 + 4 * byte_233654F93[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2334FC5E4 + 4 * byte_233654F8E[v4]))();
}

uint64_t sub_2334FC5E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FC5EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334FC5F4);
  return result;
}

uint64_t sub_2334FC600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334FC608);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2334FC60C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FC614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPickupStatus()
{
  return &type metadata for RawOrderPickupStatus;
}

uint64_t storeEnumTagSinglePayload for RawOrderPickupFulfillmentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334FC670 + 4 * byte_233654F98[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2334FC690 + 4 * byte_233654F9D[v4]))();
}

_BYTE *sub_2334FC670(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2334FC690(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334FC698(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334FC6A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2334FC6A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2334FC6B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPickupFulfillmentError()
{
  return &type metadata for RawOrderPickupFulfillmentError;
}

uint64_t initializeBufferWithCopyOfBuffer for RawOrderPickupFulfillment(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v9 = a2 + 4;
  v8 = a2[4];
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != 1)
  {
    v17 = a2[5];
    v18 = a2[6];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v17;
    v19 = a2[7];
    v20 = a2[8];
    *(_QWORD *)(a1 + 48) = v18;
    *(_QWORD *)(a1 + 56) = v19;
    v21 = a2[9];
    v22 = a2[10];
    *(_QWORD *)(a1 + 64) = v20;
    *(_QWORD *)(a1 + 72) = v21;
    v23 = a2[11];
    v24 = a2[12];
    *(_QWORD *)(a1 + 80) = v22;
    *(_QWORD *)(a1 + 88) = v23;
    v25 = a2[13];
    v26 = a2[14];
    *(_QWORD *)(a1 + 96) = v24;
    *(_QWORD *)(a1 + 104) = v25;
    v27 = a2[15];
    v28 = a2[16];
    *(_QWORD *)(a1 + 112) = v26;
    *(_QWORD *)(a1 + 120) = v27;
    *(_QWORD *)(a1 + 128) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = a2[21];
    if (v14)
      goto LABEL_4;
LABEL_7:
    v29 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v29;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_QWORD *)(a1 + 184) = a2[23];
    goto LABEL_8;
  }
  v11 = *((_OWORD *)v9 + 5);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)v9 + 4);
  *(_OWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 128) = v9[12];
  v12 = *((_OWORD *)v9 + 1);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 48) = v12;
  v13 = *((_OWORD *)v9 + 3);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v9 + 2);
  *(_OWORD *)(a1 + 80) = v13;
  v14 = a2[21];
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v15 = a2[18];
  *(_QWORD *)(a1 + 136) = a2[17];
  *(_QWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 160) = a2[20];
  *(_QWORD *)(a1 + 168) = v14;
  v16 = a2[23];
  *(_QWORD *)(a1 + 176) = a2[22];
  *(_QWORD *)(a1 + 184) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)a2 + 202);
  v30 = a2[29];
  *(_QWORD *)(a1 + 224) = a2[28];
  *(_QWORD *)(a1 + 232) = v30;
  v31 = a2[31];
  v32 = a3[12];
  v33 = (void *)(a1 + v32);
  v34 = (char *)a2 + v32;
  *(_QWORD *)(a1 + 240) = a2[30];
  *(_QWORD *)(a1 + 248) = v31;
  v35 = sub_23361D634();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v34, 1, v35))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v39 = a3[13];
  v40 = (void *)(a1 + v39);
  v41 = (char *)a2 + v39;
  v42 = type metadata accessor for Duration();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = sub_23361CD40();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v40, v41, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v46 = a3[14];
  v47 = (void *)(a1 + v46);
  v48 = (char *)a2 + v46;
  if (v37((char *)a2 + v46, 1, v35))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v47, v48, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v47, 0, 1, v35);
  }
  v50 = a3[15];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)((char *)a2 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RawOrderPickupFulfillment(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[12];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[13];
  v9 = type metadata accessor for Duration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  v11 = a1 + a2[14];
  if (!v7(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderPickupFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v9 = *(_OWORD *)(v8 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v8 + 64);
    *(_OWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(v8 + 96);
    v10 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(v8 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(a1 + 80) = v11;
    v12 = *(_QWORD *)(a2 + 168);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v13;
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v12;
      v14 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    v15 = *(_QWORD *)(a2 + 40);
    v16 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v15;
    v17 = *(_QWORD *)(a2 + 56);
    v18 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v16;
    *(_QWORD *)(a1 + 56) = v17;
    v19 = *(_QWORD *)(a2 + 72);
    v20 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v18;
    *(_QWORD *)(a1 + 72) = v19;
    v21 = *(_QWORD *)(a2 + 88);
    v22 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v20;
    *(_QWORD *)(a1 + 88) = v21;
    v23 = *(_QWORD *)(a2 + 104);
    v24 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v22;
    *(_QWORD *)(a1 + 104) = v23;
    v25 = *(_QWORD *)(a2 + 120);
    v26 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 112) = v24;
    *(_QWORD *)(a1 + 120) = v25;
    *(_QWORD *)(a1 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = *(_QWORD *)(a2 + 168);
    if (v12)
      goto LABEL_3;
  }
  v27 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v27;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_6:
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  v28 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v28;
  v29 = *(_QWORD *)(a2 + 248);
  v30 = a3[12];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v29;
  v33 = sub_23361D634();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v32, 1, v33))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v37 = a3[13];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Duration();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = sub_23361CD40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v38, v39, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v44 = a3[14];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  if (v35((const void *)(a2 + v44), 1, v33))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v45, v46, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v45, 0, 1, v33);
  }
  v48 = a3[15];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawOrderPickupFulfillment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 32);
  v8 = (__int128 *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v7 == 1)
    {
      v9 = *v8;
      v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v10;
      *v6 = v9;
      v11 = *(_OWORD *)(a2 + 80);
      v12 = *(_OWORD *)(a2 + 96);
      v13 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 112) = v13;
      *(_OWORD *)(a1 + 80) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_233326AE4(a1 + 32);
    v15 = *(_OWORD *)(a2 + 48);
    v14 = *(_OWORD *)(a2 + 64);
    *v6 = *v8;
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 64) = v14;
    v17 = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 112);
    v18 = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = (_OWORD *)(a1 + 136);
  v20 = (__int128 *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v21)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233326B80(a1 + 136);
      v23 = *(_OWORD *)(a2 + 152);
      v22 = *(_OWORD *)(a2 + 168);
      v24 = *v20;
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 152) = v23;
      *(_OWORD *)(a1 + 168) = v22;
      *v19 = v24;
    }
  }
  else if (v21)
  {
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *v20;
    v26 = *(_OWORD *)(a2 + 152);
    v27 = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v26;
    *(_OWORD *)(a1 + 168) = v27;
    *v19 = v25;
  }
  v28 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  *(_OWORD *)(a1 + 192) = v28;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = *(int *)(a3 + 48);
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  v59 = v33;
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_20:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_21:
  v60 = a3;
  v38 = *(int *)(a3 + 52);
  v39 = (void *)(a1 + v38);
  v40 = (void *)(a2 + v38);
  v41 = type metadata accessor for Duration();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      v46 = sub_23361CD40();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v39, v40, v46);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v45)
  {
    sub_233168500((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
LABEL_26:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_27;
  }
  v58 = sub_23361CD40();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v39, v40, v58);
LABEL_27:
  v48 = *(int *)(v60 + 56);
  v49 = (void *)(a1 + v48);
  v50 = (void *)(a2 + v48);
  v51 = v34((void *)(a1 + v48), 1, v32);
  v52 = v34(v50, 1, v32);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, void *, uint64_t))(v59 + 24))(v49, v50, v32);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v59 + 8))(v49, v32);
    goto LABEL_32;
  }
  if (v52)
  {
LABEL_32:
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v49, v50, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v49, 0, 1, v32);
LABEL_33:
  v54 = *(int *)(v60 + 60);
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RawOrderPickupFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  v9 = *(_OWORD *)(a2 + 240);
  v10 = a3[12];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v9;
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[13];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for Duration();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_23361CD40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = a3[14];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  if (v15((const void *)(a2 + v24), 1, v13))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v25, v26, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
  }
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t assignWithTake for RawOrderPickupFulfillment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
    goto LABEL_4;
  if (v7 == 1)
  {
    sub_233326AE4(a1 + 32);
LABEL_4:
    v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 168))
  {
    v17 = *(_QWORD *)(a2 + 168);
    if (v17)
    {
      v18 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v17;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_233326B80(a1 + 136);
  }
  v20 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v20;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_11:
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  v21 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v22;
  swift_bridgeObjectRelease();
  v23 = *(int *)(a3 + 48);
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = sub_23361D634();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  v55 = v27;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_16:
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_17:
  v56 = a3;
  v32 = *(int *)(a3 + 52);
  v33 = (void *)(a1 + v32);
  v34 = (void *)(a2 + v32);
  v35 = type metadata accessor for Duration();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      v40 = sub_23361CD40();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v33, v34, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v39)
  {
    sub_233168500((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
LABEL_22:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_23;
  }
  v54 = sub_23361CD40();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v33, v34, v54);
LABEL_23:
  v42 = *(int *)(v56 + 56);
  v43 = (void *)(a1 + v42);
  v44 = (void *)(a2 + v42);
  v45 = v28((void *)(a1 + v42), 1, v26);
  v46 = v28(v44, 1, v26);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 40))(v43, v44, v26);
      goto LABEL_29;
    }
    (*(void (**)(void *, uint64_t))(v55 + 8))(v43, v26);
    goto LABEL_28;
  }
  if (v46)
  {
LABEL_28:
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 32))(v43, v44, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v43, 0, 1, v26);
LABEL_29:
  v48 = *(int *)(v56 + 60);
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderPickupFulfillment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334FDC24(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 52);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderPickupFulfillment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2334FDCD8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 52);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2334FDD7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&unk_2542460F0, (void (*)(uint64_t))type metadata accessor for Duration);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderPickupFulfillment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_2334FDEC4 + 4 * byte_233654FA7[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_2334FDEF8 + 4 * byte_233654FA2[v4]))();
}

uint64_t sub_2334FDEF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FDF00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334FDF08);
  return result;
}

uint64_t sub_2334FDF14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334FDF1CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_2334FDF20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FDF28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPickupFulfillment.CodingKeys()
{
  return &type metadata for RawOrderPickupFulfillment.CodingKeys;
}

unint64_t sub_2334FDF48()
{
  unint64_t result;

  result = qword_2560536D0;
  if (!qword_2560536D0)
  {
    result = MEMORY[0x234934494](&unk_2336553EC, &type metadata for RawOrderPickupFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560536D0);
  }
  return result;
}

unint64_t sub_2334FDF90()
{
  unint64_t result;

  result = qword_2560536D8;
  if (!qword_2560536D8)
  {
    result = MEMORY[0x234934494](&unk_23365535C, &type metadata for RawOrderPickupFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560536D8);
  }
  return result;
}

unint64_t sub_2334FDFD8()
{
  unint64_t result;

  result = qword_2560536E0;
  if (!qword_2560536E0)
  {
    result = MEMORY[0x234934494](&unk_233655384, &type metadata for RawOrderPickupFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560536E0);
  }
  return result;
}

uint64_t sub_2334FE01C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D657449656E696CLL && a2 == 0xE900000000000073;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233669A10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F63726162 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x744170756B636970 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233679DB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x705564656B636970 && a2 == 0xEA00000000007441 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233673680)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

unint64_t sub_2334FE4FC()
{
  unint64_t result;

  result = qword_2560536E8;
  if (!qword_2560536E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupStatus, &type metadata for RawOrderPickupStatus);
    atomic_store(result, (unint64_t *)&qword_2560536E8);
  }
  return result;
}

unint64_t sub_2334FE540()
{
  unint64_t result;

  result = qword_2560536F8;
  if (!qword_2560536F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPickupFulfillmentError, &type metadata for RawOrderPickupFulfillmentError);
    atomic_store(result, (unint64_t *)&qword_2560536F8);
  }
  return result;
}

uint64_t BankConnectService.disconnectAccount(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 128) = a1[3];
  return swift_task_switch();
}

uint64_t sub_2334FE5F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = (_QWORD *)v0[12];
  v0[17] = *(_QWORD *)(v0[10] + 16);
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2334FE664(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.disconnectAccount(with:)(a1);
}

uint64_t dispatch thunk of BankConnectConnectionAccountDisconnecting.disconnectAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

uint64_t BankConnectConsentStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::BankConnectConsentStatus_optional __swiftcall BankConnectConsentStatus.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (FinanceKit::BankConnectConsentStatus_optional)rawValue;
}

uint64_t FKConsentStatus.init(_:)(unsigned __int8 *a1)
{
  return *a1;
}

void *static BankConnectConsentStatus.allCases.getter()
{
  return &unk_25046B490;
}

unint64_t sub_2334FE76C()
{
  unint64_t result;

  result = qword_256053718;
  if (!qword_256053718)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentStatus, &type metadata for BankConnectConsentStatus);
    atomic_store(result, (unint64_t *)&qword_256053718);
  }
  return result;
}

uint64_t sub_2334FE7B0()
{
  sub_2334FE984();
  return sub_23361E3A8();
}

uint64_t sub_2334FE80C()
{
  sub_2334FE984();
  return sub_23361E36C();
}

unint64_t sub_2334FE85C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256053720;
  if (!qword_256053720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053728);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256053720);
  }
  return result;
}

void sub_2334FE8A8(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B4B8;
}

uint64_t storeEnumTagSinglePayload for BankConnectConsentStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334FE904 + 4 * byte_2336554B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334FE938 + 4 * byte_2336554B0[v4]))();
}

uint64_t sub_2334FE938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FE940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334FE948);
  return result;
}

uint64_t sub_2334FE954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334FE95CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334FE960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334FE968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectConsentStatus()
{
  return &type metadata for BankConnectConsentStatus;
}

unint64_t sub_2334FE984()
{
  unint64_t result;

  result = qword_256053730;
  if (!qword_256053730)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentStatus, &type metadata for BankConnectConsentStatus);
    atomic_store(result, (unint64_t *)&qword_256053730);
  }
  return result;
}

void sub_2334FE9C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_peerPaymentCounterpartHandle);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2334FEA2C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setPeerPaymentCounterpartHandle_);

}

id ManagedContactTransactionInsight.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedContactTransactionInsight.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedContactTransactionInsight.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedContactTransactionInsight.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit32ManagedContactTransactionInsight;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id ManagedInternalTransaction.contactInsight.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_insightsObject);
  v2 = objc_msgSend(v1, sel_contactInsightObject);

  return v2;
}

char *keypath_get_selector_peerPaymentCounterpartHandle()
{
  return sel_peerPaymentCounterpartHandle;
}

uint64_t type metadata accessor for ManagedContactTransactionInsight()
{
  return objc_opt_self();
}

uint64_t TransactionQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;

  v28 = a6;
  v27 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - v20;
  *a7 = a1;
  v22 = (int *)type metadata accessor for TransactionQuery();
  sub_2334FEEA8(a2, (uint64_t)a7 + v22[5]);
  sub_2334FEEA8(a2, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2334FEEF0(a2);
    result = sub_2334FEEF0((uint64_t)v14);
    v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_2331E28A0();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v24 = sub_2331E6708((uint64_t)v19);
    sub_2334FEEF0(a2);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  *(_QWORD *)((char *)a7 + v22[8]) = v24;
  v25 = (char *)a7 + v22[6];
  *(_QWORD *)v25 = a3;
  v25[8] = a4 & 1;
  v26 = (char *)a7 + v22[7];
  *(_QWORD *)v26 = v27;
  v26[8] = v28 & 1;
  return result;
}

uint64_t type metadata accessor for TransactionQuery()
{
  uint64_t result;

  result = qword_256053790;
  if (!qword_256053790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2334FEEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2334FEEF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static TransactionQuery.predicate(forMerchantCategoryCodes:)(uint64_t a1)
{
  return sub_2334FF428(a1);
}

uint64_t sub_2334FEF48@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v23 = a1;
  v26 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A70);
  v3 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  v28 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560538D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560538D8);
  v15 = *(_QWORD *)(v14 - 8);
  v24 = v14;
  v25 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B1A14(&qword_2560537F8, &qword_256044FC0, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v29 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560538E0);
  sub_2331B1A14(&qword_2560538E8, &qword_2560538D0, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_2560538F0, &qword_2560538E0, MEMORY[0x24BDCCEF8]);
  sub_23361CF74();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v30 = 0;
  sub_23361D178();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560538F8);
  v19 = v26;
  v26[3] = v18;
  v19[4] = sub_2335007B0();
  __swift_allocate_boxed_opaque_existential_0(v19);
  sub_2331B1A14(&qword_256053960, &qword_2560538D8, MEMORY[0x24BDCCEA0]);
  sub_2331B1A14(&qword_256044AA8, &qword_256044A70, MEMORY[0x24BDCD130]);
  v20 = v24;
  v21 = v27;
  sub_23361CFE0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v20);
}

uint64_t sub_2334FF268@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2334FEF48(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2334FF270@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v12[0] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053958);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053928);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256053938);
  sub_23361D178();
  sub_2331B1A14(&qword_256053968, &qword_256053958, MEMORY[0x24BDCD230]);
  sub_23361D184();
  sub_2331B1A14(&qword_256053970, &qword_256053928, MEMORY[0x24BDCD130]);
  sub_2331B1A14(&qword_256053978, &qword_256053938, MEMORY[0x24BEE12C8]);
  sub_233500A58();
  sub_23361CF80();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static TransactionQuery.predicate(forStatuses:)(uint64_t a1)
{
  return sub_2334FF428(a1);
}

uint64_t sub_2334FF428(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for Transaction();
  return sub_23361D8D4();
}

uint64_t sub_2334FF4D8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053860);
  v9 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  v19 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053868);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256053870);
  sub_23361D178();
  sub_2331B1A14(&qword_2560537F8, &qword_256044FC0, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256053878);
  a2[4] = sub_2335005AC();
  __swift_allocate_boxed_opaque_existential_0(a2);
  sub_2331B1A14(&qword_2560538B0, &qword_256053868, MEMORY[0x24BDCD130]);
  sub_2331B1A14(&qword_2560538B8, &qword_256053860, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_2560538C0, &qword_256053870, MEMORY[0x24BEE12C8]);
  sub_233500764();
  v15 = v18;
  sub_23361CF80();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v12);
}

uint64_t sub_2334FF750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2334FF4D8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t static TransactionQuery.predicate(forTransactionTypes:)(uint64_t a1)
{
  return sub_2334FF428(a1);
}

uint64_t sub_2334FF76C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A70);
  a1[4] = sub_2331EED28();
  __swift_allocate_boxed_opaque_existential_0(a1);
  return sub_23361D178();
}

uint64_t sub_2334FF7CC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560537E0);
  v9 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  v19 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560537E8);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560537F0);
  sub_23361D178();
  sub_2331B1A14(&qword_2560537F8, &qword_256044FC0, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256053800);
  a2[4] = sub_233500340();
  __swift_allocate_boxed_opaque_existential_0(a2);
  sub_2331B1A14(&qword_256053840, &qword_2560537E8, MEMORY[0x24BDCD130]);
  sub_2331B1A14(&qword_256053848, &qword_2560537E0, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_256053850, &qword_2560537F0, MEMORY[0x24BEE12C8]);
  sub_233500568();
  v15 = v18;
  sub_23361CF80();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v12);
}

uint64_t sub_2334FFA44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2334FF7CC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t PrivateTransactionQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4 & 1;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6 & 1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TransactionQuery(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[8];
    v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
    v22 = v21;
  }
  return a1;
}

void destroy for TransactionQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

_QWORD *initializeWithCopy for TransactionQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[8];
  v19 = *(void **)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v19;
  v20 = v19;
  return a1;
}

_QWORD *assignWithCopy for TransactionQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  v23 = a3[8];
  v24 = *(void **)((char *)a1 + v23);
  v25 = *(void **)((char *)a2 + v23);
  *(_QWORD *)((char *)a1 + v23) = v25;
  v26 = v25;

  return a1;
}

_QWORD *initializeWithTake for TransactionQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for TransactionQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FC8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = a3[8];
  v22 = *(void **)((char *)a1 + v21);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233500148(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TransactionQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2335001D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048190);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23350024C()
{
  unint64_t v0;

  sub_2335002D8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2335002D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2560537A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044FC8);
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2560537A0);
  }
}

ValueMetadata *type metadata accessor for PrivateTransactionQuery()
{
  return &type metadata for PrivateTransactionQuery;
}

unint64_t sub_233500340()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053808;
  if (!qword_256053808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053800);
    v2[0] = sub_2335003BC();
    v2[1] = sub_2335004F8(&qword_256053830, &qword_2560537E0);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053808);
  }
  return result;
}

unint64_t sub_2335003BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053810;
  if (!qword_256053810)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560537E8);
    v2[0] = sub_23333B294(&qword_256053818, &qword_2560537F0, (uint64_t (*)(void))sub_233500470, MEMORY[0x24BEE12D0]);
    v2[1] = sub_23333B294(&qword_256053828, &qword_2560537F0, (uint64_t (*)(void))sub_2335004B4, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053810);
  }
  return result;
}

unint64_t sub_233500470()
{
  unint64_t result;

  result = qword_256053820;
  if (!qword_256053820)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionType, &type metadata for TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053820);
  }
  return result;
}

unint64_t sub_2335004B4()
{
  unint64_t result;

  result = qword_256056610;
  if (!qword_256056610)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionType, &type metadata for TransactionType);
    atomic_store(result, (unint64_t *)&qword_256056610);
  }
  return result;
}

uint64_t sub_2335004F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5 = sub_2331B1A14(&qword_256053838, &qword_256044FC0, MEMORY[0x24BDCD228]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD1B8], v4, &v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233500568()
{
  unint64_t result;

  result = qword_256053858;
  if (!qword_256053858)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionType, &type metadata for TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053858);
  }
  return result;
}

unint64_t sub_2335005AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053880;
  if (!qword_256053880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053878);
    v2[0] = sub_233500628();
    v2[1] = sub_2335004F8(&qword_2560538A8, &qword_256053860);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053880);
  }
  return result;
}

unint64_t sub_233500628()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053888;
  if (!qword_256053888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053868);
    v2[0] = sub_23333B294(&qword_256053890, &qword_256053870, (uint64_t (*)(void))sub_2335006DC, MEMORY[0x24BEE12D0]);
    v2[1] = sub_23333B294(&qword_256053898, &qword_256053870, (uint64_t (*)(void))sub_233500720, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053888);
  }
  return result;
}

unint64_t sub_2335006DC()
{
  unint64_t result;

  result = qword_256056690;
  if (!qword_256056690)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionStatus, &type metadata for TransactionStatus);
    atomic_store(result, (unint64_t *)&qword_256056690);
  }
  return result;
}

unint64_t sub_233500720()
{
  unint64_t result;

  result = qword_2560538A0;
  if (!qword_2560538A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionStatus, &type metadata for TransactionStatus);
    atomic_store(result, (unint64_t *)&qword_2560538A0);
  }
  return result;
}

unint64_t sub_233500764()
{
  unint64_t result;

  result = qword_2560538C8;
  if (!qword_2560538C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionStatus, &type metadata for TransactionStatus);
    atomic_store(result, (unint64_t *)&qword_2560538C8);
  }
  return result;
}

uint64_t sub_2335007A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2334FF270(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_2335007B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053900;
  if (!qword_256053900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560538F8);
    v2[0] = sub_23350081C();
    v2[1] = sub_2331EED28();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCDF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053900);
  }
  return result;
}

unint64_t sub_23350081C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053908;
  if (!qword_256053908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560538D8);
    v2[0] = sub_2335004F8(&qword_256053910, &qword_2560538D0);
    v2[1] = sub_233500898();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCE98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053908);
  }
  return result;
}

unint64_t sub_233500898()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053918;
  if (!qword_256053918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560538E0);
    v2[0] = sub_23350091C();
    v2[1] = sub_2331B1A14(&qword_256053950, &qword_256053958, MEMORY[0x24BDCD228]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053918);
  }
  return result;
}

unint64_t sub_23350091C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256053920;
  if (!qword_256053920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053928);
    v2[0] = sub_23333B294(&qword_256053930, &qword_256053938, (uint64_t (*)(void))sub_2335009D0, MEMORY[0x24BEE12D0]);
    v2[1] = sub_23333B294(&qword_256053940, &qword_256053938, (uint64_t (*)(void))sub_233500A14, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256053920);
  }
  return result;
}

unint64_t sub_2335009D0()
{
  unint64_t result;

  result = qword_256056680;
  if (!qword_256056680)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MerchantCategoryCode, &type metadata for MerchantCategoryCode);
    atomic_store(result, (unint64_t *)&qword_256056680);
  }
  return result;
}

unint64_t sub_233500A14()
{
  unint64_t result;

  result = qword_256053948;
  if (!qword_256053948)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MerchantCategoryCode, &type metadata for MerchantCategoryCode);
    atomic_store(result, (unint64_t *)&qword_256053948);
  }
  return result;
}

unint64_t sub_233500A58()
{
  unint64_t result;

  result = qword_256053980;
  if (!qword_256053980)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MerchantCategoryCode, &type metadata for MerchantCategoryCode);
    atomic_store(result, (unint64_t *)&qword_256053980);
  }
  return result;
}

uint64_t sub_233500A9C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_233500B00;
  return v6(a1);
}

uint64_t sub_233500B00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233500B6C()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  char v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  char v13;
  void *v14;
  char *v15;
  char v17[9];

  v1 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (id *)(v0 + 16);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {

    v4 = *(_BYTE *)(v0 + 40);
    sub_23316853C();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();

  }
  else
  {

    v6 = (void *)sub_23361D1A8();
    v7 = objc_msgSend(v6, sel_domain);
    v8 = sub_23361E150();
    v10 = v9;

    if (v8 == 0xD000000000000014 && v10 == 0x800000023366C020)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_willThrow();

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    v12 = v6;
    sub_233500D48(v12, v17);
    v13 = v17[0];
    v14 = *(void **)(v0 + 32);
    if (v17[0] == 7)
    {
      swift_willThrow();

    }
    else
    {
      sub_23316853C();
      swift_allocError();
      *v15 = v13;
      swift_willThrow();

    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233500D48(void *a1@<X0>, char *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v4 = objc_msgSend(a1, sel_domain);
  v5 = sub_23361E150();
  v7 = v6;

  if (v5 == 0xD000000000000014 && v7 == 0x800000023366C020)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_25;
  }
  v9 = objc_msgSend(a1, sel_code);
  if (v9 == (id)2)
  {
    v12 = objc_msgSend(a1, sel_userInfo);
    v13 = sub_23361E06C();

    if (*(_QWORD *)(v13 + 16) && (v14 = sub_2331E3D18(0x7954617461444B46, 0xEA00000000006570), (v15 & 1) != 0))
    {
      sub_233168350(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v19);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v20 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (v17 == 0x73726564726FLL && v18 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
          {
            swift_bridgeObjectRelease();

            v11 = 0;
            goto LABEL_27;
          }
          if (v17 == 0x6169636E616E6966 && v18 == 0xED0000617461446CLL)
          {
            swift_bridgeObjectRelease();

            v11 = 2;
            goto LABEL_27;
          }
          v16 = sub_23361F224();
          swift_bridgeObjectRelease();

          if ((v16 & 1) != 0)
          {
            v11 = 2;
            goto LABEL_27;
          }
          goto LABEL_26;
        }
LABEL_25:

LABEL_26:
        v11 = 7;
        goto LABEL_27;
      }
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_23319F5C0((uint64_t)&v19);
    goto LABEL_25;
  }
  v10 = v9;
  if (v9 == (id)1)
  {

    v11 = 5;
  }
  else if (v9)
  {

    if (v10 == (id)4)
      v11 = 6;
    else
      v11 = 7;
    if (v10 == (id)3)
      v11 = 3;
  }
  else
  {

    v11 = 4;
  }
LABEL_27:
  *a2 = v11;
}

unint64_t static FinanceError.errorDomain.getter()
{
  return 0xD000000000000014;
}

uint64_t FinanceError.errorCode.getter()
{
  _BYTE *v0;

  if ((*v0 - 3) > 3u)
    return 2;
  else
    return qword_233655E48[(char)(*v0 - 3)];
}

void FinanceError.errorUserInfo.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_2335010B0()
{
  return sub_23315F6D0(MEMORY[0x24BEE4AF8]);
}

unint64_t sub_2335010C8()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v1 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 0x7954617461444B46;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 48) = 0x73726564726FLL;
  *(_QWORD *)(inited + 56) = 0xE600000000000000;
  return sub_23315F6D0(inited);
}

uint64_t FinanceError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_233501234 + 4 * byte_233655747[*v0]))(0, 0);
}

unint64_t sub_233501234()
{
  return 0xD000000000000024;
}

unint64_t FinanceError.failureReason.getter()
{
  _BYTE *v0;
  unint64_t result;

  result = 0;
  switch(*v0)
  {
    case 3:
    case 5:
      return result;
    case 4:
      result = 0xD000000000000017;
      break;
    case 6:
      result = 0xD000000000000061;
      break;
    default:
      result = 0xD00000000000003BLL;
      break;
  }
  return result;
}

uint64_t sub_233501358(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233501398 + 4 * byte_233655752[a1]))(0x7473655261746164, 0xEE00646574636972);
}

uint64_t sub_233501398()
{
  return 0x6E776F6E6B6E75;
}

unint64_t sub_2335013B0()
{
  return 0xD000000000000012;
}

uint64_t sub_2335013CC()
{
  return 0x654474656C6C6177;
}

unint64_t sub_2335013F0()
{
  return 0xD000000000000013;
}

uint64_t sub_233501410()
{
  unsigned __int8 *v0;

  return sub_233501358(*v0);
}

uint64_t sub_233501418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335029F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23350143C()
{
  sub_233502124();
  return sub_23361F428();
}

uint64_t sub_233501464()
{
  sub_233502124();
  return sub_23361F434();
}

uint64_t sub_23350148C()
{
  sub_233502278();
  return sub_23361F428();
}

uint64_t sub_2335014B4()
{
  sub_233502278();
  return sub_23361F434();
}

uint64_t sub_2335014DC()
{
  sub_2335021F0();
  return sub_23361F428();
}

uint64_t sub_233501504()
{
  sub_2335021F0();
  return sub_23361F434();
}

uint64_t sub_23350152C()
{
  sub_233502168();
  return sub_23361F428();
}

uint64_t sub_233501554()
{
  sub_233502168();
  return sub_23361F434();
}

uint64_t sub_23350157C()
{
  sub_233502234();
  return sub_23361F428();
}

uint64_t sub_2335015A4()
{
  sub_233502234();
  return sub_23361F434();
}

uint64_t sub_2335015CC()
{
  sub_2335021AC();
  return sub_23361F428();
}

uint64_t sub_2335015F4()
{
  sub_2335021AC();
  return sub_23361F434();
}

unint64_t sub_23350161C()
{
  return 0xD000000000000014;
}

uint64_t sub_233501638()
{
  _BYTE *v0;

  if ((*v0 - 3) > 3u)
    return 2;
  else
    return qword_233655E48[(char)(*v0 - 3)];
}

uint64_t sub_233501678()
{
  sub_233502C50();
  return sub_23361F2D8();
}

uint64_t sub_2335016A0()
{
  sub_233502C50();
  return sub_23361F2CC();
}

uint64_t FinanceError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053988);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053990);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053998);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539A0);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539A8);
  v11 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539B0);
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233502124();
  sub_23361F410();
  switch(v17)
  {
    case 3:
      v42 = 1;
      sub_233502234();
      v18 = v39;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v28);
      goto LABEL_8;
    case 4:
      v43 = 2;
      sub_2335021F0();
      v22 = v29;
      v18 = v39;
      sub_23361F0C8();
      v24 = v30;
      v23 = v31;
      goto LABEL_7;
    case 5:
      v44 = 3;
      sub_2335021AC();
      v22 = v32;
      v18 = v39;
      sub_23361F0C8();
      v24 = v33;
      v23 = v34;
      goto LABEL_7;
    case 6:
      v45 = 4;
      sub_233502168();
      v22 = v35;
      v18 = v39;
      sub_23361F0C8();
      v24 = v36;
      v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v18);
      break;
    default:
      v41 = 0;
      sub_233502278();
      v19 = v39;
      sub_23361F0C8();
      v40 = v17;
      sub_23346553C();
      v20 = v27;
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
      result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v19);
      break;
  }
  return result;
}

uint64_t FinanceError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[10];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char *v34;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539E8);
  v26[8] = *(_QWORD *)(v3 - 8);
  v26[9] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539F0);
  v26[5] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560539F8);
  v26[6] = *(_QWORD *)(v6 - 8);
  v26[7] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053A00);
  v26[3] = *(_QWORD *)(v8 - 8);
  v26[4] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053A08);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053A10);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_233502124();
  v19 = v34;
  sub_23361F3EC();
  if (!v19)
  {
    v34 = v13;
    v26[1] = v11;
    v26[2] = v10;
    v20 = v15;
    v21 = sub_23361F098();
    if (*(_QWORD *)(v21 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_23361EE10();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v24 = &type metadata for FinanceError;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
}

uint64_t sub_233502070@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FinanceError.init(from:)(a1, a2);
}

uint64_t sub_233502084(_QWORD *a1)
{
  return FinanceError.encode(to:)(a1);
}

BOOL _s10FinanceKit0A5ErrorO2eeoiySbAC_ACtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  _BOOL8 result;

  v2 = *a2;
  switch(*a1)
  {
    case 3:
      if (v2 != 3)
        goto LABEL_11;
      result = 1;
      break;
    case 4:
      if (v2 != 4)
        goto LABEL_11;
      result = 1;
      break;
    case 5:
      if (v2 != 5)
        goto LABEL_11;
      result = 1;
      break;
    case 6:
      if (v2 != 6)
        goto LABEL_11;
      result = 1;
      break;
    default:
      if ((v2 - 3) >= 4)
        result = *a1 == v2;
      else
LABEL_11:
        result = 0;
      break;
  }
  return result;
}

unint64_t sub_233502124()
{
  unint64_t result;

  result = qword_2560539B8;
  if (!qword_2560539B8)
  {
    result = MEMORY[0x234934494](&unk_233655DF0, &type metadata for FinanceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539B8);
  }
  return result;
}

unint64_t sub_233502168()
{
  unint64_t result;

  result = qword_2560539C0;
  if (!qword_2560539C0)
  {
    result = MEMORY[0x234934494](&unk_233655DA0, &type metadata for FinanceError.HistoryTokenInvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539C0);
  }
  return result;
}

unint64_t sub_2335021AC()
{
  unint64_t result;

  result = qword_2560539C8;
  if (!qword_2560539C8)
  {
    result = MEMORY[0x234934494](&unk_233655D50, &type metadata for FinanceError.WalletDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539C8);
  }
  return result;
}

unint64_t sub_2335021F0()
{
  unint64_t result;

  result = qword_2560539D0;
  if (!qword_2560539D0)
  {
    result = MEMORY[0x234934494](&unk_233655D00, &type metadata for FinanceError.EntitlementMissingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539D0);
  }
  return result;
}

unint64_t sub_233502234()
{
  unint64_t result;

  result = qword_2560539D8;
  if (!qword_2560539D8)
  {
    result = MEMORY[0x234934494](&unk_233655CB0, &type metadata for FinanceError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539D8);
  }
  return result;
}

unint64_t sub_233502278()
{
  unint64_t result;

  result = qword_2560539E0;
  if (!qword_2560539E0)
  {
    result = MEMORY[0x234934494](&unk_233655C60, &type metadata for FinanceError.DataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560539E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FinanceError(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 5)
      return v7 - 4;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_233502310 + 4 * byte_233655764[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FinanceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2335023BC + 4 * byte_23365576E[v5]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2335023F0 + 4 * byte_233655769[v5]))();
}

uint64_t sub_2335023F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335023F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233502400);
  return result;
}

uint64_t sub_23350240C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233502414);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_233502418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233502420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23350242C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_233502440(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for FinanceError()
{
  return &type metadata for FinanceError;
}

uint64_t storeEnumTagSinglePayload for FinanceError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2335024AC + 4 * byte_233655778[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2335024E0 + 4 * byte_233655773[v4]))();
}

uint64_t sub_2335024E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335024E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335024F0);
  return result;
}

uint64_t sub_2335024FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233502504);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233502508(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233502510(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceError.CodingKeys()
{
  return &type metadata for FinanceError.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FinanceError.DataRestrictedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23350256C + 4 * byte_23365577D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23350258C + 4 * byte_233655782[v4]))();
}

_BYTE *sub_23350256C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23350258C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233502594(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23350259C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335025A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335025AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FinanceError.DataRestrictedCodingKeys()
{
  return &type metadata for FinanceError.DataRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceError.UnknownCodingKeys()
{
  return &type metadata for FinanceError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceError.EntitlementMissingCodingKeys()
{
  return &type metadata for FinanceError.EntitlementMissingCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceError.WalletDeletedCodingKeys()
{
  return &type metadata for FinanceError.WalletDeletedCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceError.HistoryTokenInvalidCodingKeys()
{
  return &type metadata for FinanceError.HistoryTokenInvalidCodingKeys;
}

unint64_t sub_23350260C()
{
  unint64_t result;

  result = qword_256053A18;
  if (!qword_256053A18)
  {
    result = MEMORY[0x234934494](&unk_233655B80, &type metadata for FinanceError.DataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A18);
  }
  return result;
}

unint64_t sub_233502654()
{
  unint64_t result;

  result = qword_256053A20;
  if (!qword_256053A20)
  {
    result = MEMORY[0x234934494](&unk_233655C38, &type metadata for FinanceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A20);
  }
  return result;
}

unint64_t sub_23350269C()
{
  unint64_t result;

  result = qword_256053A28;
  if (!qword_256053A28)
  {
    result = MEMORY[0x234934494](&unk_233655AF0, &type metadata for FinanceError.DataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A28);
  }
  return result;
}

unint64_t sub_2335026E4()
{
  unint64_t result;

  result = qword_256053A30;
  if (!qword_256053A30)
  {
    result = MEMORY[0x234934494](&unk_233655B18, &type metadata for FinanceError.DataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A30);
  }
  return result;
}

unint64_t sub_23350272C()
{
  unint64_t result;

  result = qword_256053A38;
  if (!qword_256053A38)
  {
    result = MEMORY[0x234934494](&unk_233655AA0, &type metadata for FinanceError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A38);
  }
  return result;
}

unint64_t sub_233502774()
{
  unint64_t result;

  result = qword_256053A40;
  if (!qword_256053A40)
  {
    result = MEMORY[0x234934494](&unk_233655AC8, &type metadata for FinanceError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A40);
  }
  return result;
}

unint64_t sub_2335027BC()
{
  unint64_t result;

  result = qword_256053A48;
  if (!qword_256053A48)
  {
    result = MEMORY[0x234934494](&unk_233655A50, &type metadata for FinanceError.EntitlementMissingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A48);
  }
  return result;
}

unint64_t sub_233502804()
{
  unint64_t result;

  result = qword_256053A50;
  if (!qword_256053A50)
  {
    result = MEMORY[0x234934494](&unk_233655A78, &type metadata for FinanceError.EntitlementMissingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A50);
  }
  return result;
}

unint64_t sub_23350284C()
{
  unint64_t result;

  result = qword_256053A58;
  if (!qword_256053A58)
  {
    result = MEMORY[0x234934494](&unk_233655A00, &type metadata for FinanceError.WalletDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A58);
  }
  return result;
}

unint64_t sub_233502894()
{
  unint64_t result;

  result = qword_256053A60;
  if (!qword_256053A60)
  {
    result = MEMORY[0x234934494](&unk_233655A28, &type metadata for FinanceError.WalletDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A60);
  }
  return result;
}

unint64_t sub_2335028DC()
{
  unint64_t result;

  result = qword_256053A68;
  if (!qword_256053A68)
  {
    result = MEMORY[0x234934494](&unk_2336559B0, &type metadata for FinanceError.HistoryTokenInvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A68);
  }
  return result;
}

unint64_t sub_233502924()
{
  unint64_t result;

  result = qword_256053A70;
  if (!qword_256053A70)
  {
    result = MEMORY[0x234934494](&unk_2336559D8, &type metadata for FinanceError.HistoryTokenInvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A70);
  }
  return result;
}

unint64_t sub_23350296C()
{
  unint64_t result;

  result = qword_256053A78;
  if (!qword_256053A78)
  {
    result = MEMORY[0x234934494](&unk_233655BA8, &type metadata for FinanceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A78);
  }
  return result;
}

unint64_t sub_2335029B4()
{
  unint64_t result;

  result = qword_256053A80;
  if (!qword_256053A80)
  {
    result = MEMORY[0x234934494](&unk_233655BD0, &type metadata for FinanceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053A80);
  }
  return result;
}

uint64_t sub_2335029F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7473655261746164 && a2 == 0xEE00646574636972;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233679FE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654474656C6C6177 && a2 == 0xED0000646574656CLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_233502C50()
{
  unint64_t result;

  result = qword_256053A88;
  if (!qword_256053A88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceError, &type metadata for FinanceError);
    atomic_store(result, &qword_256053A88);
  }
  return result;
}

__n128 RawBankConnectData.Transaction.init(id:stableIdentifier:postedTimestamp:transactionTimestamp:description:originalDescription:creditDebitIndicator:reference:status:transactionType:localAmount:foreignAmount:merchantInformation:actions:accountId:applePayPaymentHash:bankTransactionCode:proprietaryBankTransactionCode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, char *a15, int *a16, __int128 *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 *a24,__n128 *a25)
{
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __n128 result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v54;
  uint64_t v56;
  char v57;
  int v58;
  __int128 v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  unint64_t v76;
  unint64_t v77;
  __n128 v78;
  _BYTE v79[160];
  _OWORD v80[10];
  _QWORD v81[21];

  v57 = *a15;
  v58 = *a16;
  v62 = *((_QWORD *)a16 + 4);
  v63 = *((_QWORD *)a16 + 3);
  v60 = *((_BYTE *)a16 + 44);
  v61 = a16[10];
  v59 = *((_OWORD *)a16 + 3);
  v71 = a17[1];
  v72 = *a17;
  v69 = a17[3];
  v70 = a17[2];
  v67 = *((_QWORD *)a17 + 9);
  v68 = *((_QWORD *)a17 + 8);
  v54 = *((_QWORD *)a16 + 8);
  v56 = *((_QWORD *)a16 + 9);
  sub_233270324(a18, (uint64_t)v79);
  v75 = *a24;
  v73 = *((_QWORD *)a24 + 3);
  v74 = *((_QWORD *)a24 + 2);
  v78 = *a25;
  v76 = a25[1].n128_u64[1];
  v77 = a25[1].n128_u64[0];
  v26 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v27 = a9 + v26[6];
  v45 = v27;
  v28 = sub_23361D634();
  v46 = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a16 + 1);
  v30 = *(_QWORD *)(a16 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v27, 1, 1, v28);
  v31 = (_QWORD *)(a9 + v26[9]);
  *v31 = 0;
  v31[1] = 0;
  v32 = (_QWORD *)(a9 + v26[11]);
  *v32 = 0;
  v32[1] = 0;
  v33 = v26[13];
  *(_BYTE *)(a9 + v33) = 16;
  v34 = a9 + v26[15];
  *(_OWORD *)(v34 + 48) = 0u;
  *(_OWORD *)(v34 + 64) = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  *(_OWORD *)(v34 + 32) = 0u;
  *(_OWORD *)v34 = 0u;
  v35 = a9 + v26[16];
  v47 = v33;
  v48 = v35;
  sub_233317714(v80);
  sub_233270324((uint64_t)v80, v35);
  v36 = a9 + v26[17];
  v49 = v36;
  v37 = type metadata accessor for RawBankConnectData.Actions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = (_QWORD *)(a9 + v26[18]);
  *v38 = 0;
  v38[1] = 0;
  v39 = (_QWORD *)(a9 + v26[19]);
  *v39 = 0;
  v39[1] = 0;
  v40 = a9 + v26[20];
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  v41 = a9 + v26[21];
  *(_OWORD *)v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  sub_233170B8C(a4, v45, (uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(a9 + v26[7], a5, v28);
  v42 = (_QWORD *)(a9 + v26[8]);
  *v42 = a6;
  v42[1] = a7;
  swift_bridgeObjectRelease();
  *v31 = a8;
  v31[1] = a10;
  *(_BYTE *)(a9 + v26[10]) = a11 & 1;
  swift_bridgeObjectRelease();
  *v32 = a12;
  v32[1] = a13;
  *(_BYTE *)(a9 + v26[12]) = a14;
  *(_BYTE *)(a9 + v47) = v57;
  v43 = a9 + v26[14];
  *(_DWORD *)v43 = v58;
  *(_QWORD *)(v43 + 4) = v29;
  *(_QWORD *)(v43 + 12) = v30;
  *(_QWORD *)(v43 + 24) = v63;
  *(_QWORD *)(v43 + 32) = v62;
  *(_DWORD *)(v43 + 40) = v61;
  *(_BYTE *)(v43 + 44) = v60;
  *(_OWORD *)(v43 + 48) = v59;
  *(_QWORD *)(v43 + 64) = v54;
  *(_QWORD *)(v43 + 72) = v56;
  sub_2331B3078(*(_QWORD *)v34, *(_QWORD *)(v34 + 8), *(_QWORD *)(v34 + 16), *(_QWORD *)(v34 + 24), *(_QWORD *)(v34 + 32), *(_QWORD *)(v34 + 40), *(_QWORD *)(v34 + 48), *(_QWORD *)(v34 + 56));
  *(_OWORD *)v34 = v72;
  *(_OWORD *)(v34 + 16) = v71;
  *(_OWORD *)(v34 + 32) = v70;
  *(_OWORD *)(v34 + 48) = v69;
  *(_QWORD *)(v34 + 64) = v68;
  *(_QWORD *)(v34 + 72) = v67;
  sub_233270324(v48, (uint64_t)v81);
  sub_2335038E8(v81, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233270518);
  sub_233270324((uint64_t)v79, v48);
  sub_233170B8C(a19, v49, &qword_2560436D0);
  swift_bridgeObjectRelease();
  *v38 = a20;
  v38[1] = a21;
  swift_bridgeObjectRelease();
  *v39 = a22;
  v39[1] = a23;
  sub_2332DCF70(*(_QWORD *)v40, *(_QWORD *)(v40 + 8));
  *(_OWORD *)v40 = v75;
  *(_QWORD *)(v40 + 16) = v74;
  *(_QWORD *)(v40 + 24) = v73;
  sub_2332DCF70(*(_QWORD *)v41, *(_QWORD *)(v41 + 8));
  result = v78;
  *(__n128 *)v41 = v78;
  *(_QWORD *)(v41 + 16) = v77;
  *(_QWORD *)(v41 + 24) = v76;
  return result;
}

uint64_t type metadata accessor for RawBankConnectData.Transaction(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256053CA8);
}

__n128 RawBankConnectData.Transaction.MerchantInformation.init(merchantCategoryCode:standardIndustrialClassificationCode:categoryDescription:merchantName:merchantNumber:merchantAddress:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v12;
  __int128 v13;
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  v12 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 96) = v12;
  v13 = *(_OWORD *)(a12 + 48);
  *(_OWORD *)(a9 + 112) = *(_OWORD *)(a12 + 32);
  *(_OWORD *)(a9 + 128) = v13;
  result = *(__n128 *)(a12 + 64);
  *(__n128 *)(a9 + 144) = result;
  return result;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.init(addressLine:city:stateOrSection:zipOrPostCode:countryCode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t RawBankConnectData.Transaction.BankTransactionCode.init(code:subCode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.init(code:issuer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t RawBankConnectData.Transaction.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.id.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.stableIdentifier.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RawBankConnectData.Transaction.stableIdentifier.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.stableIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.postedTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233508478(type metadata accessor for RawBankConnectData.Transaction, a1);
}

uint64_t RawBankConnectData.Transaction.postedTimestamp.setter(uint64_t a1)
{
  return sub_2335084C4(a1, type metadata accessor for RawBankConnectData.Transaction);
}

uint64_t (*RawBankConnectData.Transaction.postedTimestamp.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.transactionTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawBankConnectData.Transaction.transactionTimestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawBankConnectData.Transaction.transactionTimestamp.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.description.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.originalDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.originalDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.originalDescription.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.creditDebitIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 40));
}

uint64_t RawBankConnectData.Transaction.creditDebitIndicator.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for RawBankConnectData.Transaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.creditDebitIndicator.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.reference.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.reference.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.reference.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.status.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 48));
}

uint64_t RawBankConnectData.Transaction.status.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawBankConnectData.Transaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.status.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.transactionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawBankConnectData.Transaction(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t RawBankConnectData.Transaction.transactionType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RawBankConnectData.Transaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = v2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.transactionType.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.localAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 56);
  v4 = *(_DWORD *)(v3 + 40);
  v5 = *(_BYTE *)(v3 + 44);
  v6 = *(_QWORD *)(v3 + 48);
  v7 = *(_QWORD *)(v3 + 56);
  v9 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v3 + 4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_DWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 44) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 RawBankConnectData.Transaction.localAmount.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __n128 v12;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  v6 = a1[10];
  v7 = *((_BYTE *)a1 + 44);
  v12 = *((__n128 *)a1 + 3);
  v8 = *((_QWORD *)a1 + 8);
  v9 = *((_QWORD *)a1 + 9);
  v10 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_DWORD *)v10 = v3;
  *(_OWORD *)(v10 + 4) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v10 + 24) = v4;
  *(_QWORD *)(v10 + 32) = v5;
  *(_DWORD *)(v10 + 40) = v6;
  *(_BYTE *)(v10 + 44) = v7;
  result = v12;
  *(__n128 *)(v10 + 48) = v12;
  *(_QWORD *)(v10 + 64) = v8;
  *(_QWORD *)(v10 + 72) = v9;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.localAmount.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.foreignAmount.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_23323F58C(v4, v5, v6, v7, v8, v9, v10, v11);
}

__n128 RawBankConnectData.Transaction.foreignAmount.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v9 = *a1;
  v7 = a1[2];
  v8 = a1[1];
  v6 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 60));
  sub_2331B3078(*v4, v4[1], v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
  *(_OWORD *)v4 = v9;
  *((_OWORD *)v4 + 1) = v8;
  result = v6;
  *((_OWORD *)v4 + 2) = v7;
  *((__n128 *)v4 + 3) = v6;
  v4[8] = v2;
  v4[9] = v3;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.foreignAmount.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

_QWORD *RawBankConnectData.Transaction.merchantInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[20];

  v3 = type metadata accessor for RawBankConnectData.Transaction(0);
  sub_233270324(v1 + *(int *)(v3 + 64), (uint64_t)v5);
  sub_233270324((uint64_t)v5, a1);
  return sub_2335038E8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23350394C);
}

_QWORD *sub_2335038E8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_23350394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_233270458(a11, a12);
  }
  return result;
}

uint64_t RawBankConnectData.Transaction.merchantInformation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[160];
  _QWORD v5[21];

  sub_233270324(a1, (uint64_t)v4);
  v2 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 64);
  sub_233270324(v2, (uint64_t)v5);
  sub_2335038E8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233270518);
  return sub_233270324((uint64_t)v4, v2);
}

uint64_t (*RawBankConnectData.Transaction.merchantInformation.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawBankConnectData.Transaction(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 68), a1, &qword_2560436D0);
}

uint64_t RawBankConnectData.Transaction.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawBankConnectData.Transaction(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 68), &qword_2560436D0);
}

uint64_t (*RawBankConnectData.Transaction.actions.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.accountId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.accountId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.accountId.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.applePayPaymentHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.applePayPaymentHash.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.applePayPaymentHash.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.bankTransactionCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 80));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_2332DCF40(v4, v5);
}

__n128 RawBankConnectData.Transaction.bankTransactionCode.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 80));
  sub_2332DCF70(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.bankTransactionCode.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.proprietaryBankTransactionCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 84));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_233503D94(v4, v5);
}

uint64_t sub_233503D94(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 RawBankConnectData.Transaction.proprietaryBankTransactionCode.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RawBankConnectData.Transaction(0) + 84));
  sub_2332DCF70(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.proprietaryBankTransactionCode.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.Transaction(0);
  return nullsub_1;
}

uint64_t sub_233503E4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233503E74 + 4 * byte_233655E70[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_233503E74()
{
  return 0xD000000000000010;
}

uint64_t sub_233504030()
{
  unsigned __int8 *v0;

  return sub_233503E4C(*v0);
}

uint64_t sub_233504038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23350B1B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23350405C(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_233504068()
{
  sub_23350ADB4();
  return sub_23361F428();
}

uint64_t sub_233504090()
{
  sub_23350ADB4();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Transaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  int *v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 *v19;
  __int128 v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  int v27;
  __int128 v28;
  __int128 v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053A98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350ADB4();
  sub_23361F410();
  LOBYTE(v27) = 0;
  sub_23361F140();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v27) = 1;
  sub_23361F14C();
  v41 = v6;
  v9 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  LOBYTE(v27) = 2;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F110();
  LOBYTE(v27) = 3;
  sub_23361F17C();
  LOBYTE(v27) = 4;
  sub_23361F140();
  LOBYTE(v27) = 5;
  sub_23361F0E0();
  LOBYTE(v27) = *(_BYTE *)(v3 + v9[10]);
  LOBYTE(v25) = 6;
  sub_23350ADF8();
  sub_23361F17C();
  LOBYTE(v27) = 7;
  sub_23361F0E0();
  LOBYTE(v27) = *(_BYTE *)(v3 + v9[12]);
  LOBYTE(v25) = 8;
  sub_23350AE3C();
  sub_23361F17C();
  LOBYTE(v27) = *(_BYTE *)(v3 + v9[13]);
  LOBYTE(v25) = 9;
  sub_23350AE80();
  sub_23361F110();
  v11 = (int *)(v3 + v9[14]);
  v12 = v11[10];
  v13 = *((_BYTE *)v11 + 44);
  v14 = *((_QWORD *)v11 + 6);
  v15 = *((_QWORD *)v11 + 7);
  v27 = *v11;
  v28 = *(_OWORD *)(v11 + 1);
  v29 = *(_OWORD *)(v11 + 6);
  v30 = v12;
  v31 = v13;
  v32 = v14;
  v33 = v15;
  v34 = *((_OWORD *)v11 + 4);
  LOBYTE(v25) = 10;
  sub_23350AEC4();
  sub_23361F17C();
  v16 = (__int128 *)(v3 + v9[15]);
  v17 = v16[1];
  v36 = *v16;
  v37 = v17;
  v18 = v16[3];
  v38 = v16[2];
  v39 = v18;
  v40 = v16[4];
  v35 = 11;
  sub_23361F110();
  sub_233270324(v3 + v9[16], (uint64_t)&v27);
  sub_233270324((uint64_t)&v27, (uint64_t)&v25);
  v24 = 12;
  sub_23350AF08();
  sub_23361F110();
  LOBYTE(v25) = 13;
  type metadata accessor for RawBankConnectData.Actions();
  sub_233167C58(&qword_256053AD0, (uint64_t (*)(uint64_t))type metadata accessor for RawBankConnectData.Actions, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Actions);
  sub_23361F110();
  LOBYTE(v25) = 14;
  sub_23361F0E0();
  LOBYTE(v25) = 15;
  sub_23361F0E0();
  v19 = (__int128 *)(v3 + v9[20]);
  v20 = v19[1];
  v25 = *v19;
  v26 = v20;
  v24 = 16;
  sub_23350AF4C();
  sub_23361F110();
  v21 = (__int128 *)(v3 + v9[21]);
  v22 = v21[1];
  v25 = *v21;
  v26 = v22;
  v24 = 17;
  sub_23350AF90();
  sub_23361F110();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v8, v5);
}

uint64_t RawBankConnectData.Transaction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  void (*v19)(void);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  int v55;
  char v56;
  __int128 v57;
  char *v58;
  __int128 v59;
  uint64_t *v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  __int128 v92;
  char *v93;
  char *v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  int *v100;
  char *v101;
  char *v102;
  __int128 v103;
  char v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[160];
  _QWORD v109[20];
  char v110;
  _OWORD v111[3];
  __int128 v112;
  __int128 v113;
  _OWORD v114[10];
  uint64_t *v115;

  v82 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
  MEMORY[0x24BDAC7A8](v3);
  v83 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)&v84 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&v85 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053AE8);
  v11 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  v87 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (char *)v17 + *(int *)(v15 + 24);
  v89 = v6;
  v90 = v5;
  v19 = *(void (**)(void))(v6 + 56);
  *(_QWORD *)&v103 = v18;
  v19();
  v20 = (char *)v17 + v14[9];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v102 = v20;
  v21 = (char *)v17 + v14[11];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v101 = v21;
  v22 = v14[13];
  *((_BYTE *)v17 + v22) = 16;
  v23 = (uint64_t *)((char *)v17 + v14[15]);
  *((_OWORD *)v23 + 3) = 0u;
  *((_OWORD *)v23 + 4) = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  v99 = v23;
  *(_OWORD *)v23 = 0u;
  v24 = (uint64_t)v17 + v14[16];
  sub_233317714(v114);
  v98 = v24;
  sub_233270324((uint64_t)v114, v24);
  v25 = (uint64_t)v17 + v14[17];
  v26 = type metadata accessor for RawBankConnectData.Actions();
  v27 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v26 - 8) + 56);
  v97 = v25;
  v27(v25, 1, 1, v26);
  v28 = (char *)v17 + v14[18];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  v94 = v28;
  v29 = (char *)v17 + v14[19];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v93 = v29;
  v30 = (uint64_t *)((char *)v17 + v14[20]);
  *(_OWORD *)v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  v95 = v30;
  v100 = v14;
  v31 = v14[21];
  v115 = v17;
  v32 = (uint64_t *)((char *)v17 + v31);
  *(_OWORD *)v32 = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  v96 = v32;
  v33 = a1[3];
  v91 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_23350ADB4();
  v88 = v13;
  v34 = v92;
  sub_23361F3EC();
  if (v34)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
    sub_233168608(v103, (uint64_t *)&unk_254247DA0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2331B3078(*v99, v99[1], v99[2], v99[3], v99[4], v99[5], v99[6], v99[7]);
    sub_233270324(v98, (uint64_t)v111);
    sub_2335038E8(v111, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233270518);
    sub_233168608(v97, &qword_2560436D0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2332DCF70(*v95, v95[1]);
    return sub_2332DCF70(*v96, v96[1]);
  }
  else
  {
    v35 = v85;
    *(_QWORD *)&v92 = v22;
    v81 = v26;
    LOBYTE(v111[0]) = 0;
    v36 = sub_23361F02C();
    v37 = v115;
    *v115 = v36;
    v37[1] = v38;
    LOBYTE(v111[0]) = 1;
    v39 = sub_23361F038();
    v40 = v100;
    *((_BYTE *)v37 + 16) = v39 & 1;
    LOBYTE(v111[0]) = 2;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v41 = v90;
    sub_23361EFFC();
    sub_233170B8C(v35, v103, (uint64_t *)&unk_254247DA0);
    LOBYTE(v111[0]) = 3;
    v42 = v84;
    sub_23361F068();
    v43 = v115;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))((uint64_t)v115 + v40[7], v42, v41);
    LOBYTE(v111[0]) = 4;
    v44 = sub_23361F02C();
    v45 = (uint64_t *)((char *)v43 + v40[8]);
    *v45 = v44;
    v45[1] = v46;
    LOBYTE(v111[0]) = 5;
    v47 = sub_23361EFCC();
    v49 = v48;
    v50 = (uint64_t *)v102;
    swift_bridgeObjectRelease();
    *v50 = v47;
    v50[1] = v49;
    LOBYTE(v109[0]) = 6;
    sub_23350AFD4();
    sub_23361F068();
    *((_BYTE *)v115 + v40[10]) = v111[0];
    LOBYTE(v111[0]) = 7;
    v51 = sub_23361EFCC();
    v53 = v52;
    v54 = (uint64_t *)v101;
    swift_bridgeObjectRelease();
    *v54 = v51;
    v54[1] = v53;
    LOBYTE(v109[0]) = 8;
    sub_23350B018();
    sub_23361F068();
    *((_BYTE *)v115 + v40[12]) = v111[0];
    LOBYTE(v109[0]) = 9;
    sub_23350B05C();
    sub_23361EFFC();
    *((_BYTE *)v115 + v92) = v111[0];
    LOBYTE(v109[0]) = 10;
    sub_23350B0A0();
    sub_23361F068();
    v55 = DWORD2(v111[2]);
    v56 = BYTE12(v111[2]);
    v57 = v112;
    v58 = (char *)v115 + v100[14];
    *(_DWORD *)v58 = v111[0];
    *(_OWORD *)(v58 + 4) = *(_OWORD *)((char *)v111 + 4);
    *(_OWORD *)(v58 + 24) = *(_OWORD *)((char *)&v111[1] + 8);
    *((_DWORD *)v58 + 10) = v55;
    v58[44] = v56;
    *((_OWORD *)v58 + 3) = v57;
    *((_OWORD *)v58 + 4) = v113;
    LOBYTE(v109[0]) = 11;
    sub_23361EFFC();
    v92 = v111[0];
    v84 = v111[2];
    v85 = v111[1];
    v80 = v112;
    v59 = v113;
    v60 = v99;
    sub_2331B3078(*v99, v99[1], v99[2], v99[3], v99[4], v99[5], v99[6], v99[7]);
    v61 = v85;
    *(_OWORD *)v60 = v92;
    *((_OWORD *)v60 + 1) = v61;
    v62 = v80;
    *((_OWORD *)v60 + 2) = v84;
    *((_OWORD *)v60 + 3) = v62;
    *((_OWORD *)v60 + 4) = v59;
    v110 = 12;
    sub_23350B0E4();
    sub_23361EFFC();
    sub_233270324((uint64_t)v111, (uint64_t)v108);
    v63 = v98;
    sub_233270324(v98, (uint64_t)v109);
    sub_2335038E8(v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233270518);
    sub_233270324((uint64_t)v108, v63);
    LOBYTE(v105) = 13;
    sub_233167C58(&qword_256053B18, (uint64_t (*)(uint64_t))type metadata accessor for RawBankConnectData.Actions, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Actions);
    sub_23361EFFC();
    sub_233170B8C(v83, v97, &qword_2560436D0);
    LOBYTE(v105) = 14;
    v64 = sub_23361EFCC();
    v66 = v65;
    v67 = (uint64_t *)v94;
    swift_bridgeObjectRelease();
    *v67 = v64;
    v67[1] = v66;
    LOBYTE(v105) = 15;
    v68 = sub_23361EFCC();
    v70 = v69;
    v71 = (uint64_t *)v93;
    swift_bridgeObjectRelease();
    *v71 = v68;
    v71[1] = v70;
    v104 = 16;
    sub_23350B128();
    sub_23361EFFC();
    v92 = v105;
    v72 = v106;
    v73 = v107;
    v74 = v95;
    sub_2332DCF70(*v95, v95[1]);
    *(_OWORD *)v74 = v92;
    v74[2] = v72;
    v74[3] = v73;
    v104 = 17;
    sub_23350B16C();
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v86);
    v103 = v105;
    v75 = v106;
    v76 = v107;
    v77 = v96;
    sub_2332DCF70(*v96, v96[1]);
    *(_OWORD *)v77 = v103;
    v77[2] = v75;
    v77[3] = v76;
    v78 = v115;
    sub_2331684BC((uint64_t)v115, v82, type metadata accessor for RawBankConnectData.Transaction);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
    return sub_233168500((uint64_t)v78, type metadata accessor for RawBankConnectData.Transaction);
  }
}

uint64_t sub_2335051C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.Transaction.init(from:)(a1, a2);
}

uint64_t sub_2335051DC(_QWORD *a1)
{
  return RawBankConnectData.Transaction.encode(to:)(a1);
}

void *static RawBankConnectData.Transaction.Status.allCases.getter()
{
  return &unk_25046B578;
}

uint64_t RawBankConnectData.Transaction.Status.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23350523C + 4 * byte_233655E82[a1]))(0x5A49524F48545541, 0xEA00000000004445);
}

uint64_t sub_23350523C()
{
  return 1330464077;
}

uint64_t sub_23350524C()
{
  return 0x474E49444E4550;
}

uint64_t sub_233505264()
{
  return 0x44454B4F4F42;
}

uint64_t sub_233505278()
{
  return 0x44455443454A4552;
}

void sub_233505290()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_2335052E0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23350535C()
{
  __asm { BR              X10 }
}

uint64_t sub_23350539C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_233505404()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_233505450()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2335054CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s10FinanceKit18RawBankConnectDataO11TransactionV6StatusO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_2335054F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23350552C + 4 * byte_233655E96[*v0]))();
}

void sub_23350552C(_QWORD *a1@<X8>)
{
  *a1 = 1330464077;
  a1[1] = 0xE400000000000000;
}

void sub_233505540(_QWORD *a1@<X8>)
{
  *a1 = 0x474E49444E4550;
  a1[1] = 0xE700000000000000;
}

void sub_23350555C(_QWORD *a1@<X8>)
{
  *a1 = 0x44454B4F4F42;
  a1[1] = 0xE600000000000000;
}

void sub_233505574(_QWORD *a1@<X8>)
{
  *a1 = 0x44455443454A4552;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_233505590()
{
  sub_23351196C();
  return sub_23361E390();
}

uint64_t sub_2335055EC()
{
  sub_23351196C();
  return sub_23361E354();
}

void sub_233505638(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233505698@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233505700 + 4 * byte_233655EA0[a1]))(1330464077);
}

uint64_t sub_233505700(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1330464077 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2335057B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B5A0;
}

uint64_t RawBankConnectData.Transaction.TransactionType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  v4 = 16;
  if (v2 < 0x10)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static RawBankConnectData.Transaction.TransactionType.allCases.getter()
{
  return &unk_25046B768;
}

uint64_t RawBankConnectData.Transaction.TransactionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233505864 + 4 * byte_233655EA5[*v0]))(0x454D5453554A4441, 0xEA0000000000544ELL);
}

uint64_t sub_233505864()
{
  return 0x5941505F4C4C4942;
}

uint64_t sub_233505884()
{
  return 0x4B43454843;
}

uint64_t sub_233505898()
{
  return 0x5449534F504544;
}

uint64_t sub_2335058B0()
{
  return 0x445F544345524944;
}

uint64_t sub_2335058D0()
{
  return 0x444E454449564944;
}

uint64_t sub_2335058E8()
{
  return 4539718;
}

uint64_t sub_2335058F8()
{
  return 0x5453455245544E49;
}

uint64_t sub_233505910()
{
  return 1312902988;
}

uint64_t sub_233505920()
{
  return 5459792;
}

uint64_t sub_233505930()
{
  return 0x444E55464552;
}

uint64_t sub_233505944()
{
  return 0x474E49444E415453;
}

uint64_t sub_233505968()
{
  return 0x524546534E415254;
}

uint64_t sub_233505980()
{
  return 0x4E574F4E4B4E55;
}

uint64_t sub_233505998()
{
  return 0x5741524448544957;
}

uint64_t sub_2335059B4()
{
  return 0x445241574552;
}

uint64_t sub_2335059C8()
{
  sub_23361F350();
  RawBankConnectData.Transaction.TransactionType.rawValue.getter();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233505A2C()
{
  RawBankConnectData.Transaction.TransactionType.rawValue.getter();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233505A7C()
{
  sub_23361F350();
  RawBankConnectData.Transaction.TransactionType.rawValue.getter();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233505ADC@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.Transaction.TransactionType.init(rawValue:)(a1);
}

uint64_t sub_233505AE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RawBankConnectData.Transaction.TransactionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_233505B0C()
{
  sub_233511928();
  return sub_23361E390();
}

uint64_t sub_233505B68()
{
  sub_233511928();
  return sub_23361E354();
}

void sub_233505BB4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B768;
}

uint64_t sub_233505BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2332279B8(*a1, *a2);
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantCategoryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantCategoryCode.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.merchantCategoryCode.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.standardIndustrialClassificationCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.standardIndustrialClassificationCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.standardIndustrialClassificationCode.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.categoryDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.categoryDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.categoryDescription.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.merchantName.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.merchantNumber.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.merchantAddress.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v8 = v1[16];
  v9 = v1[17];
  v10 = v1[18];
  v11 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_233270458(v2, v3);
}

__n128 RawBankConnectData.Transaction.MerchantInformation.merchantAddress.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v8 = *a1;
  v6 = a1[2];
  v7 = a1[1];
  v5 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  sub_2332705EC(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  *(_OWORD *)(v1 + 80) = v8;
  *(_OWORD *)(v1 + 96) = v7;
  result = v5;
  *(_OWORD *)(v1 + 112) = v6;
  *(__n128 *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v3;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantInformation.merchantAddress.modify())()
{
  return nullsub_1;
}

uint64_t sub_233505EDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233505F18 + 4 * byte_233655EB5[a1]))(0xD000000000000014, 0x8000000233677F00);
}

uint64_t sub_233505F18()
{
  uint64_t v0;

  return v0 + 17;
}

unint64_t sub_233505F30()
{
  return 0xD000000000000013;
}

uint64_t sub_233505F4C()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_233505F94()
{
  unsigned __int8 *v0;

  return sub_233505EDC(*v0);
}

uint64_t sub_233505F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233510F98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233505FC0()
{
  sub_23350B944();
  return sub_23361F428();
}

uint64_t sub_233505FE8()
{
  sub_23350B944();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v30 = v1[3];
  v31 = v7;
  v8 = v1[4];
  v28 = v1[5];
  v29 = v8;
  v9 = v1[6];
  v26 = v1[7];
  v27 = v9;
  v10 = v1[9];
  v24 = v1[8];
  v25 = v10;
  v14 = v1[10];
  v15 = v1[11];
  v16 = v1[12];
  v17 = v1[13];
  v11 = v1[14];
  v22 = v1[15];
  v23 = v11;
  v21 = v1[16];
  v20 = v1[17];
  v19 = v1[18];
  v18 = v1[19];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350B944();
  sub_23361F410();
  LOBYTE(v33) = 0;
  v12 = v32;
  sub_23361F0E0();
  if (!v12)
  {
    LOBYTE(v33) = 1;
    sub_23361F0E0();
    LOBYTE(v33) = 2;
    sub_23361F0E0();
    LOBYTE(v33) = 3;
    sub_23361F0E0();
    LOBYTE(v33) = 4;
    sub_23361F0E0();
    v33 = v14;
    v34 = v15;
    v35 = v16;
    v36 = v17;
    v37 = v23;
    v38 = v22;
    v39 = v21;
    v40 = v20;
    v41 = v19;
    v42 = v18;
    v43 = 5;
    sub_23350B988();
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.Transaction.MerchantInformation.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23350B944();
  sub_23361F3EC();
  if (v2)
  {
    v59 = v2;
    v62 = 0;
    v98 = 0;
    v61 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    v83 = 0;
    v84 = v61;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v88 = 0;
    v89 = 0;
    v90 = v98;
    v91 = 0;
    v92 = v62;
    v93 = xmmword_23363ADC0;
    v94 = 0u;
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
  }
  else
  {
    LOBYTE(v83) = 0;
    v10 = sub_23361EFCC();
    v13 = v12;
    v58 = v10;
    LOBYTE(v83) = 1;
    swift_bridgeObjectRetain();
    v14 = sub_23361EFCC();
    v61 = v13;
    v16 = v15;
    v57 = v14;
    LOBYTE(v83) = 2;
    swift_bridgeObjectRetain();
    v17 = sub_23361EFCC();
    v19 = v18;
    v55 = v17;
    v56 = v16;
    LOBYTE(v83) = 3;
    swift_bridgeObjectRetain();
    v54 = sub_23361EFCC();
    LOBYTE(v83) = 4;
    v98 = v20;
    swift_bridgeObjectRetain();
    v21 = sub_23361EFCC();
    v23 = v22;
    v53 = v21;
    v59 = a2;
    v24 = v98;
    v73 = 5;
    sub_23350B9CC();
    v62 = v23;
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v25 = v74;
    v26 = v75;
    v49 = v78;
    v50 = v77;
    v48 = v79;
    v27 = v81;
    v46 = v76;
    v47 = v80;
    v51 = v82;
    v52 = v81;
    sub_233270458(v74, v75);
    sub_2332705EC(0, 1);
    *(_QWORD *)&v63 = v58;
    *((_QWORD *)&v63 + 1) = v13;
    *(_QWORD *)&v64 = v57;
    *((_QWORD *)&v64 + 1) = v56;
    *(_QWORD *)&v65 = v55;
    *((_QWORD *)&v65 + 1) = v19;
    v44 = v19;
    *(_QWORD *)&v45 = v25;
    *(_QWORD *)&v66 = v54;
    *((_QWORD *)&v66 + 1) = v24;
    *(_QWORD *)&v67 = v53;
    *((_QWORD *)&v67 + 1) = v62;
    *(_QWORD *)&v68 = v25;
    *((_QWORD *)&v68 + 1) = v26;
    *((_QWORD *)&v45 + 1) = v26;
    *(_QWORD *)&v69 = v46;
    *((_QWORD *)&v69 + 1) = v50;
    *(_QWORD *)&v70 = v49;
    *((_QWORD *)&v70 + 1) = v48;
    *(_QWORD *)&v71 = v47;
    *((_QWORD *)&v71 + 1) = v27;
    v72 = v51;
    sub_233270390((uint64_t)&v63);
    v28 = v26;
    v29 = v46;
    v30 = v47;
    sub_2332705EC(v25, v28);
    v31 = v61;
    swift_bridgeObjectRelease();
    v32 = v56;
    swift_bridgeObjectRelease();
    v33 = v44;
    swift_bridgeObjectRelease();
    v34 = v98;
    swift_bridgeObjectRelease();
    v35 = v62;
    swift_bridgeObjectRelease();
    v36 = v70;
    v38 = v59;
    v37 = (uint64_t)v60;
    v59[6] = v69;
    v38[7] = v36;
    v39 = v72;
    v38[8] = v71;
    v38[9] = v39;
    v40 = v66;
    v38[2] = v65;
    v38[3] = v40;
    v41 = v68;
    v38[4] = v67;
    v38[5] = v41;
    v42 = v64;
    *v38 = v63;
    v38[1] = v42;
    __swift_destroy_boxed_opaque_existential_0(v37);
    v83 = v58;
    v84 = v31;
    v85 = v57;
    v86 = v32;
    v87 = v55;
    v88 = v33;
    v89 = v54;
    v90 = v34;
    v91 = v53;
    v92 = v35;
    v93 = v45;
    *(_QWORD *)&v94 = v29;
    *((_QWORD *)&v94 + 1) = v50;
    *(_QWORD *)&v95 = v49;
    *((_QWORD *)&v95 + 1) = v48;
    *(_QWORD *)&v96 = v30;
    *((_QWORD *)&v96 + 1) = v52;
    v97 = v51;
  }
  return sub_23349116C((uint64_t)&v83);
}

uint64_t sub_2335068DC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return RawBankConnectData.Transaction.MerchantInformation.init(from:)(a1, a2);
}

uint64_t sub_2335068F0(_QWORD *a1)
{
  return RawBankConnectData.Transaction.MerchantInformation.encode(to:)(a1);
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.addressLine.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.addressLine.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantAddress.addressLine.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.city.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.city.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantAddress.city.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.stateOrSection.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.stateOrSection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantAddress.stateOrSection.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.zipOrPostCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.zipOrPostCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantAddress.zipOrPostCode.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.MerchantAddress.countryCode.modify())()
{
  return nullsub_1;
}

uint64_t sub_233506B3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233506B78 + 4 * byte_233655EBB[*v0]))(0x4C73736572646461, 0xEB00000000656E69);
}

uint64_t sub_233506B78()
{
  return 2037672291;
}

uint64_t sub_233506B88()
{
  return 0x53724F6574617473;
}

uint64_t sub_233506BAC()
{
  return 0x736F50724F70697ALL;
}

uint64_t sub_233506BD0()
{
  return 0x437972746E756F63;
}

uint64_t sub_233506BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233511244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233506C14()
{
  sub_23350BA10();
  return sub_23361F428();
}

uint64_t sub_233506C3C()
{
  sub_23350BA10();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BA10();
  sub_23361F410();
  v18 = 0;
  v11 = v13[9];
  sub_23361F0E0();
  if (!v11)
  {
    v17 = 1;
    sub_23361F0E0();
    v16 = 2;
    sub_23361F0E0();
    v15 = 3;
    sub_23361F0E0();
    v14 = 4;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.Transaction.MerchantAddress.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BA10();
  sub_23361F3EC();
  if (!v2)
  {
    v40 = 0;
    v10 = sub_23361EFCC();
    v12 = v11;
    v39 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361EFCC();
    v15 = v14;
    v33 = v13;
    v34 = v10;
    v38 = 2;
    swift_bridgeObjectRetain();
    v35 = v15;
    v16 = sub_23361EFCC();
    v18 = v17;
    v31 = v16;
    v32 = a2;
    v37 = 3;
    swift_bridgeObjectRetain();
    v19 = sub_23361EFCC();
    v21 = v20;
    v30 = v19;
    v36 = 4;
    swift_bridgeObjectRetain();
    v22 = sub_23361EFCC();
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v32;
    v27 = v35;
    *v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233507198@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.Transaction.MerchantAddress.init(from:)(a1, a2);
}

uint64_t sub_2335071AC(_QWORD *a1)
{
  return RawBankConnectData.Transaction.MerchantAddress.encode(to:)(a1);
}

uint64_t (*RawBankConnectData.Transaction.BankTransactionCode.code.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.BankTransactionCode.subCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.BankTransactionCode.subCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.BankTransactionCode.subCode.modify())()
{
  return nullsub_1;
}

uint64_t sub_233507244()
{
  _BYTE *v0;

  if (*v0)
    return 0x65646F43627573;
  else
    return 1701080931;
}

uint64_t sub_233507278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335114B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23350729C()
{
  sub_23350BA54();
  return sub_23361F428();
}

uint64_t sub_2335072C4()
{
  sub_23350BA54();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Transaction.BankTransactionCode.encode(to:)(_QWORD *a1)
{
  return sub_2335076A4(a1, &qword_256053B70, (void (*)(void))sub_23350BA54, (uint64_t)&_s11TransactionV19BankTransactionCodeV10CodingKeysON, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t RawBankConnectData.Transaction.BankTransactionCode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BA54();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F02C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2335074C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.Transaction.BankTransactionCode.init(from:)(a1, a2);
}

uint64_t sub_2335074D4(_QWORD *a1)
{
  return RawBankConnectData.Transaction.BankTransactionCode.encode(to:)(a1);
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.code.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.ProprietaryBankTransactionCode.code.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.issuer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Transaction.ProprietaryBankTransactionCode.issuer.modify())()
{
  return nullsub_1;
}

uint64_t sub_2335075CC()
{
  _BYTE *v0;

  if (*v0)
    return 0x726575737369;
  else
    return 1701080931;
}

uint64_t sub_2335075FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233511598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233507620()
{
  sub_23350BA98();
  return sub_23361F428();
}

uint64_t sub_233507648()
{
  sub_23350BA98();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.encode(to:)(_QWORD *a1)
{
  return sub_2335076A4(a1, &qword_256053B88, (void (*)(void))sub_23350BA98, (uint64_t)&_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t sub_2335076A4(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, _BYTE *, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, _BYTE *, uint64_t);
  void (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[2];

  v15 = a5;
  v16 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v5 + 16);
  v13 = *(_QWORD *)(v5 + 24);
  v14 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16();
  sub_23361F410();
  v19[1] = 0;
  v11 = v17;
  sub_23361F140();
  if (!v11)
  {
    v19[0] = 1;
    v15(v14, v13, v19, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v7);
}

uint64_t RawBankConnectData.Transaction.ProprietaryBankTransactionCode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053B98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BA98();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v20 = 0;
    v10 = sub_23361F02C();
    v12 = v11;
    v19 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361EFCC();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v17;
    a2[3] = v15;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233507994@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.Transaction.ProprietaryBankTransactionCode.init(from:)(a1, a2);
}

uint64_t sub_2335079A8(_QWORD *a1)
{
  return RawBankConnectData.Transaction.ProprietaryBankTransactionCode.encode(to:)(a1);
}

uint64_t RawBankConnectData.TransactionsResponse.page.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2331770E8(v2, v3);
}

uint64_t RawBankConnectData.TransactionsResponse.page.setter(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_2331770FC(*v1, v1[1]);
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*RawBankConnectData.TransactionsResponse.page.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsResponse.transactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.TransactionsResponse.transactions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*RawBankConnectData.TransactionsResponse.transactions.modify())()
{
  return nullsub_1;
}

uint64_t sub_233507A50()
{
  _BYTE *v0;

  if (*v0)
    return 0x746361736E617274;
  else
    return 1701273968;
}

uint64_t sub_233507A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233511670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233507AB0()
{
  sub_23350BADC();
  return sub_23361F428();
}

uint64_t sub_233507AD8()
{
  sub_23350BADC();
  return sub_23361F434();
}

uint64_t RawBankConnectData.TransactionsResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053BA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v11[0] = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BADC();
  sub_23361F410();
  v12 = v8;
  v13 = v7;
  v14 = 0;
  sub_23350BB20();
  v9 = v11[1];
  sub_23361F110();
  if (!v9)
  {
    v12 = v11[0];
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256053BB8);
    sub_23350BBA8(&qword_256053BC0, &qword_25604D2C0, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Transaction, MEMORY[0x24BEE12A0]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.TransactionsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053BC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BADC();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_2331770FC(0, 1);
  }
  else
  {
    v14 = 0;
    sub_23350BB64();
    sub_23361EFFC();
    v9 = v13[0];
    v10 = v13[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256053BB8);
    v14 = 1;
    sub_2331770E8(v9, v10);
    sub_23350BBA8(&qword_256053BD8, &qword_256053BE0, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Transaction, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v13[0];
    sub_2331770E8(v9, v10);
    swift_bridgeObjectRetain();
    sub_2331770FC(v9, v10);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_2331770FC(v9, v10);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_233507E94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.TransactionsResponse.init(from:)(a1, a2);
}

uint64_t sub_233507EA8(_QWORD *a1)
{
  return RawBankConnectData.TransactionsResponse.encode(to:)(a1);
}

uint64_t RawBankConnectData.TransactionsResponse.PageMetadata.nextCursor.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.TransactionsResponse.PageMetadata.nextCursor.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.TransactionsResponse.PageMetadata.nextCursor.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsResponse.PageMetadata.init(nextCursor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static RawBankConnectData.TransactionsResponse.PageMetadata.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23361F224() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_233507F90()
{
  return 0x737275437478656ELL;
}

uint64_t sub_233507FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x737275437478656ELL && a2 == 0xEA0000000000726FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23350804C()
{
  sub_23350BC2C();
  return sub_23361F428();
}

uint64_t sub_233508074()
{
  sub_23350BC2C();
  return sub_23361F434();
}

uint64_t RawBankConnectData.TransactionsResponse.PageMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053BE8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BC2C();
  sub_23361F410();
  sub_23361F0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RawBankConnectData.TransactionsResponse.PageMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053BF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BC2C();
  sub_23361F3EC();
  if (!v2)
  {
    v9 = sub_23361EFCC();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2335082A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.TransactionsResponse.PageMetadata.init(from:)(a1, a2);
}

uint64_t sub_2335082B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053BE8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BC2C();
  sub_23361F410();
  sub_23361F0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t (*RawBankConnectData.TransactionsRequestBody.accountId.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsRequestBody.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.TransactionsRequestBody(0) + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawBankConnectData.TransactionsRequestBody.startTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.TransactionsRequestBody(0) + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawBankConnectData.TransactionsRequestBody.startTime.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsRequestBody.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233508478(type metadata accessor for RawBankConnectData.TransactionsRequestBody, a1);
}

uint64_t sub_233508478@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_2331686A0(v2 + *(int *)(v4 + 24), a2, (uint64_t *)&unk_254247DA0);
}

uint64_t RawBankConnectData.TransactionsRequestBody.endTime.setter(uint64_t a1)
{
  return sub_2335084C4(a1, type metadata accessor for RawBankConnectData.TransactionsRequestBody);
}

uint64_t sub_2335084C4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return sub_233170B8C(a1, v2 + *(int *)(v4 + 24), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawBankConnectData.TransactionsRequestBody.endTime.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsRequestBody.cursor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.TransactionsRequestBody(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.TransactionsRequestBody.cursor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.TransactionsRequestBody(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.TransactionsRequestBody.cursor.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.TransactionsRequestBody.init(accountId:startTime:endTime:cursor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;

  v12 = (int *)type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  v13 = (uint64_t)&a7[v12[6]];
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v16 = &a7[v12[7]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)a7 = a1;
  *((_QWORD *)a7 + 1) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(&a7[v12[5]], a3, v14);
  sub_233170B8C(a4, v13, (uint64_t *)&unk_254247DA0);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v16 = a5;
  *((_QWORD *)v16 + 1) = a6;
  return result;
}

uint64_t RawBankConnectData.TransactionsRequestBody.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23361D634();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  sub_2331686A0(v0 + *(int *)(v8 + 24), (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23361F368();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23361F368();
    sub_23361E090();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (!*(_QWORD *)(v0 + *(int *)(v8 + 28) + 8))
    return sub_23361F368();
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2335088AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2335088E0 + 4 * byte_233655EC0[*v0]))(0x49746E756F636361, 0xE900000000000064);
}

uint64_t sub_2335088E0()
{
  return 0x6D69547472617473;
}

uint64_t sub_2335088F8()
{
  return 0x656D6954646E65;
}

uint64_t sub_233508910()
{
  return 0x726F73727563;
}

uint64_t sub_233508924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233511768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233508948()
{
  sub_23350BC84();
  return sub_23361F428();
}

uint64_t sub_233508970()
{
  sub_23350BC84();
  return sub_23361F434();
}

uint64_t RawBankConnectData.TransactionsRequestBody.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053C00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BC84();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v1)
  {
    type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
    v11 = 1;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    v10 = 2;
    sub_23361F110();
    v9 = 3;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.TransactionsRequestBody.hashValue.getter()
{
  sub_23361F350();
  RawBankConnectData.TransactionsRequestBody.hash(into:)();
  return sub_23361F3A4();
}

uint64_t RawBankConnectData.TransactionsRequestBody.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void (*v15)(void);
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053C10);
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void (**)(void))(v6 + 56);
  v37 = (uint64_t)v14 + *(int *)(v12 + 24);
  v15();
  v16 = (uint64_t *)((char *)v14 + *(int *)(v11 + 28));
  *v16 = 0;
  v16[1] = 0;
  v34 = a1;
  v35 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23350BC84();
  v32 = v10;
  v17 = v36;
  sub_23361F3EC();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    sub_233168608(v37, (uint64_t *)&unk_254247DA0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v31;
    v19 = v8;
    v41 = 0;
    v20 = (uint64_t)v14;
    *v14 = sub_23361F02C();
    v14[1] = v21;
    v40 = 1;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v14 + *(int *)(v11 + 20), v18, v5);
    v39 = 2;
    v22 = (uint64_t)v30;
    sub_23361EFFC();
    sub_233170B8C(v22, v37, (uint64_t *)&unk_254247DA0);
    v38 = 3;
    v23 = sub_23361EFCC();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v33);
    v26 = v35;
    swift_bridgeObjectRelease();
    *v26 = v23;
    v26[1] = v25;
    sub_2331684BC(v20, v29, type metadata accessor for RawBankConnectData.TransactionsRequestBody);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    return sub_233168500(v20, type metadata accessor for RawBankConnectData.TransactionsRequestBody);
  }
}

uint64_t sub_233508F2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.TransactionsRequestBody.init(from:)(a1, a2);
}

uint64_t sub_233508F40(_QWORD *a1)
{
  return RawBankConnectData.TransactionsRequestBody.encode(to:)(a1);
}

uint64_t sub_233508F58()
{
  sub_23361F350();
  RawBankConnectData.TransactionsRequestBody.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_233508F98()
{
  sub_23361F350();
  RawBankConnectData.TransactionsRequestBody.hash(into:)();
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit18RawBankConnectDataO11TransactionV011ProprietarydG4CodeV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_23361F224(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_23361F224() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s10FinanceKit18RawBankConnectDataO11TransactionV19MerchantInformationV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  _BOOL8 result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD v158[10];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;

  v3 = a1[1];
  v146 = a1[2];
  v4 = a1[4];
  v152 = a1[3];
  v5 = a1[6];
  v7 = a1[7];
  v6 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[12];
  v11 = a1[14];
  v140 = a1[13];
  v12 = a1[16];
  v141 = a1[15];
  v142 = a1[11];
  v14 = a1[17];
  v13 = a1[18];
  v15 = a1[19];
  v16 = a2[1];
  v17 = a2[3];
  v143 = a2[4];
  v144 = a2[2];
  v18 = a2[6];
  v150 = a2[5];
  v20 = a2[7];
  v19 = a2[8];
  v21 = a2[9];
  v22 = a2[10];
  v23 = a2[11];
  v25 = a2[13];
  v24 = a2[14];
  v26 = a2[15];
  v137 = a2[12];
  v138 = a2[16];
  v139 = a2[17];
  v27 = a2[18];
  v28 = a2[19];
  if (!v3)
  {
    v136 = a1[5];
    if (v16)
      return 0;
    goto LABEL_8;
  }
  if (!v16)
    return 0;
  v136 = a1[5];
  if (*a1 == *a2 && v3 == v16)
    goto LABEL_8;
  v100 = a1[19];
  v121 = a1[12];
  v125 = a2[13];
  v130 = a2[14];
  v94 = a2[15];
  v95 = a2[19];
  v113 = a2[8];
  v117 = a1[17];
  v29 = a2[18];
  v30 = a1[10];
  v105 = a2[7];
  v108 = a1[7];
  v31 = a1[14];
  v32 = a1[16];
  v33 = a1[18];
  v111 = a1[6];
  v34 = a2[10];
  v102 = a2[6];
  v35 = a1[8];
  v93 = a1[9];
  v36 = a2[9];
  v37 = sub_23361F224();
  v21 = v36;
  v8 = v93;
  v26 = v94;
  v6 = v35;
  v22 = v34;
  v13 = v33;
  v7 = v108;
  v5 = v111;
  v12 = v32;
  v11 = v31;
  v18 = v102;
  v20 = v105;
  v9 = v30;
  v19 = v113;
  v14 = v117;
  v28 = v95;
  v27 = v29;
  v25 = v125;
  v24 = v130;
  v10 = v121;
  v15 = v100;
  v38 = v37;
  result = 0;
  if ((v38 & 1) != 0)
  {
LABEL_8:
    if (v152)
    {
      if (!v17)
        return 0;
      if (v146 != v144 || v152 != v17)
      {
        v153 = v22;
        v126 = v25;
        v131 = v24;
        v118 = v14;
        v122 = v10;
        v101 = v15;
        v103 = v18;
        v40 = v27;
        v106 = v20;
        v109 = v7;
        v41 = v28;
        v42 = v9;
        v43 = v11;
        v44 = v12;
        v114 = v19;
        v45 = v13;
        v46 = v26;
        v145 = v6;
        v147 = v21;
        v47 = v8;
        v48 = sub_23361F224();
        v6 = v145;
        v21 = v147;
        v8 = v47;
        v26 = v46;
        v13 = v45;
        v19 = v114;
        v12 = v44;
        v11 = v43;
        v15 = v101;
        v18 = v103;
        v9 = v42;
        v10 = v122;
        v25 = v126;
        v28 = v41;
        v20 = v106;
        v7 = v109;
        v27 = v40;
        v24 = v131;
        v22 = v153;
        v14 = v118;
        v49 = v48;
        result = 0;
        if ((v49 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v136)
    {
      if (!v150)
        return 0;
      if (v4 != v143 || v136 != v150)
      {
        v154 = v22;
        v127 = v25;
        v132 = v24;
        v97 = v23;
        v119 = v14;
        v123 = v10;
        v50 = v15;
        v51 = v27;
        v104 = v18;
        v107 = v20;
        v52 = v28;
        v53 = v9;
        v54 = v11;
        v55 = v12;
        v110 = v7;
        v112 = v5;
        v56 = v13;
        v57 = v26;
        v58 = v6;
        v115 = v19;
        v59 = v8;
        v148 = v21;
        v60 = sub_23361F224();
        v21 = v148;
        v8 = v59;
        v6 = v58;
        v26 = v57;
        v13 = v56;
        v5 = v112;
        v19 = v115;
        v12 = v55;
        v11 = v54;
        v18 = v104;
        v9 = v53;
        v10 = v123;
        v25 = v127;
        v28 = v52;
        v20 = v107;
        v7 = v110;
        v27 = v51;
        v24 = v132;
        v22 = v154;
        v15 = v50;
        v14 = v119;
        v23 = v97;
        v61 = v60;
        result = 0;
        if ((v61 & 1) == 0)
          return result;
      }
    }
    else if (v150)
    {
      return 0;
    }
    if (v7)
    {
      if (!v20)
        return 0;
      if (v5 != v18 || v7 != v20)
      {
        v155 = v22;
        v128 = v25;
        v133 = v24;
        v98 = v23;
        v120 = v14;
        v124 = v10;
        v62 = v15;
        v63 = v27;
        v64 = v28;
        v65 = v9;
        v66 = v11;
        v67 = v12;
        v68 = v13;
        v69 = v26;
        v70 = v6;
        v116 = v19;
        v71 = v8;
        v149 = v21;
        v72 = sub_23361F224();
        v21 = v149;
        v8 = v71;
        v6 = v70;
        v26 = v69;
        v13 = v68;
        v12 = v67;
        v11 = v66;
        v9 = v65;
        v10 = v124;
        v25 = v128;
        v28 = v64;
        v27 = v63;
        v24 = v133;
        v22 = v155;
        v15 = v62;
        v19 = v116;
        v14 = v120;
        v23 = v98;
        v73 = v72;
        result = 0;
        if ((v73 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v8)
    {
      if (!v21)
        return 0;
      if (v6 != v19 || v8 != v21)
      {
        v156 = v22;
        v129 = v25;
        v134 = v24;
        v99 = v23;
        v74 = v14;
        v75 = v15;
        v76 = v27;
        v77 = v28;
        v78 = v10;
        v79 = v9;
        v80 = v11;
        v81 = v12;
        v82 = v13;
        v83 = v26;
        v84 = sub_23361F224();
        v26 = v83;
        v13 = v82;
        v12 = v81;
        v11 = v80;
        v9 = v79;
        v10 = v78;
        v28 = v77;
        v27 = v76;
        v25 = v129;
        v24 = v134;
        v22 = v156;
        v15 = v75;
        v14 = v74;
        v23 = v99;
        v85 = v84;
        result = 0;
        if ((v85 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v142 == 1)
    {
      if (v23 == 1)
        return 1;
      goto LABEL_41;
    }
    v86 = v22;
    v87 = v26;
    v159 = v9;
    v160 = v142;
    v161 = v10;
    v162 = v140;
    v163 = v11;
    v164 = v141;
    v165 = v12;
    v166 = v14;
    v167 = v13;
    v168 = v15;
    v88 = v15;
    if (v23 == 1)
    {
      v135 = v24;
      v151 = v9;
      v157 = v27;
      v96 = v28;
      v89 = v11;
      v90 = v12;
      v91 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v91;
      v12 = v90;
      v11 = v89;
      v9 = v151;
      v27 = v157;
      v28 = v96;
      v24 = v135;
      v15 = v88;
      v26 = v87;
      v22 = v86;
LABEL_41:
      v159 = v9;
      v160 = v142;
      v161 = v10;
      v162 = v140;
      v163 = v11;
      v164 = v141;
      v165 = v12;
      v166 = v14;
      v167 = v13;
      v168 = v15;
      v169 = v22;
      v170 = v23;
      v171 = v137;
      v172 = v25;
      v173 = v24;
      v174 = v26;
      v175 = v138;
      v176 = v139;
      v177 = v27;
      v178 = v28;
      sub_233270458(v22, v23);
      sub_2333C3E78(&v159, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2332705EC);
      return 0;
    }
    v158[0] = v22;
    v158[1] = v23;
    v158[2] = v137;
    v158[3] = v25;
    v158[4] = v24;
    v158[5] = v26;
    v158[6] = v138;
    v158[7] = v139;
    v158[8] = v27;
    v158[9] = v28;
    v92 = _s10FinanceKit5OrderV8CustomerV2eeoiySbAE_AEtFZ_0(&v159, v158);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v92 & 1) != 0;
  }
  return result;
}

uint64_t _s10FinanceKit18RawBankConnectDataO23TransactionsRequestBodyV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _BYTE *v26;
  void (*v27)(_BYTE *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE v33[4];
  int v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v33[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v33[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_23361F224(), result = 0, (v20 & 1) != 0))
  {
    v37 = v14;
    v22 = type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
    if ((sub_23361D5E0() & 1) != 0)
    {
      v35 = v7;
      sub_2331686A0((uint64_t)a1 + *(int *)(v22 + 24), (uint64_t)v19, (uint64_t *)&unk_254247DA0);
      sub_2331686A0((uint64_t)a2 + *(int *)(v22 + 24), (uint64_t)v17, (uint64_t *)&unk_254247DA0);
      v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_2331686A0((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_254247DA0);
      sub_2331686A0((uint64_t)v17, v23, (uint64_t *)&unk_254247DA0);
      v36 = v5;
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v24((uint64_t)v10, 1, v4) == 1)
      {
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        if (v24(v23, 1, v4) == 1)
        {
          sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      v25 = (uint64_t)v37;
      sub_2331686A0((uint64_t)v10, (uint64_t)v37, (uint64_t *)&unk_254247DA0);
      if (v24(v23, 1, v4) == 1)
      {
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v25, v4);
LABEL_10:
        sub_233168608((uint64_t)v10, &qword_256042DA0);
        return 0;
      }
      v26 = v35;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v36 + 32))(v35, v23, v4);
      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v34 = sub_23361E108();
      v27 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
      v27(v26, v4);
      sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
      v27(v37, v4);
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      if ((v34 & 1) != 0)
      {
LABEL_12:
        v28 = *(int *)(v22 + 28);
        v29 = (_QWORD *)((char *)a1 + v28);
        v30 = *(_QWORD *)((char *)a1 + v28 + 8);
        v31 = (_QWORD *)((char *)a2 + v28);
        v32 = v31[1];
        if (v30)
        {
          if (v32 && (*v29 == *v31 && v30 == v32 || (sub_23361F224() & 1) != 0))
            return 1;
        }
        else if (!v32)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s10FinanceKit18RawBankConnectDataO20TransactionsResponseV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  if (v2 == 1)
  {
    if (v5 == 1)
      return sub_23322CC8C(v4, v7);
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    sub_2331770E8(v6, v5);
    sub_2331770FC(v3, v2);
    sub_2331770FC(v6, v5);
    return 0;
  }
  if (v2)
  {
    if (v5)
    {
      if (v3 == v6 && v2 == v5)
      {
        sub_2331770E8(*a1, v2);
        swift_bridgeObjectRelease();
        return sub_23322CC8C(v4, v7);
      }
      v9 = sub_23361F224();
      sub_2331770E8(v3, v2);
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
        return sub_23322CC8C(v4, v7);
    }
    else
    {
      sub_2331770E8(*a1, v2);
      swift_bridgeObjectRelease();
    }
  }
  else if (!v5)
  {
    return sub_23322CC8C(v4, v7);
  }
  return 0;
}

uint64_t _s10FinanceKit18RawBankConnectDataO11TransactionV2eeoiySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  _BYTE *v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t *v45;
  int *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v72;
  _QWORD *v73;
  char v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  int *v147;
  _BYTE *v148;
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  unsigned int (*v152)(uint64_t, uint64_t, uint64_t);
  _BYTE *v153;
  _BYTE *v154;
  BOOL v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _BYTE v186[4];
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  int *v207;
  uint64_t *v208;
  _BYTE *v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  _BYTE *v214;
  uint64_t v215;
  _BYTE *v216;
  _BYTE *v217;
  _QWORD *v218;
  _OWORD v219[10];
  _OWORD v220[10];
  _OWORD v221[10];
  _OWORD v222[10];
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  uint64_t v239;
  uint64_t v240;
  _BYTE *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD v254[20];
  _QWORD v255[20];
  uint64_t v256;
  uint64_t v257;
  int v258;
  char v259;
  uint64_t v260;
  _BYTE *v261;
  uint64_t v262;
  uint64_t v263;

  v215 = type metadata accessor for RawBankConnectData.Actions();
  v212 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v209 = &v186[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053E90);
  MEMORY[0x24BDAC7A8](v211);
  v216 = &v186[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v210 = &v186[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v213 = &v186[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v214 = &v186[-v11];
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v186[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v186[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v217 = &v186[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v186[-v23];
  MEMORY[0x24BDAC7A8](v22);
  v26 = &v186[-v25];
  v27 = *a1;
  v28 = a1[1];
  v29 = *a2;
  v30 = a2[1];
  v218 = a2;
  if (v27 != v29 || v28 != v30)
  {
    v31 = sub_23361F224();
    result = 0;
    if ((v31 & 1) == 0)
      return result;
  }
  v33 = v218;
  if (*((unsigned __int8 *)a1 + 16) != *((unsigned __int8 *)v218 + 16))
    return 0;
  v206 = v15;
  v34 = v13;
  v35 = type metadata accessor for RawBankConnectData.Transaction(0);
  v36 = *(int *)(v35 + 24);
  v208 = a1;
  sub_2331686A0((uint64_t)a1 + v36, (uint64_t)v26, (uint64_t *)&unk_254247DA0);
  v207 = (int *)v35;
  v37 = *(int *)(v35 + 24);
  v38 = v34;
  sub_2331686A0((uint64_t)v33 + v37, (uint64_t)v24, (uint64_t *)&unk_254247DA0);
  v39 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_2331686A0((uint64_t)v26, (uint64_t)v18, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v24, v39, (uint64_t *)&unk_254247DA0);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v40((uint64_t)v18, 1, v12) == 1)
  {
    sub_233168608((uint64_t)v24, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
    if (v40(v39, 1, v12) == 1)
    {
      sub_233168608((uint64_t)v18, (uint64_t *)&unk_254247DA0);
      goto LABEL_12;
    }
LABEL_10:
    sub_233168608((uint64_t)v18, &qword_256042DA0);
    return 0;
  }
  v41 = v217;
  sub_2331686A0((uint64_t)v18, (uint64_t)v217, (uint64_t *)&unk_254247DA0);
  if (v40(v39, 1, v12) == 1)
  {
    sub_233168608((uint64_t)v24, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v41, v12);
    goto LABEL_10;
  }
  v42 = (uint64_t)v206;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 32))(v206, v39, v12);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v43 = sub_23361E108();
  v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v44(v42, v12);
  sub_233168608((uint64_t)v24, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
  v44((uint64_t)v41, v12);
  sub_233168608((uint64_t)v18, (uint64_t *)&unk_254247DA0);
  if ((v43 & 1) == 0)
    return 0;
LABEL_12:
  v46 = v207;
  v45 = v208;
  v47 = v218;
  if ((sub_23361D5E0() & 1) == 0)
    return 0;
  v48 = v46[8];
  v49 = *(uint64_t *)((char *)v45 + v48);
  v50 = *(uint64_t *)((char *)v45 + v48 + 8);
  v51 = (_QWORD *)((char *)v47 + v48);
  if (v49 == *v51 && v50 == v51[1] || (v52 = sub_23361F224(), result = 0, (v52 & 1) != 0))
  {
    v53 = v46[9];
    v54 = (uint64_t *)((char *)v45 + v53);
    v55 = *(uint64_t *)((char *)v45 + v53 + 8);
    v56 = (_QWORD *)((char *)v218 + v53);
    v57 = v56[1];
    if (v55)
    {
      if (!v57)
        return 0;
      if (*v54 != *v56 || v55 != v57)
      {
        v58 = sub_23361F224();
        result = 0;
        if ((v58 & 1) == 0)
          return result;
      }
    }
    else if (v57)
    {
      return 0;
    }
    v59 = v46[10];
    v60 = *((unsigned __int8 *)v45 + v59);
    v61 = *((unsigned __int8 *)v218 + v59);
    if (v60)
      v62 = 0x544944455243;
    else
      v62 = 0x5449424544;
    if (v60)
      v63 = 0xE600000000000000;
    else
      v63 = 0xE500000000000000;
    if (v61)
      v64 = 0x544944455243;
    else
      v64 = 0x5449424544;
    if (v61)
      v65 = 0xE600000000000000;
    else
      v65 = 0xE500000000000000;
    if (v62 == v64 && v63 == v65)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v66 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v66 & 1) == 0)
        return result;
    }
    v67 = v46[11];
    v68 = (uint64_t *)((char *)v45 + v67);
    v69 = *(uint64_t *)((char *)v45 + v67 + 8);
    v70 = (_QWORD *)((char *)v218 + v67);
    v71 = v70[1];
    if (v69)
    {
      if (!v71)
        return 0;
      if (*v68 != *v70 || v69 != v71)
      {
        v72 = sub_23361F224();
        result = 0;
        if ((v72 & 1) == 0)
          return result;
      }
    }
    else if (v71)
    {
      return 0;
    }
    v73 = v218;
    sub_2332279C4(*((_BYTE *)v45 + v46[12]));
    if ((v74 & 1) == 0)
      return 0;
    v75 = v46[13];
    v76 = *((unsigned __int8 *)v45 + v75);
    v77 = *((unsigned __int8 *)v73 + v75);
    if (v76 == 16)
    {
      if (v77 != 16)
        return 0;
    }
    else
    {
      if (v77 == 16)
        return 0;
      LOBYTE(v233) = v76;
      LOBYTE(v256) = v77;
      v78 = RawBankConnectData.Transaction.TransactionType.rawValue.getter();
      v80 = v79;
      if (v78 == RawBankConnectData.Transaction.TransactionType.rawValue.getter() && v80 == v81)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v82 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v82 & 1) == 0)
          return result;
      }
    }
    v83 = v46[14];
    v84 = (uint64_t *)((char *)v45 + v83);
    LODWORD(v206) = *(_DWORD *)((char *)v45 + v83 + 16);
    v85 = *(uint64_t *)((char *)v45 + v83 + 24);
    v204 = *(uint64_t *)((char *)v45 + v83 + 32);
    v205 = v85;
    LODWORD(v203) = *(_DWORD *)((char *)v45 + v83 + 40);
    LODWORD(v202) = *((unsigned __int8 *)v45 + v83 + 44);
    v86 = *(uint64_t *)((char *)v45 + v83 + 48);
    v87 = *(uint64_t *)((char *)v45 + v83 + 56);
    v88 = *(uint64_t *)((char *)v45 + v83 + 72);
    v200 = *(_BYTE **)((char *)v45 + v83 + 64);
    v201 = v86;
    v89 = (char *)v218 + v83;
    v90 = *((unsigned int *)v89 + 4);
    v91 = *((_QWORD *)v89 + 3);
    v198 = *((_QWORD *)v89 + 4);
    v199 = v91;
    LODWORD(v197) = *((_DWORD *)v89 + 10);
    LODWORD(v196) = v89[44];
    v92 = *((_QWORD *)v89 + 6);
    v93 = (_BYTE *)*((_QWORD *)v89 + 7);
    v94 = *((_QWORD *)v89 + 9);
    v194 = *((_QWORD *)v89 + 8);
    v195 = (_BYTE *)v92;
    v96 = *v84;
    v95 = v84[1];
    v97 = *(_QWORD *)v89;
    v98 = *((_QWORD *)v89 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v217 = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((MEMORY[0x234932E38](v96, v95, v206, v97, v98, v90) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v233 = v205;
    v234 = v204;
    LODWORD(v235) = v203;
    BYTE4(v235) = v202;
    v236 = v201;
    v237 = v87;
    v238 = v200;
    v239 = v88;
    v256 = v199;
    v257 = v198;
    v258 = v197;
    v259 = v196;
    v260 = (uint64_t)v195;
    v261 = v217;
    v262 = v194;
    v263 = v94;
    v99 = _s10FinanceKit18RawBankConnectDataO8CurrencyV2eeoiySbAE_AEtFZ_0((uint64_t)&v233, (uint64_t)&v256);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v99 & 1) == 0)
      return 0;
    v100 = v207[15];
    v101 = (uint64_t)v208 + v100;
    v103 = *(uint64_t *)((char *)v208 + v100);
    v102 = *(uint64_t *)((char *)v208 + v100 + 8);
    v105 = *(uint64_t *)((char *)v208 + v100 + 16);
    v104 = *(uint64_t *)((char *)v208 + v100 + 24);
    v106 = *(uint64_t *)((char *)v208 + v100 + 32);
    v217 = *(_BYTE **)((char *)v208 + v100 + 40);
    v107 = *(uint64_t *)((char *)v208 + v100 + 48);
    v108 = *(uint64_t *)((char *)v208 + v100 + 56);
    v109 = *(_BYTE **)((char *)v208 + v100 + 64);
    v110 = *(uint64_t *)((char *)v208 + v100 + 72);
    v111 = (_QWORD *)((char *)v218 + v100);
    v113 = *v111;
    v112 = v111[1];
    v115 = v111[2];
    v114 = v111[3];
    v116 = v111[4];
    v117 = v111[5];
    v118 = v111[6];
    v119 = v111[7];
    v121 = v111[8];
    v120 = v111[9];
    if (v108)
    {
      v200 = (_BYTE *)v111[3];
      v201 = v104;
      v204 = v116;
      v205 = v117;
      v206 = (_BYTE *)v118;
      v202 = v106;
      v203 = v107;
      v198 = v103;
      v199 = v105;
      v197 = v102;
      if (v119)
      {
        v187 = *(_DWORD *)(v101 + 40);
        v195 = (_BYTE *)v119;
        v196 = v120;
        v122 = v102;
        v123 = v104;
        v190 = v121;
        v191 = v113;
        v188 = v112;
        v189 = v115;
        v124 = v107;
        v125 = v109;
        sub_23323F58C(v103, v102, v105, v104, v106, (uint64_t)v217, v107, v108);
        v193 = v110;
        v192 = v125;
        v126 = v123;
        v127 = v106;
        v128 = v124;
        v129 = v188;
        v130 = v189;
        v132 = v190;
        v131 = v191;
        v194 = v108;
        sub_23323F58C(v103, v122, v105, v126, v127, (uint64_t)v217, v128, v108);
        v133 = (uint64_t)v200;
        v134 = v204;
        sub_23323F58C(v131, v129, v130, (uint64_t)v200, v204, v205, (uint64_t)v206, (uint64_t)v195);
        if ((MEMORY[0x234932E38](v103, v122, v105, v131, v129, v130) & 1) == 0)
        {
          sub_2331B3078(v191, v129, v130, v133, v134, v205, (uint64_t)v206, (uint64_t)v195);
          v145 = v194;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2331B3078(v198, v197, v199, v201, v202, (uint64_t)v217, v203, v145);
          return 0;
        }
        v233 = v201;
        v234 = v202;
        LODWORD(v235) = v187;
        BYTE4(v235) = BYTE4(v217) & 1;
        v236 = v203;
        v135 = (uint64_t)v195;
        v237 = v194;
        v238 = v192;
        v239 = v193;
        v136 = v133;
        v256 = v133;
        v257 = v134;
        v137 = v205;
        v138 = (uint64_t)v206;
        v258 = v205;
        v259 = BYTE4(v205) & 1;
        v260 = (uint64_t)v206;
        v261 = v195;
        v262 = v132;
        v263 = v196;
        v187 = _s10FinanceKit18RawBankConnectDataO8CurrencyV2eeoiySbAE_AEtFZ_0((uint64_t)&v233, (uint64_t)&v256);
        sub_2331B3078(v191, v129, v130, v136, v204, v137, v138, v135);
        v139 = v194;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2331B3078(v198, v197, v199, v201, v202, (uint64_t)v217, v203, v139);
        if ((v187 & 1) != 0)
        {
LABEL_66:
          v140 = v207;
          sub_233270324((uint64_t)v208 + v207[16], (uint64_t)v254);
          sub_233270324((uint64_t)v218 + v140[16], (uint64_t)v255);
          sub_233270324((uint64_t)v254, (uint64_t)&v256);
          if (sub_23327036C((uint64_t)&v256) == 1)
          {
            sub_233270324((uint64_t)v255, (uint64_t)&v233);
            if (sub_23327036C((uint64_t)&v233) == 1)
              goto LABEL_76;
          }
          else
          {
            sub_233270324((uint64_t)v254, (uint64_t)&v223);
            sub_233270324((uint64_t)v255, (uint64_t)&v233);
            if (sub_23327036C((uint64_t)&v233) != 1)
            {
              sub_233270324((uint64_t)v255, (uint64_t)v220);
              v219[6] = v220[6];
              v219[7] = v220[7];
              v219[8] = v220[8];
              v219[9] = v220[9];
              v219[2] = v220[2];
              v219[3] = v220[3];
              v219[4] = v220[4];
              v219[5] = v220[5];
              v219[0] = v220[0];
              v219[1] = v220[1];
              sub_233270324((uint64_t)v254, (uint64_t)v221);
              sub_2335038E8(v254, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23350394C);
              sub_233270390((uint64_t)v221);
              v146 = _s10FinanceKit18RawBankConnectDataO11TransactionV19MerchantInformationV2eeoiySbAG_AGtFZ_0(&v223, v219);
              v222[6] = v229;
              v222[7] = v230;
              v222[8] = v231;
              v222[9] = v232;
              v222[2] = v225;
              v222[3] = v226;
              v222[4] = v227;
              v222[5] = v228;
              v222[0] = v223;
              v222[1] = v224;
              sub_23349116C((uint64_t)v222);
              sub_2335038E8(v254, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233270518);
              if (!v146)
                return 0;
LABEL_76:
              v147 = v207;
              v148 = v214;
              sub_2331686A0((uint64_t)v208 + v207[17], (uint64_t)v214, &qword_2560436D0);
              v149 = v213;
              sub_2331686A0((uint64_t)v218 + v147[17], (uint64_t)v213, &qword_2560436D0);
              v150 = v216;
              v151 = (uint64_t)&v216[*(int *)(v211 + 48)];
              sub_2331686A0((uint64_t)v148, (uint64_t)v216, &qword_2560436D0);
              sub_2331686A0((uint64_t)v149, v151, &qword_2560436D0);
              v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v212 + 48);
              if (v152((uint64_t)v150, 1, v215) == 1)
              {
                sub_233168608((uint64_t)v213, &qword_2560436D0);
                sub_233168608((uint64_t)v214, &qword_2560436D0);
                if (v152(v151, 1, v215) == 1)
                {
                  sub_233168608((uint64_t)v216, &qword_2560436D0);
                  goto LABEL_83;
                }
              }
              else
              {
                sub_2331686A0((uint64_t)v216, (uint64_t)v210, &qword_2560436D0);
                if (v152(v151, 1, v215) != 1)
                {
                  v153 = v209;
                  sub_233511AB4(v151, (uint64_t)v209);
                  v154 = v210;
                  v155 = _s10FinanceKit18RawBankConnectDataO7ActionsV2eeoiySbAE_AEtFZ_0((uint64_t)v210, (uint64_t)v153);
                  sub_233168500((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
                  sub_233168608((uint64_t)v213, &qword_2560436D0);
                  sub_233168608((uint64_t)v214, &qword_2560436D0);
                  sub_233168500((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
                  sub_233168608((uint64_t)v216, &qword_2560436D0);
                  if (!v155)
                    return 0;
LABEL_83:
                  v156 = v207[18];
                  v157 = (uint64_t *)((char *)v208 + v156);
                  v158 = *(uint64_t *)((char *)v208 + v156 + 8);
                  v159 = (_QWORD *)((char *)v218 + v156);
                  v160 = v159[1];
                  if (v158)
                  {
                    if (!v160 || (*v157 != *v159 || v158 != v160) && (sub_23361F224() & 1) == 0)
                      return 0;
                  }
                  else if (v160)
                  {
                    return 0;
                  }
                  v161 = v207[19];
                  v162 = (uint64_t *)((char *)v208 + v161);
                  v163 = *(uint64_t *)((char *)v208 + v161 + 8);
                  v164 = (_QWORD *)((char *)v218 + v161);
                  v165 = v164[1];
                  if (v163)
                  {
                    if (!v165 || (*v162 != *v164 || v163 != v165) && (sub_23361F224() & 1) == 0)
                      return 0;
                  }
                  else if (v165)
                  {
                    return 0;
                  }
                  v166 = v207[20];
                  v167 = *(uint64_t *)((char *)v208 + v166);
                  v168 = *(uint64_t *)((char *)v208 + v166 + 8);
                  v169 = *(uint64_t *)((char *)v208 + v166 + 16);
                  v170 = *(uint64_t *)((char *)v208 + v166 + 24);
                  v171 = (_QWORD *)((char *)v218 + v166);
                  v173 = *v171;
                  v172 = v171[1];
                  v174 = v171[2];
                  v175 = v171[3];
                  if (v168)
                  {
                    if (v172)
                    {
                      if ((v167 != v173 || v168 != v172) && (sub_23361F224() & 1) == 0
                        || (v169 != v174 || v170 != v175) && (sub_23361F224() & 1) == 0)
                      {
                        return 0;
                      }
LABEL_107:
                      v176 = v207[21];
                      v177 = *(uint64_t *)((char *)v208 + v176);
                      v178 = *(uint64_t *)((char *)v208 + v176 + 8);
                      v179 = *(uint64_t *)((char *)v208 + v176 + 16);
                      v180 = *(uint64_t *)((char *)v208 + v176 + 24);
                      v181 = (_QWORD *)((char *)v218 + v176);
                      v182 = *v181;
                      v183 = v181[1];
                      v185 = v181[2];
                      v184 = v181[3];
                      if (v178)
                      {
                        if (v183)
                        {
                          if ((v177 != v182 || v178 != v183) && (sub_23361F224() & 1) == 0)
                            return 0;
                          if (v180)
                            return v184 && (v179 == v185 && v180 == v184 || (sub_23361F224() & 1) != 0);
                          return !v184;
                        }
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else if (!v183)
                      {
                        return 1;
                      }
                      sub_233503D94(v182, v183);
                      sub_2332DCF70(v177, v178);
                      sub_2332DCF70(v182, v183);
                      return 0;
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else if (!v172)
                  {
                    goto LABEL_107;
                  }
                  sub_2332DCF40(v173, v172);
                  sub_2332DCF70(v167, v168);
                  sub_2332DCF70(v173, v172);
                  return 0;
                }
                sub_233168608((uint64_t)v213, &qword_2560436D0);
                sub_233168608((uint64_t)v214, &qword_2560436D0);
                sub_233168500((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
              }
              sub_233168608((uint64_t)v216, &qword_256053E90);
              return 0;
            }
            v221[6] = v229;
            v221[7] = v230;
            v221[8] = v231;
            v221[9] = v232;
            v221[2] = v225;
            v221[3] = v226;
            v221[4] = v227;
            v221[5] = v228;
            v221[0] = v223;
            v221[1] = v224;
            sub_233270324((uint64_t)v254, (uint64_t)v222);
            sub_233270390((uint64_t)v222);
            sub_233270390((uint64_t)v222);
            sub_23349116C((uint64_t)v221);
          }
          sub_233270324((uint64_t)v254, (uint64_t)&v233);
          sub_233270324((uint64_t)v255, (uint64_t)&v253);
          sub_2335038E8(v255, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23350394C);
          sub_2335119B0((uint64_t)&v233);
        }
        return 0;
      }
      v141 = v110;
      v142 = v112;
      v143 = v109;
      v144 = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115 = v144;
      v109 = v143;
      v112 = v142;
      v110 = v141;
      v102 = v197;
      v103 = v198;
      v105 = v199;
      v114 = (uint64_t)v200;
      v104 = v201;
      v106 = v202;
      v107 = v203;
      v116 = v204;
      v117 = v205;
      v118 = (uint64_t)v206;
    }
    else if (!v119)
    {
      goto LABEL_66;
    }
    v233 = v103;
    v234 = v102;
    v235 = v105;
    v236 = v104;
    v237 = v106;
    v238 = v217;
    v239 = v107;
    v240 = v108;
    v241 = v109;
    v242 = v110;
    v243 = v113;
    v244 = v112;
    v245 = v115;
    v246 = v114;
    v247 = v116;
    v248 = v117;
    v249 = v118;
    v250 = v119;
    v251 = v121;
    v252 = v120;
    sub_23323F58C(v113, v112, v115, v114, v116, v117, v118, v119);
    sub_2333C3E78(&v233, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2331B3078);
    return 0;
  }
  return result;
}

unint64_t sub_23350ADB4()
{
  unint64_t result;

  result = qword_256053AA0;
  if (!qword_256053AA0)
  {
    result = MEMORY[0x234934494](&unk_233657044, &_s11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053AA0);
  }
  return result;
}

unint64_t sub_23350ADF8()
{
  unint64_t result;

  result = qword_256053AA8;
  if (!qword_256053AA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.CreditDebitIndicator, &type metadata for RawBankConnectData.CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_256053AA8);
  }
  return result;
}

unint64_t sub_23350AE3C()
{
  unint64_t result;

  result = qword_256053AB0;
  if (!qword_256053AB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.Status, &type metadata for RawBankConnectData.Transaction.Status);
    atomic_store(result, (unint64_t *)&qword_256053AB0);
  }
  return result;
}

unint64_t sub_23350AE80()
{
  unint64_t result;

  result = qword_256053AB8;
  if (!qword_256053AB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.TransactionType, &type metadata for RawBankConnectData.Transaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053AB8);
  }
  return result;
}

unint64_t sub_23350AEC4()
{
  unint64_t result;

  result = qword_256053AC0;
  if (!qword_256053AC0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.MonetaryAmount, &type metadata for RawBankConnectData.MonetaryAmount);
    atomic_store(result, (unint64_t *)&qword_256053AC0);
  }
  return result;
}

unint64_t sub_23350AF08()
{
  unint64_t result;

  result = qword_256053AC8;
  if (!qword_256053AC8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.MerchantInformation, &type metadata for RawBankConnectData.Transaction.MerchantInformation);
    atomic_store(result, (unint64_t *)&qword_256053AC8);
  }
  return result;
}

unint64_t sub_23350AF4C()
{
  unint64_t result;

  result = qword_256053AD8;
  if (!qword_256053AD8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.BankTransactionCode, &type metadata for RawBankConnectData.Transaction.BankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256053AD8);
  }
  return result;
}

unint64_t sub_23350AF90()
{
  unint64_t result;

  result = qword_256053AE0;
  if (!qword_256053AE0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.ProprietaryBankTransactionCode, &type metadata for RawBankConnectData.Transaction.ProprietaryBankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256053AE0);
  }
  return result;
}

unint64_t sub_23350AFD4()
{
  unint64_t result;

  result = qword_256053AF0;
  if (!qword_256053AF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.CreditDebitIndicator, &type metadata for RawBankConnectData.CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_256053AF0);
  }
  return result;
}

unint64_t sub_23350B018()
{
  unint64_t result;

  result = qword_256053AF8;
  if (!qword_256053AF8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.Status, &type metadata for RawBankConnectData.Transaction.Status);
    atomic_store(result, (unint64_t *)&qword_256053AF8);
  }
  return result;
}

unint64_t sub_23350B05C()
{
  unint64_t result;

  result = qword_256053B00;
  if (!qword_256053B00)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.TransactionType, &type metadata for RawBankConnectData.Transaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053B00);
  }
  return result;
}

unint64_t sub_23350B0A0()
{
  unint64_t result;

  result = qword_256053B08;
  if (!qword_256053B08)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.MonetaryAmount, &type metadata for RawBankConnectData.MonetaryAmount);
    atomic_store(result, (unint64_t *)&qword_256053B08);
  }
  return result;
}

unint64_t sub_23350B0E4()
{
  unint64_t result;

  result = qword_256053B10;
  if (!qword_256053B10)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.MerchantInformation, &type metadata for RawBankConnectData.Transaction.MerchantInformation);
    atomic_store(result, (unint64_t *)&qword_256053B10);
  }
  return result;
}

unint64_t sub_23350B128()
{
  unint64_t result;

  result = qword_256053B20;
  if (!qword_256053B20)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.BankTransactionCode, &type metadata for RawBankConnectData.Transaction.BankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256053B20);
  }
  return result;
}

unint64_t sub_23350B16C()
{
  unint64_t result;

  result = qword_256053B28;
  if (!qword_256053B28)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.ProprietaryBankTransactionCode, &type metadata for RawBankConnectData.Transaction.ProprietaryBankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256053B28);
  }
  return result;
}

uint64_t sub_23350B1B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023367A020 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6954646574736F70 && a2 == 0xEF706D617473656DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023367A040 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A060 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A7E0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F6D416C61636F6CLL && a2 == 0xEB00000000746E75 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x416E676965726F66 && a2 == 0xED0000746E756F6DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A080 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000064 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A0A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A0C0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367A0E0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

uint64_t _s10FinanceKit18RawBankConnectDataO11TransactionV6StatusO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_23350B944()
{
  unint64_t result;

  result = qword_256053B38;
  if (!qword_256053B38)
  {
    result = MEMORY[0x234934494](&unk_233656FF4, &_s11TransactionV19MerchantInformationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053B38);
  }
  return result;
}

unint64_t sub_23350B988()
{
  unint64_t result;

  result = qword_256053B40;
  if (!qword_256053B40)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.MerchantAddress, &type metadata for RawBankConnectData.Transaction.MerchantAddress);
    atomic_store(result, (unint64_t *)&qword_256053B40);
  }
  return result;
}

unint64_t sub_23350B9CC()
{
  unint64_t result;

  result = qword_256053B50;
  if (!qword_256053B50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.MerchantAddress, &type metadata for RawBankConnectData.Transaction.MerchantAddress);
    atomic_store(result, (unint64_t *)&qword_256053B50);
  }
  return result;
}

unint64_t sub_23350BA10()
{
  unint64_t result;

  result = qword_256053B60;
  if (!qword_256053B60)
  {
    result = MEMORY[0x234934494](&unk_233656FA4, &_s11TransactionV15MerchantAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053B60);
  }
  return result;
}

unint64_t sub_23350BA54()
{
  unint64_t result;

  result = qword_256053B78;
  if (!qword_256053B78)
  {
    result = MEMORY[0x234934494](&unk_233656F54, &_s11TransactionV19BankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053B78);
  }
  return result;
}

unint64_t sub_23350BA98()
{
  unint64_t result;

  result = qword_256053B90;
  if (!qword_256053B90)
  {
    result = MEMORY[0x234934494](&unk_233656F04, &_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053B90);
  }
  return result;
}

unint64_t sub_23350BADC()
{
  unint64_t result;

  result = qword_256053BA8;
  if (!qword_256053BA8)
  {
    result = MEMORY[0x234934494](&unk_233656EB4, &_s20TransactionsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053BA8);
  }
  return result;
}

unint64_t sub_23350BB20()
{
  unint64_t result;

  result = qword_256053BB0;
  if (!qword_256053BB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.TransactionsResponse.PageMetadata, &type metadata for RawBankConnectData.TransactionsResponse.PageMetadata);
    atomic_store(result, (unint64_t *)&qword_256053BB0);
  }
  return result;
}

unint64_t sub_23350BB64()
{
  unint64_t result;

  result = qword_256053BD0;
  if (!qword_256053BD0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.TransactionsResponse.PageMetadata, &type metadata for RawBankConnectData.TransactionsResponse.PageMetadata);
    atomic_store(result, (unint64_t *)&qword_256053BD0);
  }
  return result;
}

uint64_t sub_23350BBA8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256053BB8);
    v10 = sub_233167C58(a2, type metadata accessor for RawBankConnectData.Transaction, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23350BC2C()
{
  unint64_t result;

  result = qword_256053BF0;
  if (!qword_256053BF0)
  {
    result = MEMORY[0x234934494](&unk_233656E64, &_s20TransactionsResponseV12PageMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053BF0);
  }
  return result;
}

uint64_t type metadata accessor for RawBankConnectData.TransactionsRequestBody(uint64_t a1)
{
  return sub_233177414(a1, qword_256053D80);
}

unint64_t sub_23350BC84()
{
  unint64_t result;

  result = qword_256053C08;
  if (!qword_256053C08)
  {
    result = MEMORY[0x234934494](&unk_233656E14, &_s23TransactionsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053C08);
  }
  return result;
}

unint64_t sub_23350BCCC()
{
  unint64_t result;

  result = qword_256053C18;
  if (!qword_256053C18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.Status, &type metadata for RawBankConnectData.Transaction.Status);
    atomic_store(result, (unint64_t *)&qword_256053C18);
  }
  return result;
}

uint64_t sub_23350BD10()
{
  return sub_23318BD18(&qword_256053C20, &qword_256053C28);
}

unint64_t sub_23350BD38()
{
  unint64_t result;

  result = qword_256053C30;
  if (!qword_256053C30)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.TransactionType, &type metadata for RawBankConnectData.Transaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053C30);
  }
  return result;
}

uint64_t sub_23350BD7C()
{
  return sub_23318BD18(&qword_256053C38, &qword_256053C40);
}

uint64_t sub_23350BDA0()
{
  return sub_233167C58(&qword_256053C48, type metadata accessor for RawBankConnectData.TransactionsRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.TransactionsRequestBody);
}

char *_s11TransactionVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v109;
  uint64_t v110;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(&v4[a3[7]], (uint64_t)a2 + a3[7], v11);
    }
    else
    {
      v16 = *(void (**)(void *, char *, uint64_t))(v12 + 16);
      v16(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      v16(&v4[a3[7]], (char *)a2 + a3[7], v11);
    }
    v17 = a3[8];
    v18 = a3[9];
    v19 = &v4[v17];
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = &v4[v18];
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = a3[11];
    v4[a3[10]] = *((_BYTE *)a2 + a3[10]);
    v26 = &v4[v25];
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *(_QWORD *)v26 = *v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = a3[13];
    v4[a3[12]] = *((_BYTE *)a2 + a3[12]);
    v4[v29] = *((_BYTE *)a2 + v29);
    v30 = a3[14];
    v31 = a3[15];
    v32 = &v4[v30];
    v33 = (uint64_t)a2 + v30;
    *((_DWORD *)v32 + 4) = *(_DWORD *)(v33 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *(_QWORD *)(v32 + 37) = *(_QWORD *)(v33 + 37);
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    v34 = *(_QWORD *)(v33 + 56);
    *((_QWORD *)v32 + 6) = *(_QWORD *)(v33 + 48);
    *((_QWORD *)v32 + 7) = v34;
    v35 = *(_QWORD *)(v33 + 72);
    *((_QWORD *)v32 + 8) = *(_QWORD *)(v33 + 64);
    *((_QWORD *)v32 + 9) = v35;
    v36 = &v4[v31];
    v37 = (uint64_t)a2 + v31;
    v38 = *(uint64_t *)((char *)a2 + v31 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_DWORD *)v36 + 4) = *(_DWORD *)(v37 + 16);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
      *(_QWORD *)(v36 + 37) = *(_QWORD *)(v37 + 37);
      *((_QWORD *)v36 + 6) = *(_QWORD *)(v37 + 48);
      *((_QWORD *)v36 + 7) = v38;
      v39 = *(_QWORD *)(v37 + 72);
      *((_QWORD *)v36 + 8) = *(_QWORD *)(v37 + 64);
      *((_QWORD *)v36 + 9) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v40 = *(_OWORD *)(v37 + 48);
      *((_OWORD *)v36 + 2) = *(_OWORD *)(v37 + 32);
      *((_OWORD *)v36 + 3) = v40;
      *((_OWORD *)v36 + 4) = *(_OWORD *)(v37 + 64);
      v41 = *(_OWORD *)(v37 + 16);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v41;
    }
    v42 = a3[16];
    v43 = &v4[v42];
    v44 = (uint64_t)a2 + v42;
    v45 = *(uint64_t *)((char *)a2 + v42 + 8);
    if (v45 == 1)
    {
      v46 = *(_OWORD *)(v44 + 112);
      *((_OWORD *)v43 + 6) = *(_OWORD *)(v44 + 96);
      *((_OWORD *)v43 + 7) = v46;
      v47 = *(_OWORD *)(v44 + 144);
      *((_OWORD *)v43 + 8) = *(_OWORD *)(v44 + 128);
      *((_OWORD *)v43 + 9) = v47;
      v48 = *(_OWORD *)(v44 + 48);
      *((_OWORD *)v43 + 2) = *(_OWORD *)(v44 + 32);
      *((_OWORD *)v43 + 3) = v48;
      v49 = *(_OWORD *)(v44 + 80);
      *((_OWORD *)v43 + 4) = *(_OWORD *)(v44 + 64);
      *((_OWORD *)v43 + 5) = v49;
      v50 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v50;
    }
    else
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = v45;
      v51 = *(_QWORD *)(v44 + 24);
      *((_QWORD *)v43 + 2) = *(_QWORD *)(v44 + 16);
      *((_QWORD *)v43 + 3) = v51;
      v52 = *(_QWORD *)(v44 + 40);
      *((_QWORD *)v43 + 4) = *(_QWORD *)(v44 + 32);
      *((_QWORD *)v43 + 5) = v52;
      v53 = *(_QWORD *)(v44 + 56);
      *((_QWORD *)v43 + 6) = *(_QWORD *)(v44 + 48);
      *((_QWORD *)v43 + 7) = v53;
      v54 = *(_QWORD *)(v44 + 72);
      *((_QWORD *)v43 + 8) = *(_QWORD *)(v44 + 64);
      *((_QWORD *)v43 + 9) = v54;
      v55 = *(_QWORD *)(v44 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 == 1)
      {
        v56 = *(_OWORD *)(v44 + 128);
        *((_OWORD *)v43 + 7) = *(_OWORD *)(v44 + 112);
        *((_OWORD *)v43 + 8) = v56;
        *((_OWORD *)v43 + 9) = *(_OWORD *)(v44 + 144);
        v57 = *(_OWORD *)(v44 + 96);
        *((_OWORD *)v43 + 5) = *(_OWORD *)(v44 + 80);
        *((_OWORD *)v43 + 6) = v57;
      }
      else
      {
        *((_QWORD *)v43 + 10) = *(_QWORD *)(v44 + 80);
        *((_QWORD *)v43 + 11) = v55;
        v58 = *(_QWORD *)(v44 + 104);
        *((_QWORD *)v43 + 12) = *(_QWORD *)(v44 + 96);
        *((_QWORD *)v43 + 13) = v58;
        v59 = *(_QWORD *)(v44 + 120);
        *((_QWORD *)v43 + 14) = *(_QWORD *)(v44 + 112);
        *((_QWORD *)v43 + 15) = v59;
        v60 = *(_QWORD *)(v44 + 136);
        *((_QWORD *)v43 + 16) = *(_QWORD *)(v44 + 128);
        *((_QWORD *)v43 + 17) = v60;
        v61 = *(_QWORD *)(v44 + 152);
        *((_QWORD *)v43 + 18) = *(_QWORD *)(v44 + 144);
        *((_QWORD *)v43 + 19) = v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v62 = a3[17];
    v63 = &v4[v62];
    v64 = (char *)a2 + v62;
    v65 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v66 = *((_QWORD *)v65 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v66 + 48))(v64, 1, v65))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      v109 = v66;
      v68 = sub_23361D340();
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v110 = v69;
      if (v70(v64, 1, v68))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v63, v64, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v63, 0, 1, v68);
      }
      v72 = v65[5];
      v73 = &v63[v72];
      v74 = &v64[v72];
      if (v70(&v64[v72], 1, v68))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v73, v74, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v73, 0, 1, v68);
      }
      v76 = v65[6];
      v77 = &v63[v76];
      v78 = &v64[v76];
      if (v70(&v64[v76], 1, v68))
      {
        v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v77, v78, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v77, 0, 1, v68);
      }
      v80 = v65[7];
      v81 = &v63[v80];
      v82 = &v64[v80];
      if (v70(&v64[v80], 1, v68))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v81, v82, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v81, 0, 1, v68);
      }
      v84 = v65[8];
      v85 = &v63[v84];
      v86 = &v64[v84];
      if (v70(v86, 1, v68))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v85, v86, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v85, 0, 1, v68);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v109 + 56))(v63, 0, 1, v65);
    }
    v88 = a3[18];
    v89 = a3[19];
    v90 = &v4[v88];
    v91 = (uint64_t *)((char *)a2 + v88);
    v92 = v91[1];
    *(_QWORD *)v90 = *v91;
    *((_QWORD *)v90 + 1) = v92;
    v93 = &v4[v89];
    v94 = (uint64_t *)((char *)a2 + v89);
    v95 = v94[1];
    *(_QWORD *)v93 = *v94;
    *((_QWORD *)v93 + 1) = v95;
    v96 = a3[20];
    v97 = &v4[v96];
    v98 = (uint64_t *)((char *)a2 + v96);
    v99 = *(uint64_t *)((char *)a2 + v96 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v99)
    {
      *(_QWORD *)v97 = *v98;
      *((_QWORD *)v97 + 1) = v99;
      v100 = v98[3];
      *((_QWORD *)v97 + 2) = v98[2];
      *((_QWORD *)v97 + 3) = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v101 = *((_OWORD *)v98 + 1);
      *(_OWORD *)v97 = *(_OWORD *)v98;
      *((_OWORD *)v97 + 1) = v101;
    }
    v102 = a3[21];
    v103 = &v4[v102];
    v104 = (uint64_t *)((char *)a2 + v102);
    v105 = v104[1];
    if (v105)
    {
      *(_QWORD *)v103 = *v104;
      *((_QWORD *)v103 + 1) = v105;
      v106 = v104[3];
      *((_QWORD *)v103 + 2) = v104[2];
      *((_QWORD *)v103 + 3) = v106;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v107 = *((_OWORD *)v104 + 1);
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v107;
    }
  }
  return v4;
}

uint64_t _s11TransactionVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v7)
    v8(v4, v5);
  v8(a1 + a2[7], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[16];
  if (*(_QWORD *)(v9 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v10 = a1 + a2[17];
  v11 = (int *)type metadata accessor for RawBankConnectData.Actions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v10, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
    v15 = v10 + v11[5];
    if (!v14(v15, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
    v16 = v10 + v11[6];
    if (!v14(v16, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    v17 = v10 + v11[7];
    if (!v14(v17, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
    v18 = v10 + v11[8];
    if (!v14(v18, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[20] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[21] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11TransactionVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v107;
  uint64_t v108;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1 + a3[7], a2 + a3[7], v10);
  }
  else
  {
    v14 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
    v14(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    v14((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  }
  v15 = a3[8];
  v16 = a3[9];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[14];
  v29 = a3[15];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)(v30 + 16) = *(_DWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 37) = *(_QWORD *)(v31 + 37);
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  v32 = *(_QWORD *)(v31 + 56);
  *(_QWORD *)(v30 + 48) = *(_QWORD *)(v31 + 48);
  *(_QWORD *)(v30 + 56) = v32;
  v33 = *(_QWORD *)(v31 + 72);
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
  *(_QWORD *)(v30 + 72) = v33;
  v34 = a1 + v29;
  v35 = a2 + v29;
  v36 = *(_QWORD *)(a2 + v29 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_DWORD *)(v34 + 16) = *(_DWORD *)(v35 + 16);
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    *(_QWORD *)(v34 + 37) = *(_QWORD *)(v35 + 37);
    *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
    *(_QWORD *)(v34 + 56) = v36;
    v37 = *(_QWORD *)(v35 + 72);
    *(_QWORD *)(v34 + 64) = *(_QWORD *)(v35 + 64);
    *(_QWORD *)(v34 + 72) = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v38 = *(_OWORD *)(v35 + 48);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    *(_OWORD *)(v34 + 48) = v38;
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
    v39 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v39;
  }
  v40 = a3[16];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  if (v43 == 1)
  {
    v44 = *(_OWORD *)(v42 + 112);
    *(_OWORD *)(v41 + 96) = *(_OWORD *)(v42 + 96);
    *(_OWORD *)(v41 + 112) = v44;
    v45 = *(_OWORD *)(v42 + 144);
    *(_OWORD *)(v41 + 128) = *(_OWORD *)(v42 + 128);
    *(_OWORD *)(v41 + 144) = v45;
    v46 = *(_OWORD *)(v42 + 48);
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
    *(_OWORD *)(v41 + 48) = v46;
    v47 = *(_OWORD *)(v42 + 80);
    *(_OWORD *)(v41 + 64) = *(_OWORD *)(v42 + 64);
    *(_OWORD *)(v41 + 80) = v47;
    v48 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v48;
  }
  else
  {
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
    v49 = *(_QWORD *)(v42 + 24);
    *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
    *(_QWORD *)(v41 + 24) = v49;
    v50 = *(_QWORD *)(v42 + 40);
    *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
    *(_QWORD *)(v41 + 40) = v50;
    v51 = *(_QWORD *)(v42 + 56);
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
    *(_QWORD *)(v41 + 56) = v51;
    v52 = *(_QWORD *)(v42 + 72);
    *(_QWORD *)(v41 + 64) = *(_QWORD *)(v42 + 64);
    *(_QWORD *)(v41 + 72) = v52;
    v53 = *(_QWORD *)(v42 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53 == 1)
    {
      v54 = *(_OWORD *)(v42 + 128);
      *(_OWORD *)(v41 + 112) = *(_OWORD *)(v42 + 112);
      *(_OWORD *)(v41 + 128) = v54;
      *(_OWORD *)(v41 + 144) = *(_OWORD *)(v42 + 144);
      v55 = *(_OWORD *)(v42 + 96);
      *(_OWORD *)(v41 + 80) = *(_OWORD *)(v42 + 80);
      *(_OWORD *)(v41 + 96) = v55;
    }
    else
    {
      *(_QWORD *)(v41 + 80) = *(_QWORD *)(v42 + 80);
      *(_QWORD *)(v41 + 88) = v53;
      v56 = *(_QWORD *)(v42 + 104);
      *(_QWORD *)(v41 + 96) = *(_QWORD *)(v42 + 96);
      *(_QWORD *)(v41 + 104) = v56;
      v57 = *(_QWORD *)(v42 + 120);
      *(_QWORD *)(v41 + 112) = *(_QWORD *)(v42 + 112);
      *(_QWORD *)(v41 + 120) = v57;
      v58 = *(_QWORD *)(v42 + 136);
      *(_QWORD *)(v41 + 128) = *(_QWORD *)(v42 + 128);
      *(_QWORD *)(v41 + 136) = v58;
      v59 = *(_QWORD *)(v42 + 152);
      *(_QWORD *)(v41 + 144) = *(_QWORD *)(v42 + 144);
      *(_QWORD *)(v41 + 152) = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v60 = a3[17];
  v61 = (char *)(a1 + v60);
  v62 = (char *)(a2 + v60);
  v63 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v64 = *((_QWORD *)v63 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v64 + 48))(v62, 1, v63))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v107 = v64;
    v66 = sub_23361D340();
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    v108 = v67;
    if (v68(v62, 1, v66))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v61, v62, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v61, 0, 1, v66);
    }
    v70 = v63[5];
    v71 = &v61[v70];
    v72 = &v62[v70];
    if (v68(&v62[v70], 1, v66))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v71, v72, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v71, 0, 1, v66);
    }
    v74 = v63[6];
    v75 = &v61[v74];
    v76 = &v62[v74];
    if (v68(&v62[v74], 1, v66))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v75, v76, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v75, 0, 1, v66);
    }
    v78 = v63[7];
    v79 = &v61[v78];
    v80 = &v62[v78];
    if (v68(&v62[v78], 1, v66))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v79, v80, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v79, 0, 1, v66);
    }
    v82 = v63[8];
    v83 = &v61[v82];
    v84 = &v62[v82];
    if (v68(v84, 1, v66))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v83, v84, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v83, 0, 1, v66);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v107 + 56))(v61, 0, 1, v63);
  }
  v86 = a3[18];
  v87 = a3[19];
  v88 = (_QWORD *)(a1 + v86);
  v89 = (_QWORD *)(a2 + v86);
  v90 = v89[1];
  *v88 = *v89;
  v88[1] = v90;
  v91 = (_QWORD *)(a1 + v87);
  v92 = (_QWORD *)(a2 + v87);
  v93 = v92[1];
  *v91 = *v92;
  v91[1] = v93;
  v94 = a3[20];
  v95 = (_QWORD *)(a1 + v94);
  v96 = (_QWORD *)(a2 + v94);
  v97 = *(_QWORD *)(a2 + v94 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v97)
  {
    *v95 = *v96;
    v95[1] = v97;
    v98 = v96[3];
    v95[2] = v96[2];
    v95[3] = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v99 = *((_OWORD *)v96 + 1);
    *(_OWORD *)v95 = *(_OWORD *)v96;
    *((_OWORD *)v95 + 1) = v99;
  }
  v100 = a3[21];
  v101 = (_QWORD *)(a1 + v100);
  v102 = (_QWORD *)(a2 + v100);
  v103 = v102[1];
  if (v103)
  {
    *v101 = *v102;
    v101[1] = v103;
    v104 = v102[3];
    v101[2] = v102[2];
    v101[3] = v104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v105 = *((_OWORD *)v102 + 1);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    *((_OWORD *)v101 + 1) = v105;
  }
  return a1;
}

uint64_t _s11TransactionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, int *);
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  int v133;
  int v134;
  size_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  int v139;
  int v140;
  size_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  int v145;
  int v146;
  size_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  int v152;
  int v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(char *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(a1 + a3[7], a2 + a3[7], v9);
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v24 = a3[14];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_DWORD *)v25 = *(_DWORD *)(a2 + v24);
  *(_WORD *)(v25 + 4) = *(_WORD *)(a2 + v24 + 4);
  *(_WORD *)(v25 + 6) = *(_WORD *)(a2 + v24 + 6);
  *(_WORD *)(v25 + 8) = *(_WORD *)(a2 + v24 + 8);
  *(_WORD *)(v25 + 10) = *(_WORD *)(a2 + v24 + 10);
  *(_WORD *)(v25 + 12) = *(_WORD *)(a2 + v24 + 12);
  *(_WORD *)(v25 + 14) = *(_WORD *)(a2 + v24 + 14);
  *(_WORD *)(v25 + 16) = *(_WORD *)(a2 + v24 + 16);
  *(_WORD *)(v25 + 18) = *(_WORD *)(a2 + v24 + 18);
  v27 = *(_OWORD *)(a2 + v24 + 24);
  *(_QWORD *)(v25 + 37) = *(_QWORD *)(a2 + v24 + 37);
  *(_OWORD *)(v25 + 24) = v27;
  *(_QWORD *)(v25 + 48) = *(_QWORD *)(a2 + v24 + 48);
  *(_QWORD *)(v25 + 56) = *(_QWORD *)(a2 + v24 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
  *(_QWORD *)(v25 + 72) = *(_QWORD *)(v26 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[15];
  v29 = a1 + v28;
  v30 = (__int128 *)(a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 56);
  v32 = *(_QWORD *)(a2 + v28 + 56);
  if (v31)
  {
    if (v32)
    {
      *(_DWORD *)v29 = *(_DWORD *)v30;
      *(_WORD *)(v29 + 4) = *((_WORD *)v30 + 2);
      *(_WORD *)(v29 + 6) = *((_WORD *)v30 + 3);
      *(_WORD *)(v29 + 8) = *((_WORD *)v30 + 4);
      *(_WORD *)(v29 + 10) = *((_WORD *)v30 + 5);
      *(_WORD *)(v29 + 12) = *((_WORD *)v30 + 6);
      *(_WORD *)(v29 + 14) = *((_WORD *)v30 + 7);
      *(_WORD *)(v29 + 16) = *((_WORD *)v30 + 8);
      *(_WORD *)(v29 + 18) = *((_WORD *)v30 + 9);
      v33 = *(__int128 *)((char *)v30 + 24);
      *(_QWORD *)(v29 + 37) = *(_QWORD *)((char *)v30 + 37);
      *(_OWORD *)(v29 + 24) = v33;
      *(_QWORD *)(v29 + 48) = *((_QWORD *)v30 + 6);
      *(_QWORD *)(v29 + 56) = *((_QWORD *)v30 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 64) = *((_QWORD *)v30 + 8);
      *(_QWORD *)(v29 + 72) = *((_QWORD *)v30 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333D46C8(v29);
      *(_OWORD *)v29 = *v30;
      v36 = v30[4];
      v38 = v30[1];
      v37 = v30[2];
      *(_OWORD *)(v29 + 48) = v30[3];
      *(_OWORD *)(v29 + 64) = v36;
      *(_OWORD *)(v29 + 16) = v38;
      *(_OWORD *)(v29 + 32) = v37;
    }
  }
  else if (v32)
  {
    v34 = *v30;
    *(_DWORD *)(v29 + 16) = *((_DWORD *)v30 + 4);
    *(_OWORD *)v29 = v34;
    v35 = *(__int128 *)((char *)v30 + 24);
    *(_QWORD *)(v29 + 37) = *(_QWORD *)((char *)v30 + 37);
    *(_OWORD *)(v29 + 24) = v35;
    *(_QWORD *)(v29 + 48) = *((_QWORD *)v30 + 6);
    *(_QWORD *)(v29 + 56) = *((_QWORD *)v30 + 7);
    *(_QWORD *)(v29 + 64) = *((_QWORD *)v30 + 8);
    *(_QWORD *)(v29 + 72) = *((_QWORD *)v30 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v29 = *v30;
    v39 = v30[1];
    v40 = v30[2];
    v41 = v30[4];
    *(_OWORD *)(v29 + 48) = v30[3];
    *(_OWORD *)(v29 + 64) = v41;
    *(_OWORD *)(v29 + 16) = v39;
    *(_OWORD *)(v29 + 32) = v40;
  }
  v42 = a3[16];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_QWORD *)(a1 + v42 + 8);
  v46 = *(_QWORD *)(a2 + v42 + 8);
  if (v45 == 1)
  {
    if (v46 == 1)
    {
      v47 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v47;
      v48 = *(_OWORD *)(v44 + 32);
      v49 = *(_OWORD *)(v44 + 48);
      v50 = *(_OWORD *)(v44 + 80);
      *(_OWORD *)(v43 + 64) = *(_OWORD *)(v44 + 64);
      *(_OWORD *)(v43 + 80) = v50;
      *(_OWORD *)(v43 + 32) = v48;
      *(_OWORD *)(v43 + 48) = v49;
      v51 = *(_OWORD *)(v44 + 96);
      v52 = *(_OWORD *)(v44 + 112);
      v53 = *(_OWORD *)(v44 + 144);
      *(_OWORD *)(v43 + 128) = *(_OWORD *)(v44 + 128);
      *(_OWORD *)(v43 + 144) = v53;
      *(_OWORD *)(v43 + 96) = v51;
      *(_OWORD *)(v43 + 112) = v52;
      goto LABEL_29;
    }
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
    *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
    *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
    *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
    *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
    *(_QWORD *)(v43 + 48) = *(_QWORD *)(v44 + 48);
    *(_QWORD *)(v43 + 56) = *(_QWORD *)(v44 + 56);
    *(_QWORD *)(v43 + 64) = *(_QWORD *)(v44 + 64);
    *(_QWORD *)(v43 + 72) = *(_QWORD *)(v44 + 72);
    v61 = *(_QWORD *)(v44 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v61 == 1)
    {
      *(_OWORD *)(v43 + 80) = *(_OWORD *)(v44 + 80);
      v62 = *(_OWORD *)(v44 + 96);
      v63 = *(_OWORD *)(v44 + 112);
      v64 = *(_OWORD *)(v44 + 144);
      *(_OWORD *)(v43 + 128) = *(_OWORD *)(v44 + 128);
      *(_OWORD *)(v43 + 144) = v64;
      *(_OWORD *)(v43 + 96) = v62;
      *(_OWORD *)(v43 + 112) = v63;
      goto LABEL_29;
    }
LABEL_25:
    *(_QWORD *)(v43 + 80) = *(_QWORD *)(v44 + 80);
    *(_QWORD *)(v43 + 88) = *(_QWORD *)(v44 + 88);
    *(_QWORD *)(v43 + 96) = *(_QWORD *)(v44 + 96);
    *(_QWORD *)(v43 + 104) = *(_QWORD *)(v44 + 104);
    *(_QWORD *)(v43 + 112) = *(_QWORD *)(v44 + 112);
    *(_QWORD *)(v43 + 120) = *(_QWORD *)(v44 + 120);
    *(_QWORD *)(v43 + 128) = *(_QWORD *)(v44 + 128);
    *(_QWORD *)(v43 + 136) = *(_QWORD *)(v44 + 136);
    *(_QWORD *)(v43 + 144) = *(_QWORD *)(v44 + 144);
    *(_QWORD *)(v43 + 152) = *(_QWORD *)(v44 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (v46 == 1)
  {
    sub_2333D4730(v43);
    v54 = *(_OWORD *)(v44 + 16);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v54;
    v55 = *(_OWORD *)(v44 + 80);
    v57 = *(_OWORD *)(v44 + 32);
    v56 = *(_OWORD *)(v44 + 48);
    *(_OWORD *)(v43 + 64) = *(_OWORD *)(v44 + 64);
    *(_OWORD *)(v43 + 80) = v55;
    *(_OWORD *)(v43 + 32) = v57;
    *(_OWORD *)(v43 + 48) = v56;
    v58 = *(_OWORD *)(v44 + 144);
    v60 = *(_OWORD *)(v44 + 96);
    v59 = *(_OWORD *)(v44 + 112);
    *(_OWORD *)(v43 + 128) = *(_OWORD *)(v44 + 128);
    *(_OWORD *)(v43 + 144) = v58;
    *(_OWORD *)(v43 + 96) = v60;
    *(_OWORD *)(v43 + 112) = v59;
    goto LABEL_29;
  }
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
  *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 48) = *(_QWORD *)(v44 + 48);
  *(_QWORD *)(v43 + 56) = *(_QWORD *)(v44 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 64) = *(_QWORD *)(v44 + 64);
  *(_QWORD *)(v43 + 72) = *(_QWORD *)(v44 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = (_OWORD *)(v43 + 80);
  v66 = (_OWORD *)(v44 + 80);
  v67 = *(_QWORD *)(v44 + 88);
  if (*(_QWORD *)(v43 + 88) == 1)
  {
    if (v67 == 1)
    {
      *v65 = *v66;
      v68 = *(_OWORD *)(v44 + 96);
      v69 = *(_OWORD *)(v44 + 112);
      v70 = *(_OWORD *)(v44 + 144);
      *(_OWORD *)(v43 + 128) = *(_OWORD *)(v44 + 128);
      *(_OWORD *)(v43 + 144) = v70;
      *(_OWORD *)(v43 + 96) = v68;
      *(_OWORD *)(v43 + 112) = v69;
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if (v67 == 1)
  {
    sub_2333D46FC(v43 + 80);
    *v65 = *v66;
    v71 = *(_OWORD *)(v44 + 144);
    v73 = *(_OWORD *)(v44 + 96);
    v72 = *(_OWORD *)(v44 + 112);
    *(_OWORD *)(v43 + 128) = *(_OWORD *)(v44 + 128);
    *(_OWORD *)(v43 + 144) = v71;
    *(_OWORD *)(v43 + 96) = v73;
    *(_OWORD *)(v43 + 112) = v72;
  }
  else
  {
    *(_QWORD *)(v43 + 80) = *(_QWORD *)(v44 + 80);
    *(_QWORD *)(v43 + 88) = *(_QWORD *)(v44 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 96) = *(_QWORD *)(v44 + 96);
    *(_QWORD *)(v43 + 104) = *(_QWORD *)(v44 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 112) = *(_QWORD *)(v44 + 112);
    *(_QWORD *)(v43 + 120) = *(_QWORD *)(v44 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 128) = *(_QWORD *)(v44 + 128);
    *(_QWORD *)(v43 + 136) = *(_QWORD *)(v44 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 144) = *(_QWORD *)(v44 + 144);
    *(_QWORD *)(v43 + 152) = *(_QWORD *)(v44 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_29:
  v74 = a3[17];
  v75 = (char *)(a1 + v74);
  v76 = (char *)(a2 + v74);
  v77 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v78 = *((_QWORD *)v77 - 1);
  v79 = *(uint64_t (**)(char *, uint64_t, int *))(v78 + 48);
  v80 = v79(v75, 1, v77);
  v81 = v79(v76, 1, v77);
  if (!v80)
  {
    if (v81)
    {
      sub_233168500((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      goto LABEL_35;
    }
    v88 = sub_23361D340();
    v158 = *(_QWORD *)(v88 - 8);
    v89 = *(uint64_t (**)(void))(v158 + 48);
    v90 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v75, 1, v88);
    v91 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v76, 1, v88);
    if (v90)
    {
      if (!v91)
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v75, v76, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v75, 0, 1, v88);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v91)
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 24))(v75, v76, v88);
LABEL_72:
        v130 = v88;
        v131 = v77[5];
        v132 = &v76[v131];
        v154 = &v75[v131];
        v133 = v89();
        v134 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v132, 1, v130);
        if (v133)
        {
          if (v134)
          {
            v135 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v136 = v154;
LABEL_77:
            memcpy(v136, v132, v135);
            goto LABEL_81;
          }
          (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v154, v132, v130);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v154, 0, 1, v130);
        }
        else
        {
          if (v134)
          {
            (*(void (**)(char *, uint64_t))(v158 + 8))(v154, v130);
            v135 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v136 = v154;
            goto LABEL_77;
          }
          (*(void (**)(char *, char *, uint64_t))(v158 + 24))(v154, v132, v130);
        }
LABEL_81:
        v137 = v77[6];
        v138 = &v76[v137];
        v155 = &v75[v137];
        v139 = v89();
        v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v138, 1, v130);
        if (v139)
        {
          if (v140)
          {
            v141 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v142 = v155;
LABEL_86:
            memcpy(v142, v138, v141);
            goto LABEL_89;
          }
          (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v155, v138, v130);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v130);
        }
        else
        {
          if (v140)
          {
            (*(void (**)(char *, uint64_t))(v158 + 8))(v155, v130);
            v141 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v142 = v155;
            goto LABEL_86;
          }
          (*(void (**)(char *, char *, uint64_t))(v158 + 24))(v155, v138, v130);
        }
LABEL_89:
        v143 = v77[7];
        v144 = &v76[v143];
        v156 = &v75[v143];
        v145 = v89();
        v146 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v144, 1, v130);
        if (v145)
        {
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v156, v144, v130);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v156, 0, 1, v130);
            goto LABEL_97;
          }
          v147 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v148 = v156;
        }
        else
        {
          if (!v146)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 24))(v156, v144, v130);
            goto LABEL_97;
          }
          (*(void (**)(char *, uint64_t))(v158 + 8))(v156, v130);
          v147 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v148 = v156;
        }
        memcpy(v148, v144, v147);
LABEL_97:
        v149 = v77[8];
        v150 = &v75[v149];
        v151 = &v76[v149];
        v152 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v150, 1, v130);
        v153 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v151, 1, v130);
        if (v152)
        {
          if (!v153)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v150, v151, v130);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v150, 0, 1, v130);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v153)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 24))(v150, v151, v130);
            goto LABEL_54;
          }
          (*(void (**)(char *, uint64_t))(v158 + 8))(v150, v130);
        }
        v85 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v86 = v150;
        v87 = v151;
LABEL_36:
        memcpy(v86, v87, v85);
        goto LABEL_54;
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v75, v88);
    }
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    goto LABEL_72;
  }
  if (v81)
  {
LABEL_35:
    v85 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0) - 8) + 64);
    v86 = v75;
    v87 = v76;
    goto LABEL_36;
  }
  v82 = sub_23361D340();
  v83 = *(_QWORD *)(v82 - 8);
  v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
  v157 = v83;
  if (v159(v76, 1, v82))
  {
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v75, v76, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v75, 0, 1, v82);
  }
  v92 = v77[5];
  v93 = &v75[v92];
  v94 = &v76[v92];
  if (v159(&v76[v92], 1, v82))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v93, v94, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v93, 0, 1, v82);
  }
  v96 = v77[6];
  v97 = &v75[v96];
  v98 = &v76[v96];
  if (v159(&v76[v96], 1, v82))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v97, v98, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v97, 0, 1, v82);
  }
  v100 = v77[7];
  v101 = &v75[v100];
  v102 = &v76[v100];
  if (v159(&v76[v100], 1, v82))
  {
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v101, v102, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v101, 0, 1, v82);
  }
  v104 = v77[8];
  v105 = &v75[v104];
  v106 = &v76[v104];
  if (v159(v106, 1, v82))
  {
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v105, v106, v82);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v105, 0, 1, v82);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v75, 0, 1, v77);
LABEL_54:
  v108 = a3[18];
  v109 = (_QWORD *)(a1 + v108);
  v110 = (_QWORD *)(a2 + v108);
  *v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v111 = a3[19];
  v112 = (_QWORD *)(a1 + v111);
  v113 = (_QWORD *)(a2 + v111);
  *v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114 = a3[20];
  v115 = (_QWORD *)(a1 + v114);
  v116 = (_QWORD *)(a2 + v114);
  v117 = *(_QWORD *)(a1 + v114 + 8);
  v118 = *(_QWORD *)(a2 + v114 + 8);
  if (v117)
  {
    if (v118)
    {
      *v115 = *v116;
      v115[1] = v116[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v115[2] = v116[2];
      v115[3] = v116[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2332DD550((uint64_t)v115);
      v119 = *((_OWORD *)v116 + 1);
      *(_OWORD *)v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v119;
    }
  }
  else if (v118)
  {
    *v115 = *v116;
    v115[1] = v116[1];
    v115[2] = v116[2];
    v115[3] = v116[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v120 = *((_OWORD *)v116 + 1);
    *(_OWORD *)v115 = *(_OWORD *)v116;
    *((_OWORD *)v115 + 1) = v120;
  }
  v121 = a3[21];
  v122 = (_QWORD *)(a1 + v121);
  v123 = (_QWORD *)(a2 + v121);
  v124 = *(_QWORD *)(a1 + v121 + 8);
  v125 = v123[1];
  if (v124)
  {
    if (v125)
    {
      *v122 = *v123;
      v122[1] = v123[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v122[2] = v123[2];
      v122[3] = v123[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2332DD550((uint64_t)v122);
      v126 = *((_OWORD *)v123 + 1);
      *(_OWORD *)v122 = *(_OWORD *)v123;
      *((_OWORD *)v122 + 1) = v126;
    }
  }
  else if (v125)
  {
    *v122 = *v123;
    v122[1] = v123[1];
    v122[2] = v123[2];
    v122[3] = v123[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v127 = *((_OWORD *)v123 + 1);
    *(_OWORD *)v122 = *(_OWORD *)v123;
    *((_OWORD *)v122 + 1) = v127;
  }
  return a1;
}

uint64_t _s11TransactionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  __int128 v67;
  _OWORD *v68;
  _OWORD *v69;
  __int128 v70;
  uint64_t v72;
  uint64_t v73;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + a3[7], a2 + a3[7], v9);
  }
  else
  {
    v12 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v12(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v9);
  }
  v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[14];
  v17 = a3[15];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (_OWORD *)(a2 + v16);
  v20 = v19[4];
  v21 = v19[2];
  v18[3] = v19[3];
  v18[4] = v20;
  v22 = v19[1];
  *v18 = *v19;
  v18[1] = v22;
  v18[2] = v21;
  v23 = (_OWORD *)(a1 + v17);
  v24 = (_OWORD *)(a2 + v17);
  v25 = v24[4];
  v26 = v24[2];
  v23[3] = v24[3];
  v23[4] = v25;
  v27 = v24[1];
  *v23 = *v24;
  v23[1] = v27;
  v23[2] = v26;
  v28 = a3[16];
  v29 = a3[17];
  v30 = (_OWORD *)(a1 + v28);
  v31 = (_OWORD *)(a2 + v28);
  v32 = v31[5];
  v30[4] = v31[4];
  v30[5] = v32;
  v33 = v31[3];
  v30[2] = v31[2];
  v30[3] = v33;
  v34 = v31[9];
  v30[8] = v31[8];
  v30[9] = v34;
  v35 = v31[7];
  v30[6] = v31[6];
  v30[7] = v35;
  v36 = v31[1];
  *v30 = *v31;
  v30[1] = v36;
  v37 = (char *)(a1 + v29);
  v38 = (char *)(a2 + v29);
  v39 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v40 = *((_QWORD *)v39 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v72 = v40;
    v42 = sub_23361D340();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    v73 = v43;
    if (v44(v38, 1, v42))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v37, v38, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    }
    v46 = v39[5];
    v47 = &v37[v46];
    v48 = &v38[v46];
    if (v44(&v38[v46], 1, v42))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v47, v48, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v47, 0, 1, v42);
    }
    v50 = v39[6];
    v51 = &v37[v50];
    v52 = &v38[v50];
    if (v44(&v38[v50], 1, v42))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v51, v52, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v51, 0, 1, v42);
    }
    v54 = v39[7];
    v55 = &v37[v54];
    v56 = &v38[v54];
    if (v44(&v38[v54], 1, v42))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v55, v56, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v55, 0, 1, v42);
    }
    v58 = v39[8];
    v59 = &v37[v58];
    v60 = &v38[v58];
    if (v44(v60, 1, v42))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v59, v60, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v59, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v72 + 56))(v37, 0, 1, v39);
  }
  v62 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v62) = *(_OWORD *)(a2 + v62);
  v63 = a3[20];
  v64 = a3[21];
  v65 = (_OWORD *)(a1 + v63);
  v66 = (_OWORD *)(a2 + v63);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  v68 = (_OWORD *)(a1 + v64);
  v69 = (_OWORD *)(a2 + v64);
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  return a1;
}

uint64_t _s11TransactionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int *v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, int *);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t (*v75)(void);
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  int v125;
  int v126;
  size_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  int v131;
  int v132;
  size_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  int v137;
  int v138;
  size_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  int v144;
  int v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int (*v151)(char *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(a1 + a3[7], a2 + a3[7], v10);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[14];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_DWORD *)v33 = *(_DWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 4) = *(_OWORD *)(a2 + v32 + 4);
  *(_OWORD *)(v33 + 24) = *(_OWORD *)(a2 + v32 + 24);
  *(_QWORD *)(v33 + 37) = *(_QWORD *)(a2 + v32 + 37);
  v35 = *(_QWORD *)(a2 + v32 + 56);
  *(_QWORD *)(v33 + 48) = *(_QWORD *)(a2 + v32 + 48);
  *(_QWORD *)(v33 + 56) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v34 + 72);
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
  *(_QWORD *)(v33 + 72) = v36;
  swift_bridgeObjectRelease();
  v37 = a3[15];
  v38 = a1 + v37;
  v39 = a2 + v37;
  if (*(_QWORD *)(a1 + v37 + 56))
  {
    v40 = *(_QWORD *)(v39 + 56);
    if (v40)
    {
      *(_DWORD *)v38 = *(_DWORD *)v39;
      *(_OWORD *)(v38 + 4) = *(_OWORD *)(v39 + 4);
      *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 37) = *(_QWORD *)(v39 + 37);
      *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      *(_QWORD *)(v38 + 56) = v40;
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
      *(_QWORD *)(v38 + 72) = v41;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_2333D46C8(v38);
  }
  v42 = *(_OWORD *)(v39 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_OWORD *)(v38 + 48) = v42;
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
  v43 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v43;
LABEL_12:
  v44 = a3[16];
  v45 = a1 + v44;
  v46 = a2 + v44;
  if (*(_QWORD *)(a1 + v44 + 8) == 1)
  {
LABEL_15:
    v48 = *(_OWORD *)(v46 + 112);
    *(_OWORD *)(v45 + 96) = *(_OWORD *)(v46 + 96);
    *(_OWORD *)(v45 + 112) = v48;
    v49 = *(_OWORD *)(v46 + 144);
    *(_OWORD *)(v45 + 128) = *(_OWORD *)(v46 + 128);
    *(_OWORD *)(v45 + 144) = v49;
    v50 = *(_OWORD *)(v46 + 48);
    *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
    *(_OWORD *)(v45 + 48) = v50;
    v51 = *(_OWORD *)(v46 + 80);
    *(_OWORD *)(v45 + 64) = *(_OWORD *)(v46 + 64);
    *(_OWORD *)(v45 + 80) = v51;
    v52 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v52;
    goto LABEL_16;
  }
  v47 = *(_QWORD *)(v46 + 8);
  if (v47 == 1)
  {
    sub_2333D4730(v45);
    goto LABEL_15;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  v67 = *(_QWORD *)(v46 + 24);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
  *(_QWORD *)(v45 + 24) = v67;
  swift_bridgeObjectRelease();
  v68 = *(_QWORD *)(v46 + 40);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = v68;
  swift_bridgeObjectRelease();
  v69 = *(_QWORD *)(v46 + 56);
  *(_QWORD *)(v45 + 48) = *(_QWORD *)(v46 + 48);
  *(_QWORD *)(v45 + 56) = v69;
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v46 + 72);
  *(_QWORD *)(v45 + 64) = *(_QWORD *)(v46 + 64);
  *(_QWORD *)(v45 + 72) = v70;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v45 + 88) == 1)
    goto LABEL_27;
  v71 = *(_QWORD *)(v46 + 88);
  if (v71 == 1)
  {
    sub_2333D46FC(v45 + 80);
LABEL_27:
    v72 = *(_OWORD *)(v46 + 128);
    *(_OWORD *)(v45 + 112) = *(_OWORD *)(v46 + 112);
    *(_OWORD *)(v45 + 128) = v72;
    *(_OWORD *)(v45 + 144) = *(_OWORD *)(v46 + 144);
    v73 = *(_OWORD *)(v46 + 96);
    *(_OWORD *)(v45 + 80) = *(_OWORD *)(v46 + 80);
    *(_OWORD *)(v45 + 96) = v73;
    goto LABEL_16;
  }
  *(_QWORD *)(v45 + 80) = *(_QWORD *)(v46 + 80);
  *(_QWORD *)(v45 + 88) = v71;
  swift_bridgeObjectRelease();
  v117 = *(_QWORD *)(v46 + 104);
  *(_QWORD *)(v45 + 96) = *(_QWORD *)(v46 + 96);
  *(_QWORD *)(v45 + 104) = v117;
  swift_bridgeObjectRelease();
  v118 = *(_QWORD *)(v46 + 120);
  *(_QWORD *)(v45 + 112) = *(_QWORD *)(v46 + 112);
  *(_QWORD *)(v45 + 120) = v118;
  swift_bridgeObjectRelease();
  v119 = *(_QWORD *)(v46 + 136);
  *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
  *(_QWORD *)(v45 + 136) = v119;
  swift_bridgeObjectRelease();
  v120 = *(_QWORD *)(v46 + 152);
  *(_QWORD *)(v45 + 144) = *(_QWORD *)(v46 + 144);
  *(_QWORD *)(v45 + 152) = v120;
  swift_bridgeObjectRelease();
LABEL_16:
  v53 = a3[17];
  v54 = (char *)(a1 + v53);
  v55 = (char *)(a2 + v53);
  v56 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v57 = *((_QWORD *)v56 - 1);
  v58 = *(uint64_t (**)(char *, uint64_t, int *))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_233168500((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      goto LABEL_22;
    }
    v74 = sub_23361D340();
    v150 = *(_QWORD *)(v74 - 8);
    v75 = *(uint64_t (**)(void))(v150 + 48);
    v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v54, 1, v74);
    v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v55, 1, v74);
    if (v76)
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v54, v55, v74);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v54, 0, 1, v74);
        goto LABEL_61;
      }
    }
    else
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v150 + 40))(v54, v55, v74);
LABEL_61:
        v122 = v74;
        v123 = v56[5];
        v124 = &v55[v123];
        v146 = &v54[v123];
        v125 = v75();
        v126 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v124, 1, v122);
        if (v125)
        {
          if (v126)
          {
            v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v128 = v146;
LABEL_66:
            memcpy(v128, v124, v127);
            goto LABEL_70;
          }
          (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v146, v124, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v146, 0, 1, v122);
        }
        else
        {
          if (v126)
          {
            (*(void (**)(char *, uint64_t))(v150 + 8))(v146, v122);
            v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v128 = v146;
            goto LABEL_66;
          }
          (*(void (**)(char *, char *, uint64_t))(v150 + 40))(v146, v124, v122);
        }
LABEL_70:
        v129 = v56[6];
        v130 = &v55[v129];
        v147 = &v54[v129];
        v131 = v75();
        v132 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v130, 1, v122);
        if (v131)
        {
          if (v132)
          {
            v133 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v134 = v147;
LABEL_75:
            memcpy(v134, v130, v133);
            goto LABEL_78;
          }
          (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v147, v130, v122);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v122);
        }
        else
        {
          if (v132)
          {
            (*(void (**)(char *, uint64_t))(v150 + 8))(v147, v122);
            v133 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v134 = v147;
            goto LABEL_75;
          }
          (*(void (**)(char *, char *, uint64_t))(v150 + 40))(v147, v130, v122);
        }
LABEL_78:
        v135 = v56[7];
        v136 = &v55[v135];
        v148 = &v54[v135];
        v137 = v75();
        v138 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v136, 1, v122);
        if (v137)
        {
          if (!v138)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v148, v136, v122);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v148, 0, 1, v122);
            goto LABEL_86;
          }
          v139 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v140 = v148;
        }
        else
        {
          if (!v138)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 40))(v148, v136, v122);
            goto LABEL_86;
          }
          (*(void (**)(char *, uint64_t))(v150 + 8))(v148, v122);
          v139 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v140 = v148;
        }
        memcpy(v140, v136, v139);
LABEL_86:
        v141 = v56[8];
        v142 = &v54[v141];
        v143 = &v55[v141];
        v144 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v142, 1, v122);
        v145 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v143, 1, v122);
        if (v144)
        {
          if (!v145)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v142, v143, v122);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v142, 0, 1, v122);
            goto LABEL_46;
          }
        }
        else
        {
          if (!v145)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 40))(v142, v143, v122);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v150 + 8))(v142, v122);
        }
        v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v65 = v142;
        v66 = v143;
LABEL_23:
        memcpy(v65, v66, v64);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v150 + 8))(v54, v74);
    }
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_61;
  }
  if (v60)
  {
LABEL_22:
    v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0) - 8) + 64);
    v65 = v54;
    v66 = v55;
    goto LABEL_23;
  }
  v61 = sub_23361D340();
  v62 = *(_QWORD *)(v61 - 8);
  v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v149 = v62;
  if (v151(v55, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v54, v55, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
  }
  v78 = v56[5];
  v79 = &v54[v78];
  v80 = &v55[v78];
  if (v151(&v55[v78], 1, v61))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v79, v80, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v79, 0, 1, v61);
  }
  v82 = v56[6];
  v83 = &v54[v82];
  v84 = &v55[v82];
  if (v151(&v55[v82], 1, v61))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v83, v84, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v83, 0, 1, v61);
  }
  v86 = v56[7];
  v87 = &v54[v86];
  v88 = &v55[v86];
  if (v151(&v55[v86], 1, v61))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v87, v88, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v87, 0, 1, v61);
  }
  v90 = v56[8];
  v91 = &v54[v90];
  v92 = &v55[v90];
  if (v151(v92, 1, v61))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v91, v92, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v91, 0, 1, v61);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
LABEL_46:
  v94 = a3[18];
  v95 = (_QWORD *)(a1 + v94);
  v96 = (uint64_t *)(a2 + v94);
  v98 = *v96;
  v97 = v96[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = a3[19];
  v100 = (_QWORD *)(a1 + v99);
  v101 = (uint64_t *)(a2 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = a3[20];
  v105 = (_QWORD *)(a1 + v104);
  v106 = (_QWORD *)(a2 + v104);
  if (*(_QWORD *)(a1 + v104 + 8))
  {
    v107 = v106[1];
    if (v107)
    {
      *v105 = *v106;
      v105[1] = v107;
      swift_bridgeObjectRelease();
      v108 = v106[3];
      v105[2] = v106[2];
      v105[3] = v108;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_2332DD550((uint64_t)v105);
  }
  v109 = *((_OWORD *)v106 + 1);
  *(_OWORD *)v105 = *(_OWORD *)v106;
  *((_OWORD *)v105 + 1) = v109;
LABEL_51:
  v110 = a3[21];
  v111 = a1 + v110;
  v112 = a2 + v110;
  if (!*(_QWORD *)(a1 + v110 + 8))
  {
LABEL_55:
    v115 = *(_OWORD *)(v112 + 16);
    *(_OWORD *)v111 = *(_OWORD *)v112;
    *(_OWORD *)(v111 + 16) = v115;
    return a1;
  }
  v113 = *(_QWORD *)(v112 + 8);
  if (!v113)
  {
    sub_2332DD550(v111);
    goto LABEL_55;
  }
  *(_QWORD *)v111 = *(_QWORD *)v112;
  *(_QWORD *)(v111 + 8) = v113;
  swift_bridgeObjectRelease();
  v114 = *(_QWORD *)(v112 + 24);
  *(_QWORD *)(v111 + 16) = *(_QWORD *)(v112 + 16);
  *(_QWORD *)(v111 + 24) = v114;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11TransactionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23350EF28(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_23361D634();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[17];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s11TransactionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23350F000(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_23361D634();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[17];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23350F0C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_23361D634();
    if (v1 <= 0x3F)
    {
      sub_233176020(319, qword_256053CB8, (void (*)(uint64_t))type metadata accessor for RawBankConnectData.Actions);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.Status()
{
  return &type metadata for RawBankConnectData.Transaction.Status;
}

uint64_t _s11TransactionV15TransactionTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_23350F254 + 4 * byte_233655EC9[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_23350F288 + 4 * byte_233655EC4[v4]))();
}

uint64_t sub_23350F288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23350F290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23350F298);
  return result;
}

uint64_t sub_23350F2A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23350F2ACLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_23350F2B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23350F2B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.TransactionType()
{
  return &type metadata for RawBankConnectData.Transaction.TransactionType;
}

uint64_t _s11TransactionV19MerchantInformationVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 88);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11TransactionV19MerchantInformationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    v12 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v12;
    v13 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v13;
    v14 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v14;
    v15 = *(_QWORD *)(a2 + 144);
    v16 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v15;
    *(_QWORD *)(a1 + 152) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s11TransactionV19MerchantInformationVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 80);
  v5 = (_OWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v6 == 1)
    {
      *v4 = *v5;
      v7 = *(_OWORD *)(a2 + 96);
      v8 = *(_OWORD *)(a2 + 112);
      v9 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v9;
      *(_OWORD *)(a1 + 96) = v7;
      *(_OWORD *)(a1 + 112) = v8;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_2333D46FC(a1 + 80);
    *v4 = *v5;
    v10 = *(_OWORD *)(a2 + 144);
    v12 = *(_OWORD *)(a2 + 96);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v10;
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

_QWORD *_s11TransactionV19MerchantInformationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  if (a1[11] != 1)
  {
    v9 = a2[11];
    if (v9 != 1)
    {
      a1[10] = a2[10];
      a1[11] = v9;
      swift_bridgeObjectRelease();
      v12 = a2[13];
      a1[12] = a2[12];
      a1[13] = v12;
      swift_bridgeObjectRelease();
      v13 = a2[15];
      a1[14] = a2[14];
      a1[15] = v13;
      swift_bridgeObjectRelease();
      v14 = a2[17];
      a1[16] = a2[16];
      a1[17] = v14;
      swift_bridgeObjectRelease();
      v15 = a2[19];
      a1[18] = a2[18];
      a1[19] = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2333D46FC((uint64_t)(a1 + 10));
  }
  v10 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v10;
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  v11 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v11;
  return a1;
}

uint64_t _s11TransactionV19MerchantInformationVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s11TransactionV19MerchantInformationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.MerchantInformation()
{
  return &type metadata for RawBankConnectData.Transaction.MerchantInformation;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.MerchantAddress()
{
  return &type metadata for RawBankConnectData.Transaction.MerchantAddress;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.BankTransactionCode()
{
  return &type metadata for RawBankConnectData.Transaction.BankTransactionCode;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Transaction.ProprietaryBankTransactionCode()
{
  return &type metadata for RawBankConnectData.Transaction.ProprietaryBankTransactionCode;
}

uint64_t _s20TransactionsResponseVwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s20TransactionsResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s20TransactionsResponseVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  if (a1[1] != 1)
  {
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23350FA2C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23350FA2C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s20TransactionsResponseVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1[1] != 1)
  {
    v4 = a2[1];
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23350FA2C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RawBankConnectData.TransactionsResponse()
{
  return &type metadata for RawBankConnectData.TransactionsResponse;
}

ValueMetadata *type metadata accessor for RawBankConnectData.TransactionsResponse.PageMetadata()
{
  return &type metadata for RawBankConnectData.TransactionsResponse.PageMetadata;
}

_QWORD *_s23TransactionsRequestBodyVwCP(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = a3[7];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *v20 = *(_QWORD *)v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s23TransactionsRequestBodyVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *_s23TransactionsRequestBodyVwcp(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *v18 = *(_QWORD *)v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

char *_s23TransactionsRequestBodyVwca(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = (_QWORD *)((char *)a2 + v19);
  *(_QWORD *)v20 = *v21;
  *((_QWORD *)v20 + 1) = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s23TransactionsRequestBodyVwtk(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *_s23TransactionsRequestBodyVwta(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(&a1[v13], 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23TransactionsRequestBodyVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233510194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s23TransactionsRequestBodyVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233510244(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23361D634();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2335102E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D634();
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s23TransactionsRequestBodyV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2335103D8 + 4 * byte_233655ED3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23351040C + 4 * byte_233655ECE[v4]))();
}

uint64_t sub_23351040C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233510414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23351041CLL);
  return result;
}

uint64_t sub_233510428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233510430);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233510434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351043C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s23TransactionsRequestBodyV10CodingKeysOMa()
{
  return &_s23TransactionsRequestBodyV10CodingKeysON;
}

uint64_t _s20TransactionsResponseV12PageMetadataV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233510498 + 4 * byte_233655ED8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2335104B8 + 4 * byte_233655EDD[v4]))();
}

_BYTE *sub_233510498(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2335104B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335104C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335104C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335104D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335104D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20TransactionsResponseV12PageMetadataV10CodingKeysOMa()
{
  return &_s20TransactionsResponseV12PageMetadataV10CodingKeysON;
}

ValueMetadata *_s20TransactionsResponseV10CodingKeysOMa()
{
  return &_s20TransactionsResponseV10CodingKeysON;
}

ValueMetadata *_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysOMa()
{
  return &_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON;
}

uint64_t _s20TransactionsResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233510564 + 4 * byte_233655EE7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233510598 + 4 * byte_233655EE2[v4]))();
}

uint64_t sub_233510598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335105A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335105A8);
  return result;
}

uint64_t sub_2335105B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335105BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2335105C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335105C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TransactionV19BankTransactionCodeV10CodingKeysOMa()
{
  return &_s11TransactionV19BankTransactionCodeV10CodingKeysON;
}

uint64_t _s11TransactionV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233510630 + 4 * byte_233655EF1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233510664 + 4 * byte_233655EEC[v4]))();
}

uint64_t sub_233510664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351066C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233510674);
  return result;
}

uint64_t sub_233510680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233510688);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23351068C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233510694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TransactionV15MerchantAddressV10CodingKeysOMa()
{
  return &_s11TransactionV15MerchantAddressV10CodingKeysON;
}

uint64_t _s11TransactionV19MerchantInformationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2335106FC + 4 * byte_233655EFB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233510730 + 4 * byte_233655EF6[v4]))();
}

uint64_t sub_233510730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233510738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233510740);
  return result;
}

uint64_t sub_23351074C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233510754);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233510758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233510760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TransactionV19MerchantInformationV10CodingKeysOMa()
{
  return &_s11TransactionV19MerchantInformationV10CodingKeysON;
}

uint64_t _s11TransactionV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11TransactionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_233510858 + 4 * byte_233655F05[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_23351088C + 4 * byte_233655F00[v4]))();
}

uint64_t sub_23351088C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233510894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23351089CLL);
  return result;
}

uint64_t sub_2335108A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335108B0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_2335108B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335108BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11TransactionV10CodingKeysOMa()
{
  return &_s11TransactionV10CodingKeysON;
}

unint64_t sub_2335108DC()
{
  unint64_t result;

  result = qword_256053DC0;
  if (!qword_256053DC0)
  {
    result = MEMORY[0x234934494](&unk_2336568E4, &_s11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DC0);
  }
  return result;
}

unint64_t sub_233510924()
{
  unint64_t result;

  result = qword_256053DC8;
  if (!qword_256053DC8)
  {
    result = MEMORY[0x234934494](&unk_23365699C, &_s11TransactionV19MerchantInformationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DC8);
  }
  return result;
}

unint64_t sub_23351096C()
{
  unint64_t result;

  result = qword_256053DD0;
  if (!qword_256053DD0)
  {
    result = MEMORY[0x234934494](&unk_233656A54, &_s11TransactionV15MerchantAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DD0);
  }
  return result;
}

unint64_t sub_2335109B4()
{
  unint64_t result;

  result = qword_256053DD8;
  if (!qword_256053DD8)
  {
    result = MEMORY[0x234934494](&unk_233656B0C, &_s11TransactionV19BankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DD8);
  }
  return result;
}

unint64_t sub_2335109FC()
{
  unint64_t result;

  result = qword_256053DE0;
  if (!qword_256053DE0)
  {
    result = MEMORY[0x234934494](&unk_233656BC4, &_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DE0);
  }
  return result;
}

unint64_t sub_233510A44()
{
  unint64_t result;

  result = qword_256053DE8;
  if (!qword_256053DE8)
  {
    result = MEMORY[0x234934494](&unk_233656C7C, &_s20TransactionsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DE8);
  }
  return result;
}

unint64_t sub_233510A8C()
{
  unint64_t result;

  result = qword_256053DF0;
  if (!qword_256053DF0)
  {
    result = MEMORY[0x234934494](&unk_233656D34, &_s20TransactionsResponseV12PageMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DF0);
  }
  return result;
}

unint64_t sub_233510AD4()
{
  unint64_t result;

  result = qword_256053DF8;
  if (!qword_256053DF8)
  {
    result = MEMORY[0x234934494](&unk_233656DEC, &_s23TransactionsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053DF8);
  }
  return result;
}

unint64_t sub_233510B1C()
{
  unint64_t result;

  result = qword_256053E00;
  if (!qword_256053E00)
  {
    result = MEMORY[0x234934494](&unk_233656D5C, &_s23TransactionsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E00);
  }
  return result;
}

unint64_t sub_233510B64()
{
  unint64_t result;

  result = qword_256053E08;
  if (!qword_256053E08)
  {
    result = MEMORY[0x234934494](&unk_233656D84, &_s23TransactionsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E08);
  }
  return result;
}

unint64_t sub_233510BAC()
{
  unint64_t result;

  result = qword_256053E10;
  if (!qword_256053E10)
  {
    result = MEMORY[0x234934494](&unk_233656CA4, &_s20TransactionsResponseV12PageMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E10);
  }
  return result;
}

unint64_t sub_233510BF4()
{
  unint64_t result;

  result = qword_256053E18;
  if (!qword_256053E18)
  {
    result = MEMORY[0x234934494](&unk_233656CCC, &_s20TransactionsResponseV12PageMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E18);
  }
  return result;
}

unint64_t sub_233510C3C()
{
  unint64_t result;

  result = qword_256053E20;
  if (!qword_256053E20)
  {
    result = MEMORY[0x234934494](&unk_233656BEC, &_s20TransactionsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E20);
  }
  return result;
}

unint64_t sub_233510C84()
{
  unint64_t result;

  result = qword_256053E28;
  if (!qword_256053E28)
  {
    result = MEMORY[0x234934494](&unk_233656C14, &_s20TransactionsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E28);
  }
  return result;
}

unint64_t sub_233510CCC()
{
  unint64_t result;

  result = qword_256053E30;
  if (!qword_256053E30)
  {
    result = MEMORY[0x234934494](&unk_233656B34, &_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E30);
  }
  return result;
}

unint64_t sub_233510D14()
{
  unint64_t result;

  result = qword_256053E38;
  if (!qword_256053E38)
  {
    result = MEMORY[0x234934494](&unk_233656B5C, &_s11TransactionV30ProprietaryBankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E38);
  }
  return result;
}

unint64_t sub_233510D5C()
{
  unint64_t result;

  result = qword_256053E40;
  if (!qword_256053E40)
  {
    result = MEMORY[0x234934494](&unk_233656A7C, &_s11TransactionV19BankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E40);
  }
  return result;
}

unint64_t sub_233510DA4()
{
  unint64_t result;

  result = qword_256053E48;
  if (!qword_256053E48)
  {
    result = MEMORY[0x234934494](&unk_233656AA4, &_s11TransactionV19BankTransactionCodeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E48);
  }
  return result;
}

unint64_t sub_233510DEC()
{
  unint64_t result;

  result = qword_256053E50;
  if (!qword_256053E50)
  {
    result = MEMORY[0x234934494](&unk_2336569C4, &_s11TransactionV15MerchantAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E50);
  }
  return result;
}

unint64_t sub_233510E34()
{
  unint64_t result;

  result = qword_256053E58;
  if (!qword_256053E58)
  {
    result = MEMORY[0x234934494](&unk_2336569EC, &_s11TransactionV15MerchantAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E58);
  }
  return result;
}

unint64_t sub_233510E7C()
{
  unint64_t result;

  result = qword_256053E60;
  if (!qword_256053E60)
  {
    result = MEMORY[0x234934494](&unk_23365690C, &_s11TransactionV19MerchantInformationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E60);
  }
  return result;
}

unint64_t sub_233510EC4()
{
  unint64_t result;

  result = qword_256053E68;
  if (!qword_256053E68)
  {
    result = MEMORY[0x234934494](&unk_233656934, &_s11TransactionV19MerchantInformationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E68);
  }
  return result;
}

unint64_t sub_233510F0C()
{
  unint64_t result;

  result = qword_256053E70;
  if (!qword_256053E70)
  {
    result = MEMORY[0x234934494](&unk_233656854, &_s11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E70);
  }
  return result;
}

unint64_t sub_233510F54()
{
  unint64_t result;

  result = qword_256053E78;
  if (!qword_256053E78)
  {
    result = MEMORY[0x234934494](&unk_23365687C, &_s11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256053E78);
  }
  return result;
}

uint64_t sub_233510F98(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000233677F00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000233677F20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233677F50 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC000000656D614ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEE007265626D754ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEF73736572646441)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_233511244(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x4C73736572646461 && a2 == 0xEB00000000656E69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53724F6574617473 && a2 == 0xEE006E6F69746365 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F50724F70697ALL && a2 == 0xED000065646F4374 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2335114B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F43627573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233511598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233511670(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233511768(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F73727563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_233511928()
{
  unint64_t result;

  result = qword_256053E80;
  if (!qword_256053E80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.TransactionType, &type metadata for RawBankConnectData.Transaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_256053E80);
  }
  return result;
}

unint64_t sub_23351196C()
{
  unint64_t result;

  result = qword_256053E88;
  if (!qword_256053E88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Transaction.Status, &type metadata for RawBankConnectData.Transaction.Status);
    atomic_store(result, (unint64_t *)&qword_256053E88);
  }
  return result;
}

uint64_t sub_2335119B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 160);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 208);
  v8 = *(_QWORD *)(a1 + 216);
  v10 = *(_OWORD *)(a1 + 240);
  v11 = *(_OWORD *)(a1 + 224);
  sub_233270518(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_233270518(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_233511AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Actions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233511B08()
{
  sub_233513544();
  return sub_23361F2D8();
}

uint64_t sub_233511B30()
{
  sub_233513544();
  return sub_23361F2CC();
}

FinanceKit::BankConnectServiceAccountConnectingError::Code_optional __swiftcall BankConnectServiceAccountConnectingError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::BankConnectServiceAccountConnectingError::Code_optional)rawValue;
}

uint64_t BankConnectServiceAccountConnectingError.Code.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::BankConnectServiceAccountConnectingError::Code_optional sub_233511B74(Swift::Int *a1)
{
  return BankConnectServiceAccountConnectingError.Code.init(rawValue:)(*a1);
}

unint64_t static BankConnectServiceAccountConnectingError.errorDomain.getter()
{
  return 0xD000000000000034;
}

uint64_t BankConnectServiceAccountConnectingError.errorCode.getter()
{
  unsigned __int8 v1;

  sub_233511BD0((char *)&v1);
  return v1;
}

void sub_233511BD0(char *a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  id v7;
  char v8;
  id v9;
  id v10;
  __int128 v11;
  char v12;
  id v13;

  v3 = type metadata accessor for FinanceNetworkError();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (_QWORD *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (unint64_t)*v1;
  if (((unint64_t)*v1 & 0x8000000000000000) != 0)
  {
    *(_QWORD *)&v11 = v6 & 0x7FFFFFFFFFFFFFFFLL;
    v9 = (id)(v6 & 0x7FFFFFFFFFFFFFFFLL);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        if (*v5 == 403)
        {
          *a1 = 3;

          return;
        }
      }
      else
      {
        sub_233168500((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      }
    }
    v10 = (id)v11;
  }
  else
  {
    v13 = *v1;
    v7 = (id)v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v12 == 4)
      {
        if (!((unint64_t)v11 ^ 1 | *((_QWORD *)&v11 + 1)))
        {
          v8 = 2;
          goto LABEL_18;
        }
        if (v11 == 0)
        {
          v8 = 1;
LABEL_18:
          *a1 = v8;

          return;
        }
      }
      sub_23318B07C((id)v11, *((uint64_t *)&v11 + 1), v12);
    }
    v10 = v13;
  }

  *a1 = 0;
}

unint64_t BankConnectServiceAccountConnectingError.errorUserInfo.getter()
{
  _QWORD *v0;
  uint64_t inited;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((*v0 & 0x8000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_233623D60;
    v2 = (uint64_t *)(inited + 48);
    *(_QWORD *)(inited + 32) = sub_23361E150();
    *(_QWORD *)(inited + 40) = v6;
    swift_getErrorValue();
    v4 = v11;
    v5 = v12;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_233623D60;
    v2 = (uint64_t *)(inited + 48);
    *(_QWORD *)(inited + 32) = sub_23361E150();
    *(_QWORD *)(inited + 40) = v3;
    swift_getErrorValue();
    v4 = v9;
    v5 = v10;
  }
  *(_QWORD *)(inited + 72) = v5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_0, v4, v5);
  return sub_23315F6D0(inited);
}

unint64_t BankConnectServiceAccountConnectingError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  id v3;
  unint64_t v5;

  v1 = *v0;
  if (*v0 < 0)
  {
    v3 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v5 = 0xD00000000000002CLL;
  }
  else
  {
    v2 = (id)v1;
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v5 = 0xD00000000000002ELL;
  }
  swift_getErrorValue();
  sub_23361F2E4();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_233511F50(v1);
  return v5;
}

void sub_233511F50(uint64_t a1)
{

}

unint64_t sub_233511F58()
{
  return 0xD000000000000034;
}

uint64_t sub_233511F74()
{
  unsigned __int8 v1;

  sub_233511BD0((char *)&v1);
  return v1;
}

uint64_t sub_233511FB8()
{
  sub_233512D64();
  return sub_23361F428();
}

uint64_t sub_233511FE0()
{
  sub_233512D64();
  return sub_23361F434();
}

uint64_t sub_233512008()
{
  sub_233512DA8();
  return sub_23361F428();
}

uint64_t sub_233512030()
{
  sub_233512DA8();
  return sub_23361F434();
}

uint64_t sub_233512058()
{
  sub_233512DEC();
  return sub_23361F428();
}

uint64_t sub_233512080()
{
  sub_233512DEC();
  return sub_23361F434();
}

uint64_t BankConnectAccountConnectionResult.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053E98);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EA0);
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EA8);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v12 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233512D64();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    LOBYTE(v23) = 1;
    sub_233512DA8();
    v13 = v22;
    sub_23361F0C8();
    v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
    sub_23318AF64(&qword_256042870, &qword_256042878, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12A0]);
    v14 = v19;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v14);
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_233512DEC();
    v13 = v22;
    sub_23361F0C8();
    v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
    sub_23318AF64(&qword_256042870, &qword_256042878, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12A0]);
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v13);
}

uint64_t BankConnectAccountConnectionResult.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EC8);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053ED0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053ED8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_233512D64();
  v14 = v39;
  sub_23361F3EC();
  if (!v14)
  {
    v31 = v5;
    v32 = v6;
    v15 = v35;
    v16 = v36;
    v17 = v37;
    v33 = v10;
    v39 = v12;
    v18 = sub_23361F098();
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      v19 = *(_BYTE *)(v18 + 32);
      if ((v19 & 1) != 0)
      {
        LODWORD(v32) = *(unsigned __int8 *)(v18 + 32);
        LOBYTE(v40) = 1;
        sub_233512DA8();
        v20 = v39;
        sub_23361EFA8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
        sub_23318AF64(&qword_2560428A0, &qword_2560428A8, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12D0]);
        sub_23361F068();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v17);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v9);
        v28 = v40;
        v19 = v32;
      }
      else
      {
        LOBYTE(v40) = 0;
        sub_233512DEC();
        sub_23361EFA8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
        sub_23318AF64(&qword_2560428A0, &qword_2560428A8, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12D0]);
        v26 = v31;
        sub_23361F068();
        v27 = v33;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v39, v9);
        v28 = v40;
      }
      v29 = v34;
      *v34 = v28;
      *((_BYTE *)v29 + 8) = v19;
    }
    else
    {
      v21 = sub_23361EE10();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
      *v23 = &type metadata for BankConnectAccountConnectionResult;
      v24 = v39;
      sub_23361EFC0();
      sub_23361EDEC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
}

uint64_t sub_23351279C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return BankConnectAccountConnectionResult.init(from:)(a1, a2);
}

uint64_t sub_2335127B0(_QWORD *a1)
{
  return BankConnectAccountConnectionResult.encode(to:)(a1);
}

uint64_t BankConnectService.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  *(_BYTE *)(v7 + 90) = a6;
  *(_BYTE *)(v7 + 89) = a5;
  *(_QWORD *)(v7 + 112) = a4;
  *(_QWORD *)(v7 + 120) = v6;
  *(_QWORD *)(v7 + 96) = a1;
  *(_QWORD *)(v7 + 104) = a2;
  *(_QWORD *)(v7 + 128) = type metadata accessor for BankConnectService.Message();
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  v9 = a3[1];
  *(_OWORD *)(v7 + 144) = *a3;
  *(_OWORD *)(v7 + 160) = v9;
  return swift_task_switch();
}

uint64_t sub_233512838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD **)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v14 = *(_BYTE *)(v0 + 89);
  v15 = *(_BYTE *)(v0 + 90);
  v7 = *(void **)(v0 + 104);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
  v9 = (uint64_t)v5 + v8[16];
  v10 = v8[20];
  v11 = v8[24];
  *v5 = v7;
  v5[1] = v4;
  v5[2] = v3;
  v5[3] = v1;
  v5[4] = v2;
  sub_23318C604(v6, v9);
  *((_BYTE *)v5 + v10) = v14;
  *((_BYTE *)v5 + v11) = v15;
  swift_storeEnumTagMultiPayload();
  v12 = v7;
  sub_2332DCF40(v4, v3);
  return swift_task_switch();
}

uint64_t sub_233512920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_233512988;
  v2 = swift_continuation_init();
  sub_233298D24(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_233512988()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 184) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 136);
    v5 = *(_QWORD *)(v1 + 96);
    v6 = *(_BYTE *)(v1 + 88);
    *(_QWORD *)v5 = *(_QWORD *)(v1 + 80);
    *(_BYTE *)(v5 + 8) = v6;
    sub_233168500(v4, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_233512A34()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.connectUnlinkedAccounts(institution:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[11] = a1;
  v2[12] = v1;
  v2[13] = type metadata accessor for BankConnectService.Message();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233512AD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v2 = v0[11];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  sub_23318C604(v2, v1);
  swift_storeEnumTagMultiPayload();
  return swift_task_switch();
}

uint64_t sub_233512B34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_233512B98;
  v2 = swift_continuation_init();
  sub_233298E68(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_233512B98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 128) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 80);
    sub_233168500(*(_QWORD *)(v1 + 112), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_233512C38()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233512C80(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_2331676FC;
  return BankConnectService.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_233512D14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_233160FEC;
  return BankConnectService.connectUnlinkedAccounts(institution:)(a1);
}

unint64_t sub_233512D64()
{
  unint64_t result;

  result = qword_256053EB0;
  if (!qword_256053EB0)
  {
    result = MEMORY[0x234934494](&unk_23365768C, &type metadata for BankConnectAccountConnectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053EB0);
  }
  return result;
}

unint64_t sub_233512DA8()
{
  unint64_t result;

  result = qword_256053EB8;
  if (!qword_256053EB8)
  {
    result = MEMORY[0x234934494](&unk_23365763C, &type metadata for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053EB8);
  }
  return result;
}

unint64_t sub_233512DEC()
{
  unint64_t result;

  result = qword_256053EC0;
  if (!qword_256053EC0)
  {
    result = MEMORY[0x234934494](&unk_2336575EC, &type metadata for BankConnectAccountConnectionResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053EC0);
  }
  return result;
}

unint64_t sub_233512E34()
{
  unint64_t result;

  result = qword_256053EF8;
  if (!qword_256053EF8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceAccountConnectingError.Code, &type metadata for BankConnectServiceAccountConnectingError.Code);
    atomic_store(result, (unint64_t *)&qword_256053EF8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectServiceAccountConnectingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_233512EAC(*a2);
  *a1 = v3;
  return a1;
}

id sub_233512EAC(uint64_t a1)
{
  return (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void destroy for BankConnectServiceAccountConnectingError(uint64_t *a1)
{
  sub_233511F50(*a1);
}

uint64_t *assignWithCopy for BankConnectServiceAccountConnectingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  sub_233512EAC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_233511F50(v4);
  return a1;
}

uint64_t *assignWithTake for BankConnectServiceAccountConnectingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_233511F50(v3);
  return a1;
}

ValueMetadata *type metadata accessor for BankConnectServiceAccountConnectingError()
{
  return &type metadata for BankConnectServiceAccountConnectingError;
}

uint64_t storeEnumTagSinglePayload for BankConnectServiceAccountConnectingError.Code(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233512F80 + 4 * byte_2336570A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233512FB4 + 4 * byte_2336570A0[v4]))();
}

uint64_t sub_233512FB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233512FBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233512FC4);
  return result;
}

uint64_t sub_233512FD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233512FD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233512FDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233512FE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectServiceAccountConnectingError.Code()
{
  return &type metadata for BankConnectServiceAccountConnectingError.Code;
}

ValueMetadata *type metadata accessor for BankConnectAccountConnectionResult()
{
  return &type metadata for BankConnectAccountConnectionResult;
}

uint64_t dispatch thunk of BankConnectConnectionAccountConnecting.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 8) + *(_QWORD *)(a8 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_2331676FC;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of BankConnectConnectionAccountConnecting.connectUnlinkedAccounts(institution:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331D7608;
  return v9(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for BankConnectAccountConnectionResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23351318C + 4 * byte_2336570AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2335131C0 + 4 * byte_2336570AA[v4]))();
}

uint64_t sub_2335131C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335131C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335131D0);
  return result;
}

uint64_t sub_2335131DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335131E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2335131E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335131F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAccountConnectionResult.CodingKeys()
{
  return &type metadata for BankConnectAccountConnectionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectAccountConnectionResult.SuccessCodingKeys()
{
  return &type metadata for BankConnectAccountConnectionResult.SuccessCodingKeys;
}

uint64_t _s10FinanceKit34BankConnectAccountConnectionResultO17SuccessCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233513260 + 4 * byte_2336570B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233513280 + 4 * byte_2336570B9[v4]))();
}

_BYTE *sub_233513260(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233513280(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233513288(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233513290(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233513298(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335132A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys()
{
  return &type metadata for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys;
}

unint64_t sub_2335132C0()
{
  unint64_t result;

  result = qword_256053F20;
  if (!qword_256053F20)
  {
    result = MEMORY[0x234934494](&unk_233657454, &type metadata for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F20);
  }
  return result;
}

unint64_t sub_233513308()
{
  unint64_t result;

  result = qword_256053F28;
  if (!qword_256053F28)
  {
    result = MEMORY[0x234934494](&unk_23365750C, &type metadata for BankConnectAccountConnectionResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F28);
  }
  return result;
}

unint64_t sub_233513350()
{
  unint64_t result;

  result = qword_256053F30;
  if (!qword_256053F30)
  {
    result = MEMORY[0x234934494](&unk_2336575C4, &type metadata for BankConnectAccountConnectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F30);
  }
  return result;
}

unint64_t sub_233513398()
{
  unint64_t result;

  result = qword_256053F38;
  if (!qword_256053F38)
  {
    result = MEMORY[0x234934494](&unk_23365747C, &type metadata for BankConnectAccountConnectionResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F38);
  }
  return result;
}

unint64_t sub_2335133E0()
{
  unint64_t result;

  result = qword_256053F40;
  if (!qword_256053F40)
  {
    result = MEMORY[0x234934494](&unk_2336574A4, &type metadata for BankConnectAccountConnectionResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F40);
  }
  return result;
}

unint64_t sub_233513428()
{
  unint64_t result;

  result = qword_256053F48;
  if (!qword_256053F48)
  {
    result = MEMORY[0x234934494](&unk_2336573C4, &type metadata for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F48);
  }
  return result;
}

unint64_t sub_233513470()
{
  unint64_t result;

  result = qword_256053F50;
  if (!qword_256053F50)
  {
    result = MEMORY[0x234934494](&unk_2336573EC, &type metadata for BankConnectAccountConnectionResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F50);
  }
  return result;
}

unint64_t sub_2335134B8()
{
  unint64_t result;

  result = qword_256053F58;
  if (!qword_256053F58)
  {
    result = MEMORY[0x234934494](&unk_233657534, &type metadata for BankConnectAccountConnectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F58);
  }
  return result;
}

unint64_t sub_233513500()
{
  unint64_t result;

  result = qword_256053F60;
  if (!qword_256053F60)
  {
    result = MEMORY[0x234934494](&unk_23365755C, &type metadata for BankConnectAccountConnectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F60);
  }
  return result;
}

unint64_t sub_233513544()
{
  unint64_t result;

  result = qword_256053F68;
  if (!qword_256053F68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceAccountConnectingError, &type metadata for BankConnectServiceAccountConnectingError);
    atomic_store(result, (unint64_t *)&qword_256053F68);
  }
  return result;
}

uint64_t RawOrderShippingStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2335135B4 + 4 * byte_2336576E0[*v0]))(1852141679, 0xE400000000000000);
}

uint64_t sub_2335135B4()
{
  return 0x69737365636F7270;
}

uint64_t sub_2335135D0()
{
  return 0x64657070696873;
}

uint64_t sub_2335135E8()
{
  return 0x7961576568546E6FLL;
}

uint64_t sub_233513600()
{
  return 0x6544726F4674756FLL;
}

uint64_t sub_233513624()
{
  return 0x65726576696C6564;
}

uint64_t RawOrderShippingFulfillment.init(fulfillmentIdentifier:status:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  _BYTE v19[152];

  v7 = *a3;
  v8 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  v9 = a4 + v8[11];
  v10 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a4 + v8[12];
  sub_233371928((uint64_t)v19);
  sub_233371950((uint64_t)v19, v11);
  v12 = a4 + v8[13];
  v13 = sub_23361D634();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v15 = a4 + v8[14];
  v16 = type metadata accessor for Duration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v14(a4 + v8[15], 1, 1, v13);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(a4 + v8[17], 1, 1, v13);
  v18 = (_QWORD *)(a4 + v8[16]);
  *v18 = a1;
  v18[1] = a2;
  *(_BYTE *)(a4 + 40) = v7;
  *(_QWORD *)a4 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a4 + v8[18]) = 0;
  return result;
}

uint64_t type metadata accessor for RawOrderShippingFulfillment()
{
  uint64_t result;

  result = qword_2542460C0;
  if (!qword_2542460C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawOrderShippingFulfillment.setEstimatedDeliveryWindowDuration(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  v7 = type metadata accessor for Duration();
  v8 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 0, 1, v7);
  v9 = type metadata accessor for RawOrderShippingFulfillment();
  sub_233518C64((uint64_t)v6, v1 + *(int *)(v9 + 52));
  result = sub_233168608((uint64_t)v6, &qword_25604A478);
  if (!v2)
  {
    v11 = v1 + *(int *)(v9 + 56);
    sub_233168608(v11, &qword_25604A478);
    sub_2331684BC(a1, v11, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(v11, 0, 1, v7);
  }
  return result;
}

__n128 RawOrderShippingRecipient.init(familyName:givenName:organizationName:address:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;

  v8 = *(_QWORD *)(a7 + 96);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  v9 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 48) = *(_OWORD *)a7;
  *(_OWORD *)(a8 + 64) = v9;
  v10 = *(_OWORD *)(a7 + 48);
  *(_OWORD *)(a8 + 80) = *(_OWORD *)(a7 + 32);
  *(_OWORD *)(a8 + 96) = v10;
  result = *(__n128 *)(a7 + 64);
  v12 = *(_OWORD *)(a7 + 80);
  *(__n128 *)(a8 + 112) = result;
  *(_OWORD *)(a8 + 128) = v12;
  *(_QWORD *)(a8 + 144) = v8;
  return result;
}

uint64_t RawOrderShippingFulfillment.estimatedDeliveryWindow.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v24 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Duration();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v23 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for RawOrderShippingFulfillment();
  sub_2331686A0(v1 + *(int *)(v15 + 52), (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
    v16 = type metadata accessor for Order.FulfillmentWindow(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v24, 1, 1, v16);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
    sub_2331686A0(v1 + *(int *)(v15 + 56), (uint64_t)v4, &qword_25604A478);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_233168608((uint64_t)v4, &qword_25604A478);
      v19 = v24;
      v18(v24, v14, v11);
    }
    else
    {
      v21 = v23;
      sub_233168580((uint64_t)v4, v23, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      v19 = v24;
      v18(v24, v14, v11);
      v22 = type metadata accessor for TimeWindow(0);
      sub_233168580(v21, (uint64_t)&v19[*(int *)(v22 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    }
    v20 = type metadata accessor for Order.FulfillmentWindow(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  }
}

uint64_t RawOrderShippingFulfillment.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  _QWORD *v119;
  char v120;
  char v121;
  _BYTE v122[152];
  uint64_t v123[19];
  _QWORD v124[19];
  _BYTE v125[176];

  v117 = a2;
  v119 = a1;
  v98 = a3;
  v105 = sub_23361EE10();
  v95 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v99 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23361EE04();
  v81 = *(_QWORD *)(v83 - 8);
  v4 = MEMORY[0x24BDAC7A8](v83);
  v80 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v82 = (char *)&v78 - v6;
  v7 = sub_23361D748();
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v87 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D868();
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v90 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Duration();
  v11 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v93 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v94 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v85 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v102 = (uint64_t)&v78 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v86 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v96 = (uint64_t)&v78 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v100 = (uint64_t)&v78 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v101 = (uint64_t)&v78 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v103 = (uint64_t)&v78 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v30);
  v104 = (uint64_t)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053F70);
  v106 = *(_QWORD *)(v32 - 8);
  v107 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (int *)type metadata accessor for RawOrderShippingFulfillment();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (_OWORD *)((char *)&v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_OWORD *)((char *)v38 + 24) = 0u;
  *(_OWORD *)((char *)v38 + 8) = 0u;
  v38[3] = 0u;
  v38[4] = 0u;
  v38[5] = 0u;
  v39 = (uint64_t)v38 + *(int *)(v36 + 44);
  v40 = sub_23361D340();
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v116 = v39;
  v41(v39, 1, 1, v40);
  v42 = (uint64_t)v38 + v35[12];
  sub_233371928((uint64_t)v125);
  v115 = v42;
  sub_233371950((uint64_t)v125, v42);
  v43 = v35[13];
  v97 = v14;
  v44 = *(void (**)(void))(v14 + 56);
  v114 = (uint64_t)v38 + v43;
  v44();
  v45 = (uint64_t)v38 + v35[14];
  v84 = v11;
  v46 = *(void (**)(void))(v11 + 56);
  v112 = v45;
  v46();
  v111 = (uint64_t)v38 + v35[15];
  v44();
  v108 = v35;
  v47 = v35[17];
  v118 = v38;
  v110 = (uint64_t)v38 + v47;
  v44();
  __swift_project_boxed_opaque_existential_1(v119, v119[3]);
  sub_233518FF4();
  v48 = v109;
  sub_23361F3EC();
  if (v48)
  {
    swift_release();
    v49 = 0;
  }
  else
  {
    v109 = v40;
    v79 = v13;
    LOBYTE(v124[0]) = 12;
    v51 = sub_23361F02C();
    v53 = v52;
    v78 = v34;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v54 = sub_233308400(v123, v51, v53);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v55 = (uint64_t)v118;
    if ((v54 & 1) != 0)
    {
      v56 = (uint64_t *)((char *)v118 + v108[16]);
      *v56 = v51;
      v56[1] = v53;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
      LOBYTE(v123[0]) = 0;
      sub_23330A8EC(&qword_256049D58, (uint64_t (*)(void))sub_23330A864, MEMORY[0x24BEE12D0]);
      sub_23361EFFC();
      v59 = MEMORY[0x24BEE4AF8];
      if (v124[0])
        v59 = v124[0];
      *(_QWORD *)v55 = v59;
      LOBYTE(v124[0]) = 1;
      *(_QWORD *)(v55 + 8) = sub_23361EFCC();
      *(_QWORD *)(v55 + 16) = v60;
      LOBYTE(v124[0]) = 2;
      *(_QWORD *)(v55 + 24) = sub_23361EFCC();
      *(_QWORD *)(v55 + 32) = v61;
      LOBYTE(v123[0]) = 3;
      sub_233519038();
      sub_23361F068();
      *(_BYTE *)(v55 + 40) = v124[0];
      LOBYTE(v124[0]) = 4;
      *(_QWORD *)(v55 + 48) = sub_23361EFCC();
      *(_QWORD *)(v55 + 56) = v62;
      LOBYTE(v124[0]) = 5;
      *(_QWORD *)(v55 + 64) = sub_23361EFCC();
      *(_QWORD *)(v55 + 72) = v63;
      LOBYTE(v124[0]) = 6;
      *(_QWORD *)(v55 + 80) = sub_23361EFCC();
      *(_QWORD *)(v55 + 88) = v64;
      LOBYTE(v124[0]) = 7;
      sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
      sub_23361EFFC();
      sub_233170B8C(v104, v116, &qword_254248700);
      v125[175] = 8;
      sub_23351907C();
      sub_23361EFFC();
      sub_233371950((uint64_t)v124, (uint64_t)v122);
      v65 = v115;
      sub_233371950(v115, (uint64_t)v123);
      sub_2335191D0(v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2333719F8);
      sub_233371950((uint64_t)v122, v65);
      v121 = 9;
      sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
      sub_23361EFFC();
      sub_233170B8C(v103, v114, (uint64_t *)&unk_254247DA0);
      v121 = 10;
      sub_233167C58(&qword_254244EF0, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
      sub_23361EFFC();
      sub_233170B8C(v102, v112, &qword_25604A478);
      v121 = 11;
      sub_23361EFFC();
      sub_233170B8C(v101, v111, (uint64_t *)&unk_254247DA0);
      v121 = 13;
      sub_23361EFFC();
      sub_233170B8C(v100, v110, (uint64_t *)&unk_254247DA0);
      v120 = 14;
      sub_2335190C0();
      sub_23361EFFC();
      *((_BYTE *)v118 + v108[18]) = v121 & 1;
      v66 = v96;
      sub_2331686A0(v114, v96, (uint64_t *)&unk_254247DA0);
      v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
      if (v67(v66, 1, v79) == 1)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v106 + 8))(v78, v107);
        sub_233168608(v96, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v94, v96, v79);
        v68 = v85;
        sub_2331686A0(v112, v85, &qword_25604A478);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v68, 1, v113) == 1)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v79);
          (*(void (**)(char *, uint64_t))(v106 + 8))(v78, v107);
          sub_233168608(v85, &qword_25604A478);
        }
        else
        {
          sub_233168580(v85, v93, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
          v70 = v87;
          v69 = v88;
          v71 = v89;
          (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v87, *MEMORY[0x24BDCEF50], v89);
          v72 = v90;
          sub_23361D754();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
          v73 = (uint64_t)v86;
          sub_23361D808();
          v74 = v67(v73, 1, v79);
          sub_233168608(v73, (uint64_t *)&unk_254247DA0);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v72, v92);
          if (v74 == 1)
          {
            v121 = 10;
            swift_allocError();
            sub_2331B1A14(&qword_256053F80, &qword_256053F70, MEMORY[0x24BEE33F8]);
            v75 = v78;
            v76 = v107;
            sub_23361EDE0();
            swift_willThrow();
            swift_release();
            sub_233168500(v93, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v79);
            (*(void (**)(char *, uint64_t))(v106 + 8))(v75, v76);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
            swift_bridgeObjectRelease();
            v49 = 1;
            goto LABEL_5;
          }
          swift_release();
          sub_233168500(v93, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
          (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v79);
          (*(void (**)(char *, uint64_t))(v106 + 8))(v78, v107);
        }
      }
      v77 = (uint64_t)v118;
      sub_2331684BC((uint64_t)v118, v98, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
      return sub_233168500(v77, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    }
    swift_bridgeObjectRelease();
    LOBYTE(v124[0]) = 12;
    swift_allocError();
    sub_2331B1A14(&qword_256053F80, &qword_256053F70, MEMORY[0x24BEE33F8]);
    v57 = v78;
    v58 = v107;
    sub_23361EDE0();
    swift_willThrow();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v57, v58);
    v49 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v119);
LABEL_5:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233168608(v116, &qword_254248700);
  sub_233371950(v115, (uint64_t)v124);
  sub_2335191D0(v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2333719F8);
  sub_233168608(v114, (uint64_t *)&unk_254247DA0);
  sub_233168608(v112, &qword_25604A478);
  sub_233168608(v111, (uint64_t *)&unk_254247DA0);
  if (v49)
    swift_bridgeObjectRelease();
  return sub_233168608(v110, (uint64_t *)&unk_254247DA0);
}

