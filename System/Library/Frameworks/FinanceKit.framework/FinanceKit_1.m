unint64_t sub_2331E9D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256045060;
  if (!qword_256045060)
  {
    v1 = sub_23361D634();
    result = MEMORY[0x234934494](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_256045060);
  }
  return result;
}

uint64_t sub_2331E9D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Institution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2331E9DBC()
{
  unint64_t result;

  result = qword_256045068;
  if (!qword_256045068)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedInstitutionMatchingResponseError, &type metadata for ManagedInstitutionMatchingResponseError);
    atomic_store(result, (unint64_t *)&qword_256045068);
  }
  return result;
}

char *keypath_get_selector_expiration()
{
  return sel_expiration;
}

void sub_2331E9E10(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setExpiration_, v3);

}

char *keypath_get_selector_passSerial()
{
  return sel_passSerial;
}

void sub_2331E9E68(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCF9E0], (SEL *)&selRef_setPassSerial_);
}

char *keypath_get_selector_institutionsResponseData()
{
  return sel_institutionsResponseData;
}

void sub_2331E9E8C(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCDCA0], (SEL *)&selRef_setInstitutionsResponseData_);
}

void keypath_set_2Tm(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), SEL *a6)
{
  void *v7;
  id v8;

  v7 = *a2;
  v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);

}

char *keypath_get_selector_linkable()
{
  return sel_linkable;
}

id sub_2331E9EFC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_linkable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2331E9F2C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLinkable_, *a1);
}

uint64_t storeEnumTagSinglePayload for ManagedInstitutionMatchingResponseError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331E9F80 + 4 * byte_23362B220[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331E9FA0 + 4 * byte_23362B225[v4]))();
}

_BYTE *sub_2331E9F80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331E9FA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331E9FA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331E9FB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331E9FB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331E9FC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManagedInstitutionMatchingResponseError()
{
  return &type metadata for ManagedInstitutionMatchingResponseError;
}

uint64_t type metadata accessor for ManagedInstitutionMatchingResponse()
{
  return objc_opt_self();
}

uint64_t sub_2331E9FFC(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned __int16 *v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  id v91;

  v3 = (int *)type metadata accessor for MapsMerchant();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v78 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v78 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v78 - v19;
  v21 = 0;
  v22 = (unsigned __int16 *)(a1 + v3[11]);
  v23 = *((_BYTE *)v22 + 2);
  if ((v23 & 1) != 0)
    goto LABEL_7;
  v21 = *v22;
  if ((v21 & 0x8000) == 0)
  {
    if ((*(_BYTE *)(a1 + 12) & 1) == 0)
    {
      v87 = v11;
      v88 = v1;
      if (*(_QWORD *)(a1 + 24))
      {
        v86 = v21;
        v24 = *(_DWORD *)(a1 + 8);
        v83 = *(_QWORD *)a1;
        swift_bridgeObjectRetain();
        v84 = sub_23361E12C();
        swift_bridgeObjectRelease();
        v25 = *(_QWORD *)(a1 + 40);
        v85 = v24;
        if (v25)
        {
          swift_bridgeObjectRetain();
          v82 = sub_23361E12C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v82 = 0;
        }
        v43 = a1;
        sub_2331686A0(a1 + v3[8], (uint64_t)v20, &qword_254248700);
        v44 = sub_23361D340();
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        v47 = 0;
        if (v46(v20, 1, v44) != 1)
        {
          v47 = sub_23361D268();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
        }
        sub_2331686A0(v43 + v3[9], (uint64_t)v18, &qword_254248700);
        v48 = v46(v18, 1, v44);
        v81 = (void *)v47;
        if (v48 == 1)
        {
          v80 = 0;
        }
        else
        {
          v80 = sub_23361D268();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v44);
        }
        if (*(_QWORD *)(v43 + v3[10] + 8))
        {
          swift_bridgeObjectRetain();
          v78 = sub_23361E12C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v78 = 0;
        }
        if (*(_QWORD *)(v43 + v3[12] + 8))
        {
          swift_bridgeObjectRetain();
          v49 = sub_23361E12C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v49 = 0;
        }
        v50 = v43 + v3[13];
        v51 = *(_QWORD *)(v50 + 8);
        if (v51 >> 60 == 15)
        {
          v79 = 0;
        }
        else
        {
          v52 = v45;
          v53 = *(_QWORD *)v50;
          sub_2331D1374(*(_QWORD *)v50, *(_QWORD *)(v50 + 8));
          v79 = sub_23361D3AC();
          v54 = v53;
          v45 = v52;
          sub_2331B04E8(v54, v51);
        }
        sub_2331686A0(v43 + v3[14], (uint64_t)v15, &qword_254248700);
        if (v46(v15, 1, v44) == 1)
        {
          v55 = 0;
        }
        else
        {
          v55 = sub_23361D268();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v44);
        }
        v56 = v87;
        v57 = v43;
        sub_2331686A0(v43 + v3[15], (uint64_t)v87, (uint64_t *)&unk_254247DA0);
        v58 = sub_23361D634();
        v59 = *(_QWORD *)(v58 - 8);
        v60 = 0;
        if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v59 + 48))(v56, 1, v58) != 1)
        {
          v60 = (void *)sub_23361D5B0();
          (*(void (**)(id, uint64_t))(v59 + 8))(v56, v58);
        }
        v61 = v57 + v3[17];
        if ((*(_BYTE *)(v61 + 8) & 1) != 0 || (v62 = v57 + v3[18], (*(_BYTE *)(v62 + 8) & 1) != 0))
          v63 = 0;
        else
          v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, *(double *)v61, *(double *)v62);
        v87 = v63;
        v64 = *(_QWORD *)(v57 + v3[19]);
        v65 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        v76 = v63;
        v77 = v64;
        v75 = v55;
        v66 = (void *)v55;
        v67 = (void *)v79;
        v74 = v49;
        v68 = (void *)v84;
        v70 = v81;
        v69 = (void *)v82;
        v88 = v57;
        v71 = (void *)v49;
        v72 = (void *)v78;
        v73 = (void *)v80;
        v41 = objc_msgSend(v65, sel_initWithMUID_resultProviderIdentifier_name_phoneNumber_url_heroImageURL_heroImageAttributionName_category_mapsCategoryIdentifier_encodedStylingInfo_businessChatURL_lastProcessedDate_location_postalAddress_, v83, v85, v84, v82, v81, v80, v78, v86, v74, v79, v75, v60, v76, v77);

        sub_2331EB3E4(v88);
        return (uint64_t)v41;
      }
    }
LABEL_7:
    v26 = v21;
    if (qword_256041CA0 != -1)
      swift_once();
    v27 = sub_23361DB80();
    __swift_project_value_buffer(v27, (uint64_t)qword_2560495B0);
    sub_2331EB3A0(a1, (uint64_t)v8);
    sub_2331EB3A0(a1, (uint64_t)v6);
    v28 = sub_23361DB68();
    v29 = sub_23361E768();
    if (os_log_type_enabled(v28, v29))
    {
      v88 = a1;
      v30 = swift_slowAlloc();
      v87 = (id)swift_slowAlloc();
      v91 = v87;
      *(_DWORD *)v30 = 136315650;
      v89 = v26;
      v90 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256045070);
      v31 = sub_23361EB94();
      v89 = sub_233164DCC(v31, v32, (uint64_t *)&v91);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      if ((v8[12] & 1) != 0)
      {
        v33 = 0xE300000000000000;
        v34 = 7104878;
      }
      else
      {
        LODWORD(v89) = *((_DWORD *)v8 + 2);
        sub_2331EB420();
        v34 = sub_23361EC18();
        v33 = v36;
      }
      v89 = sub_233164DCC(v34, v33, (uint64_t *)&v91);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_2331EB3E4((uint64_t)v8);
      *(_WORD *)(v30 + 22) = 2080;
      if (*((_QWORD *)v6 + 3))
      {
        v37 = *((_QWORD *)v6 + 2);
        v38 = *((_QWORD *)v6 + 3);
        v39 = v88;
      }
      else
      {
        v38 = 0xE300000000000000;
        v39 = v88;
        v37 = 7104878;
      }
      swift_bridgeObjectRetain();
      v89 = sub_233164DCC(v37, v38, (uint64_t *)&v91);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_2331EB3E4((uint64_t)v6);
      _os_log_impl(&dword_233151000, v28, v29, "Failed to initialize FKMapsMerchant because a field was missing. Values:\n- category: %s,\n- resultProviderIdentifier: %s,\n- name: %s.", (uint8_t *)v30, 0x20u);
      v40 = v87;
      swift_arrayDestroy();
      MEMORY[0x234934590](v40, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);

      v35 = v39;
    }
    else
    {

      sub_2331EB3E4((uint64_t)v6);
      sub_2331EB3E4((uint64_t)v8);
      v35 = a1;
    }
    sub_2331EB3E4(v35);
    return 0;
  }
  result = sub_23361EF18();
  __break(1u);
  return result;
}

void MapsMerchant.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _WORD *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void *v69;
  char *v70;
  char *v71;
  _WORD *v72;
  uint64_t *v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(void);

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v70 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v82 = (char *)&v70 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v70 - v11;
  v13 = (int *)type metadata accessor for MapsMerchant();
  v14 = a2 + v13[8];
  v15 = sub_23361D340();
  v16 = *(void (**)(void))(*(_QWORD *)(v15 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  v81 = a2 + v13[9];
  v16();
  v17 = (uint64_t *)(a2 + v13[10]);
  *v17 = 0;
  v17[1] = 0;
  v18 = a2 + v13[11];
  *(_WORD *)v18 = 0;
  v72 = (_WORD *)v18;
  *(_BYTE *)(v18 + 2) = 1;
  v19 = (uint64_t *)(a2 + v13[12]);
  *v19 = 0;
  v19[1] = 0;
  v73 = v19;
  *(_OWORD *)(a2 + v13[13]) = xmmword_23362B360;
  v74 = a2 + v13[14];
  v83 = v16;
  v16();
  v20 = a2 + v13[15];
  v21 = sub_23361D634();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v78 = v20;
  v75 = v22;
  v76 = v21;
  ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v20, 1, 1);
  v23 = a2 + v13[17];
  *(_QWORD *)v23 = 0;
  v77 = (_QWORD *)v23;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = a2 + v13[18];
  *(_QWORD *)v24 = 0;
  v79 = (_QWORD *)v24;
  *(_BYTE *)(v24 + 8) = 1;
  v80 = v13[19];
  *(_QWORD *)(a2 + v80) = 0;
  *(_QWORD *)a2 = objc_msgSend(a1, sel_identifier);
  *(_DWORD *)(a2 + 8) = objc_msgSend(a1, sel_resultProviderIdentifier);
  *(_BYTE *)(a2 + 12) = 0;
  v25 = objc_msgSend(a1, sel_name);
  if (v25)
  {
    v26 = v25;
    v27 = sub_23361E150();
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v29;
  v30 = objc_msgSend(a1, sel_phoneNumber);
  if (v30)
  {
    v31 = v30;
    v32 = sub_23361E150();
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  *(_QWORD *)(a2 + 32) = v32;
  *(_QWORD *)(a2 + 40) = v34;
  v35 = objc_msgSend(a1, "url");
  if (v35)
  {
    v36 = v35;
    sub_23361D2D4();

    v37 = 0;
  }
  else
  {
    v37 = 1;
  }
  v38 = (uint64_t)v82;
  v39 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v83)(v12, v37, 1, v15);
  sub_233170B8C((uint64_t)v12, v14, &qword_254248700);
  v40 = objc_msgSend(a1, sel_heroImageURL);
  if (v40)
  {
    v41 = v40;
    sub_23361D2D4();

    v39 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83)(v38, v39, 1, v15);
  sub_233170B8C(v38, v81, &qword_254248700);
  v42 = objc_msgSend(a1, sel_heroImageAttributionName);
  if (v42)
  {
    v43 = v42;
    v44 = sub_23361E150();
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  swift_bridgeObjectRelease();
  *v17 = v44;
  v17[1] = v46;
  v47 = (uint64_t)objc_msgSend(a1, sel_category);
  if (v47 < -32768)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v47 >= 0x8000)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v48 = v72;
  *v72 = v47;
  *((_BYTE *)v48 + 2) = 0;
  v49 = objc_msgSend(a1, sel_detailedCategory);
  if (v49)
  {
    v50 = v49;
    v51 = sub_23361E150();
    v53 = v52;

  }
  else
  {
    v51 = 0;
    v53 = 0;
  }
  v54 = (uint64_t)v70;
  v55 = v73;
  swift_bridgeObjectRelease();
  *v55 = v51;
  v55[1] = v53;
  v56 = objc_msgSend(a1, sel_businessChatURL);
  if (v56)
  {
    v57 = v56;
    sub_23361D2D4();

    v58 = 0;
  }
  else
  {
    v58 = 1;
  }
  v59 = (uint64_t)v71;
  v60 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83)(v54, v58, 1, v15);
  sub_233170B8C(v54, v74, &qword_254248700);
  v61 = objc_msgSend(a1, sel_lastProcessedDate);
  if (v61)
  {
    v62 = v61;
    sub_23361D5EC();

    v60 = 0;
  }
  v75(v59, v60, 1, v76);
  sub_233170B8C(v59, v78, (uint64_t *)&unk_254247DA0);
  objc_msgSend(a1, sel_locationLatitude);
  v63 = v77;
  *v77 = v64;
  *((_BYTE *)v63 + 8) = 0;
  objc_msgSend(a1, sel_locationLongitude);
  v65 = v79;
  *v79 = v66;
  *((_BYTE *)v65 + 8) = 0;
  *(_BYTE *)(a2 + v13[16]) = 0;
  v67 = objc_msgSend(a1, sel_postalAddress);
  v68 = v80;
  v69 = *(void **)(a2 + v80);

  *(_QWORD *)(a2 + v68) = v67;
}

void sub_2331EAD98(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _WORD *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  id v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  _WORD *v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(void);

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v93 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v95 = (char *)&v81 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v81 - v11;
  v13 = (int *)type metadata accessor for MapsMerchant();
  v14 = a2 + v13[8];
  v15 = sub_23361D340();
  v16 = *(void (**)(void))(*(_QWORD *)(v15 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  v94 = a2 + v13[9];
  v16();
  v17 = (uint64_t *)(a2 + v13[10]);
  *v17 = 0;
  v17[1] = 0;
  v18 = a2 + v13[11];
  *(_WORD *)v18 = 0;
  v82 = (_WORD *)v18;
  *(_BYTE *)(v18 + 2) = 1;
  v19 = (uint64_t *)(a2 + v13[12]);
  *v19 = 0;
  v19[1] = 0;
  v83 = v19;
  v20 = (uint64_t *)(a2 + v13[13]);
  *(_OWORD *)v20 = xmmword_23362B360;
  v21 = v13[14];
  v84 = v20;
  v85 = a2 + v21;
  v96 = v16;
  v16();
  v22 = a2 + v13[15];
  v23 = sub_23361D634();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v87 = v23;
  v88 = v22;
  v86 = v24;
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v22, 1, 1);
  v25 = a2 + v13[17];
  *(_QWORD *)v25 = 0;
  v89 = (_QWORD *)v25;
  *(_BYTE *)(v25 + 8) = 1;
  v26 = a2 + v13[18];
  *(_QWORD *)v26 = 0;
  v91 = (_QWORD *)v26;
  *(_BYTE *)(v26 + 8) = 1;
  v92 = v13[19];
  *(_QWORD *)(a2 + v92) = 0;
  *(_QWORD *)a2 = objc_msgSend(a1, sel_muid);
  *(_DWORD *)(a2 + 8) = objc_msgSend(a1, sel_resultProviderIdentifier);
  *(_BYTE *)(a2 + 12) = 0;
  v27 = objc_msgSend(a1, sel_name);
  v28 = sub_23361E150();
  v30 = v29;

  *(_QWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v30;
  v31 = objc_msgSend(a1, sel_phoneNumber);
  if (v31)
  {
    v32 = v31;
    v33 = sub_23361E150();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  *(_QWORD *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v35;
  v36 = objc_msgSend(a1, "url");
  if (v36)
  {
    v37 = v36;
    sub_23361D2D4();

    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  v39 = (uint64_t)v95;
  v40 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v96)(v12, v38, 1, v15);
  sub_233170B8C((uint64_t)v12, v14, &qword_254248700);
  v41 = objc_msgSend(a1, sel_heroImageURL);
  if (v41)
  {
    v42 = v41;
    sub_23361D2D4();

    v40 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v96)(v39, v40, 1, v15);
  sub_233170B8C(v39, v94, &qword_254248700);
  v43 = objc_msgSend(a1, sel_heroImageAttributionName);
  if (v43)
  {
    v44 = v43;
    v45 = sub_23361E150();
    v47 = v46;

  }
  else
  {
    v45 = 0;
    v47 = 0;
  }
  swift_bridgeObjectRelease();
  *v17 = v45;
  v17[1] = v47;
  v48 = (unint64_t)objc_msgSend(a1, sel_category);
  if (v48 >> 15)
  {
    __break(1u);
  }
  else
  {
    v49 = v82;
    *v82 = v48;
    *((_BYTE *)v49 + 2) = 0;
    v50 = objc_msgSend(a1, sel_mapsCategoryIdentifier);
    if (v50)
    {
      v51 = v50;
      v52 = sub_23361E150();
      v54 = v53;

    }
    else
    {
      v52 = 0;
      v54 = 0;
    }
    v55 = v83;
    swift_bridgeObjectRelease();
    *v55 = v52;
    v55[1] = v54;
    v56 = objc_msgSend(a1, sel_encodedStylingInfo);
    if (v56)
    {
      v57 = v56;
      v58 = sub_23361D3C4();
      v60 = v59;

    }
    else
    {
      v58 = 0;
      v60 = 0xF000000000000000;
    }
    v61 = (uint64_t)v90;
    v62 = v84;
    sub_2331B04E8(*v84, v84[1]);
    *v62 = v58;
    v62[1] = v60;
    v63 = objc_msgSend(a1, sel_businessChatURL);
    if (v63)
    {
      v64 = v63;
      sub_23361D2D4();

      v65 = 0;
    }
    else
    {
      v65 = 1;
    }
    v66 = (uint64_t)v93;
    v67 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v96)(v61, v65, 1, v15);
    sub_233170B8C(v61, v85, &qword_254248700);
    v68 = objc_msgSend(a1, sel_lastProcessedDate);
    if (v68)
    {
      v69 = v68;
      sub_23361D5EC();

      v67 = 0;
    }
    v86(v66, v67, 1, v87);
    sub_233170B8C(v66, v88, (uint64_t *)&unk_254247DA0);
    *(_BYTE *)(a2 + v13[16]) = 0;
    v70 = objc_msgSend(a1, sel_location);
    v71 = v70;
    if (v70)
    {
      objc_msgSend(v70, sel_coordinate);
      v72 = v89;
      *v89 = v73;
      *((_BYTE *)v72 + 8) = 0;
      objc_msgSend(v71, sel_coordinate);
      v75 = v74;

    }
    else
    {
      v76 = v89;
      *v89 = 0;
      *((_BYTE *)v76 + 8) = 1;
      v75 = 0;
    }
    v77 = v91;
    *v91 = v75;
    *((_BYTE *)v77 + 8) = v71 == 0;
    v78 = objc_msgSend(a1, sel_postalAddress);
    v79 = v92;
    v80 = *(void **)(a2 + v92);

    *(_QWORD *)(a2 + v79) = v78;
  }
}

uint64_t sub_2331EB3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapsMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331EB3E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapsMerchant();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2331EB420()
{
  unint64_t result;

  result = qword_256045078;
  if (!qword_256045078)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_256045078);
  }
  return result;
}

uint64_t sub_2331EB464()
{
  uint64_t result;

  result = sub_23361E12C();
  qword_254244AC0 = result;
  return result;
}

id static NSNotificationName.FKOrderChanged.getter()
{
  if (qword_254244AC8 != -1)
    swift_once();
  return (id)qword_254244AC0;
}

uint64_t MapsLookupRequest.init(transactionID:transactionDisplayName:creationDate:bankTransactionDescriptionClean:bankTransactionDescription:bankMerchantEnhancedName:piiRedactionOccurred:otherBankTransactionLocationsData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  int *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v20 = (int *)type metadata accessor for MapsLookupRequest();
  v21 = (_QWORD *)(a9 + v20[11]);
  v22 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (_QWORD *)(a9 + v20[5]);
  *v23 = a2;
  v23[1] = a3;
  v24 = a9 + v20[6];
  v25 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a4, v25);
  v27 = (_QWORD *)(a9 + v20[7]);
  *v27 = a5;
  v27[1] = a6;
  v28 = (_QWORD *)(a9 + v20[8]);
  *v28 = a7;
  v28[1] = a8;
  v29 = (_QWORD *)(a9 + v20[9]);
  *v29 = a10;
  v29[1] = a11;
  *(_BYTE *)(a9 + v20[10]) = a12;
  *v21 = a13;
  v21[1] = a14;
  return result;
}

uint64_t type metadata accessor for MapsLookupRequest()
{
  uint64_t result;

  result = qword_256045108;
  if (!qword_256045108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MapsLookupRequest.transactionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MapsLookupRequest.transactionDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsLookupRequest.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MapsLookupRequest() + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MapsLookupRequest.bankTransactionDescriptionClean.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsLookupRequest.bankTransactionDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsLookupRequest.bankMerchantEnhancedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsLookupRequest.piiRedactionOccurred.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 40));
}

uint64_t MapsLookupRequest.otherBankTransactionLocationsData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 44);
  v2 = *(_QWORD *)v1;
  sub_2331D4424(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

double MapsLookupRequest.Location.longitude.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 16);
}

double MapsLookupRequest.Location.latitude.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 24);
}

uint64_t sub_2331EB87C()
{
  _BYTE *v0;

  if (*v0)
    return 0x656475746974616CLL;
  else
    return 0x64757469676E6F6CLL;
}

uint64_t sub_2331EB8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331EC0B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331EB8E0()
{
  sub_2331EBA84();
  return sub_23361F428();
}

uint64_t sub_2331EB908()
{
  sub_2331EBA84();
  return sub_23361F434();
}

uint64_t MapsLookupRequest.Location.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MapsLookupRequest.Location.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MapsLookupRequest.Location.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[40];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045080);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331EBA84();
  sub_23361F410();
  swift_beginAccess();
  v8[16] = 0;
  sub_23361F158();
  if (!v1)
  {
    swift_beginAccess();
    v8[15] = 1;
    sub_23361F158();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2331EBA84()
{
  unint64_t result;

  result = qword_256045088;
  if (!qword_256045088)
  {
    result = MEMORY[0x234934494](&unk_23362B574, &type metadata for MapsLookupRequest.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045088);
  }
  return result;
}

uint64_t MapsLookupRequest.Location.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MapsLookupRequest.Location.init(from:)(a1);
  return v2;
}

uint64_t MapsLookupRequest.Location.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045090);
  v4 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331EBA84();
  sub_23361F3EC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v14 = 0;
    v7 = v12;
    sub_23361F044();
    *(_QWORD *)(v1 + 16) = v8;
    v13 = 1;
    sub_23361F044();
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v7);
    *(_QWORD *)(v1 + 24) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_2331EBC90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = MapsLookupRequest.Location.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_2331EBCE4(_QWORD *a1)
{
  return MapsLookupRequest.Location.encode(to:)(a1);
}

uint64_t MapsLookupRequest.init(transactionID:transactionDisplayName:creationDate:bankTransactionDescriptionClean:bankTransactionDescription:bankMerchantEnhancedName:piiRedactionOccurred:otherBankTransactionLocations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, unint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t result;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;

  v51 = a7;
  v52 = a8;
  v48 = a5;
  v49 = a6;
  v44 = a2;
  v45 = a3;
  v50 = a12;
  v46 = a10;
  v47 = a11;
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23361D6A0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v43 = a1;
  v24(v23, a1, v20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v42 = a4;
  v25(v19, a4, v16);
  v26 = sub_2331EC1B0(a13);
  v28 = v27;
  v41 = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v42, v16);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v43, v20);
  v29 = (int *)type metadata accessor for MapsLookupRequest();
  v30 = (uint64_t *)(a9 + v29[11]);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a9, v23, v20);
  v31 = (_QWORD *)(a9 + v29[5]);
  v32 = v45;
  *v31 = v44;
  v31[1] = v32;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9 + v29[6], v19, v16);
  v34 = (_QWORD *)(a9 + v29[7]);
  v35 = v49;
  *v34 = v48;
  v34[1] = v35;
  v36 = (_QWORD *)(a9 + v29[8]);
  v37 = v52;
  *v36 = v51;
  v36[1] = v37;
  v38 = (_QWORD *)(a9 + v29[9]);
  v39 = v47;
  *v38 = v46;
  v38[1] = v39;
  *(_BYTE *)(a9 + v29[10]) = v50 & 1;
  *v30 = v41;
  v30[1] = v28;
  return result;
}

uint64_t MapsLookupRequest.locations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = sub_23361CA40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v0 + *(int *)(type metadata accessor for MapsLookupRequest() + 44));
  v7 = v6[1];
  if (v7 >> 60 == 15)
    return MEMORY[0x24BEE4AF8];
  v9 = *v6;
  sub_23361CA70();
  swift_allocObject();
  sub_2331D1374(v9, v7);
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v2, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  sub_23361CA4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045098);
  sub_2331ECFE4(&qword_2560450A0, &qword_2560450A8, (uint64_t)&protocol conformance descriptor for MapsLookupRequest.Location, MEMORY[0x24BEE12D0]);
  sub_23361CA58();
  swift_release();
  result = sub_2331B04E8(v9, v7);
  if (!v1)
    return v11[1];
  return result;
}

uint64_t sub_2331EC0B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2331EC1B0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v2 = sub_23361CAC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v6)
      return v6;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return v6;
  }
  sub_23361CB00();
  swift_allocObject();
  v7 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_23361CADC();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = MEMORY[0x24BEE4AF8];
  if (!v9)
  {
LABEL_16:
    v21 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256045098);
    sub_2331ECFE4(&qword_256045220, &qword_256045228, (uint64_t)&protocol conformance descriptor for MapsLookupRequest.Location, MEMORY[0x24BEE12A0]);
    v6 = sub_23361CAE8();
    swift_release();
    swift_bridgeObjectRelease();
    return v6;
  }
  v21 = MEMORY[0x24BEE4AF8];
  result = sub_23361EE70();
  if ((v9 & 0x8000000000000000) == 0)
  {
    v20[1] = v7;
    v12 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x234933120](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      ++v12;
      objc_msgSend(v13, sel_coordinate);
      v16 = v15;
      objc_msgSend(v14, sel_coordinate);
      v18 = v17;
      type metadata accessor for MapsLookupRequest.Location();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v16;
      *(_QWORD *)(v19 + 24) = v18;

      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
    }
    while (v9 != v12);
    v10 = v21;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MapsLookupRequest.Location()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for MapsLookupRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _OWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_23361D634();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (_QWORD *)((char *)a1 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (_QWORD *)((char *)a1 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[9];
    v26 = a3[10];
    v27 = (_QWORD *)((char *)a1 + v25);
    v28 = (_QWORD *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
    v30 = a3[11];
    v31 = (char *)a1 + v30;
    v32 = (_OWORD *)((char *)a2 + v30);
    v33 = *(_QWORD *)((char *)a2 + v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)v31 = *v32;
    }
    else
    {
      v35 = *(_QWORD *)v32;
      sub_2331D1374(v35, v33);
      *(_QWORD *)v31 = v35;
      *((_QWORD *)v31 + 1) = v33;
    }
  }
  return a1;
}

uint64_t destroy for MapsLookupRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 44));
  v9 = v8[1];
  if (v9 >> 60 != 15)
    return sub_23316BEA4(*v8, v9);
  return result;
}

uint64_t initializeWithCopy for MapsLookupRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  unint64_t v32;
  uint64_t v33;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_23361D634();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)(a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = (_OWORD *)(a2 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)v30 = *v31;
  }
  else
  {
    v33 = *(_QWORD *)v31;
    sub_2331D1374(v33, v32);
    *(_QWORD *)v30 = v33;
    *(_QWORD *)(v30 + 8) = v32;
  }
  return a1;
}

uint64_t assignWithCopy for MapsLookupRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v23 = a3[11];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_2331D1374(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_23316BEA4(v29, v30);
      return a1;
    }
    sub_2331EC9CC((uint64_t)v24);
    goto LABEL_6;
  }
  if (v26 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  v27 = *v25;
  sub_2331D1374(v27, v26);
  *v24 = v27;
  v24[1] = v26;
  return a1;
}

uint64_t sub_2331EC9CC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for MapsLookupRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for MapsLookupRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *(_QWORD *)(a1 + v31 + 8);
  if (v34 >> 60 != 15)
  {
    v35 = v33[1];
    if (v35 >> 60 != 15)
    {
      v36 = *v32;
      *v32 = *v33;
      v32[1] = v35;
      sub_23316BEA4(v36, v34);
      return a1;
    }
    sub_2331EC9CC((uint64_t)v32);
  }
  *(_OWORD *)v32 = *(_OWORD *)v33;
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsLookupRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331ECC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23361D634();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsLookupRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331ECCD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_23361D634();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2331ECD78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MapsLookupRequest.Location()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapsLookupRequest.Location.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for MapsLookupRequest.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331ECE8C + 4 * byte_23362B375[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331ECEC0 + 4 * byte_23362B370[v4]))();
}

uint64_t sub_2331ECEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331ECEC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331ECED0);
  return result;
}

uint64_t sub_2331ECEDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331ECEE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331ECEE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331ECEF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsLookupRequest.Location.CodingKeys()
{
  return &type metadata for MapsLookupRequest.Location.CodingKeys;
}

unint64_t sub_2331ECF10()
{
  unint64_t result;

  result = qword_256045208;
  if (!qword_256045208)
  {
    result = MEMORY[0x234934494](&unk_23362B54C, &type metadata for MapsLookupRequest.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045208);
  }
  return result;
}

unint64_t sub_2331ECF58()
{
  unint64_t result;

  result = qword_256045210;
  if (!qword_256045210)
  {
    result = MEMORY[0x234934494](&unk_23362B4BC, &type metadata for MapsLookupRequest.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045210);
  }
  return result;
}

unint64_t sub_2331ECFA0()
{
  unint64_t result;

  result = qword_256045218;
  if (!qword_256045218)
  {
    result = MEMORY[0x234934494](&unk_23362B4E4, &type metadata for MapsLookupRequest.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045218);
  }
  return result;
}

uint64_t sub_2331ECFE4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256045098);
    v10 = sub_2331ED060(a2, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2331ED060(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MapsLookupRequest.Location();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AccountBalanceQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;

  v28 = a6;
  v27 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - v20;
  *a7 = a1;
  v22 = (int *)type metadata accessor for AccountBalanceQuery();
  sub_2331ED2B4(a2, (uint64_t)a7 + v22[5]);
  sub_2331ED2B4(a2, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2331ED2FC(a2);
    result = sub_2331ED2FC((uint64_t)v14);
    v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_2331E28A0();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v24 = sub_2331E66EC((uint64_t)v19);
    sub_2331ED2FC(a2);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  *(_QWORD *)((char *)a7 + v22[8]) = v24;
  v25 = (char *)a7 + v22[6];
  *(_QWORD *)v25 = a3;
  v25[8] = a4 & 1;
  v26 = (char *)a7 + v22[7];
  *(_QWORD *)v26 = v27;
  v26[8] = v28 & 1;
  return result;
}

uint64_t type metadata accessor for AccountBalanceQuery()
{
  uint64_t result;

  result = qword_256045290;
  if (!qword_256045290)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331ED2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331ED2FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static AccountBalanceQuery.predicate(availableSince:until:)(uint64_t a1, uint64_t a2)
{
  return sub_2331ED38C(a1, a2);
}

uint64_t sub_2331ED348@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2331ED450(v1[2], v1[3], v1[4], (uint64_t)&unk_23362B688, (uint64_t)sub_2331ED37C, (uint64_t)sub_2331EEDD0, a1);
}

uint64_t static AccountBalanceQuery.predicate(bookedSince:until:)(uint64_t a1, uint64_t a2)
{
  return sub_2331ED38C(a1, a2);
}

uint64_t sub_2331ED38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23361D520();
  v10 = a1;
  v11 = a2;
  v12 = v7;
  v13 = type metadata accessor for AccountBalance(0);
  sub_23361D8D4();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2331ED450@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v43 = a6;
  v36 = a5;
  v32[1] = a4;
  v38 = a2;
  v39 = a3;
  v37 = a1;
  v44 = a7;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A70);
  v8 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v46 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FD8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560452E0);
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560452E8);
  v18 = *(_QWORD *)(v17 - 8);
  v34 = v17;
  v35 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560452F0);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v22 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B1A14(&qword_2560452F8, &qword_256044FD8, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045300);
  type metadata accessor for Balance(0);
  sub_23361D634();
  v23 = MEMORY[0x24BDCD1C0];
  sub_2331B1A14(&qword_256045308, &qword_2560452E0, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_256045310, &qword_256045300, v23);
  sub_23361CF74();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v14);
  v47 = v37;
  v48 = v38;
  v49 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045318);
  v24 = MEMORY[0x24BDCCEA0];
  sub_2331B1A14(&qword_256045320, &qword_2560452E8, MEMORY[0x24BDCCEA0]);
  sub_2331B1A14(&qword_256045328, &qword_256045318, MEMORY[0x24BDCCDB8]);
  v25 = v34;
  sub_23361CF74();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v25);
  v50 = 0;
  v26 = v41;
  sub_23361D178();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045330);
  v28 = v44;
  v44[3] = v27;
  v28[4] = sub_2331EEB90(&qword_256045338, &qword_256045330, (uint64_t (*)(void))sub_2331EE7E0, (uint64_t (*)(void))sub_2331EED28);
  __swift_allocate_boxed_opaque_existential_0(v28);
  sub_2331B1A14(&qword_2560453F0, &qword_2560452F0, v24);
  sub_2331B1A14(&qword_256044AA8, &qword_256044A70, MEMORY[0x24BDCD130]);
  v29 = v40;
  v30 = v45;
  sub_23361CFE0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v22, v29);
}

uint64_t sub_2331ED8A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2331ED450(v1[2], v1[3], v1[4], (uint64_t)"ࣣ\"", (uint64_t)sub_2331ED37C, (uint64_t)sub_2331EE7C4, a1);
}

uint64_t sub_2331ED8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045370);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B1A14(&qword_256045428, &qword_256045370, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2331ED9BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a4;
  v52 = a3;
  v47 = a2;
  v62 = a5;
  v63 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560453D8);
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560453C8);
  v9 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  v59 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560453B8);
  v12 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  v61 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361CFF8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560453A8);
  v46 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045398);
  v45 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045388);
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v48 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2331B1A14(&qword_2560453F8, &qword_256045398, MEMORY[0x24BDCD230]);
  sub_23361D184();
  v43 = sub_23361D634();
  sub_23361D178();
  v26 = *MEMORY[0x24BDCCF58];
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v41 = v14;
  v47(v17, v26, v14);
  v40[1] = sub_2331B1A14(&qword_256045400, &qword_2560453A8, MEMORY[0x24BDCD130]);
  v44 = sub_2331EED8C((unint64_t *)&qword_2560436A0, MEMORY[0x24BDCE948]);
  v42 = v25;
  sub_23361CFC8();
  v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v17, v14);
  v28 = *(void (**)(char *, uint64_t))(v46 + 8);
  v28(v20, v18);
  v46 = *(_QWORD *)(v45 + 8);
  ((void (*)(char *, uint64_t))v46)(v23, v21);
  sub_23361D184();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v29 = v49;
  sub_23361D178();
  sub_23361D178();
  sub_2331B1A14(&qword_256045408, &qword_2560453D8, MEMORY[0x24BDCD130]);
  v30 = v50;
  v31 = v56;
  sub_23361CFE0();
  v28(v20, v18);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v31);
  v32 = v41;
  v47(v17, *MEMORY[0x24BDCCF60], v41);
  sub_2331B1A14(&qword_256045410, &qword_2560453C8, MEMORY[0x24BDCCE00]);
  v33 = v53;
  v34 = v58;
  sub_23361CFC8();
  v27(v17, v32);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v34);
  ((void (*)(char *, uint64_t))v46)(v23, v21);
  v35 = MEMORY[0x24BDCCCE0];
  sub_2331B1A14(&qword_256045418, &qword_256045388, MEMORY[0x24BDCCCE0]);
  sub_2331B1A14(&qword_256045420, &qword_2560453B8, v35);
  v36 = v48;
  v37 = v51;
  v38 = v60;
  sub_23361CFD4();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v36, v37);
}

uint64_t PrivateAccountBalanceQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4 & 1;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6 & 1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountBalanceQuery(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[8];
    v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
    v22 = v21;
  }
  return a1;
}

void destroy for AccountBalanceQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

_QWORD *initializeWithCopy for AccountBalanceQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[8];
  v19 = *(void **)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v19;
  v20 = v19;
  return a1;
}

_QWORD *assignWithCopy for AccountBalanceQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  v23 = a3[8];
  v24 = *(void **)((char *)a1 + v23);
  v25 = *(void **)((char *)a2 + v23);
  *(_QWORD *)((char *)a1 + v23) = v25;
  v26 = v25;

  return a1;
}

_QWORD *initializeWithTake for AccountBalanceQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for AccountBalanceQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = a3[8];
  v22 = *(void **)((char *)a1 + v21);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);

  return a1;
}

uint64_t getEnumTagSinglePayload for AccountBalanceQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331EE5C8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AccountBalanceQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2331EE654(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045230);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2331EE6CC()
{
  unint64_t v0;

  sub_2331EE758();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2331EE758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2560452A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044FE0);
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2560452A0);
  }
}

ValueMetadata *type metadata accessor for PrivateAccountBalanceQuery()
{
  return &type metadata for PrivateAccountBalanceQuery;
}

uint64_t sub_2331EE7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331ED9BC(a1, *(void (**)(char *, uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_2331EE7E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256045340;
  if (!qword_256045340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560452F0);
    v2[0] = sub_2331EE84C();
    v2[1] = sub_2331EE970();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCE98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256045340);
  }
  return result;
}

unint64_t sub_2331EE84C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256045348;
  if (!qword_256045348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560452E8);
    v2[0] = sub_2331EE8F8(&qword_256045350, &qword_2560452E0, &qword_256045358, &qword_256044FD8);
    v2[1] = sub_2331EE8F8(&qword_256045360, &qword_256045300, &qword_256045368, &qword_256045370);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCE98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256045348);
  }
  return result;
}

uint64_t sub_2331EE8F8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_2331B1A14(a3, a4, MEMORY[0x24BDCD228]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD1B8], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2331EE970()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256045378;
  if (!qword_256045378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256045318);
    v2[0] = sub_2331EE9DC();
    v2[1] = sub_2331EEAEC();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCDB0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256045378);
  }
  return result;
}

unint64_t sub_2331EE9DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256045380;
  if (!qword_256045380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256045388);
    v2[0] = sub_2331B1A14(&qword_256045390, &qword_256045398, MEMORY[0x24BDCD228]);
    v2[1] = sub_2331EEA60();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCCD8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256045380);
  }
  return result;
}

unint64_t sub_2331EEA60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2560453A0;
  if (!qword_2560453A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560453A8);
    v2[0] = sub_2331EED8C(&qword_254244F00, MEMORY[0x24BDCE960]);
    v2[1] = sub_2331EED8C(&qword_254245180, MEMORY[0x24BDCE920]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2560453A0);
  }
  return result;
}

unint64_t sub_2331EEAEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2560453B0;
  if (!qword_2560453B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560453B8);
    v2[0] = sub_2331B1A14(&qword_256045390, &qword_256045398, MEMORY[0x24BDCD228]);
    v2[1] = sub_2331EEB90(&qword_2560453C0, &qword_2560453C8, (uint64_t (*)(void))sub_2331EEC00, (uint64_t (*)(void))sub_2331EEA60);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCCD8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2560453B0);
  }
  return result;
}

uint64_t sub_2331EEB90(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCDF8], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2331EEC00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2560453D0;
  if (!qword_2560453D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560453D8);
    v2[0] = sub_2331EECAC(&qword_2560453E0, &qword_254244F00, MEMORY[0x24BDCE960], MEMORY[0x24BEE4AC0]);
    v2[1] = sub_2331EECAC(&qword_2560453E8, &qword_254245180, MEMORY[0x24BDCE920], MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2560453D0);
  }
  return result;
}

uint64_t sub_2331EECAC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254247DA0);
    v10 = sub_2331EED8C(a2, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2331EED28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044A98;
  if (!qword_256044A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044A70);
    v2[0] = MEMORY[0x24BEE1348];
    v2[1] = MEMORY[0x24BEE1330];
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044A98);
  }
  return result;
}

uint64_t sub_2331EED8C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23361D634();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BankConnectAccountChange.oldAccount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23318C184(v1, a1);
}

uint64_t BankConnectAccountChange.newAccount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectAccountChange() + 20);
  return sub_2331EEE4C(v3, a1);
}

uint64_t type metadata accessor for BankConnectAccountChange()
{
  uint64_t result;

  result = qword_256045490;
  if (!qword_256045490)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331EEE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

FinanceKit::WidgetType_optional __swiftcall WidgetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::WidgetType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

unint64_t WidgetType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 0xD000000000000013;
}

uint64_t sub_2331EEF30(char *a1, char *a2)
{
  return sub_233228B0C(*a1, *a2);
}

unint64_t sub_2331EEF40()
{
  unint64_t result;

  result = qword_256045430;
  if (!qword_256045430)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for WidgetType, &type metadata for WidgetType);
    atomic_store(result, (unint64_t *)&qword_256045430);
  }
  return result;
}

uint64_t sub_2331EEF84()
{
  return sub_23353D520();
}

uint64_t sub_2331EEF8C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331EEFEC()
{
  return sub_23353EBA0();
}

FinanceKit::WidgetType_optional sub_2331EEFF4(Swift::String *a1)
{
  return WidgetType.init(rawValue:)(*a1);
}

void sub_2331EF000(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000013;
  v3 = 0x8000000233668A60;
  if (*v1)
    v3 = 0x8000000233668A80;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t dispatch thunk of WidgetRefreshing.refresh(_:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectAccountChange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int (*v162)(char *, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  int EnumCaseMultiPayload;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int (*v208)(char *, uint64_t, uint64_t);
  uint64_t v209;
  int *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  unsigned int v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v237;
  void (*v238)(char *, char *, uint64_t);
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *__dst;
  char *__dsta;
  unsigned int (*v262)(char *, uint64_t, uint64_t);
  char *v263;
  uint64_t v264;
  uint64_t v265;
  unsigned int (*v266)(char *, uint64_t, uint64_t);
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  int *v272;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v11;
  }
  v6 = a3;
  v7 = (int *)type metadata accessor for InternalAccount();
  v8 = *((_QWORD *)v7 - 1);
  v271 = a1;
  v272 = v7;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v264 = v8;
    v267 = v6;
    v12 = sub_23361D6A0();
    v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(a1, a2, v12);
    v14 = v7[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v16[3];
    v15[2] = v16[2];
    v15[3] = v18;
    v19 = v7[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v238 = (void (*)(char *, char *, uint64_t))v13;
    v246 = v12;
    v13((uint64_t *)v20, (uint64_t *)v21, v12);
    *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
    v22 = v7[8];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v258 = v24[1];
    *v23 = *v24;
    v23[1] = v258;
    *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    v25 = v7[10];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v26[16] = v27[16];
    v29 = v7[11];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v7[12];
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v7;
    v37 = v35[1];
    *v34 = *v35;
    v34[1] = v37;
    *((_BYTE *)a1 + v36[13]) = *((_BYTE *)a2 + v36[13]);
    v38 = v36[14];
    v39 = (uint64_t *)((char *)a1 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = v36[15];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_DWORD *)v43 + 4) = *((_DWORD *)v44 + 4);
    v45 = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
    *((_QWORD *)v43 + 4) = v45;
    v46 = v36[16];
    __dst = (char *)a1 + v46;
    v47 = (char *)a2 + v46;
    v48 = sub_23361D634();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v49 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v262 = (unsigned int (*)(char *, uint64_t, uint64_t))v50;
    v269 = v48;
    v253 = v49;
    if (v50(v47, 1, v48))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dst, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
    }
    v52 = v271;
    v53 = v272[17];
    v54 = (char *)v271 + v53;
    v55 = (char *)a2 + v53;
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *((_DWORD *)v54 + 4) = *((_DWORD *)v55 + 4);
    v56 = *((_QWORD *)v55 + 4);
    *((_QWORD *)v54 + 3) = *((_QWORD *)v55 + 3);
    *((_QWORD *)v54 + 4) = v56;
    v57 = v272[18];
    v58 = (char *)v271 + v57;
    v59 = (char *)a2 + v57;
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *((_DWORD *)v58 + 4) = *((_DWORD *)v59 + 4);
    v60 = *((_QWORD *)v59 + 4);
    *((_QWORD *)v58 + 3) = *((_QWORD *)v59 + 3);
    *((_QWORD *)v58 + 4) = v60;
    v61 = v272[19];
    v62 = (char *)v271 + v61;
    v63 = (char *)a2 + v61;
    v64 = type metadata accessor for InternalAccountBalance(0);
    v65 = *(_QWORD *)(v64 - 8);
    v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66(v63, 1, v64))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      v68 = v269;
    }
    else
    {
      v238(v62, v63, v246);
      v69 = *(int *)(v64 + 20);
      v70 = &v62[v69];
      v71 = &v63[v69];
      type metadata accessor for BalanceCalculation(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_DWORD *)v70 + 4) = *((_DWORD *)v71 + 4);
        v78 = *((_QWORD *)v71 + 4);
        *((_QWORD *)v70 + 3) = *((_QWORD *)v71 + 3);
        *((_QWORD *)v70 + 4) = v78;
        v79 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v80 = *(int *)(v79 + 20);
        v248 = v65;
        v81 = v79;
        v82 = &v70[v80];
        v240 = &v71[v80];
        v83 = *(void (**)(char *, char *, uint64_t))(v253 + 16);
        swift_bridgeObjectRetain();
        v84 = v82;
        v68 = v269;
        v83(v84, v240, v269);
        v70[*(int *)(v81 + 24)] = v71[*(int *)(v81 + 24)];
        v85 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
        v86 = &v70[v85];
        v71 += v85;
        *(_OWORD *)v86 = *(_OWORD *)v71;
        *((_DWORD *)v86 + 4) = *((_DWORD *)v71 + 4);
        v87 = *((_QWORD *)v71 + 4);
        *((_QWORD *)v86 + 3) = *((_QWORD *)v71 + 3);
        *((_QWORD *)v86 + 4) = v87;
        v88 = *(int *)(v81 + 20);
        v237 = &v71[v88];
        v241 = &v86[v88];
        swift_bridgeObjectRetain();
        v83(v241, v237, v269);
        v76 = *(int *)(v81 + 24);
        v65 = v248;
        v77 = &v86[v76];
        v75 = v83;
      }
      else
      {
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_DWORD *)v70 + 4) = *((_DWORD *)v71 + 4);
        v72 = *((_QWORD *)v71 + 4);
        *((_QWORD *)v70 + 3) = *((_QWORD *)v71 + 3);
        *((_QWORD *)v70 + 4) = v72;
        v73 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v74 = *(int *)(v73 + 20);
        v239 = &v71[v74];
        v247 = &v70[v74];
        v75 = *(void (**)(char *, char *, uint64_t))(v253 + 16);
        swift_bridgeObjectRetain();
        v68 = v269;
        v75(v247, v239, v269);
        v76 = *(int *)(v73 + 24);
        v77 = &v70[v76];
      }
      *v77 = v71[v76];
      swift_storeEnumTagMultiPayload();
      v75(&v62[*(int *)(v64 + 24)], &v63[*(int *)(v64 + 24)], v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      v52 = v271;
    }
    v89 = v272[20];
    v90 = (char *)v52 + v89;
    v91 = (char *)a2 + v89;
    v92 = sub_23361D340();
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
    if (v94(v91, 1, v92))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
    }
    v96 = (int *)type metadata accessor for Actions();
    v97 = v96[5];
    v98 = &v90[v97];
    v99 = &v91[v97];
    if (v94(&v91[v97], 1, v92))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v99, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v98, 0, 1, v92);
    }
    v101 = v96[6];
    v102 = &v90[v101];
    v103 = &v91[v101];
    if (v94(&v91[v101], 1, v92))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v102, v103, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v102, 0, 1, v92);
    }
    v105 = v96[7];
    v106 = &v90[v105];
    v107 = &v91[v105];
    if (v94(&v91[v105], 1, v92))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v106, v107, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v106, 0, 1, v92);
    }
    v109 = v96[8];
    v110 = &v90[v109];
    v111 = &v91[v109];
    a1 = v271;
    if (v94(&v91[v109], 1, v92))
    {
      v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v110, v111, v92);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v110, 0, 1, v92);
    }
    v6 = v267;
    v7 = v272;
    *((_BYTE *)v271 + v272[21]) = *((_BYTE *)a2 + v272[21]);
    *((_BYTE *)v271 + v272[22]) = *((_BYTE *)a2 + v272[22]);
    *((_BYTE *)v271 + v272[23]) = *((_BYTE *)a2 + v272[23]);
    *((_BYTE *)v271 + v272[24]) = *((_BYTE *)a2 + v272[24]);
    *((_BYTE *)v271 + v272[25]) = *((_BYTE *)a2 + v272[25]);
    v113 = v272[26];
    v114 = (uint64_t *)((char *)v271 + v113);
    v115 = (uint64_t *)((char *)a2 + v113);
    v116 = v115[1];
    *v114 = *v115;
    v114[1] = v116;
    *((_BYTE *)v271 + v272[27]) = *((_BYTE *)a2 + v272[27]);
    v117 = v272[28];
    v118 = (char *)v271 + v117;
    v119 = (char *)a2 + v117;
    swift_bridgeObjectRetain();
    if (v262(v119, 1, v68))
    {
      v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v118, v119, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v118, 0, 1, v68);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v264 + 56))(v271, 0, 1, v272);
  }
  v121 = *(int *)(v6 + 20);
  v122 = (char *)a1 + v121;
  v123 = (char *)a2 + v121;
  v124 = sub_23361D6A0();
  v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
  v125(v122, v123, v124);
  v126 = v7[5];
  v127 = &v122[v126];
  v128 = &v123[v126];
  v129 = *((_QWORD *)v128 + 1);
  *(_QWORD *)v127 = *(_QWORD *)v128;
  *((_QWORD *)v127 + 1) = v129;
  v130 = *((_QWORD *)v128 + 3);
  *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
  *((_QWORD *)v127 + 3) = v130;
  v131 = v7[6];
  v132 = &v122[v131];
  v133 = &v123[v131];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v254 = v125;
  v259 = v124;
  v125(v132, v133, v124);
  *(_QWORD *)&v122[v7[7]] = *(_QWORD *)&v123[v7[7]];
  v134 = v7[8];
  v135 = &v122[v134];
  v136 = &v123[v134];
  v265 = *((_QWORD *)v136 + 1);
  *(_QWORD *)v135 = *(_QWORD *)v136;
  *((_QWORD *)v135 + 1) = v265;
  v122[v7[9]] = v123[v7[9]];
  v137 = v7[10];
  v138 = &v122[v137];
  v139 = &v123[v137];
  v140 = *((_QWORD *)v139 + 1);
  *(_QWORD *)v138 = *(_QWORD *)v139;
  *((_QWORD *)v138 + 1) = v140;
  v138[16] = v139[16];
  v141 = v7[11];
  v142 = &v122[v141];
  v143 = &v123[v141];
  v144 = *((_QWORD *)v143 + 1);
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *((_QWORD *)v142 + 1) = v144;
  v145 = v7[12];
  v146 = &v122[v145];
  v147 = &v123[v145];
  v148 = v7;
  v149 = *((_QWORD *)v147 + 1);
  *(_QWORD *)v146 = *(_QWORD *)v147;
  *((_QWORD *)v146 + 1) = v149;
  v122[v148[13]] = v123[v148[13]];
  v150 = v148[14];
  v151 = &v122[v150];
  v152 = &v123[v150];
  v153 = *((_QWORD *)v152 + 1);
  *(_QWORD *)v151 = *(_QWORD *)v152;
  *((_QWORD *)v151 + 1) = v153;
  v154 = v148[15];
  v155 = &v122[v154];
  v156 = &v123[v154];
  *(_OWORD *)v155 = *(_OWORD *)v156;
  *((_DWORD *)v155 + 4) = *((_DWORD *)v156 + 4);
  v157 = *((_QWORD *)v156 + 4);
  *((_QWORD *)v155 + 3) = *((_QWORD *)v156 + 3);
  *((_QWORD *)v155 + 4) = v157;
  v158 = v148[16];
  __dsta = &v122[v158];
  v263 = v123;
  v159 = &v123[v158];
  v160 = sub_23361D634();
  v161 = *(_QWORD *)(v160 - 8);
  v162 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v161 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v266 = (unsigned int (*)(char *, uint64_t, uint64_t))v162;
  v268 = v161;
  v270 = v160;
  if (v162(v159, 1, v160))
  {
    v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dsta, v159, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(__dsta, v159, v160);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(__dsta, 0, 1, v160);
  }
  v164 = v272[17];
  v165 = &v122[v164];
  v166 = &v263[v164];
  *(_OWORD *)v165 = *(_OWORD *)v166;
  *((_DWORD *)v165 + 4) = *((_DWORD *)v166 + 4);
  v167 = *((_QWORD *)v166 + 4);
  *((_QWORD *)v165 + 3) = *((_QWORD *)v166 + 3);
  *((_QWORD *)v165 + 4) = v167;
  v168 = v272[18];
  v169 = &v122[v168];
  v170 = &v263[v168];
  *(_OWORD *)v169 = *(_OWORD *)v170;
  *((_DWORD *)v169 + 4) = *((_DWORD *)v170 + 4);
  v171 = *((_QWORD *)v170 + 4);
  *((_QWORD *)v169 + 3) = *((_QWORD *)v170 + 3);
  *((_QWORD *)v169 + 4) = v171;
  v172 = v272[19];
  v173 = &v122[v172];
  v174 = &v263[v172];
  v175 = type metadata accessor for InternalAccountBalance(0);
  v176 = *(_QWORD *)(v175 - 8);
  v177 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v177(v174, 1, v175))
  {
    v254(v173, v174, v259);
    v179 = *(int *)(v175 + 20);
    v180 = &v173[v179];
    v181 = &v174[v179];
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_DWORD *)v180 + 4) = *((_DWORD *)v181 + 4);
      v190 = *((_QWORD *)v181 + 4);
      *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
      *((_QWORD *)v180 + 4) = v190;
      v191 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v192 = *(int *)(v191 + 20);
      v256 = v176;
      v193 = v191;
      v243 = &v181[v192];
      v250 = &v180[v192];
      v186 = *(void (**)(char *, char *, uint64_t))(v268 + 16);
      swift_bridgeObjectRetain();
      v186(v250, v243, v270);
      v180[*(int *)(v193 + 24)] = v181[*(int *)(v193 + 24)];
      v194 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v195 = &v180[v194];
      v181 += v194;
      *(_OWORD *)v195 = *(_OWORD *)v181;
      *((_DWORD *)v195 + 4) = *((_DWORD *)v181 + 4);
      v196 = *((_QWORD *)v181 + 4);
      *((_QWORD *)v195 + 3) = *((_QWORD *)v181 + 3);
      *((_QWORD *)v195 + 4) = v196;
      v197 = *(int *)(v193 + 20);
      v244 = &v181[v197];
      v251 = &v195[v197];
      swift_bridgeObjectRetain();
      v186(v251, v244, v270);
      v188 = *(int *)(v193 + 24);
      v176 = v256;
      v189 = &v195[v188];
      v187 = v270;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(_OWORD *)v180 = *(_OWORD *)v181;
        *((_DWORD *)v180 + 4) = *((_DWORD *)v181 + 4);
        v199 = *((_QWORD *)v181 + 4);
        *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
        *((_QWORD *)v180 + 4) = v199;
        v200 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v201 = *(int *)(v200 + 20);
        v252 = &v180[v201];
        v257 = v200;
        v245 = &v181[v201];
        v186 = *(void (**)(char *, char *, uint64_t))(v268 + 16);
        swift_bridgeObjectRetain();
        v187 = v270;
        v186(v252, v245, v270);
        v202 = *(int *)(v257 + 24);
        v189 = &v180[v202];
        v198 = &v181[v202];
        goto LABEL_44;
      }
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_DWORD *)v180 + 4) = *((_DWORD *)v181 + 4);
      v183 = *((_QWORD *)v181 + 4);
      *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
      *((_QWORD *)v180 + 4) = v183;
      v184 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v185 = *(int *)(v184 + 20);
      v249 = &v180[v185];
      v255 = v184;
      v242 = &v181[v185];
      v186 = *(void (**)(char *, char *, uint64_t))(v268 + 16);
      swift_bridgeObjectRetain();
      v187 = v270;
      v186(v249, v242, v270);
      v188 = *(int *)(v255 + 24);
      v189 = &v180[v188];
    }
    v198 = &v181[v188];
LABEL_44:
    *v189 = *v198;
    swift_storeEnumTagMultiPayload();
    v186(&v173[*(int *)(v175 + 24)], &v174[*(int *)(v175 + 24)], v187);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
    goto LABEL_45;
  }
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
LABEL_45:
  v203 = v272[20];
  v204 = &v122[v203];
  v205 = &v263[v203];
  v206 = sub_23361D340();
  v207 = *(_QWORD *)(v206 - 8);
  v208 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48);
  if (v208(v205, 1, v206))
  {
    v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v204, v205, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v204, 0, 1, v206);
  }
  v210 = (int *)type metadata accessor for Actions();
  v211 = v210[5];
  v212 = &v204[v211];
  v213 = &v205[v211];
  if (v208(&v205[v211], 1, v206))
  {
    v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v212, v213, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v212, 0, 1, v206);
  }
  v215 = v210[6];
  v216 = &v204[v215];
  v217 = &v205[v215];
  if (v208(&v205[v215], 1, v206))
  {
    v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v216, v217, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v216, 0, 1, v206);
  }
  v219 = v210[7];
  v220 = &v204[v219];
  v221 = &v205[v219];
  if (v208(&v205[v219], 1, v206))
  {
    v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v220, v221, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v220, 0, 1, v206);
  }
  v223 = v210[8];
  v224 = &v204[v223];
  v225 = &v205[v223];
  v226 = v208(&v205[v223], 1, v206);
  v11 = v271;
  if (v226)
  {
    v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v224, v225, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v224, 0, 1, v206);
  }
  v122[v272[21]] = v263[v272[21]];
  v122[v272[22]] = v263[v272[22]];
  v122[v272[23]] = v263[v272[23]];
  v122[v272[24]] = v263[v272[24]];
  v122[v272[25]] = v263[v272[25]];
  v228 = v272[26];
  v229 = &v122[v228];
  v230 = &v263[v228];
  v231 = *((_QWORD *)v230 + 1);
  *(_QWORD *)v229 = *(_QWORD *)v230;
  *((_QWORD *)v229 + 1) = v231;
  v122[v272[27]] = v263[v272[27]];
  v232 = v272[28];
  v233 = &v122[v232];
  v234 = &v263[v232];
  swift_bridgeObjectRetain();
  if (v266(v234, 1, v270))
  {
    v235 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v268 + 16))(v233, v234, v270);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v268 + 56))(v233, 0, 1, v270);
  }
  return v11;
}

uint64_t destroy for BankConnectAccountChange(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);

  v4 = (int *)type metadata accessor for InternalAccount();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
    goto LABEL_24;
  v5 = sub_23361D6A0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(a1 + v4[6], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + v4[16];
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v54(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + v4[19];
  v11 = type metadata accessor for InternalAccountBalance(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v6(v10, v5);
    v12 = v10 + *(int *)(v11 + 20);
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload < 2)
    {
      swift_bridgeObjectRelease();
      v17 = v12 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
      v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v15(v12 + *(int *)(v14 + 20), v8);
      v16 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      swift_bridgeObjectRelease();
      v17 = v16 + *(int *)(v14 + 20);
    }
    v15(v17, v8);
LABEL_11:
    v15(v10 + *(int *)(v11 + 24), v8);
  }
  v53 = v9;
  v18 = a1 + v4[20];
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v21(v18, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  v22 = (int *)type metadata accessor for Actions();
  v23 = v18 + v22[5];
  if (!v21(v23, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v19);
  v24 = v18 + v22[6];
  if (!v21(v24, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v19);
  v25 = v18 + v22[7];
  if (!v21(v25, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v19);
  v26 = v18 + v22[8];
  if (!v21(v26, 1, v19))
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v26, v19);
  swift_bridgeObjectRelease();
  v27 = a1 + v4[28];
  if (!v54(v27, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v27, v8);
LABEL_24:
  v28 = a1 + *(int *)(a2 + 20);
  v29 = sub_23361D6A0();
  v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
  v30(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30(v28 + v4[6], v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v28 + v4[16];
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (!v55(v31, 1, v32))
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v28 + v4[19];
  v35 = type metadata accessor for InternalAccountBalance(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
  {
    v30(v34, v29);
    v36 = v34 + *(int *)(v35 + 20);
    type metadata accessor for BalanceCalculation(0);
    v37 = swift_getEnumCaseMultiPayload();
    if (v37 < 2)
    {
      swift_bridgeObjectRelease();
      v41 = v36 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
      v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    }
    else
    {
      if (v37 != 2)
      {
        v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      v38 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v39(v36 + *(int *)(v38 + 20), v32);
      v40 = v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      swift_bridgeObjectRelease();
      v41 = v40 + *(int *)(v38 + 20);
    }
    v39(v41, v32);
LABEL_33:
    v39(v34 + *(int *)(v35 + 24), v32);
  }
  v42 = v28 + v4[20];
  v43 = sub_23361D340();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (!v45(v42, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  v46 = (int *)type metadata accessor for Actions();
  v47 = v42 + v46[5];
  if (!v45(v47, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
  v48 = v42 + v46[6];
  if (!v45(v48, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v48, v43);
  v49 = v42 + v46[7];
  if (!v45(v49, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v49, v43);
  v50 = v42 + v46[8];
  if (!v45(v50, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v50, v43);
  swift_bridgeObjectRelease();
  v51 = v28 + v4[28];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v55)(v51, 1, v32);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v51, v32);
  return result;
}

char *initializeWithCopy for BankConnectAccountChange(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int EnumCaseMultiPayload;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int (*v162)(char *, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  void (*v190)(char *, char *, uint64_t);
  uint64_t v191;
  uint64_t v192;
  char *v193;
  void (*v194)(char *, char *, uint64_t);
  char *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  uint64_t v213;
  int *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  uint64_t v251;
  char *v252;
  void (*v253)(char *, char *, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  void (*v261)(char *, char *, uint64_t);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void (*v265)(char *, char *, uint64_t);
  void (*v266)(char *, char *, uint64_t);
  uint64_t v267;
  char *__dst;
  _QWORD *__dsta;
  void *v270;
  unsigned int (*v271)(char *, uint64_t, uint64_t);
  char *v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  int *v280;

  v6 = (int *)type metadata accessor for InternalAccount();
  v7 = *((_QWORD *)v6 - 1);
  v279 = a1;
  v280 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_34;
  }
  v273 = v7;
  v275 = a3;
  v9 = sub_23361D6A0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(a1, a2, v9);
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = *((_QWORD *)v13 + 3);
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 3) = v15;
  v16 = v6[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v253 = v10;
  v260 = v9;
  v10(v17, v18, v9);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  v19 = v6[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v270 = (void *)*((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v270;
  a1[v6[9]] = a2[v6[9]];
  v22 = v6[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = a1;
  v26 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v26;
  v23[16] = v24[16];
  v27 = v6[11];
  v28 = &v25[v27];
  v29 = &a2[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = v6[12];
  v32 = &v25[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v25[v6[13]] = a2[v6[13]];
  v35 = v6[14];
  v36 = &v25[v35];
  v37 = &a2[v35];
  v38 = v6;
  v39 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v39;
  v40 = v38[15];
  v41 = &v25[v40];
  v42 = &a2[v40];
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_DWORD *)v41 + 4) = *((_DWORD *)v42 + 4);
  v43 = *((_QWORD *)v42 + 4);
  *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
  *((_QWORD *)v41 + 4) = v43;
  v44 = v38[16];
  __dst = &v25[v44];
  v45 = &a2[v44];
  v46 = sub_23361D634();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v271 = v48;
  v277 = v46;
  v263 = v47;
  if (v48(v45, 1, v46))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
  }
  v50 = v280;
  v51 = v280[17];
  v52 = &v279[v51];
  v53 = &a2[v51];
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
  v54 = *((_QWORD *)v53 + 4);
  *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
  *((_QWORD *)v52 + 4) = v54;
  v55 = v280[18];
  v56 = &v279[v55];
  v57 = &a2[v55];
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_DWORD *)v56 + 4) = *((_DWORD *)v57 + 4);
  v58 = *((_QWORD *)v57 + 4);
  *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
  *((_QWORD *)v56 + 4) = v58;
  v59 = v280[19];
  v60 = &v279[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for InternalAccountBalance(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v64(v61, 1, v62))
  {
    v253(v60, v61, v260);
    v66 = *(int *)(v62 + 20);
    v67 = &v60[v66];
    v68 = &v61[v66];
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
      v76 = *((_QWORD *)v68 + 4);
      *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
      *((_QWORD *)v67 + 4) = v76;
      v77 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v78 = *(int *)(v77 + 20);
      v255 = v63;
      v79 = v77;
      v241 = &v68[v78];
      v247 = &v67[v78];
      v73 = *(void (**)(char *, char *, uint64_t))(v263 + 16);
      swift_bridgeObjectRetain();
      v73(v247, v241, v46);
      v67[*(int *)(v79 + 24)] = v68[*(int *)(v79 + 24)];
      v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v81 = &v67[v80];
      v68 += v80;
      *(_OWORD *)v81 = *(_OWORD *)v68;
      *((_DWORD *)v81 + 4) = *((_DWORD *)v68 + 4);
      v82 = *((_QWORD *)v68 + 4);
      *((_QWORD *)v81 + 3) = *((_QWORD *)v68 + 3);
      *((_QWORD *)v81 + 4) = v82;
      v83 = *(int *)(v79 + 20);
      v242 = &v68[v83];
      v248 = &v81[v83];
      swift_bridgeObjectRetain();
      v73(v248, v242, v46);
      v74 = *(int *)(v79 + 24);
      v63 = v255;
      v75 = &v81[v74];
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(_OWORD *)v67 = *(_OWORD *)v68;
        *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
        v85 = *((_QWORD *)v68 + 4);
        *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
        *((_QWORD *)v67 + 4) = v85;
        v86 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v87 = *(int *)(v86 + 20);
        v249 = &v67[v87];
        v256 = v86;
        v243 = &v68[v87];
        v73 = *(void (**)(char *, char *, uint64_t))(v263 + 16);
        swift_bridgeObjectRetain();
        v73(v249, v243, v46);
        v88 = *(int *)(v256 + 24);
        v75 = &v67[v88];
        v84 = &v68[v88];
        goto LABEL_14;
      }
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
      v70 = *((_QWORD *)v68 + 4);
      *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
      *((_QWORD *)v67 + 4) = v70;
      v71 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v72 = *(int *)(v71 + 20);
      v246 = &v67[v72];
      v254 = v71;
      v240 = &v68[v72];
      v73 = *(void (**)(char *, char *, uint64_t))(v263 + 16);
      swift_bridgeObjectRetain();
      v73(v246, v240, v46);
      v74 = *(int *)(v254 + 24);
      v75 = &v67[v74];
    }
    v84 = &v68[v74];
LABEL_14:
    *v75 = *v84;
    swift_storeEnumTagMultiPayload();
    v73(&v60[*(int *)(v62 + 24)], &v61[*(int *)(v62 + 24)], v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
    v50 = v280;
    goto LABEL_15;
  }
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
LABEL_15:
  v89 = v50[20];
  a1 = v279;
  v90 = &v279[v89];
  v91 = &a2[v89];
  v92 = sub_23361D340();
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
  if (v94(v91, 1, v92))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
  }
  v96 = (int *)type metadata accessor for Actions();
  v97 = v96[5];
  v98 = &v90[v97];
  v99 = &v91[v97];
  if (v94(&v91[v97], 1, v92))
  {
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v99, v92);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v98, 0, 1, v92);
  }
  v101 = v96[6];
  v102 = &v90[v101];
  v103 = &v91[v101];
  if (v94(&v91[v101], 1, v92))
  {
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v102, v103, v92);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v102, 0, 1, v92);
  }
  v105 = v96[7];
  v106 = &v90[v105];
  v107 = &v91[v105];
  if (v94(&v91[v105], 1, v92))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v106, v107, v92);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v106, 0, 1, v92);
  }
  v109 = v96[8];
  v110 = &v90[v109];
  v111 = &v91[v109];
  if (v94(&v91[v109], 1, v92))
  {
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v110, v111, v92);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v110, 0, 1, v92);
  }
  v6 = v280;
  v279[v280[21]] = a2[v280[21]];
  v279[v280[22]] = a2[v280[22]];
  v279[v280[23]] = a2[v280[23]];
  v279[v280[24]] = a2[v280[24]];
  v279[v280[25]] = a2[v280[25]];
  v113 = v280[26];
  v114 = &v279[v113];
  v115 = &a2[v113];
  v116 = *((_QWORD *)v115 + 1);
  *(_QWORD *)v114 = *(_QWORD *)v115;
  *((_QWORD *)v114 + 1) = v116;
  v279[v280[27]] = a2[v280[27]];
  v117 = v280[28];
  v118 = &v279[v117];
  v119 = &a2[v117];
  swift_bridgeObjectRetain();
  if (v271(v119, 1, v277))
  {
    v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v263 + 16))(v118, v119, v277);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v118, 0, 1, v277);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v273 + 56))(v279, 0, 1, v280);
  a3 = v275;
LABEL_34:
  v121 = *(int *)(a3 + 20);
  v122 = &a1[v121];
  v123 = &a2[v121];
  v124 = sub_23361D6A0();
  v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
  v125(v122, v123, v124);
  v126 = v6[5];
  v127 = &v122[v126];
  v128 = &v123[v126];
  v129 = *((_QWORD *)v128 + 1);
  *(_QWORD *)v127 = *(_QWORD *)v128;
  *((_QWORD *)v127 + 1) = v129;
  v130 = *((_QWORD *)v128 + 3);
  *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
  *((_QWORD *)v127 + 3) = v130;
  v131 = v6[6];
  v132 = &v122[v131];
  v133 = &v123[v131];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v261 = v125;
  v264 = v124;
  v125(v132, v133, v124);
  *(_QWORD *)&v122[v6[7]] = *(_QWORD *)&v123[v6[7]];
  v134 = v6[8];
  v135 = &v122[v134];
  v136 = &v123[v134];
  v276 = *((_QWORD *)v136 + 1);
  *(_QWORD *)v135 = *(_QWORD *)v136;
  *((_QWORD *)v135 + 1) = v276;
  v122[v6[9]] = v123[v6[9]];
  v137 = v6[10];
  v138 = &v122[v137];
  v139 = &v123[v137];
  v140 = *((_QWORD *)v139 + 1);
  *(_QWORD *)v138 = *(_QWORD *)v139;
  *((_QWORD *)v138 + 1) = v140;
  v138[16] = v139[16];
  v141 = v6[11];
  v142 = &v122[v141];
  v143 = &v123[v141];
  v144 = *((_QWORD *)v143 + 1);
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *((_QWORD *)v142 + 1) = v144;
  v145 = v6[12];
  v146 = &v122[v145];
  v147 = &v123[v145];
  v148 = v6;
  v149 = *((_QWORD *)v147 + 1);
  *(_QWORD *)v146 = *(_QWORD *)v147;
  *((_QWORD *)v146 + 1) = v149;
  v122[v148[13]] = v123[v148[13]];
  v150 = v148[14];
  v151 = &v122[v150];
  v152 = &v123[v150];
  v153 = *((_QWORD *)v152 + 1);
  *(_QWORD *)v151 = *(_QWORD *)v152;
  *((_QWORD *)v151 + 1) = v153;
  v154 = v148[15];
  v155 = &v122[v154];
  v156 = &v123[v154];
  *(_OWORD *)v155 = *(_OWORD *)v156;
  *((_DWORD *)v155 + 4) = *((_DWORD *)v156 + 4);
  v157 = *((_QWORD *)v156 + 4);
  *((_QWORD *)v155 + 3) = *((_QWORD *)v156 + 3);
  *((_QWORD *)v155 + 4) = v157;
  v158 = v148[16];
  v272 = &v122[v158];
  v274 = v123;
  v159 = &v123[v158];
  v160 = sub_23361D634();
  v161 = *(_QWORD *)(v160 - 8);
  v162 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v278 = v160;
  __dsta = (_QWORD *)v161;
  if (v162(v159, 1, v160))
  {
    v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v272, v159, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v272, v159, v160);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v272, 0, 1, v160);
  }
  v164 = v280[17];
  v165 = &v122[v164];
  v166 = &v274[v164];
  *(_OWORD *)v165 = *(_OWORD *)v166;
  *((_DWORD *)v165 + 4) = *((_DWORD *)v166 + 4);
  v167 = *((_QWORD *)v166 + 4);
  *((_QWORD *)v165 + 3) = *((_QWORD *)v166 + 3);
  *((_QWORD *)v165 + 4) = v167;
  v168 = v280[18];
  v169 = &v122[v168];
  v170 = &v274[v168];
  *(_OWORD *)v169 = *(_OWORD *)v170;
  *((_DWORD *)v169 + 4) = *((_DWORD *)v170 + 4);
  v171 = *((_QWORD *)v170 + 4);
  *((_QWORD *)v169 + 3) = *((_QWORD *)v170 + 3);
  *((_QWORD *)v169 + 4) = v171;
  v172 = v280[19];
  v173 = &v122[v172];
  v174 = &v274[v172];
  v175 = type metadata accessor for InternalAccountBalance(0);
  v176 = *(_QWORD *)(v175 - 8);
  v177 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v177(v174, 1, v175))
  {
    v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
  }
  else
  {
    v261(v173, v174, v264);
    v179 = *(int *)(v175 + 20);
    v180 = &v173[v179];
    v181 = &v174[v179];
    type metadata accessor for BalanceCalculation(0);
    v182 = swift_getEnumCaseMultiPayload();
    if (v182 == 2)
    {
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_DWORD *)v180 + 4) = *((_DWORD *)v181 + 4);
      v191 = *((_QWORD *)v181 + 4);
      *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
      *((_QWORD *)v180 + 4) = v191;
      v251 = v176;
      v258 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v192 = *(int *)(v258 + 20);
      v193 = &v180[v192];
      v244 = &v181[v192];
      v194 = (void (*)(char *, char *, uint64_t))__dsta[2];
      v266 = v194;
      swift_bridgeObjectRetain();
      v195 = v193;
      v186 = v278;
      v194(v195, v244, v278);
      v180[*(int *)(v258 + 24)] = v181[*(int *)(v258 + 24)];
      v196 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v197 = &v180[v196];
      v198 = &v181[v196];
      *(_OWORD *)v197 = *(_OWORD *)v198;
      *((_DWORD *)v197 + 4) = *((_DWORD *)v198 + 4);
      v199 = *((_QWORD *)v198 + 4);
      *((_QWORD *)v197 + 3) = *((_QWORD *)v198 + 3);
      *((_QWORD *)v197 + 4) = v199;
      v200 = *(int *)(v258 + 20);
      v201 = &v197[v200];
      v245 = &v198[v200];
      swift_bridgeObjectRetain();
      v266(v201, v245, v278);
      v202 = *(int *)(v258 + 24);
      v188 = &v197[v202];
      v189 = &v198[v202];
      v190 = v266;
      v176 = v251;
    }
    else
    {
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_DWORD *)v180 + 4) = *((_DWORD *)v181 + 4);
      if (v182 == 1)
      {
        v183 = *((_QWORD *)v181 + 4);
        *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
        *((_QWORD *)v180 + 4) = v183;
        v184 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v185 = *(int *)(v184 + 20);
        v257 = &v180[v185];
        v262 = v184;
        v250 = &v181[v185];
        v265 = (void (*)(char *, char *, uint64_t))__dsta[2];
        swift_bridgeObjectRetain();
        v186 = v278;
        v265(v257, v250, v278);
        v187 = *(int *)(v262 + 24);
        v188 = &v180[v187];
        v189 = &v181[v187];
        v190 = v265;
      }
      else
      {
        v203 = *((_QWORD *)v181 + 4);
        *((_QWORD *)v180 + 3) = *((_QWORD *)v181 + 3);
        *((_QWORD *)v180 + 4) = v203;
        v267 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v204 = *(int *)(v267 + 20);
        v252 = &v181[v204];
        v259 = &v180[v204];
        v205 = (void (*)(char *, char *, uint64_t))__dsta[2];
        swift_bridgeObjectRetain();
        v186 = v278;
        v205(v259, v252, v278);
        v206 = *(int *)(v267 + 24);
        v188 = &v180[v206];
        v189 = &v181[v206];
        v190 = v205;
      }
    }
    *v188 = *v189;
    swift_storeEnumTagMultiPayload();
    v190(&v173[*(int *)(v175 + 24)], &v174[*(int *)(v175 + 24)], v186);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
  }
  v207 = v280[20];
  v208 = &v122[v207];
  v209 = &v274[v207];
  v210 = sub_23361D340();
  v211 = *(_QWORD *)(v210 - 8);
  v212 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
  if (v212(v209, 1, v210))
  {
    v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v208, v209, v210);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v208, 0, 1, v210);
  }
  v214 = (int *)type metadata accessor for Actions();
  v215 = v214[5];
  v216 = &v208[v215];
  v217 = &v209[v215];
  if (v212(&v209[v215], 1, v210))
  {
    v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v216, v217, v210);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v216, 0, 1, v210);
  }
  v219 = v214[6];
  v220 = &v208[v219];
  v221 = &v209[v219];
  if (v212(&v209[v219], 1, v210))
  {
    v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v220, v221, v210);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v220, 0, 1, v210);
  }
  v223 = v214[7];
  v224 = &v208[v223];
  v225 = &v209[v223];
  if (v212(&v209[v223], 1, v210))
  {
    v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v224, v225, v210);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v224, 0, 1, v210);
  }
  v227 = v214[8];
  v228 = &v208[v227];
  v229 = &v209[v227];
  if (v212(&v209[v227], 1, v210))
  {
    v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v228, v229, v210);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v228, 0, 1, v210);
  }
  v122[v280[21]] = v274[v280[21]];
  v122[v280[22]] = v274[v280[22]];
  v122[v280[23]] = v274[v280[23]];
  v122[v280[24]] = v274[v280[24]];
  v122[v280[25]] = v274[v280[25]];
  v231 = v280[26];
  v232 = &v122[v231];
  v233 = &v274[v231];
  v234 = *((_QWORD *)v233 + 1);
  *(_QWORD *)v232 = *(_QWORD *)v233;
  *((_QWORD *)v232 + 1) = v234;
  v122[v280[27]] = v274[v280[27]];
  v235 = v280[28];
  v236 = &v122[v235];
  v237 = &v274[v235];
  swift_bridgeObjectRetain();
  if (v162(v237, 1, v278))
  {
    v238 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))__dsta[2])(v236, v237, v278);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v236, 0, 1, v278);
  }
  return v279;
}

uint64_t assignWithCopy for BankConnectAccountChange(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  size_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(void *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, uint64_t);
  int v120;
  int v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int EnumCaseMultiPayload;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  _BYTE *v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  __int128 v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  int *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  void *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  void (*v191)(uint64_t, char *, uint64_t);
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  _QWORD *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  char *v206;
  uint64_t v207;
  _QWORD *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  void *v214;
  char *v215;
  uint64_t v216;
  uint64_t (*v217)(void *, uint64_t, uint64_t);
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t (*v231)(char *, uint64_t, uint64_t);
  int v232;
  int v233;
  uint64_t v234;
  char *v235;
  char *v236;
  int v237;
  __int128 v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(char *, char *, uint64_t);
  uint64_t v253;
  char *v254;
  char *v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  __int128 v262;
  uint64_t v263;
  char *v264;
  void (*v265)(char *, char *, uint64_t);
  __int128 v266;
  uint64_t v267;
  void (*v268)(char *, char *, uint64_t);
  uint64_t v269;
  __int128 v270;
  uint64_t v271;
  uint64_t v272;
  void (*v273)(char *, char *, uint64_t);
  uint64_t v274;
  char *v275;
  char *v276;
  __int128 v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t (*v286)(char *, uint64_t, uint64_t);
  int v287;
  int v288;
  uint64_t v289;
  int *v290;
  uint64_t v291;
  char *v292;
  char *v293;
  int v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  int v300;
  int v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  int v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  int v312;
  int v313;
  int *v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  char *v318;
  uint64_t v319;
  void *v320;
  char *v321;
  int v322;
  int v323;
  uint64_t v324;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  __int128 v330;
  uint64_t v331;
  uint64_t v332;
  void (*v333)(char *, char *, uint64_t);
  uint64_t v334;
  char *v335;
  char *v336;
  __int128 v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  __int128 v342;
  uint64_t v343;
  char *v344;
  __int128 v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __int128 v349;
  uint64_t v350;
  uint64_t v351;
  void (*v352)(char *, char *, uint64_t);
  uint64_t v353;
  char *v354;
  char *v355;
  __int128 v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t (*v366)(char *, uint64_t, uint64_t);
  int v367;
  int v368;
  uint64_t v369;
  int *v370;
  uint64_t v371;
  char *v372;
  char *v373;
  int v374;
  int v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  char *v379;
  int v380;
  int v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  int v386;
  int v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  int v392;
  int v393;
  uint64_t v394;
  uint64_t v395;
  _QWORD *v396;
  _QWORD *v397;
  uint64_t v398;
  void *v399;
  _BYTE *v400;
  int v401;
  int v402;
  char *v403;
  char *v404;
  char *v405;
  void (*v406)(char *, char *, uint64_t);
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  uint64_t v412;
  char *v413;
  char *v414;
  char *v415;
  char *v416;
  char *v417;
  char *v418;
  char *v419;
  char *v420;
  char *v421;
  char *v422;
  char *v423;
  char *v424;
  void *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  int *__dstd;
  char *__dste;
  void (*__dstf)(char *, char *, uint64_t);
  char *__dstg;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  void (*__dstk)(char *, char *, uint64_t);
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  unsigned int (*v441)(char *, uint64_t, uint64_t);
  uint64_t v442;
  uint64_t v443;
  void (*v444)(char *, char *, uint64_t);
  uint64_t v445;
  uint64_t v446;
  uint64_t (*v447)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v448)(uint64_t, uint64_t, uint64_t);
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  int *v456;
  _BYTE *v457;
  uint64_t v458;

  v6 = (int *)type metadata accessor for InternalAccount();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  v455 = a1;
  v456 = v6;
  v457 = a2;
  if (!v9)
  {
    if (v10)
    {
      sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      goto LABEL_7;
    }
    v453 = a3;
    v47 = sub_23361D6A0();
    v442 = *(_QWORD *)(v47 - 8);
    v48 = *(void (**)(uint64_t, char *, uint64_t))(v442 + 24);
    v48(a1, a2, v47);
    v49 = v6[5];
    v50 = (_QWORD *)(a1 + v49);
    v51 = &a2[v49];
    *v50 = *(_QWORD *)&a2[v49];
    v50[1] = *(_QWORD *)&a2[v49 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v50[2] = *((_QWORD *)v51 + 2);
    v50[3] = *((_QWORD *)v51 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v48(a1 + v6[6], &a2[v6[6]], v47);
    *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)&a2[v6[7]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v52 = v6[8];
    v53 = (_QWORD *)(a1 + v52);
    v54 = &a2[v52];
    *v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + v6[9]) = a2[v6[9]];
    v55 = v6[10];
    v56 = a1 + v55;
    v57 = &a2[v55];
    *(_QWORD *)v56 = *(_QWORD *)&a2[v55];
    *(_QWORD *)(v56 + 8) = *(_QWORD *)&a2[v55 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v56 + 16) = v57[16];
    v58 = v6[11];
    v59 = (_QWORD *)(a1 + v58);
    v60 = &a2[v58];
    *v59 = *v60;
    v59[1] = v60[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61 = v6[12];
    v62 = (_QWORD *)(a1 + v61);
    v63 = &a2[v61];
    *v62 = *v63;
    v62[1] = v63[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + v6[13]) = a2[v6[13]];
    v64 = v6[14];
    v65 = (_QWORD *)(a1 + v64);
    v66 = &a2[v64];
    *v65 = *v66;
    v65[1] = v66[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v67 = v6[15];
    v68 = a1 + v67;
    v69 = &a2[v67];
    *(_DWORD *)v68 = *(_DWORD *)v69;
    *(_WORD *)(v68 + 4) = *((_WORD *)v69 + 2);
    *(_WORD *)(v68 + 6) = *((_WORD *)v69 + 3);
    *(_WORD *)(v68 + 8) = *((_WORD *)v69 + 4);
    *(_WORD *)(v68 + 10) = *((_WORD *)v69 + 5);
    *(_WORD *)(v68 + 12) = *((_WORD *)v69 + 6);
    *(_WORD *)(v68 + 14) = *((_WORD *)v69 + 7);
    *(_WORD *)(v68 + 16) = *((_WORD *)v69 + 8);
    *(_WORD *)(v68 + 18) = *((_WORD *)v69 + 9);
    *(_QWORD *)(v68 + 24) = *((_QWORD *)v69 + 3);
    *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v70 = v6[16];
    v71 = (void *)(a1 + v70);
    v72 = &a2[v70];
    v73 = sub_23361D634();
    v74 = *(_QWORD *)(v73 - 8);
    v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
    v76 = v75(v71, 1, v73);
    v447 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v75;
    v77 = v75(v72, 1, v73);
    v450 = v74;
    if (v76)
    {
      if (!v77)
      {
        (*(void (**)(void *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        goto LABEL_21;
      }
    }
    else
    {
      if (!v77)
      {
        (*(void (**)(void *, char *, uint64_t))(v74 + 24))(v71, v72, v73);
LABEL_21:
        v108 = v6[17];
        v109 = a1 + v108;
        v110 = &v457[v108];
        *(_DWORD *)v109 = *(_DWORD *)v110;
        *(_WORD *)(v109 + 4) = *((_WORD *)v110 + 2);
        *(_WORD *)(v109 + 6) = *((_WORD *)v110 + 3);
        *(_WORD *)(v109 + 8) = *((_WORD *)v110 + 4);
        *(_WORD *)(v109 + 10) = *((_WORD *)v110 + 5);
        *(_WORD *)(v109 + 12) = *((_WORD *)v110 + 6);
        *(_WORD *)(v109 + 14) = *((_WORD *)v110 + 7);
        *(_WORD *)(v109 + 16) = *((_WORD *)v110 + 8);
        *(_WORD *)(v109 + 18) = *((_WORD *)v110 + 9);
        *(_QWORD *)(v109 + 24) = *((_QWORD *)v110 + 3);
        *(_QWORD *)(v109 + 32) = *((_QWORD *)v110 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v111 = v6[18];
        v112 = a1 + v111;
        v113 = &v457[v111];
        *(_DWORD *)v112 = *(_DWORD *)v113;
        *(_WORD *)(v112 + 4) = *((_WORD *)v113 + 2);
        *(_WORD *)(v112 + 6) = *((_WORD *)v113 + 3);
        *(_WORD *)(v112 + 8) = *((_WORD *)v113 + 4);
        *(_WORD *)(v112 + 10) = *((_WORD *)v113 + 5);
        *(_WORD *)(v112 + 12) = *((_WORD *)v113 + 6);
        *(_WORD *)(v112 + 14) = *((_WORD *)v113 + 7);
        *(_WORD *)(v112 + 16) = *((_WORD *)v113 + 8);
        *(_WORD *)(v112 + 18) = *((_WORD *)v113 + 9);
        *(_QWORD *)(v112 + 24) = *((_QWORD *)v113 + 3);
        *(_QWORD *)(v112 + 32) = *((_QWORD *)v113 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v114 = v6[19];
        v115 = (char *)(a1 + v114);
        v116 = &v457[v114];
        v117 = type metadata accessor for InternalAccountBalance(0);
        v118 = *(_QWORD *)(v117 - 8);
        v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
        v120 = v119(v115, 1, v117);
        v121 = v119(v116, 1, v117);
        if (v120)
        {
          if (!v121)
          {
            (*(void (**)(char *, char *, uint64_t))(v442 + 16))(v115, v116, v47);
            v122 = *(int *)(v117 + 20);
            v123 = &v115[v122];
            v124 = &v116[v122];
            type metadata accessor for BalanceCalculation(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              v337 = *(_OWORD *)v124;
              *((_DWORD *)v123 + 4) = *((_DWORD *)v124 + 4);
              *(_OWORD *)v123 = v337;
              *((_QWORD *)v123 + 3) = *((_QWORD *)v124 + 3);
              *((_QWORD *)v123 + 4) = *((_QWORD *)v124 + 4);
              v338 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
              v339 = *(int *)(v338 + 20);
              v421 = &v124[v339];
              __dsth = &v123[v339];
              v129 = *(void (**)(char *, char *, uint64_t))(v450 + 16);
              swift_bridgeObjectRetain();
              v129(__dsth, v421, v73);
              v123[*(int *)(v338 + 24)] = v124[*(int *)(v338 + 24)];
              v340 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
              v341 = &v123[v340];
              v124 += v340;
              v342 = *(_OWORD *)v124;
              *((_DWORD *)v341 + 4) = *((_DWORD *)v124 + 4);
              *(_OWORD *)v341 = v342;
              *((_QWORD *)v341 + 3) = *((_QWORD *)v124 + 3);
              *((_QWORD *)v341 + 4) = *((_QWORD *)v124 + 4);
              v343 = *(int *)(v338 + 20);
              v422 = &v124[v343];
              __dsti = &v341[v343];
              swift_bridgeObjectRetain();
              v129(__dsti, v422, v73);
              v130 = *(int *)(v338 + 24);
              v131 = &v341[v130];
            }
            else
            {
              if (EnumCaseMultiPayload != 1)
              {
                v345 = *(_OWORD *)v124;
                *((_DWORD *)v123 + 4) = *((_DWORD *)v124 + 4);
                *(_OWORD *)v123 = v345;
                *((_QWORD *)v123 + 3) = *((_QWORD *)v124 + 3);
                *((_QWORD *)v123 + 4) = *((_QWORD *)v124 + 4);
                v346 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                v347 = *(int *)(v346 + 20);
                v423 = &v124[v347];
                __dstj = &v123[v347];
                v129 = *(void (**)(char *, char *, uint64_t))(v450 + 16);
                swift_bridgeObjectRetain();
                v129(__dstj, v423, v73);
                v348 = *(int *)(v346 + 24);
                v131 = &v123[v348];
                v344 = &v124[v348];
                v135 = v457;
                goto LABEL_127;
              }
              v126 = *(_OWORD *)v124;
              *((_DWORD *)v123 + 4) = *((_DWORD *)v124 + 4);
              *(_OWORD *)v123 = v126;
              *((_QWORD *)v123 + 3) = *((_QWORD *)v124 + 3);
              *((_QWORD *)v123 + 4) = *((_QWORD *)v124 + 4);
              v127 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
              v128 = *(int *)(v127 + 20);
              v413 = &v124[v128];
              __dsta = &v123[v128];
              v129 = *(void (**)(char *, char *, uint64_t))(v450 + 16);
              swift_bridgeObjectRetain();
              v129(__dsta, v413, v73);
              v130 = *(int *)(v127 + 24);
              v131 = &v123[v130];
            }
            v344 = &v124[v130];
            v135 = v457;
LABEL_127:
            *v131 = *v344;
            swift_storeEnumTagMultiPayload();
            v129(&v115[*(int *)(v117 + 24)], &v116[*(int *)(v117 + 24)], v73);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
LABEL_131:
            v134 = v455;
            v133 = v456;
LABEL_132:
            v361 = v133[20];
            v362 = (char *)(v134 + v361);
            v363 = &v135[v361];
            v364 = sub_23361D340();
            v365 = *(_QWORD *)(v364 - 8);
            v366 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v365 + 48);
            v367 = v366(v362, 1, v364);
            v368 = v366(v363, 1, v364);
            if (v367)
            {
              if (!v368)
              {
                (*(void (**)(char *, char *, uint64_t))(v365 + 16))(v362, v363, v364);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v362, 0, 1, v364);
                goto LABEL_138;
              }
            }
            else
            {
              if (!v368)
              {
                (*(void (**)(char *, char *, uint64_t))(v365 + 24))(v362, v363, v364);
LABEL_138:
                v370 = (int *)type metadata accessor for Actions();
                v371 = v370[5];
                v372 = &v362[v371];
                v373 = &v363[v371];
                v374 = v366(&v362[v371], 1, v364);
                v375 = v366(v373, 1, v364);
                if (v374)
                {
                  if (!v375)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v365 + 16))(v372, v373, v364);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v372, 0, 1, v364);
                    goto LABEL_144;
                  }
                }
                else
                {
                  if (!v375)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v365 + 24))(v372, v373, v364);
LABEL_144:
                    v377 = v370[6];
                    v378 = &v362[v377];
                    v379 = &v363[v377];
                    v380 = v366(&v362[v377], 1, v364);
                    v381 = v366(v379, 1, v364);
                    if (v380)
                    {
                      if (!v381)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v365 + 16))(v378, v379, v364);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v378, 0, 1, v364);
                        goto LABEL_150;
                      }
                    }
                    else
                    {
                      if (!v381)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v365 + 24))(v378, v379, v364);
LABEL_150:
                        v383 = v370[7];
                        v384 = &v362[v383];
                        v385 = &v363[v383];
                        v386 = v366(&v362[v383], 1, v364);
                        v387 = v366(v385, 1, v364);
                        if (v386)
                        {
                          if (!v387)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v365 + 16))(v384, v385, v364);
                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v384, 0, 1, v364);
                            goto LABEL_156;
                          }
                        }
                        else
                        {
                          if (!v387)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v365 + 24))(v384, v385, v364);
LABEL_156:
                            a2 = v457;
                            v389 = v370[8];
                            v390 = &v362[v389];
                            v391 = &v363[v389];
                            v392 = v366(&v362[v389], 1, v364);
                            v393 = v366(v391, 1, v364);
                            if (v392)
                            {
                              if (!v393)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v365 + 16))(v390, v391, v364);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v390, 0, 1, v364);
LABEL_162:
                                a1 = v455;
                                v6 = v456;
                                a3 = v453;
                                *(_BYTE *)(v455 + v456[21]) = v457[v456[21]];
                                *(_BYTE *)(v455 + v456[22]) = v457[v456[22]];
                                *(_BYTE *)(v455 + v456[23]) = v457[v456[23]];
                                *(_BYTE *)(v455 + v456[24]) = v457[v456[24]];
                                *(_BYTE *)(v455 + v456[25]) = v457[v456[25]];
                                v395 = v456[26];
                                v396 = (_QWORD *)(v455 + v395);
                                v397 = &v457[v395];
                                *v396 = *v397;
                                v396[1] = v397[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(_BYTE *)(v455 + v456[27]) = v457[v456[27]];
                                v398 = v456[28];
                                v399 = (void *)(v455 + v398);
                                v400 = &v457[v398];
                                v401 = v447(v455 + v398, 1, v73);
                                v402 = v447((uint64_t)v400, 1, v73);
                                if (v401)
                                {
                                  if (!v402)
                                  {
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v450 + 16))(v399, v400, v73);
                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v399, 0, 1, v73);
                                    goto LABEL_52;
                                  }
                                }
                                else
                                {
                                  if (!v402)
                                  {
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v450 + 24))(v399, v400, v73);
                                    goto LABEL_52;
                                  }
                                  (*(void (**)(void *, uint64_t))(v450 + 8))(v399, v73);
                                }
                                v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0)
                                                            - 8)
                                                + 64);
                                v45 = v399;
                                v46 = v400;
LABEL_8:
                                memcpy(v45, v46, v44);
                                goto LABEL_52;
                              }
                            }
                            else
                            {
                              if (!v393)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v365 + 24))(v390, v391, v364);
                                goto LABEL_162;
                              }
                              (*(void (**)(char *, uint64_t))(v365 + 8))(v390, v364);
                            }
                            v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                            memcpy(v390, v391, *(_QWORD *)(*(_QWORD *)(v394 - 8) + 64));
                            goto LABEL_162;
                          }
                          (*(void (**)(char *, uint64_t))(v365 + 8))(v384, v364);
                        }
                        v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                        memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v388 - 8) + 64));
                        goto LABEL_156;
                      }
                      (*(void (**)(char *, uint64_t))(v365 + 8))(v378, v364);
                    }
                    v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                    memcpy(v378, v379, *(_QWORD *)(*(_QWORD *)(v382 - 8) + 64));
                    goto LABEL_150;
                  }
                  (*(void (**)(char *, uint64_t))(v365 + 8))(v372, v364);
                }
                v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v372, v373, *(_QWORD *)(*(_QWORD *)(v376 - 8) + 64));
                goto LABEL_144;
              }
              (*(void (**)(char *, uint64_t))(v365 + 8))(v362, v364);
            }
            v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            memcpy(v362, v363, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
            goto LABEL_138;
          }
        }
        else
        {
          if (!v121)
          {
            v48((uint64_t)v115, v116, v47);
            v135 = v457;
            v326 = v450;
            if ((_BYTE *)v455 != v457)
            {
              v327 = *(int *)(v117 + 20);
              v328 = &v115[v327];
              v329 = &v116[v327];
              sub_233168500((uint64_t)&v115[v327], type metadata accessor for BalanceCalculation);
              type metadata accessor for BalanceCalculation(0);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                v349 = *(_OWORD *)v329;
                *((_DWORD *)v328 + 4) = *((_DWORD *)v329 + 4);
                *(_OWORD *)v328 = v349;
                *((_QWORD *)v328 + 3) = *((_QWORD *)v329 + 3);
                *((_QWORD *)v328 + 4) = *((_QWORD *)v329 + 4);
                v350 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                v351 = *(int *)(v350 + 20);
                v411 = &v329[v351];
                v424 = &v328[v351];
                v352 = *(void (**)(char *, char *, uint64_t))(v450 + 16);
                __dstk = v352;
                swift_bridgeObjectRetain();
                v352(v424, v411, v73);
                v328[*(int *)(v350 + 24)] = v329[*(int *)(v350 + 24)];
                v353 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
                v354 = &v328[v353];
                v355 = &v329[v353];
                v356 = *(_OWORD *)&v329[v353];
                *((_DWORD *)v354 + 4) = *(_DWORD *)&v329[v353 + 16];
                *(_OWORD *)v354 = v356;
                *((_QWORD *)v354 + 3) = *(_QWORD *)&v329[v353 + 24];
                *((_QWORD *)v354 + 4) = *(_QWORD *)&v329[v353 + 32];
                v357 = *(int *)(v350 + 20);
                v358 = &v354[v357];
                v359 = &v355[v357];
                swift_bridgeObjectRetain();
                __dstk(v358, v359, v73);
                v360 = *(int *)(v350 + 24);
                v335 = &v354[v360];
                v326 = v450;
                v336 = &v355[v360];
              }
              else
              {
                v330 = *(_OWORD *)v329;
                *((_DWORD *)v328 + 4) = *((_DWORD *)v329 + 4);
                *(_OWORD *)v328 = v330;
                *((_QWORD *)v328 + 3) = *((_QWORD *)v329 + 3);
                *((_QWORD *)v328 + 4) = *((_QWORD *)v329 + 4);
                v331 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                v332 = *(int *)(v331 + 20);
                v420 = &v329[v332];
                __dstg = &v328[v332];
                v333 = *(void (**)(char *, char *, uint64_t))(v450 + 16);
                swift_bridgeObjectRetain();
                v333(__dstg, v420, v73);
                v334 = *(int *)(v331 + 24);
                v335 = &v328[v334];
                v336 = &v329[v334];
              }
              *v335 = *v336;
              swift_storeEnumTagMultiPayload();
              v135 = v457;
            }
            (*(void (**)(char *, char *, uint64_t))(v326 + 24))(&v115[*(int *)(v117 + 24)], &v116[*(int *)(v117 + 24)], v73);
            goto LABEL_131;
          }
          sub_233168500((uint64_t)v115, type metadata accessor for InternalAccountBalance);
        }
        v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        v134 = v455;
        v133 = v456;
        v135 = v457;
        goto LABEL_132;
      }
      (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
    }
    v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0) - 8) + 64);
    v45 = (void *)a1;
    v46 = a2;
    goto LABEL_8;
  }
  v437 = v7;
  v452 = a3;
  v11 = sub_23361D6A0();
  v12 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  v13 = v6[5];
  v14 = (_QWORD *)(a1 + v13);
  v15 = &a2[v13];
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v16 = v6[6];
  v17 = a1 + v16;
  v18 = &a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v412 = v11;
  v12(v17, v18, v11);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)&a2[v6[7]];
  v19 = v6[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = &a2[v19];
  *v20 = *v21;
  v20[1] = v21[1];
  *(_BYTE *)(a1 + v6[9]) = a2[v6[9]];
  v22 = v6[10];
  v23 = a1 + v22;
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
  *(_BYTE *)(v23 + 16) = v24[16];
  v25 = v6[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = &a2[v25];
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = v6[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = &a2[v28];
  *v29 = *v30;
  v29[1] = v30[1];
  *(_BYTE *)(a1 + v6[13]) = a2[v6[13]];
  v31 = v6[14];
  v32 = (_QWORD *)(a1 + v31);
  v33 = &a2[v31];
  *v32 = *v33;
  v32[1] = v33[1];
  v34 = v6[15];
  v35 = a1 + v34;
  v36 = &a2[v34];
  v37 = *((_DWORD *)v36 + 4);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_DWORD *)(v35 + 16) = v37;
  *(_QWORD *)(v35 + 24) = *((_QWORD *)v36 + 3);
  *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
  v38 = v6[16];
  __dst = (void *)(a1 + v38);
  v39 = &a2[v38];
  v40 = sub_23361D634();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v441 = v42;
  v446 = v41;
  v449 = v40;
  if (v42(v39, 1, v40))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 16))(__dst, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
  }
  v78 = v456[17];
  v79 = a1 + v78;
  v80 = &a2[v78];
  v81 = *(_OWORD *)v80;
  *(_DWORD *)(v79 + 16) = *((_DWORD *)v80 + 4);
  *(_OWORD *)v79 = v81;
  *(_QWORD *)(v79 + 24) = *((_QWORD *)v80 + 3);
  *(_QWORD *)(v79 + 32) = *((_QWORD *)v80 + 4);
  v82 = v456[18];
  v83 = a1 + v82;
  v84 = &a2[v82];
  v85 = *(_OWORD *)v84;
  *(_DWORD *)(v83 + 16) = *((_DWORD *)v84 + 4);
  *(_OWORD *)v83 = v85;
  *(_QWORD *)(v83 + 24) = *((_QWORD *)v84 + 3);
  *(_QWORD *)(v83 + 32) = *((_QWORD *)v84 + 4);
  v86 = v456[19];
  v87 = (char *)(a1 + v86);
  v88 = &a2[v86];
  v89 = type metadata accessor for InternalAccountBalance(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v91(v88, 1, v89))
  {
    v12((uint64_t)v87, v88, v412);
    v93 = *(int *)(v89 + 20);
    v94 = &v87[v93];
    v95 = &v88[v93];
    type metadata accessor for BalanceCalculation(0);
    v96 = swift_getEnumCaseMultiPayload();
    if (v96 == 2)
    {
      v136 = *(_OWORD *)v95;
      *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
      *(_OWORD *)v94 = v136;
      *((_QWORD *)v94 + 3) = *((_QWORD *)v95 + 3);
      *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
      v137 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v138 = *(int *)(v137 + 20);
      v139 = &v94[v138];
      v403 = &v95[v138];
      v140 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v406 = v140;
      swift_bridgeObjectRetain();
      v141 = v139;
      v103 = v449;
      v140(v141, v403, v449);
      v94[*(int *)(v137 + 24)] = v95[*(int *)(v137 + 24)];
      v142 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v143 = &v94[v142];
      v144 = &v95[v142];
      v145 = *(_OWORD *)&v95[v142];
      *((_DWORD *)v143 + 4) = *(_DWORD *)&v95[v142 + 16];
      *(_OWORD *)v143 = v145;
      *((_QWORD *)v143 + 3) = *(_QWORD *)&v95[v142 + 24];
      *((_QWORD *)v143 + 4) = *(_QWORD *)&v95[v142 + 32];
      v146 = *(int *)(v137 + 20);
      v147 = &v143[v146];
      v404 = &v144[v146];
      swift_bridgeObjectRetain();
      v406(v147, v404, v449);
      v148 = *(int *)(v137 + 24);
      v105 = &v143[v148];
      v106 = &v144[v148];
      v101 = v406;
    }
    else
    {
      if (v96 != 1)
      {
        v149 = *(_OWORD *)v95;
        *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
        *(_OWORD *)v94 = v149;
        *((_QWORD *)v94 + 3) = *((_QWORD *)v95 + 3);
        *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
        v150 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v151 = *(int *)(v150 + 20);
        v407 = &v94[v151];
        v152 = &v95[v151];
        v153 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        swift_bridgeObjectRetain();
        v154 = v152;
        v101 = v153;
        v103 = v449;
        v101(v407, v154, v449);
        v155 = *(int *)(v150 + 24);
        v105 = &v94[v155];
        v106 = &v95[v155];
        a2 = v457;
        goto LABEL_32;
      }
      v97 = *(_OWORD *)v95;
      *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
      *(_OWORD *)v94 = v97;
      *((_QWORD *)v94 + 3) = *((_QWORD *)v95 + 3);
      *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
      v98 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v99 = *(int *)(v98 + 20);
      v100 = &v94[v99];
      v405 = &v95[v99];
      v101 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      swift_bridgeObjectRetain();
      v102 = v100;
      v103 = v449;
      v101(v102, v405, v449);
      v104 = *(int *)(v98 + 24);
      v105 = &v94[v104];
      v106 = &v95[v104];
    }
    a2 = v457;
LABEL_32:
    *v105 = *v106;
    swift_storeEnumTagMultiPayload();
    v101(&v87[*(int *)(v89 + 24)], &v88[*(int *)(v89 + 24)], v103);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    a1 = v455;
    goto LABEL_33;
  }
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_33:
  v156 = v456[20];
  v157 = (char *)(a1 + v156);
  v158 = &a2[v156];
  v159 = sub_23361D340();
  v160 = *(_QWORD *)(v159 - 8);
  v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
  if (v161(v158, 1, v159))
  {
    v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
  }
  v163 = (int *)type metadata accessor for Actions();
  v164 = v163[5];
  v165 = &v157[v164];
  v166 = &v158[v164];
  if (v161(&v158[v164], 1, v159))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v165, v166, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v165, 0, 1, v159);
  }
  v168 = v163[6];
  v169 = &v157[v168];
  v170 = &v158[v168];
  if (v161(&v158[v168], 1, v159))
  {
    v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v169, v170, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v169, 0, 1, v159);
  }
  v172 = v163[7];
  v173 = &v157[v172];
  v174 = &v158[v172];
  if (v161(&v158[v172], 1, v159))
  {
    v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v173, v174, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v173, 0, 1, v159);
  }
  v176 = v163[8];
  v177 = &v157[v176];
  v178 = &v158[v176];
  if (v161(&v158[v176], 1, v159))
  {
    v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v177, v178, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v177, 0, 1, v159);
  }
  a1 = v455;
  v6 = v456;
  a3 = v452;
  *(_BYTE *)(v455 + v456[21]) = a2[v456[21]];
  *(_BYTE *)(v455 + v456[22]) = a2[v456[22]];
  *(_BYTE *)(v455 + v456[23]) = a2[v456[23]];
  *(_BYTE *)(v455 + v456[24]) = a2[v456[24]];
  *(_BYTE *)(v455 + v456[25]) = a2[v456[25]];
  v180 = v456[26];
  v181 = (_QWORD *)(v455 + v180);
  v182 = &a2[v180];
  *v181 = *v182;
  v181[1] = v182[1];
  *(_BYTE *)(v455 + v456[27]) = a2[v456[27]];
  v183 = v456[28];
  v184 = (void *)(v455 + v183);
  v185 = &a2[v183];
  swift_bridgeObjectRetain();
  if (v441(v185, 1, v449))
  {
    v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v446 + 16))(v184, v185, v449);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v446 + 56))(v184, 0, 1, v449);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v437 + 56))(v455, 0, 1, v456);
LABEL_52:
  v187 = *(int *)(a3 + 20);
  v188 = a1 + v187;
  v189 = &a2[v187];
  v190 = sub_23361D6A0();
  v443 = *(_QWORD *)(v190 - 8);
  v191 = *(void (**)(uint64_t, char *, uint64_t))(v443 + 24);
  v191(v188, v189, v190);
  v192 = v6[5];
  v193 = (_QWORD *)(v188 + v192);
  v194 = &v189[v192];
  *v193 = *(_QWORD *)&v189[v192];
  v193[1] = *(_QWORD *)&v189[v192 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v193[2] = *((_QWORD *)v194 + 2);
  v193[3] = *((_QWORD *)v194 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v191(v188 + v6[6], &v189[v6[6]], v190);
  *(_QWORD *)(v188 + v6[7]) = *(_QWORD *)&v189[v6[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v195 = v6[8];
  v196 = (_QWORD *)(v188 + v195);
  v197 = &v189[v195];
  *v196 = *(_QWORD *)v197;
  v196[1] = *((_QWORD *)v197 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v188 + v6[9]) = v189[v6[9]];
  v198 = v6[10];
  v199 = v188 + v198;
  v200 = &v189[v198];
  *(_QWORD *)v199 = *(_QWORD *)&v189[v198];
  *(_QWORD *)(v199 + 8) = *(_QWORD *)&v189[v198 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v199 + 16) = v200[16];
  v201 = v6[11];
  v202 = (_QWORD *)(v188 + v201);
  v203 = &v189[v201];
  *v202 = *(_QWORD *)v203;
  v202[1] = *((_QWORD *)v203 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v204 = v6[12];
  v205 = (_QWORD *)(v188 + v204);
  v206 = &v189[v204];
  *v205 = *(_QWORD *)v206;
  v205[1] = *((_QWORD *)v206 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v188 + v6[13]) = v189[v6[13]];
  v207 = v6[14];
  v208 = (_QWORD *)(v188 + v207);
  v209 = &v189[v207];
  *v208 = *(_QWORD *)v209;
  v208[1] = *((_QWORD *)v209 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v210 = v6[15];
  v211 = v188 + v210;
  v212 = &v189[v210];
  *(_DWORD *)v211 = *(_DWORD *)v212;
  *(_WORD *)(v211 + 4) = *((_WORD *)v212 + 2);
  *(_WORD *)(v211 + 6) = *((_WORD *)v212 + 3);
  *(_WORD *)(v211 + 8) = *((_WORD *)v212 + 4);
  *(_WORD *)(v211 + 10) = *((_WORD *)v212 + 5);
  *(_WORD *)(v211 + 12) = *((_WORD *)v212 + 6);
  *(_WORD *)(v211 + 14) = *((_WORD *)v212 + 7);
  *(_WORD *)(v211 + 16) = *((_WORD *)v212 + 8);
  *(_WORD *)(v211 + 18) = *((_WORD *)v212 + 9);
  *(_QWORD *)(v211 + 24) = *((_QWORD *)v212 + 3);
  *(_QWORD *)(v211 + 32) = *((_QWORD *)v212 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v213 = v6[16];
  v214 = (void *)(v188 + v213);
  v215 = &v189[v213];
  v216 = sub_23361D634();
  v454 = *(_QWORD *)(v216 - 8);
  v217 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v454 + 48);
  LODWORD(v199) = v217(v214, 1, v216);
  v448 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v217;
  v218 = v217(v215, 1, v216);
  v451 = v216;
  if ((_DWORD)v199)
  {
    if (!v218)
    {
      (*(void (**)(void *, char *, uint64_t))(v454 + 16))(v214, v215, v216);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v454 + 56))(v214, 0, 1, v216);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v218)
  {
    (*(void (**)(void *, uint64_t))(v454 + 8))(v214, v216);
LABEL_57:
    v219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, char *, uint64_t))(v454 + 24))(v214, v215, v216);
LABEL_58:
  v220 = v6[17];
  v221 = v188 + v220;
  v222 = &v189[v220];
  *(_DWORD *)v221 = *(_DWORD *)v222;
  *(_WORD *)(v221 + 4) = *((_WORD *)v222 + 2);
  *(_WORD *)(v221 + 6) = *((_WORD *)v222 + 3);
  *(_WORD *)(v221 + 8) = *((_WORD *)v222 + 4);
  *(_WORD *)(v221 + 10) = *((_WORD *)v222 + 5);
  *(_WORD *)(v221 + 12) = *((_WORD *)v222 + 6);
  *(_WORD *)(v221 + 14) = *((_WORD *)v222 + 7);
  *(_WORD *)(v221 + 16) = *((_WORD *)v222 + 8);
  *(_WORD *)(v221 + 18) = *((_WORD *)v222 + 9);
  *(_QWORD *)(v221 + 24) = *((_QWORD *)v222 + 3);
  *(_QWORD *)(v221 + 32) = *((_QWORD *)v222 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v223 = v6[18];
  v224 = v188 + v223;
  v225 = &v189[v223];
  *(_DWORD *)v224 = *(_DWORD *)v225;
  *(_WORD *)(v224 + 4) = *((_WORD *)v225 + 2);
  *(_WORD *)(v224 + 6) = *((_WORD *)v225 + 3);
  *(_WORD *)(v224 + 8) = *((_WORD *)v225 + 4);
  *(_WORD *)(v224 + 10) = *((_WORD *)v225 + 5);
  *(_WORD *)(v224 + 12) = *((_WORD *)v225 + 6);
  *(_WORD *)(v224 + 14) = *((_WORD *)v225 + 7);
  *(_WORD *)(v224 + 16) = *((_WORD *)v225 + 8);
  *(_WORD *)(v224 + 18) = *((_WORD *)v225 + 9);
  *(_QWORD *)(v224 + 24) = *((_QWORD *)v225 + 3);
  *(_QWORD *)(v224 + 32) = *((_QWORD *)v225 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v226 = v6[19];
  v227 = (char *)(v188 + v226);
  v228 = &v189[v226];
  v229 = type metadata accessor for InternalAccountBalance(0);
  v230 = *(_QWORD *)(v229 - 8);
  v231 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v230 + 48);
  v232 = v231(v227, 1, v229);
  v233 = v231(v228, 1, v229);
  if (v232)
  {
    if (!v233)
    {
      (*(void (**)(char *, char *, uint64_t))(v443 + 16))(v227, v228, v190);
      v234 = *(int *)(v229 + 20);
      v235 = &v227[v234];
      v236 = &v228[v234];
      type metadata accessor for BalanceCalculation(0);
      v237 = swift_getEnumCaseMultiPayload();
      if (v237 == 2)
      {
        v256 = *(_OWORD *)v236;
        *((_DWORD *)v235 + 4) = *((_DWORD *)v236 + 4);
        *(_OWORD *)v235 = v256;
        *((_QWORD *)v235 + 3) = *((_QWORD *)v236 + 3);
        *((_QWORD *)v235 + 4) = *((_QWORD *)v236 + 4);
        v257 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v258 = *(int *)(v257 + 20);
        v416 = &v235[v258];
        __dstd = (int *)v257;
        v408 = &v236[v258];
        v259 = *(void (**)(char *, char *, uint64_t))(v454 + 16);
        v444 = v259;
        swift_bridgeObjectRetain();
        v241 = v451;
        v259(v416, v408, v451);
        v235[__dstd[6]] = v236[__dstd[6]];
        v260 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
        v261 = &v235[v260];
        v236 += v260;
        v262 = *(_OWORD *)v236;
        *((_DWORD *)v261 + 4) = *((_DWORD *)v236 + 4);
        *(_OWORD *)v261 = v262;
        *((_QWORD *)v261 + 3) = *((_QWORD *)v236 + 3);
        *((_QWORD *)v261 + 4) = *((_QWORD *)v236 + 4);
        v263 = __dstd[5];
        v409 = &v236[v263];
        v417 = &v261[v263];
        swift_bridgeObjectRetain();
        v444(v417, v409, v451);
        v242 = __dstd[6];
        v243 = &v261[v242];
      }
      else
      {
        if (v237 != 1)
        {
          v266 = *(_OWORD *)v236;
          *((_DWORD *)v235 + 4) = *((_DWORD *)v236 + 4);
          *(_OWORD *)v235 = v266;
          *((_QWORD *)v235 + 3) = *((_QWORD *)v236 + 3);
          *((_QWORD *)v235 + 4) = *((_QWORD *)v236 + 4);
          v445 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
          v267 = *(int *)(v445 + 20);
          v418 = &v236[v267];
          __dste = &v235[v267];
          v268 = *(void (**)(char *, char *, uint64_t))(v454 + 16);
          swift_bridgeObjectRetain();
          v241 = v451;
          v268(__dste, v418, v451);
          v269 = *(int *)(v445 + 24);
          v243 = &v235[v269];
          v264 = &v236[v269];
          v265 = v268;
          goto LABEL_73;
        }
        v238 = *(_OWORD *)v236;
        *((_DWORD *)v235 + 4) = *((_DWORD *)v236 + 4);
        *(_OWORD *)v235 = v238;
        *((_QWORD *)v235 + 3) = *((_QWORD *)v236 + 3);
        *((_QWORD *)v235 + 4) = *((_QWORD *)v236 + 4);
        v239 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v240 = *(int *)(v239 + 20);
        __dstb = &v235[v240];
        v438 = v239;
        v414 = &v236[v240];
        v444 = *(void (**)(char *, char *, uint64_t))(v454 + 16);
        swift_bridgeObjectRetain();
        v241 = v451;
        v444(__dstb, v414, v451);
        v242 = *(int *)(v438 + 24);
        v243 = &v235[v242];
      }
      v264 = &v236[v242];
      v265 = v444;
LABEL_73:
      *v243 = *v264;
      swift_storeEnumTagMultiPayload();
      v265(&v227[*(int *)(v229 + 24)], &v228[*(int *)(v229 + 24)], v241);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
      goto LABEL_77;
    }
LABEL_65:
    v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
    goto LABEL_77;
  }
  if (v233)
  {
    sub_233168500((uint64_t)v227, type metadata accessor for InternalAccountBalance);
    goto LABEL_65;
  }
  v191((uint64_t)v227, v228, v190);
  v245 = v451;
  if ((_BYTE *)v455 != v457)
  {
    v246 = *(int *)(v229 + 20);
    v247 = &v227[v246];
    v248 = &v228[v246];
    sub_233168500((uint64_t)&v227[v246], type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v270 = *(_OWORD *)v248;
      *((_DWORD *)v247 + 4) = *((_DWORD *)v248 + 4);
      *(_OWORD *)v247 = v270;
      *((_QWORD *)v247 + 3) = *((_QWORD *)v248 + 3);
      *((_QWORD *)v247 + 4) = *((_QWORD *)v248 + 4);
      v271 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v272 = *(int *)(v271 + 20);
      v410 = &v248[v272];
      v419 = &v247[v272];
      v273 = *(void (**)(char *, char *, uint64_t))(v454 + 16);
      __dstf = v273;
      v440 = v271;
      swift_bridgeObjectRetain();
      v273(v419, v410, v451);
      v247[*(int *)(v440 + 24)] = v248[*(int *)(v440 + 24)];
      v274 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v275 = &v247[v274];
      v276 = &v248[v274];
      v277 = *(_OWORD *)&v248[v274];
      *((_DWORD *)v275 + 4) = *(_DWORD *)&v248[v274 + 16];
      *(_OWORD *)v275 = v277;
      *((_QWORD *)v275 + 3) = *(_QWORD *)&v248[v274 + 24];
      *((_QWORD *)v275 + 4) = *(_QWORD *)&v248[v274 + 32];
      v278 = *(int *)(v440 + 20);
      v279 = &v275[v278];
      v280 = &v276[v278];
      swift_bridgeObjectRetain();
      __dstf(v279, v280, v451);
      v281 = *(int *)(v440 + 24);
      v254 = &v275[v281];
      v245 = v451;
      v255 = &v276[v281];
    }
    else
    {
      v249 = *(_OWORD *)v248;
      *((_DWORD *)v247 + 4) = *((_DWORD *)v248 + 4);
      *(_OWORD *)v247 = v249;
      *((_QWORD *)v247 + 3) = *((_QWORD *)v248 + 3);
      *((_QWORD *)v247 + 4) = *((_QWORD *)v248 + 4);
      v250 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v251 = *(int *)(v250 + 20);
      __dstc = &v247[v251];
      v439 = v250;
      v415 = &v248[v251];
      v252 = *(void (**)(char *, char *, uint64_t))(v454 + 16);
      swift_bridgeObjectRetain();
      v252(__dstc, v415, v451);
      v253 = *(int *)(v439 + 24);
      v254 = &v247[v253];
      v255 = &v248[v253];
    }
    *v254 = *v255;
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v454 + 24))(&v227[*(int *)(v229 + 24)], &v228[*(int *)(v229 + 24)], v245);
LABEL_77:
  v282 = v456[20];
  v283 = (char *)(v188 + v282);
  v284 = &v189[v282];
  v285 = sub_23361D340();
  v458 = *(_QWORD *)(v285 - 8);
  v286 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v458 + 48);
  v287 = v286(v283, 1, v285);
  v288 = v286(v284, 1, v285);
  if (v287)
  {
    if (!v288)
    {
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v283, v284, v285);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v283, 0, 1, v285);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v288)
  {
    (*(void (**)(char *, uint64_t))(v458 + 8))(v283, v285);
LABEL_82:
    v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v283, v284, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
    goto LABEL_83;
  }
  (*(void (**)(char *, char *, uint64_t))(v458 + 24))(v283, v284, v285);
LABEL_83:
  v290 = (int *)type metadata accessor for Actions();
  v291 = v290[5];
  v292 = &v283[v291];
  v293 = &v284[v291];
  v294 = v286(&v283[v291], 1, v285);
  v295 = v286(v293, 1, v285);
  if (v294)
  {
    if (!v295)
    {
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v292, v293, v285);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v292, 0, 1, v285);
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  if (v295)
  {
    (*(void (**)(char *, uint64_t))(v458 + 8))(v292, v285);
LABEL_88:
    v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(char *, char *, uint64_t))(v458 + 24))(v292, v293, v285);
LABEL_89:
  v297 = v290[6];
  v298 = &v283[v297];
  v299 = &v284[v297];
  v300 = v286(&v283[v297], 1, v285);
  v301 = v286(v299, 1, v285);
  if (v300)
  {
    if (!v301)
    {
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v298, v299, v285);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v298, 0, 1, v285);
      goto LABEL_95;
    }
    goto LABEL_94;
  }
  if (v301)
  {
    (*(void (**)(char *, uint64_t))(v458 + 8))(v298, v285);
LABEL_94:
    v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v298, v299, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
    goto LABEL_95;
  }
  (*(void (**)(char *, char *, uint64_t))(v458 + 24))(v298, v299, v285);
LABEL_95:
  v303 = v290[7];
  v304 = &v283[v303];
  v305 = &v284[v303];
  v306 = v286(&v283[v303], 1, v285);
  v307 = v286(v305, 1, v285);
  if (v306)
  {
    if (!v307)
    {
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v304, v305, v285);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v304, 0, 1, v285);
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  if (v307)
  {
    (*(void (**)(char *, uint64_t))(v458 + 8))(v304, v285);
LABEL_100:
    v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
    goto LABEL_101;
  }
  (*(void (**)(char *, char *, uint64_t))(v458 + 24))(v304, v305, v285);
LABEL_101:
  v309 = v290[8];
  v310 = &v283[v309];
  v311 = &v284[v309];
  v312 = v286(v310, 1, v285);
  v313 = v286(v311, 1, v285);
  if (v312)
  {
    v314 = v456;
    if (!v313)
    {
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v310, v311, v285);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v310, 0, 1, v285);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  v314 = v456;
  if (v313)
  {
    (*(void (**)(char *, uint64_t))(v458 + 8))(v310, v285);
LABEL_106:
    v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v310, v311, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
    goto LABEL_107;
  }
  (*(void (**)(char *, char *, uint64_t))(v458 + 24))(v310, v311, v285);
LABEL_107:
  *(_BYTE *)(v188 + v314[21]) = v189[v314[21]];
  *(_BYTE *)(v188 + v314[22]) = v189[v314[22]];
  *(_BYTE *)(v188 + v314[23]) = v189[v314[23]];
  *(_BYTE *)(v188 + v314[24]) = v189[v314[24]];
  *(_BYTE *)(v188 + v314[25]) = v189[v314[25]];
  v316 = v314[26];
  v317 = (_QWORD *)(v188 + v316);
  v318 = &v189[v316];
  *v317 = *(_QWORD *)v318;
  v317[1] = *((_QWORD *)v318 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v188 + v314[27]) = v189[v314[27]];
  v319 = v314[28];
  v320 = (void *)(v188 + v319);
  v321 = &v189[v319];
  v322 = v448(v188 + v319, 1, v451);
  v323 = v448((uint64_t)v321, 1, v451);
  if (!v322)
  {
    if (!v323)
    {
      (*(void (**)(void *, char *, uint64_t))(v454 + 24))(v320, v321, v451);
      return v455;
    }
    (*(void (**)(void *, uint64_t))(v454 + 8))(v320, v451);
    goto LABEL_112;
  }
  if (v323)
  {
LABEL_112:
    v324 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v324 - 8) + 64));
    return v455;
  }
  (*(void (**)(void *, char *, uint64_t))(v454 + 16))(v320, v321, v451);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v454 + 56))(v320, 0, 1, v451);
  return v455;
}

char *initializeWithTake for BankConnectAccountChange(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int EnumCaseMultiPayload;
  __int128 v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  __int128 v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  int v126;
  __int128 v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  char *v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  int *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  unsigned int (*v181)(char *, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  unsigned int (*v184)(char *, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;

  v6 = (int *)type metadata accessor for InternalAccount();
  v7 = *((_QWORD *)v6 - 1);
  v188 = a1;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_34;
  }
  v183 = v7;
  v185 = a3;
  v9 = sub_23361D6A0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v10(&a1[v6[6]], &a2[v6[6]], v9);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  a1[v6[9]] = a2[v6[9]];
  v15 = v6[10];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v16[16] = v17[16];
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
  a1[v6[13]] = a2[v6[13]];
  *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
  v18 = v6[15];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = v6[16];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_23361D634();
  v26 = *(_QWORD *)(v25 - 8);
  v181 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v189 = v25;
  v186 = v26;
  if (v181(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = v6[17];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  v32 = v6[18];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v36 = v6[19];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for InternalAccountBalance(0);
  v40 = *(_QWORD *)(v39 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v10(v37, v38, v9);
    v42 = *(int *)(v39 + 20);
    v43 = &v37[v42];
    v44 = &v38[v42];
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v51 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v51;
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      v174 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v52 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
      v52(&v43[*(int *)(v174 + 20)], &v44[*(int *)(v174 + 20)], v189);
      v43[*(int *)(v174 + 24)] = v44[*(int *)(v174 + 24)];
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v54 = &v43[v53];
      v44 += v53;
      v55 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v44;
      *((_OWORD *)v54 + 1) = v55;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v44 + 4);
      v52(&v43[v53 + *(int *)(v174 + 20)], &v44[*(int *)(v174 + 20)], v189);
      v49 = *(int *)(v174 + 24);
      v50 = &v54[v49];
      v47 = v52;
      v48 = v189;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v57 = *((_OWORD *)v44 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v57;
        *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
        v176 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v47 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
        v48 = v189;
        v47(&v43[*(int *)(v176 + 20)], &v44[*(int *)(v176 + 20)], v189);
        v58 = *(int *)(v176 + 24);
        v50 = &v43[v58];
        v56 = &v44[v58];
        goto LABEL_14;
      }
      v46 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v46;
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      v175 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v47 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
      v48 = v189;
      v47(&v43[*(int *)(v175 + 20)], &v44[*(int *)(v175 + 20)], v189);
      v49 = *(int *)(v175 + 24);
      v50 = &v43[v49];
    }
    v56 = &v44[v49];
LABEL_14:
    *v50 = *v56;
    swift_storeEnumTagMultiPayload();
    v47(&v37[*(int *)(v39 + 24)], &v38[*(int *)(v39 + 24)], v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    goto LABEL_15;
  }
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_15:
  v59 = v6[20];
  v60 = &v188[v59];
  v61 = &a2[v59];
  v62 = sub_23361D340();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v64(v61, 1, v62))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v66 = (int *)type metadata accessor for Actions();
  v67 = v66[5];
  v68 = &v60[v67];
  v69 = &v61[v67];
  if (v64(&v61[v67], 1, v62))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v68, v69, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v68, 0, 1, v62);
  }
  v71 = v66[6];
  v72 = &v60[v71];
  v73 = &v61[v71];
  if (v64(&v61[v71], 1, v62))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v72, v73, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v72, 0, 1, v62);
  }
  v75 = v66[7];
  v76 = &v60[v75];
  v77 = &v61[v75];
  if (v64(&v61[v75], 1, v62))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v76, v77, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v76, 0, 1, v62);
  }
  v79 = v66[8];
  v80 = &v60[v79];
  v81 = &v61[v79];
  if (v64(&v61[v79], 1, v62))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v80, v81, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v80, 0, 1, v62);
  }
  a1 = v188;
  a3 = v185;
  v188[v6[21]] = a2[v6[21]];
  v188[v6[22]] = a2[v6[22]];
  v188[v6[23]] = a2[v6[23]];
  v188[v6[24]] = a2[v6[24]];
  v188[v6[25]] = a2[v6[25]];
  *(_OWORD *)&v188[v6[26]] = *(_OWORD *)&a2[v6[26]];
  v188[v6[27]] = a2[v6[27]];
  v83 = v6[28];
  v84 = &v188[v83];
  v85 = &a2[v83];
  if (v181(&a2[v83], 1, v189))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v84, v85, v189);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(v84, 0, 1, v189);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v183 + 56))(v188, 0, 1, v6);
LABEL_34:
  v87 = *(int *)(a3 + 20);
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = sub_23361D6A0();
  v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32);
  v91(v88, v89, v90);
  v92 = v6[5];
  v93 = &v88[v92];
  v94 = &v89[v92];
  v95 = *((_OWORD *)v94 + 1);
  *(_OWORD *)v93 = *(_OWORD *)v94;
  *((_OWORD *)v93 + 1) = v95;
  v91(&v88[v6[6]], &v89[v6[6]], v90);
  *(_QWORD *)&v88[v6[7]] = *(_QWORD *)&v89[v6[7]];
  *(_OWORD *)&v88[v6[8]] = *(_OWORD *)&v89[v6[8]];
  v88[v6[9]] = v89[v6[9]];
  v96 = v6[10];
  v97 = &v88[v96];
  v98 = &v89[v96];
  v97[16] = v98[16];
  *(_OWORD *)v97 = *(_OWORD *)v98;
  *(_OWORD *)&v88[v6[11]] = *(_OWORD *)&v89[v6[11]];
  *(_OWORD *)&v88[v6[12]] = *(_OWORD *)&v89[v6[12]];
  v88[v6[13]] = v89[v6[13]];
  *(_OWORD *)&v88[v6[14]] = *(_OWORD *)&v89[v6[14]];
  v99 = v6[15];
  v100 = &v88[v99];
  v101 = &v89[v99];
  v102 = *((_OWORD *)v101 + 1);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *((_OWORD *)v100 + 1) = v102;
  *((_QWORD *)v100 + 4) = *((_QWORD *)v101 + 4);
  v103 = v6[16];
  v104 = &v88[v103];
  v105 = &v89[v103];
  v106 = sub_23361D634();
  v107 = *(_QWORD *)(v106 - 8);
  v184 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
  v182 = v107;
  if (v184(v105, 1, v106))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
  }
  v109 = v6[17];
  v110 = &v88[v109];
  v111 = &v89[v109];
  v112 = *((_OWORD *)v111 + 1);
  *(_OWORD *)v110 = *(_OWORD *)v111;
  *((_OWORD *)v110 + 1) = v112;
  *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
  v113 = v6[18];
  v114 = &v88[v113];
  v115 = &v89[v113];
  *((_QWORD *)v114 + 4) = *((_QWORD *)v115 + 4);
  v116 = *((_OWORD *)v115 + 1);
  *(_OWORD *)v114 = *(_OWORD *)v115;
  *((_OWORD *)v114 + 1) = v116;
  v117 = v6[19];
  v118 = &v88[v117];
  v119 = &v89[v117];
  v120 = type metadata accessor for InternalAccountBalance(0);
  v121 = *(_QWORD *)(v120 - 8);
  v190 = v106;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
  {
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_46;
  }
  v91(v118, v119, v90);
  v123 = *(int *)(v120 + 20);
  v124 = &v118[v123];
  v125 = &v119[v123];
  type metadata accessor for BalanceCalculation(0);
  v126 = swift_getEnumCaseMultiPayload();
  if (v126 == 2)
  {
    v133 = *((_OWORD *)v125 + 1);
    *(_OWORD *)v124 = *(_OWORD *)v125;
    *((_OWORD *)v124 + 1) = v133;
    *((_QWORD *)v124 + 4) = *((_QWORD *)v125 + 4);
    v134 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v179 = *(void (**)(char *, char *, uint64_t))(v182 + 32);
    v179(&v124[*(int *)(v134 + 20)], &v125[*(int *)(v134 + 20)], v190);
    v177 = v121;
    v135 = v134;
    v124[*(int *)(v134 + 24)] = v125[*(int *)(v134 + 24)];
    v136 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v137 = &v124[v136];
    v138 = &v125[v136];
    v139 = *((_OWORD *)v138 + 1);
    *(_OWORD *)v137 = *(_OWORD *)v138;
    *((_OWORD *)v137 + 1) = v139;
    *((_QWORD *)v137 + 4) = *((_QWORD *)v138 + 4);
    v179(&v124[v136 + *(int *)(v135 + 20)], &v138[*(int *)(v135 + 20)], v190);
    v140 = *(int *)(v135 + 24);
    v130 = &v137[v140];
    v131 = &v138[v140];
    v121 = v177;
    v132 = v179;
  }
  else
  {
    if (v126 != 1)
    {
      v142 = *((_OWORD *)v125 + 1);
      *(_OWORD *)v124 = *(_OWORD *)v125;
      *((_OWORD *)v124 + 1) = v142;
      *((_QWORD *)v124 + 4) = *((_QWORD *)v125 + 4);
      v180 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v143 = *(void (**)(char *, char *, uint64_t))(v182 + 32);
      v143(&v124[*(int *)(v180 + 20)], &v125[*(int *)(v180 + 20)], v190);
      v144 = *(int *)(v180 + 24);
      v130 = &v124[v144];
      v131 = &v125[v144];
      v132 = v143;
      v141 = v190;
      goto LABEL_45;
    }
    v127 = *((_OWORD *)v125 + 1);
    *(_OWORD *)v124 = *(_OWORD *)v125;
    *((_OWORD *)v124 + 1) = v127;
    *((_QWORD *)v124 + 4) = *((_QWORD *)v125 + 4);
    v178 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v128 = *(void (**)(char *, char *, uint64_t))(v182 + 32);
    v128(&v124[*(int *)(v178 + 20)], &v125[*(int *)(v178 + 20)], v190);
    v129 = *(int *)(v178 + 24);
    v130 = &v124[v129];
    v131 = &v125[v129];
    v132 = v128;
  }
  v141 = v190;
LABEL_45:
  *v130 = *v131;
  swift_storeEnumTagMultiPayload();
  v132(&v118[*(int *)(v120 + 24)], &v119[*(int *)(v120 + 24)], v141);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
LABEL_46:
  v145 = v6[20];
  v146 = &v88[v145];
  v147 = &v89[v145];
  v148 = sub_23361D340();
  v149 = *(_QWORD *)(v148 - 8);
  v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
  v187 = v149;
  if (v150(v147, 1, v148))
  {
    v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v146, v147, v148);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
  }
  v152 = (int *)type metadata accessor for Actions();
  v153 = v152[5];
  v154 = &v146[v153];
  v155 = &v147[v153];
  if (v150(&v147[v153], 1, v148))
  {
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v154, v155, v148);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v154, 0, 1, v148);
  }
  v157 = v152[6];
  v158 = &v146[v157];
  v159 = &v147[v157];
  if (v150(&v147[v157], 1, v148))
  {
    v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v158, v159, v148);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v158, 0, 1, v148);
  }
  v161 = v152[7];
  v162 = &v146[v161];
  v163 = &v147[v161];
  if (v150(&v147[v161], 1, v148))
  {
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v162, v163, v148);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v162, 0, 1, v148);
  }
  v165 = v152[8];
  v166 = &v146[v165];
  v167 = &v147[v165];
  if (v150(&v147[v165], 1, v148))
  {
    v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v166, v167, v148);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v166, 0, 1, v148);
  }
  v88[v6[21]] = v89[v6[21]];
  v88[v6[22]] = v89[v6[22]];
  v88[v6[23]] = v89[v6[23]];
  v88[v6[24]] = v89[v6[24]];
  v88[v6[25]] = v89[v6[25]];
  *(_OWORD *)&v88[v6[26]] = *(_OWORD *)&v89[v6[26]];
  v88[v6[27]] = v89[v6[27]];
  v169 = v6[28];
  v170 = &v88[v169];
  v171 = &v89[v169];
  if (v184(&v89[v169], 1, v190))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v170, v171, v190);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v170, 0, 1, v190);
  }
  return v188;
}

uint64_t assignWithTake for BankConnectAccountChange(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t (*v74)(void *, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t, uint64_t);
  int v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  int EnumCaseMultiPayload;
  __int128 v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  int *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  void (*v172)(uint64_t, char *, uint64_t);
  uint64_t v173;
  _QWORD *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  char *v209;
  uint64_t v210;
  uint64_t (*v211)(void *, uint64_t, uint64_t);
  int v212;
  int v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t (*v230)(char *, uint64_t, uint64_t);
  int v231;
  int v232;
  uint64_t v233;
  char *v234;
  char *v235;
  __int128 v236;
  uint64_t v237;
  void (*v238)(char *, char *, uint64_t);
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  int v247;
  __int128 v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  __int128 v252;
  uint64_t v253;
  char *v254;
  char *v255;
  __int128 v256;
  uint64_t v257;
  __int128 v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  uint64_t v261;
  char *v262;
  __int128 v263;
  char *v264;
  __int128 v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t (*v272)(char *, uint64_t, uint64_t);
  int v273;
  int v274;
  uint64_t v275;
  int *v276;
  uint64_t v277;
  char *v278;
  char *v279;
  int v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  int v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  int v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  int v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void *v307;
  char *v308;
  int v309;
  int v310;
  uint64_t v311;
  _BYTE *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  __int128 v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  __int128 v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  __int128 v325;
  char *v326;
  __int128 v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t (*v336)(char *, uint64_t, uint64_t);
  int v337;
  int v338;
  uint64_t v339;
  int *v340;
  uint64_t v341;
  char *v342;
  char *v343;
  int v344;
  int v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  int v350;
  int v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  int v356;
  int v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  int v362;
  int v363;
  uint64_t v364;
  uint64_t v365;
  _QWORD *v366;
  uint64_t *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  void *v371;
  _BYTE *v372;
  int v373;
  int v374;
  __int128 v375;
  uint64_t v376;
  void (*v377)(char *, char *, uint64_t);
  uint64_t v378;
  char *v379;
  __int128 v380;
  uint64_t v381;
  void (*v382)(char *, char *, uint64_t);
  void (*v383)(char *, char *, uint64_t);
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(char *, char *, uint64_t);
  unsigned int (*v388)(char *, uint64_t, uint64_t);
  uint64_t (*v389)(uint64_t, uint64_t, uint64_t);
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t (*v393)(uint64_t, uint64_t, uint64_t);
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  _BYTE *v401;
  uint64_t v402;
  int *v403;

  v6 = (int *)type metadata accessor for InternalAccount();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  v400 = a1;
  v401 = a2;
  v403 = v6;
  if (!v9)
  {
    if (v10)
    {
      sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      goto LABEL_7;
    }
    v34 = sub_23361D6A0();
    v385 = *(_QWORD *)(v34 - 8);
    v35 = *(void (**)(char *, char *, uint64_t))(v385 + 40);
    v35((char *)a1, a2, v34);
    v36 = v6[5];
    v37 = (_QWORD *)(a1 + v36);
    v38 = &a2[v36];
    v39 = *(_QWORD *)&a2[v36 + 8];
    *v37 = *(_QWORD *)&a2[v36];
    v37[1] = v39;
    swift_bridgeObjectRelease();
    v40 = *((_QWORD *)v38 + 3);
    v37[2] = *((_QWORD *)v38 + 2);
    v37[3] = v40;
    swift_bridgeObjectRelease();
    v383 = v35;
    v35((char *)(a1 + v403[6]), &a2[v403[6]], v34);
    *(_QWORD *)(a1 + v403[7]) = *(_QWORD *)&a2[v403[7]];
    swift_bridgeObjectRelease();
    v41 = v403[8];
    v42 = (_QWORD *)(a1 + v41);
    v43 = (uint64_t *)&a2[v41];
    v45 = *v43;
    v44 = v43[1];
    *v42 = v45;
    v42[1] = v44;
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + v403[9]) = a2[v403[9]];
    v46 = v403[10];
    v47 = a1 + v46;
    v48 = &a2[v46];
    v49 = *(_QWORD *)&a2[v46 + 8];
    *(_QWORD *)v47 = *(_QWORD *)&a2[v46];
    *(_QWORD *)(v47 + 8) = v49;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v47 + 16) = v48[16];
    v50 = v403[11];
    v51 = (_QWORD *)(a1 + v50);
    v52 = (uint64_t *)&a2[v50];
    v54 = *v52;
    v53 = v52[1];
    *v51 = v54;
    v51[1] = v53;
    swift_bridgeObjectRelease();
    v55 = v403[12];
    v56 = (_QWORD *)(a1 + v55);
    v57 = (uint64_t *)&a2[v55];
    v59 = *v57;
    v58 = v57[1];
    *v56 = v59;
    v56[1] = v58;
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + v403[13]) = a2[v403[13]];
    v60 = v403[14];
    v61 = (_QWORD *)(a1 + v60);
    v62 = (uint64_t *)&a2[v60];
    v64 = *v62;
    v63 = v62[1];
    *v61 = v64;
    v61[1] = v63;
    swift_bridgeObjectRelease();
    v65 = v403[15];
    v66 = a1 + v65;
    v67 = &a2[v65];
    *(_DWORD *)v66 = *(_DWORD *)v67;
    *(_OWORD *)(v66 + 4) = *(_OWORD *)(v67 + 4);
    v69 = *((_QWORD *)v67 + 3);
    v68 = *((_QWORD *)v67 + 4);
    *(_QWORD *)(v66 + 24) = v69;
    *(_QWORD *)(v66 + 32) = v68;
    swift_bridgeObjectRelease();
    v70 = v403[16];
    v71 = (void *)(a1 + v70);
    v72 = &a2[v70];
    v73 = sub_23361D634();
    v392 = *(_QWORD *)(v73 - 8);
    v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v392 + 48);
    v75 = v74(v71, 1, v73);
    v395 = v73;
    v389 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74;
    v76 = v74(v72, 1, v73);
    v398 = a3;
    if (v75)
    {
      if (!v76)
      {
        (*(void (**)(void *, char *, uint64_t))(v392 + 32))(v71, v72, v73);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v392 + 56))(v71, 0, 1, v73);
        goto LABEL_21;
      }
    }
    else
    {
      if (!v76)
      {
        (*(void (**)(void *, char *, uint64_t))(v392 + 40))(v71, v72, v73);
LABEL_21:
        v102 = v403[17];
        v103 = a1 + v102;
        v104 = &a2[v102];
        *(_DWORD *)v103 = *(_DWORD *)v104;
        *(_OWORD *)(v103 + 4) = *(_OWORD *)(v104 + 4);
        v106 = *((_QWORD *)v104 + 3);
        v105 = *((_QWORD *)v104 + 4);
        *(_QWORD *)(v103 + 24) = v106;
        *(_QWORD *)(v103 + 32) = v105;
        swift_bridgeObjectRelease();
        v107 = v403[18];
        v108 = a1 + v107;
        v109 = &a2[v107];
        *(_DWORD *)v108 = *(_DWORD *)v109;
        *(_OWORD *)(v108 + 4) = *(_OWORD *)(v109 + 4);
        v111 = *((_QWORD *)v109 + 3);
        v110 = *((_QWORD *)v109 + 4);
        *(_QWORD *)(v108 + 24) = v111;
        *(_QWORD *)(v108 + 32) = v110;
        swift_bridgeObjectRelease();
        v112 = v403[19];
        v113 = (char *)(a1 + v112);
        v114 = &a2[v112];
        v115 = type metadata accessor for InternalAccountBalance(0);
        v116 = *(_QWORD *)(v115 - 8);
        v117 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48);
        v118 = v117(v113, 1, v115);
        v119 = v117(v114, 1, v115);
        if (v118)
        {
          if (!v119)
          {
            (*(void (**)(char *, char *, uint64_t))(v385 + 32))(v113, v114, v34);
            v120 = *(int *)(v115 + 20);
            v121 = &v113[v120];
            v122 = &v114[v120];
            type metadata accessor for BalanceCalculation(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              v321 = *((_OWORD *)v122 + 1);
              *(_OWORD *)v121 = *(_OWORD *)v122;
              *((_OWORD *)v121 + 1) = v321;
              *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
              v322 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
              v126 = *(void (**)(char *, char *, uint64_t))(v392 + 32);
              v126(&v121[*(int *)(v322 + 20)], &v122[*(int *)(v322 + 20)], v73);
              v121[*(int *)(v322 + 24)] = v122[*(int *)(v322 + 24)];
              v323 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
              v324 = &v121[v323];
              v122 += v323;
              v325 = *((_OWORD *)v122 + 1);
              *(_OWORD *)v324 = *(_OWORD *)v122;
              *((_OWORD *)v324 + 1) = v325;
              *((_QWORD *)v324 + 4) = *((_QWORD *)v122 + 4);
              v126(&v121[v323 + *(int *)(v322 + 20)], &v122[*(int *)(v322 + 20)], v395);
              v127 = *(int *)(v322 + 24);
              v128 = &v324[v127];
              v73 = v395;
            }
            else
            {
              if (EnumCaseMultiPayload != 1)
              {
                v327 = *((_OWORD *)v122 + 1);
                *(_OWORD *)v121 = *(_OWORD *)v122;
                *((_OWORD *)v121 + 1) = v327;
                *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
                v328 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                v126 = *(void (**)(char *, char *, uint64_t))(v392 + 32);
                v126(&v121[*(int *)(v328 + 20)], &v122[*(int *)(v328 + 20)], v73);
                v329 = *(int *)(v328 + 24);
                v128 = &v121[v329];
                v326 = &v122[v329];
                goto LABEL_127;
              }
              v124 = *((_OWORD *)v122 + 1);
              *(_OWORD *)v121 = *(_OWORD *)v122;
              *((_OWORD *)v121 + 1) = v124;
              *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
              v125 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
              v126 = *(void (**)(char *, char *, uint64_t))(v392 + 32);
              v126(&v121[*(int *)(v125 + 20)], &v122[*(int *)(v125 + 20)], v73);
              v127 = *(int *)(v125 + 24);
              v128 = &v121[v127];
            }
            v326 = &v122[v127];
LABEL_127:
            *v128 = *v326;
            swift_storeEnumTagMultiPayload();
            v126(&v113[*(int *)(v115 + 24)], &v114[*(int *)(v115 + 24)], v73);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
            goto LABEL_128;
          }
        }
        else
        {
          if (!v119)
          {
            v383(v113, v114, v34);
            v313 = v401;
            v6 = v403;
            if ((_BYTE *)v400 != v401)
            {
              v314 = *(int *)(v115 + 20);
              v315 = &v113[v314];
              v316 = &v114[v314];
              sub_233168500((uint64_t)&v113[v314], type metadata accessor for BalanceCalculation);
              type metadata accessor for BalanceCalculation(0);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                v375 = *((_OWORD *)v316 + 1);
                *(_OWORD *)v315 = *(_OWORD *)v316;
                *((_OWORD *)v315 + 1) = v375;
                *((_QWORD *)v315 + 4) = *((_QWORD *)v316 + 4);
                v376 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                v377 = *(void (**)(char *, char *, uint64_t))(v392 + 32);
                v377(&v315[*(int *)(v376 + 20)], &v316[*(int *)(v376 + 20)], v73);
                v315[*(int *)(v376 + 24)] = v316[*(int *)(v376 + 24)];
                v378 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
                v379 = &v315[v378];
                v316 += v378;
                v380 = *((_OWORD *)v316 + 1);
                *(_OWORD *)v379 = *(_OWORD *)v316;
                *((_OWORD *)v379 + 1) = v380;
                *((_QWORD *)v379 + 4) = *((_QWORD *)v316 + 4);
                v377(&v315[v378 + *(int *)(v376 + 20)], &v316[*(int *)(v376 + 20)], v73);
                v319 = *(int *)(v376 + 24);
                v320 = &v379[v319];
                v6 = v403;
              }
              else
              {
                v317 = *((_OWORD *)v316 + 1);
                *(_OWORD *)v315 = *(_OWORD *)v316;
                *((_OWORD *)v315 + 1) = v317;
                *((_QWORD *)v315 + 4) = *((_QWORD *)v316 + 4);
                v318 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
                (*(void (**)(char *, char *, uint64_t))(v392 + 32))(&v315[*(int *)(v318 + 20)], &v316[*(int *)(v318 + 20)], v73);
                v319 = *(int *)(v318 + 24);
                v320 = &v315[v319];
              }
              *v320 = v316[v319];
              swift_storeEnumTagMultiPayload();
              v313 = v401;
            }
            (*(void (**)(char *, char *, uint64_t))(v392 + 40))(&v113[*(int *)(v115 + 24)], &v114[*(int *)(v115 + 24)], v73);
            v330 = v400;
LABEL_129:
            v331 = v6[20];
            v332 = (char *)(v330 + v331);
            v333 = &v313[v331];
            v334 = sub_23361D340();
            v335 = *(_QWORD *)(v334 - 8);
            v336 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v335 + 48);
            v337 = v336(v332, 1, v334);
            v338 = v336(v333, 1, v334);
            if (v337)
            {
              if (!v338)
              {
                (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v332, v333, v334);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v332, 0, 1, v334);
                goto LABEL_135;
              }
            }
            else
            {
              if (!v338)
              {
                (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v332, v333, v334);
LABEL_135:
                v340 = (int *)type metadata accessor for Actions();
                v341 = v340[5];
                v342 = &v332[v341];
                v343 = &v333[v341];
                v344 = v336(&v332[v341], 1, v334);
                v345 = v336(v343, 1, v334);
                if (v344)
                {
                  if (!v345)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v342, v343, v334);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v342, 0, 1, v334);
                    goto LABEL_141;
                  }
                }
                else
                {
                  if (!v345)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v342, v343, v334);
LABEL_141:
                    v347 = v340[6];
                    v348 = &v332[v347];
                    v349 = &v333[v347];
                    v350 = v336(&v332[v347], 1, v334);
                    v351 = v336(v349, 1, v334);
                    if (v350)
                    {
                      if (!v351)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v348, v349, v334);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v348, 0, 1, v334);
                        goto LABEL_147;
                      }
                    }
                    else
                    {
                      if (!v351)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v348, v349, v334);
LABEL_147:
                        v353 = v340[7];
                        v354 = &v332[v353];
                        v355 = &v333[v353];
                        v356 = v336(&v332[v353], 1, v334);
                        v357 = v336(v355, 1, v334);
                        if (v356)
                        {
                          if (!v357)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v354, v355, v334);
                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v354, 0, 1, v334);
                            goto LABEL_153;
                          }
                        }
                        else
                        {
                          if (!v357)
                          {
                            (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v354, v355, v334);
LABEL_153:
                            a2 = v401;
                            v359 = v340[8];
                            v360 = &v332[v359];
                            v361 = &v333[v359];
                            v362 = v336(&v332[v359], 1, v334);
                            v363 = v336(v361, 1, v334);
                            if (v362)
                            {
                              if (!v363)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v360, v361, v334);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v360, 0, 1, v334);
LABEL_159:
                                a3 = v398;
                                a1 = v400;
                                *(_BYTE *)(v400 + v6[21]) = v401[v6[21]];
                                *(_BYTE *)(v400 + v6[22]) = v401[v6[22]];
                                *(_BYTE *)(v400 + v6[23]) = v401[v6[23]];
                                *(_BYTE *)(v400 + v6[24]) = v401[v6[24]];
                                *(_BYTE *)(v400 + v6[25]) = v401[v6[25]];
                                v365 = v6[26];
                                v366 = (_QWORD *)(v400 + v365);
                                v367 = (uint64_t *)&v401[v365];
                                v369 = *v367;
                                v368 = v367[1];
                                *v366 = v369;
                                v366[1] = v368;
                                swift_bridgeObjectRelease();
                                *(_BYTE *)(v400 + v6[27]) = v401[v6[27]];
                                v370 = v6[28];
                                v371 = (void *)(v400 + v370);
                                v372 = &v401[v370];
                                v373 = v389(v400 + v370, 1, v395);
                                v374 = v389((uint64_t)v372, 1, v395);
                                if (v373)
                                {
                                  if (!v374)
                                  {
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v392 + 32))(v371, v372, v395);
                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v392 + 56))(v371, 0, 1, v395);
                                    goto LABEL_52;
                                  }
                                }
                                else
                                {
                                  if (!v374)
                                  {
                                    (*(void (**)(void *, _BYTE *, uint64_t))(v392 + 40))(v371, v372, v395);
                                    goto LABEL_52;
                                  }
                                  (*(void (**)(void *, uint64_t))(v392 + 8))(v371, v395);
                                }
                                v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0)
                                                            - 8)
                                                + 64);
                                v32 = v371;
                                v33 = v372;
LABEL_8:
                                memcpy(v32, v33, v31);
                                goto LABEL_52;
                              }
                            }
                            else
                            {
                              if (!v363)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v360, v361, v334);
                                goto LABEL_159;
                              }
                              (*(void (**)(char *, uint64_t))(v335 + 8))(v360, v334);
                            }
                            v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                            memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
                            goto LABEL_159;
                          }
                          (*(void (**)(char *, uint64_t))(v335 + 8))(v354, v334);
                        }
                        v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                        memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v358 - 8) + 64));
                        goto LABEL_153;
                      }
                      (*(void (**)(char *, uint64_t))(v335 + 8))(v348, v334);
                    }
                    v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                    memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
                    goto LABEL_147;
                  }
                  (*(void (**)(char *, uint64_t))(v335 + 8))(v342, v334);
                }
                v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v342, v343, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
                goto LABEL_141;
              }
              (*(void (**)(char *, uint64_t))(v335 + 8))(v332, v334);
            }
            v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            memcpy(v332, v333, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
            goto LABEL_135;
          }
          sub_233168500((uint64_t)v113, type metadata accessor for InternalAccountBalance);
        }
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
LABEL_128:
        v330 = v400;
        v313 = v401;
        v6 = v403;
        goto LABEL_129;
      }
      (*(void (**)(void *, uint64_t))(v392 + 8))(v71, v73);
    }
    v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0) - 8) + 64);
    v32 = (void *)a1;
    v33 = a2;
    goto LABEL_8;
  }
  v11 = sub_23361D6A0();
  v12 = v6;
  v13 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v13(a1, a2, v11);
  v14 = v12[5];
  v15 = (_OWORD *)(a1 + v14);
  v16 = &a2[v14];
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v13(a1 + v12[6], &a2[v12[6]], v11);
  *(_QWORD *)(a1 + v12[7]) = *(_QWORD *)&a2[v12[7]];
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)&a2[v12[8]];
  *(_BYTE *)(a1 + v12[9]) = a2[v12[9]];
  v18 = v12[10];
  v19 = a1 + v18;
  v20 = &a2[v18];
  *(_BYTE *)(v19 + 16) = v20[16];
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(a1 + v12[11]) = *(_OWORD *)&a2[v12[11]];
  *(_OWORD *)(a1 + v12[12]) = *(_OWORD *)&a2[v12[12]];
  *(_BYTE *)(a1 + v12[13]) = a2[v12[13]];
  *(_OWORD *)(a1 + v12[14]) = *(_OWORD *)&a2[v12[14]];
  v21 = v12[15];
  v22 = a1 + v21;
  v23 = &a2[v21];
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
  v25 = v12[16];
  v26 = (void *)(a1 + v25);
  v27 = &a2[v25];
  v28 = sub_23361D634();
  v29 = *(_QWORD *)(v28 - 8);
  v388 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v394 = v28;
  v397 = a3;
  v391 = v29;
  if (v388(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v77 = v403[17];
  v78 = a1 + v77;
  v79 = &a2[v77];
  v80 = *((_OWORD *)v79 + 1);
  *(_OWORD *)v78 = *(_OWORD *)v79;
  *(_OWORD *)(v78 + 16) = v80;
  *(_QWORD *)(v78 + 32) = *((_QWORD *)v79 + 4);
  v81 = v403[18];
  v82 = a1 + v81;
  v83 = &a2[v81];
  *(_QWORD *)(v82 + 32) = *((_QWORD *)v83 + 4);
  v84 = *((_OWORD *)v83 + 1);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *(_OWORD *)(v82 + 16) = v84;
  v85 = v403[19];
  v86 = (char *)(a1 + v85);
  v87 = &a2[v85];
  v88 = type metadata accessor for InternalAccountBalance(0);
  v89 = *(_QWORD *)(v88 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
  {
    v13((uint64_t)v86, v87, v11);
    v91 = *(int *)(v88 + 20);
    v92 = &v86[v91];
    v93 = &v87[v91];
    type metadata accessor for BalanceCalculation(0);
    v94 = swift_getEnumCaseMultiPayload();
    if (v94 == 2)
    {
      v130 = *((_OWORD *)v93 + 1);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v130;
      *((_QWORD *)v92 + 4) = *((_QWORD *)v93 + 4);
      v131 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v97 = v394;
      v382 = *(void (**)(char *, char *, uint64_t))(v391 + 32);
      v382(&v92[*(int *)(v131 + 20)], &v93[*(int *)(v131 + 20)], v394);
      v381 = v131;
      v92[*(int *)(v131 + 24)] = v93[*(int *)(v131 + 24)];
      v132 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v133 = &v92[v132];
      v93 += v132;
      v134 = *((_OWORD *)v93 + 1);
      *(_OWORD *)v133 = *(_OWORD *)v93;
      *((_OWORD *)v133 + 1) = v134;
      *((_QWORD *)v133 + 4) = *((_QWORD *)v93 + 4);
      v135 = *(int *)(v131 + 20);
      v98 = v382;
      v382(&v133[v135], &v93[v135], v394);
      v99 = *(int *)(v381 + 24);
      v100 = &v133[v99];
    }
    else
    {
      if (v94 != 1)
      {
        v137 = *((_OWORD *)v93 + 1);
        *(_OWORD *)v92 = *(_OWORD *)v93;
        *((_OWORD *)v92 + 1) = v137;
        *((_QWORD *)v92 + 4) = *((_QWORD *)v93 + 4);
        v138 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v97 = v394;
        v98 = *(void (**)(char *, char *, uint64_t))(v391 + 32);
        v98(&v92[*(int *)(v138 + 20)], &v93[*(int *)(v138 + 20)], v394);
        v139 = *(int *)(v138 + 24);
        v100 = &v92[v139];
        v136 = &v93[v139];
        a2 = v401;
        goto LABEL_32;
      }
      v95 = *((_OWORD *)v93 + 1);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v95;
      *((_QWORD *)v92 + 4) = *((_QWORD *)v93 + 4);
      v96 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v97 = v394;
      v98 = *(void (**)(char *, char *, uint64_t))(v391 + 32);
      v98(&v92[*(int *)(v96 + 20)], &v93[*(int *)(v96 + 20)], v394);
      v99 = *(int *)(v96 + 24);
      v100 = &v92[v99];
    }
    v136 = &v93[v99];
    a2 = v401;
LABEL_32:
    *v100 = *v136;
    swift_storeEnumTagMultiPayload();
    v98(&v86[*(int *)(v88 + 24)], &v87[*(int *)(v88 + 24)], v97);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    goto LABEL_33;
  }
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
LABEL_33:
  v6 = v403;
  v140 = v403[20];
  v141 = (char *)(v400 + v140);
  v142 = &a2[v140];
  v143 = sub_23361D340();
  v144 = *(_QWORD *)(v143 - 8);
  v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48);
  if (v145(v142, 1, v143))
  {
    v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v141, v142, v143);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
  }
  v147 = (int *)type metadata accessor for Actions();
  v148 = v147[5];
  v149 = &v141[v148];
  v150 = &v142[v148];
  if (v145(&v142[v148], 1, v143))
  {
    v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v149, v150, v143);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v149, 0, 1, v143);
  }
  v152 = v147[6];
  v153 = &v141[v152];
  v154 = &v142[v152];
  if (v145(&v142[v152], 1, v143))
  {
    v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v153, v154, v143);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v153, 0, 1, v143);
  }
  v156 = v147[7];
  v157 = &v141[v156];
  v158 = &v142[v156];
  if (v145(&v142[v156], 1, v143))
  {
    v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v157, v158, v143);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v157, 0, 1, v143);
  }
  v160 = v147[8];
  v161 = &v141[v160];
  v162 = &v142[v160];
  if (v145(&v142[v160], 1, v143))
  {
    v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v161, v162, v143);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v161, 0, 1, v143);
  }
  a1 = v400;
  a2 = v401;
  a3 = v397;
  *(_BYTE *)(v400 + v403[21]) = v401[v403[21]];
  *(_BYTE *)(v400 + v403[22]) = v401[v403[22]];
  *(_BYTE *)(v400 + v403[23]) = v401[v403[23]];
  *(_BYTE *)(v400 + v403[24]) = v401[v403[24]];
  *(_BYTE *)(v400 + v403[25]) = v401[v403[25]];
  *(_OWORD *)(v400 + v403[26]) = *(_OWORD *)&v401[v403[26]];
  *(_BYTE *)(v400 + v403[27]) = v401[v403[27]];
  v164 = v403[28];
  v165 = (void *)(v400 + v164);
  v166 = &v401[v164];
  if (v388(&v401[v164], 1, v394))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v391 + 32))(v165, v166, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v391 + 56))(v165, 0, 1, v394);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v7 + 56))(v400, 0, 1, v403);
LABEL_52:
  v168 = *(int *)(a3 + 20);
  v169 = a1 + v168;
  v170 = &a2[v168];
  v171 = sub_23361D6A0();
  v390 = *(_QWORD *)(v171 - 8);
  v172 = *(void (**)(uint64_t, char *, uint64_t))(v390 + 40);
  v172(v169, v170, v171);
  v173 = v6[5];
  v174 = (_QWORD *)(v169 + v173);
  v175 = &v170[v173];
  v176 = *(_QWORD *)&v170[v173 + 8];
  *v174 = *(_QWORD *)&v170[v173];
  v174[1] = v176;
  swift_bridgeObjectRelease();
  v177 = *((_QWORD *)v175 + 3);
  v174[2] = *((_QWORD *)v175 + 2);
  v174[3] = v177;
  swift_bridgeObjectRelease();
  v172(v169 + v6[6], &v170[v6[6]], v171);
  *(_QWORD *)(v169 + v6[7]) = *(_QWORD *)&v170[v6[7]];
  swift_bridgeObjectRelease();
  v178 = v6[8];
  v179 = (_QWORD *)(v169 + v178);
  v180 = &v170[v178];
  v182 = *(_QWORD *)v180;
  v181 = *((_QWORD *)v180 + 1);
  *v179 = v182;
  v179[1] = v181;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v169 + v6[9]) = v170[v6[9]];
  v183 = v6[10];
  v184 = v169 + v183;
  v185 = &v170[v183];
  v186 = *(_QWORD *)&v170[v183 + 8];
  *(_QWORD *)v184 = *(_QWORD *)&v170[v183];
  *(_QWORD *)(v184 + 8) = v186;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v184 + 16) = v185[16];
  v187 = v6[11];
  v188 = (_QWORD *)(v169 + v187);
  v189 = &v170[v187];
  v191 = *(_QWORD *)v189;
  v190 = *((_QWORD *)v189 + 1);
  *v188 = v191;
  v188[1] = v190;
  swift_bridgeObjectRelease();
  v192 = v6[12];
  v193 = (_QWORD *)(v169 + v192);
  v194 = &v170[v192];
  v196 = *(_QWORD *)v194;
  v195 = *((_QWORD *)v194 + 1);
  *v193 = v196;
  v193[1] = v195;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v169 + v6[13]) = v170[v6[13]];
  v197 = v6[14];
  v198 = (_QWORD *)(v169 + v197);
  v199 = &v170[v197];
  v201 = *(_QWORD *)v199;
  v200 = *((_QWORD *)v199 + 1);
  *v198 = v201;
  v198[1] = v200;
  swift_bridgeObjectRelease();
  v202 = v6[15];
  v203 = v169 + v202;
  v204 = &v170[v202];
  *(_DWORD *)v203 = *(_DWORD *)v204;
  *(_OWORD *)(v203 + 4) = *(_OWORD *)(v204 + 4);
  v206 = *((_QWORD *)v204 + 3);
  v205 = *((_QWORD *)v204 + 4);
  *(_QWORD *)(v203 + 24) = v206;
  *(_QWORD *)(v203 + 32) = v205;
  swift_bridgeObjectRelease();
  v207 = v6[16];
  v208 = (void *)(v169 + v207);
  v209 = &v170[v207];
  v210 = sub_23361D634();
  v399 = *(_QWORD *)(v210 - 8);
  v211 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v399 + 48);
  v212 = v211(v208, 1, v210);
  v393 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v211;
  v213 = v211(v209, 1, v210);
  v396 = v210;
  if (v212)
  {
    if (!v213)
    {
      (*(void (**)(void *, char *, uint64_t))(v399 + 32))(v208, v209, v210);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v399 + 56))(v208, 0, 1, v210);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v213)
  {
    (*(void (**)(void *, uint64_t))(v399 + 8))(v208, v210);
LABEL_57:
    v214 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, char *, uint64_t))(v399 + 40))(v208, v209, v210);
LABEL_58:
  v215 = v6[17];
  v216 = v169 + v215;
  v217 = &v170[v215];
  *(_DWORD *)v216 = *(_DWORD *)v217;
  *(_OWORD *)(v216 + 4) = *(_OWORD *)(v217 + 4);
  v219 = *((_QWORD *)v217 + 3);
  v218 = *((_QWORD *)v217 + 4);
  *(_QWORD *)(v216 + 24) = v219;
  *(_QWORD *)(v216 + 32) = v218;
  swift_bridgeObjectRelease();
  v220 = v6[18];
  v221 = v169 + v220;
  v222 = &v170[v220];
  *(_DWORD *)v221 = *(_DWORD *)v222;
  *(_OWORD *)(v221 + 4) = *(_OWORD *)(v222 + 4);
  v224 = *((_QWORD *)v222 + 3);
  v223 = *((_QWORD *)v222 + 4);
  *(_QWORD *)(v221 + 24) = v224;
  *(_QWORD *)(v221 + 32) = v223;
  swift_bridgeObjectRelease();
  v225 = v6[19];
  v226 = (char *)(v169 + v225);
  v227 = &v170[v225];
  v228 = type metadata accessor for InternalAccountBalance(0);
  v229 = *(_QWORD *)(v228 - 8);
  v230 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v229 + 48);
  v231 = v230(v226, 1, v228);
  v232 = v230(v227, 1, v228);
  if (!v231)
  {
    if (v232)
    {
      sub_233168500((uint64_t)v226, type metadata accessor for InternalAccountBalance);
      goto LABEL_64;
    }
    v172((uint64_t)v226, v227, v171);
    v243 = v396;
    if ((_BYTE *)v400 == v401)
    {
LABEL_76:
      (*(void (**)(char *, char *, uint64_t))(v399 + 40))(&v226[*(int *)(v228 + 24)], &v227[*(int *)(v228 + 24)], v243);
      goto LABEL_77;
    }
    v244 = *(int *)(v228 + 20);
    v245 = &v226[v244];
    v246 = &v227[v244];
    sub_233168500((uint64_t)&v226[v244], type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    v247 = swift_getEnumCaseMultiPayload();
    if (v247 == 2)
    {
      v258 = *((_OWORD *)v246 + 1);
      *(_OWORD *)v245 = *(_OWORD *)v246;
      *((_OWORD *)v245 + 1) = v258;
      *((_QWORD *)v245 + 4) = *((_QWORD *)v246 + 4);
      v259 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v260 = *(void (**)(char *, char *, uint64_t))(v399 + 32);
      v260(&v245[*(int *)(v259 + 20)], &v246[*(int *)(v259 + 20)], v396);
      v245[*(int *)(v259 + 24)] = v246[*(int *)(v259 + 24)];
      v261 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v262 = &v245[v261];
      v246 += v261;
      v263 = *((_OWORD *)v246 + 1);
      *(_OWORD *)v262 = *(_OWORD *)v246;
      *((_OWORD *)v262 + 1) = v263;
      *((_QWORD *)v262 + 4) = *((_QWORD *)v246 + 4);
      v260(&v245[v261 + *(int *)(v259 + 20)], &v246[*(int *)(v259 + 20)], v396);
      v250 = *(int *)(v259 + 24);
      v251 = &v262[v250];
      v243 = v396;
    }
    else
    {
      if (v247 != 1)
      {
        v265 = *((_OWORD *)v246 + 1);
        *(_OWORD *)v245 = *(_OWORD *)v246;
        *((_OWORD *)v245 + 1) = v265;
        *((_QWORD *)v245 + 4) = *((_QWORD *)v246 + 4);
        v266 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        (*(void (**)(char *, char *, uint64_t))(v399 + 32))(&v245[*(int *)(v266 + 20)], &v246[*(int *)(v266 + 20)], v396);
        v267 = *(int *)(v266 + 24);
        v251 = &v245[v267];
        v264 = &v246[v267];
        goto LABEL_75;
      }
      v248 = *((_OWORD *)v246 + 1);
      *(_OWORD *)v245 = *(_OWORD *)v246;
      *((_OWORD *)v245 + 1) = v248;
      *((_QWORD *)v245 + 4) = *((_QWORD *)v246 + 4);
      v249 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, char *, uint64_t))(v399 + 32))(&v245[*(int *)(v249 + 20)], &v246[*(int *)(v249 + 20)], v396);
      v250 = *(int *)(v249 + 24);
      v251 = &v245[v250];
    }
    v264 = &v246[v250];
LABEL_75:
    *v251 = *v264;
    swift_storeEnumTagMultiPayload();
    goto LABEL_76;
  }
  if (v232)
  {
LABEL_64:
    v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
    goto LABEL_77;
  }
  (*(void (**)(char *, char *, uint64_t))(v390 + 32))(v226, v227, v171);
  v233 = *(int *)(v228 + 20);
  v234 = &v226[v233];
  v235 = &v227[v233];
  type metadata accessor for BalanceCalculation(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v252 = *((_OWORD *)v235 + 1);
    *(_OWORD *)v234 = *(_OWORD *)v235;
    *((_OWORD *)v234 + 1) = v252;
    *((_QWORD *)v234 + 4) = *((_QWORD *)v235 + 4);
    v384 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v237 = v396;
    v387 = *(void (**)(char *, char *, uint64_t))(v399 + 32);
    v387(&v234[*(int *)(v384 + 20)], &v235[*(int *)(v384 + 20)], v396);
    v234[*(int *)(v384 + 24)] = v235[*(int *)(v384 + 24)];
    v253 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v254 = &v234[v253];
    v255 = &v235[v253];
    v256 = *((_OWORD *)v255 + 1);
    *(_OWORD *)v254 = *(_OWORD *)v255;
    *((_OWORD *)v254 + 1) = v256;
    *((_QWORD *)v254 + 4) = *((_QWORD *)v255 + 4);
    v387(&v234[v253 + *(int *)(v384 + 20)], &v255[*(int *)(v384 + 20)], v396);
    v257 = *(int *)(v384 + 24);
    v240 = &v254[v257];
    v241 = &v255[v257];
    v238 = v387;
  }
  else
  {
    v236 = *((_OWORD *)v235 + 1);
    *(_OWORD *)v234 = *(_OWORD *)v235;
    *((_OWORD *)v234 + 1) = v236;
    *((_QWORD *)v234 + 4) = *((_QWORD *)v235 + 4);
    v386 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v237 = v396;
    v238 = *(void (**)(char *, char *, uint64_t))(v399 + 32);
    v238(&v234[*(int *)(v386 + 20)], &v235[*(int *)(v386 + 20)], v396);
    v239 = *(int *)(v386 + 24);
    v240 = &v234[v239];
    v241 = &v235[v239];
  }
  *v240 = *v241;
  swift_storeEnumTagMultiPayload();
  v238(&v226[*(int *)(v228 + 24)], &v227[*(int *)(v228 + 24)], v237);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
LABEL_77:
  v268 = v403[20];
  v269 = (char *)(v169 + v268);
  v270 = &v170[v268];
  v271 = sub_23361D340();
  v402 = *(_QWORD *)(v271 - 8);
  v272 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v402 + 48);
  v273 = v272(v269, 1, v271);
  v274 = v272(v270, 1, v271);
  if (v273)
  {
    if (!v274)
    {
      (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v269, v270, v271);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v269, 0, 1, v271);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v274)
  {
    (*(void (**)(char *, uint64_t))(v402 + 8))(v269, v271);
LABEL_82:
    v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
    goto LABEL_83;
  }
  (*(void (**)(char *, char *, uint64_t))(v402 + 40))(v269, v270, v271);
LABEL_83:
  v276 = (int *)type metadata accessor for Actions();
  v277 = v276[5];
  v278 = &v269[v277];
  v279 = &v270[v277];
  v280 = v272(&v269[v277], 1, v271);
  v281 = v272(v279, 1, v271);
  if (v280)
  {
    if (!v281)
    {
      (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v278, v279, v271);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v278, 0, 1, v271);
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  if (v281)
  {
    (*(void (**)(char *, uint64_t))(v402 + 8))(v278, v271);
LABEL_88:
    v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(char *, char *, uint64_t))(v402 + 40))(v278, v279, v271);
LABEL_89:
  v283 = v276[6];
  v284 = &v269[v283];
  v285 = &v270[v283];
  v286 = v272(&v269[v283], 1, v271);
  v287 = v272(v285, 1, v271);
  if (v286)
  {
    if (!v287)
    {
      (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v284, v285, v271);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v284, 0, 1, v271);
      goto LABEL_95;
    }
    goto LABEL_94;
  }
  if (v287)
  {
    (*(void (**)(char *, uint64_t))(v402 + 8))(v284, v271);
LABEL_94:
    v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v284, v285, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
    goto LABEL_95;
  }
  (*(void (**)(char *, char *, uint64_t))(v402 + 40))(v284, v285, v271);
LABEL_95:
  v289 = v276[7];
  v290 = &v269[v289];
  v291 = &v270[v289];
  v292 = v272(&v269[v289], 1, v271);
  v293 = v272(v291, 1, v271);
  if (v292)
  {
    if (!v293)
    {
      (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v290, v291, v271);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v290, 0, 1, v271);
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  if (v293)
  {
    (*(void (**)(char *, uint64_t))(v402 + 8))(v290, v271);
LABEL_100:
    v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
    goto LABEL_101;
  }
  (*(void (**)(char *, char *, uint64_t))(v402 + 40))(v290, v291, v271);
LABEL_101:
  v295 = v276[8];
  v296 = &v269[v295];
  v297 = &v270[v295];
  v298 = v272(v296, 1, v271);
  v299 = v272(v297, 1, v271);
  if (v298)
  {
    if (!v299)
    {
      (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v296, v297, v271);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v296, 0, 1, v271);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  if (v299)
  {
    (*(void (**)(char *, uint64_t))(v402 + 8))(v296, v271);
LABEL_106:
    v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v300 - 8) + 64));
    goto LABEL_107;
  }
  (*(void (**)(char *, char *, uint64_t))(v402 + 40))(v296, v297, v271);
LABEL_107:
  *(_BYTE *)(v169 + v403[21]) = v170[v403[21]];
  *(_BYTE *)(v169 + v403[22]) = v170[v403[22]];
  *(_BYTE *)(v169 + v403[23]) = v170[v403[23]];
  *(_BYTE *)(v169 + v403[24]) = v170[v403[24]];
  *(_BYTE *)(v169 + v403[25]) = v170[v403[25]];
  v301 = v403[26];
  v302 = (_QWORD *)(v169 + v301);
  v303 = &v170[v301];
  v305 = *(_QWORD *)v303;
  v304 = *((_QWORD *)v303 + 1);
  *v302 = v305;
  v302[1] = v304;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v169 + v403[27]) = v170[v403[27]];
  v306 = v403[28];
  v307 = (void *)(v169 + v306);
  v308 = &v170[v306];
  v309 = v393(v169 + v306, 1, v396);
  v310 = v393((uint64_t)v308, 1, v396);
  if (!v309)
  {
    if (!v310)
    {
      (*(void (**)(void *, char *, uint64_t))(v399 + 40))(v307, v308, v396);
      return v400;
    }
    (*(void (**)(void *, uint64_t))(v399 + 8))(v307, v396);
    goto LABEL_112;
  }
  if (v310)
  {
LABEL_112:
    v311 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
    return v400;
  }
  (*(void (**)(void *, char *, uint64_t))(v399 + 32))(v307, v308, v396);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v399 + 56))(v307, 0, 1, v396);
  return v400;
}

uint64_t getEnumTagSinglePayload for BankConnectAccountChange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331F6D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for InternalAccount();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BankConnectAccountChange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331F6DBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for InternalAccount();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2331F6E3C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2331F6EC0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for InternalAccount();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2331F6EC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2560454A0)
  {
    type metadata accessor for InternalAccount();
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2560454A0);
  }
}

uint64_t dispatch thunk of BankConnectWidgetRefreshing.refreshBalanceWidgetIfNecessary(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t storeEnumTagSinglePayload for WidgetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331F6F68 + 4 * byte_23362B6B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331F6F9C + 4 * byte_23362B6B0[v4]))();
}

uint64_t sub_2331F6F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331F6FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331F6FACLL);
  return result;
}

uint64_t sub_2331F6FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331F6FC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331F6FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331F6FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetType()
{
  return &type metadata for WidgetType;
}

uint64_t AssetAccount.init(id:displayName:accountDescription:institutionName:currencyCode:openingDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v19 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for AssetAccount(0);
  v21 = (_QWORD *)(a9 + v20[5]);
  *v21 = a2;
  v21[1] = a3;
  v22 = (_QWORD *)(a9 + v20[6]);
  *v22 = a4;
  v22[1] = a5;
  v23 = (_QWORD *)(a9 + v20[8]);
  *v23 = a8;
  v23[1] = a10;
  v24 = (_QWORD *)(a9 + v20[7]);
  *v24 = a6;
  v24[1] = a7;
  return sub_2331B05C8(a11, a9 + v20[9]);
}

uint64_t type metadata accessor for AssetAccount(uint64_t a1)
{
  return sub_233177414(a1, qword_256045738);
}

uint64_t LiabilityAccount.init(id:displayName:accountDescription:institutionName:currencyCode:creditLimit:nextPaymentDate:minimumPaymentAmount:overduePaymentAmount:openingDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int128 *a11, uint64_t a12, __int128 *a13, __int128 *a14, uint64_t a15)
{
  uint64_t v23;
  uint64_t v24;
  int *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v35 = a11[1];
  v36 = *a11;
  v23 = *((_QWORD *)a11 + 4);
  v39 = a13[1];
  v40 = *a13;
  v38 = *((_QWORD *)a13 + 4);
  v43 = *a14;
  v42 = a14[1];
  v41 = *((_QWORD *)a14 + 4);
  v24 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for LiabilityAccount(0);
  v26 = (_QWORD *)(a9 + v25[5]);
  *v26 = a2;
  v26[1] = a3;
  v27 = (_QWORD *)(a9 + v25[6]);
  *v27 = a4;
  v27[1] = a5;
  v28 = (_QWORD *)(a9 + v25[8]);
  *v28 = a8;
  v28[1] = a10;
  v29 = (_QWORD *)(a9 + v25[7]);
  *v29 = a6;
  v29[1] = a7;
  v30 = a9 + v25[9];
  *(_OWORD *)v30 = v36;
  *(_OWORD *)(v30 + 16) = v35;
  *(_QWORD *)(v30 + 32) = v23;
  v31 = (int *)type metadata accessor for AccountCreditInformation(0);
  sub_2331B05C8(a12, v30 + v31[5]);
  v32 = v30 + v31[6];
  *(_OWORD *)v32 = v40;
  *(_OWORD *)(v32 + 16) = v39;
  *(_QWORD *)(v32 + 32) = v38;
  v33 = v30 + v31[7];
  *(_OWORD *)v33 = v43;
  *(_OWORD *)(v33 + 16) = v42;
  *(_QWORD *)(v33 + 32) = v41;
  return sub_2331B05C8(a15, a9 + v25[10]);
}

uint64_t type metadata accessor for LiabilityAccount(uint64_t a1)
{
  return sub_233177414(a1, qword_2560457D8);
}

uint64_t type metadata accessor for AccountCreditInformation(uint64_t a1)
{
  return sub_233177414(a1, qword_2560456A0);
}

uint64_t Account.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for LiabilityAccount);
    v14 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v6, v14);
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for AssetAccount);
    v17 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, v9, v17);
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for AssetAccount;
  }
  return sub_233168500(v15, v16);
}

uint64_t type metadata accessor for Account(uint64_t a1)
{
  return sub_233177414(a1, qword_256045610);
}

uint64_t Account.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for LiabilityAccount);
    v12 = *(_QWORD *)&v4[*(int *)(v2 + 20)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for AssetAccount);
    v12 = *(_QWORD *)&v7[*(int *)(v5 + 20)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t Account.accountDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for LiabilityAccount);
    v12 = *(_QWORD *)&v4[*(int *)(v2 + 24)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for AssetAccount);
    v12 = *(_QWORD *)&v7[*(int *)(v5 + 24)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t Account.institutionName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for LiabilityAccount);
    v12 = *(_QWORD *)&v4[*(int *)(v2 + 28)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for AssetAccount);
    v12 = *(_QWORD *)&v7[*(int *)(v5 + 28)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t Account.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for LiabilityAccount);
    v12 = *(_QWORD *)&v4[*(int *)(v2 + 32)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for AssetAccount);
    v12 = *(_QWORD *)&v7[*(int *)(v5 + 32)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t Account.openingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for LiabilityAccount);
    sub_23319F164((uint64_t)&v6[*(int *)(v4 + 40)], a1);
    v14 = (uint64_t)v6;
    v15 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for AssetAccount);
    sub_23319F164((uint64_t)&v9[*(int *)(v7 + 36)], a1);
    v14 = (uint64_t)v9;
    v15 = type metadata accessor for AssetAccount;
  }
  return sub_233168500(v14, v15);
}

uint64_t sub_2331F7BA0()
{
  sub_2331FC088();
  return sub_23361F428();
}

uint64_t sub_2331F7BC8()
{
  sub_2331FC088();
  return sub_23361F434();
}

uint64_t sub_2331F7BF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x74696C696261696CLL;
  else
    return 0x7465737361;
}

uint64_t sub_2331F7C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233200F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331F7C50()
{
  sub_2331FC000();
  return sub_23361F428();
}

uint64_t sub_2331F7C78()
{
  sub_2331FC000();
  return sub_23361F434();
}

uint64_t sub_2331F7CA0()
{
  sub_2331FC044();
  return sub_23361F428();
}

uint64_t sub_2331F7CC8()
{
  sub_2331FC044();
  return sub_23361F434();
}

uint64_t Account.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560454D8);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v27);
  v28 = (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560454E0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560454E8);
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC000();
  sub_23361F410();
  sub_2331684BC(v33, (uint64_t)v12, type metadata accessor for Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = v28;
    sub_233168580((uint64_t)v12, v28, type metadata accessor for LiabilityAccount);
    v35 = 1;
    sub_2331FC044();
    v17 = v29;
    sub_23361F0C8();
    sub_233167C58(&qword_256045500, type metadata accessor for LiabilityAccount, (uint64_t)&protocol conformance descriptor for LiabilityAccount);
    v18 = v31;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v18);
    v19 = v16;
    v20 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for AssetAccount);
    v34 = 0;
    sub_2331FC088();
    sub_23361F0C8();
    sub_233167C58(&qword_256045510, type metadata accessor for AssetAccount, (uint64_t)&protocol conformance descriptor for AssetAccount);
    v21 = v26;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v21);
    v19 = (uint64_t)v9;
    v20 = type metadata accessor for AssetAccount;
  }
  sub_233168500(v19, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v13);
}

uint64_t Account.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;

  v36 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045518);
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v43 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045520);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045528);
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Account(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2331FC000();
  v19 = v45;
  sub_23361F3EC();
  if (v19)
    goto LABEL_5;
  v34 = v12;
  v35 = v15;
  v20 = v43;
  v33 = v17;
  v45 = v9;
  v21 = v6;
  v22 = v8;
  if (*(_QWORD *)(sub_23361F098() + 16) != 1)
  {
    v27 = sub_23361EE10();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v29 = v45;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
LABEL_5:
    v26 = (uint64_t)v44;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v46 = 1;
  sub_2331FC044();
  v23 = v20;
  sub_23361EFA8();
  type metadata accessor for LiabilityAccount(0);
  sub_233167C58(&qword_256045530, type metadata accessor for LiabilityAccount, (uint64_t)&protocol conformance descriptor for LiabilityAccount);
  v24 = (uint64_t)v34;
  v25 = v37;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v21);
  v26 = (uint64_t)v44;
  swift_storeEnumTagMultiPayload();
  v31 = (uint64_t)v33;
  sub_233168580(v24, (uint64_t)v33, type metadata accessor for Account);
  sub_233168580(v31, v36, type metadata accessor for Account);
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_2331F852C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Account.init(from:)(a1, a2);
}

uint64_t sub_2331F8540(_QWORD *a1)
{
  return Account.encode(to:)(a1);
}

uint64_t sub_2331F8558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v12, type metadata accessor for Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for LiabilityAccount);
    v13 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v6, v13);
    v14 = (uint64_t)v6;
    v15 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v10, type metadata accessor for AssetAccount);
    v16 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v10, v16);
    v14 = (uint64_t)v10;
    v15 = type metadata accessor for AssetAccount;
  }
  return sub_233168500(v14, v15);
}

uint64_t Account.liabilityAccount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v6, a1, type metadata accessor for LiabilityAccount);
    v8 = type metadata accessor for LiabilityAccount(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    v10 = type metadata accessor for LiabilityAccount(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    return sub_233168500((uint64_t)v6, type metadata accessor for Account);
  }
}

uint64_t Account.assetAccount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for AssetAccount(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
    return sub_233168500((uint64_t)v6, type metadata accessor for Account);
  }
  else
  {
    sub_233168580((uint64_t)v6, a1, type metadata accessor for AssetAccount);
    v10 = type metadata accessor for AssetAccount(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t Account.accountType.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v5, type metadata accessor for Account);
  *a1 = swift_getEnumCaseMultiPayload() == 1;
  return sub_233168500((uint64_t)v5, type metadata accessor for Account);
}

uint64_t AccountCreditInformation.creditLimit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AccountCreditInformation.nextPaymentDueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccountCreditInformation(0) + 20);
  return sub_23319F164(v3, a1);
}

uint64_t AccountCreditInformation.minimumNextPaymentAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for AccountCreditInformation(0) + 24);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AccountCreditInformation.overduePaymentAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for AccountCreditInformation(0) + 28);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AccountCreditInformation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  _DWORD v10[2];
  uint64_t v11;

  v1 = sub_23361D634();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 32))
  {
    v11 = *(_QWORD *)(v0 + 24);
    v10[1] = *(_DWORD *)(v0 + 16);
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361EAEC();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  v8 = (int *)type metadata accessor for AccountCreditInformation(0);
  sub_23319F164(v0 + v8[5], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23361F368();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23361F368();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(_QWORD *)(v0 + v8[6] + 32))
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361EAEC();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  if (!*(_QWORD *)(v0 + v8[7] + 32))
    return sub_23361F368();
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331F8CE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331F8D20 + 4 * byte_23362B7E0[a1]))(0x694C746964657263, 0xEB0000000074696DLL);
}

unint64_t sub_2331F8D20()
{
  return 0xD000000000000012;
}

unint64_t sub_2331F8D3C()
{
  return 0xD000000000000018;
}

uint64_t sub_2331F8D74()
{
  unsigned __int8 *v0;

  return sub_2331F8CE4(*v0);
}

uint64_t sub_2331F8D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233201088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331F8DA0()
{
  sub_2331FC0CC();
  return sub_23361F428();
}

uint64_t sub_2331F8DC8()
{
  sub_2331FC0CC();
  return sub_23361F434();
}

uint64_t AccountCreditInformation.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  __int128 *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045540);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC0CC();
  sub_23361F410();
  v9 = *((_QWORD *)v3 + 4);
  v10 = v3[1];
  v19 = *v3;
  v20 = v10;
  v21 = v9;
  v22 = 0;
  sub_23317231C();
  sub_23361F110();
  if (!v2)
  {
    v11 = type metadata accessor for AccountCreditInformation(0);
    LOBYTE(v19) = 1;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    v12 = (__int128 *)((char *)v3 + *(int *)(v11 + 24));
    v13 = *((_QWORD *)v12 + 4);
    v14 = v12[1];
    v19 = *v12;
    v20 = v14;
    v21 = v13;
    v22 = 2;
    sub_23361F110();
    v15 = (__int128 *)((char *)v3 + *(int *)(v11 + 28));
    v16 = *((_QWORD *)v15 + 4);
    v17 = v15[1];
    v19 = *v15;
    v20 = v17;
    v21 = v16;
    v22 = 3;
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AccountCreditInformation.hashValue.getter()
{
  sub_23361F350();
  AccountCreditInformation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t AccountCreditInformation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045550);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AccountCreditInformation(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC0CC();
  v27 = v8;
  v12 = v29;
  sub_23361F3EC();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v25 = a1;
  v29 = v6;
  v33 = 0;
  sub_233172558();
  v13 = v27;
  v14 = v28;
  sub_23361EFFC();
  v15 = v32;
  v16 = v31;
  *(_OWORD *)v11 = v30;
  *((_OWORD *)v11 + 1) = v16;
  *((_QWORD *)v11 + 4) = v15;
  sub_23361D634();
  LOBYTE(v30) = 1;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23361EFFC();
  sub_2331B05C8((uint64_t)v5, (uint64_t)&v11[v9[5]]);
  v33 = 2;
  sub_23361EFFC();
  v17 = v32;
  v18 = &v11[v9[6]];
  v19 = v31;
  *(_OWORD *)v18 = v30;
  *((_OWORD *)v18 + 1) = v19;
  *((_QWORD *)v18 + 4) = v17;
  v33 = 3;
  sub_23361EFFC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v14);
  v20 = v32;
  v21 = &v11[v9[7]];
  v22 = v31;
  *(_OWORD *)v21 = v30;
  *((_OWORD *)v21 + 1) = v22;
  *((_QWORD *)v21 + 4) = v20;
  sub_2331684BC((uint64_t)v11, v26, type metadata accessor for AccountCreditInformation);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return sub_233168500((uint64_t)v11, type metadata accessor for AccountCreditInformation);
}

uint64_t sub_2331F93DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountCreditInformation.init(from:)(a1, a2);
}

uint64_t sub_2331F93F0(_QWORD *a1)
{
  return AccountCreditInformation.encode(to:)(a1);
}

uint64_t sub_2331F9404()
{
  sub_23361F350();
  AccountCreditInformation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_2331F9444()
{
  sub_23361F350();
  AccountCreditInformation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t AssetAccount.displayName.getter()
{
  return sub_2331F9D44(type metadata accessor for AssetAccount);
}

uint64_t AssetAccount.accountDescription.getter()
{
  return sub_2331F9D90(type metadata accessor for AssetAccount);
}

uint64_t AssetAccount.institutionName.getter()
{
  return sub_2331F9DDC(type metadata accessor for AssetAccount);
}

uint64_t AssetAccount.currencyCode.getter()
{
  return sub_2331F9E28(type metadata accessor for AssetAccount);
}

uint64_t AssetAccount.openingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AssetAccount(0) + 36);
  return sub_23319F164(v3, a1);
}

uint64_t sub_2331F94E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331F9508 + 4 * byte_23362B7E4[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2331F9508()
{
  return 0x4E79616C70736964;
}

unint64_t sub_2331F9528()
{
  return 0xD000000000000012;
}

uint64_t sub_2331F9544()
{
  return 0x7475746974736E69;
}

uint64_t sub_2331F9568()
{
  return 0x79636E6572727563;
}

uint64_t sub_2331F9588()
{
  return 0x44676E696E65706FLL;
}

uint64_t sub_2331F95AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233201240(a1, a2);
  *a3 = result;
  return result;
}

void sub_2331F95D0(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2331F95DC()
{
  sub_2331FC110();
  return sub_23361F428();
}

uint64_t sub_2331F9604()
{
  sub_2331FC110();
  return sub_23361F434();
}

uint64_t AssetAccount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045558);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC110();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for AssetAccount(0);
    v8[14] = 1;
    sub_23361F140();
    v8[13] = 2;
    sub_23361F0E0();
    v8[12] = 3;
    sub_23361F140();
    v8[11] = 4;
    sub_23361F140();
    v8[10] = 5;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AssetAccount.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23361D6A0();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045568);
  v7 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC110();
  v38 = v9;
  v13 = v39;
  sub_23361F3EC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v39 = v7;
  v14 = (uint64_t)v12;
  v45 = 0;
  sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v35;
  v16 = v36;
  sub_23361F068();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v16, v15);
  v44 = 1;
  v17 = sub_23361F02C();
  v18 = (uint64_t *)(v14 + v10[5]);
  *v18 = v17;
  v18[1] = v19;
  v43 = 2;
  v20 = sub_23361EFCC();
  v21 = v39;
  v22 = (uint64_t *)(v14 + v10[6]);
  *v22 = v20;
  v22[1] = v23;
  v42 = 3;
  v36 = 0;
  v24 = sub_23361F02C();
  v25 = (uint64_t *)(v14 + v10[7]);
  *v25 = v24;
  v25[1] = v26;
  v41 = 4;
  v27 = sub_23361F02C();
  v28 = (uint64_t *)(v14 + v10[8]);
  *v28 = v27;
  v28[1] = v29;
  sub_23361D634();
  v40 = 5;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v30 = (uint64_t)v34;
  sub_23361EFFC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v38, v37);
  sub_2331B05C8(v30, v14 + v10[9]);
  sub_2331684BC(v14, v33, type metadata accessor for AssetAccount);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v14, type metadata accessor for AssetAccount);
}

uint64_t sub_2331F9D04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetAccount.init(from:)(a1, a2);
}

uint64_t sub_2331F9D18(_QWORD *a1)
{
  return AssetAccount.encode(to:)(a1);
}

uint64_t LiabilityAccount.displayName.getter()
{
  return sub_2331F9D44(type metadata accessor for LiabilityAccount);
}

uint64_t sub_2331F9D44(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LiabilityAccount.accountDescription.getter()
{
  return sub_2331F9D90(type metadata accessor for LiabilityAccount);
}

uint64_t sub_2331F9D90(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LiabilityAccount.institutionName.getter()
{
  return sub_2331F9DDC(type metadata accessor for LiabilityAccount);
}

uint64_t sub_2331F9DDC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LiabilityAccount.currencyCode.getter()
{
  return sub_2331F9E28(type metadata accessor for LiabilityAccount);
}

uint64_t sub_2331F9E28(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LiabilityAccount.creditInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LiabilityAccount(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 36), a1, type metadata accessor for AccountCreditInformation);
}

uint64_t LiabilityAccount.openingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LiabilityAccount(0) + 40);
  return sub_23319F164(v3, a1);
}

uint64_t sub_2331F9ED4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331F9EFC + 4 * byte_23362B7EA[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2331F9EFC()
{
  return 0x4E79616C70736964;
}

unint64_t sub_2331F9F1C()
{
  return 0xD000000000000012;
}

uint64_t sub_2331F9F3C()
{
  return 0x7475746974736E69;
}

uint64_t sub_2331F9F60()
{
  return 0x79636E6572727563;
}

unint64_t sub_2331F9F80()
{
  return 0xD000000000000011;
}

uint64_t sub_2331F9F9C()
{
  return 0x44676E696E65706FLL;
}

uint64_t sub_2331F9FC0()
{
  unsigned __int8 *v0;

  return sub_2331F9ED4(*v0);
}

uint64_t sub_2331F9FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2332014F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2331F9FEC(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2331F9FF8()
{
  sub_2331FC154();
  return sub_23361F428();
}

uint64_t sub_2331FA020()
{
  sub_2331FC154();
  return sub_23361F434();
}

uint64_t LiabilityAccount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045570);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331FC154();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for LiabilityAccount(0);
    v8[14] = 1;
    sub_23361F140();
    v8[13] = 2;
    sub_23361F0E0();
    v8[12] = 3;
    sub_23361F140();
    v8[11] = 4;
    sub_23361F140();
    v8[10] = 5;
    type metadata accessor for AccountCreditInformation(0);
    sub_233167C58(&qword_256045580, type metadata accessor for AccountCreditInformation, (uint64_t)&protocol conformance descriptor for AccountCreditInformation);
    sub_23361F17C();
    v8[9] = 6;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LiabilityAccount.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for AccountCreditInformation(0);
  MEMORY[0x24BDAC7A8](v39);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045588);
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2331FC154();
  v43 = v11;
  v16 = v45;
  sub_23361F3EC();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  v45 = v9;
  v36 = v7;
  v17 = (uint64_t)v14;
  v52 = 0;
  sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v18 = v41;
  v19 = v42;
  sub_23361F068();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v17, v18, v6);
  v51 = 1;
  v20 = sub_23361F02C();
  v21 = (uint64_t *)(v17 + v12[5]);
  *v21 = v20;
  v21[1] = v22;
  v50 = 2;
  v23 = sub_23361EFCC();
  v24 = (uint64_t *)(v17 + v12[6]);
  *v24 = v23;
  v24[1] = v25;
  v49 = 3;
  v26 = sub_23361F02C();
  v27 = (uint64_t *)(v17 + v12[7]);
  *v27 = v26;
  v27[1] = v28;
  v48 = 4;
  v29 = sub_23361F02C();
  v30 = v45;
  v31 = (uint64_t *)(v17 + v12[8]);
  *v31 = v29;
  v31[1] = v32;
  v47 = 5;
  sub_233167C58(&qword_256045590, type metadata accessor for AccountCreditInformation, (uint64_t)&protocol conformance descriptor for AccountCreditInformation);
  v33 = (uint64_t)v40;
  sub_23361F068();
  sub_233168580(v33, v17 + v12[9], type metadata accessor for AccountCreditInformation);
  sub_23361D634();
  v46 = 6;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v34 = (uint64_t)v38;
  sub_23361EFFC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v43, v19);
  sub_2331B05C8(v34, v17 + v12[10]);
  sub_2331684BC(v17, v37, type metadata accessor for LiabilityAccount);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  return sub_233168500(v17, type metadata accessor for LiabilityAccount);
}

uint64_t sub_2331FA890@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LiabilityAccount.init(from:)(a1, a2);
}

uint64_t sub_2331FA8A4(_QWORD *a1)
{
  return LiabilityAccount.encode(to:)(a1);
}

uint64_t static Account.managedObjectType.getter()
{
  return type metadata accessor for ManagedAccount();
}

uint64_t sub_2331FA8DC()
{
  return type metadata accessor for ManagedAccount();
}

uint64_t sub_2331FA900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for LiabilityAccount);
    v14 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a2, v6, v14);
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for AssetAccount);
    v17 = sub_23361D6A0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a2, v9, v17);
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for AssetAccount;
  }
  return sub_233168500(v15, v16);
}

uint64_t sub_2331FAA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for AssetAccount(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
    return sub_233168500((uint64_t)v6, type metadata accessor for Account);
  }
  else
  {
    sub_233168580((uint64_t)v6, a2, type metadata accessor for AssetAccount);
    v10 = type metadata accessor for AssetAccount(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
}

uint64_t sub_2331FAB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v6, a2, type metadata accessor for LiabilityAccount);
    v8 = type metadata accessor for LiabilityAccount(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
  else
  {
    v10 = type metadata accessor for LiabilityAccount(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
    return sub_233168500((uint64_t)v6, type metadata accessor for Account);
  }
}

uint64_t sub_2331FAC7C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v4 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v6, type metadata accessor for Account);
  LOBYTE(a1) = swift_getEnumCaseMultiPayload() == 1;
  result = sub_233168500((uint64_t)v6, type metadata accessor for Account);
  *a2 = a1;
  return result;
}

uint64_t sub_2331FAD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for LiabilityAccount);
    sub_23319F164((uint64_t)&v6[*(int *)(v4 + 40)], a2);
    v14 = (uint64_t)v6;
    v15 = type metadata accessor for LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for AssetAccount);
    sub_23319F164((uint64_t)&v9[*(int *)(v7 + 36)], a2);
    v14 = (uint64_t)v9;
    v15 = type metadata accessor for AssetAccount;
  }
  return sub_233168500(v14, v15);
}

uint64_t static ManagedAccount.entityName.getter()
{
  return 0x746E756F636341;
}

uint64_t sub_2331FAEB4()
{
  return 0x746E756F636341;
}

void sub_2331FAED4()
{
  qword_2560454D0 = MEMORY[0x24BEE4B00];
}

uint64_t static ManagedAccount.attributeNamesByKeyPath.getter()
{
  if (qword_256041BD0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331FAF28()
{
  if (qword_256041BD0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t _s10FinanceKit7AccountO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Account(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560458C0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2331684BC(a1, (uint64_t)v19, type metadata accessor for Account);
  sub_2331684BC(a2, v20, type metadata accessor for Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v13, type metadata accessor for Account);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v20, (uint64_t)v6, type metadata accessor for LiabilityAccount);
      v21 = _s10FinanceKit16LiabilityAccountV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v6);
      sub_233168500((uint64_t)v6, type metadata accessor for LiabilityAccount);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for LiabilityAccount;
LABEL_9:
      sub_233168500(v22, v23);
      sub_233168500((uint64_t)v19, type metadata accessor for Account);
      return v21 & 1;
    }
    v24 = type metadata accessor for LiabilityAccount;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v15, type metadata accessor for Account);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v20, (uint64_t)v9, type metadata accessor for AssetAccount);
      v21 = _s10FinanceKit12AssetAccountV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v9);
      sub_233168500((uint64_t)v9, type metadata accessor for AssetAccount);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for AssetAccount;
      goto LABEL_9;
    }
    v24 = type metadata accessor for AssetAccount;
    v25 = (uint64_t)v15;
  }
  sub_233168500(v25, v24);
  sub_233168608((uint64_t)v19, &qword_2560458C0);
  v21 = 0;
  return v21 & 1;
}

uint64_t _s10FinanceKit24AccountCreditInformationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v67 - v14;
  v18 = a1[4];
  v19 = a2[4];
  if (v18)
  {
    if (!v19)
      goto LABEL_41;
    v75 = v15;
    v76 = (_QWORD *)v16;
    v73 = v7;
    v74 = (char *)&v67 - v14;
    v69 = v5;
    v70 = v10;
    v71 = v4;
    v72 = a1;
    v21 = *a1;
    v20 = a1[1];
    v23 = a1[2];
    v22 = a1[3];
    v67 = v8;
    v68 = v22;
    v25 = *a2;
    v24 = a2[1];
    v26 = a2[2];
    v27 = a2[3];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if ((MEMORY[0x234932E38](v21, v20, v23, v25, v24, v26) & 1) == 0)
      goto LABEL_10;
    v4 = v71;
    a1 = v72;
    v5 = v69;
    v10 = v70;
    v17 = v74;
    if (v68 == v27 && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v8 = v67;
    }
    else
    {
      v30 = sub_23361F224();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v28 = 0;
      v8 = v67;
      if ((v30 & 1) == 0)
        return v28 & 1;
    }
  }
  else
  {
    v75 = v15;
    v76 = (_QWORD *)v16;
    v73 = v7;
    if (v19)
      goto LABEL_11;
  }
  v31 = type metadata accessor for AccountCreditInformation(0);
  sub_23319F164((uint64_t)a1 + *(int *)(v31 + 20), (uint64_t)v17);
  v71 = v31;
  v32 = (uint64_t)v76;
  sub_23319F164((uint64_t)a2 + *(int *)(v31 + 20), (uint64_t)v76);
  v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23319F164((uint64_t)v17, (uint64_t)v10);
  sub_23319F164(v32, v33);
  v34 = (uint64_t)v17;
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v35((uint64_t)v10, 1, v4) == 1)
  {
    sub_233168608(v32, (uint64_t *)&unk_254247DA0);
    sub_233168608(v34, (uint64_t *)&unk_254247DA0);
    if (v35(v33, 1, v4) == 1)
    {
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      goto LABEL_22;
    }
LABEL_20:
    sub_233168608((uint64_t)v10, &qword_256042DA0);
    goto LABEL_12;
  }
  v74 = (char *)v34;
  v36 = v75;
  sub_23319F164((uint64_t)v10, v75);
  if (v35(v33, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v76, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v74, (uint64_t *)&unk_254247DA0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v36, v4);
    goto LABEL_20;
  }
  v37 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v73, v33, v4);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v38 = sub_23361E108();
  v39 = *(void (**)(char *, uint64_t))(v5 + 8);
  v39(v37, v4);
  sub_233168608((uint64_t)v76, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v74, (uint64_t *)&unk_254247DA0);
  v39((char *)v36, v4);
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((v38 & 1) == 0)
    goto LABEL_12;
LABEL_22:
  v40 = v71;
  v41 = *(int *)(v71 + 24);
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = *(_QWORD *)((char *)a1 + v41 + 32);
  v44 = (_QWORD *)((char *)a2 + v41);
  v45 = v44[4];
  if (v43)
  {
    if (v45)
    {
      v72 = a1;
      v76 = a2;
      v46 = *v42;
      v47 = v42[1];
      v48 = v42[2];
      v75 = v42[3];
      v49 = *v44;
      v50 = v44[1];
      v52 = v44[2];
      v51 = v44[3];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((MEMORY[0x234932E38](v46, v47, v48, v49, v50, v52) & 1) != 0)
      {
        a2 = v76;
        a1 = v72;
        if (v75 == v51 && v43 == v45)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          v53 = sub_23361F224();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v28 = 0;
          if ((v53 & 1) == 0)
            return v28 & 1;
        }
        goto LABEL_33;
      }
LABEL_10:
      swift_bridgeObjectRelease_n();
LABEL_11:
      swift_bridgeObjectRelease();
LABEL_12:
      v28 = 0;
      return v28 & 1;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v45)
    goto LABEL_11;
LABEL_33:
  v54 = *(int *)(v40 + 28);
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = *(_QWORD *)((char *)a1 + v54 + 32);
  v57 = (_QWORD *)((char *)a2 + v54);
  v58 = v57[4];
  if (!v56)
  {
    if (!v58)
    {
      v28 = 1;
      return v28 & 1;
    }
    goto LABEL_11;
  }
  if (!v58)
    goto LABEL_41;
  v59 = *v55;
  v60 = v55[1];
  v62 = v55[2];
  v61 = v55[3];
  v63 = *v57;
  v64 = v57[1];
  v66 = v57[2];
  v65 = v57[3];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((MEMORY[0x234932E38](v59, v60, v62, v63, v64, v66) & 1) == 0)
    goto LABEL_10;
  if (v61 == v65 && v56 == v58)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v28 = 1;
  }
  else
  {
    v28 = sub_23361F224();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  return v28 & 1;
}

uint64_t _s10FinanceKit16LiabilityAccountV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v50 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  if ((sub_23361D670() & 1) == 0)
    return 0;
  v51 = v10;
  v20 = (int *)type metadata accessor for LiabilityAccount(0);
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_23361F224(), result = 0, (v26 & 1) != 0))
  {
    v28 = v20[6];
    v29 = (_QWORD *)(a1 + v28);
    v30 = *(_QWORD *)(a1 + v28 + 8);
    v31 = (_QWORD *)(a2 + v28);
    v32 = v31[1];
    if (v30)
    {
      if (!v32)
        return 0;
      if (*v29 != *v31 || v30 != v32)
      {
        v33 = sub_23361F224();
        result = 0;
        if ((v33 & 1) == 0)
          return result;
      }
    }
    else if (v32)
    {
      return 0;
    }
    v34 = v20[7];
    v35 = *(_QWORD *)(a1 + v34);
    v36 = *(_QWORD *)(a1 + v34 + 8);
    v37 = (_QWORD *)(a2 + v34);
    if (v35 == *v37 && v36 == v37[1] || (v38 = sub_23361F224(), result = 0, (v38 & 1) != 0))
    {
      if ((v39 = v20[8],
            v40 = *(_QWORD *)(a1 + v39),
            v41 = *(_QWORD *)(a1 + v39 + 8),
            v42 = (_QWORD *)(a2 + v39),
            v40 == *v42)
        && v41 == v42[1]
        || (v43 = sub_23361F224(), result = 0, (v43 & 1) != 0))
      {
        if ((_s10FinanceKit24AccountCreditInformationV2eeoiySbAC_ACtFZ_0((_QWORD *)(a1 + v20[9]), (_QWORD *)(a2 + v20[9])) & 1) != 0)
        {
          sub_23319F164(a1 + v20[10], (uint64_t)v19);
          sub_23319F164(a2 + v20[10], (uint64_t)v17);
          v44 = *(int *)(v8 + 48);
          v45 = (uint64_t)v51;
          v46 = (uint64_t)&v51[v44];
          sub_23319F164((uint64_t)v19, (uint64_t)v51);
          sub_23319F164((uint64_t)v17, v46);
          v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
          if (v47(v45, 1, v4) == 1)
          {
            sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
            sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
            if (v47(v46, 1, v4) == 1)
            {
              sub_233168608(v45, (uint64_t *)&unk_254247DA0);
              return 1;
            }
            goto LABEL_26;
          }
          sub_23319F164(v45, (uint64_t)v14);
          if (v47(v46, 1, v4) == 1)
          {
            sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
            sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
            (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_26:
            sub_233168608(v45, &qword_256042DA0);
            return 0;
          }
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v46, v4);
          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          v48 = sub_23361E108();
          v49 = *(void (**)(char *, uint64_t))(v5 + 8);
          v49(v7, v4);
          sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
          v49(v14, v4);
          sub_233168608(v45, (uint64_t *)&unk_254247DA0);
          if ((v48 & 1) != 0)
            return 1;
        }
        return 0;
      }
    }
  }
  return result;
}

BOOL _s10FinanceKit12AssetAccountV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  char v26;
  _BOOL8 result;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v49 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v49 - v18;
  if ((sub_23361D670() & 1) == 0)
    return 0;
  v50 = v5;
  v20 = (int *)type metadata accessor for AssetAccount(0);
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_23361F224(), result = 0, (v26 & 1) != 0))
  {
    v28 = v20[6];
    v29 = (_QWORD *)(a1 + v28);
    v30 = *(_QWORD *)(a1 + v28 + 8);
    v31 = (_QWORD *)(a2 + v28);
    v32 = v31[1];
    if (v30)
    {
      if (!v32)
        return 0;
      if (*v29 != *v31 || v30 != v32)
      {
        v33 = sub_23361F224();
        result = 0;
        if ((v33 & 1) == 0)
          return result;
      }
    }
    else if (v32)
    {
      return 0;
    }
    v34 = v20[7];
    v35 = *(_QWORD *)(a1 + v34);
    v36 = *(_QWORD *)(a1 + v34 + 8);
    v37 = (_QWORD *)(a2 + v34);
    if (v35 == *v37 && v36 == v37[1] || (v38 = sub_23361F224(), result = 0, (v38 & 1) != 0))
    {
      if ((v39 = v20[8],
            v40 = *(_QWORD *)(a1 + v39),
            v41 = *(_QWORD *)(a1 + v39 + 8),
            v42 = (_QWORD *)(a2 + v39),
            v40 == *v42)
        && v41 == v42[1]
        || (v43 = sub_23361F224(), result = 0, (v43 & 1) != 0))
      {
        sub_23319F164(a1 + v20[9], (uint64_t)v19);
        sub_23319F164(a2 + v20[9], (uint64_t)v17);
        v44 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_23319F164((uint64_t)v19, (uint64_t)v10);
        sub_23319F164((uint64_t)v17, v44);
        v45 = v50;
        v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
        if (v46((uint64_t)v10, 1, v4) == 1)
        {
          sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
          if (v46(v44, 1, v4) == 1)
          {
            sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
            return 1;
          }
          goto LABEL_25;
        }
        sub_23319F164((uint64_t)v10, (uint64_t)v14);
        if (v46(v44, 1, v4) == 1)
        {
          sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
          (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v4);
LABEL_25:
          sub_233168608((uint64_t)v10, &qword_256042DA0);
          return 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v7, v44, v4);
        sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        v47 = sub_23361E108();
        v48 = *(void (**)(char *, uint64_t))(v45 + 8);
        v48(v7, v4);
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        v48(v14, v4);
        sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
        return (v47 & 1) != 0;
      }
    }
  }
  return result;
}

unint64_t sub_2331FC000()
{
  unint64_t result;

  result = qword_2560454F0;
  if (!qword_2560454F0)
  {
    result = MEMORY[0x234934494](&unk_23362C274, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560454F0);
  }
  return result;
}

unint64_t sub_2331FC044()
{
  unint64_t result;

  result = qword_2560454F8;
  if (!qword_2560454F8)
  {
    result = MEMORY[0x234934494](&unk_23362C224, &type metadata for Account.LiabilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560454F8);
  }
  return result;
}

unint64_t sub_2331FC088()
{
  unint64_t result;

  result = qword_256045508;
  if (!qword_256045508)
  {
    result = MEMORY[0x234934494](&unk_23362C1D4, &type metadata for Account.AssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045508);
  }
  return result;
}

unint64_t sub_2331FC0CC()
{
  unint64_t result;

  result = qword_256045548;
  if (!qword_256045548)
  {
    result = MEMORY[0x234934494](&unk_23362C184, &type metadata for AccountCreditInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045548);
  }
  return result;
}

unint64_t sub_2331FC110()
{
  unint64_t result;

  result = qword_256045560;
  if (!qword_256045560)
  {
    result = MEMORY[0x234934494](&unk_23362C134, &type metadata for AssetAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045560);
  }
  return result;
}

unint64_t sub_2331FC154()
{
  unint64_t result;

  result = qword_256045578;
  if (!qword_256045578)
  {
    result = MEMORY[0x234934494](&unk_23362C0E4, &type metadata for LiabilityAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045578);
  }
  return result;
}

unint64_t _s10FinanceKit14ManagedAccountC14mappedKeyPathsSDys03AnyF4PathCSSGvgZ_0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2560458B8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23362D020;
  *(_QWORD *)(v0 + 32) = swift_getKeyPath();
  *(_QWORD *)(v0 + 40) = 25705;
  *(_QWORD *)(v0 + 48) = 0xE200000000000000;
  *(_QWORD *)(v0 + 56) = swift_getKeyPath();
  *(_QWORD *)(v0 + 64) = 0x4E79616C70736964;
  *(_QWORD *)(v0 + 72) = 0xEB00000000656D61;
  *(_QWORD *)(v0 + 80) = swift_getKeyPath();
  *(_QWORD *)(v0 + 88) = 0xD000000000000012;
  *(_QWORD *)(v0 + 96) = 0x800000023366A650;
  *(_QWORD *)(v0 + 104) = swift_getKeyPath();
  *(_QWORD *)(v0 + 112) = 0x7475746974736E69;
  *(_QWORD *)(v0 + 120) = 0xEF656D614E6E6F69;
  *(_QWORD *)(v0 + 128) = swift_getKeyPath();
  *(_QWORD *)(v0 + 136) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 144) = 0xE800000000000000;
  *(_QWORD *)(v0 + 152) = swift_getKeyPath();
  *(_QWORD *)(v0 + 160) = 25705;
  *(_QWORD *)(v0 + 168) = 0xE200000000000000;
  *(_QWORD *)(v0 + 176) = swift_getKeyPath();
  *(_QWORD *)(v0 + 184) = 0x4E79616C70736964;
  *(_QWORD *)(v0 + 192) = 0xEB00000000656D61;
  *(_QWORD *)(v0 + 200) = swift_getKeyPath();
  *(_QWORD *)(v0 + 208) = 0xD000000000000012;
  *(_QWORD *)(v0 + 216) = 0x800000023366A650;
  *(_QWORD *)(v0 + 224) = swift_getKeyPath();
  *(_QWORD *)(v0 + 232) = 0x7475746974736E69;
  *(_QWORD *)(v0 + 240) = 0xEF656D614E6E6F69;
  *(_QWORD *)(v0 + 248) = swift_getKeyPath();
  *(_QWORD *)(v0 + 256) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 264) = 0xE800000000000000;
  *(_QWORD *)(v0 + 272) = swift_getKeyPath();
  *(_QWORD *)(v0 + 280) = 0x44676E696E65706FLL;
  *(_QWORD *)(v0 + 288) = 0xEB00000000657461;
  *(_QWORD *)(v0 + 296) = swift_getKeyPath();
  *(_QWORD *)(v0 + 304) = 25705;
  *(_QWORD *)(v0 + 312) = 0xE200000000000000;
  *(_QWORD *)(v0 + 320) = swift_getKeyPath();
  *(_QWORD *)(v0 + 328) = 0x4E79616C70736964;
  *(_QWORD *)(v0 + 336) = 0xEB00000000656D61;
  *(_QWORD *)(v0 + 344) = swift_getKeyPath();
  *(_QWORD *)(v0 + 352) = 0xD000000000000012;
  *(_QWORD *)(v0 + 360) = 0x800000023366A650;
  *(_QWORD *)(v0 + 368) = swift_getKeyPath();
  *(_QWORD *)(v0 + 376) = 0x7475746974736E69;
  *(_QWORD *)(v0 + 384) = 0xEF656D614E6E6F69;
  *(_QWORD *)(v0 + 392) = swift_getKeyPath();
  *(_QWORD *)(v0 + 400) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 408) = 0xE800000000000000;
  *(_QWORD *)(v0 + 416) = swift_getKeyPath();
  *(_QWORD *)(v0 + 424) = 0x44676E696E65706FLL;
  *(_QWORD *)(v0 + 432) = 0xEB00000000657461;
  *(_QWORD *)(v0 + 440) = swift_getKeyPath();
  *(_QWORD *)(v0 + 448) = 25705;
  *(_QWORD *)(v0 + 456) = 0xE200000000000000;
  *(_QWORD *)(v0 + 464) = swift_getKeyPath();
  *(_QWORD *)(v0 + 472) = 0x4E79616C70736964;
  *(_QWORD *)(v0 + 480) = 0xEB00000000656D61;
  *(_QWORD *)(v0 + 488) = swift_getKeyPath();
  *(_QWORD *)(v0 + 496) = 0xD000000000000012;
  *(_QWORD *)(v0 + 504) = 0x800000023366A650;
  *(_QWORD *)(v0 + 512) = swift_getKeyPath();
  *(_QWORD *)(v0 + 520) = 0x7475746974736E69;
  *(_QWORD *)(v0 + 528) = 0xEF656D614E6E6F69;
  *(_QWORD *)(v0 + 536) = swift_getKeyPath();
  *(_QWORD *)(v0 + 544) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 552) = 0xE800000000000000;
  *(_QWORD *)(v0 + 560) = swift_getKeyPath();
  *(_QWORD *)(v0 + 568) = 0xD000000000000016;
  *(_QWORD *)(v0 + 576) = 0x800000023366B990;
  *(_QWORD *)(v0 + 584) = swift_getKeyPath();
  *(_QWORD *)(v0 + 592) = 0xD000000000000016;
  *(_QWORD *)(v0 + 600) = 0x800000023366B990;
  *(_QWORD *)(v0 + 608) = swift_getKeyPath();
  *(_QWORD *)(v0 + 616) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 624) = 0xE800000000000000;
  *(_QWORD *)(v0 + 632) = swift_getKeyPath();
  *(_QWORD *)(v0 + 640) = 0x6D7961507478656ELL;
  *(_QWORD *)(v0 + 648) = 0xEF65746144746E65;
  *(_QWORD *)(v0 + 656) = swift_getKeyPath();
  *(_QWORD *)(v0 + 664) = 0xD000000000000019;
  *(_QWORD *)(v0 + 672) = 0x800000023366B9C0;
  *(_QWORD *)(v0 + 680) = swift_getKeyPath();
  *(_QWORD *)(v0 + 688) = 0xD000000000000019;
  *(_QWORD *)(v0 + 696) = 0x800000023366B9C0;
  *(_QWORD *)(v0 + 704) = swift_getKeyPath();
  *(_QWORD *)(v0 + 712) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 720) = 0xE800000000000000;
  *(_QWORD *)(v0 + 728) = swift_getKeyPath();
  *(_QWORD *)(v0 + 736) = 0xD000000000000019;
  *(_QWORD *)(v0 + 744) = 0x800000023366B9E0;
  *(_QWORD *)(v0 + 752) = swift_getKeyPath();
  *(_QWORD *)(v0 + 760) = 0xD000000000000019;
  *(_QWORD *)(v0 + 768) = 0x800000023366B9E0;
  *(_QWORD *)(v0 + 776) = swift_getKeyPath();
  *(_QWORD *)(v0 + 784) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 792) = 0xE800000000000000;
  *(_QWORD *)(v0 + 800) = swift_getKeyPath();
  *(_QWORD *)(v0 + 808) = 0x44676E696E65706FLL;
  *(_QWORD *)(v0 + 816) = 0xEB00000000657461;
  *(_QWORD *)(v0 + 824) = swift_getKeyPath();
  *(_QWORD *)(v0 + 832) = 25705;
  *(_QWORD *)(v0 + 840) = 0xE200000000000000;
  *(_QWORD *)(v0 + 848) = swift_getKeyPath();
  *(_QWORD *)(v0 + 856) = 0x4E79616C70736964;
  *(_QWORD *)(v0 + 864) = 0xEB00000000656D61;
  *(_QWORD *)(v0 + 872) = swift_getKeyPath();
  *(_QWORD *)(v0 + 880) = 0xD000000000000012;
  *(_QWORD *)(v0 + 888) = 0x800000023366A650;
  *(_QWORD *)(v0 + 896) = swift_getKeyPath();
  *(_QWORD *)(v0 + 904) = 0x7475746974736E69;
  *(_QWORD *)(v0 + 912) = 0xEF656D614E6E6F69;
  *(_QWORD *)(v0 + 920) = swift_getKeyPath();
  *(_QWORD *)(v0 + 928) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 936) = 0xE800000000000000;
  *(_QWORD *)(v0 + 944) = swift_getKeyPath();
  *(_QWORD *)(v0 + 952) = 0xD000000000000016;
  *(_QWORD *)(v0 + 960) = 0x800000023366B990;
  *(_QWORD *)(v0 + 968) = swift_getKeyPath();
  *(_QWORD *)(v0 + 976) = 0xD000000000000016;
  *(_QWORD *)(v0 + 984) = 0x800000023366B990;
  *(_QWORD *)(v0 + 992) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1000) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 1008) = 0xE800000000000000;
  *(_QWORD *)(v0 + 1016) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1024) = 0x6D7961507478656ELL;
  *(_QWORD *)(v0 + 1032) = 0xEF65746144746E65;
  *(_QWORD *)(v0 + 1040) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1048) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1056) = 0x800000023366B9C0;
  *(_QWORD *)(v0 + 1064) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1072) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1080) = 0x800000023366B9C0;
  *(_QWORD *)(v0 + 1088) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1096) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 1104) = 0xE800000000000000;
  *(_QWORD *)(v0 + 1112) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1120) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1128) = 0x800000023366B9E0;
  *(_QWORD *)(v0 + 1136) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1144) = 0xD000000000000019;
  *(_QWORD *)(v0 + 1152) = 0x800000023366B9E0;
  *(_QWORD *)(v0 + 1160) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1168) = 0x79636E6572727563;
  *(_QWORD *)(v0 + 1176) = 0xE800000000000000;
  *(_QWORD *)(v0 + 1184) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1192) = 0x44676E696E65706FLL;
  *(_QWORD *)(v0 + 1200) = 0xEB00000000657461;
  *(_QWORD *)(v0 + 1208) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1216) = 0xD000000000000010;
  *(_QWORD *)(v0 + 1224) = 0x800000023366B940;
  *(_QWORD *)(v0 + 1232) = swift_getKeyPath();
  *(_QWORD *)(v0 + 1240) = 0x44676E696E65706FLL;
  *(_QWORD *)(v0 + 1248) = 0xEB00000000657461;
  return sub_23315FD0C(v0);
}

unint64_t _s10FinanceKit14ManagedAccountC20comparablePredicatesSDys10AnyKeyPathCSo11NSPredicateCGSgvgZ_0()
{
  uint64_t inited;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256044FF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  v1 = (void *)sub_23361E12C();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_expressionForKeyPath_, v1);

  v4 = objc_msgSend(v2, sel_expressionForConstantValue_, sub_23361F290());
  swift_unknownObjectRelease();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v3, v4, 0, 4, 0);

  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  v6 = (void *)sub_23361E12C();
  v7 = objc_msgSend(v2, sel_expressionForKeyPath_, v6);

  v8 = objc_msgSend(v2, sel_expressionForConstantValue_, sub_23361F290());
  swift_unknownObjectRelease();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v7, v8, 0, 4, 0);

  *(_QWORD *)(inited + 56) = v9;
  return sub_23315FE20(inited);
}

uint64_t sub_2331FCAFC()
{
  return sub_233167C58(&qword_256045598, type metadata accessor for AccountCreditInformation, (uint64_t)&protocol conformance descriptor for AccountCreditInformation);
}

uint64_t *initializeBufferWithCopyOfBuffer for Account(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for LiabilityAccount(0);
      v9 = v8[5];
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (uint64_t *)((char *)a2 + v9);
      v70 = v11[1];
      *v10 = *v11;
      v10[1] = v70;
      v12 = v8[6];
      v13 = (uint64_t *)((char *)a1 + v12);
      v14 = (uint64_t *)((char *)a2 + v12);
      v69 = v14[1];
      *v13 = *v14;
      v13[1] = v69;
      v15 = v8[7];
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v68 = v17[1];
      *v16 = *v17;
      v16[1] = v68;
      v18 = v8[8];
      v19 = (uint64_t *)((char *)a1 + v18);
      v20 = (uint64_t *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      v22 = v8[9];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      *((_DWORD *)v23 + 4) = *(_DWORD *)((char *)a2 + v22 + 16);
      *(_OWORD *)v23 = *(_OWORD *)((char *)a2 + v22);
      v25 = *(uint64_t *)((char *)a2 + v22 + 32);
      *((_QWORD *)v23 + 3) = *(uint64_t *)((char *)a2 + v22 + 24);
      *((_QWORD *)v23 + 4) = v25;
      v26 = type metadata accessor for AccountCreditInformation(0);
      v27 = *(int *)(v26 + 20);
      v71 = v26;
      __dst = &v23[v27];
      v67 = &v24[v27];
      v28 = sub_23361D634();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v67, 1, v28))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v67, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v67, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      v57 = *(int *)(v71 + 24);
      v58 = &v23[v57];
      v59 = &v24[v57];
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_DWORD *)v58 + 4) = *((_DWORD *)v59 + 4);
      v60 = *((_QWORD *)v59 + 4);
      *((_QWORD *)v58 + 3) = *((_QWORD *)v59 + 3);
      *((_QWORD *)v58 + 4) = v60;
      v61 = *(int *)(v71 + 28);
      v62 = &v23[v61];
      v63 = &v24[v61];
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
      v64 = *((_QWORD *)v63 + 4);
      *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
      *((_QWORD *)v62 + 4) = v64;
      v65 = v8[10];
      v51 = (char *)a1 + v65;
      v52 = (char *)a2 + v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v30(v52, 1, v28))
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v51, v52, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v51, 0, 1, v28);
        goto LABEL_13;
      }
    }
    else
    {
      v33 = (int *)type metadata accessor for AssetAccount(0);
      v34 = v33[5];
      v35 = (uint64_t *)((char *)a1 + v34);
      v36 = (uint64_t *)((char *)a2 + v34);
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      v38 = v33[6];
      v39 = (uint64_t *)((char *)a1 + v38);
      v40 = (uint64_t *)((char *)a2 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      v42 = v33[7];
      v43 = (uint64_t *)((char *)a1 + v42);
      v44 = (uint64_t *)((char *)a2 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      v46 = v33[8];
      v47 = (uint64_t *)((char *)a1 + v46);
      v48 = (uint64_t *)((char *)a2 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      v50 = v33[9];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_23361D634();
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v55(v52, 1, v53))
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        goto LABEL_13;
      }
    }
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
LABEL_13:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  v32 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for Account(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t result;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    v4 = type metadata accessor for LiabilityAccount(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 36);
    swift_bridgeObjectRelease();
    v6 = v5 + *(int *)(type metadata accessor for AccountCreditInformation(0) + 20);
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = a1 + *(int *)(v4 + 40);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10, 1, v7);
    if (!(_DWORD)result)
    {
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      v13 = v10;
      v14 = v7;
      return v12(v13, v14);
    }
  }
  else
  {
    v15 = type metadata accessor for AssetAccount(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = a1 + *(int *)(v15 + 36);
    v17 = sub_23361D634();
    v18 = *(_QWORD *)(v17 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
    if (!(_DWORD)result)
    {
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
      v13 = v16;
      v14 = v17;
      return v12(v13, v14);
    }
  }
  return result;
}

uint64_t initializeWithCopy for Account(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(const void *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *__dst;
  uint64_t v69;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = (int *)type metadata accessor for LiabilityAccount(0);
    v7 = v6[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    v67 = v9[1];
    *v8 = *v9;
    v8[1] = v67;
    v10 = v6[6];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    v66 = v12[1];
    *v11 = *v12;
    v11[1] = v66;
    v13 = v6[7];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v65 = v15[1];
    *v14 = *v15;
    v14[1] = v65;
    v16 = v6[8];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[9];
    v21 = a1 + v20;
    v22 = a2 + v20;
    *(_DWORD *)(v21 + 16) = *(_DWORD *)(a2 + v20 + 16);
    *(_OWORD *)v21 = *(_OWORD *)(a2 + v20);
    v23 = *(_QWORD *)(a2 + v20 + 32);
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(a2 + v20 + 24);
    *(_QWORD *)(v21 + 32) = v23;
    v24 = type metadata accessor for AccountCreditInformation(0);
    v25 = *(int *)(v24 + 20);
    __dst = (void *)(v21 + v25);
    v69 = v24;
    v64 = (const void *)(v22 + v25);
    v26 = sub_23361D634();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v64, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(__dst, v64, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    v54 = *(int *)(v69 + 24);
    v55 = v21 + v54;
    v56 = v22 + v54;
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_DWORD *)(v55 + 16) = *(_DWORD *)(v56 + 16);
    v57 = *(_QWORD *)(v56 + 32);
    *(_QWORD *)(v55 + 24) = *(_QWORD *)(v56 + 24);
    *(_QWORD *)(v55 + 32) = v57;
    v58 = *(int *)(v69 + 28);
    v59 = v21 + v58;
    v60 = v22 + v58;
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_DWORD *)(v59 + 16) = *(_DWORD *)(v60 + 16);
    v61 = *(_QWORD *)(v60 + 32);
    *(_QWORD *)(v59 + 24) = *(_QWORD *)(v60 + 24);
    *(_QWORD *)(v59 + 32) = v61;
    v62 = v6[10];
    v48 = (void *)(a1 + v62);
    v49 = (const void *)(a2 + v62);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v28(v49, 1, v26))
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v48, v49, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v48, 0, 1, v26);
      goto LABEL_11;
    }
  }
  else
  {
    v30 = (int *)type metadata accessor for AssetAccount(0);
    v31 = v30[5];
    v32 = (_QWORD *)(a1 + v31);
    v33 = (_QWORD *)(a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v30[6];
    v36 = (_QWORD *)(a1 + v35);
    v37 = (_QWORD *)(a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = v30[7];
    v40 = (_QWORD *)(a1 + v39);
    v41 = (_QWORD *)(a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = v30[8];
    v44 = (_QWORD *)(a1 + v43);
    v45 = (_QWORD *)(a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v30[9];
    v48 = (void *)(a1 + v47);
    v49 = (const void *)(a2 + v47);
    v50 = sub_23361D634();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v52(v49, 1, v50))
    {
      (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_11;
    }
  }
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Account(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(const void *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  __int128 v55;
  uint64_t v56;
  const void *v58;
  void *__dst;
  uint64_t v60;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Account);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D6A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = (int *)type metadata accessor for LiabilityAccount(0);
      v7 = v6[5];
      v8 = (_QWORD *)(a1 + v7);
      v9 = (_QWORD *)(a2 + v7);
      *v8 = *v9;
      v8[1] = v9[1];
      v10 = v6[6];
      v11 = (_QWORD *)(a1 + v10);
      v12 = (_QWORD *)(a2 + v10);
      *v11 = *v12;
      v11[1] = v12[1];
      v13 = v6[7];
      v14 = (_QWORD *)(a1 + v13);
      v15 = (_QWORD *)(a2 + v13);
      *v14 = *v15;
      v14[1] = v15[1];
      v16 = v6[8];
      v17 = (_QWORD *)(a1 + v16);
      v18 = (_QWORD *)(a2 + v16);
      *v17 = *v18;
      v17[1] = v18[1];
      v19 = v6[9];
      v20 = a1 + v19;
      v21 = a2 + v19;
      LODWORD(v19) = *(_DWORD *)(a2 + v19 + 16);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *(_DWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
      v22 = type metadata accessor for AccountCreditInformation(0);
      v23 = *(int *)(v22 + 20);
      __dst = (void *)(v20 + v23);
      v60 = v22;
      v58 = (const void *)(v21 + v23);
      v24 = sub_23361D634();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26(v58, 1, v24))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(__dst, v58, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v48 = *(int *)(v60 + 24);
      v49 = v20 + v48;
      v50 = (__int128 *)(v21 + v48);
      v51 = *v50;
      *(_DWORD *)(v49 + 16) = *((_DWORD *)v50 + 4);
      *(_OWORD *)v49 = v51;
      *(_QWORD *)(v49 + 24) = *((_QWORD *)v50 + 3);
      *(_QWORD *)(v49 + 32) = *((_QWORD *)v50 + 4);
      v52 = *(int *)(v60 + 28);
      v53 = v20 + v52;
      v54 = (__int128 *)(v21 + v52);
      v55 = *v54;
      *(_DWORD *)(v53 + 16) = *((_DWORD *)v54 + 4);
      *(_OWORD *)v53 = v55;
      *(_QWORD *)(v53 + 24) = *((_QWORD *)v54 + 3);
      *(_QWORD *)(v53 + 32) = *((_QWORD *)v54 + 4);
      v56 = v6[10];
      v42 = (void *)(a1 + v56);
      v43 = (const void *)(a2 + v56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v26(v43, 1, v24))
      {
        (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v42, v43, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
        goto LABEL_12;
      }
    }
    else
    {
      v28 = (int *)type metadata accessor for AssetAccount(0);
      v29 = v28[5];
      v30 = (_QWORD *)(a1 + v29);
      v31 = (_QWORD *)(a2 + v29);
      *v30 = *v31;
      v30[1] = v31[1];
      v32 = v28[6];
      v33 = (_QWORD *)(a1 + v32);
      v34 = (_QWORD *)(a2 + v32);
      *v33 = *v34;
      v33[1] = v34[1];
      v35 = v28[7];
      v36 = (_QWORD *)(a1 + v35);
      v37 = (_QWORD *)(a2 + v35);
      *v36 = *v37;
      v36[1] = v37[1];
      v38 = v28[8];
      v39 = (_QWORD *)(a1 + v38);
      v40 = (_QWORD *)(a2 + v38);
      *v39 = *v40;
      v39[1] = v40[1];
      v41 = v28[9];
      v42 = (void *)(a1 + v41);
      v43 = (const void *)(a2 + v41);
      v44 = sub_23361D634();
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v46(v43, 1, v44))
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        goto LABEL_12;
      }
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Account(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = (int *)type metadata accessor for LiabilityAccount(0);
    *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
    *(_OWORD *)(a1 + v6[6]) = *(_OWORD *)(a2 + v6[6]);
    *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
    *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
    v7 = v6[9];
    v8 = a1 + v7;
    v9 = a2 + v7;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(a2 + v7 + 32);
    v10 = *(_OWORD *)(a2 + v7 + 16);
    *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
    *(_OWORD *)(v8 + 16) = v10;
    v11 = (int *)type metadata accessor for AccountCreditInformation(0);
    v12 = v11[5];
    v13 = (void *)(v8 + v12);
    v14 = (const void *)(v9 + v12);
    v15 = sub_23361D634();
    v16 = *(_QWORD *)(v15 - 8);
    v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    if (v35(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v25 = v11[6];
    v26 = v8 + v25;
    v27 = v9 + v25;
    v28 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
    v29 = v11[7];
    v30 = v8 + v29;
    v31 = v9 + v29;
    *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
    v32 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v32;
    v33 = v6[10];
    v20 = (void *)(a1 + v33);
    v21 = (const void *)(a2 + v33);
    if (!v35(v21, 1, v15))
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v20, v21, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      goto LABEL_11;
    }
  }
  else
  {
    v18 = (int *)type metadata accessor for AssetAccount(0);
    *(_OWORD *)(a1 + v18[5]) = *(_OWORD *)(a2 + v18[5]);
    *(_OWORD *)(a1 + v18[6]) = *(_OWORD *)(a2 + v18[6]);
    *(_OWORD *)(a1 + v18[7]) = *(_OWORD *)(a2 + v18[7]);
    *(_OWORD *)(a1 + v18[8]) = *(_OWORD *)(a2 + v18[8]);
    v19 = v18[9];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = sub_23361D634();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_11;
    }
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for Account(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Account);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D6A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = (int *)type metadata accessor for LiabilityAccount(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      *(_OWORD *)(a1 + v6[6]) = *(_OWORD *)(a2 + v6[6]);
      *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
      *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
      v7 = v6[9];
      v8 = a1 + v7;
      v9 = a2 + v7;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(a2 + v7 + 32);
      v10 = *(_OWORD *)(a2 + v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
      *(_OWORD *)(v8 + 16) = v10;
      v11 = (int *)type metadata accessor for AccountCreditInformation(0);
      v12 = v11[5];
      v13 = (void *)(v8 + v12);
      v14 = (const void *)(v9 + v12);
      v15 = sub_23361D634();
      v16 = *(_QWORD *)(v15 - 8);
      v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
      if (v35(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v25 = v11[6];
      v26 = v8 + v25;
      v27 = v9 + v25;
      v28 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 16) = v28;
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      v29 = v11[7];
      v30 = v8 + v29;
      v31 = v9 + v29;
      *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
      v32 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v32;
      v33 = v6[10];
      v20 = (void *)(a1 + v33);
      v21 = (const void *)(a2 + v33);
      if (!v35(v21, 1, v15))
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v20, v21, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
        goto LABEL_12;
      }
    }
    else
    {
      v18 = (int *)type metadata accessor for AssetAccount(0);
      *(_OWORD *)(a1 + v18[5]) = *(_OWORD *)(a2 + v18[5]);
      *(_OWORD *)(a1 + v18[6]) = *(_OWORD *)(a2 + v18[6]);
      *(_OWORD *)(a1 + v18[7]) = *(_OWORD *)(a2 + v18[7]);
      *(_OWORD *)(a1 + v18[8]) = *(_OWORD *)(a2 + v18[8]);
      v19 = v18[9];
      v20 = (void *)(a1 + v19);
      v21 = (const void *)(a2 + v19);
      v22 = sub_23361D634();
      v23 = *(_QWORD *)(v22 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_12;
      }
    }
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2331FDF20()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for AssetAccount(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LiabilityAccount(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountCreditInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = a3[5];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)v4 + v16;
    v19 = (uint64_t)a2 + v16;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_DWORD *)v18 + 4) = *(_DWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v19 + 32);
    *((_QWORD *)v18 + 3) = *(_QWORD *)(v19 + 24);
    *((_QWORD *)v18 + 4) = v20;
    v21 = (char *)v4 + v17;
    v22 = (uint64_t)a2 + v17;
    *((_DWORD *)v21 + 4) = *(_DWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v23 = *(_QWORD *)(v22 + 32);
    *((_QWORD *)v21 + 3) = *(_QWORD *)(v22 + 24);
    *((_QWORD *)v21 + 4) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AccountCreditInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountCreditInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_DWORD *)(v16 + 16) = *(_DWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = v18;
  v19 = a1 + v15;
  v20 = a2 + v15;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v21 = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 32) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountCreditInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_WORD *)(v16 + 4) = *(_WORD *)(v17 + 4);
  *(_WORD *)(v16 + 6) = *(_WORD *)(v17 + 6);
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  *(_WORD *)(v16 + 10) = *(_WORD *)(v17 + 10);
  *(_WORD *)(v16 + 12) = *(_WORD *)(v17 + 12);
  *(_WORD *)(v16 + 14) = *(_WORD *)(v17 + 14);
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  *(_WORD *)(v16 + 18) = *(_WORD *)(v17 + 18);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_WORD *)(v19 + 4) = *(_WORD *)(v20 + 4);
  *(_WORD *)(v19 + 6) = *(_WORD *)(v20 + 6);
  *(_WORD *)(v19 + 8) = *(_WORD *)(v20 + 8);
  *(_WORD *)(v19 + 10) = *(_WORD *)(v20 + 10);
  *(_WORD *)(v19 + 12) = *(_WORD *)(v20 + 12);
  *(_WORD *)(v19 + 14) = *(_WORD *)(v20 + 14);
  *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  *(_WORD *)(v19 + 18) = *(_WORD *)(v20 + 18);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountCreditInformation(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v18 = a1 + v14;
  v19 = a2 + v14;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t assignWithTake for AccountCreditInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_OWORD *)(v17 + 4) = *(_OWORD *)(v18 + 4);
  v20 = *(_QWORD *)(v18 + 24);
  v19 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = v20;
  *(_QWORD *)(v17 + 32) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_OWORD *)(v22 + 4) = *(_OWORD *)(v23 + 4);
  v25 = *(_QWORD *)(v23 + 24);
  v24 = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 24) = v25;
  *(_QWORD *)(v22 + 32) = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountCreditInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331FE7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for AccountCreditInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331FE86C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_2331FE8E4()
{
  unint64_t v0;

  sub_2331FE95C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2331FE95C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254248110)
  {
    sub_23361D634();
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254248110);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetAccount(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = *v22;
    v24 = v22[1];
    v25 = a3[9];
    v26 = (char *)a2 + v25;
    v27 = (char *)a1 + v25;
    *v21 = v23;
    v21[1] = v24;
    v28 = sub_23361D634();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v26, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v27, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v27, v26, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t destroy for AssetAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for AssetAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (uint64_t *)(a2 + v16);
  v22 = *v21;
  v23 = v21[1];
  v24 = a3[9];
  v25 = (const void *)(a2 + v24);
  v26 = (void *)(a1 + v24);
  *v20 = v22;
  v20[1] = v23;
  v27 = sub_23361D634();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v25, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v26, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v26, v25, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
  }
  return a1;
}

uint64_t assignWithCopy for AssetAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = sub_23361D634();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for AssetAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithTake for AssetAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = sub_23361D634();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetAccount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331FF1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetAccount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331FF290(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2331FF33C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D6A0();
  if (v0 <= 0x3F)
  {
    sub_2331FE95C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for LiabilityAccount(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *__dst;
  uint64_t v51;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v47 = v11[1];
    *v10 = *v11;
    v10[1] = v47;
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v48 = v13[1];
    *v12 = *v13;
    v12[1] = v48;
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v46 = v20[1];
    *v19 = *v20;
    v19[1] = v46;
    v21 = a3[9];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *(_OWORD *)v22 = *(_OWORD *)((char *)a2 + v21);
    *((_DWORD *)v22 + 4) = *(_DWORD *)((char *)a2 + v21 + 16);
    v24 = *(uint64_t *)((char *)a2 + v21 + 32);
    *((_QWORD *)v22 + 3) = *(uint64_t *)((char *)a2 + v21 + 24);
    *((_QWORD *)v22 + 4) = v24;
    v25 = type metadata accessor for AccountCreditInformation(0);
    v26 = *(int *)(v25 + 20);
    __dst = &v22[v26];
    v51 = v25;
    v27 = &v23[v26];
    v28 = sub_23361D634();
    v49 = *(_QWORD *)(v28 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v31 = v49;
    }
    else
    {
      v31 = v49;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dst, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v28);
    }
    v33 = *(int *)(v51 + 24);
    v34 = &v22[v33];
    v35 = &v23[v33];
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_DWORD *)v34 + 4) = *((_DWORD *)v35 + 4);
    v36 = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
    *((_QWORD *)v34 + 4) = v36;
    v37 = *(int *)(v51 + 28);
    v38 = &v22[v37];
    v39 = &v23[v37];
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *((_DWORD *)v38 + 4) = *((_DWORD *)v39 + 4);
    v40 = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 3) = *((_QWORD *)v39 + 3);
    *((_QWORD *)v38 + 4) = v40;
    v41 = a3[10];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v43, 1, v28))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v42, v43, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v42, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t destroy for LiabilityAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t result;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for AccountCreditInformation(0) + 20);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 40);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  return result;
}

uint64_t initializeWithCopy for LiabilityAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  const void *v46;
  uint64_t v47;
  void *__dst;
  uint64_t v49;
  int *v50;
  uint64_t v51;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v47 = v13[1];
  *v12 = *v13;
  v12[1] = v47;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v50 = a3;
  v51 = a1;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_OWORD *)v23 = *(_OWORD *)(a2 + v22);
  *(_DWORD *)(v23 + 16) = *(_DWORD *)(a2 + v22 + 16);
  v25 = *(_QWORD *)(a2 + v22 + 32);
  *(_QWORD *)(v23 + 24) = *(_QWORD *)(a2 + v22 + 24);
  *(_QWORD *)(v23 + 32) = v25;
  v26 = type metadata accessor for AccountCreditInformation(0);
  v27 = *(int *)(v26 + 20);
  __dst = (void *)(v23 + v27);
  v49 = v26;
  v46 = (const void *)(v24 + v27);
  v28 = sub_23361D634();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v46, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v46, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  v32 = v29;
  v33 = *(int *)(v49 + 24);
  v34 = v23 + v33;
  v35 = v24 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_DWORD *)(v34 + 16) = *(_DWORD *)(v35 + 16);
  v36 = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
  *(_QWORD *)(v34 + 32) = v36;
  v37 = *(int *)(v49 + 28);
  v38 = v23 + v37;
  v39 = v24 + v37;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_DWORD *)(v38 + 16) = *(_DWORD *)(v39 + 16);
  v40 = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 32) = v40;
  v41 = v50[10];
  v42 = (void *)(v51 + v41);
  v43 = (const void *)(a2 + v41);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v43, 1, v28))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v42, v43, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v42, 0, 1, v28);
  }
  return v51;
}

uint64_t assignWithCopy for LiabilityAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  int v43;
  int v44;
  uint64_t v45;
  int *v47;
  uint64_t v48;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3;
  v48 = a1;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_DWORD *)v20 = *(_DWORD *)(a2 + v19);
  *(_WORD *)(v20 + 4) = *(_WORD *)(a2 + v19 + 4);
  *(_WORD *)(v20 + 6) = *(_WORD *)(a2 + v19 + 6);
  *(_WORD *)(v20 + 8) = *(_WORD *)(a2 + v19 + 8);
  *(_WORD *)(v20 + 10) = *(_WORD *)(a2 + v19 + 10);
  *(_WORD *)(v20 + 12) = *(_WORD *)(a2 + v19 + 12);
  *(_WORD *)(v20 + 14) = *(_WORD *)(a2 + v19 + 14);
  *(_WORD *)(v20 + 16) = *(_WORD *)(a2 + v19 + 16);
  *(_WORD *)(v20 + 18) = *(_WORD *)(a2 + v19 + 18);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(a2 + v19 + 24);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(a2 + v19 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (int *)type metadata accessor for AccountCreditInformation(0);
  v23 = v22[5];
  v24 = (void *)(v20 + v23);
  v25 = (void *)(v21 + v23);
  v26 = sub_23361D634();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (v30)
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v32 = v27;
    }
    else
    {
      v32 = v27;
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  else
  {
    v32 = v27;
    if (v30)
    {
      (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
    }
  }
  v34 = v22[6];
  v35 = v20 + v34;
  v36 = v21 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_WORD *)(v35 + 4) = *(_WORD *)(v36 + 4);
  *(_WORD *)(v35 + 6) = *(_WORD *)(v36 + 6);
  *(_WORD *)(v35 + 8) = *(_WORD *)(v36 + 8);
  *(_WORD *)(v35 + 10) = *(_WORD *)(v36 + 10);
  *(_WORD *)(v35 + 12) = *(_WORD *)(v36 + 12);
  *(_WORD *)(v35 + 14) = *(_WORD *)(v36 + 14);
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  *(_WORD *)(v35 + 18) = *(_WORD *)(v36 + 18);
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(v36 + 24);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v22[7];
  v38 = v20 + v37;
  v39 = v21 + v37;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_WORD *)(v38 + 4) = *(_WORD *)(v39 + 4);
  *(_WORD *)(v38 + 6) = *(_WORD *)(v39 + 6);
  *(_WORD *)(v38 + 8) = *(_WORD *)(v39 + 8);
  *(_WORD *)(v38 + 10) = *(_WORD *)(v39 + 10);
  *(_WORD *)(v38 + 12) = *(_WORD *)(v39 + 12);
  *(_WORD *)(v38 + 14) = *(_WORD *)(v39 + 14);
  *(_WORD *)(v38 + 16) = *(_WORD *)(v39 + 16);
  *(_WORD *)(v38 + 18) = *(_WORD *)(v39 + 18);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = v47[10];
  v41 = (void *)(v48 + v40);
  v42 = (void *)(a2 + v40);
  v43 = v28((void *)(v48 + v40), 1, v26);
  v44 = v28(v42, 1, v26);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v41, v42, v26);
      return v48;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v41, v26);
    goto LABEL_13;
  }
  if (v44)
  {
LABEL_13:
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return v48;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v41, v42, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v26);
  return v48;
}

uint64_t initializeWithTake for LiabilityAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 16);
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_OWORD *)(v10 + 16) = v12;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(a2 + v9 + 32);
  v13 = (int *)type metadata accessor for AccountCreditInformation(0);
  v14 = v13[5];
  v15 = (void *)(v10 + v14);
  v16 = (const void *)(v11 + v14);
  v17 = sub_23361D634();
  v18 = *(_QWORD *)(v17 - 8);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  if (v33(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = v13[6];
  v21 = v10 + v20;
  v22 = v11 + v20;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = v13[7];
  v25 = v10 + v24;
  v26 = v11 + v24;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  v28 = a3[10];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  if (v33(v30, 1, v17))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v29, v30, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for LiabilityAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  int v55;
  int v56;
  uint64_t v57;
  int *v59;
  uint64_t v60;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v60 = a1;
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_DWORD *)v28 = *(_DWORD *)(a2 + v27);
  *(_OWORD *)(v28 + 4) = *(_OWORD *)(a2 + v27 + 4);
  v30 = *(_QWORD *)(a2 + v27 + 32);
  *(_QWORD *)(v28 + 24) = *(_QWORD *)(a2 + v27 + 24);
  *(_QWORD *)(v28 + 32) = v30;
  swift_bridgeObjectRelease();
  v59 = (int *)type metadata accessor for AccountCreditInformation(0);
  v31 = v59[5];
  v32 = (void *)(v28 + v31);
  v33 = (void *)(v29 + v31);
  v34 = sub_23361D634();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (v38)
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      v40 = v35;
    }
    else
    {
      v40 = v35;
      (*(void (**)(void *, void *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
  }
  else
  {
    v40 = v35;
    if (v38)
    {
      (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 40))(v32, v33, v34);
    }
  }
  v42 = v59[6];
  v43 = v28 + v42;
  v44 = v29 + v42;
  *(_DWORD *)v43 = *(_DWORD *)v44;
  *(_OWORD *)(v43 + 4) = *(_OWORD *)(v44 + 4);
  v46 = *(_QWORD *)(v44 + 24);
  v45 = *(_QWORD *)(v44 + 32);
  *(_QWORD *)(v43 + 24) = v46;
  *(_QWORD *)(v43 + 32) = v45;
  swift_bridgeObjectRelease();
  v47 = v59[7];
  v48 = v28 + v47;
  v49 = v29 + v47;
  *(_DWORD *)v48 = *(_DWORD *)v49;
  *(_OWORD *)(v48 + 4) = *(_OWORD *)(v49 + 4);
  v51 = *(_QWORD *)(v49 + 24);
  v50 = *(_QWORD *)(v49 + 32);
  *(_QWORD *)(v48 + 24) = v51;
  *(_QWORD *)(v48 + 32) = v50;
  swift_bridgeObjectRelease();
  v52 = a3[10];
  v53 = (void *)(v60 + v52);
  v54 = (void *)(a2 + v52);
  v55 = v36((void *)(v60 + v52), 1, v34);
  v56 = v36(v54, 1, v34);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v53, v54, v34);
      return v60;
    }
    (*(void (**)(void *, uint64_t))(v40 + 8))(v53, v34);
    goto LABEL_13;
  }
  if (v56)
  {
LABEL_13:
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    return v60;
  }
  (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v53, v54, v34);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v53, 0, 1, v34);
  return v60;
}

uint64_t getEnumTagSinglePayload for LiabilityAccount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332003AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for AccountCreditInformation(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[9];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[10];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for LiabilityAccount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23320048C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for AccountCreditInformation(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[9];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[10];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23320055C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23361D6A0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccountCreditInformation(319);
    if (v1 <= 0x3F)
    {
      sub_2331FE95C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for LiabilityAccount.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LiabilityAccount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2332006F0 + 4 * byte_23362B7F6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_233200724 + 4 * byte_23362B7F1[v4]))();
}

uint64_t sub_233200724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320072C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233200734);
  return result;
}

uint64_t sub_233200740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233200748);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23320074C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233200754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiabilityAccount.CodingKeys()
{
  return &type metadata for LiabilityAccount.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AssetAccount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2332007BC + 4 * byte_23362B800[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2332007F0 + 4 * byte_23362B7FB[v4]))();
}

uint64_t sub_2332007F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332007F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233200800);
  return result;
}

uint64_t sub_23320080C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233200814);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233200818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233200820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetAccount.CodingKeys()
{
  return &type metadata for AssetAccount.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccountCreditInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233200888 + 4 * byte_23362B80A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2332008BC + 4 * byte_23362B805[v4]))();
}

uint64_t sub_2332008BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332008C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2332008CCLL);
  return result;
}

uint64_t sub_2332008D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2332008E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2332008E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332008EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountCreditInformation.CodingKeys()
{
  return &type metadata for AccountCreditInformation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Account.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233200954 + 4 * byte_23362B814[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233200988 + 4 * byte_23362B80F[v4]))();
}

uint64_t sub_233200988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233200990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233200998);
  return result;
}

uint64_t sub_2332009A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2332009ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2332009B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332009B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Account.CodingKeys()
{
  return &type metadata for Account.CodingKeys;
}

ValueMetadata *type metadata accessor for Account.AssetCodingKeys()
{
  return &type metadata for Account.AssetCodingKeys;
}

uint64_t _s10FinanceKit7AccountO15AssetCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233200A28 + 4 * byte_23362B819[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233200A48 + 4 * byte_23362B81E[v4]))();
}

_BYTE *sub_233200A28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233200A48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233200A50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233200A58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233200A60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233200A68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Account.LiabilityCodingKeys()
{
  return &type metadata for Account.LiabilityCodingKeys;
}

unint64_t sub_233200A88()
{
  unint64_t result;

  result = qword_256045828;
  if (!qword_256045828)
  {
    result = MEMORY[0x234934494](&unk_23362BD24, &type metadata for Account.LiabilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045828);
  }
  return result;
}

unint64_t sub_233200AD0()
{
  unint64_t result;

  result = qword_256045830;
  if (!qword_256045830)
  {
    result = MEMORY[0x234934494](&unk_23362BDDC, &type metadata for Account.AssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045830);
  }
  return result;
}

unint64_t sub_233200B18()
{
  unint64_t result;

  result = qword_256045838;
  if (!qword_256045838)
  {
    result = MEMORY[0x234934494](&unk_23362BE94, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045838);
  }
  return result;
}

unint64_t sub_233200B60()
{
  unint64_t result;

  result = qword_256045840;
  if (!qword_256045840)
  {
    result = MEMORY[0x234934494](&unk_23362BF4C, &type metadata for AccountCreditInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045840);
  }
  return result;
}

unint64_t sub_233200BA8()
{
  unint64_t result;

  result = qword_256045848;
  if (!qword_256045848)
  {
    result = MEMORY[0x234934494](&unk_23362C004, &type metadata for AssetAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045848);
  }
  return result;
}

unint64_t sub_233200BF0()
{
  unint64_t result;

  result = qword_256045850;
  if (!qword_256045850)
  {
    result = MEMORY[0x234934494](&unk_23362C0BC, &type metadata for LiabilityAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045850);
  }
  return result;
}

unint64_t sub_233200C38()
{
  unint64_t result;

  result = qword_256045858;
  if (!qword_256045858)
  {
    result = MEMORY[0x234934494](&unk_23362C02C, &type metadata for LiabilityAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045858);
  }
  return result;
}

unint64_t sub_233200C80()
{
  unint64_t result;

  result = qword_256045860;
  if (!qword_256045860)
  {
    result = MEMORY[0x234934494](&unk_23362C054, &type metadata for LiabilityAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045860);
  }
  return result;
}

unint64_t sub_233200CC8()
{
  unint64_t result;

  result = qword_256045868;
  if (!qword_256045868)
  {
    result = MEMORY[0x234934494](&unk_23362BF74, &type metadata for AssetAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045868);
  }
  return result;
}

unint64_t sub_233200D10()
{
  unint64_t result;

  result = qword_256045870;
  if (!qword_256045870)
  {
    result = MEMORY[0x234934494](&unk_23362BF9C, &type metadata for AssetAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045870);
  }
  return result;
}

unint64_t sub_233200D58()
{
  unint64_t result;

  result = qword_256045878;
  if (!qword_256045878)
  {
    result = MEMORY[0x234934494](&unk_23362BEBC, &type metadata for AccountCreditInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045878);
  }
  return result;
}

unint64_t sub_233200DA0()
{
  unint64_t result;

  result = qword_256045880;
  if (!qword_256045880)
  {
    result = MEMORY[0x234934494](&unk_23362BEE4, &type metadata for AccountCreditInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045880);
  }
  return result;
}

unint64_t sub_233200DE8()
{
  unint64_t result;

  result = qword_256045888;
  if (!qword_256045888)
  {
    result = MEMORY[0x234934494](&unk_23362BD4C, &type metadata for Account.AssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045888);
  }
  return result;
}

unint64_t sub_233200E30()
{
  unint64_t result;

  result = qword_256045890;
  if (!qword_256045890)
  {
    result = MEMORY[0x234934494](&unk_23362BD74, &type metadata for Account.AssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045890);
  }
  return result;
}

unint64_t sub_233200E78()
{
  unint64_t result;

  result = qword_256045898;
  if (!qword_256045898)
  {
    result = MEMORY[0x234934494](&unk_23362BC94, &type metadata for Account.LiabilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045898);
  }
  return result;
}

unint64_t sub_233200EC0()
{
  unint64_t result;

  result = qword_2560458A0;
  if (!qword_2560458A0)
  {
    result = MEMORY[0x234934494](&unk_23362BCBC, &type metadata for Account.LiabilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560458A0);
  }
  return result;
}

unint64_t sub_233200F08()
{
  unint64_t result;

  result = qword_2560458A8;
  if (!qword_2560458A8)
  {
    result = MEMORY[0x234934494](&unk_23362BE04, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560458A8);
  }
  return result;
}

unint64_t sub_233200F50()
{
  unint64_t result;

  result = qword_2560458B0;
  if (!qword_2560458B0)
  {
    result = MEMORY[0x234934494](&unk_23362BE2C, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560458B0);
  }
  return result;
}

uint64_t sub_233200F94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696C696261696CLL && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233201088(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x694C746964657263 && a2 == 0xEB0000000074696DLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366C9E0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023366CA00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A690)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233201240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366A650 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xEF656D614E6E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44676E696E65706FLL && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2332014F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366A650 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xEF656D614E6E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023366CA20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44676E696E65706FLL && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_233201814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Account.displayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23320183C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Account.accountDescription.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_233201864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Account.institutionName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23320188C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Account.currencyCode.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned __int8 *sub_2332018B8@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2332018C8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CLLocationValueTransformer();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248498);
  sub_23361E1C8();
  v0 = sub_23361E12C();
  result = swift_bridgeObjectRelease();
  qword_25424C338 = v0;
  return result;
}

uint64_t static CLLocationValueTransformer.allowedTopLevelClasses.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254247DC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  *(_QWORD *)(v0 + 32) = sub_2332019E8();
  return v0;
}

unint64_t sub_2332019E8()
{
  unint64_t result;

  result = qword_254247E40;
  if (!qword_254247E40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254247E40);
  }
  return result;
}

void static CLLocationValueTransformer.register()()
{
  objc_class *v0;
  void *v1;
  id v2;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  if (qword_254248490 != -1)
    swift_once();
  objc_msgSend(v1, sel_setValueTransformer_forName_);

}

id CLLocationValueTransformer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CLLocationValueTransformer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CLLocationValueTransformer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CLLocationValueTransformer()
{
  return objc_opt_self();
}

uint64_t CNPostalAddress.formattedMailingAddress.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_stringFromPostalAddress_style_, v0, 0);
  v2 = sub_23361E150();

  return v2;
}

uint64_t CNPostalAddress.formattedSingleLineMailingAddress.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_singleLineStringFromPostalAddress_addCountryName_, v0, 0);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23361E150();

  return v3;
}

BOOL CNPostalAddress.isEmpty.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v1 = objc_msgSend(v0, sel_street);
  v2 = sub_23361E150();
  v4 = v3;

  swift_bridgeObjectRelease();
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
    return 0;
  v6 = objc_msgSend(v0, sel_city);
  v7 = sub_23361E150();
  v9 = v8;

  swift_bridgeObjectRelease();
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (v10)
    return 0;
  v11 = objc_msgSend(v0, sel_state);
  v12 = sub_23361E150();
  v14 = v13;

  swift_bridgeObjectRelease();
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  if (v15)
    return 0;
  v16 = objc_msgSend(v0, sel_postalCode);
  v17 = sub_23361E150();
  v19 = v18;

  swift_bridgeObjectRelease();
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  if (v20)
    return 0;
  v21 = objc_msgSend(v0, sel_country);
  v22 = sub_23361E150();
  v24 = v23;

  swift_bridgeObjectRelease();
  v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v25 = v22 & 0xFFFFFFFFFFFFLL;
  if (v25)
    return 0;
  v26 = objc_msgSend(v0, sel_ISOCountryCode);
  v27 = sub_23361E150();
  v29 = v28;

  swift_bridgeObjectRelease();
  v30 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v30 = v27 & 0xFFFFFFFFFFFFLL;
  if (v30)
    return 0;
  v31 = objc_msgSend(v0, sel_subAdministrativeArea);
  v32 = sub_23361E150();
  v34 = v33;

  swift_bridgeObjectRelease();
  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = v32 & 0xFFFFFFFFFFFFLL;
  if (v35)
    return 0;
  v37 = objc_msgSend(v0, sel_subLocality);
  v38 = sub_23361E150();
  v40 = v39;

  swift_bridgeObjectRelease();
  v41 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0)
    v41 = v38 & 0xFFFFFFFFFFFFLL;
  return v41 == 0;
}

id sub_233201EE4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  qword_2560458C8 = (uint64_t)result;
  return result;
}

id sub_233201F14(uint64_t a1)
{
  return sub_233201F34(a1, 3955, &qword_2560458D0);
}

id sub_233201F24(uint64_t a1)
{
  return sub_233201F34(a1, 275, &qword_2560458D8);
}

id sub_233201F34(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  result = objc_msgSend(v5, sel_setFormatOptions_, a2);
  *a3 = v5;
  return result;
}

uint64_t sub_233201F8C(uint64_t a1)
{
  return sub_2332027AC(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB1E0], qword_2560458E0, (uint64_t)sub_233201FB0);
}

uint64_t sub_233201FB0@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38[16];
  _QWORD v39[4];
  char *v40;

  v37 = a2;
  v3 = sub_23361D634();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v33 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = v40;
  result = sub_23361F3E0();
  if (!v16)
  {
    v34 = v13;
    v35 = v15;
    v40 = v6;
    v36 = v4;
    v33 = v10;
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    sub_23361F230();
    if (qword_256041BD8 != -1)
      swift_once();
    v18 = (void *)qword_2560458C8;
    v19 = (void *)sub_23361E12C();
    v20 = objc_msgSend(v18, sel_dateFromString_, v19);

    v21 = v3;
    v22 = v40;
    if (v20)
    {
      sub_23361D5EC();

      v23 = (uint64_t)v35;
      v24 = v36;
      v25 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v25(v35, v22, v21);
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v26(v23, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v21) != 1)
        goto LABEL_18;
    }
    else
    {
      v23 = (uint64_t)v35;
      v24 = v36;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v26((uint64_t)v35, 1, 1, v21);
    }
    sub_2331D0F20(v23);
    if (qword_256041BE0 != -1)
      swift_once();
    v27 = (void *)qword_2560458D0;
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v27, sel_dateFromString_, v28);

    if (v29)
    {
      sub_23361D5EC();

      v25 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v23 = (uint64_t)v34;
      v25(v34, v22, v21);
      v26(v23, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v21) != 1)
        goto LABEL_18;
    }
    else
    {
      v23 = (uint64_t)v34;
      v26((uint64_t)v34, 1, 1, v21);
    }
    sub_2331D0F20(v23);
    if (qword_256041BE8 != -1)
      swift_once();
    v30 = (void *)qword_2560458D8;
    v31 = (void *)sub_23361E12C();
    v32 = objc_msgSend(v30, sel_dateFromString_, v31);

    if (v32)
    {
      sub_23361D5EC();

      v25 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v23 = (uint64_t)v33;
      v25(v33, v22, v21);
      v26(v23, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v21) != 1)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        v25(v37, (char *)v23, v21);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
      }
    }
    else
    {
      v23 = (uint64_t)v33;
      v26((uint64_t)v33, 1, 1, v21);
    }
    sub_2331D0F20(v23);
    strcpy(v38, "Invalid date: ");
    v38[15] = -18;
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361EE10();
    swift_allocError();
    sub_23361EDD4();
    swift_bridgeObjectRelease();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  }
  return result;
}

uint64_t static JSONDecoder.DateDecodingStrategy.iso8601withFractionalSeconds.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233202948(&qword_256041BF0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB1E0], (uint64_t)qword_2560458E0, a1);
}

id sub_2332024C0()
{
  id result;

  result = sub_2332024DC();
  qword_2560458F8 = (uint64_t)result;
  return result;
}

id sub_2332024DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F10);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23361D73C();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D748();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D868();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDCEF50], v6);
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = (void *)sub_23361D7CC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  objc_msgSend(v14, sel_setCalendar_, v15);

  sub_23361D6AC();
  v16 = (void *)sub_23361D6C4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  objc_msgSend(v14, sel_setLocale_, v16);

  sub_23361D874();
  v17 = sub_23361D8A4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v2, 1, v17) != 1)
  {
    v19 = (void *)sub_23361D880();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v17);
  }
  objc_msgSend(v14, sel_setTimeZone_, v19);

  v20 = (void *)sub_23361E12C();
  objc_msgSend(v14, sel_setDateFormat_, v20);

  return v14;
}

uint64_t sub_233202788(uint64_t a1)
{
  return sub_2332027AC(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB360], qword_256045900, (uint64_t)sub_23320280C);
}

uint64_t sub_2332027AC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;

  v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  v7 = (_QWORD *)__swift_project_value_buffer(v6, (uint64_t)a3);
  *v7 = a4;
  v7[1] = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 104))();
}

uint64_t sub_23320280C(uint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  id v4;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_23361F404();
  if (qword_256041BF8 != -1)
    swift_once();
  v2 = (void *)qword_2560458F8;
  v3 = (void *)sub_23361D5B0();
  v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

  sub_23361E150();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  sub_23361F260();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t static JSONEncoder.DateEncodingStrategy.iso8601withFractionalSeconds.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233202948(&qword_256041C00, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB360], (uint64_t)qword_256045900, a1);
}

uint64_t sub_233202948@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t RawOrderReturnInfo.returnPolicyURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RawOrderReturnInfo.returnPolicyURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RawOrderReturnInfo.returnPolicyURL.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderReturnInfo.returnPolicyDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawOrderReturnInfo() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for RawOrderReturnInfo()
{
  uint64_t result;

  result = qword_254246000;
  if (!qword_254246000)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawOrderReturnInfo.returnPolicyDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawOrderReturnInfo() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderReturnInfo.returnPolicyDescription.modify())()
{
  type metadata accessor for RawOrderReturnInfo();
  return nullsub_1;
}

uint64_t RawOrderReturnInfo.returnManagementURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderReturnInfo();
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, &qword_254248700);
}

uint64_t RawOrderReturnInfo.returnManagementURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderReturnInfo();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 24), &qword_254248700);
}

uint64_t (*RawOrderReturnInfo.returnManagementURL.modify())()
{
  type metadata accessor for RawOrderReturnInfo();
  return nullsub_1;
}

uint64_t RawOrderReturnInfo.returnDeadline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderReturnInfo();
  return sub_2331686A0(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderReturnInfo.returnDeadline.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderReturnInfo();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderReturnInfo.returnDeadline.modify())()
{
  type metadata accessor for RawOrderReturnInfo();
  return nullsub_1;
}

uint64_t RawOrderReturnInfo.displayCountdown.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RawOrderReturnInfo() + 32));
}

uint64_t RawOrderReturnInfo.displayCountdown.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawOrderReturnInfo();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*RawOrderReturnInfo.displayCountdown.modify())()
{
  type metadata accessor for RawOrderReturnInfo();
  return nullsub_1;
}

uint64_t RawOrderReturnInfo.init(returnPolicyURL:returnPolicyDescription:returnManagementURL:returnDeadline:displayCountdown:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v11 = (int *)type metadata accessor for RawOrderReturnInfo();
  v12 = (_QWORD *)(a7 + v11[5]);
  v13 = a7 + v11[6];
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v16 = a7 + v11[7];
  v17 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v11[8];
  *(_BYTE *)(a7 + v18) = 2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a7, a1, v14);
  *v12 = a2;
  v12[1] = a3;
  sub_233170B8C(a4, v13, &qword_254248700);
  result = sub_233170B8C(a5, v16, (uint64_t *)&unk_254247DA0);
  *(_BYTE *)(a7 + v18) = a6;
  return result;
}

uint64_t sub_233202DE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233202E28 + 4 * byte_23362D070[a1]))(0x6F506E7275746572, 0xEF4C52557963696CLL);
}

unint64_t sub_233202E28()
{
  return 0xD000000000000017;
}

uint64_t sub_233202E60()
{
  return 0x65446E7275746572;
}

unint64_t sub_233202E84()
{
  return 0xD000000000000010;
}

uint64_t sub_233202EA0()
{
  unsigned __int8 *v0;

  return sub_233202DE8(*v0);
}

uint64_t sub_233202EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233204E10(a1, a2);
  *a3 = result;
  return result;
}

void sub_233202ECC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_233202ED8()
{
  sub_233203F64();
  return sub_23361F428();
}

uint64_t sub_233202F00()
{
  sub_233203F64();
  return sub_23361F434();
}

uint64_t RawOrderReturnInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045918);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233203F64();
  sub_23361F410();
  v13 = 0;
  sub_23361D340();
  sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for RawOrderReturnInfo();
    v12 = 1;
    sub_23361F0E0();
    v11 = 2;
    sub_23361F110();
    v10 = 3;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    v9 = 4;
    sub_23361F0EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderReturnInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  char *v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045928);
  v42 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RawOrderReturnInfo();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v15[*(int *)(v13 + 20)];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v49 = (uint64_t *)v16;
  v17 = *(void (**)(void))(v8 + 56);
  v48 = &v15[*(int *)(v13 + 24)];
  v44 = v7;
  v17();
  v18 = (uint64_t)&v15[*(int *)(v12 + 28)];
  v19 = sub_23361D634();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v47 = v18;
  v20(v18, 1, 1, v19);
  v21 = *(int *)(v12 + 32);
  v15[v21] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233203F64();
  v45 = v11;
  v22 = v50;
  sub_23361F3EC();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v26 = (uint64_t)v48;
    v27 = v47;
    swift_bridgeObjectRelease();
    sub_233168608(v26, &qword_254248700);
    return sub_233168608(v27, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v50 = v15;
    v38 = v21;
    v23 = v42;
    v55 = 0;
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v25 = v43;
    v24 = v44;
    sub_23361F068();
    v37 = v8;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v50, v25, v24);
    v54 = 1;
    v28 = sub_23361EFCC();
    v29 = v49;
    *v49 = v28;
    v29[1] = v30;
    v53 = 2;
    v31 = (uint64_t)v41;
    sub_23361EFFC();
    sub_233170B8C(v31, (uint64_t)v48, &qword_254248700);
    v52 = 3;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v32 = (uint64_t)v40;
    sub_23361EFFC();
    sub_233170B8C(v32, v47, (uint64_t *)&unk_254247DA0);
    v51 = 4;
    v33 = sub_23361EFD8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v45, v46);
    v34 = v39;
    v35 = (uint64_t)v50;
    v50[v38] = v33;
    sub_233203FA8(v35, v34);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_233203FEC(v35);
  }
}

uint64_t sub_2332035E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderReturnInfo.init(from:)(a1, a2);
}

uint64_t sub_2332035F8(_QWORD *a1)
{
  return RawOrderReturnInfo.encode(to:)(a1);
}

void RawOrderReturnInfo.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for RawOrderReturnInfo();
  v11 = a2 + v10[6];
  v12 = sub_23361D340();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v32 = v11;
  v31(v11, 1, 1, v12);
  v13 = a2 + v10[7];
  v14 = sub_23361D634();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v35 = v13;
  v33 = v15;
  v15((char *)v13, 1, 1, v14);
  v34 = v10[8];
  *(_BYTE *)(a2 + v34) = 2;
  v16 = objc_msgSend(a1, sel_returnPolicyURL);
  sub_23361D2D4();

  v17 = objc_msgSend(a1, sel_returnPolicyDescription);
  if (v17)
  {
    v18 = v17;
    v19 = sub_23361E150();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  v22 = (uint64_t *)(a2 + v10[5]);
  *v22 = v19;
  v22[1] = v21;
  v23 = objc_msgSend(a1, sel_returnManagementURL);
  if (v23)
  {
    v24 = v23;
    sub_23361D2D4();

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = 1;
  v31((uint64_t)v9, v25, 1, v12);
  sub_233170B8C((uint64_t)v9, v32, &qword_254248700);
  v27 = objc_msgSend(a1, sel_returnDeadline);
  if (v27)
  {
    v28 = v27;
    sub_23361D5EC();

    v26 = 0;
  }
  v33(v6, v26, 1, v14);
  sub_233170B8C((uint64_t)v6, v35, (uint64_t *)&unk_254247DA0);
  v29 = ManagedOrderReturnInfo.displayCountdown.getter();

  *(_BYTE *)(a2 + v34) = v29;
}

uint64_t _s10FinanceKit18RawOrderReturnInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  int v69;
  int v70;
  _BOOL4 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;

  v87 = a2;
  v83 = sub_23361D634();
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v78 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v86);
  v82 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v84 = (uint64_t)&v72 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v80 = (uint64_t)&v72 - v10;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (int *)((char *)&v72 - v23);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v72 - v25;
  v27 = a1;
  v28 = a1;
  v29 = v87;
  if ((MEMORY[0x234931620](v28) & 1) == 0)
    return 0;
  v85 = v24;
  v76 = v11;
  v77 = v26;
  v73 = v21;
  v74 = v12;
  v75 = v17;
  v30 = v86;
  v31 = (int *)type metadata accessor for RawOrderReturnInfo();
  v32 = v31[5];
  v33 = (_QWORD *)(v27 + v32);
  v34 = *(_QWORD *)(v27 + v32 + 8);
  v35 = (_QWORD *)(v29 + v32);
  v36 = v35[1];
  v37 = v27;
  if (!v34)
  {
    v40 = v30;
    v38 = v14;
    v39 = (uint64_t)v85;
    if (v36)
      return 0;
    goto LABEL_9;
  }
  v38 = v14;
  v39 = (uint64_t)v85;
  if (!v36)
    return 0;
  v40 = v30;
  if (*v33 == *v35 && v34 == v36 || (v41 = sub_23361F224(), result = 0, (v41 & 1) != 0))
  {
LABEL_9:
    v43 = v31[6];
    v86 = v37;
    v44 = (uint64_t)v77;
    sub_2331686A0(v37 + v43, (uint64_t)v77, &qword_254248700);
    sub_2331686A0(v29 + v31[6], v39, &qword_254248700);
    v45 = *(int *)(v15 + 48);
    v46 = (uint64_t)v75;
    v47 = (uint64_t)&v75[v45];
    sub_2331686A0(v44, (uint64_t)v75, &qword_254248700);
    sub_2331686A0(v39, v47, &qword_254248700);
    v48 = v74;
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
    v50 = v76;
    if (v49(v46, 1, v76) == 1)
    {
      sub_233168608(v39, &qword_254248700);
      sub_233168608(v44, &qword_254248700);
      if (v49(v47, 1, v50) == 1)
      {
        sub_233168608(v46, &qword_254248700);
LABEL_16:
        v56 = v86;
        v57 = v80;
        sub_2331686A0(v86 + v31[7], v80, (uint64_t *)&unk_254247DA0);
        v85 = v31;
        v58 = v84;
        sub_2331686A0(v87 + v31[7], v84, (uint64_t *)&unk_254247DA0);
        v59 = v82;
        v60 = v82 + *(int *)(v40 + 48);
        sub_2331686A0(v57, v82, (uint64_t *)&unk_254247DA0);
        sub_2331686A0(v58, v60, (uint64_t *)&unk_254247DA0);
        v61 = v81;
        v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
        v63 = v83;
        if (v62(v59, 1, v83) == 1)
        {
          sub_233168608(v58, (uint64_t *)&unk_254247DA0);
          sub_233168608(v57, (uint64_t *)&unk_254247DA0);
          if (v62(v60, 1, v63) == 1)
          {
            sub_233168608(v59, (uint64_t *)&unk_254247DA0);
LABEL_25:
            v68 = v85[8];
            v69 = *(unsigned __int8 *)(v56 + v68);
            v70 = *(unsigned __int8 *)(v87 + v68);
            if (v69 == 2)
            {
              if (v70 == 2)
                return 1;
            }
            else
            {
              v71 = (v69 & 1) == 0;
              if (v70 != 2 && ((v71 ^ v70) & 1) != 0)
                return 1;
            }
            return 0;
          }
        }
        else
        {
          v64 = v79;
          sub_2331686A0(v59, v79, (uint64_t *)&unk_254247DA0);
          if (v62(v60, 1, v63) != 1)
          {
            v65 = v78;
            (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v78, v60, v63);
            sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
            v66 = sub_23361E108();
            v67 = *(void (**)(char *, uint64_t))(v61 + 8);
            v67(v65, v63);
            sub_233168608(v84, (uint64_t *)&unk_254247DA0);
            sub_233168608(v57, (uint64_t *)&unk_254247DA0);
            v67((char *)v64, v63);
            sub_233168608(v59, (uint64_t *)&unk_254247DA0);
            if ((v66 & 1) == 0)
              return 0;
            goto LABEL_25;
          }
          sub_233168608(v58, (uint64_t *)&unk_254247DA0);
          sub_233168608(v57, (uint64_t *)&unk_254247DA0);
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v63);
        }
        v52 = &qword_256042DA0;
        v53 = v59;
LABEL_22:
        sub_233168608(v53, v52);
        return 0;
      }
    }
    else
    {
      v51 = (uint64_t)v73;
      sub_2331686A0(v46, (uint64_t)v73, &qword_254248700);
      if (v49(v47, 1, v50) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v38, v47, v50);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v54 = sub_23361E108();
        v55 = *(void (**)(char *, uint64_t))(v48 + 8);
        v55(v38, v50);
        sub_233168608((uint64_t)v85, &qword_254248700);
        sub_233168608((uint64_t)v77, &qword_254248700);
        v55((char *)v51, v50);
        sub_233168608(v46, &qword_254248700);
        if ((v54 & 1) == 0)
          return 0;
        goto LABEL_16;
      }
      sub_233168608((uint64_t)v85, &qword_254248700);
      sub_233168608((uint64_t)v77, &qword_254248700);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v51, v50);
    }
    v52 = &qword_256045948;
    v53 = v46;
    goto LABEL_22;
  }
  return result;
}

unint64_t sub_233203F64()
{
  unint64_t result;

  result = qword_256045920;
  if (!qword_256045920)
  {
    result = MEMORY[0x234934494](&unk_23362D22C, &type metadata for RawOrderReturnInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045920);
  }
  return result;
}

uint64_t sub_233203FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawOrderReturnInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233203FEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawOrderReturnInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeBufferWithCopyOfBuffer for RawOrderReturnInfo(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D340();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = &a1[v10];
    v13 = &a2[v10];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = &a1[v11];
    v16 = &a2[v11];
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    if (v17(v16, 1, v7))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v9(v15, v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    v20 = a3[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = sub_23361D634();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t destroy for RawOrderReturnInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

char *initializeWithCopy for RawOrderReturnInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  if (v16(v15, 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8(v14, v15, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23361D634();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t assignWithCopy for RawOrderReturnInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v16 = v15(a1 + v12, 1, v6);
  v17 = v15((uint64_t)v14, 1, v6);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = sub_23361D634();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

char *initializeWithTake for RawOrderReturnInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t assignWithTake for RawOrderReturnInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v18 = v17(a1 + v14, 1, v6);
  v19 = v17((uint64_t)v16, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v15, v16, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v15, v6);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v15, (uint64_t)v16, v6);
LABEL_7:
  v21 = a3[7];
  v22 = (void *)(a1 + v21);
  v23 = (void *)(a2 + v21);
  v24 = sub_23361D634();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderReturnInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332049D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[6];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[7];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderReturnInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233204AC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_23361D340();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233204B9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23361D340();
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderReturnInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233204CB8 + 4 * byte_23362D07A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233204CEC + 4 * byte_23362D075[v4]))();
}

uint64_t sub_233204CEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233204CF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233204CFCLL);
  return result;
}

uint64_t sub_233204D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233204D10);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233204D14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233204D1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderReturnInfo.CodingKeys()
{
  return &type metadata for RawOrderReturnInfo.CodingKeys;
}

unint64_t sub_233204D3C()
{
  unint64_t result;

  result = qword_256045930;
  if (!qword_256045930)
  {
    result = MEMORY[0x234934494](&unk_23362D204, &type metadata for RawOrderReturnInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045930);
  }
  return result;
}

unint64_t sub_233204D84()
{
  unint64_t result;

  result = qword_256045938;
  if (!qword_256045938)
  {
    result = MEMORY[0x234934494](&unk_23362D174, &type metadata for RawOrderReturnInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045938);
  }
  return result;
}

unint64_t sub_233204DCC()
{
  unint64_t result;

  result = qword_256045940;
  if (!qword_256045940)
  {
    result = MEMORY[0x234934494](&unk_23362D19C, &type metadata for RawOrderReturnInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045940);
  }
  return result;
}

uint64_t sub_233204E10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F506E7275746572 && a2 == 0xEF4C52557963696CLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023366CAA0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023366CAC0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65446E7275746572 && a2 == 0xEE00656E696C6461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023366CAE0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id BankConnectOsloProvider.__allocating_init(financeStore:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_callbackCancellable] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_financeStore] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id BankConnectOsloProvider.init(financeStore:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_callbackCancellable] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_financeStore] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for BankConnectOsloProvider();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for BankConnectOsloProvider()
{
  return objc_opt_self();
}

id sub_233205164()
{
  void *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  if (qword_254244AD0 != -1)
    swift_once();
  v0 = off_254245198;
  v1 = (objc_class *)type metadata accessor for BankConnectOsloProvider();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_callbackCancellable] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_financeStore] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

void sub_2332052E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *v10;
  NSObject *oslog;
  os_activity_scope_state_s state;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask]
    || *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask]
    || *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask])
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v4 = sub_23361DB80();
    __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
    oslog = sub_23361DB68();
    v5 = sub_23361E768();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_233151000, oslog, v5, "Listeners already setup for account balance, ignoring.", v6, 2u);
      MEMORY[0x234934590](v6, -1, -1);
    }

  }
  else
  {
    state.opaque[0] = 0;
    state.opaque[1] = 0;
    if (qword_254246ED0 != -1)
      swift_once();
    v10 = _os_activity_create(&dword_233151000, "bankConnect/osloProvider", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);
    sub_2332054D8(v3, a1, a2, a3);
    os_activity_scope_leave(&state);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_2332054D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v12 = sub_23361DB80();
  __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v13 = sub_23361DB68();
  v14 = sub_23361E780();
  if (os_log_type_enabled(v13, v14))
  {
    v33 = v4;
    v15 = swift_slowAlloc();
    v32 = a1;
    v16 = (uint8_t *)v15;
    v30 = swift_slowAlloc();
    v35 = v30;
    v31 = v11;
    *(_DWORD *)v16 = 136315138;
    v29 = v16 + 4;
    swift_bridgeObjectRetain();
    v17 = a4;
    v18 = sub_23361E5E8();
    v19 = a3;
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = v18;
    a4 = v17;
    v34 = sub_233164DCC(v22, v21, &v35);
    v11 = v31;
    sub_23361EBC4();
    a3 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v13, v14, "Listening to account balance changes for fpanIDs: %s.", v16, 0xCu);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x234934590](v23, -1, -1);
    v24 = v16;
    a1 = v32;
    MEMORY[0x234934590](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v25 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = a1;
  v26[5] = a2;
  v26[6] = a3;
  v26[7] = a4;
  swift_bridgeObjectRetain();
  v27 = a1;
  swift_retain();
  sub_2334E4034((uint64_t)v11, (uint64_t)&unk_2560459C8, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_233205790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v7[13] = swift_task_alloc();
  v10 = sub_23361EB58();
  v7[14] = v10;
  v7[15] = *(_QWORD *)(v10 - 8);
  v7[16] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560459D0);
  v7[17] = v11;
  v7[18] = *(_QWORD *)(v11 - 8);
  v7[19] = swift_task_alloc();
  v12 = (_QWORD *)swift_task_alloc();
  v7[20] = v12;
  *v12 = v7;
  v12[1] = sub_2332058B8;
  v12[5] = a5;
  v12[6] = a4;
  v12[4] = v7 + 2;
  return swift_task_switch();
}

uint64_t sub_2332058B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233205924()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD);
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  void *v62;
  void *v63[2];

  v1 = *(void **)(v0 + 16);
  if (qword_256041CA0 != -1)
    swift_once();
  v62 = v1;
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23361DB68();
  v4 = sub_23361E780();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (void *)swift_slowAlloc();
    v63[0] = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v7 = sub_23361E5E8();
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = sub_233164DCC(v7, v9, (uint64_t *)v63);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v3, v4, "Returning account information and listening to balance changes for fpanIDs: %s.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v6, -1, -1);
    MEMORY[0x234934590](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v56 = *(_QWORD *)(v0 + 144);
  v57 = *(void **)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 128);
  v50 = *(_QWORD *)(v0 + 120);
  v51 = *(_QWORD *)(v0 + 112);
  v52 = *(_QWORD *)(v0 + 152);
  v12 = *(void (**)(_QWORD))(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  v54 = *(_QWORD *)(v0 + 64);
  v55 = *(_QWORD *)(v0 + 136);
  v12(*(_QWORD *)(v0 + 168));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560459D8);
  swift_allocObject();
  v53 = sub_23361DD9C();
  *(_QWORD *)(v0 + 24) = v53;
  sub_23361EB4C();
  v14 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  *(_QWORD *)(v0 + 32) = v14;
  sub_233168668(0, &qword_2560459E0);
  sub_2331B1A14(&qword_2560459E8, &qword_2560459D8, MEMORY[0x24BDB9CB0]);
  sub_233208384();
  sub_23361DDCC();

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v10, v51);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = v12;
  v16[4] = v11;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v54;
  v18[4] = v12;
  v18[5] = v11;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_23320846C;
  *(_QWORD *)(v19 + 24) = v18;
  sub_2331B1A14(&qword_2560459F8, &qword_2560459D0, MEMORY[0x24BDB9988]);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v20 = sub_23361DDC0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v52, v55);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_callbackCancellable) = v20;
  swift_release();
  v21 = sub_2331B1A14(&qword_256045A00, &qword_2560459D8, MEMORY[0x24BDB9CA8]);
  v22 = v62;
  v63[0] = v62;
  swift_retain();
  v23 = FinanceStore.internalConsents(since:isMonitoring:)(v63, 1);
  if (v57)
  {
    swift_release();
    v36 = v57;
    v37 = v57;
    v38 = sub_23361DB68();
    v39 = sub_23361E768();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v61 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v40 = 138412290;
      v41 = v57;
      v42 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 40) = v42;
      v22 = v62;
      sub_23361EBC4();
      *v61 = v42;

      _os_log_impl(&dword_233151000, v38, v39, "Error while setting up listeners in Oslo Provider, unable to listen for additional updates: %@.", v40, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v61, -1, -1);
      MEMORY[0x234934590](v40, -1, -1);
    }
    else
    {

    }
    v43 = *(void **)(v0 + 168);

    sub_23320697C();
    swift_release();

  }
  else
  {
    v24 = v23;
    v25 = *(_QWORD *)(v0 + 96);
    v26 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 56);
    v28 = sub_23361E534();
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
    v59(v26, 1, 1, v28);
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v24;
    v29[5] = v53;
    v60 = v21;
    v29[6] = v21;
    swift_retain();
    swift_retain();
    *(_QWORD *)(v27 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask) = sub_2334E4034(v26, (uint64_t)&unk_256045A10, (uint64_t)v29);
    swift_release();
    swift_release();
    swift_release();
    v30 = sub_23361D6A0();
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
    v31(v25, 1, 1, v30);
    v63[0] = v62;
    swift_retain();
    v32 = FinanceStore.internalAccounts(forAccountID:since:isMonitoring:)(v25, v63, 1);
    v33 = *(_QWORD *)(v0 + 104);
    v58 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 56);
    sub_2331D76B8(*(_QWORD *)(v0 + 96));
    v59(v33, 1, 1, v28);
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = 0;
    v35[3] = 0;
    v35[4] = v32;
    v35[5] = v53;
    v35[6] = v60;
    swift_retain();
    swift_retain();
    *(_QWORD *)(v34 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask) = sub_2334E4034(v33, (uint64_t)&unk_256045A20, (uint64_t)v35);
    swift_release();
    swift_release();
    swift_release();
    v31(v58, 1, 1, v30);
    v63[0] = v62;
    swift_retain();
    v45 = FinanceStore.internalAccountBalances(for:since:isMonitoring:)(v58, v63, 1);
    v46 = *(void **)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 104);
    v48 = *(_QWORD *)(v0 + 56);
    sub_2331D76B8(*(_QWORD *)(v0 + 88));
    v59(v47, 1, 1, v28);
    v49 = (_QWORD *)swift_allocObject();
    v49[2] = 0;
    v49[3] = 0;
    v49[4] = v45;
    v49[5] = v53;
    v49[6] = v60;
    swift_retain();
    swift_retain();
    *(_QWORD *)(v48 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask) = sub_2334E4034(v47, (uint64_t)&unk_256045A30, (uint64_t)v49);

    swift_release_n();
    swift_release();
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233206218()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233206280(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  swift_beginAccess();
  result = MEMORY[0x23493465C](a2 + 16);
  if (result)
  {
    v13 = result;
    v14 = sub_23361E534();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v11;
    v15[5] = v13;
    v15[6] = a3;
    v15[7] = a4;
    v16 = v11;
    swift_retain();
    sub_2333B205C((uint64_t)v10, (uint64_t)&unk_256045A58, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_233206394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a4;
  return swift_task_switch();
}

uint64_t sub_2332063B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 24);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = v1;
  if (qword_256041CA0 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  v4 = v1;
  v5 = v1;
  v6 = sub_23361DB68();
  v7 = sub_23361E768();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23361EBC4();
    *v13 = v10;

    _os_log_impl(&dword_233151000, v6, v7, "Fetching updates failed: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {

  }
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v12;
  *(_QWORD *)v12 = v0;
  *(_QWORD *)(v12 + 8) = sub_2332065D4;
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_2332065D4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233206628()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233206658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x23493465C](a1 + 16);
  if (result)
  {
    v12 = result;
    v13 = sub_23361E534();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v12;
    v14[5] = a2;
    v14[6] = a3;
    v14[7] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2333B205C((uint64_t)v10, (uint64_t)&unk_256045A48, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_233206768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_233206784()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Changes observed, reloading accounts.", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_233206888;
  return sub_23320774C(v0[3], v0[4], v0[5]);
}

uint64_t sub_233206888()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_23320697C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_callbackCancellable))
  {
    swift_retain();
    sub_23361DD90();
    swift_release();
  }
  v1 = OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_consentsTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    sub_23361E54C();
    swift_release();
  }
  v2 = OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_accountsTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    sub_23361E54C();
    swift_release();
  }
  v3 = OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit23BankConnectOsloProvider_balancesTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    sub_23361E54C();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  *(_QWORD *)(v0 + v2) = 0;
  swift_release();
  *(_QWORD *)(v0 + v3) = 0;
  swift_release();
  if (qword_256041CA0 != -1)
    swift_once();
  v4 = sub_23361DB80();
  __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
  oslog = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, oslog, v5, "Listening tasks stopped, changes are no longer being listened too.", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

}

id BankConnectOsloProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_23320697C();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectOsloProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233206C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v6[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233206CB8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  unint64_t v15;
  char v16;
  uint64_t (*v17)(_QWORD *);

  v1 = v0[21];
  v15 = v1;
  v2 = v0[18];
  v3 = *(void **)(v2 + 16);
  v16 = *(_BYTE *)(v2 + 24);
  sub_233177068(v2 + 32, (uint64_t)(v0 + 2));
  v4 = *(_QWORD *)(v2 + 72);
  v5 = sub_23361D6A0();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  sub_233177068((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045A38);
  v6 = swift_allocObject();
  v7 = v0[10];
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v7);
  v9 = *(_QWORD *)(v7 - 8);
  v10 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  v11 = *v10;
  v12 = v3;
  swift_retain();
  v0[22] = sub_23341D248(v15, (unint64_t)v3, v16, v11, 0, 0, v4, v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v17 = (uint64_t (*)(_QWORD *))((char *)&dword_2560486E0 + dword_2560486E0);
  v13 = (_QWORD *)swift_task_alloc();
  v0[23] = v13;
  *v13 = v0;
  v13[1] = sub_233206E58;
  return v17(v0 + 12);
}

uint64_t sub_233206E58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233206EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  if (!v1)
  {
    swift_release();
    goto LABEL_5;
  }
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void **)(v0 + 120);
  v5 = *(void **)(v0 + 192);
  sub_23361E57C();
  if (v5)
  {
    swift_release();
    sub_233208748(v1, v2, v3, v4);
    swift_getObjectType();
    *(_QWORD *)(v0 + 136) = v5;
    v6 = v5;
    sub_23361DDA8();

LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(v2 + 16) || *(_QWORD *)(v1 + 16) || *(_QWORD *)(v3 + 16))
  {
    swift_getObjectType();
    sub_23361DDB4();
  }
  sub_233208748(v1, v2, v3, v4);
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_2560486E0 + dword_2560486E0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v8;
  *v8 = v0;
  v8[1] = sub_233206E58;
  return v9(v0 + 96);
}

uint64_t sub_233207034()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_233207094()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  v1 = *(void **)(v0 + 192);
  swift_getObjectType();
  *(_QWORD *)(v0 + 136) = v1;
  v2 = v1;
  sub_23361DDA8();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233207124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_233207140()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t *);

  InternalAccountAsyncSequence.makeAsyncIterator()(v0 + 6);
  v0[12] = v0[6];
  v3 = (uint64_t (*)(uint64_t *))((char *)&dword_256048650 + dword_256048650);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2332071C0;
  return v3(v0 + 2);
}

uint64_t sub_2332071C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233207224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v5 = *(void **)(v0 + 112);
  sub_23361E57C();
  if (v5)
  {
    swift_release();
    sub_233208748(v1, v2, v3, v4);
    swift_getObjectType();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = v5;
    sub_23361DDA8();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(v2 + 16) || *(_QWORD *)(v1 + 16) || *(_QWORD *)(v3 + 16))
  {
    swift_getObjectType();
    sub_23361DDB4();
  }
  sub_233208748(v1, v2, v3, v4);
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_256048650 + dword_256048650);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_2332071C0;
  return v9(v0 + 16);
}

uint64_t sub_233207394()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_2332073F4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  v1 = *(void **)(v0 + 112);
  swift_getObjectType();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = v1;
  sub_23361DDA8();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23320747C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_233207498()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t *);

  InternalAccountBalanceAsyncSequence.makeAsyncIterator()(v0 + 6);
  v0[12] = v0[6];
  v3 = (uint64_t (*)(uint64_t *))((char *)&dword_2560486B8 + dword_2560486B8);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_233207518;
  return v3(v0 + 2);
}

uint64_t sub_233207518()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23320757C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v5 = *(void **)(v0 + 112);
  sub_23361E57C();
  if (v5)
  {
    swift_release();
    sub_233208748(v1, v2, v3, v4);
    swift_getObjectType();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = v5;
    sub_23361DDA8();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(v2 + 16) || *(_QWORD *)(v1 + 16) || *(_QWORD *)(v3 + 16))
  {
    swift_getObjectType();
    sub_23361DDB4();
  }
  sub_233208748(v1, v2, v3, v4);
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_2560486B8 + dword_2560486B8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_233207518;
  return v9(v0 + 16);
}

uint64_t sub_2332076EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_23320774C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v4[6] = a2;
  v4[7] = a3;
  v4[5] = a1;
  v6 = (_QWORD *)swift_task_alloc();
  v4[8] = v6;
  *v6 = v4;
  v6[1] = sub_2332077C4;
  v6[5] = a1;
  v6[6] = v3;
  v6[4] = v4 + 2;
  return swift_task_switch();
}

uint64_t sub_2332077C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_233207838()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v11;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136315138;
    swift_bridgeObjectRetain();
    v6 = sub_23361E5E8();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_233164DCC(v6, v8, &v11);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v3, "Returning updated account information for fpanIDs: %s.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v5, -1, -1);
    MEMORY[0x234934590](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 72);
  (*(void (**)(void *))(v0 + 48))(v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233207A30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v12;
    sub_23361EBC4();
    *v10 = v12;

    _os_log_impl(&dword_233151000, v5, v6, "Error while fetching valid accounts: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233207BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_233207C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE *v9;
  _QWORD *v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23362D290;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v3 = swift_allocObject();
  v4 = MEMORY[0x24BEE3F30];
  v5 = MEMORY[0x24BEE3F78];
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_WORD *)(v3 + 32) = 0;
  *(_QWORD *)(v2 + 32) = sub_23361E6B4();
  *(_QWORD *)(v2 + 40) = sub_23361E6B4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
  *(_QWORD *)(v6 + 64) = sub_2331B1A14(&qword_2560459B8, (uint64_t *)&unk_2560578D0, MEMORY[0x24BDCFD00]);
  *(_QWORD *)(v6 + 32) = v1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 48) = sub_23361E6B4();
  v12 = v2;
  sub_23361E408();
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);
  *(_QWORD *)(v0 + 56) = v8;

  static DeviceInfo.deviceType.getter((char *)&v12);
  if ((_BYTE)v12)
  {
    sub_23316853C();
    swift_allocError();
    *v9 = 3;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v11;
    *v11 = v0;
    v11[1] = sub_233207ECC;
    return sub_2332A0E28(v0 + 16, (uint64_t)v8, MEMORY[0x24BEE4AF8], 0, 1, 0, 1);
  }
}

uint64_t sub_233207ECC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_233207F38()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  _QWORD v6[2];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 16);
  **(_QWORD **)(v0 + 32) = v2;
  v6[0] = v2;
  v6[1] = v1;
  v3 = v2;
  v4 = sub_233208094((uint64_t)v6);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

uint64_t sub_233207FA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id BankConnectOsloProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectOsloProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for BankConnectOsloProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectOsloProvider.__allocating_init(financeStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of static BankConnectOsloProvider.makeProvider()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of BankConnectOsloProvider.listenForAccounts(withPrimaryAccountIdentifiers:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

id sub_233208094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  id v18;
  void *v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v23 = type metadata accessor for InternalAccount();
  v2 = MEMORY[0x24BDAC7A8](v23);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)v22 - v6;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    v22[1] = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x24BEE4B00];
    do
    {
      sub_2331EEE4C(v10, (uint64_t)v7);
      v13 = (uint64_t *)&v7[*(int *)(v23 + 32)];
      v14 = v13[1];
      if (v14)
      {
        v15 = *v13;
        sub_233168668(0, &qword_254245090);
        sub_2331EEE4C((uint64_t)v7, (uint64_t)v4);
        swift_bridgeObjectRetain();
        v16 = FKAccount.init(from:)(v4);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24 = v12;
        sub_23328E764((uint64_t)v16, v15, v14, isUniquelyReferenced_nonNull_native);
        v12 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_233208294((uint64_t)v7);
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  v18 = objc_allocWithZone((Class)FKBankConnectOsloProviderResponse);
  sub_233168668(0, &qword_254245090);
  v19 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithDictionary_, v19);

  return v20;
}

uint64_t sub_233208294(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InternalAccount();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2332082D0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2332082F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23318C26C;
  return sub_233205790(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_233208384()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560459F0;
  if (!qword_2560459F0)
  {
    v1 = sub_233168668(255, &qword_2560459E0);
    result = MEMORY[0x234934494](MEMORY[0x24BDD0408], v1);
    atomic_store(result, (unint64_t *)&qword_2560459F0);
  }
  return result;
}

uint64_t sub_2332083DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_233208400()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23320842C(void **a1)
{
  uint64_t *v1;

  return sub_233206280(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_233208438()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23320846C()
{
  uint64_t *v0;

  return sub_233206658(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_233208478()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2332084A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23318C26C;
  return sub_233206C58(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_233208524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_2331676FC;
  *(_QWORD *)(v3 + 88) = v2;
  *(_OWORD *)(v3 + 72) = v4;
  return swift_task_switch();
}

uint64_t objectdestroy_24Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2332085C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23318C26C;
  *(_QWORD *)(v3 + 88) = v2;
  *(_OWORD *)(v3 + 72) = v4;
  return swift_task_switch();
}

uint64_t sub_23320862C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_233208644()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(void);
  id v6;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E768();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Removing all account information.", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }
  v5 = *(void (**)(void))(v0 + 16);

  v6 = objc_msgSend(objc_allocWithZone((Class)FKBankConnectOsloProviderResponse), sel_initForError);
  v5();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233208748(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2332087D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23318C26C;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return swift_task_switch();
}

uint64_t sub_233208834()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233208870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_2331676FC;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t RawBankConnectData.AccountParty.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.AccountParty.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.id.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.number.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.AccountParty.number.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.number.modify())()
{
  return nullsub_1;
}

void RawBankConnectData.AccountParty.partyType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *RawBankConnectData.AccountParty.partyType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.partyType.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.AccountParty.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.name.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.fullLegalName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.AccountParty.fullLegalName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.fullLegalName.modify())()
{
  return nullsub_1;
}

void RawBankConnectData.AccountParty.legalStructure.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

_BYTE *RawBankConnectData.AccountParty.legalStructure.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = *result;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.legalStructure.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.beneficialOwnership.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t RawBankConnectData.AccountParty.beneficialOwnership.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.beneficialOwnership.modify())()
{
  return nullsub_1;
}

void RawBankConnectData.AccountParty.accountRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 74);
}

_BYTE *RawBankConnectData.AccountParty.accountRole.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 74) = *result;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.accountRole.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.emailAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.AccountParty.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.AccountParty.addresses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.AccountParty.addresses.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*RawBankConnectData.AccountParty.addresses.modify())()
{
  return nullsub_1;
}

double RawBankConnectData.AccountParty.init(id:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 4;
  result = 0.0;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_WORD *)(a3 + 72) = 525;
  *(_BYTE *)(a3 + 74) = 32;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 80) = 0;
  return result;
}

_QWORD *sub_233208C1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _QWORD *v46;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045B50);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v49 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v49 - v8;
  v10 = v0[6];
  v11 = v0[8];
  v13 = v0[10];
  v12 = v0[11];
  v52 = v0[7];
  v53 = v12;
  v14 = v0[12];
  v61 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_23361CE6C();
    v15 = sub_23361CE60();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
    v51 = v13;
    sub_23320BF90((uint64_t)v9, (uint64_t)v7);
    sub_23361CE60();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v7, 1, v15) == 1)
    {
      sub_23320BFD8((uint64_t)v7);
    }
    else
    {
      v18 = sub_23361CE24();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
      if (v20)
      {
        v50 = v18;
        v21 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_2334A50D8(0, v21[2] + 1, 1, v21);
        v23 = v21[2];
        v22 = v21[3];
        v24 = v23 + 1;
        if (v23 >= v22 >> 1)
        {
          v49 = v23 + 1;
          v48 = sub_2334A50D8((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
          v24 = v49;
          v21 = v48;
        }
        v21[2] = v24;
        v25 = &v21[3 * v23];
        v25[4] = v50;
        v25[5] = v20;
        *((_BYTE *)v25 + 48) = 8;
        v61 = v21;
      }
    }
    sub_23320BF90((uint64_t)v9, (uint64_t)v4);
    if (v17(v4, 1, v15) == 1)
    {
      sub_23320BFD8((uint64_t)v4);
      v13 = v51;
    }
    else
    {
      v26 = sub_23361CE30();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
      v13 = v51;
      if (v28)
      {
        v29 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v29 = sub_2334A50D8(0, v29[2] + 1, 1, v29);
        v31 = v29[2];
        v30 = v29[3];
        if (v31 >= v30 >> 1)
          v29 = sub_2334A50D8((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
        v29[2] = v31 + 1;
        v32 = &v29[3 * v31];
        v32[4] = v26;
        v32[5] = v28;
        *((_BYTE *)v32 + 48) = 9;
        v61 = v29;
      }
    }
    sub_23320BFD8((uint64_t)v9);
  }
  if (v11)
  {
    v33 = v61;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_2334A50D8(0, v33[2] + 1, 1, v33);
    v35 = v33[2];
    v34 = v33[3];
    if (v35 >= v34 >> 1)
      v33 = sub_2334A50D8((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
    v33[2] = v35 + 1;
    v36 = &v33[3 * v35];
    v36[4] = v52;
    v36[5] = v11;
    *((_BYTE *)v36 + 48) = 10;
    v61 = v33;
  }
  v37 = v53;
  if (v53)
  {
    v38 = v61;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_2334A50D8(0, v38[2] + 1, 1, v38);
    v40 = v38[2];
    v39 = v38[3];
    if (v40 >= v39 >> 1)
      v38 = sub_2334A50D8((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
    v38[2] = v40 + 1;
    v41 = &v38[3 * v40];
    v41[4] = v13;
    v41[5] = v37;
    *((_BYTE *)v41 + 48) = 7;
    v61 = v38;
  }
  if (v14 && *(_QWORD *)(v14 + 16))
  {
    v42 = *(_QWORD *)(v14 + 128);
    v43 = *(_OWORD *)(v14 + 48);
    v54 = *(_OWORD *)(v14 + 32);
    v55 = v43;
    v44 = *(_OWORD *)(v14 + 80);
    v56 = *(_OWORD *)(v14 + 64);
    v57 = v44;
    v45 = *(_OWORD *)(v14 + 112);
    v58 = *(_OWORD *)(v14 + 96);
    v59 = v45;
    v60 = v42;
    v46 = sub_23324B1EC();
    sub_2331896DC((uint64_t)v46);
  }
  return v61;
}

uint64_t sub_233209090(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2332090B8 + 4 * byte_23362D308[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2332090B8()
{
  return 0x7265626D756ELL;
}

uint64_t sub_2332090CC()
{
  return 0x7079547974726170;
}

uint64_t sub_2332090E8()
{
  return 1701667182;
}

uint64_t sub_2332090F8()
{
  return 0x6167654C6C6C7566;
}

uint64_t sub_23320911C()
{
  return 0x7274536C6167656CLL;
}

unint64_t sub_233209140()
{
  return 0xD000000000000013;
}

uint64_t sub_23320915C()
{
  return 0x52746E756F636361;
}

uint64_t sub_23320917C()
{
  return 0x6464416C69616D65;
}

uint64_t sub_23320919C()
{
  return 0x6573736572646461;
}

uint64_t sub_2332091BC()
{
  unsigned __int8 *v0;

  return sub_233209090(*v0);
}

uint64_t sub_2332091C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23320BA64(a1, a2);
  *a3 = result;
  return result;
}

void sub_2332091E8(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2332091F4()
{
  sub_23320AD2C();
  return sub_23361F428();
}

uint64_t sub_23320921C()
{
  sub_23320AD2C();
  return sub_23361F434();
}

uint64_t RawBankConnectData.AccountParty.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045A68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v25 = *(_QWORD *)(v1 + 24);
  v26 = v7;
  v29 = *(unsigned __int8 *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 48);
  v24 = v8;
  v9 = *(_QWORD *)(v1 + 56);
  v21 = *(_QWORD *)(v1 + 64);
  v22 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 72);
  v19 = *(unsigned __int8 *)(v1 + 73);
  v20 = v9;
  v18 = *(unsigned __int8 *)(v1 + 74);
  v10 = *(_QWORD *)(v1 + 88);
  v16 = *(_QWORD *)(v1 + 80);
  v17 = v10;
  v15 = *(_QWORD *)(v1 + 96);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23320AD2C();
  sub_23361F410();
  LOBYTE(v28) = 0;
  v11 = v27;
  sub_23361F140();
  if (!v11)
  {
    v12 = v29;
    LOBYTE(v28) = 1;
    sub_23361F0E0();
    LOBYTE(v28) = v12;
    v30 = 2;
    sub_23320AD70();
    sub_23361F110();
    LOBYTE(v28) = 3;
    sub_23361F0E0();
    LOBYTE(v28) = 4;
    sub_23361F0E0();
    LOBYTE(v28) = v20;
    v30 = 5;
    sub_23320ADB4();
    sub_23361F110();
    LOBYTE(v28) = 6;
    sub_23361F0EC();
    LOBYTE(v28) = v18;
    v30 = 7;
    sub_23320ADF8();
    sub_23361F110();
    LOBYTE(v28) = 8;
    sub_23361F0E0();
    v28 = v15;
    v30 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256045A90);
    sub_23320AF4C(&qword_256045A98, (uint64_t (*)(void))sub_23320AE3C, MEMORY[0x24BEE12A0]);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.AccountParty.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045AA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23320AD2C();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v40) = 0;
    v10 = sub_23361F02C();
    v12 = v11;
    LOBYTE(v40) = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361EFCC();
    v15 = v14;
    v38 = v13;
    v39 = v12;
    v42 = 2;
    sub_23320AE80();
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v37 = v15;
    LODWORD(v12) = v40;
    LOBYTE(v40) = 3;
    v35 = sub_23361EFCC();
    v36 = a2;
    v41 = v12;
    LOBYTE(v40) = 4;
    v17 = v16;
    swift_bridgeObjectRetain();
    v18 = sub_23361EFCC();
    v20 = v19;
    v33 = v18;
    v34 = v17;
    v42 = 5;
    sub_23320AEC4();
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    LODWORD(v17) = v40;
    LOBYTE(v40) = 6;
    v31 = sub_23361EFD8();
    v32 = v17;
    v42 = 7;
    sub_23320AF08();
    sub_23361EFFC();
    v30 = v10;
    LOBYTE(v17) = v40;
    LOBYTE(v40) = 8;
    v29 = sub_23361EFCC();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256045A90);
    v42 = 9;
    sub_23320AF4C(&qword_256045AC8, (uint64_t (*)(void))sub_23320AFB4, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = v36;
    v25 = v37;
    v26 = v39;
    *v36 = v30;
    v24[1] = v26;
    v24[2] = v38;
    v24[3] = v25;
    *((_BYTE *)v24 + 32) = v41;
    v27 = v34;
    v24[5] = v35;
    v24[6] = v27;
    v24[7] = v33;
    v24[8] = v20;
    *((_BYTE *)v24 + 72) = v32;
    *((_BYTE *)v24 + 73) = v31;
    *((_BYTE *)v24 + 74) = v17;
    v24[10] = v29;
    v24[11] = v22;
    v24[12] = v23;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233209B20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.AccountParty.init(from:)(a1, a2);
}

uint64_t sub_233209B34(_QWORD *a1)
{
  return RawBankConnectData.AccountParty.encode(to:)(a1);
}

uint64_t RawBankConnectData.AccountRole.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;
  char v5;

  v2 = sub_23361F278();
  result = swift_bridgeObjectRelease();
  v4 = 0;
  v5 = 14;
  switch(v2)
  {
    case 0:
      goto LABEL_16;
    case 1:
      v4 = 1;
      goto LABEL_16;
    case 2:
      v4 = 2;
      goto LABEL_16;
    case 3:
      v4 = 3;
      goto LABEL_16;
    case 4:
      v4 = 4;
      goto LABEL_16;
    case 5:
      v4 = 5;
      goto LABEL_16;
    case 6:
      v4 = 6;
      goto LABEL_16;
    case 7:
      v4 = 7;
      goto LABEL_16;
    case 8:
      v4 = 8;
      goto LABEL_16;
    case 9:
      v4 = 9;
      goto LABEL_16;
    case 10:
      v4 = 10;
      goto LABEL_16;
    case 11:
      v4 = 11;
      goto LABEL_16;
    case 12:
      v4 = 12;
      goto LABEL_16;
    case 13:
      v4 = 13;
LABEL_16:
      v5 = v4;
      break;
    case 14:
      break;
    case 15:
      v5 = 15;
      break;
    case 16:
      v5 = 16;
      break;
    case 17:
      v5 = 17;
      break;
    case 18:
      v5 = 18;
      break;
    case 19:
      v5 = 19;
      break;
    case 20:
      v5 = 20;
      break;
    case 21:
      v5 = 21;
      break;
    case 22:
      v5 = 22;
      break;
    case 23:
      v5 = 23;
      break;
    case 24:
      v5 = 24;
      break;
    case 25:
      v5 = 25;
      break;
    case 26:
      v5 = 26;
      break;
    case 27:
      v5 = 27;
      break;
    case 28:
      v5 = 28;
      break;
    case 29:
      v5 = 29;
      break;
    case 30:
      v5 = 30;
      break;
    case 31:
      v5 = 31;
      break;
    default:
      v5 = 32;
      break;
  }
  *a1 = v5;
  return result;
}

void *static RawBankConnectData.AccountRole.allCases.getter()
{
  return &unk_2504687A8;
}

uint64_t RawBankConnectData.AccountRole.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233209D08 + 4 * byte_23362D332[*v0]))(0x5453494E494D4441, 0xED0000524F544152);
}

uint64_t sub_233209D08()
{
  return 0x49434946454E4542;
}

unint64_t sub_233209D28()
{
  return 0xD000000000000013;
}

uint64_t sub_23320A03C()
{
  return 0x4E574F4E4B4E55;
}

uint64_t sub_23320A054(uint64_t a1, uint64_t a2)
{
  return sub_23320A308(a1, a2, (void (*)(uint64_t))RawBankConnectData.AccountRole.rawValue.getter);
}

uint64_t sub_23320A060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23320A37C(a1, a2, a3, (void (*)(void))RawBankConnectData.AccountRole.rawValue.getter);
}

uint64_t sub_23320A06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23320A3D8(a1, a2, a3, (void (*)(uint64_t))RawBankConnectData.AccountRole.rawValue.getter);
}

uint64_t sub_23320A078@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.AccountRole.init(rawValue:)(a1);
}

uint64_t sub_23320A084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RawBankConnectData.AccountRole.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23320A0A8()
{
  sub_23320BF4C();
  return sub_23361E390();
}

uint64_t sub_23320A104()
{
  sub_23320BF4C();
  return sub_23361E354();
}

void sub_23320A150(_QWORD *a1@<X8>)
{
  *a1 = &unk_2504687A8;
}

uint64_t sub_23320A160(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2332279AC(*a1, *a2);
}

uint64_t RawBankConnectData.LegalStructure.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  v4 = 13;
  if (v2 < 0xD)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static RawBankConnectData.LegalStructure.allCases.getter()
{
  return &unk_250468940;
}

uint64_t RawBankConnectData.LegalStructure.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23320A1F8 + 4 * byte_23362D352[*v0]))(4409667, 0xE300000000000000);
}

uint64_t sub_23320A1F8(uint64_t a1)
{
  return a1 + 786432;
}

uint64_t sub_23320A200()
{
  return 0x59544952414843;
}

uint64_t sub_23320A218()
{
  return 1347374915;
}

unint64_t sub_23320A228()
{
  return 0xD000000000000013;
}

unint64_t sub_23320A284()
{
  return 0xD000000000000017;
}

unint64_t sub_23320A29C()
{
  return 0xD000000000000016;
}

void sub_23320A2B4()
{
  JUMPOUT(0x23320A2C8);
}

uint64_t sub_23320A2D4()
{
  return 1162628947;
}

uint64_t sub_23320A2E4()
{
  return 0x4E574F4E4B4E55;
}

uint64_t sub_23320A2FC(uint64_t a1, uint64_t a2)
{
  return sub_23320A308(a1, a2, (void (*)(uint64_t))RawBankConnectData.LegalStructure.rawValue.getter);
}

uint64_t sub_23320A308(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_23361F350();
  a3(v4);
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23320A370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23320A37C(a1, a2, a3, (void (*)(void))RawBankConnectData.LegalStructure.rawValue.getter);
}

uint64_t sub_23320A37C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23320A3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23320A3D8(a1, a2, a3, (void (*)(uint64_t))RawBankConnectData.LegalStructure.rawValue.getter);
}

uint64_t sub_23320A3D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_23361F350();
  a4(v5);
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23320A43C@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.LegalStructure.init(rawValue:)(a1);
}

uint64_t sub_23320A448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RawBankConnectData.LegalStructure.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23320A46C()
{
  sub_23320BF08();
  return sub_23361E390();
}

uint64_t sub_23320A4C8()
{
  sub_23320BF08();
  return sub_23361E354();
}

void sub_23320A514(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468940;
}

uint64_t sub_23320A524(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23322785C(*a1, *a2);
}

uint64_t RawBankConnectData.PartyType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static RawBankConnectData.PartyType.allCases.getter()
{
  return &unk_2504689F0;
}

uint64_t RawBankConnectData.PartyType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23320A5C4 + 4 * byte_23362D35F[*v0]))(0x45544147454C4544, 0xE800000000000000);
}

uint64_t sub_23320A5C4()
{
  return 0x544E494F4ALL;
}

uint64_t sub_23320A5D8()
{
  return 1162628947;
}

uint64_t sub_23320A5E8()
{
  return 0x4E574F4E4B4E55;
}

void sub_23320A600()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23320A64C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23320A6B0()
{
  __asm { BR              X10 }
}

uint64_t sub_23320A6EC()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23320A73C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23320A784()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23320A7E8@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.PartyType.init(rawValue:)(a1);
}

uint64_t sub_23320A7F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23320A824 + 4 * byte_23362D36F[*v0]))();
}

void sub_23320A824(_QWORD *a1@<X8>)
{
  *a1 = 0x544E494F4ALL;
  a1[1] = 0xE500000000000000;
}

void sub_23320A83C(_QWORD *a1@<X8>)
{
  *a1 = 1162628947;
  a1[1] = 0xE400000000000000;
}

void sub_23320A850(_QWORD *a1@<X8>)
{
  *a1 = 0x4E574F4E4B4E55;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_23320A86C()
{
  sub_23320BEC4();
  return sub_23361E390();
}

uint64_t sub_23320A8C8()
{
  sub_23320BEC4();
  return sub_23361E354();
}

void sub_23320A914(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468A18;
}

void sub_23320A924(char *a1)
{
  sub_233227868(*a1);
}

BOOL _s10FinanceKit18RawBankConnectDataO12AccountPartyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v42 = *(_QWORD *)(a1 + 56);
  v44 = *(_QWORD *)(a1 + 64);
  v38 = *(unsigned __int8 *)(a1 + 73);
  v39 = *(unsigned __int8 *)(a1 + 72);
  v36 = *(unsigned __int8 *)(a1 + 74);
  v32 = *(_QWORD *)(a1 + 80);
  v34 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v41 = *(_QWORD *)(a2 + 56);
  v43 = *(_QWORD *)(a2 + 64);
  v40 = *(unsigned __int8 *)(a2 + 72);
  v37 = *(unsigned __int8 *)(a2 + 73);
  v35 = *(unsigned __int8 *)(a2 + 74);
  v30 = *(_QWORD *)(a1 + 96);
  v31 = *(_QWORD *)(a2 + 80);
  v33 = *(_QWORD *)(a2 + 88);
  v29 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_23361F224(), result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v8)
        return 0;
      if (v2 != v7 || v3 != v8)
      {
        v14 = sub_23361F224();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v8)
    {
      return 0;
    }
    if (v4 == 4)
    {
      if (v9 != 4)
        return 0;
    }
    else
    {
      if (v9 == 4)
        return 0;
      sub_233227868(v4);
      if ((v15 & 1) == 0)
        return 0;
    }
    if (v6)
    {
      if (!v10)
        return 0;
      if (v5 != v11 || v6 != v10)
      {
        v16 = sub_23361F224();
        result = 0;
        if ((v16 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v44)
    {
      if (!v43)
        return 0;
      if (v42 != v41 || v44 != v43)
      {
        v17 = sub_23361F224();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v43)
    {
      return 0;
    }
    if (v39 == 13)
    {
      if (v40 != 13)
        return 0;
    }
    else
    {
      if (v40 == 13)
        return 0;
      v18 = RawBankConnectData.LegalStructure.rawValue.getter();
      v20 = v19;
      if (v18 == RawBankConnectData.LegalStructure.rawValue.getter() && v20 == v21)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v22 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v22 & 1) == 0)
          return result;
      }
    }
    if (v38 == 2)
    {
      if (v37 != 2)
        return 0;
    }
    else
    {
      result = 0;
      if (v37 == 2 || ((((v38 & 1) == 0) ^ v37) & 1) == 0)
        return result;
    }
    if (v36 == 32)
    {
      if (v35 != 32)
        return 0;
    }
    else
    {
      if (v35 == 32)
        return 0;
      v23 = RawBankConnectData.AccountRole.rawValue.getter();
      v25 = v24;
      if (v23 == RawBankConnectData.AccountRole.rawValue.getter() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v27 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v27 & 1) == 0)
          return result;
      }
    }
    if (v34)
    {
      if (!v33)
        return 0;
      if (v32 != v31 || v34 != v33)
      {
        v28 = sub_23361F224();
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v33)
    {
      return 0;
    }
    if (v30)
      return v29 && (sub_23322D150(v30, v29) & 1) != 0;
    return !v29;
  }
  return result;
}

unint64_t sub_23320AD2C()
{
  unint64_t result;

  result = qword_256045A70;
  if (!qword_256045A70)
  {
    result = MEMORY[0x234934494](&unk_23362D978, &_s12AccountPartyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256045A70);
  }
  return result;
}

unint64_t sub_23320AD70()
{
  unint64_t result;

  result = qword_256045A78;
  if (!qword_256045A78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyType, &type metadata for RawBankConnectData.PartyType);
    atomic_store(result, (unint64_t *)&qword_256045A78);
  }
  return result;
}

unint64_t sub_23320ADB4()
{
  unint64_t result;

  result = qword_256045A80;
  if (!qword_256045A80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.LegalStructure, &type metadata for RawBankConnectData.LegalStructure);
    atomic_store(result, (unint64_t *)&qword_256045A80);
  }
  return result;
}

unint64_t sub_23320ADF8()
{
  unint64_t result;

  result = qword_256045A88;
  if (!qword_256045A88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountRole, &type metadata for RawBankConnectData.AccountRole);
    atomic_store(result, (unint64_t *)&qword_256045A88);
  }
  return result;
}

unint64_t sub_23320AE3C()
{
  unint64_t result;

  result = qword_256045AA0;
  if (!qword_256045AA0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyAddress, &type metadata for RawBankConnectData.PartyAddress);
    atomic_store(result, (unint64_t *)&qword_256045AA0);
  }
  return result;
}

unint64_t sub_23320AE80()
{
  unint64_t result;

  result = qword_256045AB0;
  if (!qword_256045AB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyType, &type metadata for RawBankConnectData.PartyType);
    atomic_store(result, (unint64_t *)&qword_256045AB0);
  }
  return result;
}

unint64_t sub_23320AEC4()
{
  unint64_t result;

  result = qword_256045AB8;
  if (!qword_256045AB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.LegalStructure, &type metadata for RawBankConnectData.LegalStructure);
    atomic_store(result, (unint64_t *)&qword_256045AB8);
  }
  return result;
}

unint64_t sub_23320AF08()
{
  unint64_t result;

  result = qword_256045AC0;
  if (!qword_256045AC0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountRole, &type metadata for RawBankConnectData.AccountRole);
    atomic_store(result, (unint64_t *)&qword_256045AC0);
  }
  return result;
}

uint64_t sub_23320AF4C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256045A90);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23320AFB4()
{
  unint64_t result;

  result = qword_256045AD0;
  if (!qword_256045AD0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyAddress, &type metadata for RawBankConnectData.PartyAddress);
    atomic_store(result, (unint64_t *)&qword_256045AD0);
  }
  return result;
}

unint64_t sub_23320AFFC()
{
  unint64_t result;

  result = qword_256045AD8;
  if (!qword_256045AD8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountRole, &type metadata for RawBankConnectData.AccountRole);
    atomic_store(result, (unint64_t *)&qword_256045AD8);
  }
  return result;
}

uint64_t sub_23320B040()
{
  return sub_23318BD18(&qword_256045AE0, &qword_256045AE8);
}

unint64_t sub_23320B068()
{
  unint64_t result;

  result = qword_256045AF0;
  if (!qword_256045AF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.LegalStructure, &type metadata for RawBankConnectData.LegalStructure);
    atomic_store(result, (unint64_t *)&qword_256045AF0);
  }
  return result;
}

uint64_t sub_23320B0AC()
{
  return sub_23318BD18(&qword_256045AF8, &qword_256045B00);
}

unint64_t sub_23320B0D4()
{
  unint64_t result;

  result = qword_256045B08;
  if (!qword_256045B08)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyType, &type metadata for RawBankConnectData.PartyType);
    atomic_store(result, (unint64_t *)&qword_256045B08);
  }
  return result;
}

uint64_t sub_23320B118()
{
  return sub_23318BD18(&qword_256045B10, &qword_256045B18);
}

uint64_t _s12AccountPartyVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12AccountPartyVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12AccountPartyVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s12AccountPartyVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12AccountPartyVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AccountPartyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.AccountParty()
{
  return &type metadata for RawBankConnectData.AccountParty;
}

uint64_t _s11AccountRoleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE1)
    goto LABEL_17;
  if (a2 + 31 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 31) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 31;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 31;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 31;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x20;
  v8 = v6 - 32;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11AccountRoleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 31 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 31) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE0)
    return ((uint64_t (*)(void))((char *)&loc_23320B588 + 4 * byte_23362D378[v4]))();
  *a1 = a2 + 31;
  return ((uint64_t (*)(void))((char *)sub_23320B5BC + 4 * byte_23362D373[v4]))();
}

uint64_t sub_23320B5BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B5C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23320B5CCLL);
  return result;
}

uint64_t sub_23320B5D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23320B5E0);
  *(_BYTE *)result = a2 + 31;
  return result;
}

uint64_t sub_23320B5E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B5EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.AccountRole()
{
  return &type metadata for RawBankConnectData.AccountRole;
}

uint64_t _s14LegalStructureOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14LegalStructureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_23320B6E4 + 4 * byte_23362D382[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_23320B718 + 4 * byte_23362D37D[v4]))();
}

uint64_t sub_23320B718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B720(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23320B728);
  return result;
}

uint64_t sub_23320B734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23320B73CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_23320B740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.LegalStructure()
{
  return &type metadata for RawBankConnectData.LegalStructure;
}

uint64_t _s9PartyTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23320B7B0 + 4 * byte_23362D38C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23320B7E4 + 4 * byte_23362D387[v4]))();
}

uint64_t sub_23320B7E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B7EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23320B7F4);
  return result;
}

uint64_t sub_23320B800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23320B808);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23320B80C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.PartyType()
{
  return &type metadata for RawBankConnectData.PartyType;
}

uint64_t _s12AccountPartyV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12AccountPartyV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23320B90C + 4 * byte_23362D396[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23320B940 + 4 * byte_23362D391[v4]))();
}

uint64_t sub_23320B940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23320B950);
  return result;
}

uint64_t sub_23320B95C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23320B964);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23320B968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320B970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12AccountPartyV10CodingKeysOMa()
{
  return &_s12AccountPartyV10CodingKeysON;
}

unint64_t sub_23320B990()
{
  unint64_t result;

  result = qword_256045B20;
  if (!qword_256045B20)
  {
    result = MEMORY[0x234934494](&unk_23362D950, &_s12AccountPartyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256045B20);
  }
  return result;
}

unint64_t sub_23320B9D8()
{
  unint64_t result;

  result = qword_256045B28;
  if (!qword_256045B28)
  {
    result = MEMORY[0x234934494](&unk_23362D8C0, &_s12AccountPartyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256045B28);
  }
  return result;
}

unint64_t sub_23320BA20()
{
  unint64_t result;

  result = qword_256045B30;
  if (!qword_256045B30)
  {
    result = MEMORY[0x234934494](&unk_23362D8E8, &_s12AccountPartyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256045B30);
  }
  return result;
}

uint64_t sub_23320BA64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265626D756ELL && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079547974726170 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6167654C6C6C7566 && a2 == 0xED0000656D614E6CLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7274536C6167656CLL && a2 == 0xEE00657275746375 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023366CC40 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x52746E756F636361 && a2 == 0xEB00000000656C6FLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6573736572646461 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_23320BEC4()
{
  unint64_t result;

  result = qword_256045B38;
  if (!qword_256045B38)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PartyType, &type metadata for RawBankConnectData.PartyType);
    atomic_store(result, (unint64_t *)&qword_256045B38);
  }
  return result;
}

unint64_t sub_23320BF08()
{
  unint64_t result;

  result = qword_256045B40;
  if (!qword_256045B40)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.LegalStructure, &type metadata for RawBankConnectData.LegalStructure);
    atomic_store(result, (unint64_t *)&qword_256045B40);
  }
  return result;
}

unint64_t sub_23320BF4C()
{
  unint64_t result;

  result = qword_256045B48;
  if (!qword_256045B48)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountRole, &type metadata for RawBankConnectData.AccountRole);
    atomic_store(result, (unint64_t *)&qword_256045B48);
  }
  return result;
}

uint64_t sub_23320BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23320BFD8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045B50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static CNPostalAddressValueTransformer.register()()
{
  objc_class *v0;
  void *v1;
  id v2;
  void *v3;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248558);
  sub_23361E1C8();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValueTransformer_forName_, v2, v3);

}

id CNPostalAddressValueTransformer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t static CNPostalAddressValueTransformer.transformedValueClass()()
{
  return sub_233168668(0, &qword_254247E48);
}

uint64_t static CNPostalAddressValueTransformer.allowsReverseTransformation()()
{
  return 1;
}

void CNPostalAddressValueTransformer.transformedValue(_:)(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  sub_23320C360(a1, (uint64_t)&v16);
  if ((_QWORD)v18)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v24;
      v3 = v25;
      v5 = objc_allocWithZone(MEMORY[0x24BDD1620]);
      sub_2331D1374(v4, v3);
      v6 = sub_233613994();
      sub_23316BEA4(v4, v3);
      objc_msgSend(v6, sel_setRequiresSecureCoding_, 1);
      sub_23361E150();
      sub_23320C7C4();
      sub_23361E828();
      swift_bridgeObjectRelease();
      v7 = v16;
      if (v16 != 1)
      {
        v9 = v22;
        v8 = v23;
        v14 = v20;
        v15 = v21;
        v12 = v18;
        v13 = v19;
        v11 = v17;
        sub_233168668(0, (unint64_t *)&qword_256045B60);
        v16 = v7;
        v17 = v11;
        v18 = v12;
        v19 = v13;
        v20 = v14;
        v21 = v15;
        v22 = v9;
        v23 = v8;
        v10 = CNMutablePostalAddress.init(rawAddress:)(&v16);
        objc_msgSend(v10, sel_copy);

        sub_23361EC24();
        sub_23316BEA4(v4, v3);

        swift_unknownObjectRelease();
        return;
      }
      sub_23316BEA4(v4, v3);

    }
  }
  else
  {
    sub_23319F5C0((uint64_t)&v16);
  }
  *a2 = 0u;
  a2[1] = 0u;
}

uint64_t sub_23320C360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CNPostalAddressValueTransformer.reverseTransformedValue(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10[3];
  uint64_t v11;

  sub_23320C360(a1, (uint64_t)v10);
  if (v11)
  {
    sub_233168668(0, &qword_254247E48);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
      v4 = v9;
      RawAddress.init(_:)(v4, v10);
      sub_23361E150();
      sub_23320C808();
      sub_23361E7BC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = objc_msgSend(v3, sel_encodedData);
      v6 = sub_23361D3C4();
      v8 = v7;

      *(_QWORD *)(a2 + 24) = MEMORY[0x24BDCDDE8];
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      return;
    }
  }
  else
  {
    sub_23319F5C0((uint64_t)v10);
  }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

id sub_23320C60C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, _OWORD *))
{
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _OWORD v15[2];
  _QWORD v16[3];
  uint64_t v17;

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    v7 = a1;
  }
  a4(v16, v15);

  sub_23319F5C0((uint64_t)v15);
  v8 = v17;
  if (!v17)
    return 0;
  v9 = __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v12);
  v13 = (void *)sub_23361F20C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  return v13;
}

id CNPostalAddressValueTransformer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CNPostalAddressValueTransformer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_23320C7C4()
{
  unint64_t result;

  result = qword_256045B58;
  if (!qword_256045B58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawAddress, &type metadata for RawAddress);
    atomic_store(result, (unint64_t *)&qword_256045B58);
  }
  return result;
}

unint64_t sub_23320C808()
{
  unint64_t result;

  result = qword_256045B68[0];
  if (!qword_256045B68[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawAddress, &type metadata for RawAddress);
    atomic_store(result, qword_256045B68);
  }
  return result;
}

uint64_t type metadata accessor for CNPostalAddressValueTransformer()
{
  return objc_opt_self();
}

id CacheKeyWrapper.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  id v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_23320CB94(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v5;
}

id CacheKeyWrapper.init(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;

  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  v4 = sub_23320CB94(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t CacheKeyWrapper.isEqual(_:)(uint64_t a1)
{
  char v2;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  swift_getObjectType();
  sub_23320C360(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_23319F5C0((uint64_t)v5);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v2 = 0;
    return v2 & 1;
  }
  v2 = sub_23361E108();

  return v2 & 1;
}

uint64_t sub_23320C9FC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = CacheKeyWrapper.isEqual(_:)((uint64_t)v8);

  sub_23319F5C0((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_23320CA70(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = CacheKeyWrapper.hash.getter();

  return v2;
}

uint64_t CacheKeyWrapper.hash.getter()
{
  return sub_23361E09C();
}

id CacheKeyWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CacheKeyWrapper.init()()
{
  sub_23320CC10();
}

void sub_23320CB18()
{
  sub_23320CC10();
}

id CacheKeyWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23320CB68(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x60)]);
}

id sub_23320CB94(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1) + 0x50)
                                                      - 8)
                                          + 16))(&v1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1) + 0x60)], a1);
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

void sub_23320CC10()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23320CC40()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CacheKeyWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CacheKeyWrapper);
}

uint64_t method lookup function for CacheKeyWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CacheKeyWrapper.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2349343EC](a1, v6, a5);
}

FinanceKit::BankConnectRefreshFailure_optional __swiftcall BankConnectRefreshFailure.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (FinanceKit::BankConnectRefreshFailure_optional)rawValue;
}

uint64_t BankConnectRefreshFailure.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_23320CD20()
{
  sub_23320CF54();
  return sub_23361E39C();
}

uint64_t sub_23320CD7C()
{
  sub_23320CF54();
  return sub_23361E360();
}

unint64_t BankConnectRefreshFailure.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000002ALL;
  else
    return 0xD000000000000029;
}

unint64_t sub_23320CE08()
{
  unint64_t result;

  result = qword_256045BF0;
  if (!qword_256045BF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectRefreshFailure, &type metadata for BankConnectRefreshFailure);
    atomic_store(result, (unint64_t *)&qword_256045BF0);
  }
  return result;
}

unint64_t sub_23320CE4C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000002ALL;
  else
    return 0xD000000000000029;
}

uint64_t storeEnumTagSinglePayload for BankConnectRefreshFailure(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23320CED4 + 4 * byte_23362DA35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23320CF08 + 4 * asc_23362DA30[v4]))();
}

uint64_t sub_23320CF08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320CF10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23320CF18);
  return result;
}

uint64_t sub_23320CF24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23320CF2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23320CF30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23320CF38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectRefreshFailure()
{
  return &type metadata for BankConnectRefreshFailure;
}

unint64_t sub_23320CF54()
{
  unint64_t result;

  result = qword_256045BF8[0];
  if (!qword_256045BF8[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectRefreshFailure, &type metadata for BankConnectRefreshFailure);
    atomic_store(result, qword_256045BF8);
  }
  return result;
}

uint64_t sub_23320CF98()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23320CFA0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23320D008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 2)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v5) = v10 == 1;
  }
  else
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23320D10C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23320D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_23320D1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_23320D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_23320D37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_23320D464(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 < 0xFF)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23320D51C + 4 * byte_23362DBA9[(v4 - 1)]))();
}

void sub_23320D568(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23320D704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23320D740 + 4 * byte_23362DBB7[v3]))();
}

void sub_23320D788(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for PIIProcessingResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PIIProcessingResult);
}

uint64_t dispatch thunk of PIIProcessing.redact(from:forCountryCodes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

BOOL static BankConnectOfflineLab.isFeatureAvailable.getter()
{
  char v1;

  static DeviceInfo.deviceType.getter(&v1);
  return v1 == 0;
}

uint64_t sub_23320D884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_2542450A0;
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = (void *)sub_23361E12C();
  v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  sub_23361E150();
  v11 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23320D9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_2542450A0;
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = (void *)sub_23361E12C();
  v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  sub_23361E150();
  v11 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_23320DB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a1;
  v61 = a2;
  v2 = sub_23361D49C();
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v56 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D8A4();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D73C();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v62);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23361D508();
  v46 = *(_QWORD *)(v50 - 8);
  v16 = MEMORY[0x24BDAC7A8](v50);
  v43 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v45 = (char *)&v43 - v18;
  v19 = sub_23361D850();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23361D748();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23361D868();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BDCEF50], v23);
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v31 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
  v31(v22, *MEMORY[0x24BDCF250], v19);
  v32 = sub_23361D85C();
  v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v33(v22, v19);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v59 = sub_23320FD2C(v32);
  if (v59 != 12)
  {
    v31(v22, *MEMORY[0x24BDCF240], v19);
    v34 = sub_23361D82C();
    v33(v22, v19);
    if ((v34 & 1) == 0)
    {
      sub_2331684BC(v63, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      v35 = sub_23361D43C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v44, 1, 1, v35);
      v36 = sub_23361D424();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v49, 1, 1, v36);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v51, v15, v48);
      v37 = v62;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, &v15[*(int *)(v62 + 20)], v27);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v54, &v15[*(int *)(v37 + 24)], v53);
      sub_23361D1FC();
      v38 = v43;
      sub_23361D454();
      sub_233168500((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      v39 = v56;
      sub_23361D490();
      v40 = v45;
      sub_23361D460();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
      v41 = *(void (**)(char *, uint64_t))(v46 + 8);
      v42 = v50;
      v41(v38, v50);
      sub_23361D4F0();
      v41(v40, v42);
    }
    __asm { BR              X10 }
  }
  sub_23361EF24();
  __break(1u);
  JUMPOUT(0x23320F44CLL);
}

uint64_t sub_23320F47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v1 = sub_23361D49C();
  v45 = *(_QWORD *)(v1 - 8);
  v46 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23361D8A4();
  v34 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23361D868();
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23361D73C();
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23361D508();
  v35 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v34 - v23;
  sub_2331684BC(v39, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v25 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25);
  v26 = sub_23361D424();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v18, v36);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v38, &v18[*(int *)(v16 + 20)], v40);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v41, &v18[*(int *)(v16 + 24)], v42);
  sub_23361D1FC();
  sub_23361D454();
  sub_233168500((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v27 = v44;
  sub_23361D490();
  sub_23361D460();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v46);
  v28 = *(void (**)(char *, uint64_t))(v35 + 8);
  v28(v22, v19);
  v29 = sub_23361D4F0();
  v31 = v30;
  v28(v24, v19);
  v32 = sub_23320D9F8(v29, v31);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_23320F858(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045D50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233210030();
  sub_23361F410();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for EndOfDeliveryWindowFormatter();
    v8[14] = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23320F9A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v20 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v22 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045D40);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EndOfDeliveryWindowFormatter();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  v11 = *(int *)(v8 + 20);
  v10[v11] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233210030();
  sub_23361F3EC();
  if (!v2)
  {
    v18 = v11;
    v12 = v19;
    v13 = v20;
    v24 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v14 = v21;
    sub_23361F068();
    sub_2331C7090(v22, (uint64_t)v10);
    v23 = 1;
    v15 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
    v10[v18] = v15 & 1;
    sub_2331684BC((uint64_t)v10, v13, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EndOfDeliveryWindowFormatter);
}

uint64_t sub_23320FC18()
{
  sub_233210030();
  return sub_23361F428();
}

uint64_t sub_23320FC40()
{
  sub_233210030();
  return sub_23361F434();
}

uint64_t sub_23320FC68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = sub_2334B8BA4(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_23320FD04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23320F9A8(a1, a2);
}

uint64_t sub_23320FD18(_QWORD *a1)
{
  return sub_23320F858(a1);
}

uint64_t sub_23320FD2C(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0xC)
    return 12;
  else
    return a1 - 1;
}

uint64_t sub_23320FD40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23320FD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23320FDD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23320FDE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatterConfiguration();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for EndOfDeliveryWindowFormatter()
{
  uint64_t result;

  result = qword_256045CD8;
  if (!qword_256045CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23320FE98()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23320FF08()
{
  return sub_233167C58(&qword_256045D10, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DC58);
}

uint64_t sub_23320FF34()
{
  return sub_233167C58(&qword_256045D18, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DCE8);
}

uint64_t sub_23320FF60()
{
  return sub_233167C58(&qword_256045D20, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DCC0);
}

uint64_t sub_23320FF8C()
{
  return sub_233167C58(&qword_256045D28, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DC80);
}

uint64_t sub_23320FFB8(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256045D30, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DD10);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23320FFF4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256045D38, (uint64_t (*)(uint64_t))type metadata accessor for EndOfDeliveryWindowFormatter, (uint64_t)&unk_23362DD68);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_233210030()
{
  unint64_t result;

  result = qword_256045D48;
  if (!qword_256045D48)
  {
    result = MEMORY[0x234934494](&unk_23362DE64, &type metadata for EndOfDeliveryWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045D48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EndOfDeliveryWindowFormatter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2332100C0 + 4 * byte_23362DC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2332100F4 + 4 * byte_23362DC10[v4]))();
}

uint64_t sub_2332100F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332100FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233210104);
  return result;
}

uint64_t sub_233210110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233210118);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23321011C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233210124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndOfDeliveryWindowFormatter.CodingKeys()
{
  return &type metadata for EndOfDeliveryWindowFormatter.CodingKeys;
}

unint64_t sub_233210144()
{
  unint64_t result;

  result = qword_256045D58;
  if (!qword_256045D58)
  {
    result = MEMORY[0x234934494](&unk_23362DE3C, &type metadata for EndOfDeliveryWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045D58);
  }
  return result;
}

unint64_t sub_23321018C()
{
  unint64_t result;

  result = qword_256045D60;
  if (!qword_256045D60)
  {
    result = MEMORY[0x234934494](&unk_23362DDAC, &type metadata for EndOfDeliveryWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045D60);
  }
  return result;
}

unint64_t sub_2332101D4()
{
  unint64_t result;

  result = qword_256045D68;
  if (!qword_256045D68)
  {
    result = MEMORY[0x234934494](&unk_23362DDD4, &type metadata for EndOfDeliveryWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045D68);
  }
  return result;
}

void *sub_233210218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  char v6;
  id v7;
  void *v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = sub_2331E3FA8(a1);
      if ((v6 & 1) != 0)
      {
        v4 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v5);
        v7 = v4;
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  v3 = sub_23361EF0C();
  swift_release();
  if (!v3)
    return 0;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v4 = v9;
  swift_unknownObjectRelease();
  return v4;
}

uint64_t NSPredicate.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[8];

  v32 = a1;
  v5 = sub_23361CEE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D16C();
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - v10;
  v41[5] = a2;
  v41[6] = (char *)&v30 - v10;
  v12 = sub_23361D8C8();
  sub_23361D8BC();
  v13 = *(void (**)(uint64_t, uint64_t))(a3 + 8);
  v13(a2, a3);
  v31 = (*(uint64_t (**)(void))(v14 + 8))();
  v13(a2, a3);
  v16 = (*(uint64_t (**)(void))(v15 + 16))();
  v34 = v9;
  sub_23361D160();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044FD0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560421D8);
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_233623D60;
  v21 = (_QWORD *)(v20 + v19 + *(int *)(v17 + 48));
  (*(void (**)(void))(v6 + 16))();
  *v21 = objc_msgSend((id)objc_opt_self(), sel_expressionForEvaluatedObject);
  v21[1] = 0;
  v21[2] = 0;
  v21[3] = 0;
  v22 = sub_23315FF28(v20);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24 = v32;
  v23(v8, v5);
  v41[0] = 1;
  v41[1] = v22;
  v41[2] = v31;
  v41[3] = v16;
  v41[4] = 0;
  sub_23361D8B0();
  v25 = v39;
  v26 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  sub_233211E98(v41, v25, *(_QWORD *)(v26 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v24, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  v27 = v35;
  v36 = swift_dynamicCastUnknownClassUnconditional();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(&v37, &v36, v27);
  v28 = v37;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
  return v28;
}

uint64_t sub_233210650(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = v1;
  v4 = sub_23361CEE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0x5F6C61636F6C5FLL;
  v17 = 0xE700000000000000;
  v15 = *v1;
  v8 = v15;
  sub_23361F1D0();
  sub_23361E27C();
  result = swift_bridgeObjectRelease();
  if (v8 == -1)
  {
    __break(1u);
  }
  else
  {
    v10 = v16;
    *v1 = v8 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend((id)objc_opt_self(), sel_expressionForVariable_, v11);

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = v2[1];
    v2[1] = 0x8000000000000000;
    sub_23328E5D0((uint64_t)v12, 0, 0, 0, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    v2[1] = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v10;
  }
  return result;
}

id sub_2332107E8()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id result;
  __int128 v8;
  __int128 v9;
  _QWORD v10[4];

  v1 = sub_233168668(0, &qword_256042F70);
  v10[3] = v1;
  v10[0] = v0;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v2, sel__newKeyPathExpressionForString_, v4);

  if (v5)
  {
    *((_QWORD *)&v9 + 1) = v1;
    *(_QWORD *)&v8 = v5;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  v6 = objc_allocWithZone(MEMORY[0x24BDD1610]);
  result = sub_23321A26C(v10, &v8);
  if (!result)
    __break(1u);
  return result;
}

id sub_2332108C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  _QWORD v55[4];

  v6 = v5;
  if (objc_msgSend(v6, sel_expressionType) == (id)1)
  {
    if ((a5 & 1) == 0)
      goto LABEL_8;
    if (*(_QWORD *)(a3 + 16))
    {
      v12 = swift_retain();
      sub_2331E3FA8(v12);
      v14 = v13;
      swift_release();
      if ((v14 & 1) != 0)
        goto LABEL_8;
    }
    if (a4)
    {
      v15 = swift_retain();
      v16 = sub_233210218(v15, a4);
      swift_release();
      if (v16)
      {

LABEL_8:
        if (*(_QWORD *)(a3 + 16))
        {
          v17 = swift_retain();
          sub_2331E3FA8(v17);
          if ((v18 & 1) != 0)
            swift_bridgeObjectRetain();
          swift_release();
        }
        v37 = (void *)sub_23361E12C();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v37);

        if (a4)
        {
          v38 = swift_retain();
          sub_233210218(v38, a4);
          swift_release();
        }
        swift_retain();
        return v30;
      }
    }
    goto LABEL_32;
  }
  if (objc_msgSend(v6, sel_expressionType) == (id)3)
  {
    if (a2)
    {
      sub_23361EC3C();
      swift_retain();
      if (sub_23361EF90())
      {
        if ((a5 & 1) == 0
          || *(_QWORD *)(a3 + 16)
          && (v19 = swift_retain(), sub_2331E3FA8(v19), v21 = v20, swift_release(), (v21 & 1) != 0))
        {
LABEL_20:
          if (*(_QWORD *)(a3 + 16))
          {
            v24 = swift_retain();
            sub_2331E3FA8(v24);
            if ((v25 & 1) == 0)
            {
LABEL_54:
              swift_release();
              goto LABEL_55;
            }
LABEL_22:
            swift_bridgeObjectRetain();
            goto LABEL_54;
          }
          goto LABEL_55;
        }
        if (a4)
        {
          v22 = swift_retain();
          v23 = sub_233210218(v22, a4);
          swift_release();
          if (v23)
          {

            goto LABEL_20;
          }
        }
        v55[0] = a1;
        swift_retain();
        v30 = (id)sub_23361E1C8();
        v51 = v50;
        sub_23321A4C8();
        swift_allocError();
        *(_QWORD *)v52 = v30;
        *(_QWORD *)(v52 + 8) = v51;
        *(_BYTE *)(v52 + 16) = 0;
        swift_willThrow();
        swift_release();
LABEL_51:
        swift_release();
        return v30;
      }
LABEL_50:
      v55[0] = a1;
      swift_retain();
      v30 = (id)sub_23361E1C8();
      v46 = v45;
      sub_23321A4C8();
      swift_allocError();
      *(_QWORD *)v47 = v30;
      *(_QWORD *)(v47 + 8) = v46;
      *(_BYTE *)(v47 + 16) = 0;
      swift_willThrow();
      goto LABEL_51;
    }
  }
  else if (a2 && (a5 & 1) != 0)
  {
    sub_23361EC3C();
    swift_retain();
    v26 = sub_23361EF90();
    if (v26)
    {
      if (*(_QWORD *)(a3 + 16))
      {
        sub_2331E3FA8(v26);
        if ((v27 & 1) != 0)
        {
          if (*(_QWORD *)(a3 + 16))
          {
            v28 = swift_retain();
            sub_2331E3FA8(v28);
            if ((v29 & 1) == 0)
              goto LABEL_54;
            goto LABEL_22;
          }
LABEL_55:
          v48 = (void *)sub_23361E12C();
          swift_bridgeObjectRelease();
          v30 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v48);

          if (a4)
          {
            v49 = swift_retain();
            sub_233210218(v49, a4);
            swift_release();
          }
          goto LABEL_51;
        }
      }
      swift_release();
    }
    goto LABEL_50;
  }
  if (objc_msgSend(v6, sel_expressionType) == (id)20)
  {
LABEL_32:
    v55[0] = a1;
    sub_23361EC3C();
    swift_retain();
    v30 = (id)sub_23361E1C8();
    v32 = v31;
    sub_23321A4C8();
    swift_allocError();
    *(_QWORD *)v33 = v30;
    *(_QWORD *)(v33 + 8) = v32;
    *(_BYTE *)(v33 + 16) = 0;
    swift_willThrow();
    return v30;
  }
  v34 = sub_233168668(0, &qword_256042F70);
  v55[3] = v34;
  v55[0] = v6;
  if (*(_QWORD *)(a3 + 16))
  {
    swift_retain();
    v35 = v6;
    sub_2331E3FA8(a1);
    if ((v36 & 1) != 0)
      swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v39 = v6;
  }
  v40 = (void *)objc_opt_self();
  v41 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v42 = objc_msgSend(v40, sel__newKeyPathExpressionForString_, v41);

  if (v42)
  {
    *((_QWORD *)&v54 + 1) = v34;
    *(_QWORD *)&v53 = v42;
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  v43 = objc_allocWithZone(MEMORY[0x24BDD1610]);
  result = sub_23321A26C(v55, &v53);
  if (result)
  {
    v30 = result;
    swift_retain();
    return v30;
  }
  __break(1u);
  return result;
}

uint64_t sub_233210EB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v26;
  uint64_t result;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  char v53;

  v6 = v5;
  v7 = v4;
  v41 = a1;
  v43 = sub_23361CDB8();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = sub_23361EBAC();
  v39 = *(_QWORD *)(v40 - 8);
  v14 = MEMORY[0x24BDAC7A8](v40);
  v16 = (char *)&v35 - v15;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v38 = (char *)&v35 - v19;
  MEMORY[0x24BDAC7A8](v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045D88);
  if (swift_dynamicCast())
  {
    v36 = v17;
    v37 = a4;
    sub_23318B020(&v46, (uint64_t)&v49);
    v22 = v50;
    v23 = v51;
    __swift_project_boxed_opaque_existential_1(&v49, v50);
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t, uint64_t))(v23 + 16))(v52, v41, v22, v23);
    if (!v5)
    {
      v28 = (id)v52[0];
      v29 = v52[1];
      v30 = v52[2];
      v31 = v52[3];
      v32 = v53;
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
      a4 = v37;
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    v6 = 0;
    v41 = v5;
    a4 = v37;
    v17 = v36;
  }
  else
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    sub_233168608((uint64_t)&v46, &qword_256045D90);
    v41 = 0;
  }
  sub_23361CDC4();
  sub_23361CE18();
  if (v6)
  {

    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v40);
    if (v41)
      return swift_willThrow();
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, AssociatedTypeWitness);
  v24 = v38;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v38, v16, AssociatedTypeWitness);
  v45[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
  (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 16))(boxed_opaque_existential_0, v24, AssociatedTypeWitness);
  sub_233211368((uint64_t)v45, &v46);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  v33 = v41;
  if (!*((_QWORD *)&v47 + 1))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
    sub_233168608((uint64_t)&v46, &qword_254245020);
    if (v33)
      return swift_willThrow();
LABEL_10:
    sub_23321A4C8();
    swift_allocError();
    *(_QWORD *)v26 = 0;
    *(_QWORD *)(v26 + 8) = 0;
    *(_BYTE *)(v26 + 16) = 2;
    return swift_willThrow();
  }
  sub_2331683D0(&v46, &v49);
  __swift_project_boxed_opaque_existential_1(&v49, v50);
  v34 = sub_23361F20C();
  v28 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v34);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
LABEL_15:
  *(_QWORD *)a4 = v28;
  *(_QWORD *)(a4 + 8) = v29;
  *(_QWORD *)(a4 + 16) = v30;
  *(_QWORD *)(a4 + 24) = v31;
  *(_BYTE *)(a4 + 32) = v32;
  return result;
}

uint64_t sub_233211368@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  id v17;
  id v18;
  int v19;
  int v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  __int128 v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  int v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[20];
  uint64_t v70;
  _BYTE v71[24];

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233168350(a1, (uint64_t)v71);
  sub_233168350((uint64_t)v71, (uint64_t)&v65);
  *(_QWORD *)&v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
  swift_dynamicCast();
  if (v70)
  {
    v57 = a2;
    sub_233168608((uint64_t)v69, &qword_254245020);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
LABEL_11:
      v12 = (uint64_t)v57;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
      return sub_233168350(a1, v12);
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      sub_23316BEA4(*(uint64_t *)v69, *(unint64_t *)&v69[8]);
      goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256045DA0);
    if (swift_dynamicCast())
    {
      sub_23318B020((__int128 *)v69, (uint64_t)&v65);
      v14 = v67;
      v15 = v68;
      __swift_project_boxed_opaque_existential_1(&v65, v67);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    }
    else
    {
      type metadata accessor for Decimal(0);
      if (swift_dynamicCast())
      {
        v16 = *(_DWORD *)v69;
        v56 = *(_OWORD *)&v69[4];
        v17 = objc_allocWithZone(MEMORY[0x24BDD1518]);
        v65 = v16;
        v66 = v56;
        v18 = objc_msgSend(v17, sel_initWithDecimal_, &v65);
        objc_msgSend(v18, sel_floatValue);
        v20 = v19;

        v21 = v57;
        *((_QWORD *)v57 + 3) = MEMORY[0x24BEE14E8];
        *v21 = v20;
      }
      else
      {
        v22 = MEMORY[0x24BEE1768];
        if ((swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
          return sub_233168350(a1, (uint64_t)v57);
        }
        type metadata accessor for ComparisonResult(0);
        if (swift_dynamicCast())
        {
          v23 = *(_QWORD *)v69;
          v24 = v57;
          *((_QWORD *)v57 + 3) = v22;
          *v24 = v23;
        }
        else
        {
          if (!swift_dynamicCast())
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_256045DA8);
            if (swift_dynamicCast())
            {
              sub_23318B020((__int128 *)v69, (uint64_t)&v65);
              v27 = v67;
              v28 = v68;
              v29 = __swift_project_boxed_opaque_existential_1(&v65, v67);
              v30 = MEMORY[0x24BDAC7A8](v29);
              *((_QWORD *)&v56 - 4) = v27;
              *((_QWORD *)&v56 - 3) = v28;
              *((_QWORD *)&v56 - 2) = sub_233211368;
              *((_QWORD *)&v56 - 1) = 0;
              MEMORY[0x24BDAC7A8](v30);
              *((_QWORD *)&v56 - 4) = v27;
              *((_QWORD *)&v56 - 3) = v28;
              *((_QWORD *)&v56 - 2) = sub_23321A50C;
              *((_QWORD *)&v56 - 1) = v31;
              v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
              v33 = v58;
              v34 = sub_233212458((void (*)(char *, char *))sub_23321A528, (uint64_t)(&v56 - 3), v27, v56, v32, v28, MEMORY[0x24BEE3F20], (uint64_t)v63);
              if (!v33)
              {
                v46 = v34;
                v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045DC0);
                v48 = (uint64_t *)v57;
                *((_QWORD *)v57 + 3) = v47;
                *v48 = v46;
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_256045DB0);
              if (!swift_dynamicCast())
              {
                sub_233168350(a1, (uint64_t)v69);
                v42 = sub_23361E1E0();
                v44 = v43;
                sub_23321A4C8();
                swift_allocError();
                *(_QWORD *)v45 = v42;
                *(_QWORD *)(v45 + 8) = v44;
                *(_BYTE *)(v45 + 16) = 1;
                swift_willThrow();
                return __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
              }
              sub_23318B020((__int128 *)v69, (uint64_t)&v65);
              __swift_instantiateConcreteTypeFromMangledName(&qword_256045DB8);
              v35 = swift_allocObject();
              *(_OWORD *)(v35 + 16) = xmmword_233623D50;
              v36 = v67;
              v37 = v68;
              __swift_project_boxed_opaque_existential_1(&v65, v67);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v37 + 8))(v63, v61, v36, v37);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
              v38 = v64;
              v39 = __swift_project_boxed_opaque_existential_1(v63, v64);
              v60 = v38;
              boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v59);
              (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(boxed_opaque_existential_0, v39, v38);
              v41 = v58;
              sub_233211368(v59);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
              if (v41)
              {
                *(_QWORD *)(v35 + 16) = 0;
                swift_release();
              }
              else
              {
                v49 = v67;
                v50 = v68;
                __swift_project_boxed_opaque_existential_1(&v65, v67);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v50 + 8))(v63, v61, v49, v50);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
                v51 = v62;
                v52 = __swift_project_boxed_opaque_existential_1(v61, v62);
                v60 = v51;
                v53 = __swift_allocate_boxed_opaque_existential_0(v59);
                (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v53, v52, v51);
                sub_233211368(v59);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
                v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045DC0);
                v55 = (uint64_t *)v57;
                *((_QWORD *)v57 + 3) = v54;
                *v55 = v35;
              }
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
            return __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
          }
          v25 = *(_OWORD *)v69;
          v26 = v57;
          *((_QWORD *)v57 + 3) = MEMORY[0x24BEE0D00];
          *v26 = v25;
        }
      }
    }
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
}

id sub_233211CD8(void *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11[2];
  _OWORD v12[2];
  char v13;
  __int128 v14;
  __int128 v15;
  id v16;
  _BYTE v17[8];
  id v18;

  sub_233210EB8(a1, a2, a3, (uint64_t)v11);
  if (!v4)
  {
    sub_23321A254(v11, (uint64_t)v12);
    if (v13)
    {
      if (v13 == 1)
      {
        v6 = *(id *)&v12[0];
        v7 = sub_23361F290();
        v8 = (void *)objc_opt_self();
        v9 = objc_msgSend(v8, sel_expressionForConstantValue_, v7);
        swift_unknownObjectRelease();
        v10 = objc_msgSend(v8, sel_expressionForConstantValue_, sub_23361F290());
        swift_unknownObjectRelease();
        v3 = objc_msgSend(v8, sel_expressionForConditional_trueExpression_falseExpression_, v6, v9, v10);

        sub_23321A440((uint64_t)v11);
        sub_23321A440((uint64_t)v11);
      }
      else
      {
        v14 = v12[0];
        v15 = v12[1];
        v3 = *(id *)&v12[0];
        sub_233168478((uint64_t)&v14 + 8, (uint64_t)&v16, &qword_256045D70);
        sub_23321A418(&v16);
        sub_233168478((uint64_t)&v15, (uint64_t)v17, &qword_256045D78);
        sub_23321A3F0((uint64_t)v17);
        sub_233168478((uint64_t)&v15 + 8, (uint64_t)&v18, &qword_256045D80);
        sub_23321A418(&v18);
      }
    }
    else
    {
      return *(id *)&v12[0];
    }
  }
  return v3;
}

id sub_233211E98(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  __int128 v12[2];
  _OWORD v13[2];
  char v14;
  __int128 v15;
  __int128 v16;
  id v17;
  _BYTE v18[8];
  id v19;

  sub_233210EB8(a1, a2, a3, (uint64_t)v12);
  if (!v3)
  {
    sub_23321A254(v12, (uint64_t)v13);
    if (v14)
    {
      if (v14 == 1)
      {
        return *(id *)&v13[0];
      }
      else
      {
        v15 = v13[0];
        v16 = v13[1];
        v9 = *(id *)&v13[0];
        v10 = sub_23361F290();
        v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
        swift_unknownObjectRelease();
        v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v9, v11, 0, 4, 0);

        sub_233168478((uint64_t)&v15 + 8, (uint64_t)&v17, &qword_256045D70);
        sub_23321A418(&v17);
        sub_233168478((uint64_t)&v16, (uint64_t)v18, &qword_256045D78);
        sub_23321A3F0((uint64_t)v18);
        sub_233168478((uint64_t)&v16 + 8, (uint64_t)&v19, &qword_256045D80);
        sub_23321A418(&v19);
      }
    }
    else
    {
      v6 = *(id *)&v13[0];
      v7 = sub_23361F290();
      v8 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v7);
      swift_unknownObjectRelease();
      v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v6, v8, 0, 4, 0);

      sub_23321A440((uint64_t)v12);
      sub_23321A440((uint64_t)v12);
    }
  }
  return v4;
}

id sub_2332120A4(void *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11[2];
  id v12;
  char v13;
  char v14;

  sub_233210EB8(a1, a2, a3, (uint64_t)v11);
  if (!v4)
  {
    sub_23321A254(v11, (uint64_t)&v12);
    if (v13)
    {
      if (v13 == 1)
      {
        v14 = 1;
        v6 = v12;
        v7 = sub_23361F290();
        v8 = (void *)objc_opt_self();
        v9 = objc_msgSend(v8, sel_expressionForConstantValue_, v7);
        swift_unknownObjectRelease();
        v14 = 0;
        v10 = objc_msgSend(v8, sel_expressionForConstantValue_, sub_23361F290());
        swift_unknownObjectRelease();
        v3 = objc_msgSend(v8, sel_expressionForConditional_trueExpression_falseExpression_, v6, v9, v10);

        sub_23321A440((uint64_t)v11);
        sub_23321A440((uint64_t)v11);
      }
      else
      {
        return v12;
      }
    }
    else
    {
      return v12;
    }
  }
  return v3;
}

unint64_t sub_233212218(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  v3 = 0xD000000000000028;
  if (!a3)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v4 = 0xD00000000000002CLL;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v4 = 0xD00000000000002DLL;
LABEL_5:
    v6 = v4;
    sub_23361E27C();
    sub_23361E27C();
    return v6;
  }
  return v3;
}

unint64_t sub_2332122FC()
{
  uint64_t v0;

  return sub_233212218(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_233212308(uint64_t a1, uint64_t a2)
{
  return sub_23321A558(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_233212324(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  uint64_t *v10;
  void (*v12)(uint64_t *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  a1[3] = v6;
  a1[4] = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
  v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v12(boxed_opaque_existential_0, v3, v6);
  v9 = v3 + *(int *)(a3 + 36);
  a2[3] = v6;
  a2[4] = v7;
  v10 = __swift_allocate_boxed_opaque_existential_0(a2);
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v12)(v10, v9, v6);
}

uint64_t sub_2332123A8(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_0, a1, AssociatedTypeWitness);
  a2(v7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_233212458(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_23361EBAC();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_23361E330();
  v57 = sub_23361E03C();
  v53 = sub_23361EEAC();
  sub_23361EE64();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_23361E324();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_23361EBB8();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_23361EE94();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_23361EBB8();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_23361EE94();
      sub_23361EBB8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_233212964@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12[4];
  __int128 v13;
  uint64_t v14;

  v12[3] = *(_QWORD *)(a1 + 16);
  __swift_allocate_boxed_opaque_existential_0(v12);
  sub_23361D0DC();
  sub_233211368((uint64_t)v12, &v13);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  if (!v2)
  {
    v5 = v14;
    if (v14)
    {
      v6 = __swift_project_boxed_opaque_existential_1(&v13, v14);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x24BDAC7A8](v6);
      v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_23361F20C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
    }
    else
    {
      v10 = 0;
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
    result = swift_unknownObjectRelease();
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = 0;
  }
  return result;
}

_QWORD *sub_233212AB0@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233212964, a1);
}

uint64_t sub_233212ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(char *, uint64_t);
  id v12;
  uint64_t v13;

  v4 = sub_23361CEE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23361D160();
  v9 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v9 + 16))
  {
    result = sub_2331E4014((uint64_t)v7);
    if ((v10 & 1) != 0)
    {
      v11 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v12 = *(id *)(*(_QWORD *)(v9 + 56) + 32 * result);
      result = v11(v7, v4);
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_233212BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233212ACC, a1);
}

unint64_t sub_233212BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t result;
  uint64_t v17;
  char v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361CEE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  result = sub_23361D160();
  v17 = *(_QWORD *)(a1 + 8);
  if (!*(_QWORD *)(v17 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  result = sub_2331E4014((uint64_t)v15);
  if ((v18 & 1) == 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v31 = a1;
  v19 = *(void **)(*(_QWORD *)(v17 + 56) + 32 * result + 8);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21 = v19;
  v20(v15, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    return (unint64_t)v21;
  }
  result = sub_23361D160();
  v22 = *(_QWORD *)(v31 + 8);
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_11;
  result = sub_2331E4014((uint64_t)v13);
  if ((v23 & 1) == 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v24 = *(_QWORD *)(v22 + 56) + 32 * result;
  v25 = *(void **)v24;
  v26 = *(void **)(v24 + 8);
  v27 = *(id *)(v24 + 24);
  v28 = v25;
  v29 = v26;
  swift_retain();
  v20(v13, v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);

  swift_release();
  return (unint64_t)v28;
}

unint64_t sub_233212DA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v2 = sub_23361CEE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23361D160();
  v7 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v7 + 16))
  {
    result = sub_2331E4014((uint64_t)v5);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(v7 + 56) + 32 * result;
      v10 = *(void **)(v9 + 8);
      v11 = *(_QWORD *)(v9 + 16);
      v12 = *(void **)(v9 + 24);
      v13 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14 = *(id *)v9;
      v15 = v10;
      swift_retain();
      v16 = v12;
      v13(v5, v2);

      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_233212EA0(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  _BOOL4 v41;
  _BOOL4 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  int v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  int v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  _QWORD *v92;
  int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  _BOOL4 v105;
  _BOOL4 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;

  v5 = v4;
  v10 = a2[2];
  v9 = a2[3];
  v118 = a2[4];
  v11 = sub_23361D118();
  v12 = sub_23361EBAC();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = *(_QWORD *)(v11 - 8);
  v114 = v11;
  v115 = v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = *(_QWORD *)(v10 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v119 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v26 = a1[4];
  v27 = __CFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  v116 = v18;
  v117 = a2;
  v108 = v25;
  v109 = v22;
  v112 = v23;
  v113 = v24;
  v107 = v9;
  v111 = a3;
  a1[4] = v28;
  v120 = v3;
  sub_23361D0DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045DF0);
  if (swift_dynamicCast())
  {
    v29 = v5;
    v30 = *((_QWORD *)&v122 + 1);
    v31 = v123;
    __swift_project_boxed_opaque_existential_1(&v121, *((uint64_t *)&v122 + 1));
    v32 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v31 + 16);
    v33 = a1;
    v34 = v31;
    v5 = v29;
    v124 = v32(a1, v30, v34);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v121);
  }
  else
  {
    v33 = a1;
    v123 = 0;
    v121 = 0u;
    v122 = 0u;
    sub_233168608((uint64_t)&v121, &qword_256045DF8);
    v124 = 0;
  }
  sub_23361D0DC();
  v35 = v10;
  if (swift_dynamicCast())
  {
    v36 = *((_QWORD *)&v122 + 1);
    v37 = v123;
    __swift_project_boxed_opaque_existential_1(&v121, *((uint64_t *)&v122 + 1));
    v38 = v33;
    v39 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v37 + 8))(v33, v36, v37);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v121);
    v40 = v124;
    v41 = v124 == 0;
    v42 = v39 == 0;
    if (v124)
    {
      v43 = v118;
      if (v39)
        goto LABEL_21;
      goto LABEL_11;
    }
  }
  else
  {
    v123 = 0;
    v121 = 0u;
    v122 = 0u;
    sub_233168608((uint64_t)&v121, &qword_256045DF8);
    v39 = 0;
    v40 = v124;
    v41 = v124 == 0;
    v42 = 1;
    v38 = v33;
  }
  v43 = v118;
LABEL_11:
  v105 = v41;
  v106 = v42;
  v124 = v40;
  v44 = v119;
  sub_23361D0DC();
  v45 = v5;
  v46 = v38;
  v47 = sub_2332120A4(v38, v35, v43);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v44, v35);
  v119 = v45;
  if (v45)
  {

    swift_release();
    return;
  }
  v54 = v124;
  if (v105)
  {
    swift_retain();
    v54 = v51;
  }
  v124 = v54;
  if (v106)
  {
    if (v49)
    {
      v39 = v49;
    }
    else
    {
      v47 = v47;
      v39 = v47;
    }
  }
  else
  {

    v47 = v49;
  }

  swift_release();
  v5 = v119;
  v38 = v46;
LABEL_21:
  v55 = v38[4];
  v27 = v55 != 0;
  v56 = v55 - 1;
  if (!v27)
    goto LABEL_40;
  v119 = v5;
  v38[4] = v56;
  swift_getAssociatedTypeWitness();
  v57 = v39;
  v58 = v113;
  sub_23361D124();
  v60 = v114;
  v59 = v115;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v58, 1, v114) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v58, v109);
    if (objc_msgSend(v57, sel_expressionType))
    {
      v61 = sub_23361D10C();
      v62 = v38;
      v63 = v61;
      v65 = v62[2];
      v64 = v62[3];
      v66 = v62[4] == 0;
      v67 = v124;
      swift_retain();
      v68 = v65;
      v69 = v119;
      v70 = sub_2332108C0(v63, v67, v68, v64, v66);
      if (v69)
      {
        swift_release();
        swift_release_n();

        return;
      }
      v91 = v70;
      v82 = v71;
      v83 = v72;
      v84 = v73;
      swift_release();
      v85 = 2;
      swift_release_n();

      v57 = v91;
    }
    else
    {

      swift_release();
      v82 = 0;
      v83 = 0;
      v84 = 0;
      v85 = 0;
    }
    goto LABEL_35;
  }
  v74 = v57;
  v75 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v112, v58, v60);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v77 = v59;
  v78 = v110;
  v76(v110, v75, v60);
  v79 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v78, v60);
  if (v79 == *MEMORY[0x24BDCD168])
  {
    v80 = v74;
    v81 = sub_2332107E8();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v60);
    swift_release();
    v82 = 0;
    v83 = 0;
    v84 = 0;
    v85 = 0;
    v57 = v81;
LABEL_35:
    v92 = v111;
    *v111 = v57;
    v92[1] = v82;
    v92[2] = v83;
    v92[3] = v84;
    *((_BYTE *)v92 + 32) = v85;
    return;
  }
  v86 = v79;
  if (v79 == *MEMORY[0x24BDCD178])
  {
    v87 = sub_2332107E8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v121 = 0;
    v88 = sub_23361F290();
    v89 = v60;
    v90 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v88);
    swift_unknownObjectRelease();
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v87, v90, 0, 4, 0);

    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v112, v89);
    swift_release();
    v82 = 0;
    v83 = 0;
    v84 = 0;
    v85 = 1;
    goto LABEL_35;
  }
  if (v79 == *MEMORY[0x24BDCD170])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v93 = *MEMORY[0x24BDCD180];
    swift_bridgeObjectRelease();
    v94 = v86 == v93;
    v60 = v114;
    if (!v94)
    {
      *(_QWORD *)&v121 = sub_23361D10C();
      sub_23361F41C();
      v99 = sub_23361E1C8();
      v101 = v100;
      sub_23321A4C8();
      swift_allocError();
      *(_QWORD *)v102 = v99;
      *(_QWORD *)(v102 + 8) = v101;
      *(_BYTE *)(v102 + 16) = 0;
      swift_willThrow();

      v103 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
      v103(v112, v60);

      swift_release();
      v103((uint64_t)v110, v60);
      return;
    }
  }
  *(_QWORD *)&v121 = sub_23361D10C();
  sub_23361F41C();
  v95 = sub_23361E1C8();
  v97 = v96;
  sub_23321A4C8();
  swift_allocError();
  *(_QWORD *)v98 = v95;
  *(_QWORD *)(v98 + 8) = v97;
  *(_BYTE *)(v98 + 16) = 0;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v112, v60);
  swift_release();
}

_QWORD *sub_23321373C@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233212EA0, a1);
}

uint64_t sub_233213758@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  _QWORD *v95;
  id v96;
  void *v97;
  void (*v98)(uint64_t, char *, uint64_t);
  uint64_t v99;
  id v100;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  _BOOL8 v106;
  uint64_t v107;
  char v108;
  unint64_t v109;
  char v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  unint64_t v144;
  uint64_t *v145;
  unint64_t v146;
  uint64_t *v147;
  void *v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;

  v149 = a1;
  v125 = a3;
  v4 = sub_23361CEE4();
  v150 = *(_QWORD *)(v4 - 8);
  v151 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v152 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v153 = (char *)&v121 - v8;
  v9 = a2[2];
  v10 = 8 * v9;
  v144 = v9;
  v147 = a2;
  v130 = 8 * v9;
  if (v9 == 1)
  {
    v136 = &v121;
    v141 = *(_QWORD *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
    v127 = *(_QWORD *)(v141 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v143 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_getAssociatedTypeWitness();
    v12 = sub_23361D16C();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v7);
    v13 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    v14 = (char *)&v121 - v13;
    if (v9)
    {
      v15 = 0;
      v16 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v9 < 4)
        goto LABEL_9;
      if ((unint64_t)&v14[-v16] < 0x20)
        goto LABEL_9;
      v15 = v9 & 0xFFFFFFFFFFFFFFFCLL;
      v17 = (__int128 *)(v16 + 16);
      v18 = v14 + 16;
      v19 = v9 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v20 = *v17;
        *(v18 - 1) = *(v17 - 1);
        *v18 = v20;
        v17 += 2;
        v18 += 2;
        v19 -= 4;
      }
      while (v19);
      if (v9 != v15)
      {
LABEL_9:
        v21 = v9 - v15;
        v22 = 8 * v15;
        v23 = &v14[8 * v15];
        v24 = (uint64_t *)(v16 + v22);
        do
        {
          v25 = *v24++;
          *(_QWORD *)v23 = v25;
          v23 += 8;
          --v21;
        }
        while (v21);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v136 = &v121;
    v141 = TupleTypeMetadata;
    v127 = *(_QWORD *)(TupleTypeMetadata - 8);
    v27 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
    v143 = (char *)&v121 - v28;
    MEMORY[0x24BDAC7A8](v27);
    v29 = (uint64_t *)((char *)&v121 - v13);
    if (v9)
    {
      v30 = v147[4] & 0xFFFFFFFFFFFFFFFELL;
      v31 = v147[6] & 0xFFFFFFFFFFFFFFFELL;
      v32 = v29;
      v33 = v144;
      do
      {
        v30 += 8;
        v31 += 8;
        swift_getAssociatedTypeWitness();
        *v32++ = sub_23361D16C();
        --v33;
      }
      while (v33);
    }
    v9 = v144;
    v12 = swift_getTupleTypeMetadata();
    a2 = v147;
    v10 = v130;
  }
  v135 = &v121;
  v140 = v12;
  v126 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v142 = (char *)&v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23361CDB8();
  v134 = &v121;
  v145 = (uint64_t *)v35;
  v138 = *(_QWORD *)(v35 - 8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v121 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = &v121;
  v139 = a2[3];
  v137 = *(_QWORD *)(v139 - 8);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = &v121;
  MEMORY[0x24BDAC7A8](v39);
  if (v9)
  {
    v42 = v147[4] & 0xFFFFFFFFFFFFFFFELL;
    v43 = v147[6] & 0xFFFFFFFFFFFFFFFELL;
    v44 = (uint64_t *)((char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    v45 = v144;
    do
    {
      v42 += 8;
      v43 += 8;
      *v44++ = swift_getAssociatedTypeWitness();
      --v45;
    }
    while (v45);
  }
  v46 = v144;
  v47 = sub_23361D8C8();
  v129 = sub_23361EBAC();
  v128 = *(_QWORD *)(v129 - 8);
  v48 = MEMORY[0x24BDAC7A8](v129);
  v50 = (char *)&v121 - v49;
  v131 = &v121;
  v51 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)&v121 - v52;
  sub_23361CE84();
  sub_23361CDC4();
  v54 = v148;
  v55 = v139;
  sub_23361CE18();
  if (v54)
  {

    (*(void (**)(char *, uint64_t *))(v138 + 8))(v38, v145);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v41, v55);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v47);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v50, v129);
    sub_23321A4C8();
    swift_allocError();
    *(_QWORD *)v56 = 0;
    *(_QWORD *)(v56 + 8) = 0;
    *(_BYTE *)(v56 + 16) = 2;
    return swift_willThrow();
  }
  (*(void (**)(char *, uint64_t *))(v138 + 8))(v38, v145);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v41, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v47);
  v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v51 + 32))(v53, v50, v47);
  v59 = v130;
  MEMORY[0x24BDAC7A8](v58);
  v148 = 0;
  v124 = v47;
  v123 = v51;
  v122 = v53;
  v139 = v60;
  if (!v46)
  {
    sub_23361D8BC();
    sub_23361CE78();
    v64 = v142;
LABEL_50:
    v116 = v124;
    v117 = v122;
    sub_23361D8B0();
    v119 = v155;
    v118 = v156;
    __swift_project_boxed_opaque_existential_1(&v154, v155);
    v120 = v148;
    sub_233210EB8(v149, v119, *(_QWORD *)(v118 + 8), (uint64_t)&v157);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v117, v116);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v154);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v143, v141);
    if (v120)
      return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v64, v140);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v64, v140);
    return sub_23321A254(&v157, v125);
  }
  v61 = 0;
  v62 = 32;
  v63 = v140;
  v64 = v142;
  v65 = v147;
  do
  {
    if (v46 == 1)
      v66 = 0;
    else
      v66 = *(_DWORD *)(v63 + v62);
    *(uint64_t *)((char *)&v121 + 8 * v61++ - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)&v64[v66];
    v62 += 16;
  }
  while (v46 != v61);
  v67 = sub_23361D8BC();
  MEMORY[0x24BDAC7A8](v67);
  v68 = 0;
  v69 = 32;
  v70 = v141;
  v71 = v143;
  do
  {
    if (v46 == 1)
      v72 = 0;
    else
      v72 = *(_DWORD *)(v70 + v69);
    *(uint64_t *)((char *)&v121 + 8 * v68++ - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)&v71[v72];
    v69 += 16;
  }
  while (v46 != v68);
  sub_23361CE78();
  v73 = (uint64_t *)(v65[4] & 0xFFFFFFFFFFFFFFFELL);
  v74 = (uint64_t *)(v65[6] & 0xFFFFFFFFFFFFFFFELL);
  v75 = 32;
  v76 = v46;
  while (1)
  {
    v146 = v76;
    if (v46 == 1)
      v82 = 0;
    else
      v82 = *(_DWORD *)(v140 + v75);
    v147 = v73;
    v83 = *v73;
    v84 = *v74;
    v85 = &v64[v82];
    swift_getAssociatedTypeWitness();
    v86 = sub_23361D16C();
    v145 = &v121;
    v87 = *(_QWORD *)(v86 - 8);
    MEMORY[0x24BDAC7A8](v86);
    v89 = (char *)&v121 - v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))((char *)&v121 - v88, v85, v86);
    sub_23361D160();
    v90 = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v89, v86);
    v91 = *(_QWORD *)(v83 - 8);
    MEMORY[0x24BDAC7A8](v90);
    v93 = (char *)&v121 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v91 + 16))(v93);
    v94 = v148;
    v95 = v149;
    v96 = sub_233211CD8(v149, v83, v84);
    v148 = v94;
    if (v94)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v83);
      (*(void (**)(char *, uint64_t))(v150 + 8))(v153, v151);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v124);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v143, v141);
      return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v142, v140);
    }
    v97 = v96;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v83);
    v98 = *(void (**)(uint64_t, char *, uint64_t))(v150 + 16);
    v99 = (uint64_t)v152;
    v98((uint64_t)v152, v153, v151);
    v100 = v97;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v154 = (_QWORD *)v95[1];
    v102 = v154;
    v95[1] = 0x8000000000000000;
    v104 = sub_2331E4014(v99);
    v105 = v102[2];
    v106 = (v103 & 1) == 0;
    v107 = v105 + v106;
    if (__OFADD__(v105, v106))
      break;
    v108 = v103;
    if (v102[3] >= v107)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v111 = v154;
        if ((v103 & 1) != 0)
          goto LABEL_32;
      }
      else
      {
        sub_23327DF98();
        v111 = v154;
        if ((v108 & 1) != 0)
          goto LABEL_32;
      }
    }
    else
    {
      sub_233279BE4(v107, isUniquelyReferenced_nonNull_native);
      v109 = sub_2331E4014((uint64_t)v152);
      if ((v108 & 1) != (v110 & 1))
        goto LABEL_56;
      v104 = v109;
      v111 = v154;
      if ((v108 & 1) != 0)
      {
LABEL_32:
        v77 = v111[7] + 32 * v104;
        v78 = *(void **)(v77 + 8);
        v79 = *(void **)(v77 + 24);

        swift_release();
        *(_QWORD *)v77 = v100;
        *(_QWORD *)(v77 + 8) = 0;
        *(_QWORD *)(v77 + 16) = 0;
        *(_QWORD *)(v77 + 24) = 0;
        goto LABEL_33;
      }
    }
    v111[(v104 >> 6) + 8] |= 1 << v104;
    v98(v111[6] + *(_QWORD *)(v150 + 72) * v104, v152, v151);
    v112 = (_QWORD *)(v111[7] + 32 * v104);
    v112[2] = 0;
    v112[3] = 0;
    *v112 = v100;
    v112[1] = 0;
    v113 = v111[2];
    v114 = __OFADD__(v113, 1);
    v115 = v113 + 1;
    if (v114)
      goto LABEL_55;
    v111[2] = v115;
LABEL_33:
    *((_QWORD *)v149 + 1) = v111;
    swift_bridgeObjectRelease();
    v80 = v151;
    v81 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
    v81((uint64_t)v152, v151);

    v81((uint64_t)v153, v80);
    v46 = v144;
    v75 += 16;
    ++v74;
    v73 = v147 + 1;
    v76 = v146 - 1;
    v64 = v142;
    if (v146 == 1)
      goto LABEL_50;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  result = sub_23361F2B4();
  __break(1u);
  return result;
}

_QWORD *sub_2332144A4@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233213758, a1);
}

void sub_2332144C0(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_233214744(a1, a2, MEMORY[0x24BDCCD90], MEMORY[0x24BDCCD98], (SEL *)&selRef_andPredicateWithSubpredicates_, a3);
}

void sub_2332144EC(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X2>, void (*a4)(_QWORD *)@<X3>, SEL *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  SEL *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  SEL *v32;
  uint64_t v33;
  void *v34;
  void (*v35)(_QWORD *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v30 = a6;
  v10 = a2[3];
  v35 = a4;
  v36 = v10;
  v31 = *(_QWORD *)(v10 - 8);
  v32 = a5;
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_233626360;
  v33 = v6;
  a3(a2);
  v20 = a2[4];
  v34 = a1;
  v21 = v37;
  v22 = sub_233211E98(a1, v15, v20);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v21)
  {
    *(_QWORD *)(v19 + 16) = 0;
    swift_release();
  }
  else
  {
    v23 = v31;
    v24 = v32;
    *(_QWORD *)(v19 + 32) = v22;
    v35(a2);
    v25 = v36;
    v26 = sub_233211E98(v34, v36, a2[5]);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v25);
    *(_QWORD *)(v19 + 40) = v26;
    v38 = v19;
    sub_23361E408();
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    v27 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend((id)objc_opt_self(), *v24, v27);

    v29 = v30;
    *v30 = v28;
    v29[1] = 0;
    v29[2] = 0;
    v29[3] = 0;
    *((_BYTE *)v29 + 32) = 1;
  }
}

void sub_233214718(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_233214744(a1, a2, MEMORY[0x24BDCCDC0], MEMORY[0x24BDCCDC8], (SEL *)&selRef_orPredicateWithSubpredicates_, a3);
}

void sub_233214744(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X3>, void (*a4)(_QWORD *)@<X4>, SEL *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v8[2];

  sub_2332144EC(a1, a2, a3, a4, a5, v8);
  if (!v6)
    sub_23321A254(v8, a6);
}

void sub_233214794(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _OWORD v42[2];
  char *v43;

  v38 = a3;
  v41 = a2[3];
  v7 = *(_QWORD *)(v41 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v3;
  sub_23361D0AC();
  v15 = a2[4];
  v40 = a1;
  v16 = sub_2332120A4(a1, v11, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v4)
  {
    v36 = v20;
    v37 = v16;
    v23 = v38;
    sub_23361D0B8();
    v24 = v41;
    v25 = sub_2332120A4(v40, v41, a2[5]);
    v39 = v26;
    v40 = v27;
    v35 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v24);
    v29 = v37;
    if (!objc_msgSend(v37, sel_expressionType))
    {
      if (!objc_msgSend(v29, sel_constantValue))
        goto LABEL_9;
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_233168608((uint64_t)v42, &qword_254245020);
      v29 = v37;
    }
    if (objc_msgSend(v25, sel_expressionType))
    {
LABEL_8:
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v29, v25, 0, 4, 0);

      swift_release();
      swift_release();

LABEL_14:
      *(_QWORD *)v23 = v30;
      *(_QWORD *)(v23 + 8) = 0;
      *(_QWORD *)(v23 + 16) = 0;
      *(_QWORD *)(v23 + 24) = 0;
      *(_BYTE *)(v23 + 32) = 1;
      return;
    }
    if (objc_msgSend(v25, sel_constantValue))
    {
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_233168608((uint64_t)v42, &qword_254245020);
      v29 = v37;
      goto LABEL_8;
    }
LABEL_9:
    memset(v42, 0, sizeof(v42));
    sub_233168608((uint64_t)v42, &qword_254245020);
    v29 = v37;
    if (v22)
    {
      v31 = v22;
    }
    else
    {
      if (!v40)
        goto LABEL_8;
      v22 = v40;
      v31 = 0;
      v40 = v22;
    }
    v32 = (void *)objc_opt_self();
    v33 = v31;
    v30 = objc_msgSend(v32, sel_notPredicateWithSubpredicate_, v22);

    swift_release();
    swift_release();
    goto LABEL_14;
  }
}

_QWORD *sub_233214B1C@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233214794, a1);
}

void sub_233214B38(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  char *v43;

  v37 = a3;
  v40 = a2[3];
  v7 = *(_QWORD *)(v40 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v3;
  sub_23361D148();
  v15 = a2[4];
  v39 = a1;
  v16 = sub_2332120A4(a1, v11, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v4)
  {
    v35 = v20;
    v36 = v16;
    v23 = v37;
    sub_23361D154();
    v24 = v40;
    v25 = sub_2332120A4(v39, v40, a2[5]);
    v38 = v26;
    v39 = v27;
    v34 = v28;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v24);
    v29 = v36;
    v30 = v23;
    if (!objc_msgSend(v36, sel_expressionType))
    {
      if (!objc_msgSend(v29, sel_constantValue))
      {
        v41 = 0u;
        v42 = 0u;
        sub_233168608((uint64_t)&v41, &qword_254245020);
        v31 = v22;
        goto LABEL_11;
      }
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_233168608((uint64_t)&v41, &qword_254245020);
      v29 = v36;
    }
    v31 = v22;
    if (objc_msgSend(v25, sel_expressionType))
    {
LABEL_8:
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v29, v25, 0, 5, 0);

      swift_release();
      swift_release();

LABEL_16:
      *(_QWORD *)v30 = v32;
      *(_QWORD *)(v30 + 8) = 0;
      *(_QWORD *)(v30 + 16) = 0;
      *(_QWORD *)(v30 + 24) = 0;
      *(_BYTE *)(v30 + 32) = 1;
      return;
    }
    if (objc_msgSend(v25, sel_constantValue))
    {
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_233168608((uint64_t)&v41, &qword_254245020);
      v29 = v36;
      goto LABEL_8;
    }
    v41 = 0u;
    v42 = 0u;
    sub_233168608((uint64_t)&v41, &qword_254245020);
LABEL_11:
    v29 = v36;
    if (v31)
    {
      v32 = v31;
    }
    else
    {
      if (!v39)
        goto LABEL_8;
      v32 = v39;
      v39 = v32;
    }

    swift_release();
    swift_release();
    goto LABEL_16;
  }
}

_QWORD *sub_233214E80@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233214B38, a1);
}

void sub_233214E9C(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  _QWORD *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;

  v47 = a1;
  v39 = a3;
  v42 = a2[3];
  v41 = *(_QWORD *)(v42 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v43 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v5);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v38 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361CFEC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v37 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v37 - v19;
  sub_23361CE90();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v20, v15);
  if (v21 == *MEMORY[0x24BDCCF28])
  {
    v22 = 0x3A6F743A646461;
LABEL_5:
    v38 = v22;
    goto LABEL_8;
  }
  if (v21 == *MEMORY[0x24BDCCF38])
  {
    v22 = 0x6275733A6D6F7266;
    goto LABEL_5;
  }
  if (v21 != *MEMORY[0x24BDCCF30])
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD *))(v13 + 16))(v38, v3, a2);
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_23361ED98();
    sub_23361E27C();
    v36 = v37;
    sub_23361CE90();
    sub_23361EEE8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v15);
    sub_23361EF24();
    __break(1u);
    return;
  }
  v38 = 0x796C7069746C756DLL;
LABEL_8:
  v23 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_233623D50;
  sub_23361CE9C();
  v25 = v44;
  v26 = sub_233211CD8(v23, v8, a2[4]);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
  if (v25)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v24 + 16) = 0;
    swift_release();
  }
  else
  {
    v27 = sub_233168668(0, &qword_256042F70);
    *(_QWORD *)(v24 + 56) = v27;
    *(_QWORD *)(v24 + 32) = v26;
    v28 = v40;
    sub_23361CEA8();
    v29 = a2[5];
    v30 = v42;
    v31 = sub_233211CD8(v23, v42, v29);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v30);
    *(_QWORD *)(v24 + 88) = v27;
    *(_QWORD *)(v24 + 64) = v31;
    v32 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v33 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v32, v33);

    v35 = v39;
    *v39 = v34;
    v35[1] = 0;
    v35[2] = 0;
    v35[3] = 0;
    *((_BYTE *)v35 + 32) = 0;
  }
}

_QWORD *sub_233215330@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233214E9C, a1);
}

void sub_23321534C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[2];

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233623D50;
  sub_23361CED8();
  v12 = sub_233211CD8(a1, v7, *(_QWORD *)(a2 + 24));
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_QWORD *)(v11 + 16) = 0;
    swift_release();
  }
  else
  {
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = sub_233168668(0, &qword_256042F70);
    *(_QWORD *)(v11 + 56) = v14;
    *(_QWORD *)(v11 + 32) = v13;
    v21[1] = -1;
    v15 = sub_23361F290();
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_expressionForConstantValue_, v15);
    swift_unknownObjectRelease();
    *(_QWORD *)(v11 + 88) = v14;
    *(_QWORD *)(v11 + 64) = v17;
    v18 = (void *)sub_23361E12C();
    v19 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v16, sel_expressionForFunction_arguments_, v18, v19);

    *(_QWORD *)a3 = v20;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 0;
  }
}

_QWORD *sub_23321554C@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_23321534C, a1);
}

void sub_233215568(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;

  v44 = a1;
  v37 = a3;
  v40 = a2[3];
  v39 = *(_QWORD *)(v40 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361CFF8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v35 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v34 - v19;
  sub_23361CEB4();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v20, v15);
  v22 = 0;
  if (v21 != *MEMORY[0x24BDCCF60])
  {
    if (v21 == *MEMORY[0x24BDCCF50])
    {
      v22 = 1;
    }
    else if (v21 == *MEMORY[0x24BDCCF48])
    {
      v22 = 2;
    }
    else
    {
      if (v21 != *MEMORY[0x24BDCCF58])
      {
        (*(void (**)(char *, uint64_t, _QWORD *))(v34 + 16))(v36, v3, a2);
        v42 = 0;
        v43 = 0xE000000000000000;
        sub_23361ED98();
        sub_23361E27C();
        v33 = v35;
        sub_23361CEB4();
        sub_23361EEE8();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
        sub_23361EF24();
        __break(1u);
        return;
      }
      v22 = 3;
    }
  }
  v36 = (char *)v22;
  sub_23361CEC0();
  v23 = v44;
  v24 = v41;
  v25 = sub_233211CD8(v44, v8, a2[4]);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!v24)
  {
    v26 = v38;
    sub_23361CECC();
    v27 = a2[5];
    v28 = v40;
    v29 = sub_233211CD8(v23, v40, v27);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v28);
    v30 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
    v31 = objc_msgSend(v30, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v25, v29, 0, v36, 0);

    v32 = v37;
    *v37 = v31;
    v32[1] = 0;
    v32[2] = 0;
    v32[3] = 0;
    *((_BYTE *)v32 + 32) = 1;
  }
}

_QWORD *sub_233215900@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233215568, a1);
}

void sub_23321591C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D13C();
  v11 = sub_233211E98(a1, v7, *(_QWORD *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!v3)
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v11);

    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 1;
  }
}

_QWORD *sub_233215A10@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_23321591C, a1);
}

void sub_233215A2C(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;

  v40 = a1;
  v33 = a3;
  v36 = a2[3];
  v34 = *(_QWORD *)(v36 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361CEE4();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v13 = sub_23361D16C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - v15;
  sub_23361D100();
  sub_23361D160();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v17 = v40;
  v18 = sub_233210650((uint64_t)v12);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  sub_23361D0F4();
  v21 = v42;
  v22 = sub_233211CD8(v17, v7, v37);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = v18;
    v39 = v20;
    v42 = v22;
    v23 = v34;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v7);
    v24 = v35;
    sub_23361D0E8();
    v25 = v36;
    v26 = sub_233211E98(v17, v36, a2[5]);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    v27 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v28 = (void *)objc_opt_self();
    v29 = v42;
    v30 = objc_msgSend(v28, sel_expressionForSubquery_usingIteratorVariable_predicate_, v42, v27, v26);

    v31 = v33;
    *v33 = v30;
    v31[1] = 0;
    v31[2] = 0;
    v31[3] = 0;
    *((_BYTE *)v31 + 32) = 0;
  }
}

_QWORD *sub_233215D50@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233215A2C, a1);
}

void sub_233215D6C(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;

  v26 = a3;
  v30 = a2[3];
  v7 = *(_QWORD *)(v30 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v28 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233623D50;
  v27 = v3;
  sub_23361CF50();
  v16 = a2[4];
  v29 = a1;
  v17 = sub_233211CD8(a1, v11, v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v4)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    v18 = v26;
    v19 = sub_233168668(0, &qword_256042F70);
    *(_QWORD *)(v15 + 56) = v19;
    *(_QWORD *)(v15 + 32) = v17;
    v20 = v28;
    MEMORY[0x2349312C0](a2);
    v21 = v30;
    v22 = sub_233211CD8(v29, v30, a2[5]);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v21);
    *(_QWORD *)(v15 + 88) = v19;
    *(_QWORD *)(v15 + 64) = v22;
    v23 = (void *)sub_23361E12C();
    v24 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v23, v24);

    *(_QWORD *)v18 = v25;
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    *(_BYTE *)(v18 + 32) = 0;
  }
}

_QWORD *sub_233215FBC@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233215D6C, a1);
}

void sub_233215FD8(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v25 = a3;
  v28 = a2[3];
  v6 = *(_QWORD *)(v28 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  v26 = v3;
  sub_23361CEF0();
  v16 = a2[4];
  v27 = a1;
  v17 = v29;
  v18 = sub_233211CD8(a1, v11, v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v17)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v15 + 32) = v18;
    v19 = v25;
    MEMORY[0x234931260](a2);
    v20 = v28;
    v21 = sub_233211CD8(v27, v28, a2[5]);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v20);
    *(_QWORD *)(v15 + 40) = v21;
    v30 = v15;
    sub_23361E408();
    sub_233168668(0, &qword_256042F70);
    v22 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(), sel_expressionForAggregate_, v22);

    *(_QWORD *)v19 = v23;
    *(_QWORD *)(v19 + 8) = 0;
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    *(_BYTE *)(v19 + 32) = 0;
  }
}

_QWORD *sub_2332161E8@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233215FD8, a1);
}

void sub_233216204(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a3;
  v25 = a2[2];
  v24 = *(_QWORD *)(v25 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CFB0();
  v14 = sub_233211CD8(a1, v10, a2[5]);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v3)
  {
    v15 = v14;
    v16 = v23;
    sub_23361CFBC();
    v17 = v25;
    v18 = sub_233211CD8(a1, v25, a2[4]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v17);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (swift_conformsToProtocol2())
      v20 = AssociatedTypeWitness;
    else
      v20 = 0;
    if (v20)
      v21 = 100;
    else
      v21 = 10;
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v15, v18, 0, v21, 0);

    *(_QWORD *)v16 = v22;
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    *(_BYTE *)(v16 + 32) = 1;
  }
}

_QWORD *sub_2332163F4@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233216204, a1);
}

uint64_t sub_233216410@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  a2[3] = *(_QWORD *)(a1 + 16);
  a2[4] = v2;
  __swift_allocate_boxed_opaque_existential_0(a2);
  return sub_23361CEF0();
}

uint64_t sub_23321644C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 40);
  a2[3] = *(_QWORD *)(a1 + 24);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0(a2);
  return MEMORY[0x234931434](a1);
}

uint64_t sub_233216490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  void (*v32)(uint64_t *, char *, uint64_t);
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  void (*v40)(uint64_t *, char *, uint64_t);
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v73 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v63 = sub_23361EF00();
  v58 = *(_QWORD *)(v63 - 8);
  v5 = MEMORY[0x24BDAC7A8](v63);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v57 - v7;
  v67 = sub_23361EF78();
  v60 = *(_QWORD *)(v67 - 8);
  v8 = MEMORY[0x24BDAC7A8](v67);
  v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v57 - v10;
  v71 = sub_23361EEF4();
  v64 = *(_QWORD *)(v71 - 8);
  v11 = MEMORY[0x24BDAC7A8](v71);
  v65 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v70 = (char *)&v57 - v13;
  v14 = sub_23361E0FC();
  v68 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v57 - v17;
  v19 = sub_23361E69C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v57 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v72, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v26, v19);
    v30 = v73;
    *(_QWORD *)(v73 + 24) = AssociatedTypeWitness;
    *(_QWORD *)(v30 + 32) = AssociatedConformanceWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v30);
    v32 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
    v32(boxed_opaque_existential_0, v23, AssociatedTypeWitness);
    v33 = &v23[*(int *)(v19 + 36)];
    *(_QWORD *)(v30 + 64) = AssociatedTypeWitness;
    *(_QWORD *)(v30 + 72) = AssociatedConformanceWitness;
    v34 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v30 + 40));
    v32(v34, v33, AssociatedTypeWitness);
    *(_BYTE *)(v30 + 80) = 0;
  }
  else
  {
    v35 = v73;
    if (swift_dynamicCast())
    {
      v36 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v69, v18, v14);
      v37 = v35;
      v38 = (uint64_t *)(v35 + 40);
      *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
      *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
      v39 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
      v40 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
      v40(v39, v36, AssociatedTypeWitness);
      v41 = &v36[*(int *)(v14 + 36)];
      *(_QWORD *)(v37 + 64) = AssociatedTypeWitness;
      *(_QWORD *)(v37 + 72) = AssociatedConformanceWitness;
      v42 = __swift_allocate_boxed_opaque_existential_0(v38);
      v40(v42, v41, AssociatedTypeWitness);
      *(_BYTE *)(v37 + 80) = 1;
    }
    else
    {
      v44 = v70;
      v43 = v71;
      if (swift_dynamicCast())
      {
        v45 = v65;
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v65, v44, v43);
        *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
        *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
        v46 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v46, v45, AssociatedTypeWitness);
        v47 = 2;
      }
      else
      {
        v49 = v66;
        v48 = v67;
        if (swift_dynamicCast())
        {
          v50 = v61;
          (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v61, v49, v48);
          *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
          *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
          v51 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v51, v50, AssociatedTypeWitness);
          v47 = 3;
        }
        else
        {
          v53 = v62;
          v52 = v63;
          if (swift_dynamicCast())
          {
            v54 = v59;
            (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v59, v53, v52);
            *(_QWORD *)(v35 + 24) = AssociatedTypeWitness;
            *(_QWORD *)(v35 + 32) = AssociatedConformanceWitness;
            v55 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
            (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v55, v54, AssociatedTypeWitness);
            v47 = 4;
          }
          else
          {
            *(_OWORD *)(v35 + 48) = 0u;
            *(_OWORD *)(v35 + 64) = 0u;
            *(_OWORD *)(v35 + 16) = 0u;
            *(_OWORD *)(v35 + 32) = 0u;
            *(_OWORD *)v35 = 0u;
            v47 = -1;
          }
        }
      }
      *(_BYTE *)(v35 + 80) = v47;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v28, a1);
}

uint64_t sub_2332169B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D0DC();
  sub_233216490(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_233216A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2332169B4(a1, a2);
}

void sub_233216A4C(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30[5];
  _QWORD *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v31 = a3;
  v34 = a2[2];
  v35 = *(_QWORD *)(v34 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v30[4] = (uint64_t)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v30 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)v30 - v12;
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v3;
  MEMORY[0x2349313D4](v18);
  v19 = a2[5];
  v32 = a1;
  v20 = v37;
  v21 = sub_233211CD8(a1, v14, v19);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    v30[2] = v19;
    v30[3] = (uint64_t)v10;
    v37 = v21;
    v22 = *(void (**)(char *, uint64_t))(v15 + 8);
    v30[1] = v14;
    v22(v17, v14);
    v23 = v33;
    sub_23361CEF0();
    v24 = v34;
    v30[0] = a2[4];
    v25 = sub_233211CD8(v32, v34, v30[0]);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v24);
    v26 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
    v27 = v37;
    v28 = objc_msgSend(v26, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v37, v25, 0, 100, 0);

    v29 = v31;
    *v31 = v28;
    v29[1] = 0;
    v29[2] = 0;
    v29[3] = 0;
    *((_BYTE *)v29 + 32) = 1;
  }
}

_QWORD *sub_2332175F4@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233216A4C, a1);
}

void sub_233217610(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;

  v42 = a1;
  v35 = a3;
  v38 = a2[3];
  v36 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v43 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361CEE4();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v13 = sub_23361D16C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - v15;
  sub_23361D01C();
  sub_23361D160();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v17 = v42;
  v18 = sub_233210650((uint64_t)v12);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
  sub_23361CFBC();
  v21 = v44;
  v22 = sub_233211CD8(v17, v7, v39);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = v18;
    v41 = v20;
    v44 = v22;
    v23 = v36;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
    v24 = v37;
    MEMORY[0x23493138C](a2);
    v25 = v38;
    v26 = sub_233211E98(v17, v38, a2[5]);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    v27 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v28 = (void *)objc_opt_self();
    v29 = v44;
    v30 = objc_msgSend(v28, sel_expressionForSubquery_usingIteratorVariable_predicate_, v44, v27, v26);

    v31 = sub_2332107E8();
    v45 = 0;
    v32 = objc_msgSend(v28, sel_expressionForConstantValue_, sub_23361F290());
    swift_unknownObjectRelease();
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v31, v32, 0, 5, 0);

    v34 = v35;
    *v35 = v33;
    v34[1] = 0;
    v34[2] = 0;
    v34[3] = 0;
    *((_BYTE *)v34 + 32) = 1;
  }
}

_QWORD *sub_2332179D0@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233217610, a1);
}

void sub_2332179EC(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a1;
  v42 = a3;
  v4 = a2[2];
  v43 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v45 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(v7 + 24);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23361CEE4();
  v10 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2[4];
  v46 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v13 = sub_23361D16C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v42 - v15;
  sub_23361D01C();
  sub_23361D160();
  v17 = *(void (**)(char *, uint64_t))(v14 + 8);
  v18 = v48;
  v17(v16, v13);
  v19 = v49;
  v20 = sub_233210650((uint64_t)v12);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24 = v19;
  v23(v12, v47);
  MEMORY[0x234931368](a2);
  v25 = v51;
  v26 = sub_233211E98(v19, v18, a2[5]);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v26;
    v47 = v20;
    v51 = v22;
    v28 = v43;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v18);
    v29 = objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v27);

    v30 = v45;
    sub_23361CFBC();
    v31 = v24;
    v32 = v46;
    v33 = sub_233211CD8(v31, v46, v44);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v32);
    v34 = v29;
    v35 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v36 = (void *)objc_opt_self();
    v37 = objc_msgSend(v36, sel_expressionForSubquery_usingIteratorVariable_predicate_, v33, v35, v34);

    v38 = sub_2332107E8();
    v52 = 0;
    v39 = objc_msgSend(v36, sel_expressionForConstantValue_, sub_23361F290());
    swift_unknownObjectRelease();
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v38, v39, 0, 4, 0);

    v41 = v42;
    *v42 = v40;
    v41[1] = 0;
    v41[2] = 0;
    v41[3] = 0;
    *((_BYTE *)v41 + 32) = 1;
  }
}

_QWORD *sub_233217DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_2332179EC, a1);
}

void sub_233217E0C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_233217E38(a1, a2, a3);
}

void sub_233217E38(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v5[2];

  sub_233217E84(a1, a2, (uint64_t)v5);
  if (!v3)
    sub_23321A254(v5, a3);
}

void sub_233217E84(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  id v13;
  id v14;
  uint64_t v15;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v11);
  v13 = sub_233211CD8(a1, v7, *(_QWORD *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!v3)
  {
    v14 = sub_2332107E8();

    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 0;
  }
}

void sub_233217F6C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_233217E38(a1, a2, a3);
}

void sub_233217F98(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;

  v33 = a3;
  v34 = a2[4];
  v6 = *(_QWORD *)(v34 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v10 + 24);
  v35 = *(_QWORD *)(v36 - 8);
  v11 = MEMORY[0x24BDAC7A8](v7);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v3;
  sub_23361CF20();
  v19 = a2[5];
  v38 = a1;
  v20 = v39;
  v21 = sub_233211E98(a1, v15, v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v20)
  {
    v22 = v21;
    v23 = v6;
    v24 = v34;
    sub_23361CF08();
    v25 = v36;
    v26 = sub_233211CD8(v38, v36, a2[6]);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v25);
    v39 = v26;
    v27 = v9;
    sub_23361CF14();
    v28 = sub_233211CD8(v38, v24, a2[7]);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v24);
    v29 = (void *)objc_opt_self();
    v30 = v39;
    v31 = objc_msgSend(v29, sel_expressionForConditional_trueExpression_falseExpression_, v22, v39, v28);

    v32 = v33;
    *v33 = v31;
    v32[1] = 0;
    v32[2] = 0;
    v32[3] = 0;
    *((_BYTE *)v32 + 32) = 0;
  }
}

_QWORD *sub_2332181DC@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233217F98, a1);
}

void sub_2332181F8(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _OWORD v31[2];
  uint64_t v32;

  v28 = a3;
  v7 = a2[3];
  v32 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v3;
  sub_23361CF2C();
  v16 = a2[4];
  v30 = a1;
  v17 = sub_233211CD8(a1, v12, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v4)
  {
    v18 = v17;
    v19 = v28;
    sub_23361CF38();
    v20 = sub_233211CD8(v30, v7, a2[5]);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v7);
    if (!objc_msgSend(v18, sel_expressionType))
    {
      if (!objc_msgSend(v18, sel_constantValue))
      {
        memset(v31, 0, sizeof(v31));
        sub_233168608((uint64_t)v31, &qword_254245020);

        goto LABEL_6;
      }
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_233168608((uint64_t)v31, &qword_254245020);
    }
    v21 = (void *)objc_opt_self();
    v22 = v18;
    v23 = objc_msgSend(v21, sel_expressionForConstantValue_, 0);
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v22, v23, 0, 5, 0);

    v25 = v24;
    v26 = objc_msgSend(v21, sel_expressionForConditional_trueExpression_falseExpression_, v25, v22, v20);

    v20 = v26;
LABEL_6:
    *(_QWORD *)v19 = v20;
    *(_QWORD *)(v19 + 8) = 0;
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    *(_BYTE *)(v19 + 32) = 0;
  }
}

_QWORD *sub_233218480@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_2332181F8, a1);
}

uint64_t sub_23321849C()
{
  return swift_getKeyPath();
}

uint64_t sub_2332184C8()
{
  return sub_23321849C();
}

void *sub_2332184D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;

  v5 = v3;
  v86 = a2[4];
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v84 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361CEE4();
  MEMORY[0x24BDAC7A8](v10);
  v87 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D16C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = a2[2];
  v15 = *(_QWORD *)(v14 - 8);
  result = (void *)MEMORY[0x24BDAC7A8](v13);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[4];
  v22 = __CFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v80 = v18;
  v81 = v17;
  v82 = result;
  v79 = a3;
  a1[4] = v23;
  sub_23361CF2C();
  v83 = sub_2332120A4(a1, v14, a2[6]);
  v25 = v24;
  v27 = v26;
  v28 = v5;
  v30 = v29;
  result = (void *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  if (!v4)
  {
    v31 = v25;
    v77 = a2;
    v78 = v28;
    v32 = v83;
    v76 = v27;
    v33 = a1[4];
    v22 = v33 != 0;
    v34 = v33 - 1;
    if (!v22)
      goto LABEL_23;
    v35 = v30;
    v75 = a1;
    a1[4] = v34;
    v36 = v80;
    sub_23361CF98();
    v37 = v82;
    sub_23361D160();
    (*(void (**)(uint64_t, id))(v81 + 8))(v36, v37);
    v38 = v76;
    if (v76)
    {
      v82 = v31;
      swift_retain();
      v39 = v32;
      v40 = v32;
      sub_23361EC30();
      v42 = v41;
      v43 = swift_conformsToProtocol2();
      if (v43)
        v44 = v43;
      else
        v44 = 0;
      if (v43)
        v45 = v42;
      else
        v45 = 0;
      if (v45)
      {
        (*(void (**)(void))(v44 + 8))();
        sub_23361EC3C();
        result = (void *)sub_23361EF90();
        v46 = v75;
        if (!result)
        {
LABEL_24:
          __break(1u);
          return result;
        }
        v47 = (uint64_t)result;
        swift_release();
        swift_release();
      }
      else
      {
        v47 = v38;
        v46 = v75;
      }
      v48 = v31;
      v49 = v82;
    }
    else
    {
      v48 = v31;
      v49 = v31;
      v39 = v32;
      v50 = v32;
      v47 = 0;
      v46 = v75;
    }
    v51 = v35;
    sub_23321A5E0(v39, v48, v47, v35, (uint64_t)v87);
    v87 = v51;

    swift_release();
    v52 = v84;
    v53 = v77;
    sub_23361CFA4();
    v54 = v52;
    v55 = v86;
    v56 = sub_2332120A4(v46, v86, v53[7]);
    v83 = v57;
    v58 = v35;
    v59 = v56;
    v61 = v60;
    v80 = v62;
    v81 = 0;
    v82 = v49;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v55);
    v63 = (void *)objc_opt_self();
    v64 = v39;
    v65 = objc_msgSend(v63, sel_expressionForConstantValue_, 0);
    v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v64, v65, 0, 5, 0);

    v67 = v87;
    v68 = v87;
    if (!v58)
      v68 = v66;
    v69 = v67;
    v70 = v59;
    v71 = objc_msgSend(v63, sel_expressionForConstantValue_, 0);
    v72 = objc_msgSend(v63, sel_expressionForConditional_trueExpression_falseExpression_, v68, v70, v71);

    result = (void *)swift_release();
    v74 = v79;
    v73 = v80;
    *v79 = v72;
    v74[1] = v73;
    v74[2] = v83;
    v74[3] = 0;
    *((_BYTE *)v74 + 32) = 2;
  }
  return result;
}

_QWORD *sub_23321899C@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_2332184D0, a1);
}

void sub_2332189B8(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;

  v35 = a3;
  v42 = a2[3];
  v7 = *(_QWORD *)(v42 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233623D50;
  v36 = v3;
  sub_23361D088();
  v16 = a2[4];
  v38 = a1;
  v17 = sub_233211CD8(a1, v11, v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v4)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    v18 = v35;
    v19 = sub_233168668(0, &qword_256042F70);
    *(_QWORD *)(v15 + 56) = v19;
    *(_QWORD *)(v15 + 32) = v17;
    v20 = v37;
    MEMORY[0x2349313E0](a2);
    v21 = v42;
    v22 = sub_233211CD8(v38, v42, a2[5]);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v21);
    *(_QWORD *)(v15 + 88) = v19;
    *(_QWORD *)(v15 + 64) = v22;
    v23 = (void *)sub_23361E12C();
    v24 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v25 = (void *)objc_opt_self();
    v26 = objc_msgSend(v25, sel_expressionForFunction_arguments_, v23, v24);

    if (objc_msgSend(v26, sel_expressionValueWithObject_context_, 0, 0))
    {
      sub_23361EC24();
      swift_unknownObjectRelease();
      sub_2331683D0(&v39, v41);
      sub_233211368((uint64_t)v41, &v39);
      v28 = v40;
      if (v40)
      {
        v29 = __swift_project_boxed_opaque_existential_1(&v39, v40);
        v30 = *(_QWORD *)(v28 - 8);
        MEMORY[0x24BDAC7A8](v29);
        v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v30 + 16))(v32);
        v33 = sub_23361F20C();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
      }
      else
      {
        v33 = 0;
      }
      v34 = objc_msgSend(v25, sel_expressionForConstantValue_, v33, v35);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
      *(_QWORD *)v18 = v34;
      *(_QWORD *)(v18 + 8) = 0;
      *(_QWORD *)(v18 + 16) = 0;
      *(_QWORD *)(v18 + 24) = 0;
      *(_BYTE *)(v18 + 32) = 0;
    }
    else
    {
      sub_23321A4C8();
      swift_allocError();
      *(_QWORD *)v27 = 0;
      *(_QWORD *)(v27 + 8) = 0;
      *(_BYTE *)(v27 + 16) = 2;
      swift_willThrow();

    }
  }
}

void sub_233218D74(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v5[2];

  sub_2332189B8(a1, a2, (uint64_t)v5);
  if (!v3)
    sub_23321A254(v5, a3);
}

void sub_233218DBC(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;

  v27 = a3;
  v31 = a2[3];
  v7 = *(_QWORD *)(v31 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233623D50;
  v28 = v3;
  sub_23361D058();
  v16 = a2[5];
  v30 = a1;
  v17 = sub_233211CD8(a1, v11, v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v4)
  {
    *(_QWORD *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    v18 = v27;
    v19 = sub_233168668(0, &qword_256042F70);
    *(_QWORD *)(v15 + 56) = v19;
    *(_QWORD *)(v15 + 32) = v17;
    v20 = v29;
    sub_23361D04C();
    v21 = v31;
    v22 = sub_233211CD8(v30, v31, a2[6]);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v21);
    *(_QWORD *)(v15 + 88) = v19;
    *(_QWORD *)(v15 + 64) = v22;
    v23 = (void *)sub_23361E12C();
    v24 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend((id)objc_opt_self(), sel_expressionForFunction_arguments_, v23, v24);

    if (objc_msgSend(v25, sel_expressionType))
    {
      sub_23321A4C8();
      swift_allocError();
      *(_QWORD *)v26 = 0;
      *(_QWORD *)(v26 + 8) = 0;
      *(_BYTE *)(v26 + 16) = 2;
      swift_willThrow();

    }
    else
    {
      *(_QWORD *)v18 = v25;
      *(_QWORD *)(v18 + 8) = 0;
      *(_QWORD *)(v18 + 16) = 0;
      *(_QWORD *)(v18 + 24) = 0;
      *(_BYTE *)(v18 + 32) = 0;
    }
  }
}

_QWORD *sub_23321905C@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_233218DBC, a1);
}

void sub_233219078(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_233219274(a1, a2, MEMORY[0x24BDCCC50], 99, a3);
}

void sub_2332190A0(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void (*v32)(_QWORD *);
  uint64_t v33;

  v28 = a5;
  v29 = a4;
  v32 = a3;
  v9 = a2[3];
  v33 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v5;
  v19(v18);
  v20 = a2[4];
  v31 = a1;
  v21 = sub_233211CD8(a1, v14, v20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (!v6)
  {
    v22 = v21;
    v23 = v28;
    v24 = v29;
    v32(a2);
    v25 = sub_233211CD8(v31, v9, a2[5]);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v21, v25, 0, v24, 0);

    *(_QWORD *)v23 = v26;
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    *(_BYTE *)(v23 + 32) = 1;
  }
}

void sub_23321924C(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_233219274(a1, a2, MEMORY[0x24BDCCFC0], 8, a3);
}

void sub_233219274(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  __int128 v7[2];

  sub_2332190A0(a1, a2, a3, a4, (uint64_t)v7);
  if (!v5)
    sub_23321A254(v7, a5);
}

id sub_2332192CC@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, 0);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_233219320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[4];
  __int128 v13;
  uint64_t v14;

  type metadata accessor for ComparisonResult(0);
  v12[3] = v3;
  v12[0] = a1;
  sub_233211368((uint64_t)v12, &v13);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  if (!v1)
  {
    v5 = v14;
    if (v14)
    {
      v6 = __swift_project_boxed_opaque_existential_1(&v13, v14);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x24BDAC7A8](v6);
      v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_23361F20C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
    }
    else
    {
      v10 = 0;
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

void sub_23321944C(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;

  v15 = sub_233211CD8(a1, a3, a5);
  if (!v7)
  {
    v30 = v15;
    v29 = a7;
    v16 = sub_233211CD8(a1, a4, a6);
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v30, v16, 0, 4, a2);

    v18 = sub_233211CD8(a1, a3, a5);
    v19 = sub_233211CD8(a1, a4, a6);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v18, v19, 0, 0, a2);

    v21 = (void *)sub_233219320(-1);
    v22 = (void *)sub_233219320(1);
    v23 = (void *)objc_opt_self();
    v24 = v20;
    v25 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v24, v21, v22);

    v26 = (void *)sub_233219320(0);
    v27 = v17;
    v28 = objc_msgSend(v23, sel_expressionForConditional_trueExpression_falseExpression_, v27, v26, v25);

    *(_QWORD *)v29 = v28;
    *(_QWORD *)(v29 + 8) = 0;
    *(_QWORD *)(v29 + 16) = 0;
    *(_QWORD *)(v29 + 24) = 0;
    *(_BYTE *)(v29 + 32) = 0;
  }
}

uint64_t sub_2332196D8@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_233219700(a1, a2, MEMORY[0x24BDCD088], 1, a3);
}

uint64_t sub_233219700@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  __int128 v8[2];

  result = sub_233219750(a1, a2, a3, a4, (uint64_t)v8);
  if (!v5)
    return sub_23321A254(v8, a5);
  return result;
}

uint64_t sub_233219750@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, void (*a3)(_QWORD *)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24[2];
  uint64_t v25;

  v22 = a1;
  v23 = a4;
  v21 = a5;
  v7 = a2[3];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v17);
  a3(a2);
  v19 = v25;
  sub_23321944C(v22, v23, v13, v7, a2[4], a2[5], (uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (!v19)
    return sub_23321A254(v24, v21);
  return result;
}

uint64_t sub_233219878@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_233219700(a1, a2, MEMORY[0x24BDCD028], 8, a3);
}

void sub_2332198A0(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v24 = a3;
  v7 = a2[3];
  v27 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v3;
  sub_23361D094();
  v16 = a2[4];
  v26 = a1;
  v17 = sub_233211CD8(a1, v12, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v4)
  {
    v18 = v17;
    v19 = v24;
    MEMORY[0x234931404](a2);
    v20 = sub_233211CD8(v26, v7, a2[5]);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v7);
    v21 = v18;
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v18, v20, 0, 99, 11);

    *(_QWORD *)v19 = v22;
    *(_QWORD *)(v19 + 8) = 0;
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    *(_BYTE *)(v19 + 32) = 1;
  }
}

_QWORD *sub_233219A40@<X0>(uint64_t a1@<X8>)
{
  return sub_233219A5C((_QWORD *(*)(__int128 *__return_ptr))sub_2332198A0, a1);
}

_QWORD *sub_233219A5C@<X0>(_QWORD *(*a1)(__int128 *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  __int128 v5[2];

  result = a1(v5);
  if (!v2)
    return (_QWORD *)sub_23321A254(v5, a2);
  return result;
}

uint64_t sub_233219AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_233219AB8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD130]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219AE4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD230]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219B10(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD1C0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219B3C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCC80]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219B68(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCDB8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219B94(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCDD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219BC0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD0F0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219BEC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD200]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219C18(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCCA8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219C44(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCD10]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219C70(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCCE0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219C9C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD1D8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219CC8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD158]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219CF4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCE28]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219D20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCD50]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219D4C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCEF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219D78(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD058]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219DA4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCFF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219DD0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCFB0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219DFC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCEB8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219E28(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCED0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219E54(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCD80]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219E80(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCE00]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219EAC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCEA0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219ED8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BEE12E0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219F04(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD078]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219F30(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD018]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219F5C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCC60]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219F88(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCFD0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219FB4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCCCF8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233219FE0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD098]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23321A00C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD038]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23321A038(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x234934494](MEMORY[0x24BDCD0B8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void destroy for KeyPathConvertibleContext(id *a1)
{

  swift_release();
}

_QWORD *initializeWithCopy for KeyPathConvertibleContext(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_retain();
  v8 = v5;
  return a1;
}

uint64_t assignWithCopy for KeyPathConvertibleContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v10 = *(void **)(a1 + 24);
  v11 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for KeyPathConvertibleContext(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_release();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for KeyPathConvertibleContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyPathConvertibleContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyPathConvertibleContext()
{
  return &type metadata for KeyPathConvertibleContext;
}

uint64_t sub_23321A254(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_23321A26C(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v4 = a1[3];
  if (!v4)
  {
    v10 = 0;
    v11 = a2[3];
    if (v11)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = sub_23361F20C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = a2[3];
  if (!v11)
    goto LABEL_5;
LABEL_3:
  v12 = __swift_project_boxed_opaque_existential_1(a2, v11);
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  v16 = sub_23361F20C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
LABEL_6:
  v17 = objc_msgSend(v2, sel_initWithOperand_andKeyPath_, v10, v16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_23321A3F0(uint64_t a1)
{
  swift_release();
  return a1;
}

id *sub_23321A418(id *a1)
{

  return a1;
}

uint64_t sub_23321A440(uint64_t a1)
{
  sub_23321A474(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

void sub_23321A474(void *a1, void *a2, uint64_t a3, void *a4, unsigned __int8 a5)
{
  if (a5 >= 2u)
  {
    if (a5 != 2)
      return;

    swift_release();
    a1 = a4;
  }

}

unint64_t sub_23321A4C8()
{
  unint64_t result;

  result = qword_256045D98;
  if (!qword_256045D98)
  {
    result = MEMORY[0x234934494](&unk_23362E528, &type metadata for QueryPredicateError);
    atomic_store(result, (unint64_t *)&qword_256045D98);
  }
  return result;
}

uint64_t sub_23321A50C(uint64_t a1)
{
  uint64_t v1;

  return sub_2332123A8(a1, *(void (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_23321A528(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 32))();
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_23321A558(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      return sub_23361F224();
    }
    return 0;
  }
  if (a3 != 1)
    return a6 == 2 && !(a5 | a4);
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_23361F224();
}

uint64_t sub_23321A5E0(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v6 = v5;
  v22 = a5;
  v12 = sub_23361CEE4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  v16 = a4;
  v17 = a1;
  v18 = a2;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *(_QWORD *)(v6 + 8);
  *(_QWORD *)(v6 + 8) = 0x8000000000000000;
  sub_23328E5D0((uint64_t)v17, (uint64_t)a2, a3, (uint64_t)a4, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v6 + 8) = v23;
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  return ((uint64_t (*)(uint64_t, uint64_t))v20)(v22, v12);
}

uint64_t sub_23321A708(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 64);
  *(_BYTE *)(a2 + 80) = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t sub_23321A730(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyRange(a2, a1);
  return a2;
}

uint64_t sub_23321A764(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *boxed_opaque_existential_0;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13[4];
  __int128 v14;
  uint64_t v15;

  v2 = a1[3];
  v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  v13[3] = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_0, v3, v2);
  sub_233211368((uint64_t)v13, &v14);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if (!v1)
  {
    v6 = v15;
    if (v15)
    {
      v7 = __swift_project_boxed_opaque_existential_1(&v14, v15);
      v8 = *(_QWORD *)(v6 - 8);
      MEMORY[0x24BDAC7A8](v7);
      v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v10);
      v11 = sub_23361F20C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
    }
    else
    {
      v11 = 0;
    }
    v12 = objc_msgSend((id)objc_opt_self(), sel_expressionForConstantValue_, v11);
    swift_unknownObjectRelease();
    return (uint64_t)v12;
  }
  return result;
}

uint64_t sub_23321A8AC(uint64_t a1)
{
  destroy for AnyRange(a1);
  return a1;
}

uint64_t destroy for AnyRange(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  v1 = a1;
  v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 >= 5)
    v2 = *(_DWORD *)a1 + 5;
  if (v2 <= 1)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(unsigned __int8 *)(a2 + 80);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v5;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
        v6 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 64) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
        v7 = 0;
        break;
      case 1:
        v8 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v8;
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        v9 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 64) = v9;
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
        v7 = 1;
        break;
      case 2:
        v10 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v10;
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
        v7 = 2;
        break;
      case 3:
        v11 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
        v7 = 3;
        break;
      case 4:
        v12 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
        v7 = 4;
        break;
      default:
        v4 = *(_DWORD *)a2 + 5;
        continue;
    }
    break;
  }
  *(_BYTE *)(a1 + 80) = v7;
  return a1;
}

uint64_t assignWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v6;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
          v7 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(v2 + 64) = v7;
          *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 72);
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v2 + 40, a2 + 40);
          v8 = 0;
          break;
        case 1:
          v9 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v9;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v2, a2);
          v10 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(v2 + 64) = v10;
          *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 72);
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v2 + 40, a2 + 40);
          v8 = 1;
          break;
        case 2:
          v11 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v11;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v2, a2);
          v8 = 2;
          break;
        case 3:
          v12 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v12;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v2, a2);
          v8 = 3;
          break;
        case 4:
          v13 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(v2 + 24) = v13;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v2, a2);
          v8 = 4;
          break;
        default:
          v5 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
    *(_BYTE *)(v2 + 80) = v8;
  }
  return v2;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          v7 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v2 + 48) = v7;
          *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
          v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v8;
          break;
        case 1:
          v9 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v2 + 48) = v9;
          *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
          v10 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v10;
          v6 = 1;
          break;
        case 2:
          v11 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v11;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 2;
          break;
        case 3:
          v12 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v12;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 3;
          break;
        case 4:
          v13 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v13;
          *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
          v6 = 4;
          break;
        default:
          v5 = *(_DWORD *)a2 + 5;
          continue;
      }
      break;
    }
    *(_BYTE *)(v2 + 80) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for AnyRange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 5)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

uint64_t sub_23321ADF8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 5)
    return (*(_DWORD *)a1 + 5);
  return result;
}

uint64_t sub_23321AE14(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyRange()
{
  return &type metadata for AnyRange;
}

uint64_t sub_23321AE54(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for QueryPredicateError(uint64_t a1)
{
  return sub_23321AE7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23321AE7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s10FinanceKit19QueryPredicateErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23321AE54(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for QueryPredicateError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23321AE54(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23321AE7C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for QueryPredicateError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23321AE7C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryPredicateError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryPredicateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23321B000(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23321B018(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryPredicateError()
{
  return &type metadata for QueryPredicateError;
}

id sub_23321B040(id result, void *a2, uint64_t a3, void *a4, unsigned __int8 a5)
{
  id v6;
  id v7;
  id v8;
  id v9;

  if (a5 == 2)
  {
    v9 = result;
    v6 = a4;
    v7 = v9;
    v8 = a2;
    return (id)swift_retain();
  }
  else if (a5 <= 1u)
  {
    return result;
  }
  return result;
}

void destroy for ExpressionOrPredicate(uint64_t a1)
{
  sub_23321A474(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ExpressionOrPredicate(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23321B040(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ExpressionOrPredicate(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23321B040(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_23321A474(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ExpressionOrPredicate(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_23321A474(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchOrderType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchOrderType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23321B25C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ExpressionOrPredicate()
{
  return &type metadata for ExpressionOrPredicate;
}

uint64_t Transaction.XPCArray.value.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Transaction.XPCArray.value.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___XPCTransactions_value);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Transaction.XPCArray.value.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id Transaction.XPCArray.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___XPCTransactions_value] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id Transaction.XPCArray.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR___XPCTransactions_value] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static Transaction.XPCArray.supportsSecureCoding.getter()
{
  return 1;
}

id Transaction.XPCArray.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316A814(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id Transaction.XPCArray.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316A814(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id Transaction.XPCArray.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Transaction.XPCArray.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Transaction.XPCArray.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23321B614@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___XPCTransactions_value);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_23321B664(uint64_t *a1)
{
  objc_class *v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v2 = *a1;
  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___XPCTransactions_value] = v2;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id Array<A>.xpcValue.getter(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  objc_super v5;

  v2 = (objc_class *)type metadata accessor for Transaction.XPCArray();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR___XPCTransactions_value] = a1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v5, sel_init);
}

{
  objc_class *v2;
  char *v3;
  objc_super v5;

  v2 = (objc_class *)type metadata accessor for Order.XPCArray();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR___XPCOrders_value] = a1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for Transaction.XPCArray()
{
  return objc_opt_self();
}

uint64_t method lookup function for Transaction.XPCArray()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Transaction.XPCArray.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23321B740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = type metadata accessor for RawBankConnectData.Account(0);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v23 = v1;
    v27 = MEMORY[0x24BEE4AF8];
    sub_23327399C(0, v11, 0);
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v25 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_2331684BC(v13, (uint64_t)v10, type metadata accessor for RawBankConnectData.Account);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = v24;
        sub_233168580((uint64_t)v10, (uint64_t)v24, type metadata accessor for RawBankConnectData.LiabilityAccount);
        v16 = *v14;
        v15 = v14[1];
        swift_bridgeObjectRetain();
        v17 = (uint64_t)v14;
        v18 = type metadata accessor for RawBankConnectData.LiabilityAccount;
      }
      else
      {
        sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
        v16 = *v7;
        v15 = v7[1];
        swift_bridgeObjectRetain();
        v17 = (uint64_t)v7;
        v18 = type metadata accessor for RawBankConnectData.AssetAccount;
      }
      sub_233168500(v17, v18);
      v12 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23327399C(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v27;
      }
      v20 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_23327399C(v19 > 1, v20 + 1, 1);
        v12 = v27;
      }
      *(_QWORD *)(v12 + 16) = v20 + 1;
      v21 = v12 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v15;
      v13 += v25;
      --v11;
    }
    while (v11);
  }
  return v12;
}

void sub_23321B984(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  id v29;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    type metadata accessor for ManagedInternalAccount();
    sub_233193A08();
    sub_23361E60C();
    v5 = v24;
    v23 = v25;
    v7 = v26;
    v8 = v27;
    v9 = v28;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a3 + 32);
    v23 = a3 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_23361ED08())
    goto LABEL_36;
  type metadata accessor for ManagedInternalAccount();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v14 = v29;
  swift_unknownObjectRelease();
  v15 = v8;
  v16 = v9;
  if (!v14)
    goto LABEL_36;
  while (1)
  {
    v29 = v14;
    v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if ((v20 & 1) != 0)
      goto LABEL_36;

    v8 = v15;
    v9 = v16;
    if (v5 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v9)
      break;
    v16 = (v9 - 1) & v9;
    v17 = __clz(__rbit64(v9)) | (v8 << 6);
    v15 = v8;
LABEL_24:
    v14 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    if (!v14)
      goto LABEL_36;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    v16 = (v18 - 1) & v18;
    v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  v19 = v8 + 2;
  if (v8 + 2 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 3;
  if (v8 + 3 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 4;
  if (v8 + 4 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    v15 = v19;
    goto LABEL_23;
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v22)
    goto LABEL_36;
  v18 = *(_QWORD *)(v23 + 8 * v15);
  if (v18)
    goto LABEL_23;
  v21 = v8 + 6;
  while (v22 != v21)
  {
    v18 = *(_QWORD *)(v23 + 8 * v21++);
    if (v18)
    {
      v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_2331961F0();
}

unint64_t sub_23321BC7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v17)) + (v8 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      sub_233224414(1uLL);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (unint64_t)sub_2334A4AA4(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v19 = v9;
      v20 = v9[2];
      v21 = v19;
      v22 = v19[3];
      if (v20 >= v22 >> 1)
      {
        result = (unint64_t)sub_2334A4AA4((_QWORD *)(v22 > 1), v20 + 1, 1, v21);
        v21 = (_QWORD *)result;
      }
      v21[2] = v20 + 1;
      v23 = &v21[2 * v20];
      v9 = v21;
      v23[4] = v13;
      v23[5] = v14;
      if (v5)
        goto LABEL_4;
    }
    else
    {
      sub_2331683E0(v15);
      swift_bridgeObjectRelease();
      result = sub_233224414(v15);
      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_29;
      v17 = *(_QWORD *)(v2 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v6)
          goto LABEL_29;
        v17 = *(_QWORD *)(v2 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v6)
            goto LABEL_29;
          v17 = *(_QWORD *)(v2 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v6)
  {
LABEL_29:
    swift_release();
    return (unint64_t)v9;
  }
  v17 = *(_QWORD *)(v2 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

BOOL static BankConnectConsentArbitratingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BankConnectConsentArbitratingError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t BankConnectConsentArbitratingError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

_QWORD *BankConnectConsentArbiter.__allocating_init(store:webClientProvider:messagesManager:dataSourceProvider:widgetRefresher:deviceInfo:overlapDetector:fraudAssessmentLoader:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 *a9)
{
  _QWORD *v17;

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  sub_23318B020(a2, (uint64_t)(v17 + 3));
  sub_23318B020(a3, (uint64_t)(v17 + 8));
  sub_23318B020(a4, (uint64_t)(v17 + 13));
  sub_23318B020(a5, (uint64_t)(v17 + 18));
  v17[23] = a6;
  v17[24] = a7;
  sub_23318B020(a8, (uint64_t)(v17 + 25));
  sub_23318B020(a9, (uint64_t)(v17 + 30));
  return v17;
}

_QWORD *BankConnectConsentArbiter.init(store:webClientProvider:messagesManager:dataSourceProvider:widgetRefresher:deviceInfo:overlapDetector:fraudAssessmentLoader:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, uint64_t a7, __int128 *a8, __int128 *a9)
{
  _QWORD *v9;

  v9[2] = a1;
  sub_23318B020(a2, (uint64_t)(v9 + 3));
  sub_23318B020(a3, (uint64_t)(v9 + 8));
  sub_23318B020(a4, (uint64_t)(v9 + 13));
  sub_23318B020(a5, (uint64_t)(v9 + 18));
  v9[23] = a6;
  v9[24] = a7;
  sub_23318B020(a8, (uint64_t)(v9 + 25));
  sub_23318B020(a9, (uint64_t)(v9 + 30));
  return v9;
}

uint64_t BankConnectConsentArbiter.insertOrUpdateIfValid(_:forInstitutionID:using:userPresence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = v6;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  type metadata accessor for BankConnectConsentArbitratingConfiguration();
  v7[13] = swift_task_alloc();
  type metadata accessor for RawBankConnectData.Consent(0);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23321C11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  void *v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t type;
  uint64_t v37;
  uint64_t v38[2];

  sub_2331684BC(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 120), type metadata accessor for RawBankConnectData.Consent);
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  sub_2331684BC(v2, v1, type metadata accessor for RawBankConnectData.Consent);
  sub_2331684BC(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  swift_bridgeObjectRetain_n();
  v6 = sub_23361DB68();
  v7 = sub_23361E780();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(uint64_t **)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 72);
  if (v8)
  {
    v34 = *(_QWORD *)(v0 + 64);
    v12 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38[0] = v37;
    *(_DWORD *)v12 = 136315650;
    v33 = v9;
    v14 = *v10;
    v13 = v10[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_233164DCC(v14, v13, v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v10, type metadata accessor for RawBankConnectData.Consent);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_233164DCC(v34, v11, v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    v15 = BankConnectConsentArbitratingConfiguration.debugDescription.getter();
    *(_QWORD *)(v0 + 40) = sub_233164DCC(v15, v16, v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500(v33, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
    _os_log_impl(&dword_233151000, v6, v7, "Arbitrating a consent with consentID: %s for institutionID: %s using configuration: %s.", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v37, -1, -1);
    MEMORY[0x234934590](v12, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 112), type metadata accessor for RawBankConnectData.Consent);
    swift_bridgeObjectRelease_n();
    sub_233168500(v9, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  }

  v17 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 96) + 16) + 16), sel_newBackgroundContext);
  *(_QWORD *)(v0 + 128) = v17;
  *(_QWORD *)(swift_task_alloc() + 16) = v17;
  sub_23361E960();
  v18 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  v21 = (_QWORD *)swift_task_alloc();
  v21[2] = v20;
  v21[3] = v19;
  v21[4] = v17;
  v21[5] = v18;
  sub_23361E960();
  swift_task_dealloc();
  v22 = *(unsigned __int8 *)(v0 + 172);
  if (qword_254246F70 != -1)
    swift_once();
  v23 = (void *)qword_254246F68;
  v24 = (void *)sub_23361E12C();
  LODWORD(v23) = objc_msgSend(v23, sel_BOOLForKey_, v24);

  if ((_DWORD)v23)
  {
    swift_bridgeObjectRetain_n();
    v25 = sub_23361DB68();
    v26 = sub_23361E768();
    v27 = os_log_type_enabled(v25, v26);
    v28 = *(_QWORD *)(v0 + 72);
    if (v27)
    {
      v35 = *(_QWORD *)(v0 + 64);
      v29 = swift_slowAlloc();
      type = swift_slowAlloc();
      v38[0] = type;
      *(_DWORD *)v29 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_233164DCC(v35, v28, v38);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 1024;
      *(_DWORD *)(v0 + 168) = v22;
      sub_23361EBC4();
      swift_arrayDestroy();
      MEMORY[0x234934590](type, -1, -1);
      MEMORY[0x234934590](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  else if (!v22)
  {
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v30;
    *v30 = v0;
    v30[1] = sub_23321C828;
    return sub_23321D720(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 88), (uint64_t)v17);
  }
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v32;
  *v32 = v0;
  v32[1] = sub_23321C75C;
  return sub_23321CDE0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), (uint64_t)v17);
}

uint64_t sub_23321C75C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321C7C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  sub_233168500(v1, type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321C828()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321C88C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  sub_233168500(v1, type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321C8F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  sub_233168500(v1, type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectConsentArbitratingConfiguration.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = v0;
  v2 = sub_23361D6A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BankConnectConsentArbitratingConfiguration();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return 0x746E65736E6F632ELL;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v13[0] = 0x65736E6F6365722ELL;
  v13[1] = 0xEB0000000028746ELL;
  sub_23361D64C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  v11 = v13[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

id sub_23321CACC(void *a1)
{
  id v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v6[0] = 0;
  v3 = objc_msgSend(a1, sel_setQueryGenerationFromToken_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_23361D1B4();

  return (id)swift_willThrow();
}

void sub_23321CBA4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  uint64_t v4;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  type metadata accessor for ManagedInstitution();
  v9 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(a1, a2, a3);
  if (!v4)
  {
    v10 = v9;
    if (v9)
    {
      v11 = objc_msgSend(v9, sel_multipleConsentsEnabled);

      *a4 = v11;
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v12 = sub_23361DB80();
      __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v13 = sub_23361DB68();
      v14 = sub_23361E768();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        v18 = v16;
        *(_DWORD *)v15 = 136315138;
        swift_bridgeObjectRetain();
        sub_233164DCC(a1, a2, &v18);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v13, v14, "Expected institution with institutionID: %s, but it wasn't found in the store. Aborting arbitration.", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v16, -1, -1);
        MEMORY[0x234934590](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_233223B30();
      swift_allocError();
      *(_OWORD *)v17 = xmmword_23362E5A0;
      *(_BYTE *)(v17 + 16) = 2;
      swift_willThrow();
    }
  }
}

uint64_t sub_23321CDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[16] = a7;
  v8[17] = v7;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a3;
  v8[13] = a4;
  v8[10] = a1;
  v8[11] = a2;
  type metadata accessor for BankConnectConsentArbitratingConfiguration();
  v8[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045F48);
  v8[21] = swift_task_alloc();
  type metadata accessor for RawBankConnectData.Consent(0);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23321CED8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t *v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_2331684BC(v0[11], v0[24], type metadata accessor for RawBankConnectData.Consent);
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = v0[23];
  v2 = v0[24];
  v3 = sub_23361DB80();
  v0[25] = __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  sub_2331684BC(v2, v1, type metadata accessor for RawBankConnectData.Consent);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (uint64_t *)v0[23];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = *v7;
    v10 = v7[1];
    swift_bridgeObjectRetain();
    v0[9] = sub_233164DCC(v11, v10, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Consent);
    _os_log_impl(&dword_233151000, v4, v5, "Attempting to insert or update consent with consentID: %s using multiple  consent mode.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    sub_233168500(v0[23], type metadata accessor for RawBankConnectData.Consent);
  }

  v12 = (_QWORD *)swift_task_alloc();
  v0[26] = v12;
  *v12 = v0;
  v12[1] = sub_23321D0EC;
  return sub_23321DBF0(v0[21], v0[11], v0[15]);
}

uint64_t sub_23321D0EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321D150()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t *v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  v1 = v0[18];
  v2 = v0[14];
  sub_233177068(v0[17] + 200, (uint64_t)(v0 + 2));
  v45 = v0[6];
  v46 = v0[5];
  v47 = (uint64_t)(v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v46);
  sub_2331684BC(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v4 = 1;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3);
  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (v5 != 1)
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v7 + 32))(v0[19], v0[18], v6);
    v4 = 0;
  }
  v8 = v0[27];
  v9 = v0[20];
  v10 = v0[19];
  v44 = v0[16];
  v12 = v0[12];
  v11 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v10, v4, 1, v6);
  sub_23322391C(v10, v9);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_23321B740(v13);
  swift_bridgeObjectRelease();
  v15 = sub_2331C92EC(v14);
  swift_bridgeObjectRelease();
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v12, v11, v9, v15, v44, v46);
  if (v8)
  {
    v17 = v0[24];
    v19 = v0[20];
    v18 = v0[21];
    swift_bridgeObjectRelease();
    sub_233168608(v19, &qword_254246740);
    sub_233168500(v17, type metadata accessor for RawBankConnectData.Consent);
    sub_233168608(v18, &qword_256045F48);
    __swift_destroy_boxed_opaque_existential_0(v47);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v43 = (uint64_t (*)(void))v0[1];
    return v43();
  }
  v20 = v16;
  sub_233168608(v0[20], &qword_254246740);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v47);
  if ((sub_233222CA4(v20) & 1) != 0)
  {
    v21 = v0[24];
    v22 = v0[22];
    swift_bridgeObjectRelease();
    sub_2331684BC(v21, v22, type metadata accessor for RawBankConnectData.Consent);
    v23 = sub_23361DB68();
    v24 = sub_23361E768();
    v25 = os_log_type_enabled(v23, v24);
    v26 = (uint64_t *)v0[22];
    if (v25)
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v49 = v28;
      *(_DWORD *)v27 = 136315138;
      v30 = *v26;
      v29 = v26[1];
      swift_bridgeObjectRetain();
      v0[8] = sub_233164DCC(v30, v29, &v49);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v26, type metadata accessor for RawBankConnectData.Consent);
      _os_log_impl(&dword_233151000, v23, v24, "Partial overlap detected between consent with consentID: %s and existing consents on device. Invalid configuration, aborting arbitration.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v28, -1, -1);
      MEMORY[0x234934590](v27, -1, -1);
    }
    else
    {
      sub_233168500(v0[22], type metadata accessor for RawBankConnectData.Consent);
    }

    v38 = v0[24];
    v39 = v0[21];
    sub_233223AEC();
    swift_allocError();
    *v40 = 0;
    swift_willThrow();
    sub_233168500(v38, type metadata accessor for RawBankConnectData.Consent);
    sub_233168608(v39, &qword_256045F48);
    goto LABEL_11;
  }
  v31 = v0[21];
  v33 = v0[13];
  v32 = v0[14];
  v34 = v0[12];
  v35 = swift_task_alloc();
  v48 = *((_OWORD *)v0 + 8);
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v33;
  *(_OWORD *)(v35 + 32) = v48;
  *(_QWORD *)(v35 + 48) = v31;
  *(_QWORD *)(v35 + 56) = v20;
  *(_QWORD *)(v35 + 64) = v32;
  v36 = (_QWORD *)swift_task_alloc();
  v36[2] = sub_233223AC8;
  v36[3] = v35;
  v36[4] = v48;
  type metadata accessor for BankConnectConsent();
  sub_23361E960();
  v37 = v0[24];
  v42 = v0[21];
  swift_task_dealloc();
  sub_233168500(v37, type metadata accessor for RawBankConnectData.Consent);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_233168608(v42, &qword_256045F48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_23321D688()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 192), type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045F48);
  v7[10] = swift_task_alloc();
  type metadata accessor for RawBankConnectData.Consent(0);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23321D7B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t *v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_2331684BC(v0[4], v0[12], type metadata accessor for RawBankConnectData.Consent);
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = v0[11];
  v2 = v0[12];
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  sub_2331684BC(v2, v1, type metadata accessor for RawBankConnectData.Consent);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (uint64_t *)v0[11];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = *v7;
    v10 = v7[1];
    swift_bridgeObjectRetain();
    v0[2] = sub_233164DCC(v11, v10, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Consent);
    _os_log_impl(&dword_233151000, v4, v5, "Attempting to insert or update consent with consentID: %s using single  consent mode.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    sub_233168500(v0[11], type metadata accessor for RawBankConnectData.Consent);
  }

  v12 = (_QWORD *)swift_task_alloc();
  v0[13] = v12;
  *v12 = v0;
  v12[1] = sub_23321D9C4;
  return sub_23321DBF0(v0[10], v0[4], v0[7]);
}

uint64_t sub_23321D9C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321DA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = swift_task_alloc();
  v9 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 48) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = sub_2332244A4;
  v5[3] = v4;
  v5[4] = v9;
  type metadata accessor for BankConnectConsent();
  sub_23361E960();
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  sub_233168500(v6, type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  sub_233168608(v7, &qword_256045F48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321DB90()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 96), type metadata accessor for RawBankConnectData.Consent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321DBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  type metadata accessor for RawBankConnectData.Consent(0);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23321DC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t *v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD *v20;
  void (*v21)(uint64_t, id, uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 88);
  sub_2331684BC(v1, *(_QWORD *)(v0 + 120), type metadata accessor for RawBankConnectData.Consent);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1
                                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256043660) + 36));
  v2 = qword_256041CA0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = sub_23361DB80();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  sub_2331684BC(v4, v3, type metadata accessor for RawBankConnectData.Consent);
  v6 = sub_23361DB68();
  v7 = sub_23361E780();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(uint64_t **)(v0 + 112);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v22 = v11;
    *(_DWORD *)v10 = 136315138;
    v13 = *v9;
    v12 = v9[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_233164DCC(v13, v12, &v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.Consent);
    _os_log_impl(&dword_233151000, v6, v7, "Fetching granted accounts for consent with consentID: %s.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 112), type metadata accessor for RawBankConnectData.Consent);
  }

  v14 = *(_QWORD **)(v0 + 104);
  v15 = v14[33];
  v16 = v14[34];
  __swift_project_boxed_opaque_existential_1(v14 + 30, v15);
  *(_BYTE *)(v0 + 232) = 1;
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_23361E12C();
  v19 = objc_msgSend(v17, sel_bundleWithIdentifier_, v18);
  *(_QWORD *)(v0 + 144) = v19;

  if (v19)
  {
    v21 = (void (*)(uint64_t, id, uint64_t, uint64_t))(**(int **)(v16 + 8) + *(_QWORD *)(v16 + 8));
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v20;
    *v20 = v0;
    v20[1] = sub_23321DF20;
    v21(v0 + 232, v19, v15, v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23321DF20()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 144);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23321DF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, _QWORD *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 128);
  sub_233177068(*(_QWORD *)(v0 + 104) + 240, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  *(_BYTE *)(v0 + 234) = 1;
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = sub_233208C1C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  *(_QWORD *)(v0 + 160) = v4;
  v7 = (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v5;
  *v5 = v0;
  v5[1] = sub_23321E154;
  return v7(v0 + 234, v4, v2, v3);
}

uint64_t sub_23321E154(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 184) = a1;
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23321E1D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, int *);

  v0[8] = v0[23];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v1 = v0[15];
  v3 = v0[12];
  v2 = (_QWORD *)v0[13];
  v4 = v2[6];
  v5 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v0[24] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v0[25] = v7;
  v7[2] = v6;
  v7[3] = v1;
  v7[4] = v0 + 8;
  v7[5] = v3;
  v7[6] = v2;
  v10 = (uint64_t (*)(uint64_t, int *))((char *)&dword_256057888 + dword_256057888);
  v8 = (_QWORD *)swift_task_alloc();
  v0[26] = v8;
  *v8 = v0;
  v8[1] = sub_23321E2B8;
  return v10(v0[10], (int *)&unk_256045F80);
}

uint64_t sub_23321E2B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321E324()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_233168500(v1, type metadata accessor for RawBankConnectData.Consent);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23321E384()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 176);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v2 = v1;
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E768();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 176);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 72) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v4, v5, "Fraud assessment computation has failed, proceeding without it: %@.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 176);

  }
  v12 = *(_QWORD **)(v0 + 104);

  v13 = v12 + 30;
  type metadata accessor for FraudAssessmentResult();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v0 + 64) = v14;
  v15 = v12[33];
  v16 = v12[34];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  *(_BYTE *)(v0 + 235) = 1;
  *(_BYTE *)(v0 + 233) = 2;
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v16 + 24) + *(_QWORD *)(v16 + 24));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v17;
  *v17 = v0;
  v17[1] = sub_23321E598;
  return v19(v0 + 235, v0 + 233, v15, v16);
}

uint64_t sub_23321E598()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321E5EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, int *);

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD **)(v0 + 104);
  v4 = v2[6];
  v5 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  *(_QWORD *)(v0 + 192) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v7;
  v7[2] = v6;
  v7[3] = v1;
  v7[4] = v0 + 64;
  v7[5] = v3;
  v7[6] = v2;
  v10 = (uint64_t (*)(uint64_t, int *))((char *)&dword_256057888 + dword_256057888);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v8;
  *v8 = v0;
  v8[1] = sub_23321E2B8;
  return v10(*(_QWORD *)(v0 + 80), (int *)&unk_256045F80);
}

uint64_t sub_23321E6CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_233168500(v1, type metadata accessor for RawBankConnectData.Consent);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23321E72C(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  id *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id *v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  id v41;
  uint8_t *v42;
  _BYTE *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  id *v51;
  uint64_t v52;
  id v53[2];

  v53[1] = *(id *)MEMORY[0x24BDAC8D0];
  v13 = type metadata accessor for BankConnectResponseHeaders();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  v16 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(a1, a2, (uint64_t)a3);
  if (!v6)
  {
    v17 = (void *)v16;
    if (v16)
    {
      v49 = a6;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045F48);
      v19 = sub_2331684BC(a5 + *(int *)(v18 + 28), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectResponseHeaders);
      v51 = &v48;
      MEMORY[0x24BDAC7A8](v19);
      *(&v48 - 4) = v17;
      *(&v48 - 3) = a3;
      *(&v48 - 2) = a4;
      *(&v48 - 1) = v15;
      type metadata accessor for ManagedConsent();
      v20 = a4;
      v21 = v17;
      sub_23361E960();
      v50 = v20;
      v48 = v21;
      v27 = (id *)v53[0];
      sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.Consent);
      v51 = v27;
      v28 = objc_msgSend(v27, sel_accountObjects);
      v53[0] = 0;
      type metadata accessor for ManagedInternalAccount();
      sub_233193A08();
      sub_23361E5D0();

      v29 = v53[0];
      if (!v53[0])
      {
        if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
        {
          if (sub_23361EF30())
          {
            sub_2333EF9EC(MEMORY[0x24BEE4AF8]);
            v29 = v47;
          }
          else
          {
            v29 = (id)MEMORY[0x24BEE4B08];
          }
        }
        else
        {
          v29 = (id)MEMORY[0x24BEE4B08];
        }
      }
      v31 = swift_bridgeObjectRetain();
      v32 = sub_23321B740(v31);
      swift_bridgeObjectRelease();
      sub_23321EE00((uint64_t)v29, v32, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = objc_msgSend(v51, sel_accountObjects);
      v53[0] = 0;
      sub_23361E5D0();

      if (!v53[0] && (MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23361EF30())
        sub_2333EF9EC(MEMORY[0x24BEE4AF8]);
      v34 = v51;
      v35 = objc_msgSend(v51, sel_consentID);
      sub_23361E150();

      v36 = v50;
      sub_23321EF5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((*(uint64_t (**)(void))(v36[24] + 40))() & 1) != 0)
      {
        if (qword_256041CA0 != -1)
          swift_once();
        v37 = sub_23361DB80();
        __swift_project_value_buffer(v37, (uint64_t)qword_2560495B0);
        v38 = sub_23361DB68();
        v39 = sub_23361E780();
        v40 = os_log_type_enabled(v38, v39);
        v41 = v48;
        if (v40)
        {
          v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_233151000, v38, v39, "Wallet has been deleted, aborting arbitration.", v42, 2u);
          MEMORY[0x234934590](v42, -1, -1);
        }

        sub_233223AEC();
        swift_allocError();
        *v43 = 1;
        swift_willThrow();

      }
      else
      {
        v53[0] = 0;
        if ((objc_msgSend(a3, sel_save_, v53) & 1) != 0)
        {
          v44 = v53[0];
          BankConnectConsent.init(_:)(v34, v49);
        }
        else
        {
          v45 = v53[0];
          sub_23361D1B4();

          swift_willThrow();
        }
        v46 = v48;

      }
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v22 = sub_23361DB80();
      __swift_project_value_buffer(v22, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v23 = sub_23361DB68();
      v24 = sub_23361E768();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = (void *)swift_slowAlloc();
        v53[0] = v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain();
        v52 = sub_233164DCC(a1, a2, (uint64_t *)v53);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v23, v24, "Institution with ID %s not found, aborting arbitration.", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v26, -1, -1);
        MEMORY[0x234934590](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_233223B30();
      swift_allocError();
      *(_OWORD *)v30 = xmmword_23362E5A0;
      *(_BYTE *)(v30 + 16) = 2;
      swift_willThrow();
    }
  }
}

uint64_t sub_23321EE00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  _QWORD v12[6];

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  v7[5] = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_233223C54;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_233167E10;
  v12[5] = v8;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2332714C0;
  v12[3] = &block_descriptor_2;
  v9 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v10 = a3;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWait_, v9);
  _Block_release(v9);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v10 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23321EF5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  sub_23361E960();
  if (v1)
    return swift_bridgeObjectRelease();
  v4 = v0[21];
  v3 = v0[22];
  __swift_project_boxed_opaque_existential_1(v0 + 18, v4);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = swift_bridgeObjectRetain();
  v5(v6, v4, v3);
  return swift_bridgeObjectRelease_n();
}

void sub_23321F024(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  id v50;
  uint8_t *v51;
  _BYTE *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64[2];

  v61 = a7;
  v62 = a6;
  v64[1] = *(id *)MEMORY[0x24BDAC8D0];
  v15 = type metadata accessor for BankConnectResponseHeaders();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  v18 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(a1, a2, a3);
  if (!v8)
  {
    v19 = (void *)v18;
    v20 = a8;
    v21 = (uint64_t)v62;
    v58 = (void *)a3;
    v59 = a5;
    v60 = a4;
    if (v18)
    {
      v57 = v20;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045F48);
      v23 = (uint64_t)v17;
      sub_2331684BC(v59 + *(int *)(v22 + 28), (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectResponseHeaders);
      v24 = v19;
      v25 = sub_23321BC7C(v21);
      v26 = sub_2331C92EC(v25);
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v27);
      *(&v57 - 6) = v60;
      *(&v57 - 5) = v23;
      v28 = v58;
      *(&v57 - 4) = (uint64_t)v24;
      *(&v57 - 3) = (uint64_t)v28;
      v29 = (uint64_t)v61;
      *(&v57 - 2) = v26;
      *(&v57 - 1) = v29;
      type metadata accessor for ManagedConsent();
      sub_23361E960();
      v62 = v24;
      v35 = v64[0];
      sub_233168500(v23, type metadata accessor for RawBankConnectData.Consent);
      swift_bridgeObjectRelease();
      v61 = v35;
      v36 = objc_msgSend(v35, sel_accountObjects);
      v64[0] = 0;
      type metadata accessor for ManagedInternalAccount();
      sub_233193A08();
      sub_23361E5D0();

      v37 = v64[0];
      if (!v64[0])
      {
        if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
        {
          if (sub_23361EF30())
          {
            sub_2333EF9EC(MEMORY[0x24BEE4AF8]);
            v37 = v56;
          }
          else
          {
            v37 = (id)MEMORY[0x24BEE4B08];
          }
          v28 = v58;
        }
        else
        {
          v37 = (id)MEMORY[0x24BEE4B08];
        }
      }
      v38 = swift_bridgeObjectRetain();
      v39 = sub_23321B740(v38);
      swift_bridgeObjectRelease();
      sub_23321EE00((uint64_t)v37, v39, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v61;
      v41 = objc_msgSend(v61, sel_accountObjects);
      v64[0] = 0;
      sub_23361E5D0();

      if (!v64[0] && (MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
      {
        if (sub_23361EF30())
          sub_2333EF9EC(MEMORY[0x24BEE4AF8]);
        v42 = v60;
        v28 = v58;
      }
      else
      {
        v42 = v60;
      }
      v43 = objc_msgSend(v40, sel_consentID);
      sub_23361E150();

      sub_23321EF5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((*(uint64_t (**)(void))(*(_QWORD *)(v42 + 192) + 40))() & 1) != 0)
      {
        v45 = v40;
        if (qword_256041CA0 != -1)
          swift_once();
        v46 = sub_23361DB80();
        __swift_project_value_buffer(v46, (uint64_t)qword_2560495B0);
        v47 = sub_23361DB68();
        v48 = sub_23361E780();
        v49 = os_log_type_enabled(v47, v48);
        v50 = v62;
        if (v49)
        {
          v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v51 = 0;
          _os_log_impl(&dword_233151000, v47, v48, "Wallet has been deleted, aborting arbitration.", v51, 2u);
          MEMORY[0x234934590](v51, -1, -1);
        }

        sub_233223AEC();
        swift_allocError();
        *v52 = 1;
        swift_willThrow();

      }
      else
      {
        v64[0] = 0;
        if ((objc_msgSend(v28, sel_save_, v64) & 1) != 0)
        {
          v53 = v64[0];
          BankConnectConsent.init(_:)(v40, v57);
        }
        else
        {
          v54 = v64[0];
          sub_23361D1B4();

          swift_willThrow();
        }
        v55 = v62;

      }
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v30 = sub_23361DB80();
      __swift_project_value_buffer(v30, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v31 = sub_23361DB68();
      v32 = sub_23361E768();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = (void *)swift_slowAlloc();
        v64[0] = v34;
        *(_DWORD *)v33 = 136315138;
        swift_bridgeObjectRetain();
        v63 = sub_233164DCC(a1, a2, (uint64_t *)v64);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v31, v32, "Institution with ID %s not found, aborting arbitration.", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v34, -1, -1);
        MEMORY[0x234934590](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_233223B30();
      swift_allocError();
      *(_OWORD *)v44 = xmmword_23362E5A0;
      *(_BYTE *)(v44 + 16) = 2;
      swift_willThrow();
    }
  }
}

uint64_t sub_23321F758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v6[13] = type metadata accessor for BankConnectWebServiceAccountsRequest(0);
  v6[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23321F7BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v9;

  v2 = v0[13];
  v1 = v0[14];
  v4 = v0[10];
  v3 = v0[11];
  sub_2331684BC(v0[9], v1, type metadata accessor for RawBankConnectData.Consent);
  type metadata accessor for BankConnectWebServiceAccountsRequest.ConsentType(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 24);
  sub_2331684BC(v3, v1 + *(int *)(v2 + 24), (uint64_t (*)(_QWORD))type metadata accessor for UserPresence);
  v7 = (_QWORD *)(v1 + *(int *)(v2 + 20));
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  v0[5] = v2;
  v0[6] = (uint64_t)&protocol witness table for BankConnectWebServiceAccountsRequest;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 2);
  sub_2331684BC(v1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for BankConnectWebServiceAccountsRequest);
  v9 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_23321F8C0;
  return sub_2335B8790((uint64_t)(v0 + 2), 1u, 0, 1);
}

uint64_t sub_23321F8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[16] = a1;
  v5[17] = a2;
  v5[18] = a3;
  v5[19] = v3;
  swift_task_dealloc();
  if (!v3)
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
  return swift_task_switch();
}

uint64_t sub_23321F938()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  sub_2335A31A4(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(void **)(v0 + 144), *(_QWORD **)(v0 + 56));
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(void **)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  if (v1)
  {

    sub_23316BEA4(v4, v3);
    *(_QWORD *)(v0 + 168) = v1;
    v5 = *(_QWORD **)(v0 + 96);
    sub_233168500(*(_QWORD *)(v0 + 112), type metadata accessor for BankConnectWebServiceAccountsRequest);
    v6 = v5[33];
    v7 = v5[34];
    __swift_project_boxed_opaque_existential_1(v5 + 30, v6);
    *(_WORD *)(v0 + 184) = 1;
    v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v8;
    *v8 = v0;
    v8[1] = sub_23321FBB8;
    v9 = v0 + 184;
    v10 = v0 + 185;
    v11 = v6;
    v12 = v7;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD **)(v0 + 96);

    sub_23316BEA4(v4, v3);
    sub_233168500(v13, type metadata accessor for BankConnectWebServiceAccountsRequest);
    v15 = v14[33];
    v16 = v14[34];
    __swift_project_boxed_opaque_existential_1(v14 + 30, v15);
    *(_WORD *)(v0 + 186) = 257;
    v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v16 + 24) + *(_QWORD *)(v16 + 24));
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v17;
    *v17 = v0;
    v17[1] = sub_23321FB60;
    v9 = v0 + 186;
    v10 = v0 + 187;
    v11 = v15;
    v12 = v16;
  }
  return v19(v9, v10, v11, v12);
}

uint64_t sub_23321FAA0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD **)(v0 + 96);
  sub_233168500(*(_QWORD *)(v0 + 112), type metadata accessor for BankConnectWebServiceAccountsRequest);
  v2 = v1 + 30;
  v3 = v1[33];
  v4 = v1[34];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(_WORD *)(v0 + 184) = 1;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_23321FBB8;
  return v7(v0 + 184, v0 + 185, v3, v4);
}

uint64_t sub_23321FB60()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23321FBB8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23321FC0C()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectConsentArbiter.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  __swift_destroy_boxed_opaque_existential_0(v0 + 200);
  __swift_destroy_boxed_opaque_existential_0(v0 + 240);
  return v0;
}

uint64_t BankConnectConsentArbiter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  __swift_destroy_boxed_opaque_existential_0(v0 + 200);
  __swift_destroy_boxed_opaque_existential_0(v0 + 240);
  return swift_deallocClassInstance();
}

uint64_t sub_23321FCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_2331676FC;
  return BankConnectConsentArbiter.insertOrUpdateIfValid(_:forInstitutionID:using:userPresence:)(a1, a2, a3, a4, a5, a6);
}

void sub_23321FD88(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id *v31;
  uint64_t v32;
  unint64_t v33;
  id *v34;
  uint64_t v35;
  _QWORD *v36;
  id *v37;
  uint64_t v38;
  uint64_t v39;
  id *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  id *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  id *v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  id *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  id *v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  id *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint8_t *v97;
  id *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id *v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  char *v120;
  id *v121;
  unint64_t v122;
  _QWORD *v123;
  id *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint8_t *v128;
  id v129;
  uint8_t *v130;
  id *v131;
  _QWORD v132[5];
  _QWORD v133[5];
  _BYTE v134[32];
  uint64_t v135;
  _BYTE v136[40];
  _QWORD v137[6];
  uint64_t v138[25];
  objc_super v139;
  id *v140;

  v125 = a4;
  v119 = a3;
  v129 = a2;
  v123 = a5;
  v6 = type metadata accessor for ManagedConsentDeleter.Metadata();
  v127 = *(_QWORD *)(v6 - 8);
  v128 = (uint8_t *)v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v126 = (uint64_t)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v130 = (uint8_t *)&v114 - v9;
  v10 = sub_23361D634();
  v121 = *(id **)(v10 - 8);
  v122 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v120 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RawBankConnectData.Consent(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v118 = (uint64_t *)((char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (id *)((char *)&v114 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v114 - v18;
  v20 = type metadata accessor for ManagedConsent();
  v124 = a1;
  v21 = objc_msgSend(a1, "id");
  v22 = sub_23361E150();
  v24 = v23;

  v139.receiver = (id)swift_getObjCClassFromMetadata();
  v139.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v25 = objc_msgSendSuper2(&v139, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_233623D60;
  *(_QWORD *)(v26 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v26 + 64) = sub_2331683F0();
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v24;
  swift_bridgeObjectRetain();
  v27 = (void *)sub_23361E6B4();
  objc_msgSend(v25, sel_setPredicate_, v27);

  v28 = (uint64_t)v140;
  v29 = sub_23361E984();
  if (v28)
  {
    swift_bridgeObjectRelease();

    return;
  }
  v30 = v29;
  v131 = 0;
  v31 = v124;
  v140 = v17;
  v32 = (uint64_t)v123;
  v116 = v20;
  v117 = v19;
  swift_bridgeObjectRelease();

  v33 = v30 >> 62;
  if (v30 >> 62)
    goto LABEL_53;
  v34 = (id *)v30;
  v35 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v36 = v125;
  v37 = v31;
  v31 = v131;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    if (qword_256041CA0 != -1)
      swift_once();
    v53 = sub_23361DB80();
    __swift_project_value_buffer(v53, (uint64_t)qword_2560495B0);
    v54 = v37;
    v55 = sub_23361DB68();
    v56 = sub_23361E780();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v140 = (id *)swift_slowAlloc();
      v138[0] = (uint64_t)v140;
      v130 = v57;
      *(_DWORD *)v57 = 136315138;
      v128 = v57 + 4;
      v58 = objc_msgSend(v54, "id");
      v59 = v32;
      v60 = sub_23361E150();
      v62 = v61;

      v36 = v125;
      v63 = v60;
      v32 = v59;
      v137[0] = sub_233164DCC(v63, v62, v138);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      v64 = v130;
      _os_log_impl(&dword_233151000, v55, v56, "No existing consent found for institutionID: %s, inserting a new consent.", v130, 0xCu);
      v65 = (uint64_t)v140;
      swift_arrayDestroy();
      MEMORY[0x234934590](v65, -1, -1);
      MEMORY[0x234934590](v64, -1, -1);

    }
    else
    {

    }
    v85 = v129;
    v86 = (uint64_t)v117;
    sub_2331684BC((uint64_t)v36, (uint64_t)v117, type metadata accessor for RawBankConnectData.Consent);
    LOBYTE(v138[0]) = 0;
    *(_QWORD *)v32 = ManagedConsent.__allocating_init(_:consentStatus:managedInstitution:context:)(v86, (unsigned __int8 *)v138, v54, v85);
    return;
  }
  v115 = v33;
  if (v35 != 1)
  {
    v124 = v34;
    if (qword_256041CA0 != -1)
      swift_once();
    v66 = sub_23361DB80();
    __swift_project_value_buffer(v66, (uint64_t)qword_2560495B0);
    v67 = v118;
    sub_2331684BC((uint64_t)v36, (uint64_t)v118, type metadata accessor for RawBankConnectData.Consent);
    v68 = v37;
    v69 = sub_23361DB68();
    v70 = sub_23361E780();
    v71 = os_log_type_enabled(v69, v70);
    v121 = v68;
    if (v71)
    {
      v72 = swift_slowAlloc();
      v140 = (id *)swift_slowAlloc();
      v138[0] = (uint64_t)v140;
      *(_DWORD *)v72 = 136315394;
      v122 = v72 + 4;
      v73 = v68;
      v74 = objc_msgSend(v68, "id");
      v75 = sub_23361E150();
      v77 = v76;

      v137[0] = sub_233164DCC(v75, v77, v138);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      v78 = *v67;
      v79 = v67[1];
      swift_bridgeObjectRetain();
      v137[0] = sub_233164DCC(v78, v79, v138);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v67, type metadata accessor for RawBankConnectData.Consent);
      _os_log_impl(&dword_233151000, v69, v70, "Multiple consents found for institutionID: %s. It's client configuration indicates that only a single consent is supported. Removing existing consents and replacing it them with consentID: %s.", (uint8_t *)v72, 0x16u);
      v31 = v140;
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      MEMORY[0x234934590](v72, -1, -1);
    }
    else
    {

      sub_233168500((uint64_t)v67, type metadata accessor for RawBankConnectData.Consent);
    }

    v33 = (unint64_t)v124;
    memset(v137, 0, 40);
    sub_233177068(v119 + 64, (uint64_t)v136);
    v135 = 0;
    memset(v134, 0, sizeof(v134));
    v133[3] = &type metadata for BankConnectPaymentPassDataSourceProvider;
    v133[4] = &protocol witness table for BankConnectPaymentPassDataSourceProvider;
    if (qword_254246F70 != -1)
      swift_once();
    v87 = (void *)qword_254246F68;
    v132[3] = sub_233168668(0, (unint64_t *)&qword_254247660);
    v132[4] = &protocol witness table for NSUserDefaults;
    v132[0] = v87;
    v88 = v87;
    ManagedConsentDeleter.init(widgetRefresher:messagesManager:passDataSourceProvider:userDefaults:notificationCenter:)((uint64_t)v137, (uint64_t)v136, (uint64_t)v133, (uint64_t)v132, (uint64_t)v134, (uint64_t)v138);
    if (v115)
    {
      swift_bridgeObjectRetain();
      v89 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v89)
        goto LABEL_29;
    }
    else
    {
      v89 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v89)
      {
LABEL_29:
        v122 = v33 & 0xC000000000000001;
        v140 = (id *)MEMORY[0x24BEE4AF8];
        v32 = 4;
        while (1)
        {
          v30 = v32 - 4;
          if (v122)
          {
            v90 = (id *)MEMORY[0x234933120](v32 - 4, v33);
            v91 = v32 - 3;
            if (__OFADD__(v30, 1))
              goto LABEL_52;
          }
          else
          {
            v90 = (id *)*(id *)(v33 + 8 * v32);
            v91 = v32 - 3;
            if (__OFADD__(v30, 1))
            {
LABEL_52:
              __break(1u);
LABEL_53:
              swift_bridgeObjectRetain();
              v112 = sub_23361EF30();
              v113 = v30;
              v35 = v112;
              v34 = (id *)v113;
              swift_bridgeObjectRelease();
              goto LABEL_5;
            }
          }
          v31 = v90;
          v92 = objc_msgSend(v90, sel_consentID);
          v93 = sub_23361E150();
          v95 = v94;

          MEMORY[0x24BDAC7A8](v96);
          *(&v114 - 6) = v93;
          *(&v114 - 5) = v95;
          v97 = v130;
          *(&v114 - 4) = (uint64_t)v129;
          *(&v114 - 3) = (uint64_t)v138;
          *((_BYTE *)&v114 - 16) = 1;
          v98 = v131;
          sub_23361E960();
          v131 = v98;
          if (v98)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_2332244E0((uint64_t)v138);
            return;
          }
          swift_bridgeObjectRelease();
          v99 = v126;
          sub_2331684BC((uint64_t)v97, v126, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsentDeleter.Metadata);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v140 = (id *)sub_2334A5448(0, (int64_t)v140[2] + 1, 1, (unint64_t)v140);
          v33 = (unint64_t)v124;
          v101 = (unint64_t)v140[2];
          v100 = (unint64_t)v140[3];
          v102 = v127;
          if (v101 >= v100 >> 1)
          {
            v104 = sub_2334A5448(v100 > 1, v101 + 1, 1, (unint64_t)v140);
            v102 = v127;
            v140 = (id *)v104;
          }
          v103 = (uint64_t)v140;
          v140[2] = (id)(v101 + 1);
          sub_233168580(v99, v103+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v101, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsentDeleter.Metadata);

          sub_233168500((uint64_t)v130, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsentDeleter.Metadata);
          ++v32;
          if (v91 == v89)
            goto LABEL_50;
        }
      }
    }
    v140 = (id *)MEMORY[0x24BEE4AF8];
LABEL_50:
    swift_bridgeObjectRelease();
    v107 = swift_bridgeObjectRetain();
    v108 = sub_233220B1C(v107);
    swift_bridgeObjectRelease_n();
    ManagedConsentDeleter.postProcess(_:)((Swift::OpaquePointer)v108);
    swift_bridgeObjectRelease();
    v109 = (uint64_t)v117;
    sub_2331684BC((uint64_t)v125, (uint64_t)v117, type metadata accessor for RawBankConnectData.Consent);
    LOBYTE(v137[0]) = 0;
    v110 = v121;
    v111 = ManagedConsent.__allocating_init(_:consentStatus:managedInstitution:context:)(v109, (unsigned __int8 *)v137, v110, v129);
    sub_2332244E0((uint64_t)v138);
    *v123 = v111;
    return;
  }
  if (qword_256041CA0 != -1)
    swift_once();
  v38 = sub_23361DB80();
  __swift_project_value_buffer(v38, (uint64_t)qword_2560495B0);
  v39 = (uint64_t)v140;
  sub_2331684BC((uint64_t)v36, (uint64_t)v140, type metadata accessor for RawBankConnectData.Consent);
  v40 = v37;
  v41 = sub_23361DB68();
  v42 = sub_23361E780();
  v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    v44 = swift_slowAlloc();
    v130 = (uint8_t *)swift_slowAlloc();
    v138[0] = (uint64_t)v130;
    *(_DWORD *)v44 = 136315394;
    v128 = (uint8_t *)(v44 + 4);
    v45 = objc_msgSend(v40, "id");
    v46 = sub_23361E150();
    LODWORD(v129) = v43;
    v47 = (uint64_t *)v39;
    v124 = v34;
    v49 = v48;

    v137[0] = sub_233164DCC(v46, v49, v138);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    v50 = *v47;
    v51 = v47[1];
    swift_bridgeObjectRetain();
    v137[0] = sub_233164DCC(v50, v51, v138);
    sub_23361EBC4();
    v34 = v124;
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v47, type metadata accessor for RawBankConnectData.Consent);
    _os_log_impl(&dword_233151000, v41, (os_log_type_t)v129, "Existing consent found for institutionID: %s, updating the existing consent with values from consent with consentID: %s.", (uint8_t *)v44, 0x16u);
    v52 = v130;
    swift_arrayDestroy();
    MEMORY[0x234934590](v52, -1, -1);
    MEMORY[0x234934590](v44, -1, -1);
  }
  else
  {

    sub_233168500(v39, type metadata accessor for RawBankConnectData.Consent);
  }

  v81 = v121;
  v80 = v122;
  v82 = v123;
  v83 = v120;
  if (v115)
  {
    swift_bridgeObjectRetain();
    v84 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v84 = *(_QWORD *)(((unint64_t)v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v84)
  {
    if (((unint64_t)v34 & 0xC000000000000001) != 0)
    {
      v105 = (id)MEMORY[0x234933120](0, v34);
      goto LABEL_47;
    }
    if (*(_QWORD *)(((unint64_t)v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v105 = v34[4];
LABEL_47:
      v106 = v105;
      swift_bridgeObjectRelease();
      LOBYTE(v138[0]) = 0;
      sub_23361D5F8();
      _s10FinanceKit14ManagedConsentC6update_4with13consentStatus13lastUpdatedAtyAC_AA18RawBankConnectDataO0D0VAA0mndH0O10Foundation4DateVtFZ_0(v106, v125, (unsigned __int8 *)v138);
      ((void (*)(char *, unint64_t))v81[1])(v83, v80);
      *v82 = v106;
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_233220B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v3 = type metadata accessor for ManagedConsentDeleter.Metadata();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v8 = *(_QWORD *)(v5 + *(int *)(v3 + 20));
    v9 = *(_QWORD *)(v8 + 16);
    v10 = v7[2];
    v11 = v10 + v9;
    if (__OFADD__(v10, v9))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v11 <= v7[3] >> 1)
    {
      if (*(_QWORD *)(v8 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v10 <= v11)
        v13 = v10 + v9;
      else
        v13 = v10;
      v7 = sub_2334A5324(isUniquelyReferenced_nonNull_native, v13, 1, v7);
      if (*(_QWORD *)(v8 + 16))
      {
LABEL_14:
        v14 = v7[2];
        if ((v7[3] >> 1) - v14 < v9)
          goto LABEL_28;
        v15 = (unint64_t)&v7[6 * v14 + 4];
        if (v8 + 32 < v15 + 48 * v9 && v15 < v8 + 32 + 48 * v9)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v9)
        {
          v17 = v7[2];
          v18 = __OFADD__(v17, v9);
          v19 = v17 + v9;
          if (v18)
            goto LABEL_29;
          v7[2] = v19;
        }
        goto LABEL_4;
      }
    }
    if (v9)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    v5 += v6;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

void sub_233220D00(void *a1@<X0>, id a2@<X1>, void *a3@<X2>, id a4@<X3>, void *a5@<X4>, void *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  unint64_t v47;
  uint64_t *v48;
  id v49;
  id v50;
  unint64_t v51;
  NSObject *v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  NSObject *v65;
  id v66;
  id v67;
  unint64_t v68;
  NSObject *v69;
  NSObject *v70;
  BOOL v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  _QWORD v76[2];
  int v77;
  os_log_t v78;
  uint64_t v79;
  id v80;
  id v81;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t *v84;
  unint64_t v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t *v97;

  v87 = a6;
  v88 = a5;
  v86 = a1;
  v82 = a7;
  v10 = sub_23361D6A0();
  v92 = *(_QWORD *)(v10 - 8);
  v93 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D1CC();
  v89 = *(_QWORD *)(v13 - 8);
  v90 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawBankConnectData.Consent(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (_QWORD *)((char *)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v17);
  v85 = (unint64_t)v76 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (_QWORD *)((char *)v76 - v22);
  if (qword_256041CA0 != -1)
    goto LABEL_28;
  while (1)
  {
    v24 = sub_23361DB80();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_2560495B0);
    sub_2331684BC((uint64_t)a2, (uint64_t)v23, type metadata accessor for RawBankConnectData.Consent);
    v26 = a3;
    v83 = (uint64_t *)v25;
    v27 = sub_23361DB68();
    v28 = sub_23361E780();
    v29 = v28;
    v30 = os_log_type_enabled(v27, v28);
    v84 = v19;
    if (v30)
    {
      v31 = swift_slowAlloc();
      v78 = v27;
      v32 = v31;
      v79 = swift_slowAlloc();
      *(_QWORD *)&v95 = v79;
      *(_DWORD *)v32 = 136315394;
      v80 = a4;
      v33 = *v23;
      v34 = v23[1];
      v81 = a2;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v94 = sub_233164DCC(v33, v34, (uint64_t *)&v95);
      v77 = v29;
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v23, type metadata accessor for RawBankConnectData.Consent);
      *(_WORD *)(v32 + 12) = 2080;
      v76[1] = v32 + 14;
      v35 = objc_msgSend(v26, "id");
      v36 = sub_23361E150();
      v38 = v37;

      a4 = v80;
      a2 = v81;
      *(_QWORD *)&v94 = sub_233164DCC(v36, v38, (uint64_t *)&v95);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      v39 = v78;
      _os_log_impl(&dword_233151000, v78, (os_log_type_t)v77, "Inserting new consent with consentID: %s for institution with institutionID: %s.", (uint8_t *)v32, 0x16u);
      v40 = v79;
      swift_arrayDestroy();
      MEMORY[0x234934590](v40, -1, -1);
      MEMORY[0x234934590](v32, -1, -1);

    }
    else
    {
      sub_233168500((uint64_t)v23, type metadata accessor for RawBankConnectData.Consent);

    }
    type metadata accessor for ManagedConsent();
    v41 = v85;
    sub_2331684BC((uint64_t)a2, v85, type metadata accessor for RawBankConnectData.Consent);
    LOBYTE(v95) = 0;
    v42 = v26;
    v43 = a4;
    a4 = ManagedConsent.__allocating_init(_:consentStatus:managedInstitution:context:)(v41, (unsigned __int8 *)&v95, v42, v43);
    v44 = (uint64_t)a2;
    MEMORY[0x24BDAC7A8](a4);
    v76[-4] = v87;
    v76[-3] = v43;
    v45 = v88;
    v76[-2] = v86;
    v76[-1] = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256045F70);
    v46 = v91;
    sub_23361E960();
    if (v46)
    {

      return;
    }
    v47 = v95;
    v48 = v84;
    sub_2331684BC(v44, (uint64_t)v84, type metadata accessor for RawBankConnectData.Consent);
    v49 = v42;
    swift_bridgeObjectRetain_n();
    v50 = v49;
    v51 = v47;
    v87 = v50;
    v52 = sub_23361DB68();
    LODWORD(v86) = sub_23361E780();
    v91 = v52;
    v53 = os_log_type_enabled(v52, (os_log_type_t)v86);
    v19 = (uint64_t *)(v51 >> 62);
    v54 = MEMORY[0x24BEE4AD8];
    v88 = v43;
    v85 = v51;
    v81 = 0;
    if (v53)
    {
      v55 = swift_slowAlloc();
      v56 = swift_slowAlloc();
      *(_QWORD *)&v95 = v56;
      *(_DWORD *)v55 = 134218498;
      v83 = (uint64_t *)(v51 >> 62);
      v80 = (id)v56;
      if (v19)
      {
        swift_bridgeObjectRetain();
        v57 = sub_23361EF30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v57 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v94 = v57;
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      v59 = *v48;
      v58 = v48[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v94 = sub_233164DCC(v59, v58, (uint64_t *)&v95);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v48, type metadata accessor for RawBankConnectData.Consent);
      *(_WORD *)(v55 + 22) = 2080;
      v84 = (uint64_t *)(v55 + 24);
      v60 = v87;
      v61 = objc_msgSend(v87, "id");
      v62 = sub_23361E150();
      v64 = v63;

      *(_QWORD *)&v94 = sub_233164DCC(v62, v64, (uint64_t *)&v95);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      v65 = v91;
      _os_log_impl(&dword_233151000, v91, (os_log_type_t)v86, "Merging the accounts granted by %ld consents into the new consent with consentID: %s for institutionID: %s.", (uint8_t *)v55, 0x20u);
      v54 = MEMORY[0x24BEE4AD8];
      v66 = v80;
      swift_arrayDestroy();
      MEMORY[0x234934590](v66, -1, -1);
      MEMORY[0x234934590](v55, -1, -1);

      v51 = v85;
      v19 = v83;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_233168500((uint64_t)v48, type metadata accessor for RawBankConnectData.Consent);

      v67 = v87;
    }
    if (!v19)
    {
      a2 = *(id *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!a2)
        break;
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    a2 = (id)sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!a2)
      break;
LABEL_14:
    v68 = 0;
    v86 = a2;
    v87 = (id)(v85 & 0xC000000000000001);
    v83 = (uint64_t *)(v85 + 32);
    v84 = (uint64_t *)(v85 & 0xFFFFFFFFFFFFFF8);
    a3 = (void *)(v54 + 8);
    v23 = (uint64_t *)&selRef__initWithImage_;
    while (v87)
    {
      v70 = MEMORY[0x234933120](v68, v85);
      v71 = __OFADD__(v68++, 1);
      if (v71)
        goto LABEL_26;
LABEL_22:
      v91 = v70;
      v72 = -[NSObject accountObjects](v70, sel_accountObjects);
      sub_23361E9B4();

      while (1)
      {
        sub_23361D1C0();
        if (!v96)
          break;
        sub_2331683D0(&v95, &v94);
        type metadata accessor for ManagedInternalAccount();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v19 = v97;
          v73 = (void *)sub_23361E12C();
          a2 = objc_msgSend(a4, sel_mutableSetValueForKeyPath_, v73);

          objc_msgSend(a2, sel_addObject_, v19);
          v74 = objc_msgSend(a4, "id");
          sub_23361D67C();

          v75 = (void *)sub_23361D658();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v12, v93);
          objc_msgSend(v19, sel_setConsentID_, v75);

        }
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v15, v90);
      v69 = v91;
      objc_msgSend(v88, sel_deleteObject_, v91);

      if ((id)v68 == v86)
        goto LABEL_30;
    }
    if (v68 >= v84[2])
      goto LABEL_27;
    v70 = (id)v83[v68];
    v71 = __OFADD__(v68++, 1);
    if (!v71)
      goto LABEL_22;
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
  }
LABEL_30:
  swift_bridgeObjectRelease();
  *v82 = a4;
}

void sub_233221618(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  uint64_t v33;

  v30 = a3;
  v29 = a4;
  v6 = type metadata accessor for BankConnectConsentArbitratingConfiguration();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v28 - v13;
  sub_2331684BC(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v16 = 1;
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v8, 1, v15);
  v18 = sub_23361D6A0();
  v19 = *(_QWORD *)(v18 - 8);
  if (v17 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v12, v8, v18);
    v16 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v12, v16, 1, v18);
  sub_23322391C((uint64_t)v12, (uint64_t)v14);
  v20 = a2;
  swift_retain();
  v21 = v31;
  v22 = (void *)sub_233223964((uint64_t)v14, (uint64_t)v20);

  swift_release();
  sub_233168608((uint64_t)v14, &qword_254246740);
  if (!v21)
  {
    type metadata accessor for ManagedConsent();
    v32.receiver = (id)swift_getObjCClassFromMetadata();
    v32.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
    v23 = objc_msgSendSuper2(&v32, sel_fetchRequest);
    objc_msgSend(v23, sel_setReturnsObjectsAsFaults_, 0);
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_233623D60;
    *(_QWORD *)(v24 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
    *(_QWORD *)(v24 + 64) = sub_2332243C8();
    *(_QWORD *)(v24 + 32) = v30;
    swift_bridgeObjectRetain();
    v25 = (void *)sub_23361E6B4();
    objc_msgSend(v23, sel_setPredicate_, v25);

    v26 = sub_23361E984();
    v33 = v26;
    if (v22)
    {
      v27 = v22;
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();

      *v29 = v33;
    }
    else
    {

      *v29 = v26;
    }
  }
}

unint64_t sub_233221974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedConsent();
  result = static ManagedConsent.existingConsent(withID:in:)(a1, a2);
  v14 = v4;
  if (v4)
  {
LABEL_2:
    *a3 = v14;
    return result;
  }
  if (!result)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v15 = sub_23361DB80();
    __swift_project_value_buffer(v15, (uint64_t)qword_2560495B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    v16 = sub_23361DB68();
    v17 = sub_23361E768();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v18 = 136315138;
      v23[1] = v18 + 4;
      v19 = sub_23361D64C();
      v25 = sub_233164DCC(v19, v20, &v26);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      _os_log_impl(&dword_233151000, v16, v17, "Expected consent with UUID: %s due to arbiter configuration but wasn't found in store. Aborting arbitration.", v18, 0xCu);
      v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x234934590](v21, -1, -1);
      MEMORY[0x234934590](v18, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }

    sub_233223B30();
    v14 = swift_allocError();
    *(_OWORD *)v22 = xmmword_23362E5A0;
    *(_BYTE *)(v22 + 16) = 2;
    result = swift_willThrow();
    goto LABEL_2;
  }
  *a4 = result;
  return result;
}

uint64_t sub_233221BF4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, unint64_t *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t *v62;
  unint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  _BYTE *v67;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  char v95;
  uint64_t v96;

  v8 = v7;
  v84 = a7;
  v92 = a6;
  v87 = a5;
  v90 = a3;
  v11 = type metadata accessor for BankConnectAccountChange();
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v17);
  v72 = (_QWORD *)((char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v19);
  v71 = (_QWORD *)((char *)v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = type metadata accessor for RawBankConnectData.Account(0);
  v21 = *(_QWORD *)(v78 - 8);
  v22 = MEMORY[0x24BDAC7A8](v78);
  v73 = (uint64_t)v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v77 = (uint64_t)v70 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v89 = (uint64_t)v70 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v70 - v28;
  type metadata accessor for ManagedAccountImporter();
  inited = swift_initStackObject();
  type metadata accessor for ManagedAccountBalanceImporter();
  *(_QWORD *)(inited + 16) = swift_initStackObject();
  if (!*(_QWORD *)(a1 + 16))
    return swift_release();
  v91 = *(_QWORD *)(a1 + 16);
  v70[0] = inited;
  v31 = type metadata accessor for ManagedConsent();
  v32 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v85 = &v95;
  v86 = v31;
  v80 = *(_QWORD *)(v21 + 72);
  v70[1] = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v33 = 136315394;
  v75 = v33;
  v74 = MEMORY[0x24BEE4AD8] + 8;
  v88 = a4;
  v93 = v29;
  v76 = v16;
  v81 = v13;
  while (1)
  {
    sub_2331684BC(v32, (uint64_t)v29, type metadata accessor for RawBankConnectData.Account);
    if (qword_256041CA0 != -1)
      swift_once();
    v34 = sub_23361DB80();
    __swift_project_value_buffer(v34, (uint64_t)qword_2560495B0);
    v35 = v89;
    sub_2331684BC((uint64_t)v29, v89, type metadata accessor for RawBankConnectData.Account);
    swift_bridgeObjectRetain_n();
    v36 = sub_23361DB68();
    v37 = sub_23361E780();
    if (os_log_type_enabled(v36, v37))
    {
      v79 = v8;
      v38 = swift_slowAlloc();
      v39 = v35;
      v40 = swift_slowAlloc();
      v96 = v40;
      *(_DWORD *)v38 = v75;
      swift_bridgeObjectRetain();
      v94 = sub_233164DCC(v90, a4, &v96);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2080;
      v41 = v77;
      sub_2331684BC(v39, v77, type metadata accessor for RawBankConnectData.Account);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v42 = v41;
        v43 = v72;
        v44 = (uint64_t)v72;
        v45 = type metadata accessor for RawBankConnectData.LiabilityAccount;
      }
      else
      {
        v42 = v41;
        v43 = v71;
        v44 = (uint64_t)v71;
        v45 = type metadata accessor for RawBankConnectData.AssetAccount;
      }
      sub_233168580(v42, v44, v45);
      v48 = *v43;
      v47 = v43[1];
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v43, v45);
      v8 = v79;
      v94 = sub_233164DCC(v48, v47, &v96);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500(v89, type metadata accessor for RawBankConnectData.Account);
      _os_log_impl(&dword_233151000, v36, v37, "Consent with consentID: %s grants access to account with accountID: %s. Inserting or updating account.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v40, -1, -1);
      MEMORY[0x234934590](v38, -1, -1);

      v16 = v76;
      a4 = v88;
      v29 = v93;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_233168500(v35, type metadata accessor for RawBankConnectData.Account);

    }
    MEMORY[0x24BDAC7A8](v46);
    v70[-2] = v29;
    sub_23321B984(sub_233223BB8, (uint64_t)&v70[-4], v87);
    v50 = v49;
    if (v49)
    {
      objc_msgSend(v49, sel_setIsAccountEnabled_, 1);
      InternalAccount.init(_:)(v50, (uint64_t)v16);
      v51 = type metadata accessor for InternalAccount();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v16, 0, 1, v51);
    }
    else
    {
      v52 = type metadata accessor for InternalAccount();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v16, 1, 1, v52);
    }
    v53 = static ManagedConsent.existingConsent(withConsentID:in:)(v90, a4, (uint64_t)v92);
    if (v8)
      break;
    v54 = (void *)v53;
    if (!v53)
    {
      sub_233223BD4();
      swift_allocError();
      *v67 = 0;
      swift_willThrow();
      break;
    }
    if (v50)
    {
      v55 = v50;
      v56 = sub_23332E7BC(v55, (uint64_t)v93, v54, v92);
    }
    else
    {
      type metadata accessor for ManagedInternalAccount();
      v57 = v73;
      sub_2331684BC((uint64_t)v93, v73, type metadata accessor for RawBankConnectData.Account);
      v58 = v54;
      v55 = v92;
      v56 = sub_2334B400C(v57, v58, v55);

    }
    objc_msgSend(v56, sel_setEarliestAccountRequestStartDate_, 0);

    v59 = (uint64_t)v81;
    sub_2331686A0((uint64_t)v16, (uint64_t)v81, &qword_2560486B0);
    v60 = v59 + *(int *)(v83 + 20);
    v61 = v56;
    InternalAccount.init(_:)(v61, v60);
    v62 = v84;
    v63 = *v84;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v62 = v63;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v63 = sub_2334A545C(0, *(_QWORD *)(v63 + 16) + 1, 1, v63);
      *v84 = v63;
    }
    v66 = *(_QWORD *)(v63 + 16);
    v65 = *(_QWORD *)(v63 + 24);
    if (v66 >= v65 >> 1)
    {
      v63 = sub_2334A545C(v65 > 1, v66 + 1, 1, v63);
      *v84 = v63;
    }
    *(_QWORD *)(v63 + 16) = v66 + 1;
    sub_233168580(v59, v63+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v66, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAccountChange);

    sub_233168608((uint64_t)v16, &qword_2560486B0);
    v29 = v93;
    sub_233168500((uint64_t)v93, type metadata accessor for RawBankConnectData.Account);
    v32 += v80;
    --v91;
    a4 = v88;
    if (!v91)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_release();
  v69 = (uint64_t)v93;

  sub_233168608((uint64_t)v16, &qword_2560486B0);
  swift_bridgeObjectRelease();
  return sub_233168500(v69, type metadata accessor for RawBankConnectData.Account);
}

uint64_t sub_233222458(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(*a1, sel_accountId);
  v14 = sub_23361E150();
  v16 = v15;

  sub_2331684BC(a2, (uint64_t)v12, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v19 = *v6;
    v18 = v6[1];
    swift_bridgeObjectRetain();
    v20 = (uint64_t)v6;
  }
  else
  {
    v17 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    v19 = *v9;
    v18 = v9[1];
    swift_bridgeObjectRetain();
    v20 = (uint64_t)v9;
  }
  sub_233168500(v20, v17);
  if (v14 == v19 && v16 == v18)
    v22 = 1;
  else
    v22 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22 & 1;
}

void sub_233222640(uint64_t a1, _QWORD *a2, _QWORD *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  Swift::String v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  id v53;
  void *v54;
  int64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD *v58;
  uint64_t v59;
  id v60;
  _QWORD *v61;
  void *v62;
  _QWORD v63[6];

  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_2332240E4(v7, a2);
  swift_bridgeObjectRelease();
  v9 = a3[16];
  v10 = a3[17];
  __swift_project_boxed_opaque_existential_1(a3 + 13, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v63, v9, v10);
  v57 = (void *)v63[0];
  if ((v8 & 0xC000000000000001) != 0)
  {
    sub_23361ECA8();
    type metadata accessor for ManagedInternalAccount();
    sub_233193A08();
    sub_23361E60C();
    v8 = v63[0];
    v56 = v63[1];
    v11 = v63[2];
    v12 = v63[3];
    v13 = v63[4];
  }
  else
  {
    v12 = 0;
    v14 = -1 << *(_BYTE *)(v8 + 32);
    v56 = v8 + 56;
    v11 = ~v14;
    v15 = -v14;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v13 = v16 & *(_QWORD *)(v8 + 56);
  }
  v55 = (unint64_t)(v11 + 64) >> 6;
  v58 = a3;
  v61 = a3 + 8;
  v59 = v8;
  v60 = a4;
  while (v8 < 0)
  {
    if (!sub_23361ED08())
      goto LABEL_39;
    type metadata accessor for ManagedInternalAccount();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v20 = v62;
    swift_unknownObjectRelease();
    v19 = v12;
    v17 = v13;
    if (!v20)
      goto LABEL_39;
LABEL_30:
    if (qword_256041CA0 != -1)
      swift_once();
    v24 = sub_23361DB80();
    __swift_project_value_buffer(v24, (uint64_t)qword_2560495B0);
    v25 = v20;
    v26 = sub_23361DB68();
    v27 = sub_23361E780();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v62 = (void *)v29;
      *(_DWORD *)v28 = 136315138;
      v30 = objc_msgSend(v25, sel_accountId);
      v31 = sub_23361E150();
      v33 = v32;

      *(_QWORD *)(v28 + 4) = sub_233164DCC(v31, v33, (uint64_t *)&v62);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v26, v27, "Account with accountID: %s is no longer granted by updated consent. Resetting message status and deleting this account.", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v29, -1, -1);
      MEMORY[0x234934590](v28, -1, -1);

    }
    else
    {

    }
    v34 = v61;
    v35 = objc_msgSend(v25, sel_externalAccountId);
    if (v35)
    {
      v36 = v35;
      v37 = sub_23361E150();
      v39 = v38;

      v40 = v58[11];
      v41 = v58[12];
      __swift_project_boxed_opaque_existential_1(v61, v40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_233623D60;
      *(_QWORD *)(v42 + 32) = v37;
      *(_QWORD *)(v42 + 40) = v39;
      *(_BYTE *)(v42 + 48) = 0;
      v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
      swift_bridgeObjectRetain();
      v43(v42, v40, v41);
      v34 = v61;
      swift_bridgeObjectRelease();
      v62 = v57;
      v44._countAndFlagsBits = v37;
      v44._object = v39;
      BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(0, v44);
      swift_bridgeObjectRelease();
    }
    v45 = objc_msgSend(v25, sel_accountId);
    v46 = sub_23361E150();
    v48 = v47;

    v49 = v58[11];
    v50 = v58[12];
    __swift_project_boxed_opaque_existential_1(v34, v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_233626370;
    *(_QWORD *)(v51 + 32) = v46;
    *(_QWORD *)(v51 + 40) = v48;
    *(_BYTE *)(v51 + 48) = 1;
    *(_QWORD *)(v51 + 56) = v46;
    *(_QWORD *)(v51 + 64) = v48;
    *(_BYTE *)(v51 + 72) = 2;
    *(_QWORD *)(v51 + 80) = v46;
    *(_QWORD *)(v51 + 88) = v48;
    *(_BYTE *)(v51 + 96) = 3;
    *(_QWORD *)(v51 + 104) = v46;
    *(_QWORD *)(v51 + 112) = v48;
    *(_BYTE *)(v51 + 120) = 4;
    *(_QWORD *)(v51 + 128) = v46;
    *(_QWORD *)(v51 + 136) = v48;
    *(_BYTE *)(v51 + 144) = 5;
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 8);
    swift_bridgeObjectRetain_n();
    v52(v51, v49, v50);
    swift_bridgeObjectRelease();
    v53 = objc_msgSend(v25, sel_accountMatchObject);
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v60, sel_deleteObject_, v53);

    }
    objc_msgSend(v60, sel_deleteObject_, v25);

    v12 = v19;
    v13 = v17;
    v8 = v59;
  }
  if (v13)
  {
    v17 = (v13 - 1) & v13;
    v18 = __clz(__rbit64(v13)) | (v12 << 6);
    v19 = v12;
LABEL_29:
    v20 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v18);
    if (!v20)
      goto LABEL_39;
    goto LABEL_30;
  }
  v21 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v21 >= v55)
      goto LABEL_39;
    v22 = *(_QWORD *)(v56 + 8 * v21);
    v19 = v12 + 1;
    if (!v22)
    {
      v19 = v12 + 2;
      if (v12 + 2 >= v55)
        goto LABEL_39;
      v22 = *(_QWORD *)(v56 + 8 * v19);
      if (!v22)
      {
        v19 = v12 + 3;
        if (v12 + 3 >= v55)
          goto LABEL_39;
        v22 = *(_QWORD *)(v56 + 8 * v19);
        if (!v22)
        {
          v19 = v12 + 4;
          if (v12 + 4 >= v55)
            goto LABEL_39;
          v22 = *(_QWORD *)(v56 + 8 * v19);
          if (!v22)
          {
            v23 = v12 + 5;
            while (v55 != v23)
            {
              v22 = *(_QWORD *)(v56 + 8 * v23++);
              if (v22)
              {
                v19 = v23 - 1;
                goto LABEL_28;
              }
            }
LABEL_39:
            sub_2331961F0();

            return;
          }
        }
      }
    }
LABEL_28:
    v17 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v19 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

unint64_t sub_233222CA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v12 >= v6)
      goto LABEL_24;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_24;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_24;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_24;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v6)
            {
LABEL_24:
              v15 = 0;
              goto LABEL_25;
            }
            v13 = *(_QWORD *)(v2 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                v8 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_27;
                if (v8 >= v6)
                  goto LABEL_24;
                v13 = *(_QWORD *)(v2 + 8 * v8);
                ++v14;
                if (v13)
                  goto LABEL_22;
              }
            }
            v8 = v14;
          }
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    sub_2331683E0(v11);
    swift_bridgeObjectRelease();
    result = sub_233224414(v11);
    if (v11 >= 2)
    {
      v15 = 1;
LABEL_25:
      swift_release();
      return v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t _s10FinanceKit42BankConnectConsentArbitratingConfigurationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BankConnectConsentArbitratingConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045F88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2331684BC(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  sub_2331684BC(a2, v15, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  if (v17((uint64_t)v14, 1, v16) != 1)
  {
    sub_2331684BC((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
    if (v17(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = sub_23361D670();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v17(v15, 1, v16) != 1)
  {
LABEL_6:
    sub_233168608((uint64_t)v14, &qword_256045F88);
    v18 = 0;
    return v18 & 1;
  }
  sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsentArbitratingConfiguration);
  v18 = 1;
  return v18 & 1;
}

uint64_t type metadata accessor for BankConnectConsentArbitratingConfiguration()
{
  uint64_t result;

  result = qword_256045F38;
  if (!qword_256045F38)
    return swift_getSingletonMetadata();
  return result;
}

id sub_233223090()
{
  uint64_t v0;

  return sub_23321CACC(*(void **)(v0 + 16));
}

void sub_2332230A8(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  sub_23321CBA4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_2332230C8()
{
  unint64_t result;

  result = qword_256045EB0;
  if (!qword_256045EB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentArbitratingError, &type metadata for BankConnectConsentArbitratingError);
    atomic_store(result, (unint64_t *)&qword_256045EB0);
  }
  return result;
}

uint64_t dispatch thunk of BankConnectConsentArbitrating.insertOrUpdateIfValid(_:forInstitutionID:using:userPresence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 8) + *(_QWORD *)(a8 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_23318C26C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t storeEnumTagSinglePayload for BankConnectConsentArbitratingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233223210 + 4 * byte_23362E5B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233223244 + 4 * byte_23362E5B0[v4]))();
}

uint64_t sub_233223244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23322324C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233223254);
  return result;
}

uint64_t sub_233223260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233223268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23322326C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233223274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectConsentArbitratingError()
{
  return &type metadata for BankConnectConsentArbitratingError;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectConsentArbitratingConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23361D6A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for BankConnectConsentArbitratingConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23361D6A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for BankConnectConsentArbitratingConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for BankConnectConsentArbitratingConfiguration(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23361D6A0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256045EA8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361D6A0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for BankConnectConsentArbitratingConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for BankConnectConsentArbitratingConfiguration(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23361D6A0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256045EA8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361D6A0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectConsentArbitratingConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23322375C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BankConnectConsentArbitratingConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332237B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23322380C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_233223848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_23322388C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BankConnectConsentArbiter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectConsentArbiter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectConsentArbiter.__allocating_init(store:webClientProvider:messagesManager:dataSourceProvider:widgetRefresher:deviceInfo:overlapDetector:fraudAssessmentLoader:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_23322391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233223964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v5 = sub_23361D6A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v11, &qword_254246740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  sub_233221974((uint64_t)v8, a2, &v14, &v15);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

void sub_233223AC8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23321F024(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), a1);
}

unint64_t sub_233223AEC()
{
  unint64_t result;

  result = qword_256045F58;
  if (!qword_256045F58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentArbitratingError, &type metadata for BankConnectConsentArbitratingError);
    atomic_store(result, (unint64_t *)&qword_256045F58);
  }
  return result;
}

unint64_t sub_233223B30()
{
  unint64_t result;

  result = qword_256045F60;
  if (!qword_256045F60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceError, &type metadata for BankConnectServiceError);
    atomic_store(result, (unint64_t *)&qword_256045F60);
  }
  return result;
}

void sub_233223B74(_QWORD *a1@<X8>)
{
  void **v1;

  sub_233220D00(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_233223B94()
{
  uint64_t v0;

  return sub_233221BF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(unint64_t **)(v0 + 64));
}

uint64_t sub_233223BB8(id *a1)
{
  uint64_t v1;

  return sub_233222458(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_233223BD4()
{
  unint64_t result;

  result = qword_256045F68;
  if (!qword_256045F68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedAccountImporterError, &type metadata for ManagedAccountImporterError);
    atomic_store(result, (unint64_t *)&qword_256045F68);
  }
  return result;
}

uint64_t sub_233223C18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_233223C54()
{
  uint64_t v0;

  sub_233222640(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_233223C60()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_233223C78(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v25;
  unint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v34;

  v4 = 0;
  v29 = 0;
  v30 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v27 = (unint64_t *)result;
  v28 = a4 + 7;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        v8 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v34 = v4;
        v9 = v8 | (v4 << 6);
      }
      else
      {
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_41;
        if (v10 >= v31)
          goto LABEL_39;
        v11 = *(_QWORD *)(v30 + 8 * v10);
        v12 = v4 + 1;
        if (!v11)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v31)
            goto LABEL_39;
          v11 = *(_QWORD *)(v30 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v31)
              goto LABEL_39;
            v11 = *(_QWORD *)(v30 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 4;
              if (v4 + 4 >= v31)
                goto LABEL_39;
              v11 = *(_QWORD *)(v30 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  v12 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_42;
                  if (v12 >= v31)
                    goto LABEL_39;
                  v11 = *(_QWORD *)(v30 + 8 * v12);
                  ++v13;
                  if (v11)
                    goto LABEL_20;
                }
              }
              v12 = v4 + 4;
            }
          }
        }
LABEL_20:
        v7 = (v11 - 1) & v11;
        v34 = v12;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v9);
      v15 = objc_msgSend(v14, sel_accountId);
      v16 = sub_23361E150();
      v18 = v17;

      v19 = a4[2];
      if (v19)
        break;
LABEL_36:

      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v27 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      v25 = __OFADD__(v29++, 1);
      v4 = v34;
      if (v25)
      {
        __break(1u);
LABEL_39:
        swift_retain();
        return sub_2334F1C58(v27, a2, v29, a3);
      }
    }
    if (a4[4] != v16 || a4[5] != v18)
    {
      result = sub_23361F224();
      if ((result & 1) == 0)
        break;
    }
LABEL_4:

    result = swift_bridgeObjectRelease();
    v4 = v34;
  }
  if (v19 == 1)
    goto LABEL_36;
  v21 = v28;
  v22 = 1;
  while (1)
  {
    v23 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (*(v21 - 1) == v16 && *v21 == v18)
      goto LABEL_4;
    result = sub_23361F224();
    if ((result & 1) != 0)
      goto LABEL_4;
    v21 += 2;
    ++v22;
    if (v23 == v19)
      goto LABEL_36;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_233223F20(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_233223C78((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_233223C78((uint64_t)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x234934590](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_2332240E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_233223F20(a1, a2);
  v3 = MEMORY[0x24BEE4B08];
  v27 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRetain();
  sub_23361ECA8();
  if (!sub_23361ED08())
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_release();
    return v3;
  }
  type metadata accessor for ManagedInternalAccount();
  while (1)
  {
    swift_dynamicCast();
    v4 = objc_msgSend(v26, sel_accountId);
    v5 = sub_23361E150();
    v7 = v6;

    v8 = a2[2];
    if (!v8)
      goto LABEL_21;
    if (a2[4] != v5 || a2[5] != v7)
    {
      result = sub_23361F224();
      if ((result & 1) == 0)
        break;
    }
LABEL_4:
    swift_bridgeObjectRelease();

LABEL_5:
    if (!sub_23361ED08())
    {
      v3 = v27;
      goto LABEL_36;
    }
  }
  if (v8 == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    v15 = v27;
    v16 = *(_QWORD *)(v27 + 16);
    if (*(_QWORD *)(v27 + 24) <= v16)
    {
      sub_2334F061C(v16 + 1);
      v15 = v27;
    }
    result = sub_23361EA08();
    v17 = v15 + 56;
    v18 = -1 << *(_BYTE *)(v15 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v15 + 56 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v15 + 56 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v17 + 8 * v20);
      }
      while (v25 == -1);
      v21 = __clz(__rbit64(~v25)) + (v20 << 6);
    }
    *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v21) = v26;
    ++*(_QWORD *)(v15 + 16);
    goto LABEL_5;
  }
  v11 = a2 + 7;
  v12 = 1;
  while (1)
  {
    v13 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (*(v11 - 1) == v5 && *v11 == v7)
      goto LABEL_4;
    result = sub_23361F224();
    if ((result & 1) != 0)
      goto LABEL_4;
    v11 += 2;
    ++v12;
    if (v13 == v8)
      goto LABEL_21;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_2332243AC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_233221618(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_2332243C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560459B8;
  if (!qword_2560459B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2560578D0);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFD00], v1);
    atomic_store(result, &qword_2560459B8);
  }
  return result;
}

unint64_t sub_233224414(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_233224424(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2331676FC;
  return sub_23321F758(a1, v4, v5, v6, v7, v8);
}

void sub_2332244A4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23321E72C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void sub_2332244C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23321FD88(*(id **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), a1);
}

uint64_t sub_2332244E0(uint64_t a1)
{
  destroy for ManagedConsentDeleter(a1);
  return a1;
}

void sub_233224518(uint64_t a1@<X8>)
{
  sub_23318C090(a1);
}

BOOL static AccountNumber.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t AccountNumber.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountNumber.value.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AccountNumber.value.modify())()
{
  return nullsub_1;
}

void AccountNumber.schemeType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AccountNumber.schemeType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AccountNumber.schemeType.modify())()
{
  return nullsub_1;
}

FinanceKit::AccountNumber __swiftcall AccountNumber.init(value:schemeType:)(Swift::String value, FinanceKit::AccountNumberSchemeType schemeType)
{
  uint64_t v2;
  char v3;
  FinanceKit::AccountNumber result;

  v3 = *(_BYTE *)schemeType;
  *(Swift::String *)v2 = value;
  *(_BYTE *)(v2 + 16) = v3;
  result.value = value;
  result.schemeType = schemeType;
  return result;
}

uint64_t AccountNumber.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F374();
}

uint64_t sub_233224688()
{
  _BYTE *v0;

  if (*v0)
    return 0x7954656D65686373;
  else
    return 0x65756C6176;
}

uint64_t sub_2332246C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233225368(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2332246E8()
{
  sub_233224D9C();
  return sub_23361F428();
}

uint64_t sub_233224710()
{
  sub_233224D9C();
  return sub_23361F434();
}

uint64_t AccountNumber.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045F90);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233224D9C();
  sub_23361F410();
  v13 = 0;
  sub_23361F140();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_233224DE0();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t AccountNumber.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t AccountNumber.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045FA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233224D9C();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v15 = 1;
  sub_233224E24();
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_233224A90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountNumber.init(from:)(a1, a2);
}

uint64_t sub_233224AA4(_QWORD *a1)
{
  return AccountNumber.encode(to:)(a1);
}

uint64_t sub_233224AB8()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t sub_233224B28()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F374();
}

uint64_t sub_233224B80()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F374();
  return sub_23361F3A4();
}

BOOL sub_233224BEC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

FinanceKit::AccountNumberSchemeType_optional __swiftcall AccountNumberSchemeType.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((unsigned __int16)rawValue >= 6u)
    v2 = 6;
  *v1 = v2;
  return (FinanceKit::AccountNumberSchemeType_optional)rawValue;
}

void *static AccountNumberSchemeType.allCases.getter()
{
  return &unk_250468A40;
}

uint64_t AccountNumberSchemeType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::AccountNumberSchemeType_optional sub_233224C74(Swift::Int16 *a1)
{
  return AccountNumberSchemeType.init(rawValue:)(*a1);
}

void sub_233224C7C(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_233224C88()
{
  sub_23322545C();
  return sub_23361E3A8();
}

uint64_t sub_233224CE4()
{
  sub_23322545C();
  return sub_23361E36C();
}

uint64_t sub_233224D30()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t sub_233224D74()
{
  return sub_23361F374();
}

unint64_t sub_233224D9C()
{
  unint64_t result;

  result = qword_256045F98;
  if (!qword_256045F98)
  {
    result = MEMORY[0x234934494](&unk_23362EAE4, &type metadata for AccountNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045F98);
  }
  return result;
}

unint64_t sub_233224DE0()
{
  unint64_t result;

  result = qword_256045FA0;
  if (!qword_256045FA0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumberSchemeType, &type metadata for AccountNumberSchemeType);
    atomic_store(result, (unint64_t *)&qword_256045FA0);
  }
  return result;
}

unint64_t sub_233224E24()
{
  unint64_t result;

  result = qword_256045FB0;
  if (!qword_256045FB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumberSchemeType, &type metadata for AccountNumberSchemeType);
    atomic_store(result, (unint64_t *)&qword_256045FB0);
  }
  return result;
}

unint64_t sub_233224E6C()
{
  unint64_t result;

  result = qword_256045FB8;
  if (!qword_256045FB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumber, &type metadata for AccountNumber);
    atomic_store(result, (unint64_t *)&qword_256045FB8);
  }
  return result;
}

unint64_t sub_233224EB4()
{
  unint64_t result;

  result = qword_256045FC0;
  if (!qword_256045FC0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumberSchemeType, &type metadata for AccountNumberSchemeType);
    atomic_store(result, (unint64_t *)&qword_256045FC0);
  }
  return result;
}

uint64_t sub_233224EF8()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

unint64_t sub_233224F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256045FC8;
  if (!qword_256045FC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256045FD0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256045FC8);
  }
  return result;
}

void sub_233224F88(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468A40;
}

uint64_t sub_233224F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountNumber(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountNumber(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountNumber(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountNumber()
{
  return &type metadata for AccountNumber;
}

uint64_t storeEnumTagSinglePayload for AccountNumberSchemeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233225144 + 4 * byte_23362E7D5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233225178 + 4 * byte_23362E7D0[v4]))();
}

uint64_t sub_233225178(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233225180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233225188);
  return result;
}

uint64_t sub_233225194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23322519CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2332251A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332251A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountNumberSchemeType()
{
  return &type metadata for AccountNumberSchemeType;
}

uint64_t storeEnumTagSinglePayload for AccountNumber.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233225210 + 4 * byte_23362E7DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233225244 + 4 * byte_23362E7DA[v4]))();
}

uint64_t sub_233225244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23322524C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233225254);
  return result;
}

uint64_t sub_233225260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233225268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23322526C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233225274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountNumber.CodingKeys()
{
  return &type metadata for AccountNumber.CodingKeys;
}

unint64_t sub_233225294()
{
  unint64_t result;

  result = qword_256045FD8;
  if (!qword_256045FD8)
  {
    result = MEMORY[0x234934494](&unk_23362EABC, &type metadata for AccountNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045FD8);
  }
  return result;
}

unint64_t sub_2332252DC()
{
  unint64_t result;

  result = qword_256045FE0;
  if (!qword_256045FE0)
  {
    result = MEMORY[0x234934494](&unk_23362EA2C, &type metadata for AccountNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045FE0);
  }
  return result;
}

unint64_t sub_233225324()
{
  unint64_t result;

  result = qword_256045FE8;
  if (!qword_256045FE8)
  {
    result = MEMORY[0x234934494](&unk_23362EA54, &type metadata for AccountNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045FE8);
  }
  return result;
}

uint64_t sub_233225368(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954656D65686373 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23322545C()
{
  unint64_t result;

  result = qword_256045FF0;
  if (!qword_256045FF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumberSchemeType, &type metadata for AccountNumberSchemeType);
    atomic_store(result, (unint64_t *)&qword_256045FF0);
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FinanceStore.orderCountForSignout()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  Swift::Int v3;
  uint64_t v5;

  v0 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  v3 = sub_2331CB968((uint64_t)v2);
  sub_2331CB0F4((uint64_t)v2);
  return v3;
}

uint64_t sub_233225534(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x8000000233669CD0;
  else
    v4 = 0x8000000233669CF0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x8000000233669CF0;
  else
    v6 = 0x8000000233669CD0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2332255DC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7461636964657270;
    else
      v3 = 0x6373654474726F73;
    if (v2 == 1)
      v4 = 0xE900000000000065;
    else
      v4 = 0xEF73726F74706972;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7461636964657270;
      else
        v6 = 0x6373654474726F73;
      if (v5 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0xEF73726F74706972;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x736E6F6974706FLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x736E6F6974706FLL)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_233225714(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_233225760(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332257D8 + 4 * byte_23362EB3E[a2]))(0xD000000000000017);
}

uint64_t sub_2332257D8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000017 && v1 == 0x80000002336698C0)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233225880(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2332258CC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_233225988 + 4 * byte_23362EB4F[a2]))();
}

uint64_t sub_233225988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000002336696E0)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_233225A78(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000015;
  v3 = 0x8000000233669680;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x65736E6F70736572;
    else
      v5 = 0x61766E4961746164;
    if (v4 == 1)
      v6 = 0xEF64696C61766E49;
    else
      v6 = 0xEB0000000064696CLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000015;
  v6 = 0x8000000233669680;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x65736E6F70736572;
    else
      v2 = 0x61766E4961746164;
    if (v7 == 1)
      v3 = 0xEF64696C61766E49;
    else
      v3 = 0xEB0000000064696CLL;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233225BAC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64756F6C43;
    else
      v3 = 0x786F62706F7244;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64756F6C43;
      else
        v6 = 0x786F62706F7244;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6C61636F4CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6C61636F4CLL)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233225CB4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6967657461727473;
  else
    v3 = 0x6E6F6973726576;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000007365;
  if ((a2 & 1) != 0)
    v5 = 0x6967657461727473;
  else
    v5 = 0x6E6F6973726576;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007365;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_233225D60(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x646E75666572;
  else
    v3 = 0x6573616863727570;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x646E75666572;
  else
    v5 = 0x6573616863727570;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_233225E00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233225E50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233225EC8 + 4 * byte_23362EB5F[a2]))(0x6465766F72707061);
}

uint64_t sub_233225EC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465766F72707061 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233225F90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233225FFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332260C8 + 4 * byte_23362EB6C[a2]))(0x737574617473);
}

uint64_t sub_2332260C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x737574617473 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2332261F8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x65756C6176;
  else
    v2 = 0x6C6562616CLL;
  if ((a2 & 1) != 0)
    v3 = 0x65756C6176;
  else
    v3 = 0x6C6562616CLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_23322626C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2332262D8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332263C8 + 4 * byte_23362EB7C[a2]))(0xD000000000000010);
}

uint64_t sub_2332263C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000002336694C0)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2332264F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233226530(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332265D4 + 4 * byte_23362EB8A[a2]))(0x69737365636F7270);
}

uint64_t sub_2332265D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69737365636F7270 && v1 == 0xEA0000000000676ELL)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2332266C8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233226714(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_233226764 + 4 * byte_23362EB94[a2]))();
}

uint64_t sub_233226764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000002336690A0)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_2332267E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000023;
    else
      v3 = 0xD000000000000024;
    if (v2 == 1)
      v4 = 0x8000000233669010;
    else
      v4 = 0x8000000233669040;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000023;
      else
        v6 = 0xD000000000000024;
      if (v5 == 1)
        v7 = 0x8000000233669010;
      else
        v7 = 0x8000000233669040;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2332268D8(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x4B65746176697270;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x8000000233669D30;
  else
    v4 = 0xEA00000000007965;
  if ((a2 & 1) != 0)
    v5 = 0x4B65746176697270;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007965;
  else
    v6 = 0x8000000233669D30;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_233226984(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2332269C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233226A94 + 4 * byte_23362EBA0[a2]))(0x69737365636F7270);
}

uint64_t sub_233226A94(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69737365636F7270 && v1 == 0xEA0000000000676ELL)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233226B98(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE004C5255657361;
  v3 = 0x42706F6F6B736F62;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001BLL;
    else
      v5 = 0xD000000000000023;
    if (v4 == 1)
      v6 = 0x8000000233669350;
    else
      v6 = 0x8000000233669370;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x42706F6F6B736F62;
  v6 = 0xEE004C5255657361;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD00000000000001BLL;
    else
      v3 = 0xD000000000000023;
    if (v7 == 1)
      v2 = 0x8000000233669350;
    else
      v2 = 0x8000000233669370;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233226CB0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x79726576696C6564;
  else
    v2 = 0x676E697070696873;
  if ((a2 & 1) != 0)
    v3 = 0x79726576696C6564;
  else
    v3 = 0x676E697070696873;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_233226D2C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233226D6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233226E00 + 4 * byte_23362EBAE[a2]))(0x7961576568546E6FLL);
}

uint64_t sub_233226E00(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7961576568546E6FLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233226EC8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x8000000233668A00;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000016;
    else
      v4 = 0xD000000000000013;
    if (v3 == 1)
      v5 = 0x8000000233668A20;
    else
      v5 = 0x8000000233668A40;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000016;
      else
        v7 = 0xD000000000000013;
      if (v6 == 1)
        v2 = 0x8000000233668A20;
      else
        v2 = 0x8000000233668A40;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD000000000000017;
    v5 = 0x8000000233668A00;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD000000000000017)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233226FC4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 1635017060;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0x8000000233668890;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 1635017060;
  if ((a2 & 1) != 0)
    v6 = 0x8000000233668890;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_233227064(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x70756B636970;
  else
    v3 = 0x676E697070696873;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x70756B636970;
  else
    v5 = 0x676E697070696873;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_233227104(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x4E676E6974756F72;
  else
    v2 = 0x4E746E756F636361;
  if ((a2 & 1) != 0)
    v3 = 0x4E676E6974756F72;
  else
    v3 = 0x4E746E756F636361;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_2332271A4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233227210@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233227284 + 4 * byte_23362EBB9[a1]))(a2 + 4);
}

uint64_t sub_233227284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 + 4 && v2 == 0x8000000233668E50)
    v3 = 1;
  else
    v3 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23322733C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x5F544E45534E4F43;
    else
      v3 = 0x5F544E554F434341;
    if (v2 == 1)
      v4 = 0xEF44454B4F564552;
    else
      v4 = 0xEF4445474E414843;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x5F544E45534E4F43;
      else
        v6 = 0x5F544E554F434341;
      if (v5 == 1)
        v7 = 0xEF44454B4F564552;
      else
        v7 = 0xEF4445474E414843;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x4E574F4E4B4E55;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x4E574F4E4B4E55)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233227484(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000544E45;
  v3 = 0x534E4F435F57454ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x4E45534E4F434552;
    else
      v5 = 0xD000000000000012;
    if (v4 == 1)
      v6 = 0xE900000000000054;
    else
      v6 = 0x80000002336694A0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x534E4F435F57454ELL;
  v6 = 0xEB00000000544E45;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x4E45534E4F434552;
    else
      v3 = 0xD000000000000012;
    if (v7 == 1)
      v2 = 0xE900000000000054;
    else
      v2 = 0x80000002336694A0;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2332275AC(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x8000000233668980;
  else
    v2 = 0x8000000233668950;
  if ((a2 & 1) != 0)
    v3 = 0x8000000233668980;
  else
    v3 = 0x8000000233668950;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_233227648(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x524F485455414E55;
  else
    v3 = 0x5A49524F48545541;
  if (v2)
    v4 = 0xEA00000000004445;
  else
    v4 = 0xEC00000044455A49;
  if ((a2 & 1) != 0)
    v5 = 0x524F485455414E55;
  else
    v5 = 0x5A49524F48545541;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000044455A49;
  else
    v6 = 0xEA00000000004445;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2332276F8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233227744(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_2332277AC + 4 * byte_23362EBC3[a2]))();
}

uint64_t sub_2332277AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x8000000233669D90)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23322785C(uint64_t a1, uint64_t a2)
{
  return sub_233228EC8(a1, a2, RawBankConnectData.LegalStructure.rawValue.getter);
}

void sub_233227868(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2332278B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233227910 + 4 * byte_23362EBCC[a2]))(0x544E494F4ALL);
}

uint64_t sub_233227910(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x544E494F4ALL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2332279AC(uint64_t a1, uint64_t a2)
{
  return sub_233228EC8(a1, a2, RawBankConnectData.AccountRole.rawValue.getter);
}

uint64_t sub_2332279B8(uint64_t a1, uint64_t a2)
{
  return sub_233228EC8(a1, a2, RawBankConnectData.Transaction.TransactionType.rawValue.getter);
}

void sub_2332279C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233227A20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233227A8C + 4 * byte_23362EBD5[a2]))(1330464077);
}

uint64_t sub_233227A8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1330464077 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233227B44(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_233227B90(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233227C3C + 4 * byte_23362EBE1[a2]))(0xD000000000000010);
}

uint64_t sub_233227C3C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000002336693E0)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233227D2C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED00004E4F49534ELL;
  v3 = 0x455458455F505041;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x50415F485455414FLL;
    else
      v5 = 0x45575F485455414FLL;
    if (v4 == 1)
      v6 = 0xE900000000000050;
    else
      v6 = 0xE900000000000042;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x455458455F505041;
  v6 = 0xED00004E4F49534ELL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x50415F485455414FLL;
    else
      v3 = 0x45575F485455414FLL;
    if (v7 == 1)
      v2 = 0xE900000000000050;
    else
      v2 = 0xE900000000000042;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_233227E54(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233227E94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233227F1C + 4 * byte_23362EBED[a2]))(0x6E726574746170);
}

uint64_t sub_233227F1C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E726574746170 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233227FEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233228034(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332280C0 + 4 * byte_23362EBF9[a2]))(0x797469746E617571);
}

uint64_t sub_2332280C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x797469746E617571 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233228198(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2332281D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233228230 + 4 * byte_23362EC04[a2]))(0x373134666470);
}

uint64_t sub_233228230(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x373134666470 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2332282D0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233228320(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332283AC + 4 * byte_23362EC0E[a2]))(0x7A69726F68747561);
}

uint64_t sub_2332283AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7A69726F68747561 && v1 == 0xEA00000000006465)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233228488(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0x64656C62616E65;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x8000000233669B20;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0x64656C62616E65;
  if ((a2 & 1) != 0)
    v6 = 0x8000000233669B20;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_233228530(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  char v7;

  v2 = 0xE900000000000064;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6574656C706D6F63;
    else
      v3 = 0x656C6C65636E6163;
    v4 = 0xE900000000000064;
    v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1)
        v6 = 0x6574656C706D6F63;
      else
        v6 = 0x656C6C65636E6163;
      if (v3 != v6)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1852141679;
    v5 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE400000000000000;
  if (v3 != 1852141679)
  {
LABEL_15:
    v7 = sub_23361F224();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v2)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_233228630(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x707954726564726FLL;
  else
    v3 = 0x6556616D65686373;
  if (v2)
    v4 = 0xED00006E6F697372;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x707954726564726FLL;
  else
    v5 = 0x6556616D65686373;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xED00006E6F697372;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2332286E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7461636964657270;
    else
      v3 = 0x6373654474726F73;
    if (v2 == 1)
      v4 = 0xE900000000000065;
    else
      v4 = 0xEF73726F74706972;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7461636964657270;
      else
        v6 = 0x6373654474726F73;
      if (v5 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0xEF73726F74706972;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x74696D696CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x74696D696CLL)
  {
LABEL_21:
    v8 = sub_23361F224();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_233228814(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233228860(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2332288D4 + 4 * byte_23362EC1A[a2]))(a3 + 10);
}

uint64_t sub_2332288D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 10 && v3 == 0x8000000233669DE0)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_23322897C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2332289BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233228A10 + 4 * byte_23362EC24[a2]))(0x6E65657267);
}

uint64_t sub_233228A10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E65657267 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233228AA8(char a1, char a2)
{
  char v2;

  if (qword_23362F088[a1] == qword_23362F088[a2])
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_233228B0C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000013;
  if (v2)
    v4 = 0x8000000233668A60;
  else
    v4 = 0x8000000233668A80;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD000000000000013;
  if ((a2 & 1) != 0)
    v6 = 0x8000000233668A80;
  else
    v6 = 0x8000000233668A60;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_233228BB4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233228BFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233228C44 + 4 * byte_23362EC2C[a2]))(5522759);
}

uint64_t sub_233228C44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 5522759 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_233228CC8(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0xEE00617461642D6CLL;
  else
    v2 = 0xED0000617461446CLL;
  if ((a2 & 1) != 0)
    v3 = 0xEE00617461642D6CLL;
  else
    v3 = 0xED0000617461446CLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_233228D74(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_233228DC0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233228E24 + 4 * byte_23362EC35[a2]))(a3 + 2);
}

uint64_t sub_233228E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x8000000233669120)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_233228EBC(uint64_t a1, uint64_t a2)
{
  return sub_233228EC8(a1, a2, FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter);
}

uint64_t sub_233228EC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_233228F60(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000002CLL;
  v3 = 0x8000000233669180;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000022;
    else
      v5 = 0xD000000000000027;
    if (v4 == 1)
      v6 = 0x80000002336691B0;
    else
      v6 = 0x80000002336691E0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000002CLL;
  v6 = 0x8000000233669180;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000022;
    else
      v2 = 0xD000000000000027;
    if (v7 == 1)
      v3 = 0x80000002336691B0;
    else
      v3 = 0x80000002336691E0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_233229054(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  char v5;

  v2 = 0xEE004749464E4F43;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xEF58494E454F4850;
    else
      v3 = 0xEF504F4F4B534F42;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  else
  {
    v3 = 0xEE004749464E4F43;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v2 = 0xEF58494E454F4850;
      else
        v2 = 0xEF504F4F4B534F42;
    }
  }
  if (v3 == v2)
    v5 = 1;
  else
    v5 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_BYTE *RawBankConnectData.ErrorResponse.init(error:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void static RawBankConnectData.ErrorResponse.== infix(_:_:)(char *a1)
{
  sub_2332271A4(*a1);
}

uint64_t sub_233229174()
{
  return 0x726F727265;
}

uint64_t sub_233229188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233229214()
{
  sub_233229360();
  return sub_23361F428();
}

uint64_t sub_23322923C()
{
  sub_233229360();
  return sub_23361F434();
}

uint64_t RawBankConnectData.ErrorResponse.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045FF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233229360();
  sub_23361F410();
  v10 = v7;
  sub_2332293A4();
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_233229360()
{
  unint64_t result;

  result = qword_256046000;
  if (!qword_256046000)
  {
    result = MEMORY[0x234934494](&unk_23362F038, &_s13ErrorResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046000);
  }
  return result;
}

unint64_t sub_2332293A4()
{
  unint64_t result;

  result = qword_256046008;
  if (!qword_256046008)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Error, &type metadata for RawBankConnectData.Error);
    atomic_store(result, (unint64_t *)&qword_256046008);
  }
  return result;
}

uint64_t RawBankConnectData.ErrorResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046010);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233229360();
  sub_23361F3EC();
  if (!v2)
  {
    sub_233229504();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_233229504()
{
  unint64_t result;

  result = qword_256046018;
  if (!qword_256046018)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Error, &type metadata for RawBankConnectData.Error);
    atomic_store(result, (unint64_t *)&qword_256046018);
  }
  return result;
}

uint64_t sub_233229548@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RawBankConnectData.ErrorResponse.init(from:)(a1, a2);
}

uint64_t sub_23322955C(_QWORD *a1)
{
  return RawBankConnectData.ErrorResponse.encode(to:)(a1);
}

void sub_233229570(char *a1)
{
  sub_2332271A4(*a1);
}

_BYTE *RawBankConnectData.Error.init(code:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_233229588()
{
  return 1701080931;
}

uint64_t sub_233229598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23322961C()
{
  sub_233229768();
  return sub_23361F428();
}

uint64_t sub_233229644()
{
  sub_233229768();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Error.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046020);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233229768();
  sub_23361F410();
  v10 = v7;
  sub_2332297AC();
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_233229768()
{
  unint64_t result;

  result = qword_256046028;
  if (!qword_256046028)
  {
    result = MEMORY[0x234934494](&unk_23362EFE8, &_s5ErrorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046028);
  }
  return result;
}

unint64_t sub_2332297AC()
{
  unint64_t result;

  result = qword_256046030;
  if (!qword_256046030)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ErrorCode, &type metadata for RawBankConnectData.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_256046030);
  }
  return result;
}

uint64_t RawBankConnectData.Error.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046038);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233229768();
  sub_23361F3EC();
  if (!v2)
  {
    sub_23322990C();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_23322990C()
{
  unint64_t result;

  result = qword_256046040;
  if (!qword_256046040)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ErrorCode, &type metadata for RawBankConnectData.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_256046040);
  }
  return result;
}

uint64_t sub_233229950@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RawBankConnectData.Error.init(from:)(a1, a2);
}

uint64_t sub_233229964(_QWORD *a1)
{
  return RawBankConnectData.Error.encode(to:)(a1);
}

uint64_t RawBankConnectData.ErrorCode.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  char v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (v2)
  {

    v5 = 4;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_23361F230();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    RawBankConnectData.ErrorCode.init(rawValue:)((char *)v7);
    v5 = v7[0];
    if (LOBYTE(v7[0]) == 5)
      v5 = 4;
  }
  *a2 = v5;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t RawBankConnectData.ErrorCode.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t RawBankConnectData.ErrorCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233229B04 + 4 * byte_23362EC3A[*v0]))(0x524F485455414E55, 0xEC00000044455A49);
}

unint64_t sub_233229B04()
{
  return 0xD000000000000014;
}

uint64_t sub_233229B58()
{
  return 0x6E776F6E6B6E75;
}

unint64_t sub_233229B74()
{
  unint64_t result;

  result = qword_256046048;
  if (!qword_256046048)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ErrorCode, &type metadata for RawBankConnectData.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_256046048);
  }
  return result;
}

void sub_233229BB8()
{
  char *v0;

  sub_23353D8CC(*v0);
}

void sub_233229BC0(uint64_t a1)
{
  char *v1;

  sub_23353E5E8(a1, *v1);
}

void sub_233229BC8(uint64_t a1)
{
  char *v1;

  sub_23353F08C(a1, *v1);
}

uint64_t sub_233229BD0@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.ErrorCode.init(rawValue:)(a1);
}

uint64_t sub_233229BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RawBankConnectData.ErrorCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_233229C00@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return RawBankConnectData.ErrorCode.init(from:)(a1, a2);
}

uint64_t sub_233229C14()
{
  sub_233229FB4();
  return sub_23361E354();
}

ValueMetadata *type metadata accessor for RawBankConnectData.ErrorResponse()
{
  return &type metadata for RawBankConnectData.ErrorResponse;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Error()
{
  return &type metadata for RawBankConnectData.Error;
}

uint64_t _s9ErrorCodeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233229CD4 + 4 * byte_23362EC44[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233229D08 + 4 * byte_23362EC3F[v4]))();
}

uint64_t sub_233229D08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233229D10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233229D18);
  return result;
}

uint64_t sub_233229D24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233229D2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233229D30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233229D38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.ErrorCode()
{
  return &type metadata for RawBankConnectData.ErrorCode;
}

ValueMetadata *_s5ErrorV10CodingKeysOMa()
{
  return &_s5ErrorV10CodingKeysON;
}

uint64_t _s5ErrorV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233229DA8 + 4 * byte_23362EC49[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233229DC8 + 4 * byte_23362EC4E[v4]))();
}

_BYTE *sub_233229DA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233229DC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233229DD0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233229DD8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233229DE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233229DE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13ErrorResponseV10CodingKeysOMa()
{
  return &_s13ErrorResponseV10CodingKeysON;
}

unint64_t sub_233229E08()
{
  unint64_t result;

  result = qword_256046050;
  if (!qword_256046050)
  {
    result = MEMORY[0x234934494](&unk_23362EF08, &_s13ErrorResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046050);
  }
  return result;
}

unint64_t sub_233229E50()
{
  unint64_t result;

  result = qword_256046058;
  if (!qword_256046058)
  {
    result = MEMORY[0x234934494](&unk_23362EFC0, &_s5ErrorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046058);
  }
  return result;
}

unint64_t sub_233229E98()
{
  unint64_t result;

  result = qword_256046060;
  if (!qword_256046060)
  {
    result = MEMORY[0x234934494](&unk_23362EF30, &_s5ErrorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046060);
  }
  return result;
}

unint64_t sub_233229EE0()
{
  unint64_t result;

  result = qword_256046068;
  if (!qword_256046068)
  {
    result = MEMORY[0x234934494](&unk_23362EF58, &_s5ErrorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046068);
  }
  return result;
}

unint64_t sub_233229F28()
{
  unint64_t result;

  result = qword_256046070;
  if (!qword_256046070)
  {
    result = MEMORY[0x234934494](&unk_23362EE78, &_s13ErrorResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046070);
  }
  return result;
}

unint64_t sub_233229F70()
{
  unint64_t result;

  result = qword_256046078;
  if (!qword_256046078)
  {
    result = MEMORY[0x234934494](&unk_23362EEA0, &_s13ErrorResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046078);
  }
  return result;
}

unint64_t sub_233229FB4()
{
  unint64_t result;

  result = qword_256046080;
  if (!qword_256046080)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ErrorCode, &type metadata for RawBankConnectData.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_256046080);
  }
  return result;
}

uint64_t CloudOrder.updatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CloudOrder.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CloudOrder() + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for CloudOrder()
{
  uint64_t result;

  result = qword_256046110;
  if (!qword_256046110)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CloudOrder.hash(into:)()
{
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  type metadata accessor for CloudOrder();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23322A174()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001DLL;
  else
    return 0x4464657461647075;
}

uint64_t sub_23322A1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23322B198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23322A1E0()
{
  sub_23322AA10();
  return sub_23361F428();
}

uint64_t sub_23322A208()
{
  sub_23322AA10();
  return sub_23361F434();
}

uint64_t CloudOrder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046088);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23322AA10();
  sub_23361F410();
  LOBYTE(v15) = 0;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for CloudOrder() + 20));
    v10 = *v9;
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    v15 = v10;
    v16 = v12;
    v17 = v11;
    v14[15] = 1;
    sub_23322AA54();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CloudOrder.hashValue.getter()
{
  sub_23361F350();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  type metadata accessor for CloudOrder();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t CloudOrder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v23 = a2;
  v27 = sub_23361D634();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560460A0);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CloudOrder();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23322AA10();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v21 = a1;
  v22 = v5;
  v11 = (uint64_t)v10;
  v12 = v24;
  LOBYTE(v28) = 0;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v14 = v25;
  v13 = v26;
  v15 = v27;
  sub_23361F068();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v31 = 1;
  sub_23322AA98();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v13);
  v16 = v29;
  v17 = v30;
  v18 = v11 + *(int *)(v8 + 20);
  *(_OWORD *)v18 = v28;
  *(_QWORD *)(v18 + 16) = v16;
  *(_QWORD *)(v18 + 24) = v17;
  sub_23322AADC(v11, v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return sub_23322AB20(v11);
}

uint64_t sub_23322A704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CloudOrder.init(from:)(a1, a2);
}

uint64_t sub_23322A718(_QWORD *a1)
{
  return CloudOrder.encode(to:)(a1);
}

uint64_t sub_23322A72C()
{
  sub_23361F350();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23322A7F4()
{
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23322A8A8()
{
  sub_23361F350();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit10CloudOrderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;

  if ((sub_23361D5E0() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for CloudOrder() + 20);
  v5 = a1 + v4;
  v6 = *(_QWORD *)(a1 + v4);
  v7 = *(_QWORD *)(a1 + v4 + 8);
  v8 = *(_QWORD *)(a1 + v4 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = (_QWORD *)(a2 + v4);
  v11 = v10[2];
  v12 = v10[3];
  v13 = v6 == *v10 && v7 == v10[1];
  if ((v13 || (sub_23361F224() & 1) != 0)
    && (v8 == v11 ? (v14 = v9 == v12) : (v14 = 0), v14 || (sub_23361F224() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_23322AA10()
{
  unint64_t result;

  result = qword_256046090;
  if (!qword_256046090)
  {
    result = MEMORY[0x234934494](&unk_23362F28C, &type metadata for CloudOrder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046090);
  }
  return result;
}

unint64_t sub_23322AA54()
{
  unint64_t result;

  result = qword_256046098;
  if (!qword_256046098)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedOrderIdentifier, &type metadata for FullyQualifiedOrderIdentifier);
    atomic_store(result, (unint64_t *)&qword_256046098);
  }
  return result;
}

unint64_t sub_23322AA98()
{
  unint64_t result;

  result = qword_2560460A8;
  if (!qword_2560460A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedOrderIdentifier, &type metadata for FullyQualifiedOrderIdentifier);
    atomic_store(result, (unint64_t *)&qword_2560460A8);
  }
  return result;
}

uint64_t sub_23322AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudOrder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23322AB20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CloudOrder();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23322AB5C()
{
  return sub_233167C58(&qword_2560460B0, (uint64_t (*)(uint64_t))type metadata accessor for CloudOrder, (uint64_t)&protocol conformance descriptor for CloudOrder);
}

uint64_t *initializeBufferWithCopyOfBuffer for CloudOrder(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CloudOrder(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CloudOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CloudOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CloudOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t assignWithTake for CloudOrder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudOrder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23322AE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudOrder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23322AF08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361D634();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23322AF84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CloudOrder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23322B040 + 4 * byte_23362F0CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23322B074 + 4 * byte_23362F0C8[v4]))();
}

uint64_t sub_23322B074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23322B07C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23322B084);
  return result;
}

uint64_t sub_23322B090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23322B098);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23322B09C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23322B0A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudOrder.CodingKeys()
{
  return &type metadata for CloudOrder.CodingKeys;
}

unint64_t sub_23322B0C4()
{
  unint64_t result;

  result = qword_256046148;
  if (!qword_256046148)
  {
    result = MEMORY[0x234934494](&unk_23362F264, &type metadata for CloudOrder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046148);
  }
  return result;
}

unint64_t sub_23322B10C()
{
  unint64_t result;

  result = qword_256046150;
  if (!qword_256046150)
  {
    result = MEMORY[0x234934494](&unk_23362F1D4, &type metadata for CloudOrder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046150);
  }
  return result;
}

unint64_t sub_23322B154()
{
  unint64_t result;

  result = qword_256046158;
  if (!qword_256046158)
  {
    result = MEMORY[0x234934494](&unk_23362F1FC, &type metadata for CloudOrder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046158);
  }
  return result;
}

uint64_t sub_23322B198(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4464657461647075 && a2 == 0xEB00000000657461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023366D440)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FinanceStore.setOrderMarkedAsComplete(with:newValue:modificationDate:)(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a3;
  *(_QWORD *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 96) = a2;
  *(_QWORD *)(v4 + 32) = type metadata accessor for FinanceStore.Message();
  v6 = swift_task_alloc();
  v7 = *a1;
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 48) = v7;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v4 + 72) = a1[3];
  return swift_task_switch();
}

uint64_t sub_23322B314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_BYTE *)(v0 + 96);
  v8 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  *(_BYTE *)(v5 + 32) = v7;
  sub_23319F164(v6, v8);
  swift_storeEnumTagMultiPayload();
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_256044370 + dword_256044370);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v9;
  *v9 = v0;
  v9[1] = sub_23322B3F8;
  return v11(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23322B3F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23322B484()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23322B4B8(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return, (uint64_t (*)(char *, char *))static Order.Return.== infix(_:_:));
}

uint64_t sub_23322B4CC(uint64_t a1, uint64_t a2)
{
  return sub_23322BD48(a1, a2, (uint64_t (*)(_OWORD *, _OWORD *))_s10FinanceKit5OrderV8LineItemV2eeoiySbAE_AEtFZ_0);
}

uint64_t sub_23322B4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046330);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.Fulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v32 - v19;
  v40 = a1;
  v41 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || v40 == v41)
    return 1;
  v34 = v20;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v37 = *(_QWORD *)(v18 + 72);
  v38 = v10;
  v33 = (char *)&v32 - v19;
  while (1)
  {
    sub_2331684BC(v40 + v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    sub_2331684BC(v41 + v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v24 = (uint64_t)&v9[*(int *)(v39 + 48)];
    sub_2331684BC((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    sub_2331684BC((uint64_t)v17, v24, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    v25 = v14;
    v26 = v34;
    sub_2331684BC((uint64_t)v9, v34, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      v21 = v33;
      goto LABEL_16;
    }
    v27 = v36;
    sub_233168580(v24, v36, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v28 = static Order.PickupFulfillment.== infix(_:_:)(v26, v27);
    sub_233168500(v27, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v14 = v25;
    v21 = v33;
    if ((v28 & 1) == 0)
      goto LABEL_17;
LABEL_5:
    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v23 += v37;
    if (!--v22)
      return 1;
  }
  sub_2331684BC((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v29 = v35;
    sub_233168580(v24, v35, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v30 = static Order.ShippingFulfillment.== infix(_:_:)(v14, v29);
    sub_233168500(v29, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if ((v30 & 1) == 0)
      goto LABEL_17;
    goto LABEL_5;
  }
  sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
LABEL_16:
  sub_233168608((uint64_t)v9, &qword_256046330);
LABEL_17:
  sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  return 0;
}

uint64_t sub_23322B8B0(uint64_t a1, uint64_t a2)
{
  return sub_23322D9D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Order.Application);
}

uint64_t sub_23322B8BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23361F224(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_23361F224() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23322B980(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount, (uint64_t (*)(char *, char *))static InternalAccount.== infix(_:_:));
}

uint64_t sub_23322B994(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_2331684BC(a1 + v16, (uint64_t)v14, a3);
        sub_2331684BC(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_233168500((uint64_t)v11, a3);
        sub_233168500((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_23322BAD0(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23361EF30();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x234933120](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x234933120](0, a2);
LABEL_21:
    v14 = v13;
    sub_233233C60();
    v15 = sub_23361EA14();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x234933120](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x234933120](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_23361EA14();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_23322BD48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, _OWORD *))
{
  uint64_t v3;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  _OWORD v19[8];
  _OWORD v20[8];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == *(_QWORD *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v5 = (_OWORD *)(a1 + 32);
      v6 = (_OWORD *)(a2 + 32);
      v7 = v3 - 1;
      do
      {
        v8 = v7;
        v9 = v5[5];
        v20[4] = v5[4];
        v20[5] = v9;
        v10 = v5[7];
        v20[6] = v5[6];
        v20[7] = v10;
        v11 = v5[1];
        v20[0] = *v5;
        v20[1] = v11;
        v12 = v5[3];
        v20[2] = v5[2];
        v20[3] = v12;
        v13 = v6[5];
        v19[4] = v6[4];
        v19[5] = v13;
        v14 = v6[7];
        v19[6] = v6[6];
        v19[7] = v14;
        v15 = v6[1];
        v19[0] = *v6;
        v19[1] = v15;
        v16 = v6[3];
        v19[2] = v6[2];
        v19[3] = v16;
        v17 = a3(v20, v19);
        if ((v17 & 1) == 0)
          break;
        v7 = v8 - 1;
        v6 += 8;
        v5 += 8;
      }
      while (v8);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_23322BE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = type metadata accessor for RawBankConnectData.InstitutionForPassResponse(0);
  v4 = MEMORY[0x24BDAC7A8](v25);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v9 = (uint64_t *)((char *)&v23 - v8);
  v10 = *(_QWORD *)(a1 + 16);
  v26 = a2;
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v10 && a1 != v26)
  {
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v24 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_2331684BC(a1 + v11, (uint64_t)v9, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
      sub_2331684BC(v26 + v11, (uint64_t)v6, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
      if (!static RawBankConnectData.Institution.== infix(_:_:)(v9, v6))
        break;
      v12 = *(int *)(v25 + 20);
      v13 = *(_QWORD *)((char *)v9 + v12);
      v14 = *(_QWORD *)((char *)v9 + v12 + 8);
      v15 = *(_QWORD *)((char *)v9 + v12 + 16);
      v16 = *(_QWORD *)((char *)v9 + v12 + 24);
      v17 = (_QWORD *)((char *)v6 + v12);
      v18 = v17[2];
      v19 = v17[3];
      v20 = v13 == *v17 && v14 == v17[1];
      if (!v20 && (sub_23361F224() & 1) == 0)
        break;
      v21 = v15 == v18 && v16 == v19;
      if (!v21 && (sub_23361F224() & 1) == 0)
        break;
      sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
      sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
      v11 += v24;
      if (!--v10)
        return 1;
    }
    sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.InstitutionForPassResponse);
    return 0;
  }
  return 1;
}

uint64_t sub_23322BFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v3++;
      v6 = v7;
      v9 = *v4++;
      v8 = v9;
      if (v6 == 1)
        v10 = 0x5F544E45534E4F43;
      else
        v10 = 0x5F544E554F434341;
      if (v6 == 1)
        v11 = 0xEF44454B4F564552;
      else
        v11 = 0xEF4445474E414843;
      if (v6)
        v12 = v10;
      else
        v12 = 0x4E574F4E4B4E55;
      if (v6)
        v13 = v11;
      else
        v13 = 0xE700000000000000;
      if (v8 == 1)
        v14 = 0x5F544E45534E4F43;
      else
        v14 = 0x5F544E554F434341;
      if (v8 == 1)
        v15 = 0xEF44454B4F564552;
      else
        v15 = 0xEF4445474E414843;
      if (v8)
        v16 = v14;
      else
        v16 = 0x4E574F4E4B4E55;
      if (v8)
        v17 = v15;
      else
        v17 = 0xE700000000000000;
      if (v12 == v16 && v13 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v5 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_23322C150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v28 = a2 + 32;
    v29 = a1 + 32;
    while (1)
    {
      v5 = (_QWORD *)(v29 + 80 * v3);
      v6 = (_QWORD *)*v5;
      v7 = (_QWORD *)(v28 + 80 * v3);
      v8 = (_QWORD *)*v7;
      v9 = *(_QWORD *)(*v5 + 16);
      if (v9 != *(_QWORD *)(*v7 + 16))
        break;
      v10 = (_QWORD *)v5[1];
      v11 = v5[2];
      v41 = v5[4];
      v42 = v5[3];
      v37 = v5[6];
      v36 = v5[7];
      v32 = v5[9];
      v33 = v5[8];
      v12 = (_QWORD *)v7[1];
      v13 = v7[2];
      v14 = v7[3];
      v39 = v7[4];
      v40 = v5[5];
      v38 = v7[5];
      v34 = v7[7];
      v35 = v7[6];
      v30 = v7[9];
      v31 = v7[8];
      if (v9)
        v15 = v6 == v8;
      else
        v15 = 1;
      if (!v15)
      {
        v16 = v6[4] == v8[4] && v6[5] == v8[5];
        if (!v16 && (sub_23361F224() & 1) == 0)
          return 0;
        if (v9 != 1)
        {
          if ((v6[6] != v8[6] || v6[7] != v8[7]) && (sub_23361F224() & 1) == 0)
            return 0;
          v17 = v9 - 2;
          if (v17)
          {
            v25 = v8 + 9;
            v26 = v6 + 9;
            do
            {
              v27 = *(v26 - 1) == *(v25 - 1) && *v26 == *v25;
              if (!v27 && (sub_23361F224() & 1) == 0)
                return 0;
              v25 += 2;
              v26 += 2;
            }
            while (--v17);
          }
        }
      }
      v18 = v10[2];
      if (v18 != v12[2])
        return 0;
      if (v18 && v10 != v12)
      {
        if (v10[4] != v12[4])
          return 0;
        if (v18 != 1)
        {
          if (v10[5] != v12[5])
            return 0;
          v19 = v10 + 6;
          v20 = v12 + 6;
          for (i = v18 - 2; i; --i)
          {
            v23 = *v19++;
            v22 = v23;
            v24 = *v20++;
            if (v22 != v24)
              return 0;
          }
        }
      }
      if ((v11 != v13 || v42 != v14) && (sub_23361F224() & 1) == 0
        || (v41 != v39 || v40 != v38) && (sub_23361F224() & 1) == 0
        || (v37 != v35 || v36 != v34) && (sub_23361F224() & 1) == 0
        || (v33 != v31 || v32 != v30) && (sub_23361F224() & 1) == 0)
      {
        return 0;
      }
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 0;
}

BOOL sub_23322C40C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_23322C478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char v39;
  BOOL v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RawBankConnectData.TermsAndConditions();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (uint64_t *)((char *)&v43 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_26:
    v39 = 0;
    return v39 & 1;
  }
  v50 = v18;
  if (v22 && a1 != a2)
  {
    v48 = v11;
    v49 = a1;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v45 = v7;
    v46 = v24;
    v25 = v22 - 1;
    v47 = a2;
    v44 = v13;
    while (1)
    {
      sub_2331684BC(v49 + v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      sub_2331684BC(a2 + v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      v26 = *v21 == *v17 && v21[1] == v17[1];
      v27 = v50;
      if (!v26 && (sub_23361F224() & 1) == 0)
        break;
      v28 = *(int *)(v27 + 20);
      v29 = (uint64_t)v17 + v28;
      v30 = (uint64_t)&v13[*(int *)(v48 + 48)];
      sub_233199624((uint64_t)v21 + v28, (uint64_t)v13);
      sub_233199624(v29, v30);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v31((uint64_t)v13, 1, v4) == 1)
      {
        if (v31(v30, 1, v4) != 1)
          goto LABEL_24;
        sub_233168608((uint64_t)v13, &qword_254248700);
      }
      else
      {
        sub_233199624((uint64_t)v13, (uint64_t)v10);
        if (v31(v30, 1, v4) == 1)
        {
          (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_24:
          sub_233168608((uint64_t)v13, &qword_256045948);
          break;
        }
        v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
        v33 = v10;
        v34 = v5;
        v35 = v45;
        v32(v45, v30, v4);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v36 = sub_23361E108();
        v37 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38 = v35;
        v5 = v34;
        v10 = v33;
        v13 = v44;
        v37(v38, v4);
        v37(v10, v4);
        sub_233168608((uint64_t)v13, &qword_254248700);
        if ((v36 & 1) == 0)
          break;
      }
      if ((sub_23361D5E0() & 1) == 0)
        break;
      v39 = sub_23361D5E0();
      sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
      v41 = v25-- != 0;
      if ((v39 & 1) != 0)
      {
        a2 = v47;
        v23 += v46;
        if (v41)
          continue;
      }
      return v39 & 1;
    }
    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    goto LABEL_26;
  }
  v39 = 1;
  return v39 & 1;
}

uint64_t sub_23322C834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for RawBankConnectData.NotificationEvent(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v32 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v33 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_2331684BC(a1 + v12, (uint64_t)v10, type metadata accessor for RawBankConnectData.NotificationEvent);
      sub_2331684BC(a2 + v12, (uint64_t)v7, type metadata accessor for RawBankConnectData.NotificationEvent);
      v14 = *(_QWORD *)v10 == *(_QWORD *)v7 && *((_QWORD *)v10 + 1) == *((_QWORD *)v7 + 1);
      if (!v14 && (sub_23361F224() & 1) == 0)
      {
LABEL_40:
        sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.NotificationEvent);
        sub_233168500((uint64_t)v10, type metadata accessor for RawBankConnectData.NotificationEvent);
        return 0;
      }
      v15 = v10[16];
      if (v10[16])
      {
        if (v15 == 1)
          v16 = 0x5F544E45534E4F43;
        else
          v16 = 0x5F544E554F434341;
        if (v15 == 1)
          v17 = 0xEF44454B4F564552;
        else
          v17 = 0xEF4445474E414843;
        v18 = v7[16];
        if (v7[16])
        {
LABEL_21:
          if (v18 == 1)
          {
            v19 = 0x5F544E45534E4F43;
            v20 = 0x454B4F564552;
          }
          else
          {
            v19 = 0x5F544E554F434341;
            v20 = 0x45474E414843;
          }
          v21 = v20 & 0xFFFFFFFFFFFFLL | 0xEF44000000000000;
          if (v16 != v19)
            goto LABEL_30;
          goto LABEL_28;
        }
      }
      else
      {
        v17 = 0xE700000000000000;
        v16 = 0x4E574F4E4B4E55;
        v18 = v7[16];
        if (v7[16])
          goto LABEL_21;
      }
      v21 = 0xE700000000000000;
      if (v16 != 0x4E574F4E4B4E55)
        goto LABEL_30;
LABEL_28:
      if (v17 == v21)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_31;
      }
LABEL_30:
      v22 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        goto LABEL_40;
LABEL_31:
      if ((sub_23361D5E0() & 1) == 0)
        goto LABEL_40;
      v23 = *(int *)(v4 + 28);
      v24 = *(_QWORD *)&v10[v23];
      v25 = *(_QWORD *)&v10[v23 + 8];
      v26 = &v7[v23];
      if ((v24 != *(_QWORD *)v26 || v25 != *((_QWORD *)v26 + 1)) && (sub_23361F224() & 1) == 0)
        goto LABEL_40;
      v27 = *(int *)(v4 + 32);
      v28 = &v10[v27];
      v29 = *(_QWORD *)&v10[v27 + 8];
      v30 = &v7[v27];
      v31 = *((_QWORD *)v30 + 1);
      if (v29)
      {
        if (!v31 || (*(_QWORD *)v28 != *(_QWORD *)v30 || v29 != v31) && (sub_23361F224() & 1) == 0)
          goto LABEL_40;
      }
      else if (v31)
      {
        goto LABEL_40;
      }
      sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.NotificationEvent);
      sub_233168500((uint64_t)v10, type metadata accessor for RawBankConnectData.NotificationEvent);
      v12 += v33;
      --v11;
    }
    while (v11);
  }
  return 1;
}

BOOL sub_23322CB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  BOOL v19;
  _QWORD v21[2];
  __int128 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int16 v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[2];
  __int128 v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int16 v35;
  char v36;
  __int128 v37;
  uint64_t v38;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_BYTE *)(a1 + v5 + 64);
        v9 = *(_WORD *)(a1 + v5 + 104);
        v10 = *(_BYTE *)(a1 + v5 + 106);
        v11 = *(_QWORD *)(a1 + v5 + 128);
        v30[0] = *(_QWORD *)(a1 + v5 + 32);
        v30[1] = v7;
        v31 = *(_OWORD *)(a1 + v5 + 48);
        v32 = v8;
        v33 = *(_OWORD *)(a1 + v5 + 72);
        v34 = *(_OWORD *)(a1 + v5 + 88);
        v35 = v9;
        v36 = v10;
        v37 = *(_OWORD *)(a1 + v5 + 112);
        v38 = v11;
        v12 = *(_QWORD *)(a2 + v5 + 40);
        v13 = *(_BYTE *)(a2 + v5 + 64);
        v14 = *(_WORD *)(a2 + v5 + 104);
        v15 = *(_BYTE *)(a2 + v5 + 106);
        v16 = *(_QWORD *)(a2 + v5 + 128);
        v21[0] = *(_QWORD *)(a2 + v5 + 32);
        v21[1] = v12;
        v22 = *(_OWORD *)(a2 + v5 + 48);
        v23 = v13;
        v24 = *(_OWORD *)(a2 + v5 + 72);
        v25 = *(_OWORD *)(a2 + v5 + 88);
        v26 = v14;
        v27 = v15;
        v28 = *(_OWORD *)(a2 + v5 + 112);
        v29 = v16;
        v17 = _s10FinanceKit18RawBankConnectDataO12AccountPartyV2eeoiySbAE_AEtFZ_0((uint64_t)v30, (uint64_t)v21);
        v19 = v6-- != 0;
        if (!v17)
          break;
        v5 += 104;
      }
      while (v19);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_23322CC8C(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, type metadata accessor for RawBankConnectData.Transaction, (uint64_t (*)(char *, char *))static RawBankConnectData.Transaction.== infix(_:_:));
}

uint64_t sub_23322CCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 1);
      v6 = *i;
      v7 = *(v3 - 1);
      v8 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_23361F224() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_23361F224() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_23322CD64(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, type metadata accessor for RawBankConnectData.Institution, (uint64_t (*)(char *, char *))static RawBankConnectData.Institution.== infix(_:_:));
}

uint64_t sub_23322CD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046320);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawBankConnectData.Account(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v32 - v19;
  v40 = a1;
  v41 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || v40 == v41)
    return 1;
  v34 = v20;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v37 = *(_QWORD *)(v18 + 72);
  v38 = v10;
  v33 = (char *)&v32 - v19;
  while (1)
  {
    sub_2331684BC(v40 + v23, (uint64_t)v21, type metadata accessor for RawBankConnectData.Account);
    sub_2331684BC(v41 + v23, (uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
    v24 = (uint64_t)&v9[*(int *)(v39 + 48)];
    sub_2331684BC((uint64_t)v21, (uint64_t)v9, type metadata accessor for RawBankConnectData.Account);
    sub_2331684BC((uint64_t)v17, v24, type metadata accessor for RawBankConnectData.Account);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    v25 = v14;
    v26 = v34;
    sub_2331684BC((uint64_t)v9, v34, type metadata accessor for RawBankConnectData.Account);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168500(v26, type metadata accessor for RawBankConnectData.LiabilityAccount);
      v21 = v33;
      goto LABEL_16;
    }
    v27 = v36;
    sub_233168580(v24, v36, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v28 = _s10FinanceKit18RawBankConnectDataO16LiabilityAccountV2eeoiySbAE_AEtFZ_0(v26, v27);
    sub_233168500(v27, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_233168500(v26, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.Account);
    v14 = v25;
    v21 = v33;
    if ((v28 & 1) == 0)
      goto LABEL_17;
LABEL_5:
    sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
    sub_233168500((uint64_t)v21, type metadata accessor for RawBankConnectData.Account);
    v23 += v37;
    if (!--v22)
      return 1;
  }
  sub_2331684BC((uint64_t)v9, (uint64_t)v14, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v29 = v35;
    sub_233168580(v24, v35, type metadata accessor for RawBankConnectData.AssetAccount);
    v30 = static RawBankConnectData.AssetAccount.== infix(_:_:)(v14, v29);
    sub_233168500(v29, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_233168500((uint64_t)v14, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.Account);
    if ((v30 & 1) == 0)
      goto LABEL_17;
    goto LABEL_5;
  }
  sub_233168500((uint64_t)v14, type metadata accessor for RawBankConnectData.AssetAccount);
LABEL_16:
  sub_233168608((uint64_t)v9, &qword_256046320);
LABEL_17:
  sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
  sub_233168500((uint64_t)v21, type metadata accessor for RawBankConnectData.Account);
  return 0;
}

uint64_t sub_23322D150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  BOOL v16;
  _OWORD v18[6];
  uint64_t v19;
  _OWORD v20[6];
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v14 = 1;
    }
    else
    {
      v3 = a2 + 64;
      v4 = v2 - 1;
      v5 = a1 + 64;
      do
      {
        v6 = *(_QWORD *)(v5 + 64);
        v7 = *(_OWORD *)(v5 - 16);
        v20[0] = *(_OWORD *)(v5 - 32);
        v20[1] = v7;
        v8 = *(_OWORD *)(v5 + 16);
        v20[2] = *(_OWORD *)v5;
        v20[3] = v8;
        v9 = *(_OWORD *)(v5 + 48);
        v20[4] = *(_OWORD *)(v5 + 32);
        v20[5] = v9;
        v21 = v6;
        v10 = *(_QWORD *)(v3 + 64);
        v11 = *(_OWORD *)(v3 - 16);
        v18[0] = *(_OWORD *)(v3 - 32);
        v18[1] = v11;
        v12 = *(_OWORD *)(v3 + 16);
        v18[2] = *(_OWORD *)v3;
        v18[3] = v12;
        v13 = *(_OWORD *)(v3 + 48);
        v18[4] = *(_OWORD *)(v3 + 32);
        v18[5] = v13;
        v19 = v10;
        v14 = _s10FinanceKit18RawBankConnectDataO12PartyAddressV2eeoiySbAE_AEtFZ_0((uint64_t)v20, (uint64_t)v18);
        v16 = v4-- != 0;
        if ((v14 & 1) == 0)
          break;
        v3 += 104;
        v5 += 104;
      }
      while (v16);
    }
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_23322D218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_23322D478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v3++;
      v6 = v7;
      v9 = *v4++;
      v8 = v9;
      v10 = 0xE900000000000050;
      if (v6 == 1)
        v11 = 0x50415F485455414FLL;
      else
        v11 = 0x45575F485455414FLL;
      if (v6 == 1)
        v12 = 0xE900000000000050;
      else
        v12 = 0xE900000000000042;
      if (v6)
        v13 = v11;
      else
        v13 = 0x455458455F505041;
      if (v6)
        v14 = v12;
      else
        v14 = 0xED00004E4F49534ELL;
      if (v8 == 1)
        v15 = 0x50415F485455414FLL;
      else
        v15 = 0x45575F485455414FLL;
      if (v8 != 1)
        v10 = 0xE900000000000042;
      if (v8)
        v16 = v15;
      else
        v16 = 0x455458455F505041;
      if (v8)
        v17 = v10;
      else
        v17 = 0xED00004E4F49534ELL;
      if (v13 == v16 && v14 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v5 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_23322D5CC(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPaymentTransaction, (uint64_t (*)(char *, char *))_s10FinanceKit26RawOrderPaymentTransactionV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23322D5E0(uint64_t a1, uint64_t a2)
{
  return sub_23322B994(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn, (uint64_t (*)(char *, char *))static RawOrderReturn.== infix(_:_:));
}

uint64_t sub_23322D5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  BOOL v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for RawOrderPickupFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderShippingFulfillment();
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046328);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawOrderFulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v32 - v19;
  v40 = a1;
  v41 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || v40 == v41)
    return 1;
  v34 = v20;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v37 = *(_QWORD *)(v18 + 72);
  v38 = v10;
  v33 = (char *)&v32 - v19;
  while (1)
  {
    sub_2331684BC(v40 + v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_2331684BC(v41 + v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v24 = (uint64_t)&v9[*(int *)(v39 + 48)];
    sub_2331684BC((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_2331684BC((uint64_t)v17, v24, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    v25 = v14;
    v26 = v34;
    sub_2331684BC((uint64_t)v9, v34, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v21 = v33;
      goto LABEL_16;
    }
    v27 = v36;
    sub_233168580(v24, v36, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    v28 = static RawOrderPickupFulfillment.== infix(_:_:)(v26, v27);
    sub_233168500(v27, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v14 = v25;
    v21 = v33;
    if ((v28 & 1) == 0)
      goto LABEL_17;
LABEL_5:
    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v23 += v37;
    if (!--v22)
      return 1;
  }
  sub_2331684BC((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v29 = v35;
    sub_233168580(v24, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    v30 = static RawOrderShippingFulfillment.== infix(_:_:)((uint64_t)v14, v29);
    sub_233168500((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if (!v30)
      goto LABEL_17;
    goto LABEL_5;
  }
  sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
LABEL_16:
  sub_233168608((uint64_t)v9, &qword_256046328);
LABEL_17:
  sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
  sub_233168500((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
  return 0;
}

uint64_t sub_23322D9CC(uint64_t a1, uint64_t a2)
{
  return sub_23322D9D8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
}

uint64_t sub_23322D9D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_23361D340();
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v47);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a3(0);
  v14 = MEMORY[0x24BDAC7A8](v46);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v19 = (uint64_t *)((char *)&v39 - v18);
  v20 = *(_QWORD *)(a1 + 16);
  if (v20 == *(_QWORD *)(a2 + 16))
  {
    if (!v20 || a1 == a2)
      return 1;
    v40 = v8;
    v41 = v11;
    v21 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v42 = *(_QWORD *)(v17 + 72);
    v43 = a2;
    v22 = v46;
    v44 = a1;
    v45 = a3;
    while (1)
    {
      sub_2331684BC(a1 + v21, (uint64_t)v19, a3);
      sub_2331684BC(a2 + v21, (uint64_t)v16, a3);
      if (*v19 != *v16)
        break;
      v23 = *(int *)(v22 + 20);
      v24 = (uint64_t)v16 + v23;
      v25 = (uint64_t)&v13[*(int *)(v47 + 48)];
      sub_233199624((uint64_t)v19 + v23, (uint64_t)v13);
      sub_233199624(v24, v25);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      if (v26((uint64_t)v13, 1, v6) == 1)
      {
        if (v26(v25, 1, v6) != 1)
          goto LABEL_21;
        sub_233168608((uint64_t)v13, &qword_254248700);
        a3 = v45;
      }
      else
      {
        v27 = (uint64_t)v41;
        sub_233199624((uint64_t)v13, (uint64_t)v41);
        if (v26(v25, 1, v6) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v27, v6);
LABEL_21:
          sub_233168608((uint64_t)v13, &qword_256045948);
          a3 = v45;
          break;
        }
        v28 = v48;
        v29 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v40, v25, v6);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v30 = sub_23361E108();
        v31 = *(void (**)(char *, uint64_t))(v28 + 8);
        v32 = v29;
        v22 = v46;
        v31(v32, v6);
        v31((char *)v27, v6);
        sub_233168608((uint64_t)v13, &qword_254248700);
        a3 = v45;
        if ((v30 & 1) == 0)
          break;
      }
      v33 = *(int *)(v22 + 24);
      v34 = (_QWORD *)((char *)v19 + v33);
      v35 = *(_QWORD *)((char *)v19 + v33 + 8);
      v36 = (_QWORD *)((char *)v16 + v33);
      v37 = v36[1];
      if (v35)
      {
        if (!v37 || (*v34 != *v36 || v35 != v37) && (sub_23361F224() & 1) == 0)
          break;
      }
      else if (v37)
      {
        break;
      }
      sub_233168500((uint64_t)v16, a3);
      sub_233168500((uint64_t)v19, a3);
      a2 = v43;
      v21 += v42;
      --v20;
      a1 = v44;
      if (!v20)
        return 1;
    }
    sub_233168500((uint64_t)v16, a3);
    sub_233168500((uint64_t)v19, a3);
  }
  return 0;
}

uint64_t sub_23322DD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v18 = a1;
    v19 = a2;
    while (1)
    {
      v5 = *(unsigned int *)(a1 + v3 + 48);
      v6 = *(unsigned __int16 *)(a1 + v3 + 52);
      v7 = *(unsigned __int16 *)(a1 + v3 + 54);
      v24 = *(_DWORD *)(a1 + v3 + 64);
      v8 = *(_QWORD *)(a1 + v3 + 80);
      v9 = *(unsigned int *)(a2 + v3 + 48);
      v10 = *(unsigned __int16 *)(a2 + v3 + 52);
      v11 = *(unsigned __int16 *)(a2 + v3 + 54);
      v23 = *(_QWORD *)(a2 + v3 + 56);
      v22 = *(_DWORD *)(a2 + v3 + 64);
      v20 = *(_QWORD *)(a2 + v3 + 72);
      v21 = *(_QWORD *)(a1 + v3 + 72);
      v25 = *(_QWORD *)(a1 + v3 + 56);
      v26 = *(_QWORD *)(a2 + v3 + 80);
      if (*(_QWORD *)(a1 + v3 + 32) != *(_QWORD *)(a2 + v3 + 32)
        || *(_QWORD *)(a1 + v3 + 40) != *(_QWORD *)(a2 + v3 + 40))
      {
        v12 = *(unsigned __int16 *)(a1 + v3 + 52);
        v13 = *(unsigned __int16 *)(a2 + v3 + 52);
        v14 = sub_23361F224();
        v10 = v13;
        v6 = v12;
        if ((v14 & 1) == 0)
          break;
      }
      v15 = v5 | (v6 << 32) | (v7 << 48);
      v16 = v9 | (v10 << 32) | (v11 << 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      if ((MEMORY[0x234932E38](v15, v25, v24, v16, v23, v22) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return 0;
      }
      if (v21 == v20 && v8 == v26)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v4 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v4 & 1) == 0)
          return 0;
      }
      v3 += 56;
      --v2;
      a1 = v18;
      a2 = v19;
      if (!v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_23322DFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;

  v4 = type metadata accessor for Order.PaymentTransaction();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (unsigned __int8 *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (unsigned __int8 *)&v33 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v34 = *(_QWORD *)(v8 + 72);
    v35 = a2;
    v36 = v4;
    v37 = a1;
    while (1)
    {
      v38 = v11;
      sub_2331684BC(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
      sub_2331684BC(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
      if (*v10 != *v7 || v10[1] != v7[1])
        break;
      v39 = v12;
      v14 = *((_DWORD *)v10 + 6);
      v16 = *((_QWORD *)v10 + 4);
      v15 = *((_QWORD *)v10 + 5);
      v40 = *((_DWORD *)v7 + 6);
      v41 = v14;
      v18 = *((_QWORD *)v7 + 4);
      v17 = *((_QWORD *)v7 + 5);
      v20 = *((_QWORD *)v10 + 1);
      v19 = *((_QWORD *)v10 + 2);
      v21 = *((_QWORD *)v7 + 1);
      v22 = *((_QWORD *)v7 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((MEMORY[0x234932E38](v20, v19, v41, v21, v22, v40) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      }
      if (v16 == v18 && v15 == v17)
      {
        swift_bridgeObjectRelease_n();
        v23 = v36;
        a1 = v37;
        v24 = v39;
      }
      else
      {
        v25 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = v36;
        a1 = v37;
        v24 = v39;
        if ((v25 & 1) == 0)
          break;
      }
      if ((*((_QWORD *)v10 + 6) != *((_QWORD *)v7 + 6) || *((_QWORD *)v10 + 7) != *((_QWORD *)v7 + 7))
        && (sub_23361F224() & 1) == 0)
      {
        break;
      }
      v26 = *((_QWORD *)v10 + 9);
      v27 = *((_QWORD *)v7 + 9);
      if (v26)
      {
        if (!v27 || (*((_QWORD *)v10 + 8) != *((_QWORD *)v7 + 8) || v26 != v27) && (sub_23361F224() & 1) == 0)
          break;
      }
      else if (v27)
      {
        break;
      }
      if ((sub_23361D5E0() & 1) == 0)
        break;
      v28 = *(int *)(v23 + 40);
      v29 = &v10[v28];
      v30 = *(_QWORD *)&v10[v28 + 8];
      v31 = &v7[v28];
      v32 = *((_QWORD *)v31 + 1);
      if (v30)
      {
        if (!v32 || (*(_QWORD *)v29 != *(_QWORD *)v31 || v30 != v32) && (sub_23361F224() & 1) == 0)
          break;
      }
      else if (v32)
      {
        break;
      }
      sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
      sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
      a2 = v35;
      v12 = v24 + v34;
      result = 1;
      v11 = v38 - 1;
      if (v38 == 1)
        return result;
    }
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
    sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
  }
  return 0;
}

uint64_t sub_23322E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_23361D6A0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v17 = sub_23361E108();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

__n128 RawBankConnectData.MonetaryAmount.decimalRepresentation.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  *(_DWORD *)a1 = *(_DWORD *)v1;
  result = *(__n128 *)(v1 + 4);
  *(__n128 *)(a1 + 4) = result;
  return result;
}

__n128 RawBankConnectData.MonetaryAmount.decimalRepresentation.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;

  *(_DWORD *)v1 = *(_DWORD *)a1;
  result = *(__n128 *)(a1 + 4);
  *(__n128 *)(v1 + 4) = result;
  return result;
}

uint64_t (*RawBankConnectData.MonetaryAmount.decimalRepresentation.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.MonetaryAmount.currency.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_DWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 44);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_DWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 20) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 RawBankConnectData.MonetaryAmount.currency.setter(uint64_t a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int32 v4;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  __n128 result;
  __n128 v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  v9 = *(__n128 *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[1].n128_u64[1] = v2;
  v1[2].n128_u64[0] = v3;
  v1[2].n128_u32[2] = v4;
  v1[2].n128_u8[12] = v5;
  result = v9;
  v1[3] = v9;
  v1[4].n128_u64[0] = v6;
  v1[4].n128_u64[1] = v7;
  return result;
}

uint64_t (*RawBankConnectData.MonetaryAmount.currency.modify())()
{
  return nullsub_1;
}

__n128 RawBankConnectData.MonetaryAmount.init(decimalRepresentation:currency:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = *(_DWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)a3 = *(_DWORD *)a1;
  *(_OWORD *)(a3 + 4) = *(_OWORD *)(a1 + 4);
  *(_OWORD *)(a3 + 24) = *(_OWORD *)a2;
  *(_DWORD *)(a3 + 40) = v3;
  *(_BYTE *)(a3 + 44) = v4;
  *(_QWORD *)(a3 + 48) = v5;
  *(_QWORD *)(a3 + 56) = v6;
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a3 + 64) = result;
  return result;
}

uint64_t static RawBankConnectData.MonetaryAmount.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v16 = *(_BYTE *)(a1 + 44);
  v17 = *(_DWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 44);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  if ((MEMORY[0x234932E38](*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16)) & 1) != 0)
  {
    v27[0] = v19;
    v27[1] = v18;
    v28 = v17;
    v29 = v16;
    v30 = v15;
    v31 = v14;
    v32 = v2;
    v33 = v3;
    v20[0] = v4;
    v20[1] = v5;
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v9;
    v25 = v10;
    v26 = v11;
    v12 = _s10FinanceKit18RawBankConnectDataO8CurrencyV2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_23322E668()
{
  _BYTE *v0;

  if (*v0)
    return 0x79636E6572727563;
  else
    return 0xD000000000000015;
}

uint64_t sub_23322E6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2332336FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23322E6CC()
{
  sub_233230B7C();
  return sub_23361F428();
}

uint64_t sub_23322E6F4()
{
  sub_233230B7C();
  return sub_23361F434();
}

uint64_t RawBankConnectData.MonetaryAmount.encode(to:)(_QWORD *a1)
{
  int *v1;
  uint64_t v2;
  int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[20];
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v10 = *((_QWORD *)v3 + 3);
  v19 = *((_QWORD *)v3 + 4);
  v20 = v10;
  v27 = v3[10];
  v18 = *((unsigned __int8 *)v3 + 44);
  v11 = *((_QWORD *)v3 + 6);
  v16 = *((_QWORD *)v3 + 7);
  v17 = v11;
  v12 = *((_QWORD *)v3 + 8);
  v14 = *((_QWORD *)v3 + 9);
  v15 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233230B7C();
  sub_23361F410();
  *(_DWORD *)v21 = v9;
  *(_OWORD *)&v21[4] = *(_OWORD *)(v3 + 1);
  v28 = 0;
  sub_233230BC0();
  sub_23361F17C();
  if (!v2)
  {
    *(_QWORD *)v21 = v20;
    *(_QWORD *)&v21[8] = v19;
    *(_DWORD *)&v21[16] = v27;
    v22 = v18;
    v23 = v17;
    v24 = v16;
    v25 = v15;
    v26 = v14;
    v28 = 1;
    sub_233230C04();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawBankConnectData.MonetaryAmount.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v18;
  _BYTE v19[20];
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233230B7C();
  sub_23361F3EC();
  if (!v2)
  {
    v24 = 0;
    sub_233230C48();
    sub_23361F068();
    v9 = *(_DWORD *)v19;
    v18 = *(_OWORD *)&v19[4];
    v24 = 1;
    sub_233230C8C();
    sub_23361F068();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v10 = *(_DWORD *)&v19[16];
    v11 = v20;
    v12 = v21;
    v13 = v22;
    v15 = v18;
    v14 = *(_OWORD *)v19;
    v16 = v23;
    *(_DWORD *)a2 = v9;
    *(_OWORD *)(a2 + 4) = v15;
    *(_OWORD *)(a2 + 24) = v14;
    *(_DWORD *)(a2 + 40) = v10;
    *(_BYTE *)(a2 + 44) = v11;
    *(_QWORD *)(a2 + 48) = v12;
    *(_QWORD *)(a2 + 56) = v13;
    *(_OWORD *)(a2 + 64) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23322EA7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.MonetaryAmount.init(from:)(a1, a2);
}

uint64_t sub_23322EA90(_QWORD *a1)
{
  return RawBankConnectData.MonetaryAmount.encode(to:)(a1);
}

uint64_t sub_23322EAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v16 = *(_BYTE *)(a1 + 44);
  v17 = *(_DWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 44);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  if ((MEMORY[0x234932E38](*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16)) & 1) != 0)
  {
    v27[0] = v19;
    v27[1] = v18;
    v28 = v17;
    v29 = v16;
    v30 = v15;
    v31 = v14;
    v32 = v2;
    v33 = v3;
    v20[0] = v4;
    v20[1] = v5;
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v9;
    v25 = v10;
    v26 = v11;
    v12 = _s10FinanceKit18RawBankConnectDataO8CurrencyV2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v20);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

__n128 RawBankConnectData.Currency.currencyRate.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int32 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u32[0];
  v3 = v1[1].n128_u8[4];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u32[0] = v2;
  a1[1].n128_u8[4] = v3;
  return result;
}

__n128 RawBankConnectData.Currency.currencyRate.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u32[0];
  v3 = a1[1].n128_u8[4];
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u32[0] = v2;
  v1[1].n128_u8[4] = v3;
  return result;
}

uint64_t (*RawBankConnectData.Currency.currencyRate.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Currency.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Currency.currencyCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Currency.currencyCode.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Currency.originalCurrencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.Currency.originalCurrencyCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawBankConnectData.Currency.originalCurrencyCode.modify())()
{
  return nullsub_1;
}

__n128 RawBankConnectData.Currency.init(currencyRate:currencyCode:originalCurrencyCode:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>)
{
  unsigned __int32 v6;
  unsigned __int8 v7;
  __n128 result;

  v6 = a1[1].n128_u32[0];
  v7 = a1[1].n128_u8[4];
  result = *a1;
  *a6 = *a1;
  a6[1].n128_u32[0] = v6;
  a6[1].n128_u8[4] = v7;
  a6[1].n128_u64[1] = a2;
  a6[2].n128_u64[0] = a3;
  a6[2].n128_u64[1] = a4;
  a6[3].n128_u64[0] = a5;
  return result;
}

uint64_t sub_23322ECE0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (*v0 == 1)
    v1 = 0x79636E6572727563;
  if (*v0)
    return v1;
  else
    return 0x79636E6572727563;
}

uint64_t sub_23322ED40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2332337E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23322ED64()
{
  sub_233230CD0();
  return sub_23361F428();
}

uint64_t sub_23322ED8C()
{
  sub_233230CD0();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Currency.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461A8);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_DWORD *)v1 + 4);
  v21 = *((unsigned __int8 *)v1 + 20);
  v9 = v1[3];
  v14[3] = v1[4];
  v14[4] = v9;
  v10 = v1[5];
  v14[1] = v1[6];
  v14[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233230CD0();
  sub_23361F410();
  v17 = v7;
  v18 = v6;
  v19 = v8;
  v20 = v21;
  v22 = 0;
  sub_233230BC0();
  v11 = v16;
  sub_23361F110();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  v13 = v15;
  LOBYTE(v17) = 1;
  sub_23361F140();
  LOBYTE(v17) = 2;
  sub_23361F0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v3);
}

uint64_t RawBankConnectData.Currency.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned __int8 v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233230CD0();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v28 = 0;
    sub_233230C48();
    sub_23361EFFC();
    v21 = v24;
    v22 = v23;
    v9 = v25;
    v10 = v26;
    LOBYTE(v23) = 1;
    v19 = sub_23361F02C();
    v20 = v10;
    v27 = v9;
    LOBYTE(v23) = 2;
    v13 = v12;
    swift_bridgeObjectRetain();
    v14 = sub_23361EFCC();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = v21;
    *(_QWORD *)a2 = v22;
    *(_QWORD *)(a2 + 8) = v17;
    *(_DWORD *)(a2 + 16) = v27;
    *(_BYTE *)(a2 + 20) = v20;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v13;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v16;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23322F190@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.Currency.init(from:)(a1, a2);
}

uint64_t sub_23322F1A4(_QWORD *a1)
{
  return RawBankConnectData.Currency.encode(to:)(a1);
}

FinanceKit::RawBankConnectData::AssetLiabilityIndicator_optional __swiftcall RawBankConnectData.AssetLiabilityIndicator.init(rawValue:)(Swift::String rawValue)
{
  return (FinanceKit::RawBankConnectData::AssetLiabilityIndicator_optional)sub_23322F500();
}

uint64_t RawBankConnectData.AssetLiabilityIndicator.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x54494C494241494CLL;
  else
    return 0x5445535341;
}

uint64_t sub_23322F200()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23322F280()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23322F2DC()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23322F358@<X0>(char *a1@<X8>)
{
  return sub_23322F6D4(a1);
}

void sub_23322F364(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x5445535341;
  if (*v1)
    v2 = 0x54494C494241494CLL;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE900000000000059;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23322F3A4()
{
  sub_233233C1C();
  return sub_23361E390();
}

uint64_t sub_23322F400()
{
  sub_233233C1C();
  return sub_23361E354();
}

uint64_t sub_23322F44C(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x54494C494241494CLL;
  else
    v3 = 0x5445535341;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE900000000000059;
  if (*a2)
    v5 = 0x54494C494241494CLL;
  else
    v5 = 0x5445535341;
  if (*a2)
    v6 = 0xE900000000000059;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

FinanceKit::RawBankConnectData::CreditDebitIndicator_optional __swiftcall RawBankConnectData.CreditDebitIndicator.init(rawValue:)(Swift::String rawValue)
{
  return (FinanceKit::RawBankConnectData::CreditDebitIndicator_optional)sub_23322F500();
}

uint64_t sub_23322F500()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void *static RawBankConnectData.CreditDebitIndicator.allCases.getter()
{
  return &unk_250468BA0;
}

uint64_t RawBankConnectData.CreditDebitIndicator.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x544944455243;
  else
    return 0x5449424544;
}

uint64_t sub_23322F588()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23322F600()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23322F654()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23322F6C8@<X0>(char *a1@<X8>)
{
  return sub_23322F6D4(a1);
}

uint64_t sub_23322F6D4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23322F72C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x5449424544;
  if (*v1)
    v2 = 0x544944455243;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23322F764()
{
  sub_233233BD8();
  return sub_23361E390();
}

uint64_t sub_23322F7C0()
{
  sub_233233BD8();
  return sub_23361E354();
}

void sub_23322F80C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468BC8;
}

uint64_t sub_23322F81C(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x544944455243;
  else
    v3 = 0x5449424544;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if (*a2)
    v5 = 0x544944455243;
  else
    v5 = 0x5449424544;
  if (*a2)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t RawBankConnectData.Actions.transferFunds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233199624(v1, a1);
}

uint64_t RawBankConnectData.Actions.transferFunds.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331AAFB8(a1, v1);
}

uint64_t (*RawBankConnectData.Actions.transferFunds.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.Actions.payNow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 20);
  return sub_233199624(v3, a1);
}

uint64_t RawBankConnectData.Actions.payNow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 20);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawBankConnectData.Actions.payNow.modify())()
{
  type metadata accessor for RawBankConnectData.Actions();
  return nullsub_1;
}

uint64_t RawBankConnectData.Actions.digitalServicing.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 24);
  return sub_233199624(v3, a1);
}

uint64_t RawBankConnectData.Actions.digitalServicing.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 24);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawBankConnectData.Actions.digitalServicing.modify())()
{
  type metadata accessor for RawBankConnectData.Actions();
  return nullsub_1;
}

uint64_t RawBankConnectData.Actions.postInstallment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 28);
  return sub_233199624(v3, a1);
}

uint64_t RawBankConnectData.Actions.postInstallment.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 28);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawBankConnectData.Actions.postInstallment.modify())()
{
  type metadata accessor for RawBankConnectData.Actions();
  return nullsub_1;
}

uint64_t RawBankConnectData.Actions.redeemRewards.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 32);
  return sub_233199624(v3, a1);
}

uint64_t RawBankConnectData.Actions.redeemRewards.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.Actions() + 32);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*RawBankConnectData.Actions.redeemRewards.modify())()
{
  type metadata accessor for RawBankConnectData.Actions();
  return nullsub_1;
}

uint64_t RawBankConnectData.Actions.init(transferFunds:payNow:digitalServicing:postInstallment:redeemRewards:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v10 = sub_23361D340();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(a6, 1, 1, v10);
  v12 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v13 = a6 + v12[5];
  v11(v13, 1, 1, v10);
  v14 = a6 + v12[6];
  v11(v14, 1, 1, v10);
  v15 = a6 + v12[7];
  v11(v15, 1, 1, v10);
  v16 = a6 + v12[8];
  v11(v16, 1, 1, v10);
  sub_2331AAFB8(a1, a6);
  sub_2331AAFB8(a2, v13);
  sub_2331AAFB8(a3, v14);
  sub_2331AAFB8(a4, v15);
  return sub_2331AAFB8(a5, v16);
}

uint64_t sub_23322FC30()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v0 = (int *)type metadata accessor for RawBankConnectData.Actions();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v6;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v25 - v8;
  v27 = (uint64_t)&v25 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v25 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  __swift_allocate_value_buffer((uint64_t)v0, qword_2560CD2C8);
  v28 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_2560CD2C8);
  v18 = sub_23361D340();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v19(v15, 1, 1, v18);
  v19(v12, 1, 1, v18);
  v19(v9, 1, 1, v18);
  v19(v6, 1, 1, v18);
  v19(v2, 1, 1, v18);
  v20 = (uint64_t)&v2[v0[5]];
  v19((char *)v20, 1, 1, v18);
  v21 = (uint64_t)&v2[v0[6]];
  v19((char *)v21, 1, 1, v18);
  v22 = (uint64_t)&v2[v0[7]];
  v19((char *)v22, 1, 1, v18);
  v23 = (uint64_t)&v2[v0[8]];
  v19((char *)v23, 1, 1, v18);
  sub_2331AAFB8((uint64_t)v17, (uint64_t)v2);
  sub_2331AAFB8((uint64_t)v15, v20);
  sub_2331AAFB8((uint64_t)v12, v21);
  sub_2331AAFB8(v27, v22);
  sub_2331AAFB8((uint64_t)v26, v23);
  return sub_233168580((uint64_t)v2, v28, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
}

uint64_t sub_23322FECC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23322FF08 + 4 * byte_23362F2EE[*v0]))(0x726566736E617274, 0xED000073646E7546);
}

uint64_t sub_23322FF08()
{
  return 0x776F4E796170;
}

unint64_t sub_23322FF1C()
{
  return 0xD000000000000010;
}

uint64_t sub_23322FF38()
{
  return 0x74736E4974736F70;
}

uint64_t sub_23322FF5C()
{
  return 0x65526D6565646572;
}

uint64_t sub_23322FF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233233960(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23322FFA4()
{
  sub_233231964();
  return sub_23361F428();
}

uint64_t sub_23322FFCC()
{
  sub_233231964();
  return sub_23361F434();
}

uint64_t RawBankConnectData.Actions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233231964();
  sub_23361F410();
  v13 = 0;
  sub_23361D340();
  sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23361F110();
  if (!v1)
  {
    type metadata accessor for RawBankConnectData.Actions();
    v12 = 1;
    sub_23361F110();
    v11 = 2;
    sub_23361F110();
    v10 = 3;
    sub_23361F110();
    v9 = 4;
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.Actions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v38 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v38 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v38 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v48 = (uint64_t)&v38 - v12;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461D0);
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for RawBankConnectData.Actions();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23361D340();
  v19 = *(void (**)(void))(*(_QWORD *)(v18 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v19)(v17, 1, 1, v18);
  v45 = &v17[v15[5]];
  v19();
  v20 = (uint64_t)&v17[v15[6]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v20, 1, 1, v18);
  v21 = (uint64_t)&v17[v15[7]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v21, 1, 1, v18);
  v22 = v15[8];
  v50 = v17;
  v23 = (uint64_t)&v17[v22];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v23, 1, 1, v18);
  v24 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_233231964();
  v25 = v14;
  v26 = v51;
  sub_23361F3EC();
  if (v26)
  {
    v33 = (uint64_t)v50;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  }
  else
  {
    v51 = v20;
    v38 = v23;
    v39 = v21;
    v28 = (uint64_t)v45;
    v27 = (uint64_t)v46;
    v56 = 0;
    v29 = sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v30 = v47;
    v31 = v25;
    sub_23361EFFC();
    v33 = (uint64_t)v50;
    sub_2331AAFB8(v48, (uint64_t)v50);
    v55 = 1;
    v48 = v29;
    sub_23361EFFC();
    sub_2331AAFB8(v27, v28);
    v54 = 2;
    v34 = (uint64_t)v43;
    sub_23361EFFC();
    sub_2331AAFB8(v34, v51);
    v53 = 3;
    v35 = (uint64_t)v42;
    sub_23361EFFC();
    sub_2331AAFB8(v35, v39);
    v52 = 4;
    v36 = (uint64_t)v41;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v30);
    v37 = (uint64_t)v49;
    sub_2331AAFB8(v36, v38);
    sub_2331684BC(v33, v40, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
    __swift_destroy_boxed_opaque_existential_0(v37);
  }
  return sub_233168500(v33, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
}

uint64_t sub_23323065C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.Actions.init(from:)(a1, a2);
}

uint64_t sub_233230670(_QWORD *a1)
{
  return RawBankConnectData.Actions.encode(to:)(a1);
}

uint64_t RawBankConnectData.PIIRedactionConfiguration.countryCodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.PIIRedactionConfiguration.countryCodes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawBankConnectData.PIIRedactionConfiguration.countryCodes.modify())()
{
  return nullsub_1;
}

FinanceKit::RawBankConnectData::PIIRedactionConfiguration __swiftcall RawBankConnectData.PIIRedactionConfiguration.init(countryCodes:)(FinanceKit::RawBankConnectData::PIIRedactionConfiguration countryCodes)
{
  FinanceKit::RawBankConnectData::PIIRedactionConfiguration *v1;

  v1->countryCodes._rawValue = countryCodes.countryCodes._rawValue;
  return countryCodes;
}

uint64_t static RawBankConnectData.PIIRedactionConfiguration.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  return sub_23322B8BC(*a1, *a2);
}

uint64_t sub_2332306DC()
{
  return 0x437972746E756F63;
}

uint64_t sub_2332306FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x437972746E756F63 && a2 == 0xEC0000007365646FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2332307A8()
{
  sub_2332319A8();
  return sub_23361F428();
}

uint64_t sub_2332307D0()
{
  sub_2332319A8();
  return sub_23361F434();
}

uint64_t RawBankConnectData.PIIRedactionConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2332319A8();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.PIIRedactionConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560461E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2332319A8();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233230A58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawBankConnectData.PIIRedactionConfiguration.init(from:)(a1, a2);
}

uint64_t sub_233230A6C(_QWORD *a1)
{
  return RawBankConnectData.PIIRedactionConfiguration.encode(to:)(a1);
}

uint64_t sub_233230A80(_QWORD **a1, _QWORD **a2)
{
  return sub_23322B8BC(*a1, *a2);
}

uint64_t _s10FinanceKit18RawBankConnectDataO8CurrencyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 20) & 1) != 0
         || (MEMORY[0x234932E38](*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16)) & 1) == 0)
  {
    return 0;
  }
  if (v2 == v6 && v3 == v7 || (v10 = sub_23361F224(), result = 0, (v10 & 1) != 0))
  {
    if (v5)
    {
      if (!v8 || (v4 != v9 || v5 != v8) && (sub_23361F224() & 1) == 0)
        return 0;
    }
    else if (v8)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_233230B7C()
{
  unint64_t result;

  result = qword_256046178;
  if (!qword_256046178)
  {
    result = MEMORY[0x234934494](&unk_23362FBC8, &type metadata for RawBankConnectData.MonetaryAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046178);
  }
  return result;
}

unint64_t sub_233230BC0()
{
  unint64_t result;

  result = qword_256046180;
  if (!qword_256046180)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.DoubleString, &type metadata for RawBankConnectData.DoubleString);
    atomic_store(result, (unint64_t *)&qword_256046180);
  }
  return result;
}

unint64_t sub_233230C04()
{
  unint64_t result;

  result = qword_256046188;
  if (!qword_256046188)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Currency, &type metadata for RawBankConnectData.Currency);
    atomic_store(result, (unint64_t *)&qword_256046188);
  }
  return result;
}

unint64_t sub_233230C48()
{
  unint64_t result;

  result = qword_256046198;
  if (!qword_256046198)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.DoubleString, &type metadata for RawBankConnectData.DoubleString);
    atomic_store(result, (unint64_t *)&qword_256046198);
  }
  return result;
}

unint64_t sub_233230C8C()
{
  unint64_t result;

  result = qword_2560461A0;
  if (!qword_2560461A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.Currency, &type metadata for RawBankConnectData.Currency);
    atomic_store(result, (unint64_t *)&qword_2560461A0);
  }
  return result;
}

unint64_t sub_233230CD0()
{
  unint64_t result;

  result = qword_2560461B0;
  if (!qword_2560461B0)
  {
    result = MEMORY[0x234934494](&unk_23362FB78, &type metadata for RawBankConnectData.Currency.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560461B0);
  }
  return result;
}

uint64_t type metadata accessor for RawBankConnectData.Actions()
{
  uint64_t result;

  result = qword_256046268;
  if (!qword_256046268)
    return swift_getSingletonMetadata();
  return result;
}

BOOL _s10FinanceKit18RawBankConnectDataO7ActionsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  char v57;
  void (*v58)(_BYTE *, uint64_t);
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  int *v72;
  void (*v73)(_BYTE *, uint64_t);
  _BYTE *v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  void (*v84)(_BYTE *, uint64_t);
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  void (*v99)(_BYTE *, uint64_t);
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_BYTE *, uint64_t);
  _BYTE v111[12];
  int v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  unsigned int (*v129)(uint64_t, uint64_t, uint64_t);
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v128 = &v111[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v114 = &v111[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v117 = &v111[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v122 = &v111[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v130 = &v111[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v111[-v16];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v113 = &v111[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v118 = &v111[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v119 = &v111[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v115 = &v111[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  v120 = &v111[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v116 = &v111[-v30];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v121 = &v111[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  v123 = &v111[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  v124 = &v111[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  v125 = (uint64_t)&v111[-v38];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = &v111[-v40];
  v42 = MEMORY[0x24BDAC7A8](v39);
  v129 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))&v111[-v43];
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = &v111[-v45];
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = &v111[-v48];
  MEMORY[0x24BDAC7A8](v47);
  v51 = &v111[-v50];
  v127 = a1;
  sub_233199624(a1, (uint64_t)&v111[-v50]);
  v126 = a2;
  sub_233199624(a2, (uint64_t)v49);
  v131 = v7;
  v52 = (uint64_t)&v17[*(int *)(v7 + 48)];
  sub_233199624((uint64_t)v51, (uint64_t)v17);
  sub_233199624((uint64_t)v49, v52);
  v132 = v5;
  v133 = v4;
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v53((uint64_t)v17, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v49, &qword_254248700);
    sub_233168608((uint64_t)v51, &qword_254248700);
    if (v53(v52, 1, v133) != 1)
      goto LABEL_12;
    sub_233168608((uint64_t)v17, &qword_254248700);
  }
  else
  {
    sub_233199624((uint64_t)v17, (uint64_t)v46);
    if (v53(v52, 1, v133) == 1)
    {
      sub_233168608((uint64_t)v49, &qword_254248700);
      sub_233168608((uint64_t)v51, &qword_254248700);
      (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v46, v133);
      goto LABEL_12;
    }
    v55 = v132;
    v54 = v133;
    v56 = v128;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v132 + 32))(v128, v52, v133);
    sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
    v57 = sub_23361E108();
    v58 = *(void (**)(_BYTE *, uint64_t))(v55 + 8);
    v58(v56, v54);
    sub_233168608((uint64_t)v49, &qword_254248700);
    sub_233168608((uint64_t)v51, &qword_254248700);
    v58(v46, v54);
    sub_233168608((uint64_t)v17, &qword_254248700);
    if ((v57 & 1) == 0)
      return 0;
  }
  v59 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v60 = v127;
  v61 = (uint64_t)v129;
  sub_233199624(v127 + v59[5], (uint64_t)v129);
  v62 = v126;
  sub_233199624(v126 + v59[5], (uint64_t)v41);
  v17 = v130;
  v63 = v131;
  v64 = (uint64_t)&v130[*(int *)(v131 + 48)];
  sub_233199624(v61, (uint64_t)v130);
  sub_233199624((uint64_t)v41, v64);
  if (v53((uint64_t)v17, 1, v133) == 1)
  {
    sub_233168608((uint64_t)v41, &qword_254248700);
    sub_233168608(v61, &qword_254248700);
    if (v53(v64, 1, v133) != 1)
      goto LABEL_12;
    sub_233168608((uint64_t)v17, &qword_254248700);
  }
  else
  {
    v65 = v125;
    sub_233199624((uint64_t)v17, v125);
    if (v53(v64, 1, v133) == 1)
    {
      sub_233168608((uint64_t)v41, &qword_254248700);
      sub_233168608(v61, &qword_254248700);
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v65, v133);
      goto LABEL_12;
    }
    v69 = v132;
    v68 = v133;
    v70 = v128;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v132 + 32))(v128, v64, v133);
    sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
    v71 = v62;
    v72 = v59;
    v112 = sub_23361E108();
    v73 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
    v73(v70, v68);
    sub_233168608((uint64_t)v41, &qword_254248700);
    sub_233168608((uint64_t)v129, &qword_254248700);
    v73((_BYTE *)v65, v68);
    v59 = v72;
    v62 = v71;
    sub_233168608((uint64_t)v130, &qword_254248700);
    v63 = v131;
    if ((v112 & 1) == 0)
      return 0;
  }
  v74 = v124;
  sub_233199624(v60 + v59[6], (uint64_t)v124);
  v75 = v123;
  sub_233199624(v62 + v59[6], (uint64_t)v123);
  v76 = v122;
  v77 = (uint64_t)&v122[*(int *)(v63 + 48)];
  sub_233199624((uint64_t)v74, (uint64_t)v122);
  sub_233199624((uint64_t)v75, v77);
  if (v53((uint64_t)v76, 1, v133) == 1)
  {
    sub_233168608((uint64_t)v75, &qword_254248700);
    sub_233168608((uint64_t)v74, &qword_254248700);
    if (v53(v77, 1, v133) == 1)
    {
      sub_233168608((uint64_t)v76, &qword_254248700);
      goto LABEL_24;
    }
LABEL_22:
    v66 = (uint64_t)v76;
    goto LABEL_13;
  }
  v130 = v59;
  v78 = v121;
  sub_233199624((uint64_t)v76, (uint64_t)v121);
  if (v53(v77, 1, v133) == 1)
  {
    sub_233168608((uint64_t)v75, &qword_254248700);
    sub_233168608((uint64_t)v74, &qword_254248700);
    (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v78, v133);
    goto LABEL_22;
  }
  v79 = v53;
  v81 = v132;
  v80 = v133;
  v82 = v128;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v132 + 32))(v128, v77, v133);
  sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v83 = v78;
  LODWORD(v129) = sub_23361E108();
  v84 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
  v53 = v79;
  v84(v82, v80);
  sub_233168608((uint64_t)v123, &qword_254248700);
  sub_233168608((uint64_t)v124, &qword_254248700);
  v84(v83, v80);
  sub_233168608((uint64_t)v76, &qword_254248700);
  v59 = (int *)v130;
  if ((v129 & 1) == 0)
    return 0;
LABEL_24:
  v85 = v60 + v59[7];
  v86 = v59;
  v87 = v116;
  sub_233199624(v85, (uint64_t)v116);
  v130 = v86;
  v88 = v120;
  sub_233199624(v62 + *((int *)v86 + 7), (uint64_t)v120);
  v17 = v117;
  v89 = (uint64_t)&v117[*(int *)(v63 + 48)];
  sub_233199624((uint64_t)v87, (uint64_t)v117);
  sub_233199624((uint64_t)v88, v89);
  if (v53((uint64_t)v17, 1, v133) != 1)
  {
    v93 = v115;
    sub_233199624((uint64_t)v17, (uint64_t)v115);
    v94 = v53(v89, 1, v133);
    v92 = (uint64_t)v118;
    v91 = (uint64_t)v119;
    if (v94 != 1)
    {
      v129 = v53;
      v96 = v132;
      v95 = v133;
      v97 = v128;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v132 + 32))(v128, v89, v133);
      sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v98 = (uint64_t)v87;
      LODWORD(v125) = sub_23361E108();
      v99 = *(void (**)(_BYTE *, uint64_t))(v96 + 8);
      v53 = v129;
      v99(v97, v95);
      sub_233168608((uint64_t)v120, &qword_254248700);
      sub_233168608(v98, &qword_254248700);
      v99(v93, v95);
      sub_233168608((uint64_t)v17, &qword_254248700);
      if ((v125 & 1) == 0)
        return 0;
      goto LABEL_30;
    }
    sub_233168608((uint64_t)v88, &qword_254248700);
    sub_233168608((uint64_t)v87, &qword_254248700);
    (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v93, v133);
    goto LABEL_12;
  }
  sub_233168608((uint64_t)v88, &qword_254248700);
  sub_233168608((uint64_t)v87, &qword_254248700);
  v90 = v53(v89, 1, v133);
  v92 = (uint64_t)v118;
  v91 = (uint64_t)v119;
  if (v90 != 1)
  {
LABEL_12:
    v66 = (uint64_t)v17;
LABEL_13:
    sub_233168608(v66, &qword_256045948);
    return 0;
  }
  sub_233168608((uint64_t)v17, &qword_254248700);
LABEL_30:
  v100 = v130;
  sub_233199624(v127 + *((int *)v130 + 8), v91);
  sub_233199624(v62 + *((int *)v100 + 8), v92);
  v101 = v114;
  v102 = (uint64_t)&v114[*(int *)(v131 + 48)];
  sub_233199624(v91, (uint64_t)v114);
  sub_233199624(v92, v102);
  if (v53((uint64_t)v101, 1, v133) == 1)
  {
    sub_233168608(v92, &qword_254248700);
    sub_233168608(v91, &qword_254248700);
    if (v53(v102, 1, v133) == 1)
    {
      sub_233168608((uint64_t)v101, &qword_254248700);
      return 1;
    }
    goto LABEL_35;
  }
  v103 = v113;
  sub_233199624((uint64_t)v101, (uint64_t)v113);
  if (v53(v102, 1, v133) == 1)
  {
    sub_233168608(v92, &qword_254248700);
    sub_233168608(v91, &qword_254248700);
    (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v103, v133);
LABEL_35:
    v66 = (uint64_t)v101;
    goto LABEL_13;
  }
  v104 = v132;
  v105 = v128;
  v106 = v102;
  v107 = v133;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v132 + 32))(v128, v106, v133);
  sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v108 = (uint64_t)v101;
  v109 = v107;
  LOBYTE(v107) = sub_23361E108();
  v110 = *(void (**)(_BYTE *, uint64_t))(v104 + 8);
  v110(v105, v109);
  sub_233168608(v92, &qword_254248700);
  sub_233168608(v91, &qword_254248700);
  v110(v103, v109);
  sub_233168608(v108, &qword_254248700);
  return (v107 & 1) != 0;
}

unint64_t sub_233231964()
{
  unint64_t result;

  result = qword_2560461C8;
  if (!qword_2560461C8)
  {
    result = MEMORY[0x234934494](&unk_23362FB28, &type metadata for RawBankConnectData.Actions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560461C8);
  }
  return result;
}

unint64_t sub_2332319A8()
{
  unint64_t result;

  result = qword_2560461E0;
  if (!qword_2560461E0)
  {
    result = MEMORY[0x234934494](&unk_23362FAD8, &type metadata for RawBankConnectData.PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560461E0);
  }
  return result;
}

unint64_t sub_2332319F0()
{
  unint64_t result;

  result = qword_2560461F0;
  if (!qword_2560461F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AssetLiabilityIndicator, &type metadata for RawBankConnectData.AssetLiabilityIndicator);
    atomic_store(result, (unint64_t *)&qword_2560461F0);
  }
  return result;
}

unint64_t sub_233231A38()
{
  unint64_t result;

  result = qword_2560461F8;
  if (!qword_2560461F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.CreditDebitIndicator, &type metadata for RawBankConnectData.CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_2560461F8);
  }
  return result;
}

unint64_t sub_233231A80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256046200;
  if (!qword_256046200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256046208);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256046200);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData()
{
  return &type metadata for RawBankConnectData;
}

uint64_t destroy for RawBankConnectData.MonetaryAmount()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawBankConnectData.MonetaryAmount(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
  v3 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v3;
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawBankConnectData.MonetaryAmount(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  v4 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RawBankConnectData.MonetaryAmount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 37) = *(_QWORD *)(a2 + 37);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawBankConnectData.MonetaryAmount(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawBankConnectData.MonetaryAmount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.MonetaryAmount()
{
  return &type metadata for RawBankConnectData.MonetaryAmount;
}

uint64_t destroy for RawBankConnectData.Currency()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawBankConnectData.Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawBankConnectData.Currency(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  v4 = *a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)((char *)a2 + 13);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RawBankConnectData.Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Currency()
{
  return &type metadata for RawBankConnectData.Currency;
}

ValueMetadata *type metadata accessor for RawBankConnectData.AssetLiabilityIndicator()
{
  return &type metadata for RawBankConnectData.AssetLiabilityIndicator;
}

ValueMetadata *type metadata accessor for RawBankConnectData.CreditDebitIndicator()
{
  return &type metadata for RawBankConnectData.CreditDebitIndicator;
}

uint64_t *initializeBufferWithCopyOfBuffer for Actions(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D340();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v9((uint64_t *)v26, 1, v7))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for Actions(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + a2[6];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v9 = a1 + a2[7];
  if (!v6(v9, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  v10 = a1 + a2[8];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  return result;
}

char *initializeWithCopy for Actions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for Actions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  v30 = a3[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

char *initializeWithTake for Actions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for Actions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  v30 = a3[8];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawBankConnectData.Actions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233232F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RawBankConnectData.Actions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233232F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_233232FC8()
{
  unint64_t v0;

  sub_233233038();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_233233038()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254247FA0)
  {
    sub_23361D340();
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254247FA0);
  }
}

ValueMetadata *type metadata accessor for RawBankConnectData.PIIRedactionConfiguration()
{
  return &type metadata for RawBankConnectData.PIIRedactionConfiguration;
}

uint64_t storeEnumTagSinglePayload for RawBankConnectData.PIIRedactionConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2332330DC + 4 * byte_23362F2F3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2332330FC + 4 * byte_23362F2F8[v4]))();
}

_BYTE *sub_2332330DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2332330FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233233104(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23323310C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233233114(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23323311C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.PIIRedactionConfiguration.CodingKeys()
{
  return &type metadata for RawBankConnectData.PIIRedactionConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RawBankConnectData.Actions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233233184 + 4 * byte_23362F302[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2332331B8 + 4 * byte_23362F2FD[v4]))();
}

uint64_t sub_2332331B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332331C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2332331C8);
  return result;
}

uint64_t sub_2332331D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2332331DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2332331E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332331E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Actions.CodingKeys()
{
  return &type metadata for RawBankConnectData.Actions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RawBankConnectData.Currency.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233233250 + 4 * byte_23362F30C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233233284 + 4 * byte_23362F307[v4]))();
}

uint64_t sub_233233284(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23323328C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233233294);
  return result;
}

uint64_t sub_2332332A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2332332A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2332332AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2332332B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.Currency.CodingKeys()
{
  return &type metadata for RawBankConnectData.Currency.CodingKeys;
}

uint64_t _s10FinanceKit18RawBankConnectDataO23AssetLiabilityIndicatorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23323331C + 4 * byte_23362F316[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233233350 + 4 * byte_23362F311[v4]))();
}

uint64_t sub_233233350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233233358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233233360);
  return result;
}

uint64_t sub_23323336C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233233374);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233233378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233233380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.MonetaryAmount.CodingKeys()
{
  return &type metadata for RawBankConnectData.MonetaryAmount.CodingKeys;
}

unint64_t sub_2332333A0()
{
  unint64_t result;

  result = qword_2560462B0;
  if (!qword_2560462B0)
  {
    result = MEMORY[0x234934494](&unk_23362F888, &type metadata for RawBankConnectData.MonetaryAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462B0);
  }
  return result;
}

unint64_t sub_2332333E8()
{
  unint64_t result;

  result = qword_2560462B8;
  if (!qword_2560462B8)
  {
    result = MEMORY[0x234934494](&unk_23362F940, &type metadata for RawBankConnectData.Currency.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462B8);
  }
  return result;
}

unint64_t sub_233233430()
{
  unint64_t result;

  result = qword_2560462C0;
  if (!qword_2560462C0)
  {
    result = MEMORY[0x234934494](&unk_23362F9F8, &type metadata for RawBankConnectData.Actions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462C0);
  }
  return result;
}

unint64_t sub_233233478()
{
  unint64_t result;

  result = qword_2560462C8;
  if (!qword_2560462C8)
  {
    result = MEMORY[0x234934494](&unk_23362FAB0, &type metadata for RawBankConnectData.PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462C8);
  }
  return result;
}

unint64_t sub_2332334C0()
{
  unint64_t result;

  result = qword_2560462D0;
  if (!qword_2560462D0)
  {
    result = MEMORY[0x234934494](&unk_23362FA20, &type metadata for RawBankConnectData.PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462D0);
  }
  return result;
}

unint64_t sub_233233508()
{
  unint64_t result;

  result = qword_2560462D8;
  if (!qword_2560462D8)
  {
    result = MEMORY[0x234934494](&unk_23362FA48, &type metadata for RawBankConnectData.PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462D8);
  }
  return result;
}

unint64_t sub_233233550()
{
  unint64_t result;

  result = qword_2560462E0;
  if (!qword_2560462E0)
  {
    result = MEMORY[0x234934494](&unk_23362F968, &type metadata for RawBankConnectData.Actions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462E0);
  }
  return result;
}

unint64_t sub_233233598()
{
  unint64_t result;

  result = qword_2560462E8;
  if (!qword_2560462E8)
  {
    result = MEMORY[0x234934494](&unk_23362F990, &type metadata for RawBankConnectData.Actions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462E8);
  }
  return result;
}

unint64_t sub_2332335E0()
{
  unint64_t result;

  result = qword_2560462F0;
  if (!qword_2560462F0)
  {
    result = MEMORY[0x234934494](&unk_23362F8B0, &type metadata for RawBankConnectData.Currency.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462F0);
  }
  return result;
}

unint64_t sub_233233628()
{
  unint64_t result;

  result = qword_2560462F8;
  if (!qword_2560462F8)
  {
    result = MEMORY[0x234934494](&unk_23362F8D8, &type metadata for RawBankConnectData.Currency.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560462F8);
  }
  return result;
}

unint64_t sub_233233670()
{
  unint64_t result;

  result = qword_256046300;
  if (!qword_256046300)
  {
    result = MEMORY[0x234934494](&unk_23362F7F8, &type metadata for RawBankConnectData.MonetaryAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046300);
  }
  return result;
}

unint64_t sub_2332336B8()
{
  unint64_t result;

  result = qword_256046308;
  if (!qword_256046308)
  {
    result = MEMORY[0x234934494](&unk_23362F820, &type metadata for RawBankConnectData.MonetaryAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046308);
  }
  return result;
}

uint64_t sub_2332336FC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023366D460 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2332337E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79636E6572727563 && a2 == 0xEC00000065746152;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366D480)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233233960(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726566736E617274 && a2 == 0xED000073646E7546;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F4E796170 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023366D4A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74736E4974736F70 && a2 == 0xEF746E656D6C6C61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65526D6565646572 && a2 == 0xED00007364726177)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_233233BD8()
{
  unint64_t result;

  result = qword_256046310;
  if (!qword_256046310)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.CreditDebitIndicator, &type metadata for RawBankConnectData.CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_256046310);
  }
  return result;
}

unint64_t sub_233233C1C()
{
  unint64_t result;

  result = qword_256046318;
  if (!qword_256046318)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AssetLiabilityIndicator, &type metadata for RawBankConnectData.AssetLiabilityIndicator);
    atomic_store(result, (unint64_t *)&qword_256046318);
  }
  return result;
}

unint64_t sub_233233C60()
{
  unint64_t result;

  result = qword_2560446E0;
  if (!qword_2560446E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2560446E0);
  }
  return result;
}

uint64_t RawBankConnectData.PassLinkUpdatingBody.passDetailsList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.PassLinkUpdatingBody.passDetailsList.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawBankConnectData.PassLinkUpdatingBody.passDetailsList.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PassLinkUpdatingBody.init(passDetailsList:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static RawBankConnectData.PassLinkUpdatingBody.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23322CCA0(*a1, *a2);
}

uint64_t sub_233233CF0()
{
  return 0x6174654473736170;
}

uint64_t sub_233233D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6174654473736170 && a2 == 0xEF7473694C736C69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233233DCC()
{
  sub_233233F3C();
  return sub_23361F428();
}

uint64_t sub_233233DF4()
{
  sub_233233F3C();
  return sub_23361F434();
}

uint64_t RawBankConnectData.PassLinkUpdatingBody.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046338);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233233F3C();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256046348);
  sub_233234104(&qword_256046350, (uint64_t (*)(void))sub_233233F80, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_233233F3C()
{
  unint64_t result;

  result = qword_256046340;
  if (!qword_256046340)
  {
    result = MEMORY[0x234934494](&unk_23362FF1C, &_s20PassLinkUpdatingBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046340);
  }
  return result;
}

unint64_t sub_233233F80()
{
  unint64_t result;

  result = qword_256046358;
  if (!qword_256046358)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PassDetails, &type metadata for RawBankConnectData.PassDetails);
    atomic_store(result, (unint64_t *)&qword_256046358);
  }
  return result;
}

uint64_t RawBankConnectData.PassLinkUpdatingBody.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046360);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233233F3C();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256046348);
    sub_233234104(&qword_256046368, (uint64_t (*)(void))sub_23323416C, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233234104(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256046348);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23323416C()
{
  unint64_t result;

  result = qword_256046370;
  if (!qword_256046370)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PassDetails, &type metadata for RawBankConnectData.PassDetails);
    atomic_store(result, (unint64_t *)&qword_256046370);
  }
  return result;
}

uint64_t sub_2332341B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawBankConnectData.PassLinkUpdatingBody.init(from:)(a1, a2);
}

uint64_t sub_2332341C4(_QWORD *a1)
{
  return RawBankConnectData.PassLinkUpdatingBody.encode(to:)(a1);
}

uint64_t sub_2332341D8(uint64_t *a1, uint64_t *a2)
{
  return sub_23322CCA0(*a1, *a2);
}

uint64_t RawBankConnectData.PassDetails.fpanId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PassDetails.fpanId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.PassDetails.fpanId.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PassDetails.accountIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PassDetails.accountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PassDetails.accountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PassDetails.init(fpanId:accountIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_2332342D4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x64496E617066;
}

uint64_t sub_233234310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2332349FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233234334()
{
  sub_233234680();
  return sub_23361F428();
}

uint64_t sub_23323435C()
{
  sub_233234680();
  return sub_23361F434();
}

uint64_t RawBankConnectData.PassDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046378);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233234680();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v2)
  {
    v11 = 1;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t RawBankConnectData.PassDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046388);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233234680();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F02C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233234658@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.PassDetails.init(from:)(a1, a2);
}

uint64_t sub_23323466C(_QWORD *a1)
{
  return RawBankConnectData.PassDetails.encode(to:)(a1);
}

unint64_t sub_233234680()
{
  unint64_t result;

  result = qword_256046380;
  if (!qword_256046380)
  {
    result = MEMORY[0x234934494](&unk_23362FECC, &_s11PassDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046380);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.PassLinkUpdatingBody()
{
  return &type metadata for RawBankConnectData.PassLinkUpdatingBody;
}

ValueMetadata *type metadata accessor for RawBankConnectData.PassDetails()
{
  return &type metadata for RawBankConnectData.PassDetails;
}

uint64_t _s11PassDetailsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233234730 + 4 * byte_23362FC25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233234764 + 4 * byte_23362FC20[v4]))();
}

uint64_t sub_233234764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23323476C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233234774);
  return result;
}

uint64_t sub_233234780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233234788);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23323478C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233234794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11PassDetailsV10CodingKeysOMa()
{
  return &_s11PassDetailsV10CodingKeysON;
}

uint64_t _s20PassLinkUpdatingBodyV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2332347F0 + 4 * byte_23362FC2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233234810 + 4 * byte_23362FC2F[v4]))();
}

_BYTE *sub_2332347F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233234810(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233234818(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233234820(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233234828(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233234830(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20PassLinkUpdatingBodyV10CodingKeysOMa()
{
  return &_s20PassLinkUpdatingBodyV10CodingKeysON;
}

unint64_t sub_233234850()
{
  unint64_t result;

  result = qword_256046390;
  if (!qword_256046390)
  {
    result = MEMORY[0x234934494](&unk_23362FDEC, &_s20PassLinkUpdatingBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046390);
  }
  return result;
}

unint64_t sub_233234898()
{
  unint64_t result;

  result = qword_256046398;
  if (!qword_256046398)
  {
    result = MEMORY[0x234934494](&unk_23362FEA4, &_s11PassDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046398);
  }
  return result;
}

unint64_t sub_2332348E0()
{
  unint64_t result;

  result = qword_2560463A0;
  if (!qword_2560463A0)
  {
    result = MEMORY[0x234934494](&unk_23362FE14, &_s11PassDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560463A0);
  }
  return result;
}

unint64_t sub_233234928()
{
  unint64_t result;

  result = qword_2560463A8;
  if (!qword_2560463A8)
  {
    result = MEMORY[0x234934494](&unk_23362FE3C, &_s11PassDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560463A8);
  }
  return result;
}

unint64_t sub_233234970()
{
  unint64_t result;

  result = qword_2560463B0;
  if (!qword_2560463B0)
  {
    result = MEMORY[0x234934494](&unk_23362FD5C, &_s20PassLinkUpdatingBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560463B0);
  }
  return result;
}

unint64_t sub_2332349B8()
{
  unint64_t result;

  result = qword_2560463B8;
  if (!qword_2560463B8)
  {
    result = MEMORY[0x234934494](&unk_23362FD84, &_s20PassLinkUpdatingBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560463B8);
  }
  return result;
}

uint64_t sub_2332349FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64496E617066 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023366D4C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id InternalTransactionResult.token.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t InternalTransactionResult.transactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FinanceStore.internalTransactions(for:since:isMonitoring:)(uint64_t a1, void **a2, char a3)
{
  uint64_t v3;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _QWORD v10[5];
  void *v11;

  v6 = *a2;
  static DeviceInfo.deviceType.getter((char *)v10);
  if (LOBYTE(v10[0]))
  {
    sub_23316853C();
    swift_allocError();
    *v7 = 3;
    swift_willThrow();
  }
  else
  {
    v11 = v6;
    v10[3] = type metadata accessor for FinanceStore();
    v10[4] = &off_250487D20;
    v10[0] = v3;
    swift_retain();
    sub_23329FF2C(a1, &v11, a3 & 1, (uint64_t)v10);
    v3 = v8;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  return v3;
}

uint64_t FinanceStore.internalTransactions(with:sortDescriptors:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + 73) = a7;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_233234C00()
{
  uint64_t v0;
  _BYTE *v1;
  char v3;
  char v4;
  _QWORD *v5;
  char v6[9];

  static DeviceInfo.deviceType.getter(v6);
  if (v6[0])
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_BYTE *)(v0 + 73) & 1;
    v4 = *(_BYTE *)(v0 + 72) & 1;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_2331991F4;
    return sub_2332A019C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v4, *(_QWORD *)(v0 + 48), v3);
  }
}

uint64_t FinanceStore.internalTransactionsCount(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_233234CEC()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;
  char v4[9];

  static DeviceInfo.deviceType.getter(v4);
  if (v4[0])
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    *v3 = v0;
    v3[1] = sub_233199738;
    return sub_2332A074C(*(_QWORD *)(v0 + 16));
  }
}

ValueMetadata *type metadata accessor for InternalTransactionResult()
{
  return &type metadata for InternalTransactionResult;
}

uint64_t sub_233234DB0(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_233273BF0(0, v2, 0);
    result = v12;
    v4 = (__int128 *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = v4[1];
      v13 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        v10 = v4[1];
        v11 = *v4;
        sub_233273BF0(v7 > 1, v8 + 1, 1);
        v6 = v10;
        v5 = v11;
        result = v13;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      v9 = result + 32 * v8;
      *(_OWORD *)(v9 + 32) = v5;
      *(_OWORD *)(v9 + 48) = v6;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_233234E78(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = sub_23361E6A8();

      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_2334A5470(0, v3[2] + 1, 1, v3);
        v10 = v3[2];
        v9 = v3[3];
        if (v10 >= v9 >> 1)
          v3 = sub_2334A5470((_QWORD *)(v9 > 1), v10 + 1, 1, v3);
        v3[2] = v10 + 1;
        v3[v10 + 4] = v8;
      }
      ++v4;
      if (v7 == v2)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v3;
}

void static ColorExtractor.backgroundColor(forImage:contextOptions:alwaysEstimateDominantColor:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t inited;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_signpost_type_t v32;
  char v33;
  char *v34;
  char v35;
  void (*v36)(char *, char *, uint64_t);
  uint8_t *v37;
  os_signpost_id_t v38;
  uint8_t *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  double Width;
  double Height;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  NSObject *v53;
  char *v54;
  os_signpost_type_t v55;
  char v56;
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  void (*v65)(char *, uint64_t);
  uint8_t *v66;
  os_signpost_id_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  CGRect v81;
  CGRect v82;

  v5 = sub_23361DB2C();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v69 = (char *)&v68 - v8;
  v9 = sub_23361DAFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v75 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v70 = (char *)&v68 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v68 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v68 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560463D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v21 = (void *)*MEMORY[0x24BDBF858];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF858];
  v22 = v21;
  v23 = objc_msgSend(a1, sel_colorSpace);
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560463D8);
  *(_QWORD *)(inited + 40) = v23;
  v24 = sub_2331600D4(inited);
  v25 = swift_bridgeObjectRetain();
  sub_233235810(v25, v24);
  v26 = objc_allocWithZone(MEMORY[0x24BDBF648]);
  type metadata accessor for CIContextOption(0);
  sub_2332377F8();
  v27 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v26, sel_initWithOptions_, v27);

  if (qword_256041CD0 != -1)
    swift_once();
  v29 = sub_23361DB20();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_2560CD318);
  sub_23361DB08();
  sub_23361DAD8();
  v76 = v30;
  v31 = sub_23361DB08();
  v32 = sub_23361E8B8();
  v33 = sub_23361EB88();
  v79 = v28;
  if ((v33 & 1) != 0)
  {
    v34 = v17;
    v35 = a3;
    v36 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v36(v34, v19, v9);
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    v38 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v31, v32, v38, "ColorExtraction-CoreImage", "", v37, 2u);
    v39 = v37;
    v28 = v79;
    MEMORY[0x234934590](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
    v40 = v36;
    a3 = v35;
    v17 = v34;
  }
  else
  {

    v40 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  }
  v77 = v10;
  v72 = v40;
  v40(v17, v19, v9);
  sub_23361DB50();
  swift_allocObject();
  v41 = sub_23361DB44();
  if (qword_256041C80 != -1)
    swift_once();
  v42 = sub_23361DB80();
  __swift_project_value_buffer(v42, (uint64_t)qword_256049550);
  v43 = a1;
  v44 = sub_23361DB68();
  v45 = sub_23361E750();
  v46 = os_log_type_enabled(v44, v45);
  v78 = v41;
  if (!v46)
  {

    v44 = v43;
    goto LABEL_17;
  }
  v68 = v19;
  v47 = swift_slowAlloc();
  *(_DWORD *)v47 = 134218240;
  -[NSObject extent](v43, sel_extent);
  Width = CGRectGetWidth(v81);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v80 = (uint64_t)Width;
  sub_23361EBC4();
  *(_WORD *)(v47 + 12) = 2048;
  -[NSObject extent](v43, sel_extent);
  Height = CGRectGetHeight(v82);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (Height < 9.22337204e18)
  {
    v80 = (uint64_t)Height;
    sub_23361EBC4();

    _os_log_impl(&dword_233151000, v44, v45, "Extracting background color using Metal from a %ldx%ld image", (uint8_t *)v47, 0x16u);
    MEMORY[0x234934590](v47, -1, -1);
    v19 = v68;
    v28 = v79;
LABEL_17:

    objc_msgSend(v28, sel_clearCaches);
    if ((a3 & 1) != 0 || !sub_23323588C(v43, (uint64_t)v28, (uint64_t)v19))
    {
      v59 = sub_23361DB68();
      v60 = sub_23361E750();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_233151000, v59, v60, "Falling back to inferring dominant image color.", v61, 2u);
        MEMORY[0x234934590](v61, -1, -1);
      }

      sub_23323A4E0(v43, v28, v19);
      v53 = sub_23361DB08();
      v54 = v75;
      sub_23361DB38();
      v55 = sub_23361E8AC();
      if ((sub_23361EB88() & 1) != 0)
      {
        swift_retain();
        v58 = v71;
        goto LABEL_27;
      }

      v65 = *(void (**)(char *, uint64_t))(v77 + 8);
      v65(v54, v9);
    }
    else
    {
      v50 = sub_23361DB68();
      v51 = sub_23361E750();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v52 = 0;
        _os_log_impl(&dword_233151000, v50, v51, "Extracted background by detecting similar corner colors.", v52, 2u);
        MEMORY[0x234934590](v52, -1, -1);
      }

      v53 = sub_23361DB08();
      v54 = v70;
      sub_23361DB38();
      v55 = sub_23361E8AC();
      v56 = sub_23361EB88();
      v57 = v77;
      v58 = v69;
      if ((v56 & 1) != 0)
      {
        swift_retain();
LABEL_27:
        sub_23361DB5C();
        swift_release();
        v63 = v73;
        v62 = v74;
        if ((*(unsigned int (**)(char *, uint64_t))(v73 + 88))(v58, v74) == *MEMORY[0x24BEE7810])
        {
          v64 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v62);
          v64 = "";
        }
        v72(v17, v54, v9);
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        v67 = sub_23361DAE4();
        _os_signpost_emit_with_name_impl(&dword_233151000, v53, v55, v67, "ColorExtraction-CoreImage", v64, v66, 2u);
        MEMORY[0x234934590](v66, -1, -1);

        v65 = *(void (**)(char *, uint64_t))(v77 + 8);
        v65(v54, v9);
        v65(v17, v9);
        goto LABEL_33;
      }

      v65 = *(void (**)(char *, uint64_t))(v57 + 8);
      v65(v54, v9);
    }
LABEL_33:

    swift_release();
    v65(v19, v9);
    return;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_233235810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_233238674(a1, (uint64_t)sub_233238638, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23323588C(void *a1, uint64_t a2, uint64_t a3)
{
  double Width;
  double Height;
  CGFloat v8;
  CGFloat x;
  CGFloat y;
  CGFloat v12;
  CGFloat v13;
  uint64_t inited;
  CGFloat MinX;
  CGFloat MinY;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat MaxY;
  CGFloat v21;
  CGFloat v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  id v27;
  _QWORD v28[8];
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  objc_msgSend(a1, sel_extent);
  Width = CGRectGetWidth(v29);
  objc_msgSend(a1, sel_extent);
  Height = CGRectGetHeight(v30);
  if (Height >= Width)
    Height = Width;
  v8 = 0.0;
  if (Height < 1.0 || Height > 50.0)
  {
    v8 = 10.0;
    if (Height < 50.0)
      return 0;
  }
  objc_msgSend(a1, sel_extent);
  v32 = CGRectInset(v31, v8, v8);
  x = v32.origin.x;
  y = v32.origin.y;
  v12 = v32.size.width;
  v13 = v32.size.height;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256046440);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23362AF00;
  v33.origin.x = x;
  v33.origin.y = y;
  v33.size.width = v12;
  v33.size.height = v13;
  MinX = CGRectGetMinX(v33);
  v34.origin.x = x;
  v34.origin.y = y;
  v34.size.width = v12;
  v34.size.height = v13;
  MinY = CGRectGetMinY(v34);
  *(CGFloat *)(inited + 32) = MinX;
  *(CGFloat *)(inited + 40) = MinY;
  v35.origin.x = x;
  v35.origin.y = y;
  v35.size.width = v12;
  v35.size.height = v13;
  v17 = CGRectGetMaxX(v35) + -1.0;
  v36.origin.x = x;
  v36.origin.y = y;
  v36.size.width = v12;
  v36.size.height = v13;
  v18 = CGRectGetMinY(v36);
  *(CGFloat *)(inited + 48) = v17;
  *(CGFloat *)(inited + 56) = v18;
  v37.origin.x = x;
  v37.origin.y = y;
  v37.size.width = v12;
  v37.size.height = v13;
  v19 = CGRectGetMinX(v37);
  v38.origin.x = x;
  v38.origin.y = y;
  v38.size.width = v12;
  v38.size.height = v13;
  MaxY = CGRectGetMaxY(v38);
  *(CGFloat *)(inited + 64) = v19;
  *(CGFloat *)(inited + 72) = MaxY + -1.0;
  v39.origin.x = x;
  v39.origin.y = y;
  v39.size.width = v12;
  v39.size.height = v13;
  v21 = CGRectGetMaxX(v39) + -1.0;
  v40.origin.x = x;
  v40.origin.y = y;
  v40.size.width = v12;
  v40.size.height = v13;
  v22 = CGRectGetMaxY(v40);
  *(CGFloat *)(inited + 80) = v21;
  *(CGFloat *)(inited + 88) = v22 + -1.0;
  MEMORY[0x24BDAC7A8](v23);
  v28[2] = a1;
  v28[3] = a2;
  v28[4] = a3;
  v24 = sub_2334C7D68((_QWORD *(*)(uint64_t *__return_ptr, __int128 *))sub_23323CEA4, (uint64_t)v28, inited);
  swift_setDeallocating();
  result = sub_233239514(v24, 5);
  if ((result & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v26)
      goto LABEL_16;
  }
  else
  {
    v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v26)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return v26;
    }
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    v27 = (id)MEMORY[0x234933120](0, v24);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(v24 + 32);
LABEL_15:
    v26 = (uint64_t)v27;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t static ColorExtractor.extractBackgroundColorWithoutHardware(imageData:)@<X0>(uint64_t a1@<X1>, CGColor **a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGImage *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_signpost_type_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint8_t *v50;
  os_signpost_id_t v51;
  uint8_t *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  const __CFData *v60;
  CGDataProvider *v61;
  CGImageRef v62;
  CGImage *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  CGImage *v67;
  CGDataProvider *v68;
  CGDataProvider *v69;
  const __CFData *v70;
  const UInt8 *BytePtr;
  uint64_t v72;
  CGColorSpace *v73;
  CGColorSpace *v74;
  size_t Width;
  size_t Height;
  CGColor *v77;
  CGColor *v78;
  CGColorSpace *v79;
  CGImage *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  NSObject *v84;
  const __CFData *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  CGColor **v90;
  NSObject *v91;
  os_signpost_type_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  void (*v97)(char *, uint64_t);
  CGImage *v98;
  uint64_t v99;
  uint8_t *v100;
  os_signpost_id_t v101;
  os_signpost_type_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  void *v106;
  CGImage *v107;
  uint64_t v108;
  CGColor **v109;
  NSObject *v110;
  os_signpost_type_t v111;
  uint64_t v112;
  uint64_t v113;
  const char *v114;
  CGImage *v115;
  uint8_t *v116;
  os_signpost_id_t v117;
  os_signpost_type_t v118;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  uint64_t v123;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  CGColor **v133;
  NSObject *v134;
  CGImage *v135;
  os_signpost_type_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  CGColorSpace *v144;
  __int128 v145;
  CGColorRef v146;
  char *v147;
  CGColorRef v148;
  CGColor *v149;
  NSObject *v150;
  os_log_type_t v151;
  uint8_t *v152;
  char *v153;
  const __CFData *v154;
  uint64_t v155;
  CGColorRef v156;
  CGColorRef v157;
  CGColor **v158;
  NSObject *v159;
  char *v160;
  os_signpost_type_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  NSObject *v165;
  os_log_type_t v166;
  uint8_t *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  CGColor **v171;
  char v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  const char *v176;
  CGColor **v177;
  NSObject *v178;
  CGImage *v179;
  os_signpost_type_t v180;
  char v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  const char *v185;
  CGColor **v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  const char *v192;
  uint64_t v193;
  uint8_t *v194;
  os_signpost_id_t v195;
  const char *v196;
  char *v197;
  uint8_t *v198;
  os_signpost_id_t v199;
  const char *v200;
  uint64_t v201;
  uint8_t *v202;
  os_signpost_id_t v203;
  const char *v204;
  char *v205;
  char *v206;
  CGImage *v207;
  char *v208;
  CGImage *v209;
  char *v210;
  char *v211;
  char *v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  CGImage *v217;
  char *v218;
  void (*v219)(char *, CGImage *, uint64_t);
  uint64_t v220;
  uint64_t v221;
  CGColorSpace *v222;
  uint64_t v223;
  CGColor **v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _OWORD v230[4];
  _OWORD v231[2];
  __int128 v232;
  __int128 v233;
  uint64_t v234[5];
  __int128 v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD v238[6];
  _OWORD v239[2];
  char v240;

  v224 = a2;
  v225 = a1;
  v2 = sub_23361DB2C();
  v220 = *(_QWORD *)(v2 - 8);
  v221 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v205 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v218 = (char *)&v205 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v216 = (char *)&v205 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&v213 = (char *)&v205 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v205 = (char *)&v205 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v206 = (char *)&v205 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v208 = (char *)&v205 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v210 = (char *)&v205 - v18;
  v19 = sub_23361DAFC();
  v228 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v222 = (CGColorSpace *)((char *)&v205 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (CGImage *)((char *)&v205 - v23);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v217 = (CGImage *)((char *)&v205 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)&v214 = (char *)&v205 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v207 = (char *)&v205 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v212 = (char *)&v205 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v209 = (CGImage *)((char *)&v205 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v211 = (char *)&v205 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v205 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v205 - v40;
  if (qword_256041CD0 != -1)
    swift_once();
  v42 = sub_23361DB20();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_2560CD318);
  sub_23361DB08();
  sub_23361DAD8();
  v223 = v43;
  v44 = sub_23361DB08();
  v45 = sub_23361E8B8();
  v46 = sub_23361EB88();
  v229 = v19;
  *(_QWORD *)&v215 = v5;
  if ((v46 & 1) != 0)
  {
    v47 = v39;
    v48 = v228;
    v49 = *(void (**)(char *, char *, uint64_t))(v228 + 16);
    v49(v47, v41, v19);
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    v51 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v44, v45, v51, "ColorExtraction-Custom", "", v50, 2u);
    v52 = v50;
    v19 = v229;
    MEMORY[0x234934590](v52, -1, -1);

    v53 = *(void (**)(char *, uint64_t))(v48 + 8);
    v39 = v47;
    v53(v47, v19);
    v54 = v49;
  }
  else
  {

    v54 = *(void (**)(char *, char *, uint64_t))(v228 + 16);
  }
  v226 = v41;
  v219 = (void (*)(char *, CGImage *, uint64_t))v54;
  v54(v39, v41, v19);
  sub_23361DB50();
  swift_allocObject();
  v227 = sub_23361DB44();
  if (qword_256041C80 != -1)
    swift_once();
  v55 = sub_23361DB80();
  v56 = __swift_project_value_buffer(v55, (uint64_t)qword_256049550);
  v57 = sub_23361DB68();
  v58 = sub_23361E750();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v59 = 0;
    _os_log_impl(&dword_233151000, v57, v58, "Extracting background color without Metal.", v59, 2u);
    MEMORY[0x234934590](v59, -1, -1);
  }

  v60 = (const __CFData *)sub_23361D3AC();
  v61 = CGDataProviderCreateWithCFData(v60);

  if (v61)
  {
    v62 = CGImageCreateWithJPEGDataProvider(v61, 0, 0, kCGRenderingIntentDefault);
    if (v62 || (v62 = CGImageCreateWithPNGDataProvider(v61, 0, 0, kCGRenderingIntentDefault)) != 0)
    {
      v63 = v62;
      v225 = v56;
      v64 = sub_23361DB68();
      v65 = sub_23361E75C();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = swift_slowAlloc();
        *(_DWORD *)v66 = 134218240;
        *(_QWORD *)&v239[0] = CGImageGetWidth(v63);
        sub_23361EBC4();
        *(_WORD *)(v66 + 12) = 2048;
        *(_QWORD *)&v239[0] = CGImageGetHeight(v63);
        sub_23361EBC4();

        _os_log_impl(&dword_233151000, v64, v65, "Image is %ldx%ld", (uint8_t *)v66, 0x16u);
        MEMORY[0x234934590](v66, -1, -1);
      }
      else
      {

        v64 = v63;
      }

      v67 = (CGImage *)(id)sub_23323B4FC(v63);
      v68 = CGImageGetDataProvider(v67);
      if (v68)
      {
        v69 = v68;
        v70 = CGDataProviderCopyData(v68);

        if (v70)
        {
          BytePtr = CFDataGetBytePtr(v70);
          if (BytePtr)
          {
            v72 = (uint64_t)BytePtr;
            v73 = CGImageGetColorSpace(v67);
            if (v73)
            {
              v74 = v73;
              v218 = v39;
              Width = CGImageGetWidth(v67);
              Height = CGImageGetHeight(v67);

              sub_23323B870(v72, Width, Height, (uint64_t)v238);
              sub_233168478((uint64_t)v238, (uint64_t)v239, &qword_2560463E0);
              if ((v240 & 1) == 0)
              {
                v230[0] = v239[0];
                v230[1] = v239[1];
                v77 = CGColorCreate(v74, (const CGFloat *)v230);
                if (v77)
                {
                  v78 = v77;
                  if (CGColorGetAlpha(v77) > 0.9)
                  {
                    v79 = v74;
                    v80 = v63;
                    v81 = sub_23361DB68();
                    v82 = sub_23361E750();
                    if (os_log_type_enabled(v81, v82))
                    {
                      v83 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)v83 = 0;
                      _os_log_impl(&dword_233151000, v81, v82, "Found background color by comparing corners", v83, 2u);
                      MEMORY[0x234934590](v83, -1, -1);
                      v84 = v80;
                      v85 = v70;
                      v86 = v229;
                      v70 = v79;
                    }
                    else
                    {
                      v84 = v81;
                      v85 = v79;
                      v81 = v67;
                      v67 = v80;
                      v86 = v229;
                    }
                    v147 = v218;

                    v171 = v224;
                    *v224 = v78;
                    *((_BYTE *)v171 + 8) = 0;
                    v159 = sub_23361DB08();
                    v160 = v211;
                    sub_23361DB38();
                    v161 = sub_23361E8AC();
                    v172 = sub_23361EB88();
                    v173 = v210;
                    if ((v172 & 1) != 0)
                    {
                      swift_retain();
                      sub_23361DB5C();
                      swift_release();
                      v175 = v220;
                      v174 = v221;
                      if ((*(unsigned int (**)(char *, uint64_t))(v220 + 88))(v173, v221) == *MEMORY[0x24BEE7810])
                        goto LABEL_71;
                      (*(void (**)(char *, uint64_t))(v175 + 8))(v173, v174);
                      goto LABEL_85;
                    }
LABEL_72:

                    v97 = *(void (**)(char *, uint64_t))(v228 + 8);
                    v97(v160, v86);
                    goto LABEL_46;
                  }

                }
              }
              *(_QWORD *)&v216 = Width;
              v222 = v74;
              v217 = v63;
              v120 = sub_23361DB68();
              v121 = sub_23361E750();
              if (os_log_type_enabled(v120, v121))
              {
                v122 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v122 = 0;
                _os_log_impl(&dword_233151000, v120, v121, "Extracting dominant color from image via k-means", v122, 2u);
                MEMORY[0x234934590](v122, -1, -1);
              }

              __swift_instantiateConcreteTypeFromMangledName(&qword_2560463E8);
              v123 = swift_allocObject();
              *(_OWORD *)(v123 + 16) = xmmword_233626370;
              *(_QWORD *)(v123 + 32) = 0;
              *(_QWORD *)(v123 + 40) = 0;
              *(_OWORD *)(v123 + 48) = xmmword_23362FFA0;
              *(_OWORD *)(v123 + 64) = xmmword_23362FFC0;
              *(_OWORD *)(v123 + 80) = xmmword_23362FFB0;
              *(_OWORD *)(v123 + 96) = xmmword_23362FFE0;
              *(_OWORD *)(v123 + 112) = xmmword_23362FFD0;
              *(int64x2_t *)(v123 + 128) = vdupq_n_s64(0x3FC9191919191919uLL);
              __asm { FMOV            V1.2D, #1.0 }
              *(_OWORD *)(v123 + 160) = _Q1;
              *(_OWORD *)(v123 + 176) = _Q1;
              *(_OWORD *)(v123 + 144) = xmmword_23362FFD0;
              v129 = sub_23323BFA4(v72, v216, Height, v123);
              swift_setDeallocating();
              swift_deallocClassInstance();
              if (*(_QWORD *)(v129 + 16) < 2uLL)
              {
                swift_bridgeObjectRelease();
                v130 = sub_23361DB68();
                v131 = sub_23361E768();
                if (os_log_type_enabled(v130, v131))
                {
                  v132 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v132 = 0;
                  _os_log_impl(&dword_233151000, v130, v131, "kMeans returned fewer than 2 colors. Ensure startingColors has at least two values.", v132, 2u);
                  MEMORY[0x234934590](v132, -1, -1);
                }

                v133 = v224;
                *v224 = 0;
                *((_BYTE *)v133 + 8) = -1;
                v134 = sub_23361DB08();
                v135 = (CGImage *)v214;
                sub_23361DB38();
                v136 = sub_23361E8AC();
                v137 = sub_23361EB88();
                v138 = v218;
                if ((v137 & 1) != 0)
                {
                  swift_retain();
                  v139 = v213;
                  sub_23361DB5C();
                  swift_release();
                  v141 = v220;
                  v140 = v221;
                  if ((*(unsigned int (**)(uint64_t, uint64_t))(v220 + 88))(v139, v221) != *MEMORY[0x24BEE7810])
                  {
                    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v139, v140);
LABEL_91:
                    v192 = "";
                    goto LABEL_92;
                  }
                  goto LABEL_81;
                }

                v155 = v228;
                v86 = v229;
                goto LABEL_83;
              }
              v142 = *(_OWORD *)(v129 + 32);
              v215 = *(_OWORD *)(v129 + 48);
              v216 = v142;
              v143 = *((_QWORD *)&v215 + 1);
              v144 = v222;
              if (*((double *)&v215 + 1) >= 0.9)
              {
                swift_bridgeObjectRelease();
                v86 = v229;
                v147 = v218;
              }
              else
              {
                v145 = *(_OWORD *)(v129 + 80);
                v213 = *(_OWORD *)(v129 + 64);
                v214 = v145;
                swift_bridgeObjectRelease();
                v231[0] = v213;
                v231[1] = v214;
                v146 = CGColorCreate(v144, (const CGFloat *)v231);
                v86 = v229;
                v147 = v218;
                if (v146)
                {
                  v148 = v146;
                  v149 = v146;
                  v150 = sub_23361DB68();
                  v151 = sub_23361E750();
                  if (os_log_type_enabled(v150, v151))
                  {
                    v152 = (uint8_t *)swift_slowAlloc();
                    *(_DWORD *)v152 = 134217984;
                    v225 = (uint64_t)(v152 + 4);
                    *(_QWORD *)&v232 = CGColorGetAlpha(v149);
                    sub_23361EBC4();

                    _os_log_impl(&dword_233151000, v150, v151, "Background color is transparent. Taking foreground color with alpha=%f", v152, 0xCu);
                    MEMORY[0x234934590](v152, -1, -1);
                    v149 = v217;
                    v153 = v218;
                    v154 = v70;
                    v70 = v222;
                  }
                  else
                  {

                    v154 = v222;
                    v150 = v67;
                    v67 = v217;
                    v153 = v218;
                  }

                  v177 = v224;
                  *v224 = v148;
                  *((_BYTE *)v177 + 8) = 1;
                  v178 = sub_23361DB08();
                  v179 = v209;
                  sub_23361DB38();
                  v180 = sub_23361E8AC();
                  v181 = sub_23361EB88();
                  v182 = v208;
                  if ((v181 & 1) != 0)
                  {
                    swift_retain();
                    sub_23361DB5C();
                    swift_release();
                    v184 = v220;
                    v183 = v221;
                    if ((*(unsigned int (**)(char *, uint64_t))(v220 + 88))(v182, v221) == *MEMORY[0x24BEE7810])
                    {
                      v185 = "[Error] Interval already ended";
                    }
                    else
                    {
                      (*(void (**)(char *, uint64_t))(v184 + 8))(v182, v183);
                      v185 = "";
                    }
                    v193 = v229;
                    v219(v153, v179, v229);
                    v198 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v198 = 0;
                    v199 = sub_23361DAE4();
                    v200 = v185;
                    v86 = v193;
                    _os_signpost_emit_with_name_impl(&dword_233151000, v178, v180, v199, "ColorExtraction-Custom", v200, v198, 2u);
                    MEMORY[0x234934590](v198, -1, -1);

                    v97 = *(void (**)(char *, uint64_t))(v228 + 8);
                    v97((char *)v179, v193);
                    v197 = v153;
                    goto LABEL_89;
                  }

                  v97 = *(void (**)(char *, uint64_t))(v228 + 8);
                  v98 = v179;
                  goto LABEL_42;
                }
              }
              v235 = v216;
              v236 = v215;
              v237 = v143;
              v156 = CGColorCreate(v144, (const CGFloat *)&v235);
              if (v156)
              {
                v157 = v156;

                v158 = v224;
                *v224 = v157;
                *((_BYTE *)v158 + 8) = 0;
                v159 = sub_23361DB08();
                v160 = v212;
                sub_23361DB38();
                v161 = sub_23361E8AC();
                if ((sub_23361EB88() & 1) != 0)
                {
                  swift_retain();
                  v162 = v206;
                  sub_23361DB5C();
                  swift_release();
                  v164 = v220;
                  v163 = v221;
                  if ((*(unsigned int (**)(char *, uint64_t))(v220 + 88))(v162, v221) == *MEMORY[0x24BEE7810])
                  {
LABEL_71:
                    v176 = "[Error] Interval already ended";
LABEL_86:
                    v193 = v229;
                    v219(v147, (CGImage *)v160, v229);
                    v194 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v194 = 0;
                    v195 = sub_23361DAE4();
                    v196 = v176;
                    v86 = v193;
                    _os_signpost_emit_with_name_impl(&dword_233151000, v159, v161, v195, "ColorExtraction-Custom", v196, v194, 2u);
                    MEMORY[0x234934590](v194, -1, -1);

                    v97 = *(void (**)(char *, uint64_t))(v228 + 8);
                    v97(v160, v193);
                    v197 = v147;
LABEL_89:
                    v97(v197, v193);
                    goto LABEL_46;
                  }
                  (*(void (**)(char *, uint64_t))(v164 + 8))(v162, v163);
LABEL_85:
                  v176 = "";
                  goto LABEL_86;
                }
                goto LABEL_72;
              }
              v165 = sub_23361DB68();
              v166 = sub_23361E768();
              if (os_log_type_enabled(v165, v166))
              {
                v167 = (uint8_t *)swift_slowAlloc();
                v225 = swift_slowAlloc();
                v234[0] = v225;
                *(_DWORD *)v167 = 136315138;
                *(_QWORD *)&v214 = v167 + 4;
                v232 = v216;
                v233 = v215;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2560463F0);
                sub_23323CB98();
                v168 = sub_23361F29C();
                *(_QWORD *)&v232 = sub_233164DCC(v168, v169, v234);
                v86 = v229;
                sub_23361EBC4();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_233151000, v165, v166, "Could not construct CGColor from dominant color components %s", v167, 0xCu);
                v170 = v225;
                swift_arrayDestroy();
                MEMORY[0x234934590](v170, -1, -1);
                MEMORY[0x234934590](v167, -1, -1);

              }
              else
              {

              }
              v138 = v218;
              v186 = v224;
              *v224 = 0;
              *((_BYTE *)v186 + 8) = -1;
              v134 = sub_23361DB08();
              v135 = (CGImage *)v207;
              sub_23361DB38();
              v136 = sub_23361E8AC();
              if ((sub_23361EB88() & 1) != 0)
              {
                swift_retain();
                v187 = v205;
                sub_23361DB5C();
                v188 = v187;
                swift_release();
                v189 = v220;
                v190 = v187;
                v191 = v221;
                if ((*(unsigned int (**)(char *, uint64_t))(v220 + 88))(v190, v221) != *MEMORY[0x24BEE7810])
                {
                  (*(void (**)(char *, uint64_t))(v189 + 8))(v188, v191);
                  goto LABEL_91;
                }
LABEL_81:
                v192 = "[Error] Interval already ended";
LABEL_92:
                v201 = v229;
                v219(v138, v135, v229);
                v202 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v202 = 0;
                v203 = sub_23361DAE4();
                v204 = v192;
                v86 = v201;
                _os_signpost_emit_with_name_impl(&dword_233151000, v134, v136, v203, "ColorExtraction-Custom", v204, v202, 2u);
                MEMORY[0x234934590](v202, -1, -1);

                v97 = *(void (**)(char *, uint64_t))(v228 + 8);
                v97((char *)v135, v201);
                v97(v138, v201);
                goto LABEL_46;
              }

              v155 = v228;
LABEL_83:
              v97 = *(void (**)(char *, uint64_t))(v155 + 8);
              v97((char *)v135, v86);
              goto LABEL_46;
            }
          }

        }
      }

      v103 = sub_23361DB68();
      v104 = sub_23361E768();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v105 = 0;
        _os_log_impl(&dword_233151000, v103, v104, "Could not get data from standardized image", v105, 2u);
        MEMORY[0x234934590](v105, -1, -1);
        v106 = v63;
      }
      else
      {
        v106 = v103;
        v103 = v67;
        v67 = v63;
      }
      v107 = v217;
      v108 = v216;

      v109 = v224;
      *v224 = 0;
      *((_BYTE *)v109 + 8) = -1;
      v110 = sub_23361DB08();
      sub_23361DB38();
      v111 = sub_23361E8AC();
      if ((sub_23361EB88() & 1) != 0)
      {
        swift_retain();
        sub_23361DB5C();
        swift_release();
        v113 = v220;
        v112 = v221;
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v220 + 88))(v108, v221) == *MEMORY[0x24BEE7810])
        {
          v114 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v108, v112);
          v114 = "";
        }
        v99 = v229;
        v219(v39, v107, v229);
        v115 = v107;
        v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v116 = 0;
        v117 = sub_23361DAE4();
        v118 = v111;
        v86 = v99;
        _os_signpost_emit_with_name_impl(&dword_233151000, v110, v118, v117, "ColorExtraction-Custom", v114, v116, 2u);
        MEMORY[0x234934590](v116, -1, -1);

        v97 = *(void (**)(char *, uint64_t))(v228 + 8);
        v97((char *)v115, v99);
LABEL_45:
        v97(v39, v99);
        goto LABEL_46;
      }

      v97 = *(void (**)(char *, uint64_t))(v228 + 8);
      v98 = v107;
      goto LABEL_42;
    }

  }
  v87 = sub_23361DB68();
  v88 = sub_23361E768();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v89 = 0;
    _os_log_impl(&dword_233151000, v87, v88, "Could not create CGImage from image data", v89, 2u);
    MEMORY[0x234934590](v89, -1, -1);
  }

  v90 = v224;
  *v224 = 0;
  *((_BYTE *)v90 + 8) = -1;
  v91 = sub_23361DB08();
  sub_23361DB38();
  v92 = sub_23361E8AC();
  if ((sub_23361EB88() & 1) != 0)
  {
    swift_retain();
    v93 = v218;
    sub_23361DB5C();
    swift_release();
    v95 = v220;
    v94 = v221;
    if ((*(unsigned int (**)(char *, uint64_t))(v220 + 88))(v93, v221) == *MEMORY[0x24BEE7810])
    {
      v96 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v94);
      v96 = "";
    }
    v99 = v229;
    v219(v39, v24, v229);
    v100 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v100 = 0;
    v101 = sub_23361DAE4();
    v102 = v92;
    v86 = v99;
    _os_signpost_emit_with_name_impl(&dword_233151000, v91, v102, v101, "ColorExtraction-Custom", v96, v100, 2u);
    MEMORY[0x234934590](v100, -1, -1);

    v97 = *(void (**)(char *, uint64_t))(v228 + 8);
    v97((char *)v24, v99);
    goto LABEL_45;
  }

  v97 = *(void (**)(char *, uint64_t))(v228 + 8);
  v98 = v24;
LABEL_42:
  v86 = v229;
  v97((char *)v98, v229);
LABEL_46:
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v97)(v226, v86);
}

int8x16_t *sub_23323749C@<X0>(int8x16_t *result@<X0>, int8x16_t *a2@<X8>, int64x2_t a3@<Q4>, int64x2_t a4@<Q5>)
{
  int8x16_t *v4;
  __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t *v15;
  int8x16_t v16;
  int8x16_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = result + 4;
  v5 = result[2].i8[0];
  v6 = 1 << v5;
  v7 = -1;
  if (1 << v5 < 64)
    v7 = ~(-1 << (1 << v5));
  v8 = v7 & result[4].i64[0];
  if (v8)
  {
    v9 = 0;
    v10 = __clz(__rbit64(v8));
    v11 = (v8 - 1) & v8;
    v12 = (unint64_t)(v6 + 63) >> 6;
  }
  else
  {
    LODWORD(v9) = v5 & 0x3F;
    v16 = 0uLL;
    if (v9 <= 6)
      goto LABEL_52;
    v12 = (unint64_t)(v6 + 63) >> 6;
    v27 = result[4].u64[1];
    if (v27)
    {
      v9 = 1;
    }
    else
    {
      if (v9 < 8)
        goto LABEL_52;
      v27 = result[5].u64[0];
      if (v27)
      {
        v9 = 2;
      }
      else
      {
        v27 = result[5].u64[1];
        if (v27)
        {
          v9 = 3;
        }
        else
        {
LABEL_40:
          if (v9 < 9)
            goto LABEL_52;
          v27 = result[6].u64[0];
          if (v27)
          {
            v9 = 4;
          }
          else
          {
            v27 = result[6].u64[1];
            if (!v27)
              goto LABEL_46;
            v9 = 5;
          }
        }
      }
    }
LABEL_33:
    v11 = (v27 - 1) & v27;
    v10 = __clz(__rbit64(v27)) + (v9 << 6);
  }
  v13 = result[3].i64[0];
  v14 = result[3].i64[1];
  v15 = (int8x16_t *)(v13 + 32 * v10);
  v16 = *v15;
  v17 = v15[1];
  v18 = *(_QWORD *)(v14 + 8 * v10);
  v19 = v18;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v9 << 6);
      goto LABEL_7;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v12)
      goto LABEL_29;
    v24 = v4->u64[v23];
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_29;
      v24 = v4->u64[v9];
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v12)
          goto LABEL_29;
        v24 = v4->u64[v9];
        if (!v24)
        {
          v9 = v23 + 3;
          if (v23 + 3 >= v12)
            goto LABEL_29;
          v24 = v4->u64[v9];
          if (!v24)
            break;
        }
      }
    }
LABEL_28:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_7:
    result = (int8x16_t *)(v13 + 32 * v21);
    v22 = *(_QWORD *)(v14 + 8 * v21);
    a3.i64[0] = v19;
    if (v19 < v22)
      v18 = v22;
    if (v19 <= v22)
      v19 = v22;
    a4.i64[0] = v22;
    a3 = vdupq_lane_s64(vcgtq_s64(a4, a3).i64[0], 0);
    v17 = vbslq_s8((int8x16_t)a3, result[1], v17);
    v16 = vbslq_s8((int8x16_t)a3, *result, v16);
  }
  v25 = v23 + 4;
  if (v25 >= v12)
  {
LABEL_29:
    v26 = 0;
    goto LABEL_53;
  }
  v24 = v4->u64[v25];
  if (v24)
  {
    v9 = v25;
    goto LABEL_28;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v12)
      goto LABEL_29;
    v24 = v4->u64[v9];
    ++v25;
    if (v24)
      goto LABEL_28;
  }
  __break(1u);
LABEL_46:
  v28 = 0;
  v29 = 6;
  if (v12 > 6)
    v29 = v12;
  v30 = v29 - 6;
  while (v30 != v28)
  {
    v27 = result[7].u64[v28++];
    if (v27)
    {
      v9 = v28 + 5;
      goto LABEL_33;
    }
  }
LABEL_52:
  v18 = 0;
  v26 = 1;
  v17 = 0uLL;
LABEL_53:
  *a2 = v16;
  a2[1] = v17;
  a2[2].i64[0] = v18;
  a2[2].i8[8] = v26;
  return result;
}

unint64_t *sub_2332376D8(unint64_t *result, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  float64x2_t *v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t *v10;
  float64x2_t v11;
  float64x2_t v12;
  float64x2_t v13;
  float64x2_t v14;
  int64x2_t v15;
  float64x2_t *v16;
  float64x2_t v17;
  float64x2_t v18;
  int64x2_t v19;
  float64x2_t v20;

  v5 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a3 + 16);
  if (v5 >= v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((a5 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(a4 + 16) <= a5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 < v6)
  {
    v7 = (float64x2_t *)(a3 + 32 + 32 * v5);
    v9 = *v7;
    v8 = v7[1];
    v10 = (float64x2_t *)(a4 + 32 * a5);
    v12 = v10[2];
    v11 = v10[3];
    v13 = vsubq_f64(v9, v12);
    v14 = vsubq_f64(v8, v11);
    v15 = (int64x2_t)vaddq_f64(vmulq_f64(v13, v13), vmulq_f64(v14, v14));
    v16 = (float64x2_t *)(a3 + 32 + 32 * *a2);
    v17 = vsubq_f64(*v16, v12);
    v18 = vsubq_f64(v16[1], v11);
    v19 = (int64x2_t)vaddq_f64(vmulq_f64(v17, v17), vmulq_f64(v18, v18));
    v20 = vsqrtq_f64(vaddq_f64((float64x2_t)vzip1q_s64(v15, v19), (float64x2_t)vzip2q_s64(v15, v19)));
    return (unint64_t *)(*(_QWORD *)&vmovn_s64(vcgtq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v20, 1), v20)) & 1);
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_233237788(uint64_t *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_233605C40(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v6[0] = v4 + 32;
  v6[1] = v5;
  sub_233237840(v6, a2);
  *a1 = v4;
}

unint64_t sub_2332377F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560420D0;
  if (!qword_2560420D0)
  {
    type metadata accessor for CIContextOption(255);
    result = MEMORY[0x234934494](&unk_233624430, v1);
    atomic_store(result, (unint64_t *)&qword_2560420D0);
  }
  return result;
}

void sub_233237840(uint64_t *a1, id *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  _OWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;

  v4 = a1[1];
  v5 = sub_23361F1C4();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_135;
    if (v4)
      sub_2332380EC(0, v4, 1, a1, a2);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_143;
  v115 = v5;
  v124 = v2;
  v111 = a1;
  if (v4 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    v123 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
      if (v12 < 2)
        goto LABEL_113;
      goto LABEL_100;
    }
    v116 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256046408);
    v8 = sub_23361E42C();
    *(_QWORD *)(v8 + 16) = v7;
    v116 = v8;
    v123 = (char *)(v8 + 32);
  }
  v10 = 0;
  v112 = *a1 + 48;
  v110 = *a1 - 48;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v119 = v4;
  v125 = *a1;
  while (1)
  {
    v13 = v10++;
    v120 = v13;
    if (v10 < v4)
    {
      v14 = *a2;
      v15 = (void *)sub_23361E618();
      v121 = objc_msgSend(v14, sel_countForObject_, v15);

      v16 = *a2;
      v17 = (void *)sub_23361E618();
      v117 = objc_msgSend(v16, sel_countForObject_, v17);

      v13 = v120;
      v4 = v119;
      v10 = v120 + 2;
      if (v120 + 2 < v119)
      {
        v113 = v11;
        v18 = v112 + 48 * v120;
        while (1)
        {
          v18 += 48;
          v19 = *a2;
          v20 = (void *)sub_23361E618();
          v21 = objc_msgSend(v19, sel_countForObject_, v20);

          v22 = *a2;
          v23 = (void *)sub_23361E618();
          v24 = objc_msgSend(v22, sel_countForObject_, v23);

          if ((uint64_t)v117 < (uint64_t)v121 == (uint64_t)v24 >= (uint64_t)v21)
            break;
          ++v10;
          v4 = v119;
          if (v119 == v10)
          {
            v10 = v119;
            v11 = v113;
            goto LABEL_23;
          }
        }
        v11 = v113;
        v4 = v119;
LABEL_23:
        v13 = v120;
      }
      if ((uint64_t)v117 < (uint64_t)v121)
      {
        if (v10 < v13)
          goto LABEL_136;
        if (v13 < v10)
        {
          v25 = 48 * v10;
          v26 = 48 * v13;
          v27 = v10;
          v28 = v13;
          do
          {
            if (v28 != --v27)
            {
              if (!v125)
                goto LABEL_141;
              v29 = (_OWORD *)(v125 + v26);
              v30 = *(_QWORD *)(v125 + v26);
              v31 = v125 + v25;
              v32 = *(_OWORD *)(v125 + v26 + 16);
              v33 = *(_OWORD *)(v125 + v26 + 32);
              v34 = *(_OWORD *)(v125 + v25 - 48);
              v35 = *(_OWORD *)(v125 + v25 - 16);
              v29[1] = *(_OWORD *)(v125 + v25 - 32);
              v29[2] = v35;
              *v29 = v34;
              *(_QWORD *)(v31 - 48) = v30;
              *(_OWORD *)(v31 - 32) = v32;
              *(_OWORD *)(v31 - 16) = v33;
            }
            ++v28;
            v25 -= 48;
            v26 += 48;
          }
          while (v28 < v27);
        }
      }
    }
    if (v10 >= v4)
      goto LABEL_50;
    if (__OFSUB__(v10, v13))
      goto LABEL_134;
    if (v10 - v13 >= v115)
      goto LABEL_50;
    if (__OFADD__(v13, v115))
      goto LABEL_137;
    v36 = v13 + v115 >= v4 ? v4 : v13 + v115;
    if (v36 < v13)
      break;
    if (v10 != v36)
    {
      v114 = v11;
      v37 = (_OWORD *)(v110 + 48 * v10);
      v118 = v36;
      do
      {
        v122 = v37;
        do
        {
          v38 = v37 + 3;
          v39 = *a2;
          v40 = (void *)sub_23361E618();
          v41 = objc_msgSend(v39, sel_countForObject_, v40);

          v42 = *a2;
          v43 = (void *)sub_23361E618();
          v44 = objc_msgSend(v42, sel_countForObject_, v43);

          if ((uint64_t)v44 >= (uint64_t)v41)
            break;
          if (!v125)
            goto LABEL_139;
          v45 = *((_QWORD *)v37 + 6);
          v47 = v37[4];
          v46 = v37[5];
          v48 = v37[1];
          *v38 = *v37;
          v37[4] = v48;
          v49 = v37[2];
          *(_QWORD *)v37 = v45;
          v37[1] = v47;
          v37[2] = v46;
          v37 -= 3;
          ++v13;
          v38[2] = v49;
        }
        while (v10 != v13);
        ++v10;
        v13 = v120;
        v37 = v122 + 3;
      }
      while (v10 != v118);
      v10 = v118;
      v11 = v114;
    }
LABEL_50:
    if (v10 < v13)
      goto LABEL_129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23360573C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v51 = *((_QWORD *)v11 + 2);
    v50 = *((_QWORD *)v11 + 3);
    v12 = v51 + 1;
    v52 = v125;
    if (v51 >= v50 >> 1)
    {
      v103 = sub_23360573C((char *)(v50 > 1), v51 + 1, 1, v11);
      v52 = v125;
      v11 = v103;
    }
    *((_QWORD *)v11 + 2) = v12;
    v53 = v11 + 32;
    v54 = &v11[16 * v51 + 32];
    *(_QWORD *)v54 = v13;
    *((_QWORD *)v54 + 1) = v10;
    if (v51)
    {
      while (1)
      {
        v55 = v12 - 1;
        if (v12 >= 4)
        {
          v60 = &v53[16 * v12];
          v61 = *((_QWORD *)v60 - 8);
          v62 = *((_QWORD *)v60 - 7);
          v66 = __OFSUB__(v62, v61);
          v63 = v62 - v61;
          if (v66)
            goto LABEL_118;
          v65 = *((_QWORD *)v60 - 6);
          v64 = *((_QWORD *)v60 - 5);
          v66 = __OFSUB__(v64, v65);
          v58 = v64 - v65;
          v59 = v66;
          if (v66)
            goto LABEL_119;
          v67 = v12 - 2;
          v68 = &v53[16 * v12 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v66 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v66)
            goto LABEL_121;
          v66 = __OFADD__(v58, v71);
          v72 = v58 + v71;
          if (v66)
            goto LABEL_124;
          if (v72 >= v63)
          {
            v90 = &v53[16 * v55];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v66 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v66)
              goto LABEL_128;
            v83 = v58 < v93;
            goto LABEL_87;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v84 = *((_QWORD *)v11 + 4);
            v85 = *((_QWORD *)v11 + 5);
            v66 = __OFSUB__(v85, v84);
            v77 = v85 - v84;
            v78 = v66;
            goto LABEL_81;
          }
          v57 = *((_QWORD *)v11 + 4);
          v56 = *((_QWORD *)v11 + 5);
          v66 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          v59 = v66;
        }
        if ((v59 & 1) != 0)
          goto LABEL_120;
        v67 = v12 - 2;
        v73 = &v53[16 * v12 - 32];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v76 = __OFSUB__(v74, v75);
        v77 = v74 - v75;
        v78 = v76;
        if (v76)
          goto LABEL_123;
        v79 = &v53[16 * v55];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v66 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v66)
          goto LABEL_126;
        if (__OFADD__(v77, v82))
          goto LABEL_127;
        if (v77 + v82 >= v58)
        {
          v83 = v58 < v82;
LABEL_87:
          if (v83)
            v55 = v67;
          goto LABEL_89;
        }
LABEL_81:
        if ((v78 & 1) != 0)
          goto LABEL_122;
        v86 = &v53[16 * v55];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v66 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v66)
          goto LABEL_125;
        if (v89 < v77)
          goto LABEL_15;
LABEL_89:
        v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v52)
          goto LABEL_140;
        v95 = v11;
        v96 = &v53[16 * v94];
        v97 = *(_QWORD *)v96;
        v98 = v55;
        v99 = &v53[16 * v55];
        v100 = *((_QWORD *)v99 + 1);
        sub_233238254((char *)(v52 + 48 * *(_QWORD *)v96), (char *)(v52 + 48 * *(_QWORD *)v99), v52 + 48 * v100, v123, a2);
        if (v124)
        {
LABEL_97:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v116 + 16) = 0;
          swift_bridgeObjectRelease();
          return;
        }
        if (v100 < v97)
          goto LABEL_115;
        if (v98 > *((_QWORD *)v95 + 2))
          goto LABEL_116;
        v101 = v98;
        *(_QWORD *)v96 = v97;
        *(_QWORD *)&v53[16 * v94 + 8] = v100;
        v102 = *((_QWORD *)v95 + 2);
        if (v98 >= v102)
          goto LABEL_117;
        v11 = v95;
        v124 = 0;
        v12 = v102 - 1;
        memmove(v99, v99 + 16, 16 * (v102 - 1 - v101));
        *((_QWORD *)v95 + 2) = v102 - 1;
        v52 = v125;
        if (v102 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v4 = v119;
    if (v10 >= v119)
    {
      v9 = v116;
      if (v12 < 2)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
LABEL_100:
      v104 = *v111;
      v116 = v9;
      while (1)
      {
        v105 = v12 - 2;
        if (v12 < 2)
          goto LABEL_130;
        if (!v104)
          goto LABEL_142;
        v106 = *(_QWORD *)&v11[16 * v105 + 32];
        v107 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_233238254((char *)(v104 + 48 * v106), (char *)(v104 + 48 * *(_QWORD *)&v11[16 * v12 + 16]), v104 + 48 * v107, v123, a2);
        if (v124)
          goto LABEL_97;
        if (v107 < v106)
          goto LABEL_131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_233605C04((uint64_t)v11);
        if (v105 >= *((_QWORD *)v11 + 2))
          goto LABEL_132;
        v108 = &v11[16 * v105 + 32];
        *(_QWORD *)v108 = v106;
        *((_QWORD *)v108 + 1) = v107;
        v109 = *((_QWORD *)v11 + 2);
        if (v12 > v109)
          goto LABEL_133;
        memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v109 - v12));
        *((_QWORD *)v11 + 2) = v109 - 1;
        v12 = v109 - 1;
        v9 = v116;
        if (v109 <= 2)
          goto LABEL_113;
      }
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  sub_23361EF18();
  __break(1u);
}

void sub_2332380EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, id *a5)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (a3 != a2)
  {
    v23 = *a4;
    v5 = *a4 + 48 * a3 - 48;
LABEL_5:
    v6 = a1;
    v21 = v5;
    v24 = a3;
    while (1)
    {
      v7 = (_OWORD *)(v5 + 48);
      v8 = *a5;
      v9 = (void *)sub_23361E618();
      v10 = objc_msgSend(v8, sel_countForObject_, v9);

      v11 = *a5;
      v12 = (void *)sub_23361E618();
      v13 = objc_msgSend(v11, sel_countForObject_, v12);

      if ((uint64_t)v13 >= (uint64_t)v10)
      {
LABEL_4:
        a3 = v24 + 1;
        v5 = v21 + 48;
        if (v24 + 1 == a2)
          return;
        goto LABEL_5;
      }
      if (!v23)
        break;
      v14 = *(_QWORD *)(v5 + 48);
      v16 = *(_OWORD *)(v5 + 64);
      v15 = *(_OWORD *)(v5 + 80);
      v17 = *(_OWORD *)(v5 + 16);
      *v7 = *(_OWORD *)v5;
      *(_OWORD *)(v5 + 64) = v17;
      v18 = *(_OWORD *)(v5 + 32);
      *(_QWORD *)v5 = v14;
      *(_OWORD *)(v5 + 16) = v16;
      *(_OWORD *)(v5 + 32) = v15;
      v5 -= 48;
      ++v6;
      v7[2] = v18;
      if (v24 == v6)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_233238254(char *a1, char *__src, unint64_t a3, char *a4, id *a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t result;
  char *v45;
  char *v46;
  char *v48;
  char *v49;
  char *v50;
  char *v51;

  v5 = __src;
  v6 = __src - a1;
  v7 = (__src - a1) / 48;
  v8 = a3 - (_QWORD)__src;
  v9 = (uint64_t)(a3 - (_QWORD)__src) / 48;
  v51 = a1;
  v50 = a4;
  if (v7 >= v9)
  {
    if (v8 >= -47)
    {
      if (a4 != __src || &__src[48 * v9] <= a4)
        memmove(a4, __src, 48 * v9);
      v23 = &a4[48 * v9];
      v49 = v23;
      v51 = v5;
      if (a1 < v5 && v8 >= 48)
      {
        v24 = (char *)(a3 - 48);
        v25 = v5;
        do
        {
          v46 = v24 + 48;
          v48 = v5;
          v26 = v23 - 48;
          v25 -= 48;
          v27 = (unint64_t)v23;
          v28 = *a5;
          v29 = (void *)sub_23361E618();
          v30 = objc_msgSend(v28, sel_countForObject_, v29);

          v31 = *a5;
          v32 = (void *)sub_23361E618();
          v33 = objc_msgSend(v31, sel_countForObject_, v32);

          if ((uint64_t)v33 >= (uint64_t)v30)
          {
            v49 = v26;
            v25 = v48;
            if ((unint64_t)v46 < v27 || (unint64_t)v24 >= v27)
            {
              v39 = *(_OWORD *)v26;
              v40 = *((_OWORD *)v26 + 2);
              *((_OWORD *)v24 + 1) = *((_OWORD *)v26 + 1);
              *((_OWORD *)v24 + 2) = v40;
              *(_OWORD *)v24 = v39;
              v23 = v26;
              v36 = a4;
            }
            else
            {
              v36 = a4;
              if (v46 != (char *)v27)
              {
                v37 = *(_OWORD *)v26;
                v38 = *((_OWORD *)v26 + 2);
                *((_OWORD *)v24 + 1) = *((_OWORD *)v26 + 1);
                *((_OWORD *)v24 + 2) = v38;
                *(_OWORD *)v24 = v37;
              }
              v23 = v26;
            }
          }
          else
          {
            if (v46 != v48 || v24 >= v48)
            {
              v34 = *(_OWORD *)v25;
              v35 = *((_OWORD *)v25 + 2);
              *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
              *((_OWORD *)v24 + 2) = v35;
              *(_OWORD *)v24 = v34;
            }
            v51 = v25;
            v36 = a4;
            v23 = (char *)v27;
          }
          if (v25 <= a1)
            break;
          v24 -= 48;
          v5 = v25;
        }
        while (v23 > v36);
      }
      goto LABEL_40;
    }
  }
  else if (v6 >= -47)
  {
    if (a4 != a1 || &a1[48 * v7] <= a4)
      memmove(a4, a1, 48 * v7);
    v45 = &a4[48 * v7];
    v49 = v45;
    if ((unint64_t)v5 < a3 && v6 >= 48)
    {
      v10 = a4;
      v11 = a1;
      do
      {
        v12 = *a5;
        v13 = (void *)sub_23361E618();
        v14 = objc_msgSend(v12, sel_countForObject_, v13);

        v15 = *a5;
        v16 = (void *)sub_23361E618();
        v17 = objc_msgSend(v15, sel_countForObject_, v16);

        if ((uint64_t)v17 >= (uint64_t)v14)
        {
          if (v11 != v10)
          {
            v21 = *(_OWORD *)v10;
            v22 = *((_OWORD *)v10 + 2);
            *((_OWORD *)v11 + 1) = *((_OWORD *)v10 + 1);
            *((_OWORD *)v11 + 2) = v22;
            *(_OWORD *)v11 = v21;
          }
          v10 += 48;
          v50 = v10;
          v18 = v5;
        }
        else
        {
          v18 = v5 + 48;
          if (v11 < v5 || v11 >= v18 || v11 != v5)
          {
            v19 = *(_OWORD *)v5;
            v20 = *((_OWORD *)v5 + 2);
            *((_OWORD *)v11 + 1) = *((_OWORD *)v5 + 1);
            *((_OWORD *)v11 + 2) = v20;
            *(_OWORD *)v11 = v19;
          }
        }
        v11 += 48;
        if (v10 >= v45)
          break;
        v5 = v18;
      }
      while ((unint64_t)v18 < a3);
      v51 = v11;
    }
LABEL_40:
    sub_2336058F8((void **)&v51, (const void **)&v50, &v49);
    return 1;
  }
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

id sub_233238638@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = *a1;
  sub_233168350((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_233238674(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_233238D94((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_2331683D0(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_2331E3E14(v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_23327E598();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_2331683D0(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_233238D94((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_2331683D0(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_2331E3E14(i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_23327A5BC(v34, 1);
        v36 = sub_2331E3E14(i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_233168350((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_2331683D0(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_2331683D0(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_233238D94((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2331961F0();
    return swift_release();
  }
  sub_23327A5BC(v18, a4 & 1);
  v20 = sub_2331E3E14(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_233168350((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_2331683D0(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CIContextOption(0);
  result = sub_23361F2B4();
  __break(1u);
  return result;
}

unint64_t sub_23323899C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x2349345A8](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x2349345A8](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_233238A24(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = v3 + 32 * v5;
      v9 = *(_OWORD *)(v7 + 32);
      v8 = *(_OWORD *)(v7 + 48);
      if (!v4)
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v22 = v9;
        v23 = v8;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256046400);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 48;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v2[3] >> 1;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= (unint64_t)&v2[6 * v16 + 4])
            memmove(v13 + 4, v2 + 4, 48 * v16);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + 48 * v16);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v13;
        v9 = v22;
        v8 = v23;
      }
      v18 = __OFSUB__(v4--, 1);
      if (v18)
        break;
      *v6 = v5;
      *((_OWORD *)v6 + 1) = v9;
      *((_OWORD *)v6 + 2) = v8;
      v6 += 6;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v4 = 0;
LABEL_21:
  v19 = v2[3];
  if (v19 < 2)
    return (uint64_t)v2;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v4);
  v21 = v20 - v4;
  if (!v18)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_233238BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_233168350(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_233168478((uint64_t)v24, (uint64_t)v22, &qword_256046458);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_233168608((uint64_t)v20, &qword_256046460);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_233238D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_233168350(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_233168478((uint64_t)v24, (uint64_t)v22, &qword_256046448);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_233168608((uint64_t)v20, &qword_256046450);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_233238F6C(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t result;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_233273BF0(0, v3, 0);
    result = v18;
    v6 = (unint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(a2 + 16);
    while (1)
    {
      v9 = *v6;
      v6 += 2;
      v8 = v9;
      if (v9 >= v7)
        break;
      v10 = (__int128 *)(a2 + 32 + 32 * v8);
      v11 = *v10;
      v12 = v10[1];
      v19 = result;
      v14 = *(_QWORD *)(result + 16);
      v13 = *(_QWORD *)(result + 24);
      if (v14 >= v13 >> 1)
      {
        v16 = v12;
        v17 = v11;
        sub_233273BF0(v13 > 1, v14 + 1, 1);
        v12 = v16;
        v11 = v17;
        result = v19;
      }
      *(_QWORD *)(result + 16) = v14 + 1;
      v15 = result + 32 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(_OWORD *)(v15 + 48) = v12;
      if (!--v3)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_233239058(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v12;
  unsigned __int8 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = a1[2];
  if (!v5)
    return 0;
  v6 = a1[4];
  v7 = a1[5];
  *(_QWORD *)&v17 = v6;
  *((_QWORD *)&v17 + 1) = v7;
  v8 = v5 - 1;
  if (v5 != 1)
  {
    v12 = (__int128 *)(a1 + 6);
    do
    {
      v15 = *v12;
      v16 = *v12;
      v13 = sub_2332376D8((unint64_t *)&v17, (unint64_t *)&v16, a2, a3, a4);
      if (v4)
        break;
      if ((v13 & 1) != 0)
      {
        v6 = v15;
        v17 = v15;
      }
      ++v12;
      --v8;
    }
    while (v8);
  }
  return v6;
}

unint64_t sub_233239120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t result;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  float64x2_t *v26;
  float64x2_t v27;
  uint64_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;

  if ((sub_2334C83D8(a1, a2) & 1) == 0)
  {
    v14 = *(_QWORD *)(a2 + 16);
    if (v14)
    {
      result = sub_23323899C(*(_QWORD *)(a2 + 16));
      if (result >= v14)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v16 = *(_QWORD *)(a2 + 8 * result + 32);
      swift_bridgeObjectRetain();
      v17 = 0;
      v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        if (*(_QWORD *)(a2 + 8 * v17 + 32) == v16)
        {
          v39 = v18;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_233273C30(0, v18[2] + 1, 1);
            v18 = v39;
          }
          v20 = v18[2];
          v19 = v18[3];
          if (v20 >= v19 >> 1)
          {
            sub_233273C30(v19 > 1, v20 + 1, 1);
            v18 = v39;
          }
          v18[2] = v20 + 1;
          v21 = &v18[2 * v20];
          v21[4] = v17;
          v21[5] = v16;
        }
        ++v17;
      }
      while (v14 != v17);
      swift_bridgeObjectRelease();
      v22 = sub_233239058(v18, a3, a4, v16);
      v24 = v23;
      result = swift_release();
      if ((v24 & 1) == 0)
      {
        if ((v22 & 0x8000000000000000) == 0)
        {
          if (v22 < *(_QWORD *)(a3 + 16))
            return result;
          goto LABEL_45;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        return result;
      }
    }
    v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_233273BD4(0, 4, 0);
    v32 = 0;
    v33 = v39;
    do
    {
      do
      {
        v38 = 0;
        result = MEMORY[0x2349345A8](&v38, 8);
      }
      while (0x20000000000001 * v38 < 0x1FFFFFFFFFF801);
      v34 = (v38 * (unsigned __int128)0x20000000000001uLL) >> 64;
      v39 = v33;
      v36 = v33[2];
      v35 = v33[3];
      if (v36 >= v35 >> 1)
      {
        result = sub_233273BD4(v35 > 1, v36 + 1, 1);
        v33 = v39;
      }
      ++v32;
      v33[2] = v36 + 1;
      *(double *)&v33[v36 + 4] = (double)v34 * 1.11022302e-16 + 0.0;
    }
    while (v32 != 4);
    v37 = 4;
    if (v36 < 4)
      v37 = v36;
    if (v36 <= 3)
    {
      if (v37 >= 3)
        return swift_release();
      goto LABEL_46;
    }
    __break(1u);
    goto LABEL_43;
  }
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(a2 + 8 * v9 + 32) == a1)
      {
        v39 = (_QWORD *)v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273C30(0, *(_QWORD *)(v10 + 16) + 1, 1);
          v10 = (uint64_t)v39;
        }
        v12 = *(_QWORD *)(v10 + 16);
        v11 = *(_QWORD *)(v10 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_233273C30(v11 > 1, v12 + 1, 1);
          v10 = (uint64_t)v39;
        }
        *(_QWORD *)(v10 + 16) = v12 + 1;
        v13 = v10 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v9;
        *(_QWORD *)(v13 + 40) = a1;
      }
      ++v9;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v25 = sub_233238F6C(v10, a3);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = (float64x2_t *)(v25 + 32);
    v27 = 0uLL;
    v28 = *(_QWORD *)(v25 + 16);
    v29 = 0uLL;
    do
    {
      v30 = *v26;
      v31 = v26[1];
      v26 += 2;
      v29 = vaddq_f64(v29, v31);
      v27 = vaddq_f64(v27, v30);
      --v28;
    }
    while (v28);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233239514(unint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  unint64_t v20;
  double v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  os_log_type_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint32_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  LOBYTE(v2) = a2;
  v4 = sub_233234E78(a1);
  v5 = v4[2];
  if (a1 >> 62)
    goto LABEL_46;
  if (v5 == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    while (1)
    {
      v6 = v4[2];
      if (!v6)
      {
LABEL_10:
        v9 = 0;
        v10 = (double)v2 / 255.0;
        v11 = MEMORY[0x24BEE4AF8];
        while (1)
        {
          if (v5)
          {
            v41[0] = v11;
            v2 = v41;
            sub_233273BB8(0, v5 & ~(v5 >> 63), 0);
            if (v5 >= 1)
            {
              v12 = v41[0];
              v13 = v4 + 4;
              v14 = v5;
              while (v9 < *(_QWORD *)(*v13 + 16))
              {
                v15 = *(_QWORD *)(*v13 + 8 * v9 + 32);
                v41[0] = v12;
                v17 = *(_QWORD *)(v12 + 16);
                v16 = *(_QWORD *)(v12 + 24);
                v18 = v17 + 1;
                if (v17 >= v16 >> 1)
                {
                  v2 = v41;
                  sub_233273BB8(v16 > 1, v17 + 1, 1);
                  v12 = v41[0];
                }
                *(_QWORD *)(v12 + 16) = v18;
                *(_QWORD *)(v12 + 8 * v17 + 32) = v15;
                ++v13;
                if (!--v14)
                  goto LABEL_21;
              }
              __break(1u);
LABEL_43:
              __break(1u);
            }
            __break(1u);
            goto LABEL_45;
          }
          v18 = *(_QWORD *)(v11 + 16);
          if (!v18)
            goto LABEL_43;
          v12 = v11;
LABEL_21:
          v19 = *(double *)(v12 + 32);
          v20 = v18 - 1;
          if (v18 == 1)
          {
            v21 = *(double *)(v12 + 32);
          }
          else
          {
            v22 = 0;
            v21 = *(double *)(v12 + 32);
            do
            {
              if (v21 < *(double *)(v12 + 40 + 8 * v22))
                v21 = *(double *)(v12 + 40 + 8 * v22);
              ++v22;
            }
            while (v20 != v22);
            v23 = (double *)(v12 + 40);
            do
            {
              v24 = *v23++;
              v25 = v24;
              if (v24 < v19)
                v19 = v25;
              --v20;
            }
            while (v20);
          }
          swift_bridgeObjectRelease();
          v26 = v21 - v19;
          if (v10 < v26)
            break;
          if (++v9 == 4)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
        }
        swift_bridgeObjectRelease();
        if (qword_256041C80 != -1)
          swift_once();
        v33 = sub_23361DB80();
        __swift_project_value_buffer(v33, (uint64_t)qword_256049550);
        v29 = sub_23361DB68();
        v34 = sub_23361E75C();
        if (os_log_type_enabled(v29, v34))
        {
          v31 = swift_slowAlloc();
          *(_DWORD *)v31 = 134218496;
          v41[0] = v9;
          sub_23361EBC4();
          *(_WORD *)(v31 + 12) = 2048;
          *(double *)v41 = v26;
          sub_23361EBC4();
          *(_WORD *)(v31 + 22) = 2048;
          *(double *)v41 = v10;
          sub_23361EBC4();
          v32 = "Colors are not similar because range of component at index %ld has range %f (greater than threshold of %f)";
          v35 = v29;
          v36 = v34;
          v37 = (uint8_t *)v31;
          v38 = 32;
          goto LABEL_52;
        }
        goto LABEL_53;
      }
      if (*(_QWORD *)(v4[4] + 16) != 4)
        break;
      if (v6 == 1)
        goto LABEL_10;
      v7 = 5;
      while (1)
      {
        v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        if (*(_QWORD *)(v4[v7] + 16) != 4)
          goto LABEL_34;
        ++v7;
        if (v8 == v6)
          goto LABEL_10;
      }
LABEL_45:
      __break(1u);
LABEL_46:
      swift_bridgeObjectRetain();
      v39 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v5 != v39)
        goto LABEL_47;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if (qword_256041C80 != -1)
      swift_once();
    v28 = sub_23361DB80();
    __swift_project_value_buffer(v28, (uint64_t)qword_256049550);
    v29 = sub_23361DB68();
    v30 = sub_23361E768();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      *(_WORD *)v31 = 0;
      v32 = "Colors have differing numbers of components. Expected 4 (RGBA).";
      goto LABEL_51;
    }
  }
  else
  {
LABEL_47:
    swift_bridgeObjectRelease();
    if (qword_256041C80 != -1)
      swift_once();
    v40 = sub_23361DB80();
    __swift_project_value_buffer(v40, (uint64_t)qword_256049550);
    v29 = sub_23361DB68();
    v30 = sub_23361E768();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      *(_WORD *)v31 = 0;
      v32 = "Some colors have no components.";
LABEL_51:
      v35 = v29;
      v36 = v30;
      v37 = (uint8_t *)v31;
      v38 = 2;
LABEL_52:
      _os_log_impl(&dword_233151000, v35, v36, v32, v37, v38);
      MEMORY[0x234934590](v31, -1, -1);
    }
  }
LABEL_53:

  return 0;
}

void sub_2332399BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  CGColorSpaceRef DeviceRGB;
  double Width;
  uint64_t v30;
  double Height;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  CGColorSpace *v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  os_signpost_type_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  char *v55;
  uint8_t *v56;
  os_signpost_id_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  CGRect v69;
  CGRect v70;

  v67 = a2;
  v5 = sub_23361DB2C();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361DAFC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v59 - v13;
  if (qword_256041CD0 != -1)
    swift_once();
  v15 = sub_23361DB20();
  v66 = __swift_project_value_buffer(v15, (uint64_t)qword_2560CD318);
  v16 = sub_23361DB08();
  v17 = sub_23361E8B8();
  v18 = sub_23361EB88();
  v61 = v7;
  if ((v18 & 1) != 0)
  {
    v19 = v14;
    v20 = a3;
    v21 = v9;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v22(v19, v20, v8);
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v16, v17, v24, "ColorExtraction-CoreImage", "RenderImage", v23, 2u);
    MEMORY[0x234934590](v23, -1, -1);

    v25 = v21;
    v26 = *(void (**)(char *, uint64_t))(v21 + 8);
    a3 = v20;
    v14 = v19;
    v26(v19, v8);
  }
  else
  {

    v25 = v9;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  }
  v65 = v12;
  v22(v14, a3, v8);
  sub_23361DB50();
  swift_allocObject();
  v27 = sub_23361DB44();
  DeviceRGB = (CGColorSpaceRef)objc_msgSend(a1, sel_colorSpace);
  if (!DeviceRGB)
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  objc_msgSend(a1, sel_extent);
  Width = CGRectGetWidth(v69);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v30 = (uint64_t)Width;
  if ((unint64_t)((uint64_t)Width - 0x2000000000000000) >> 62 != 3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(a1, sel_extent);
  Height = CGRectGetHeight(v70);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v32 = 4 * v30;
  v33 = v32 * (uint64_t)Height;
  if ((unsigned __int128)(v32 * (__int128)(uint64_t)Height) >> 64 != v33 >> 63)
  {
LABEL_32:
    __break(1u);
    return;
  }
  v60 = (void (*)(char *, char *, uint64_t))v22;
  v64 = v8;
  v34 = sub_233612DB8(0, v33);
  objc_msgSend(a1, sel_extent);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = *MEMORY[0x24BDBF8B0];
  v44 = DeviceRGB;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v68 = v27;
  v46 = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v34 = (uint64_t)sub_2334A4738(0, *(_QWORD *)(v34 + 16), 0, (char *)v34);
  swift_bridgeObjectRetain();
  objc_msgSend(v67, sel_render_toBitmap_rowBytes_bounds_format_colorSpace_, a1, v34 + 32, v32, v43, v44, v36, v38, v40, v42);
  swift_bridgeObjectRelease();

  v47 = sub_23361DB08();
  v48 = v65;
  sub_23361DB38();
  v49 = sub_23361E8AC();
  if ((sub_23361EB88() & 1) != 0)
  {
    swift_retain();
    v50 = v61;
    sub_23361DB5C();
    swift_release();
    v52 = v62;
    v51 = v63;
    if ((*(unsigned int (**)(char *, uint64_t))(v62 + 88))(v50, v63) == *MEMORY[0x24BEE7810])
    {
      v53 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
      v53 = "";
    }
    v54 = v64;
    v60(v14, v48, v64);
    v55 = v48;
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    v57 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v47, v49, v57, "ColorExtraction-CoreImage", v53, v56, 2u);
    MEMORY[0x234934590](v56, -1, -1);

    v58 = *(void (**)(char *, uint64_t))(v46 + 8);
    v58(v55, v54);
    v58(v14, v54);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v48, v64);
  }
  swift_release();
}

uint64_t sub_233239F0C(void *a1, void *a2, uint64_t a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_signpost_type_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  CGColorSpaceRef DeviceRGB;
  uint64_t v20;
  uint64_t v21;
  CGColorSpace *v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  unint64_t v28;
  CGColorRef v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t result;
  double Width;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  CGPoint v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v10 = sub_23361DAFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_extent);
  v40.x = a4;
  v40.y = a5;
  if (!CGRectContainsPoint(v41, v40))
  {
    v38 = 0;
    v39 = 0xE000000000000000;
    sub_23361ED98();
    sub_23361E27C();
    sub_23361E5A0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    sub_23361E5A0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    objc_msgSend(a1, sel_extent);
    Width = CGRectGetWidth(v42);
    if ((~*(_QWORD *)&Width & 0x7FF0000000000000) != 0)
    {
      if (Width <= -9.22337204e18)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (Width >= 9.22337204e18)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v37 = (uint64_t)Width;
      sub_23361F1D0();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      objc_msgSend(a1, sel_extent);
      Width = CGRectGetHeight(v43);
      if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (Width <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (Width < 9.22337204e18)
      {
LABEL_37:
        v37 = (uint64_t)Width;
        sub_23361F1D0();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        result = sub_23361EF24();
        __break(1u);
        return result;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
  if (qword_256041CD0 != -1)
    swift_once();
  v14 = sub_23361DB20();
  __swift_project_value_buffer(v14, (uint64_t)qword_2560CD318);
  v15 = sub_23361DB08();
  v16 = sub_23361E8C4();
  if ((sub_23361EB88() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v15, v16, v18, "ColorExtraction-CoreImage", "ColorFromPixel", v17, 2u);
    MEMORY[0x234934590](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {

  }
  DeviceRGB = (CGColorSpaceRef)objc_msgSend(a1, sel_colorSpace);
  if (!DeviceRGB)
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v20 = sub_23361E42C();
  *(_DWORD *)(v20 + 32) = 0;
  *(_QWORD *)(v20 + 16) = 4;
  v21 = *MEMORY[0x24BDBF8B0];
  v22 = DeviceRGB;
  objc_msgSend(a2, sel_render_toBitmap_rowBytes_bounds_format_colorSpace_, a1, v20 + 32, 4, v21, v22, a4, a5, 1.0, 1.0);

  v23 = *(_QWORD *)(v20 + 16);
  if (v23)
  {
    v38 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_233273BB8(0, v23, 0);
    v24 = 0;
    v25 = v38;
    v26 = *(_QWORD *)(v38 + 16);
    do
    {
      v27 = *(unsigned __int8 *)(v20 + v24 + 32);
      v38 = v25;
      v28 = *(_QWORD *)(v25 + 24);
      if (v26 >= v28 >> 1)
      {
        sub_233273BB8(v28 > 1, v26 + 1, 1);
        v25 = v38;
      }
      ++v24;
      *(_QWORD *)(v25 + 16) = v26 + 1;
      *(double *)(v25 + 8 * v26++ + 32) = (double)v27 / 255.0;
    }
    while (v23 != v24);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
  }
  v29 = CGColorCreate(v22, (const CGFloat *)(v25 + 32));
  swift_bridgeObjectRelease();
  if (v29)
  {

  }
  else
  {
    if (qword_256041C80 != -1)
      swift_once();
    v30 = sub_23361DB80();
    __swift_project_value_buffer(v30, (uint64_t)qword_256049550);
    v31 = sub_23361DB68();
    v32 = sub_23361E768();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_233151000, v31, v32, "Failed to construct color from extracted pixel bitmap", v33, 2u);
      MEMORY[0x234934590](v33, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return (uint64_t)v29;
}

uint64_t sub_23323A4E0(void *a1, void *a2, void *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  CGColorSpaceRef DeviceRGB;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_signpost_type_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint8_t *v39;
  os_signpost_id_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  CGColorSpace *v50;
  NSObject *v51;
  uint64_t v52;
  os_signpost_id_t v53;
  uint64_t result;
  double v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  unint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  NSObject *v71;
  os_signpost_type_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  id v76;
  void (**v77)(char *, id, uint64_t);
  uint8_t *v78;
  os_signpost_id_t v79;
  char **v80;
  NSObject *v81;
  os_signpost_type_t v82;
  void (**v83)(char *, id, uint64_t);
  uint8_t *v84;
  os_signpost_id_t v85;
  void *v86;
  id v87;
  NSObject *v88;
  os_signpost_type_t v89;
  void (**v90)(char *, id, uint64_t);
  uint8_t *v91;
  os_signpost_id_t v92;
  void (*v93)(char *, id, uint64_t);
  CGColorSpaceRef v94;
  NSObject *v95;
  char *v96;
  int v97;
  char v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint8_t *v104;
  os_signpost_id_t v105;
  void (*v106)(char *, id, uint64_t);
  void (*v107)(char *, id, uint64_t);
  void (**v108)(char *, uint64_t);
  CGColorSpaceRef v109;
  id v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void *v116;
  id v117;
  char *v118;
  uint64_t v119;
  void (**v120)(char *, id, uint64_t);
  uint64_t v121;

  v117 = a3;
  v116 = a2;
  v4 = 0xEA0000000000736ELL;
  v114 = sub_23361DB2C();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v115 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_23361DAFC();
  v120 = *(void (***)(char *, id, uint64_t))(v119 - 8);
  v6 = MEMORY[0x24BDAC7A8](v119);
  v8 = (void (**)(char *, uint64_t))((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v118 = (char *)&v107 - v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23362FFF0;
  v11 = (void *)objc_opt_self();
  *(_QWORD *)(v10 + 32) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 0.0, 0.0, 0.0);
  *(_QWORD *)(v10 + 40) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 1.0, 0.0, 0.0);
  *(_QWORD *)(v10 + 48) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 0.0, 1.0, 0.0);
  *(_QWORD *)(v10 + 56) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 0.0, 0.0, 1.0);
  *(_QWORD *)(v10 + 64) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 1.0, 1.0, 0.0);
  *(_QWORD *)(v10 + 72) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 1.0, 0.0, 1.0);
  *(_QWORD *)(v10 + 80) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 0.0, 1.0, 1.0);
  *(_QWORD *)(v10 + 88) = objc_msgSend(v11, sel_colorWithRed_green_blue_, 1.0, 1.0, 1.0);
  v121 = v10;
  sub_23361E408();
  v12 = v121;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23362AF00;
  *(_QWORD *)(inited + 32) = sub_23361E150();
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 72) = sub_233168668(0, &qword_256046428);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 80) = sub_23361E150();
  *(_QWORD *)(inited + 88) = v15;
  v16 = a1;
  objc_msgSend(v16, sel_extent);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithCGRect_, v17, v18, v19, v20);
  v22 = sub_233168668(0, &qword_256046430);
  *(_QWORD *)(inited + 96) = v21;
  *(_QWORD *)(inited + 120) = v22;
  *(_QWORD *)(inited + 128) = 0x756F437475706E69;
  *(_QWORD *)(inited + 136) = 0xEA0000000000746ELL;
  v23 = (unint64_t)v12 >> 62;
  if ((unint64_t)v12 >> 62)
  {
LABEL_77:
    swift_bridgeObjectRetain();
    v24 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v25 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 144) = v24;
  *(_QWORD *)(inited + 168) = v25;
  *(_QWORD *)(inited + 176) = 0x61654D7475706E69;
  *(_QWORD *)(inited + 184) = v4;
  *(_QWORD *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_256046438);
  *(_QWORD *)(inited + 192) = v12;
  swift_bridgeObjectRetain();
  sub_23315F6D0(inited);
  v26 = (void *)sub_23361E12C();
  v27 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_withInputParameters_, v26, v27);

  if (!v28)
  {
    swift_bridgeObjectRelease();
    if (qword_256041C80 != -1)
      swift_once();
    v45 = sub_23361DB80();
    __swift_project_value_buffer(v45, (uint64_t)qword_256049550);
    v46 = sub_23361DB68();
    v47 = sub_23361E768();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_233151000, v46, v47, "Could not construct CIKMeans filter", v48, 2u);
      MEMORY[0x234934590](v48, -1, -1);
    }

    return 0;
  }
  DeviceRGB = (CGColorSpaceRef)objc_msgSend(v16, sel_colorSpace);
  if (!DeviceRGB)
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v30 = objc_msgSend(v28, sel_outputImage);
  if (!v30
    || (v31 = v30,
        v32 = objc_msgSend(v30, sel_imageByColorMatchingWorkingSpaceToColorSpace_, DeviceRGB),
        v31,
        (v112 = v32) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_256041C80 != -1)
      goto LABEL_81;
    goto LABEL_13;
  }
  v109 = DeviceRGB;
  v110 = v28;
  if (qword_256041CD0 != -1)
    swift_once();
  v33 = sub_23361DB20();
  v111 = __swift_project_value_buffer(v33, (uint64_t)qword_2560CD318);
  v34 = sub_23361DB08();
  v35 = sub_23361E8C4();
  v36 = sub_23361EB88();
  v108 = v8;
  if ((v36 & 1) != 0)
  {
    v8 = (void (**)(char *, uint64_t))v120;
    v37 = v118;
    v4 = (unint64_t)v117;
    v38 = v119;
    v120[2](v118, v117, v119);
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    v40 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v34, v35, v40, "ColorExtraction-CoreImage", "RenderingKMeans", v39, 2u);
    MEMORY[0x234934590](v39, -1, -1);

    v8[1](v37, v38);
  }
  else
  {

    v4 = (unint64_t)v117;
  }
  sub_2332399BC(v112, v116, v4);
  DeviceRGB = v50;
  v51 = sub_23361DB08();
  v28 = (id)sub_23361E8C4();
  v16 = (uint64_t *)v51;
  if ((sub_23361EB88() & 1) != 0)
  {
    v8 = (void (**)(char *, uint64_t))v120;
    v16 = (uint64_t *)v118;
    v52 = v119;
    v120[2](v118, (id)v4, v119);
    v4 = swift_slowAlloc();
    *(_WORD *)v4 = 0;
    v53 = sub_23361DAE4();
    _os_signpost_emit_with_name_impl(&dword_233151000, v51, (os_signpost_type_t)v28, v53, "ColorExtraction-CoreImage", "WeightExtraction", (uint8_t *)v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);

    v8[1]((char *)v16, v52);
    if (v23)
      goto LABEL_25;
  }
  else
  {

    if (v23)
    {
LABEL_25:
      if (v12 < 0)
        v16 = (uint64_t *)v12;
      else
        v16 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      inited = sub_23361EF30();
      result = swift_bridgeObjectRelease_n();
      if (inited < 0)
      {
        __break(1u);
        return result;
      }
      if (inited)
        goto LABEL_30;
LABEL_54:
      swift_bridgeObjectRelease();
      v12 = 0;
      v57 = 0.0;
LABEL_55:
      v71 = sub_23361DB08();
      v72 = sub_23361E8C4();
      v73 = sub_23361EB88();
      v74 = v119;
      v75 = v118;
      v76 = v117;
      if ((v73 & 1) != 0)
      {
        v77 = v120;
        v120[2](v118, v117, v119);
        v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v78 = 0;
        v79 = sub_23361DAE4();
        _os_signpost_emit_with_name_impl(&dword_233151000, v71, v72, v79, "ColorExtraction-CoreImage", "FinalColor", v78, 2u);
        MEMORY[0x234934590](v78, -1, -1);

        ((void (*)(char *, uint64_t))v77[1])(v75, v74);
        v80 = &selRef_merchantAddress;
        if (v12)
        {
LABEL_57:
          v81 = sub_23361DB08();
          v82 = sub_23361E8C4();
          if ((sub_23361EB88() & 1) != 0)
          {
            v83 = v120;
            v120[2](v75, v76, v74);
            v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v84 = 0;
            v85 = sub_23361DAE4();
            _os_signpost_emit_with_name_impl(&dword_233151000, v81, v82, v85, "ColorExtraction-CoreImage", "QuickColor", v84, 2u);
            MEMORY[0x234934590](v84, -1, -1);

            ((void (*)(char *, uint64_t))v83[1])(v75, v74);
          }
          else
          {

          }
          v94 = v109;
          v49 = (uint64_t)CGColorCreate(v109, (const CGFloat *)(v12 + 32));
          swift_bridgeObjectRelease();

LABEL_72:
          return v49;
        }
      }
      else
      {

        v80 = &selRef_merchantAddress;
        if (v12)
          goto LABEL_57;
      }
      v86 = v112;
      objc_msgSend(v112, v80[176]);
      v87 = objc_msgSend(v86, sel_imageBySettingAlphaOneInExtent_);
      v88 = sub_23361DB08();
      v89 = sub_23361E8B8();
      if ((sub_23361EB88() & 1) != 0)
      {
        v90 = v120;
        v107 = v120[2];
        v107(v75, v76, v74);
        v91 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v91 = 0;
        v92 = sub_23361DAE4();
        _os_signpost_emit_with_name_impl(&dword_233151000, v88, v89, v92, "ColorExtraction-CoreImage", "WeightedColor", v91, 2u);
        MEMORY[0x234934590](v91, -1, -1);

        ((void (*)(char *, uint64_t))v90[1])(v75, v74);
        v93 = v107;
      }
      else
      {

        v93 = v120[2];
      }
      v107 = v93;
      v93(v75, v76, v74);
      sub_23361DB50();
      swift_allocObject();
      sub_23361DB44();
      v49 = sub_233239F0C(v87, v116, (uint64_t)v76, v57, 0.0);
      v95 = sub_23361DB08();
      v96 = (char *)v108;
      sub_23361DB38();
      v97 = sub_23361E8AC();
      v98 = sub_23361EB88();
      v99 = v115;
      if ((v98 & 1) != 0)
      {
        LODWORD(v116) = v97;
        v117 = v87;
        v100 = v96;
        swift_retain();
        sub_23361DB5C();
        swift_release();
        v101 = v113;
        v102 = v114;
        if ((*(unsigned int (**)(char *, uint64_t))(v113 + 88))(v99, v114) == *MEMORY[0x24BEE7810])
        {
          v103 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v101 + 8))(v99, v102);
          v103 = "";
        }
        v107(v75, v100, v74);
        v104 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v104 = 0;
        v105 = sub_23361DAE4();
        _os_signpost_emit_with_name_impl(&dword_233151000, v95, (os_signpost_type_t)v116, v105, "ColorExtraction-CoreImage", v103, v104, 2u);
        MEMORY[0x234934590](v104, -1, -1);

        v106 = v120[1];
        ((void (*)(char *, uint64_t))v106)(v100, v74);
        ((void (*)(char *, uint64_t))v106)(v75, v74);

      }
      else
      {

        ((void (*)(char *, uint64_t))v120[1])(v96, v74);
      }
      swift_release();

      goto LABEL_72;
    }
  }
  inited = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!inited)
    goto LABEL_54;
LABEL_30:
  v23 = 0;
  v12 = 0;
  v56 = 0;
  v57 = 0.0;
  v58 = 0.0;
  while (1)
  {
    if (inited == v56)
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v56 == 0x2000000000000000)
      goto LABEL_75;
    if ((int64_t)(v23 + 3) >= *((_QWORD *)DeviceRGB + 2))
      goto LABEL_76;
    LOBYTE(v55) = *((_BYTE *)DeviceRGB + v23 + 35);
    v55 = (double)*(unint64_t *)&v55;
    v59 = v55 / 255.0;
    if (v58 < v55 / 255.0)
      break;
LABEL_31:
    ++v56;
    v23 += 4;
    if (inited == v56)
      goto LABEL_51;
  }
  if (v59 != 1.0)
  {
LABEL_49:
    v57 = (double)v56;
    if (v59 >= 0.5)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    v58 = v59;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  v60 = *((_QWORD *)DeviceRGB + 2);
  if (v23 < v60)
  {
    if (v23 + 1 >= v60)
      goto LABEL_79;
    if (v23 + 2 >= v60)
      goto LABEL_80;
    v61 = *((unsigned __int8 *)DeviceRGB + v23 + 32);
    v62 = *((unsigned __int8 *)DeviceRGB + v23 + 33);
    v8 = (void (**)(char *, uint64_t))*((unsigned __int8 *)DeviceRGB + v23 + 34);
    v121 = MEMORY[0x24BEE4AF8];
    v16 = &v121;
    sub_233273BB8(0, 4, 0);
    v63 = v121;
    v65 = *(_QWORD *)(v121 + 16);
    v64 = *(_QWORD *)(v121 + 24);
    v66 = v64 >> 1;
    v67 = v65 + 1;
    if (v64 >> 1 <= v65)
    {
      sub_233273BB8(v64 > 1, v65 + 1, 1);
      v63 = v121;
      v64 = *(_QWORD *)(v121 + 24);
      v66 = v64 >> 1;
    }
    *(_QWORD *)(v63 + 16) = v67;
    *(double *)(v63 + 8 * v65 + 32) = (double)v61 / 255.0;
    v68 = v65 + 2;
    if (v66 < (uint64_t)(v65 + 2))
    {
      sub_233273BB8(v64 > 1, v65 + 2, 1);
      v63 = v121;
    }
    *(_QWORD *)(v63 + 16) = v68;
    *(double *)(v63 + 8 * v67 + 32) = (double)v62 / 255.0;
    v69 = *(_QWORD *)(v63 + 24);
    v4 = v65 + 3;
    if ((uint64_t)(v65 + 3) > (uint64_t)(v69 >> 1))
      sub_233273BB8(v69 > 1, v65 + 3, 1);
    v55 = 255.0;
    v12 = v121;
    *(_QWORD *)(v121 + 16) = v4;
    *(double *)(v12 + 8 * v68 + 32) = (double)v8 / 255.0;
    v70 = *(_QWORD *)(v12 + 24);
    v28 = (id)(v65 + 4);
    if ((uint64_t)(v65 + 4) > (uint64_t)(v70 >> 1))
    {
      sub_233273BB8(v70 > 1, v65 + 4, 1);
      v12 = v121;
    }
    *(_QWORD *)(v12 + 16) = v28;
    *(_QWORD *)(v12 + 8 * v4 + 32) = 0x3FF0000000000000;
    goto LABEL_49;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  swift_once();
LABEL_13:
  v41 = sub_23361DB80();
  __swift_project_value_buffer(v41, (uint64_t)qword_256049550);
  v42 = sub_23361DB68();
  v43 = sub_23361E768();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_233151000, v42, v43, "CIKMeans filter failed to produce output image", v44, 2u);
    MEMORY[0x234934590](v44, -1, -1);
  }

  return 0;
}

uint64_t sub_23323B4FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v51 = sub_23361C8A8();
  v3 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v32 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v32 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = a1;
  sub_23361E918();
  sub_233168478((uint64_t)&v39, (uint64_t)v46, &qword_256046418);
  v14 = 0;
  if (*((_QWORD *)&v46[0] + 1) == 1)
    goto LABEL_7;
  v48 = v46[0];
  v49 = v46[1];
  v50 = v47;
  CGColorSpaceCreateDeviceRGB();
  sub_23361E924();
  sub_233168478((uint64_t)&v40, (uint64_t)v41, &qword_256046418);
  if (*((_QWORD *)&v41[0] + 1) == 1)
  {
    v14 = 0;
LABEL_7:
    sub_23323CE60();
    swift_allocError();
    *v31 = v14;
    swift_willThrow();
    return v14;
  }
  v43 = v41[0];
  v44 = v41[1];
  v45 = v42;
  v15 = v13;
  sub_23361C89C();
  result = sub_23361E78C();
  v14 = v1;
  if (v1)
    goto LABEL_7;
  v20 = v17;
  v21 = v18;
  v34 = result;
  if (((v18 | v17) & 0x8000000000000000) == 0)
  {
    v22 = v19;
    v23 = sub_23361E7B0();
    v33 = v22;
    v35 = v23;
    v36 = v24;
    v37 = v25;
    v38 = v26;
    type metadata accessor for vImageConverter(0);
    sub_23361C89C();
    v27 = (void *)sub_23361E8D0();
    v28 = *(void (**)(char *, uint64_t))(v3 + 8);
    v29 = v12;
    v30 = v51;
    v28(v29, v51);
    sub_23361C89C();
    sub_23361E8DC();
    v28(v9, v30);
    v32[1] = v38;
    v32[2] = v37;
    sub_23361C89C();
    v14 = sub_23361E798();
    v28(v6, v51);

    MEMORY[0x234932B08](v35, v36, v37, v38);
    MEMORY[0x234932B08](v34, v20, v21, v33);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_23323B870@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double *v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int8x16_t *v71;
  __n128 *v72;
  char isUniquelyReferenced_nonNull_native;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  __n128 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64x2_t v88;
  int64x2_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  int64_t v97;
  __n128 v98;
  __int128 v99;
  __n128 v100;
  _OWORD v101[2];
  __int128 v102;
  __int128 v103;
  _QWORD v104[8];
  int8x16_t v105[3];
  _QWORD v106[5];
  char v107;

  v5 = 0;
  v6 = 1;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (a2 < 2 || a3 < 2)
  {
LABEL_72:
    *(_QWORD *)a4 = v5;
    *(_QWORD *)(a4 + 8) = v7;
    *(_QWORD *)(a4 + 16) = v8;
    *(_QWORD *)(a4 + 24) = v9;
    *(_BYTE *)(a4 + 32) = v6;
    return result;
  }
  if (a3 >= a2)
    v10 = a2;
  else
    v10 = a3;
  v11 = (double)v10 * 0.05;
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
    goto LABEL_80;
  if (v11 <= -9.22337204e18)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v12 = (uint64_t)v11;
  v104[0] = (uint64_t)v11;
  v104[1] = (uint64_t)v11;
  v13 = a2 - (uint64_t)v11;
  if (__OFSUB__(a2, (uint64_t)v11))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v14 = __OFSUB__(v13, 1);
  v15 = v13 - 1;
  if (v14)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v104[2] = v15;
  v104[3] = (uint64_t)v11;
  v104[4] = (uint64_t)v11;
  v14 = __OFSUB__(a3, v12);
  v16 = a3 - v12;
  if (!v14)
  {
    v14 = __OFSUB__(v16, 1);
    v17 = v16 - 1;
    if (v14)
      goto LABEL_87;
    v92 = result;
    v90 = a4;
    v94 = 4 * a2;
    v104[5] = v17;
    v104[6] = v15;
    v104[7] = v17;
    v106[0] = MEMORY[0x24BEE4AF8];
    sub_233273BF0(0, 4, 0);
    v18 = 0;
    v19 = v106[0];
    while (2)
    {
      v20 = v104[2 * v18 + 1];
      v21 = v20 * v94;
      if ((unsigned __int128)(v20 * (__int128)v94) >> 64 == (v20 * v94) >> 63)
      {
        v22 = v104[2 * v18];
        if ((unint64_t)(v22 - 0x2000000000000000) >> 62 == 3)
        {
          v23 = v21 + 4 * v22;
          if (!__OFADD__(v21, 4 * v22))
          {
            v105[0].i64[0] = MEMORY[0x24BEE4AF8];
            sub_233273BD4(0, 4, 0);
            v24 = v92;
            v25 = *(unsigned __int8 *)(v92 + v23);
            v26 = v105[0].i64[0];
            v28 = *(_QWORD *)(v105[0].i64[0] + 16);
            v27 = *(_QWORD *)(v105[0].i64[0] + 24);
            v29 = v27 >> 1;
            v30 = v28 + 1;
            if (v27 >> 1 <= v28)
            {
              sub_233273BD4(v27 > 1, v28 + 1, 1);
              v24 = v92;
              v26 = v105[0].i64[0];
              v27 = *(_QWORD *)(v105[0].i64[0] + 24);
              v29 = v27 >> 1;
            }
            *(_QWORD *)(v26 + 16) = v30;
            *(double *)(v26 + 8 * v28 + 32) = (double)v25 / 255.0;
            v31 = *(unsigned __int8 *)(v24 + (v23 | 1));
            v32 = v28 + 2;
            if (v29 < (uint64_t)(v28 + 2))
            {
              sub_233273BD4(v27 > 1, v28 + 2, 1);
              v24 = v92;
              v26 = v105[0].i64[0];
            }
            *(_QWORD *)(v26 + 16) = v32;
            *(double *)(v26 + 8 * v30 + 32) = (double)v31 / 255.0;
            v33 = *(unsigned __int8 *)(v24 + (v23 | 2));
            v34 = *(_QWORD *)(v26 + 24);
            v35 = v28 + 3;
            if ((uint64_t)(v28 + 3) > (uint64_t)(v34 >> 1))
            {
              sub_233273BD4(v34 > 1, v28 + 3, 1);
              v24 = v92;
            }
            v36 = v105[0].i64[0];
            *(_QWORD *)(v105[0].i64[0] + 16) = v35;
            *(double *)(v36 + 8 * v32 + 32) = (double)v33 / 255.0;
            v37 = *(unsigned __int8 *)(v24 + (v23 | 3));
            v38 = *(_QWORD *)(v36 + 24);
            v39 = v28 + 4;
            if ((uint64_t)(v28 + 4) > (uint64_t)(v38 >> 1))
            {
              sub_233273BD4(v38 > 1, v28 + 4, 1);
              v36 = v105[0].i64[0];
            }
            *(_QWORD *)(v36 + 16) = v39;
            *(double *)(v36 + 8 * v35 + 32) = (double)v37 / 255.0;
            if (v39 >= 1)
            {
              v40 = 0;
              ++v18;
              v41 = 0uLL;
              v42 = 0uLL;
              do
              {
                if (v28)
                {
                  __break(1u);
                  goto LABEL_66;
                }
                v43 = *(_QWORD *)(v36 + 8 * v40 + 32);
                v102 = v41;
                v103 = v42;
                *((_QWORD *)&v102 + (v40 & 3)) = v43;
                v41 = v102;
                v42 = v103;
                ++v40;
              }
              while (v39 != v40);
              v96 = v103;
              v99 = v102;
              swift_release();
              v106[0] = v19;
              v45 = *(_QWORD *)(v19 + 16);
              v44 = *(_QWORD *)(v19 + 24);
              v46 = v45 + 1;
              if (v45 >= v44 >> 1)
              {
                sub_233273BF0(v44 > 1, v46, 1);
                v46 = v45 + 1;
                v19 = v106[0];
              }
              *(_QWORD *)(v19 + 16) = v46;
              v47 = v19 + 32 * v45;
              *(_OWORD *)(v47 + 32) = v99;
              *(_OWORD *)(v47 + 48) = v96;
              if (v18 != 4)
                continue;
              v48 = 0;
              v95 = v19;
              while (1)
              {
                v106[0] = MEMORY[0x24BEE4AF8];
                v97 = v46;
                sub_233273BD4(0, v46, 0);
                v49 = 0;
                v50 = v106[0];
                v51 = *(_QWORD *)(v106[0] + 16);
                v52 = v51;
                do
                {
                  v53 = v52;
                  v54 = (__int128 *)(v19 + 32 + 32 * v49);
                  v56 = *v54;
                  v55 = v54[1];
                  v106[0] = v50;
                  v57 = *(_QWORD *)(v50 + 24);
                  if (v51 + v49 >= v57 >> 1)
                  {
                    v91 = v56;
                    v93 = v55;
                    sub_233273BD4(v57 > 1, v51 + v49 + 1, 1);
                    v56 = v91;
                    v55 = v93;
                    v50 = v106[0];
                  }
                  v58 = v49 + 1;
                  v101[0] = v56;
                  v101[1] = v55;
                  v59 = *((_QWORD *)v101 + (v48 & 3));
                  *(_QWORD *)(v50 + 16) = v51 + v49 + 1;
                  *(_QWORD *)(v50 + 8 * v51 + 32 + 8 * v49) = v59;
                  v52 = v53 + 1;
                  v49 = v58;
                }
                while (v45 + 1 != v58);
                v60 = *(double *)(v50 + 32);
                if (v51 + v58 == 1)
                {
                  v64 = *(double *)(v50 + 32);
                }
                else
                {
                  v61 = v50 + 40;
                  v62 = (double *)(v50 + 40);
                  v63 = v53;
                  v64 = *(double *)(v50 + 32);
                  do
                  {
                    v65 = *v62++;
                    v66 = v65;
                    if (v64 < v65)
                      v64 = v66;
                    --v63;
                  }
                  while (v63);
                  v67 = 0;
                  do
                  {
                    if (*(double *)(v61 + 8 * v67) < v60)
                      v60 = *(double *)(v61 + 8 * v67);
                    ++v67;
                  }
                  while (v53 != v67);
                }
                swift_bridgeObjectRelease();
                if (v64 - v60 > 0.0196078431)
                  break;
                ++v48;
                v46 = v97;
                if (v48 == 4)
                {
                  v68 = v19;
                  v69 = *(_QWORD *)(v19 + 16);
                  if (v69)
                  {
                    swift_retain();
                    v70 = 0;
                    v71 = (int8x16_t *)MEMORY[0x24BEE4B00];
                    while (1)
                    {
                      v72 = (__n128 *)(v68 + 32 * v70);
                      v98 = v72[3];
                      v100 = v72[2];
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      v106[0] = v71;
                      v75 = sub_2331E4214(v100, v98);
                      v76 = v71[1].i64[0];
                      v77 = (v74 & 1) == 0;
                      v78 = v76 + v77;
                      if (__OFADD__(v76, v77))
                        goto LABEL_77;
                      v79 = v74;
                      if (v71[1].i64[1] >= v78)
                      {
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                        {
                          sub_23327E75C();
                          v71 = (int8x16_t *)v106[0];
                        }
                      }
                      else
                      {
                        sub_23327A8F4(v78, isUniquelyReferenced_nonNull_native);
                        v71 = (int8x16_t *)v106[0];
                        v80 = sub_2331E4214(v100, v98);
                        if ((v79 & 1) != (v81 & 1))
                          goto LABEL_88;
                        v75 = v80;
                      }
                      v68 = v95;
                      swift_bridgeObjectRelease();
                      if ((v79 & 1) == 0)
                      {
                        v71[4].i64[v75 >> 6] |= 1 << v75;
                        v82 = (__n128 *)(v71[3].i64[0] + 32 * v75);
                        *v82 = v100;
                        v82[1] = v98;
                        *(_QWORD *)(v71[3].i64[1] + 8 * v75) = 0;
                        v83 = v71[1].i64[0];
                        v14 = __OFADD__(v83, 1);
                        v84 = v83 + 1;
                        if (v14)
                          goto LABEL_79;
                        v71[1].i64[0] = v84;
                      }
                      v85 = v71[3].i64[1];
                      v86 = *(_QWORD *)(v85 + 8 * v75);
                      v14 = __OFADD__(v86, 1);
                      v87 = v86 + 1;
                      if (v14)
                        goto LABEL_78;
                      ++v70;
                      *(_QWORD *)(v85 + 8 * v75) = v87;
                      if (v69 == v70)
                      {
                        swift_release();
                        goto LABEL_68;
                      }
                    }
                  }
                  v71 = (int8x16_t *)MEMORY[0x24BEE4B00];
LABEL_68:
                  swift_release();
                  sub_23323749C(v71, v105, v88, v89);
                  swift_bridgeObjectRelease();
                  result = sub_233168478((uint64_t)v105, (uint64_t)v106, &qword_256046410);
                  if ((v107 & 1) == 0)
                  {
                    v6 = 0;
                    v5 = v106[0];
                    v7 = v106[1];
                    v8 = v106[2];
                    v9 = v106[3];
                    goto LABEL_71;
                  }
                  goto LABEL_69;
                }
              }
LABEL_66:
              result = swift_release();
LABEL_69:
              v5 = 0;
              v7 = 0;
              v8 = 0;
              v9 = 0;
              v6 = 1;
LABEL_71:
              a4 = v90;
              goto LABEL_72;
            }
            goto LABEL_76;
          }
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
          goto LABEL_81;
        }
      }
      else
      {
        __break(1u);
      }
      break;
    }
    __break(1u);
    goto LABEL_75;
  }
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560463F0);
  result = sub_23361F2B4();
  __break(1u);
  return result;
}

uint64_t sub_23323BFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int64_t v56;
  unint64_t v57;
  unsigned int v58;
  unint64_t v59;
  unsigned int v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  float64x2_t *v86;
  float64x2_t v87;
  float64x2_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  float64x2_t *v92;
  float64x2_t v93;
  float64x2_t v94;
  int64x2_t v95;
  float64x2_t *v96;
  float64x2_t v97;
  float64x2_t v98;
  int64x2_t v99;
  float64x2_t v100;
  unint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  void *v109;
  id v110;
  int64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 *v125;
  __int128 v126;
  __int128 v127;
  BOOL v128;
  uint64_t v129;
  double v130;
  double v131;
  uint64_t v132;
  id v133;
  uint64_t result;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v145;
  int64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _QWORD *v154;
  _QWORD *v155;
  __int128 v156;
  _OWORD v157[2];
  _OWORD v158[2];
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  _OWORD v164[2];
  uint64_t v165;
  id v166;

  v4 = MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(a4 + 16))
    return v4;
  v5 = a2;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 == 3)
  {
    v6 = a4;
    if (a2 <= 19)
      v8 = 1;
    else
      v8 = a2 / 0xAuLL;
    if (a3 / 10 <= 1)
      v9 = 1;
    else
      v9 = a3 / 10;
    *(_QWORD *)&v164[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    if (a3 < 1)
    {
      v74 = v4;
      goto LABEL_76;
    }
    v135 = v6;
    v10 = 0;
    v11 = 4 * v5;
    v140 = v8;
    v142 = v5;
    v137 = v9;
    v136 = 4 * v5;
    while (2)
    {
      v13 = v10;
      v14 = v10 * v11;
      v15 = (unsigned __int128)(v10 * (__int128)v11) >> 64;
      v16 = v13 + v9;
      v17 = __OFADD__(v13, v9);
      v145 = v14;
      if (v15 == v14 >> 63)
      {
        v18 = 0;
        v19 = 0;
        while (v19 < v5)
        {
          v20 = __OFADD__(v19, v8);
          v19 += v8;
          if (v20)
            v19 = 0x7FFFFFFFFFFFFFFFLL;
          v20 = __OFADD__(v18++, 1);
          if (v20)
          {
            __break(1u);
LABEL_128:
            swift_bridgeObjectRelease();
            v6 = v18;
LABEL_129:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain_n();
            v132 = sub_233238A24(v6);
            swift_bridgeObjectRelease();
            *(_QWORD *)&v164[0] = v132;
            sub_233237788((uint64_t *)v164, &v166);
            swift_bridgeObjectRelease();
            v4 = sub_233234DB0(*(uint64_t *)&v164[0]);
            swift_release();
            v133 = v166;
            swift_bridgeObjectRelease();

            return v4;
          }
        }
        v138 = v17;
        v139 = v16;
        v166 = (id)v4;
        sub_233273BF0(0, v18, 0);
        v21 = v166;
        if (v18)
        {
          v22 = 0;
          v23 = 0;
          while (v23 < v5)
          {
            if (__OFADD__(v23, v8))
              v24 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v24 = v23 + v8;
            if ((unint64_t)(v23 - 0x2000000000000000) >> 62 != 3)
              goto LABEL_132;
            v25 = v145 + 4 * v23;
            if (__OFADD__(v145, 4 * v23))
              goto LABEL_133;
            v154 = v21;
            v165 = v4;
            sub_233273BD4(0, 4, 0);
            v26 = a1;
            v27 = *(unsigned __int8 *)(a1 + v25);
            v28 = v165;
            v30 = *(_QWORD *)(v165 + 16);
            v29 = *(_QWORD *)(v165 + 24);
            v31 = v29 >> 1;
            v32 = v30 + 1;
            v150 = v22;
            if (v29 >> 1 <= v30)
            {
              sub_233273BD4(v29 > 1, v30 + 1, 1);
              v26 = a1;
              v28 = v165;
              v29 = *(_QWORD *)(v165 + 24);
              v31 = v29 >> 1;
            }
            *(_QWORD *)(v28 + 16) = v32;
            *(double *)(v28 + 8 * v30 + 32) = (double)v27 / 255.0;
            v33 = *(unsigned __int8 *)(v26 + (v25 | 1));
            v34 = v30 + 2;
            if (v31 < (uint64_t)(v30 + 2))
            {
              sub_233273BD4(v29 > 1, v30 + 2, 1);
              v26 = a1;
              v28 = v165;
            }
            *(_QWORD *)(v28 + 16) = v34;
            *(double *)(v28 + 8 * v32 + 32) = (double)v33 / 255.0;
            v35 = *(unsigned __int8 *)(v26 + (v25 | 2));
            v36 = *(_QWORD *)(v28 + 24);
            v37 = v30 + 3;
            if ((uint64_t)(v30 + 3) > (uint64_t)(v36 >> 1))
            {
              sub_233273BD4(v36 > 1, v30 + 3, 1);
              v26 = a1;
            }
            v38 = v165;
            *(_QWORD *)(v165 + 16) = v37;
            *(double *)(v38 + 8 * v34 + 32) = (double)v35 / 255.0;
            v39 = *(unsigned __int8 *)(v26 + (v25 | 3));
            v40 = *(_QWORD *)(v38 + 24);
            v4 = v30 + 4;
            if ((uint64_t)(v30 + 4) > (uint64_t)(v40 >> 1))
            {
              sub_233273BD4(v40 > 1, v30 + 4, 1);
              v38 = v165;
            }
            *(_QWORD *)(v38 + 16) = v4;
            *(double *)(v38 + 8 * v37 + 32) = (double)v39 / 255.0;
            if (v4 < 1)
              goto LABEL_134;
            v41 = 0;
            v22 = v150 + 1;
            v23 = v24;
            v42 = 0uLL;
            v43 = 0uLL;
            do
            {
              if (v30)
              {
                __break(1u);
LABEL_124:
                __break(1u);
                goto LABEL_125;
              }
              v44 = *(_QWORD *)(v38 + 8 * v41 + 32);
              v161 = v42;
              v162 = v43;
              *((_QWORD *)&v161 + (v41 & 3)) = v44;
              v42 = v161;
              v43 = v162;
              ++v41;
            }
            while (v4 != v41);
            v147 = v162;
            v151 = v161;
            swift_release();
            v21 = v154;
            v166 = v154;
            v46 = v154[2];
            v45 = v154[3];
            if (v46 >= v45 >> 1)
            {
              sub_233273BF0(v45 > 1, v46 + 1, 1);
              v21 = v166;
            }
            v21[2] = v46 + 1;
            v47 = (char *)&v21[4 * v46];
            *((_OWORD *)v47 + 2) = v151;
            *((_OWORD *)v47 + 3) = v147;
            v4 = MEMORY[0x24BEE4AF8];
            v8 = v140;
            v5 = v142;
            if (v18 == v22)
              goto LABEL_50;
          }
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
        }
        else
        {
          v23 = 0;
LABEL_50:
          if (v23 >= v5)
          {
LABEL_11:
            sub_233189834((uint64_t)v21);
            v9 = v137;
            v10 = v139;
            v12 = v138;
            if (v139 >= a3)
              v12 = 1;
            v11 = v136;
            if ((v12 & 1) == 0)
              continue;
            while (1)
            {
              v74 = *(_QWORD *)&v164[0];
              v6 = v135;
LABEL_76:
              v166 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14E0]), sel_init);
              v75 = *(_QWORD *)(v74 + 16);
              v143 = v74 + 32;
              v76 = 1;
              v146 = v75;
              v141 = v74;
              while (1)
              {
                v149 = v76;
                v18 = v6;
                if (v75)
                  break;
                v102 = *(_QWORD *)(v4 + 16);
                v79 = v4;
                if (v102)
                {
LABEL_97:
                  v165 = v4;
                  sub_233273B54(0, v102, 0);
                  v104 = 0;
                  v105 = v165;
                  do
                  {
                    v163 = *(_QWORD *)(v79 + 8 * v104 + 32);
                    swift_dynamicCast();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_233273B54(0, *(_QWORD *)(v105 + 16) + 1, 1);
                      v105 = v165;
                    }
                    v107 = *(_QWORD *)(v105 + 16);
                    v106 = *(_QWORD *)(v105 + 24);
                    if (v107 >= v106 >> 1)
                    {
                      sub_233273B54(v106 > 1, v107 + 1, 1);
                      v105 = v165;
                    }
                    ++v104;
                    *(_QWORD *)(v105 + 16) = v107 + 1;
                    sub_2331683D0(v164, (_OWORD *)(v105 + 32 * v107 + 32));
                  }
                  while (v102 != v104);
                }
                v108 = objc_allocWithZone(MEMORY[0x24BDD14E0]);
                v109 = (void *)sub_23361E3D8();
                swift_bridgeObjectRelease();
                v110 = objc_msgSend(v108, sel_initWithArray_, v109);

                v166 = v110;
                v111 = *(_QWORD *)(v18 + 16);
                if (v111)
                {
                  *(_QWORD *)&v164[0] = MEMORY[0x24BEE4AF8];
                  swift_bridgeObjectRetain();
                  sub_233273BF0(0, v111, 0);
                  v112 = 0;
                  v6 = *(_QWORD *)&v164[0];
                  do
                  {
                    swift_bridgeObjectRetain();
                    sub_233239120(v112, v79, v74, v18);
                    v153 = v114;
                    v156 = v113;
                    swift_bridgeObjectRelease();
                    *(_QWORD *)&v164[0] = v6;
                    v116 = *(_QWORD *)(v6 + 16);
                    v115 = *(_QWORD *)(v6 + 24);
                    if (v116 >= v115 >> 1)
                    {
                      sub_233273BF0(v115 > 1, v116 + 1, 1);
                      v6 = *(_QWORD *)&v164[0];
                    }
                    ++v112;
                    *(_QWORD *)(v6 + 16) = v116 + 1;
                    v117 = v6 + 32 * v116;
                    *(_OWORD *)(v117 + 32) = v156;
                    *(_OWORD *)(v117 + 48) = v153;
                  }
                  while (v111 != v112);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v4 = MEMORY[0x24BEE4AF8];
                }
                else
                {
                  swift_bridgeObjectRelease();
                  v4 = MEMORY[0x24BEE4AF8];
                  v6 = MEMORY[0x24BEE4AF8];
                }
                v118 = *(_QWORD *)(v6 + 16);
                if (v118 == *(_QWORD *)(v18 + 16))
                {
                  if (!v118 || v6 == v18)
                    goto LABEL_128;
                  v119 = 0;
                  v120 = v6 + 32;
                  while (1)
                  {
                    v121 = 0;
                    v122 = 32 * v119++;
                    v124 = *(_OWORD *)(v120 + v122);
                    v123 = *(_OWORD *)(v120 + v122 + 16);
                    v125 = (__int128 *)(v18 + 32 + v122);
                    v127 = *v125;
                    v126 = v125[1];
                    v128 = 1;
                    while (1)
                    {
                      while (!v128)
                      {
                        if (v121 == 3)
                          goto LABEL_77;
                        v128 = 0;
                        ++v121;
                      }
                      v158[0] = v124;
                      v158[1] = v123;
                      v129 = 8 * (v121 & 3);
                      v130 = *(double *)((char *)v158 + v129);
                      v157[0] = v127;
                      v157[1] = v126;
                      v131 = *(double *)((char *)v157 + v129);
                      v128 = v130 == v131;
                      if (v121 == 3)
                        break;
                      ++v121;
                    }
                    if (v130 != v131)
                      break;
                    if (v119 == v118)
                      goto LABEL_128;
                  }
                }
LABEL_77:
                swift_bridgeObjectRelease();
                v75 = v146;
                v76 = v149 + 1;
                if (v149 == 5)
                  goto LABEL_129;
              }
              *(_QWORD *)&v164[0] = v4;
              sub_233273C0C(0, v75, 0);
              v77 = *(_QWORD *)(v6 + 16);
              if (!v77)
                goto LABEL_140;
              v78 = 0;
              v79 = *(_QWORD *)&v164[0];
              v80 = v77 - 1;
              v81 = v146;
              v82 = v143;
              while (v77 == 1)
              {
                v83 = 0;
LABEL_92:
                *(_QWORD *)&v164[0] = v79;
                v4 = *(_QWORD *)(v79 + 16);
                v101 = *(_QWORD *)(v79 + 24);
                v102 = v4 + 1;
                if (v4 >= v101 >> 1)
                {
                  v103 = v77;
                  sub_233273C0C(v101 > 1, v4 + 1, 1);
                  v77 = v103;
                  v82 = v143;
                  v81 = v146;
                  v79 = *(_QWORD *)&v164[0];
                }
                ++v78;
                *(_QWORD *)(v79 + 16) = v102;
                *(_QWORD *)(v79 + 8 * v4 + 32) = v83;
                if (v78 == v81)
                {
                  v4 = MEMORY[0x24BEE4AF8];
                  v74 = v141;
                  goto LABEL_97;
                }
              }
              v84 = 0;
              v85 = 0;
              v83 = 0;
              v86 = (float64x2_t *)(v82 + 32 * v78);
              v88 = *v86;
              v87 = v86[1];
              v89 = *(_QWORD *)(v18 + 16);
              if (v89 <= 1)
                v90 = 1;
              else
                v90 = *(_QWORD *)(v18 + 16);
              v91 = v90 - 1;
              while (v91 != v84)
              {
                if (v85 >= v89)
                  goto LABEL_126;
                v92 = (float64x2_t *)(v18 + 64 + 32 * v84);
                v93 = vsubq_f64(v88, *v92);
                v94 = vsubq_f64(v87, v92[1]);
                v95 = (int64x2_t)vaddq_f64(vmulq_f64(v93, v93), vmulq_f64(v94, v94));
                v96 = (float64x2_t *)(v18 + 32 + 32 * v85);
                v97 = vsubq_f64(v88, *v96);
                v98 = vsubq_f64(v87, v96[1]);
                v99 = (int64x2_t)vaddq_f64(vmulq_f64(v97, v97), vmulq_f64(v98, v98));
                v100 = vsqrtq_f64(vaddq_f64((float64x2_t)vzip1q_s64(v95, v99), (float64x2_t)vzip2q_s64(v95, v99)));
                if ((vmovn_s64(vcgtq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v100, 1), v100)).u8[0] & 1) != 0)
                {
                  v83 = v84 + 1;
                  v85 = v84 + 1;
                }
                if (v80 == ++v84)
                  goto LABEL_92;
              }
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
            }
          }
          while (1)
          {
            v20 = __OFADD__(v23, v8);
            v48 = v23 + v8;
            v49 = v20;
            if ((unint64_t)(v23 - 0x2000000000000000) >> 62 != 3)
              break;
            v50 = v145 + 4 * v23;
            if (__OFADD__(v145, 4 * v23))
              goto LABEL_136;
            v155 = v21;
            v165 = v4;
            sub_233273BD4(0, 4, 0);
            v51 = a1;
            v52 = *(unsigned __int8 *)(a1 + v50);
            v53 = v165;
            v55 = *(_QWORD *)(v165 + 16);
            v54 = *(_QWORD *)(v165 + 24);
            v56 = v54 >> 1;
            v57 = v55 + 1;
            if (v54 >> 1 <= v55)
            {
              sub_233273BD4(v54 > 1, v55 + 1, 1);
              v51 = a1;
              v53 = v165;
              v54 = *(_QWORD *)(v165 + 24);
              v56 = v54 >> 1;
            }
            *(_QWORD *)(v53 + 16) = v57;
            *(double *)(v53 + 8 * v55 + 32) = (double)v52 / 255.0;
            v58 = *(unsigned __int8 *)(v51 + (v50 | 1));
            v59 = v55 + 2;
            if (v56 < (uint64_t)(v55 + 2))
            {
              sub_233273BD4(v54 > 1, v55 + 2, 1);
              v51 = a1;
              v53 = v165;
            }
            *(_QWORD *)(v53 + 16) = v59;
            *(double *)(v53 + 8 * v57 + 32) = (double)v58 / 255.0;
            v60 = *(unsigned __int8 *)(v51 + (v50 | 2));
            v61 = *(_QWORD *)(v53 + 24);
            v62 = v55 + 3;
            if ((uint64_t)(v55 + 3) > (uint64_t)(v61 >> 1))
            {
              sub_233273BD4(v61 > 1, v55 + 3, 1);
              v51 = a1;
            }
            v63 = v165;
            *(_QWORD *)(v165 + 16) = v62;
            *(double *)(v63 + 8 * v59 + 32) = (double)v60 / 255.0;
            v64 = *(unsigned __int8 *)(v51 + (v50 | 3));
            v65 = *(_QWORD *)(v63 + 24);
            v4 = v55 + 4;
            if ((uint64_t)(v55 + 4) > (uint64_t)(v65 >> 1))
            {
              sub_233273BD4(v65 > 1, v55 + 4, 1);
              v63 = v165;
            }
            *(_QWORD *)(v63 + 16) = v4;
            *(double *)(v63 + 8 * v62 + 32) = (double)v64 / 255.0;
            if (v4 < 1)
              goto LABEL_137;
            v66 = 0;
            v23 = v48;
            v67 = 0uLL;
            v68 = 0uLL;
            do
            {
              if (v55)
                goto LABEL_124;
              v69 = *(_QWORD *)(v63 + 8 * v66 + 32);
              v159 = v67;
              v160 = v68;
              *((_QWORD *)&v159 + (v66 & 3)) = v69;
              v67 = v159;
              v68 = v160;
              ++v66;
            }
            while (v4 != v66);
            v148 = v160;
            v152 = v159;
            swift_release();
            v21 = v155;
            v166 = v155;
            v71 = v155[2];
            v70 = v155[3];
            if (v71 >= v70 >> 1)
            {
              sub_233273BF0(v70 > 1, v71 + 1, 1);
              v21 = v166;
            }
            v21[2] = v71 + 1;
            v72 = (char *)&v21[4 * v71];
            *((_OWORD *)v72 + 2) = v152;
            *((_OWORD *)v72 + 3) = v148;
            v5 = v142;
            if (v48 >= v142)
              v73 = 1;
            else
              v73 = v49;
            v4 = MEMORY[0x24BEE4AF8];
            v8 = v140;
            if ((v73 & 1) != 0)
              goto LABEL_11;
          }
        }
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
      }
      break;
    }
    __break(1u);
  }
  __break(1u);
LABEL_140:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_23323CB98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560463F8;
  if (!qword_2560463F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560463F0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE4180], v1);
    atomic_store(result, (unint64_t *)&qword_2560463F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorExtractor()
{
  return &type metadata for ColorExtractor;
}

uint64_t initializeBufferWithCopyOfBuffer for ColorExtractor.BackgroundColor(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for ColorExtractor.BackgroundColor(id *a1)
{

}

uint64_t assignWithCopy for ColorExtractor.BackgroundColor(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for ColorExtractor.BackgroundColor(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for ColorExtractor.BackgroundColor()
{
  return &type metadata for ColorExtractor.BackgroundColor;
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorExtractor.ColorExtractionError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for ColorExtractor.ColorExtractionError(id *a1)
{

}

void **assignWithCopy for ColorExtractor.ColorExtractionError(void **a1, id *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  v5 = *a2;
  *a1 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ColorExtractor.ColorExtractionError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ColorExtractor.ColorExtractionError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorExtractor.ColorExtractionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorExtractor.ColorExtractionError()
{
  return &type metadata for ColorExtractor.ColorExtractionError;
}

unint64_t sub_23323CE60()
{
  unint64_t result;

  result = qword_256046420;
  if (!qword_256046420)
  {
    result = MEMORY[0x234934494](&unk_233630088, &type metadata for ColorExtractor.ColorExtractionError);
    atomic_store(result, (unint64_t *)&qword_256046420);
  }
  return result;
}

uint64_t sub_23323CEA4@<X0>(CGFloat *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_233239F0C(*(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t RawBankConnectData.Account.availableBalance.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v0 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v28 - v13);
  v15 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v28, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168580((uint64_t)v20, (uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331684BC((uint64_t)&v17[*(int *)(v15 + 40)], (uint64_t)v8, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)v8, (uint64_t)v14, &qword_2560436D8);
    sub_233168500((uint64_t)v8, type metadata accessor for RawBankConnectData.AccountBalances);
    v24 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24) == 1)
    {
      v23 = (uint64_t)v14;
      goto LABEL_6;
    }
    v25 = *v14;
    v26 = (uint64_t)v14;
LABEL_9:
    sub_233168500(v26, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    return v25;
  }
  sub_233168580((uint64_t)v20, (uint64_t)v2, type metadata accessor for RawBankConnectData.LiabilityAccount);
  sub_2331684BC((uint64_t)&v2[*(int *)(v0 + 40)], (uint64_t)v6, type metadata accessor for RawBankConnectData.AccountBalances);
  sub_233168500((uint64_t)v2, type metadata accessor for RawBankConnectData.LiabilityAccount);
  sub_2331686A0((uint64_t)v6, (uint64_t)v12, &qword_2560436D8);
  sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.AccountBalances);
  v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) != 1)
  {
    v25 = *v12;
    v26 = (uint64_t)v12;
    goto LABEL_9;
  }
  v23 = (uint64_t)v12;
LABEL_6:
  sub_233168608(v23, &qword_2560436D8);
  return 0;
}

uint64_t RawBankConnectData.Account.availableBalanceAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v1 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v36 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v36 - v14;
  v16 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v36, (uint64_t)v21, v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v21, (uint64_t)v3, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331684BC((uint64_t)&v3[*(int *)(v1 + 40)], (uint64_t)v7, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v3, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331686A0((uint64_t)v7, (uint64_t)v13, &qword_2560436D8);
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.AccountBalances);
    v23 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v13, 1, v23) == 1)
    {
      v24 = (uint64_t)v13;
LABEL_6:
      sub_233168608(v24, &qword_2560436D8);
      v26 = sub_23361D634();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v37, 1, 1, v26);
    }
    v28 = &v13[*(int *)(v23 + 20)];
    v29 = sub_23361D634();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v37, v28, v29);
    sub_233168500((uint64_t)v13, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  }
  else
  {
    sub_233168580((uint64_t)v21, (uint64_t)v18, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331684BC((uint64_t)&v18[*(int *)(v16 + 40)], (uint64_t)v9, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v18, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)v9, (uint64_t)v15, &qword_2560436D8);
    sub_233168500((uint64_t)v9, type metadata accessor for RawBankConnectData.AccountBalances);
    v25 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v15, 1, v25) == 1)
    {
      v24 = (uint64_t)v15;
      goto LABEL_6;
    }
    v32 = &v15[*(int *)(v25 + 20)];
    v33 = sub_23361D634();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v37, v32, v33);
    sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v33);
  }
}

uint64_t RawBankConnectData.Account.availableBalanceCreditDebitIndicator.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  char v25;
  char v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  v13 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v18, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331686A0((uint64_t)&v6[*(int *)(v4 + 40)], (uint64_t)v10, &qword_2560436D8);
    sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v20 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v10, 1, v20) != 1)
    {
      v25 = v10[*(int *)(v20 + 24)];
      result = sub_233168500((uint64_t)v10, type metadata accessor for RawBankConnectData.InternalAccountBalance);
      v24 = (v25 & 1) == 0;
      goto LABEL_9;
    }
    v21 = (uint64_t)v10;
  }
  else
  {
    sub_233168580((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)&v15[*(int *)(v13 + 40)], (uint64_t)v12, &qword_2560436D8);
    sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) != 1)
    {
      v26 = v12[*(int *)(v22 + 24)];
      result = sub_233168500((uint64_t)v12, type metadata accessor for RawBankConnectData.InternalAccountBalance);
      v24 = (v26 & 1) == 0;
      goto LABEL_9;
    }
    v21 = (uint64_t)v12;
  }
  result = sub_233168608(v21, &qword_2560436D8);
  v24 = 2;
LABEL_9:
  *a1 = v24;
  return result;
}

uint64_t RawBankConnectData.Account.bookedBalance.getter()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v28);
  v1 = (char *)&v27 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v27 - v12);
  v14 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v29, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168580((uint64_t)v19, (uint64_t)v16, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331684BC((uint64_t)&v16[*(int *)(v14 + 40)], (uint64_t)v7, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v16, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)&v7[*(int *)(v2 + 20)], (uint64_t)v13, &qword_2560436D8);
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.AccountBalances);
    v23 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v13, 1, v23) == 1)
    {
      v22 = (uint64_t)v13;
      goto LABEL_6;
    }
    v24 = *v13;
    v25 = (uint64_t)v13;
LABEL_9:
    sub_233168500(v25, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    return v24;
  }
  sub_233168580((uint64_t)v19, (uint64_t)v1, type metadata accessor for RawBankConnectData.LiabilityAccount);
  sub_2331684BC((uint64_t)&v1[*(int *)(v28 + 40)], (uint64_t)v5, type metadata accessor for RawBankConnectData.AccountBalances);
  sub_233168500((uint64_t)v1, type metadata accessor for RawBankConnectData.LiabilityAccount);
  sub_2331686A0((uint64_t)&v5[*(int *)(v2 + 20)], (uint64_t)v11, &qword_2560436D8);
  sub_233168500((uint64_t)v5, type metadata accessor for RawBankConnectData.AccountBalances);
  v21 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21) != 1)
  {
    v24 = *v11;
    v25 = (uint64_t)v11;
    goto LABEL_9;
  }
  v22 = (uint64_t)v11;
LABEL_6:
  sub_233168608(v22, &qword_2560436D8);
  return 0;
}

uint64_t RawBankConnectData.Account.bookedBalanceAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v35 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v35);
  v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v36, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v20, (uint64_t)v2, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331684BC((uint64_t)&v2[*(int *)(v35 + 40)], (uint64_t)v6, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v2, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331686A0((uint64_t)&v6[*(int *)(v3 + 20)], (uint64_t)v12, &qword_2560436D8);
    sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.AccountBalances);
    v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) == 1)
    {
      v23 = (uint64_t)v12;
LABEL_6:
      sub_233168608(v23, &qword_2560436D8);
      v25 = sub_23361D634();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v37, 1, 1, v25);
    }
    v27 = &v12[*(int *)(v22 + 20)];
    v28 = sub_23361D634();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v37, v27, v28);
    sub_233168500((uint64_t)v12, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    v31 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56);
  }
  else
  {
    sub_233168580((uint64_t)v20, (uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331684BC((uint64_t)&v17[*(int *)(v15 + 40)], (uint64_t)v8, type metadata accessor for RawBankConnectData.AccountBalances);
    sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)&v8[*(int *)(v3 + 20)], (uint64_t)v14, &qword_2560436D8);
    sub_233168500((uint64_t)v8, type metadata accessor for RawBankConnectData.AccountBalances);
    v24 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24) == 1)
    {
      v23 = (uint64_t)v14;
      goto LABEL_6;
    }
    v32 = &v14[*(int *)(v24 + 20)];
    v28 = sub_23361D634();
    v33 = *(_QWORD *)(v28 - 8);
    v30 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v37, v32, v28);
    sub_233168500((uint64_t)v14, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    v31 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56);
  }
  return v31(v30, 0, 1, v28);
}

uint64_t RawBankConnectData.Account.bookedBalanceCreditDebitIndicator.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v18, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v20 = *(int *)(v4 + 40);
    v21 = type metadata accessor for RawBankConnectData.AccountBalances(0);
    sub_2331686A0((uint64_t)&v6[v20 + *(int *)(v21 + 20)], (uint64_t)v10, &qword_2560436D8);
    sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v10, 1, v22) != 1)
    {
      v29 = v10[*(int *)(v22 + 24)];
      result = sub_233168500((uint64_t)v10, type metadata accessor for RawBankConnectData.InternalAccountBalance);
      v28 = (v29 & 1) == 0;
      goto LABEL_9;
    }
    v23 = (uint64_t)v10;
  }
  else
  {
    sub_233168580((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    v24 = *(int *)(v13 + 40);
    v25 = type metadata accessor for RawBankConnectData.AccountBalances(0);
    sub_2331686A0((uint64_t)&v15[v24 + *(int *)(v25 + 20)], (uint64_t)v12, &qword_2560436D8);
    sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    v26 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v12, 1, v26) != 1)
    {
      v30 = v12[*(int *)(v26 + 24)];
      result = sub_233168500((uint64_t)v12, type metadata accessor for RawBankConnectData.InternalAccountBalance);
      v28 = (v30 & 1) == 0;
      goto LABEL_9;
    }
    v23 = (uint64_t)v12;
  }
  result = sub_233168608(v23, &qword_2560436D8);
  v28 = 2;
LABEL_9:
  *a1 = v28;
  return result;
}

uint64_t RawBankConnectData.Account.currency.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v12 = sub_23323F380();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    v12 = sub_23323F380();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t RawBankConnectData.Account.accountType.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v5, type metadata accessor for RawBankConnectData.Account);
  *a1 = swift_getEnumCaseMultiPayload() == 1;
  return sub_233168500((uint64_t)v5, type metadata accessor for RawBankConnectData.Account);
}

uint64_t RawBankConnectData.Account.accountName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v12 = *((_QWORD *)v4 + 6);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    v12 = *((_QWORD *)v7 + 6);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t RawBankConnectData.Account.accountDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v12 = *((_QWORD *)v4 + 9);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    v12 = *((_QWORD *)v7 + 9);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t RawBankConnectData.Account.nextPaymentDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v9, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331686A0((uint64_t)&v6[*(int *)(v4 + 52)], a1, (uint64_t *)&unk_254247DA0);
    v11 = (uint64_t)v6;
    v12 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    v13 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
    v12 = type metadata accessor for RawBankConnectData.Account;
    v11 = (uint64_t)v9;
  }
  return sub_233168500(v11, v12);
}

uint64_t RawBankConnectData.Account.creditLimit.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Account);
    return 0;
  }
  sub_233168580((uint64_t)v7, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  v9 = (uint64_t *)&v4[*(int *)(v2 + 44)];
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[4];
  v14 = v9[5];
  v15 = v9[6];
  v16 = v9[7];
  v17 = *v9;
  v19 = v9[3];
  sub_23323F58C(v17, v11, v12, v19, v13, v14, v15, v16);
  sub_233168500((uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  if (!v16)
    return 0;
  sub_2331B3078(v10, v11, v12, v19, v13, v14, v15, v16);
  return v10;
}

uint64_t RawBankConnectData.Account.minimumPaymentAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Account);
    return 0;
  }
  sub_233168580((uint64_t)v7, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  v9 = (uint64_t *)&v4[*(int *)(v2 + 48)];
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[4];
  v14 = v9[5];
  v15 = v9[6];
  v16 = v9[7];
  v17 = *v9;
  v19 = v9[3];
  sub_23323F58C(v17, v11, v12, v19, v13, v14, v15, v16);
  sub_233168500((uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  if (!v16)
    return 0;
  sub_2331B3078(v10, v11, v12, v19, v13, v14, v15, v16);
  return v10;
}

uint64_t RawBankConnectData.Account.overduePaymentAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168500((uint64_t)v7, type metadata accessor for RawBankConnectData.Account);
    return 0;
  }
  sub_233168580((uint64_t)v7, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  v9 = (uint64_t *)&v4[*(int *)(v2 + 56)];
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[4];
  v14 = v9[5];
  v15 = v9[6];
  v16 = v9[7];
  v17 = *v9;
  v19 = v9[3];
  sub_23323F58C(v17, v11, v12, v19, v13, v14, v15, v16);
  sub_233168500((uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
  if (!v16)
    return 0;
  sub_2331B3078(v10, v11, v12, v19, v13, v14, v15, v16);
  return v10;
}

uint64_t RawBankConnectData.Account.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v12 = *v4;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    v12 = *v7;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t RawBankConnectData.Account.fpanIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    if (*((_QWORD *)v4 + 2))
      v12 = *((_QWORD *)v4 + 2);
    else
      v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    if (*((_QWORD *)v7 + 2))
      v12 = *((_QWORD *)v7 + 2);
    else
      v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

uint64_t RawBankConnectData.Account.maskedAccountNumber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v15 = *((_QWORD *)v6 + 3);
    v14 = *((_QWORD *)v6 + 4);
    v16 = v6[40];
    swift_bridgeObjectRetain();
    v17 = (uint64_t)v6;
    v18 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    v15 = *((_QWORD *)v9 + 3);
    v14 = *((_QWORD *)v9 + 4);
    v16 = v9[40];
    swift_bridgeObjectRetain();
    v17 = (uint64_t)v9;
    v18 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  result = sub_233168500(v17, v18);
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v14;
  *(_BYTE *)(a1 + 16) = v16;
  return result;
}

uint64_t RawBankConnectData.Account.accountStatus.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  char v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t result;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v12, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    if (v6[64] == 3)
      v14 = 4;
    else
      v14 = v6[64];
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    if (v9[64] == 3)
      v14 = 4;
    else
      v14 = v9[64];
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  result = sub_233168500(v15, v16);
  *a1 = v14;
  return result;
}

uint64_t sub_23323F380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - v5;
  v7 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  sub_2331686A0(v0, (uint64_t)v6, &qword_2560436D8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) != 1)
  {
    sub_233168580((uint64_t)v6, (uint64_t)v13, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    goto LABEL_5;
  }
  sub_233168608((uint64_t)v6, &qword_2560436D8);
  v15 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  sub_2331686A0(v0 + *(int *)(v15 + 20), (uint64_t)v4, &qword_2560436D8);
  if (v14(v4, 1, v7) != 1)
  {
    sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    v13 = v11;
LABEL_5:
    v16 = *((_QWORD *)v13 + 6);
    swift_bridgeObjectRetain();
    sub_233168500((uint64_t)v13, type metadata accessor for RawBankConnectData.InternalAccountBalance);
    return v16;
  }
  sub_233168608((uint64_t)v4, &qword_2560436D8);
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t sub_23323F58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t RawBankConnectData.Account.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  v13 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v18, (uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_2331686A0((uint64_t)&v6[*(int *)(v4 + 60)], (uint64_t)v10, &qword_2560436D0);
    v20 = type metadata accessor for RawBankConnectData.Actions();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v10, 1, v20) == 1)
    {
      if (qword_256041C08 != -1)
        swift_once();
      v21 = __swift_project_value_buffer(v20, (uint64_t)qword_2560CD2C8);
      sub_2331684BC(v21, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
      v22 = (uint64_t)v10;
      return sub_233168608(v22, &qword_2560436D0);
    }
    sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v26 = (uint64_t)v10;
  }
  else
  {
    sub_233168580((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_2331686A0((uint64_t)&v15[*(int *)(v13 + 44)], (uint64_t)v12, &qword_2560436D0);
    v23 = type metadata accessor for RawBankConnectData.Actions();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v12, 1, v23) == 1)
    {
      if (qword_256041C08 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_2560CD2C8);
      sub_2331684BC(v24, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
      v22 = (uint64_t)v12;
      return sub_233168608(v22, &qword_2560436D0);
    }
    sub_233168500((uint64_t)v15, type metadata accessor for RawBankConnectData.AssetAccount);
    v26 = (uint64_t)v12;
  }
  return sub_233168580(v26, a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
}

uint64_t RawBankConnectData.Account.isShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v12 = v4[*(int *)(v2 + 64)];
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for RawBankConnectData.AssetAccount);
    v12 = v7[*(int *)(v5 + 48)];
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for RawBankConnectData.AssetAccount;
  }
  sub_233168500(v13, v14);
  return v12;
}

id FinanceXPCListener<>.init(connectionHandler:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v7[5];

  v4 = objc_msgSend((id)objc_opt_self(), sel_serviceListener);
  sub_23323FBC4(v7);
  v5 = sub_23341FA64(v4, (uint64_t)v7, a1, a2);

  swift_release();
  return v5;
}

uint64_t static XPCServiceConfiguration.makeConnection()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11[5];

  type metadata accessor for ClientToServiceXPCConnection(0, a1, *(_QWORD *)(a2 + 8), a4);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v6 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v7 = (void *)sub_23361E12C();
  v8 = objc_msgSend(v6, sel_initWithServiceName_, v7);

  sub_23323FBC4(v11);
  v9 = sub_2332D9B68(v8, (uint64_t)v11);

  return v9;
}

uint64_t sub_23323FBC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for XPCEntitlementChecker();
  v3 = swift_allocObject();
  v4 = sub_233166A64(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542468A0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v4;
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for XPCEntitlementChecker;
  *a1 = v3;
  return result;
}

uint64_t dispatch thunk of static XPCServiceConfiguration.service.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Institution.BackgroundRefreshConfiguration.init(maximumNumberOfRefreshes:numberOfRemainingRefreshes:retryAfterDate:lastRefreshDate:confirmationWindow:confirmationExpiryWindow:)@<X0>(__int16 a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, _WORD *a9@<X8>)
{
  int *refreshed;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t result;

  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v14 = (uint64_t)a9 + refreshed[6];
  v15 = sub_23361D634();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)a9 + refreshed[7];
  v16(v17, 1, 1, v15);
  v18 = (char *)a9 + refreshed[8];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = (char *)a9 + refreshed[9];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *a9 = a1;
  a9[1] = a2;
  sub_233170B8C(a3, v14, (uint64_t *)&unk_254247DA0);
  result = sub_233170B8C(a4, v17, (uint64_t *)&unk_254247DA0);
  *(_QWORD *)v18 = a5;
  v18[8] = a6 & 1;
  *(_QWORD *)v19 = a7;
  v19[8] = a8 & 1;
  return result;
}

uint64_t type metadata accessor for Institution.BackgroundRefreshConfiguration(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254246EE8);
}

FinanceKit::Institution::ConsentSyncingConfiguration __swiftcall Institution.ConsentSyncingConfiguration.init(isEnabled:outdatedTokenWaitTimeout:)(Swift::Bool isEnabled, Swift::Double outdatedTokenWaitTimeout)
{
  uint64_t v2;
  FinanceKit::Institution::ConsentSyncingConfiguration result;

  *(_BYTE *)v2 = isEnabled;
  *(Swift::Double *)(v2 + 8) = outdatedTokenWaitTimeout;
  result.outdatedTokenWaitTimeout = outdatedTokenWaitTimeout;
  result.isEnabled = isEnabled;
  return result;
}

uint64_t Institution.init(id:name:reconsentType:supportedAuthTypes:firstTransactionsRequestWindow:maxAgeTransactionsFirstRequest:maxAgeTransactionsRefreshRequest:extensionsBundleIdentifiers:backgroundRefreshConfiguration:multipleConsentsEnabled:problemReportingEnabled:termsAndConditions:financialLabEnabled:timestampSuitableForUserDisplay:piiRedactionConfiguration:privacyLabels:consentSyncingConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, __int16 *a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16, char a17, char a18, uint64_t *a19, __int16 *a20,char *a21)
{
  char v26;
  __int16 v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v39;
  __int16 v40;
  char v41;

  v26 = a5 & 1;
  v27 = *a6;
  v39 = *a19;
  v40 = *a20;
  v41 = *a21;
  v28 = *((_QWORD *)a21 + 1);
  v29 = (int *)type metadata accessor for Institution(0);
  v30 = a9 + v29[15];
  v31 = type metadata accessor for BankConnectTermsAndConditions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v29[18];
  *(_QWORD *)(a9 + v32) = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = v26;
  *(_WORD *)(a9 + 34) = v27;
  *(_QWORD *)(a9 + 40) = a7;
  *(_BYTE *)(a9 + 48) = a8 & 1;
  *(double *)(a9 + 56) = a10;
  *(double *)(a9 + 64) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  sub_233168580(a13, a9 + v29[12], type metadata accessor for Institution.BackgroundRefreshConfiguration);
  *(_BYTE *)(a9 + v29[13]) = a14;
  *(_BYTE *)(a9 + v29[14]) = a15;
  sub_233170B8C(a16, v30, &qword_254247CD0);
  *(_BYTE *)(a9 + v29[16]) = a17;
  *(_BYTE *)(a9 + v29[17]) = a18;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v32) = v39;
  *(_WORD *)(a9 + v29[19]) = v40;
  v34 = a9 + v29[20];
  *(_BYTE *)v34 = v41;
  *(_QWORD *)(v34 + 8) = v28;
  return result;
}

uint64_t type metadata accessor for Institution(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254247620);
}

uint64_t Institution.BackgroundRefreshConfiguration.maximumNumberOfRefreshes.getter()
{
  unsigned __int16 *v0;

  return *v0;
}

uint64_t Institution.BackgroundRefreshConfiguration.maximumNumberOfRefreshes.setter(uint64_t result)
{
  _WORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Institution.BackgroundRefreshConfiguration.maximumNumberOfRefreshes.modify())()
{
  return nullsub_1;
}

uint64_t Institution.BackgroundRefreshConfiguration.numberOfRemainingRefreshes.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 2);
}

uint64_t Institution.BackgroundRefreshConfiguration.numberOfRemainingRefreshes.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 2) = result;
  return result;
}

uint64_t (*Institution.BackgroundRefreshConfiguration.numberOfRemainingRefreshes.modify())()
{
  return nullsub_1;
}

uint64_t Institution.BackgroundRefreshConfiguration.retryAfterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return sub_2331686A0(v1 + *(int *)(refreshed + 24), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Institution.BackgroundRefreshConfiguration.retryAfterDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return sub_233170B8C(a1, v1 + *(int *)(refreshed + 24), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Institution.BackgroundRefreshConfiguration.retryAfterDate.modify())()
{
  type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return nullsub_1;
}

uint64_t Institution.BackgroundRefreshConfiguration.lastRefreshDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return sub_2331686A0(v1 + *(int *)(refreshed + 28), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Institution.BackgroundRefreshConfiguration.confirmationWindow.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Institution.BackgroundRefreshConfiguration(0) + 32));
}

uint64_t Institution.BackgroundRefreshConfiguration.confirmationWindow.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v6 = v2 + *(int *)(result + 32);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*Institution.BackgroundRefreshConfiguration.confirmationWindow.modify())()
{
  type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return nullsub_1;
}

uint64_t Institution.BackgroundRefreshConfiguration.confirmationExpiryWindow.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Institution.BackgroundRefreshConfiguration(0) + 36));
}

uint64_t Institution.BackgroundRefreshConfiguration.confirmationExpiryWindow.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*Institution.BackgroundRefreshConfiguration.confirmationExpiryWindow.modify())()
{
  type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  return nullsub_1;
}

uint64_t Institution.BackgroundRefreshConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *refreshed;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v1 = sub_23361D634();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  sub_23361F374();
  sub_23361F374();
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  sub_2331686A0(v0 + refreshed[6], (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v12(v10, 1, v1) == 1)
  {
    sub_23361F368();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v1);
    sub_23361F368();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_2331686A0(v0 + refreshed[7], (uint64_t)v8, (uint64_t *)&unk_254247DA0);
  if (v12(v8, 1, v1) == 1)
  {
    sub_23361F368();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    sub_23361F368();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(_BYTE *)(v0 + refreshed[8] + 8) == 1)
  {
    sub_23361F368();
  }
  else
  {
    sub_23361F368();
    sub_23361F38C();
  }
  if (*(_BYTE *)(v0 + refreshed[9] + 8) == 1)
    return sub_23361F368();
  sub_23361F368();
  return sub_23361F38C();
}

uint64_t sub_233240478(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2332404B0 + 4 * byte_2336300F0[a1]))(0xD000000000000018, 0x800000023366D640);
}

uint64_t sub_2332404B0(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_23324052C()
{
  unsigned __int8 *v0;

  return sub_233240478(*v0);
}

uint64_t sub_233240534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2332470B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233240558()
{
  sub_2332441EC();
  return sub_23361F428();
}

uint64_t sub_233240580()
{
  sub_2332441EC();
  return sub_23361F434();
}

uint64_t Institution.BackgroundRefreshConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046468);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2332441EC();
  sub_23361F410();
  v14 = 0;
  sub_23361F188();
  if (!v1)
  {
    v13 = 1;
    sub_23361F188();
    type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
    v12 = 2;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    v11 = 3;
    sub_23361F110();
    v10 = 4;
    sub_23361F0F8();
    v9 = 5;
    sub_23361F0F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Institution.BackgroundRefreshConfiguration.hashValue.getter()
{
  return sub_2332423A0((void (*)(_BYTE *))Institution.BackgroundRefreshConfiguration.hash(into:));
}

uint64_t Institution.BackgroundRefreshConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *refreshed;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v34 - v6;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046478);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v10 = MEMORY[0x24BDAC7A8](refreshed);
  v12 = (_WORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t)v12 + *(int *)(v10 + 24);
  v14 = sub_23361D634();
  v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 56);
  v44 = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  v42 = (uint64_t)v12 + refreshed[7];
  v15();
  v16 = (uint64_t *)((char *)v12 + refreshed[8]);
  *v16 = 0;
  *((_BYTE *)v16 + 8) = 1;
  v17 = (uint64_t *)((char *)v12 + refreshed[9]);
  *v17 = 0;
  *((_BYTE *)v17 + 8) = 1;
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2332441EC();
  v19 = v45;
  sub_23361F3EC();
  if (v19)
  {
    v22 = v44;
    v23 = v42;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    sub_233168608(v22, (uint64_t *)&unk_254247DA0);
    return sub_233168608(v23, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v45 = v16;
    v21 = v39;
    v20 = (uint64_t)v40;
    v36 = v17;
    v51 = 0;
    *v12 = sub_23361F074();
    v50 = 1;
    v12[1] = sub_23361F074();
    v49 = 2;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v35 = v8;
    sub_23361EFFC();
    sub_233170B8C(v20, v44, (uint64_t *)&unk_254247DA0);
    v48 = 3;
    v24 = (uint64_t)v38;
    sub_23361EFFC();
    sub_233170B8C(v24, v42, (uint64_t *)&unk_254247DA0);
    v47 = 4;
    v25 = sub_23361EFE4();
    v26 = v45;
    *v45 = v25;
    *((_BYTE *)v26 + 8) = v27 & 1;
    v46 = 5;
    v28 = sub_23361EFE4();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v41);
    v32 = v36;
    v31 = v37;
    *v36 = v28;
    *((_BYTE *)v32 + 8) = v30 & 1;
    sub_2331684BC((uint64_t)v12, v31, type metadata accessor for Institution.BackgroundRefreshConfiguration);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    return sub_233168500((uint64_t)v12, type metadata accessor for Institution.BackgroundRefreshConfiguration);
  }
}

uint64_t sub_233240C04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Institution.BackgroundRefreshConfiguration.init(from:)(a1, a2);
}

uint64_t sub_233240C18(_QWORD *a1)
{
  return Institution.BackgroundRefreshConfiguration.encode(to:)(a1);
}

uint64_t sub_233240C2C(uint64_t a1, uint64_t a2)
{
  return sub_233242BC4(a1, a2, (void (*)(_BYTE *))Institution.BackgroundRefreshConfiguration.hash(into:));
}

uint64_t sub_233240C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_233242C14(a1, a2, a3, (void (*)(_BYTE *))Institution.BackgroundRefreshConfiguration.hash(into:));
}

BOOL static Institution.ConsentSyncingConfiguration.== infix(_:_:)(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

uint64_t Institution.ConsentSyncingConfiguration.hash(into:)()
{
  sub_23361F368();
  return sub_23361F38C();
}

uint64_t sub_233240CB8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 0x656C62616E457369;
}

uint64_t sub_233240CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23324735C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233240D20()
{
  sub_233244230();
  return sub_23361F428();
}

uint64_t sub_233240D48()
{
  sub_233244230();
  return sub_23361F434();
}

uint64_t Institution.ConsentSyncingConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046480);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233244230();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F14C();
  if (!v1)
  {
    v8[14] = 1;
    sub_23361F158();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Institution.ConsentSyncingConfiguration.hashValue.getter()
{
  sub_23361F350();
  sub_23361F368();
  sub_23361F38C();
  return sub_23361F3A4();
}

uint64_t Institution.ConsentSyncingConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046490);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233244230();
  sub_23361F3EC();
  if (!v2)
  {
    v13[15] = 0;
    v9 = sub_23361F038();
    v13[14] = 1;
    sub_23361F044();
    v11 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233241054@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Institution.ConsentSyncingConfiguration.init(from:)(a1, a2);
}

uint64_t sub_233241068(_QWORD *a1)
{
  return Institution.ConsentSyncingConfiguration.encode(to:)(a1);
}

BOOL sub_23324107C(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

uint64_t sub_2332410AC()
{
  sub_23361F368();
  return sub_23361F38C();
}

uint64_t sub_2332410EC()
{
  sub_23361F350();
  sub_23361F368();
  sub_23361F38C();
  return sub_23361F3A4();
}

uint64_t Institution.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Institution.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Institution.id.modify())()
{
  return nullsub_1;
}

uint64_t Institution.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Institution.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Institution.name.modify())()
{
  return nullsub_1;
}

uint64_t Institution.reconsentType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Institution.reconsentType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result & 1;
  return result;
}

uint64_t (*Institution.reconsentType.modify())()
{
  return nullsub_1;
}

void Institution.supportedAuthTypes.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 34);
}

_WORD *Institution.supportedAuthTypes.setter(_WORD *result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 34) = *result;
  return result;
}

uint64_t (*Institution.supportedAuthTypes.modify())()
{
  return nullsub_1;
}

uint64_t Institution.firstTransactionsRequestWindow.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Institution.firstTransactionsRequestWindow.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*Institution.firstTransactionsRequestWindow.modify())()
{
  return nullsub_1;
}

double Institution.maxAgeTransactionsFirstRequest.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void Institution.maxAgeTransactionsFirstRequest.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*Institution.maxAgeTransactionsFirstRequest.modify())()
{
  return nullsub_1;
}

double Institution.maxAgeTransactionsRefreshRequest.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void Institution.maxAgeTransactionsRefreshRequest.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*Institution.maxAgeTransactionsRefreshRequest.modify())()
{
  return nullsub_1;
}

uint64_t Institution.extensionsBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Institution.extensionsBundleIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*Institution.extensionsBundleIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t Institution.backgroundRefreshConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Institution(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 48), a1, type metadata accessor for Institution.BackgroundRefreshConfiguration);
}

uint64_t Institution.backgroundRefreshConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Institution(0) + 48);
  return sub_233244274(a1, v3);
}

uint64_t (*Institution.backgroundRefreshConfiguration.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.multipleConsentsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Institution(0) + 52));
}

uint64_t Institution.multipleConsentsEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Institution(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*Institution.multipleConsentsEnabled.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.problemReportingEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Institution(0) + 56));
}

uint64_t Institution.problemReportingEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Institution(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*Institution.problemReportingEnabled.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.termsAndConditions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Institution(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 60), a1, &qword_254247CD0);
}

uint64_t Institution.termsAndConditions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Institution(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 60), &qword_254247CD0);
}

uint64_t (*Institution.termsAndConditions.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.financialLabEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Institution(0) + 64));
}

uint64_t Institution.financialLabEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Institution(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*Institution.financialLabEnabled.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.timestampSuitableForUserDisplay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Institution(0) + 68));
}

uint64_t Institution.timestampSuitableForUserDisplay.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Institution(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*Institution.timestampSuitableForUserDisplay.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.piiRedactionConfiguration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Institution(0) + 72));
  return swift_bridgeObjectRetain();
}

uint64_t Institution.piiRedactionConfiguration.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for Institution(0) + 72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*Institution.piiRedactionConfiguration.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.privacyLabels.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Institution(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t Institution.privacyLabels.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Institution(0);
  *(_WORD *)(v1 + *(int *)(result + 76)) = v2;
  return result;
}

uint64_t (*Institution.privacyLabels.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

double Institution.consentSyncingConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = v1 + *(int *)(type metadata accessor for Institution(0) + 80);
  result = *(double *)(v3 + 8);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(double *)(a1 + 8) = result;
  return result;
}

uint64_t Institution.consentSyncingConfiguration.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  result = type metadata accessor for Institution(0);
  v5 = v1 + *(int *)(result + 80);
  *(_BYTE *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  return result;
}

uint64_t (*Institution.consentSyncingConfiguration.modify())()
{
  type metadata accessor for Institution(0);
  return nullsub_1;
}

uint64_t Institution.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BankConnectTermsAndConditions();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F374();
  sub_23361F374();
  v16 = *(unsigned __int8 *)(v1 + 48);
  v31 = v5;
  if (v16 == 1)
  {
    sub_23361F368();
  }
  else
  {
    sub_23361F368();
    sub_23361F38C();
  }
  sub_23361F38C();
  sub_23361F38C();
  v17 = *(_QWORD *)(v1 + 72);
  if (v17)
  {
    sub_23361F368();
    sub_23361F35C();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v27 = v10;
      v28 = v4;
      swift_bridgeObjectRetain();
      v19 = v17 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        swift_bridgeObjectRelease();
        v19 += 16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v10 = v27;
      v4 = v28;
    }
  }
  else
  {
    sub_23361F368();
  }
  v20 = type metadata accessor for Institution(0);
  Institution.BackgroundRefreshConfiguration.hash(into:)();
  sub_23361F368();
  sub_23361F368();
  sub_2331686A0(v1 + *(int *)(v20 + 60), (uint64_t)v15, &qword_254247CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_23361F368();
  }
  else
  {
    sub_233168580((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    v21 = v30;
    sub_2331686A0((uint64_t)&v12[*(int *)(v9 + 24)], v30, (uint64_t *)&unk_254247DA0);
    v22 = v31;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v21, 1, v4) == 1)
    {
      sub_23361F368();
    }
    else
    {
      v23 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v29, v21, v4);
      sub_23361F368();
      sub_23361E090();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v4);
    }
    sub_23361E090();
    sub_233168500((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  }
  sub_23361F368();
  sub_23361F368();
  v24 = *(_QWORD *)(v2 + *(int *)(v20 + 72));
  sub_23361F368();
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_233243554(a1, v24);
    swift_bridgeObjectRelease();
  }
  sub_23361F374();
  sub_23361F368();
  return sub_23361F38C();
}

uint64_t sub_233241C98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233241CC0 + 4 * byte_2336300F6[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_233241CC0()
{
  return 1701667182;
}

uint64_t sub_233241CD0()
{
  return 0x6E65736E6F636572;
}

unint64_t sub_233241CF4()
{
  return 0xD000000000000012;
}

uint64_t sub_233241E44()
{
  unsigned __int8 *v0;

  return sub_233241C98(*v0);
}

uint64_t sub_233241E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233247454(a1, a2);
  *a3 = result;
  return result;
}

void sub_233241E70(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_233241E7C()
{
  sub_2332442B8();
  return sub_23361F428();
}

uint64_t sub_233241EA4()
{
  sub_2332442B8();
  return sub_23361F434();
}

uint64_t Institution.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046498);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2332442B8();
  sub_23361F410();
  LOBYTE(v14) = 0;
  sub_23361F140();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_23361F140();
    LOBYTE(v14) = *(_BYTE *)(v3 + 32);
    v16 = 2;
    sub_2332442FC();
    sub_23361F17C();
    LOWORD(v14) = *(_WORD *)(v3 + 34);
    v16 = 3;
    sub_233244340();
    sub_23361F17C();
    LOBYTE(v14) = 4;
    sub_23361F0F8();
    LOBYTE(v14) = 5;
    sub_23361F158();
    LOBYTE(v14) = 6;
    sub_23361F158();
    v14 = *(_QWORD *)(v3 + 72);
    v16 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23361F110();
    v9 = (int *)type metadata accessor for Institution(0);
    LOBYTE(v14) = 8;
    type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
    sub_233167C58(&qword_2560464B8, type metadata accessor for Institution.BackgroundRefreshConfiguration, (uint64_t)&protocol conformance descriptor for Institution.BackgroundRefreshConfiguration);
    sub_23361F17C();
    LOBYTE(v14) = 9;
    sub_23361F14C();
    LOBYTE(v14) = 10;
    sub_23361F14C();
    LOBYTE(v14) = 11;
    type metadata accessor for BankConnectTermsAndConditions();
    sub_233167C58(&qword_2560464C0, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditions, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditions);
    sub_23361F110();
    LOBYTE(v14) = 12;
    sub_23361F14C();
    LOBYTE(v14) = 13;
    sub_23361F14C();
    v14 = *(_QWORD *)(v3 + v9[18]);
    v16 = 14;
    sub_233244384();
    sub_23361F110();
    LOWORD(v14) = *(_WORD *)(v3 + v9[19]);
    v16 = 15;
    sub_2332443C8();
    sub_23361F17C();
    v10 = v3 + v9[20];
    v11 = *(_QWORD *)(v10 + 8);
    LOBYTE(v14) = *(_BYTE *)v10;
    v15 = v11;
    v16 = 16;
    sub_23324440C();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Institution.hashValue.getter()
{
  return sub_2332423A0((void (*)(_BYTE *))Institution.hash(into:));
}

uint64_t sub_2332423A0(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_23361F350();
  a1(v3);
  return sub_23361F3A4();
}

uint64_t Institution.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t refreshed;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  MEMORY[0x24BDAC7A8](refreshed);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560464E0);
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Institution(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v14 + 5) = 0;
  v14[48] = 1;
  *((_QWORD *)v14 + 9) = 0;
  v15 = (uint64_t)&v14[*(int *)(v12 + 60)];
  v16 = type metadata accessor for BankConnectTermsAndConditions();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v43 = v15;
  v17(v15, 1, 1, v16);
  v39 = (int *)v11;
  v40 = a1;
  v42 = *(int *)(v11 + 72);
  v44 = (uint64_t *)v14;
  *(_QWORD *)&v14[v42] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2332442B8();
  v18 = v41;
  sub_23361F3EC();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    swift_bridgeObjectRelease();
    sub_233168608(v43, &qword_254247CD0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = (uint64_t)v7;
    v41 = v16;
    v20 = v8;
    LOBYTE(v45) = 0;
    v21 = sub_23361F02C();
    v22 = v44;
    *v44 = v21;
    v22[1] = v23;
    LOBYTE(v45) = 1;
    v22[2] = sub_23361F02C();
    v22[3] = v24;
    v47 = 2;
    sub_233244450();
    sub_23361F068();
    *((_BYTE *)v22 + 32) = v45;
    v47 = 3;
    sub_233244494();
    sub_23361F068();
    *((_WORD *)v22 + 17) = v45;
    LOBYTE(v45) = 4;
    v22[5] = sub_23361EFE4();
    *((_BYTE *)v22 + 48) = v25 & 1;
    LOBYTE(v45) = 5;
    sub_23361F044();
    v22[7] = v26;
    LOBYTE(v45) = 6;
    sub_23361F044();
    v22[8] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v47 = 7;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v44[9] = v45;
    LOBYTE(v45) = 8;
    sub_233167C58(&qword_2560464F8, type metadata accessor for Institution.BackgroundRefreshConfiguration, (uint64_t)&protocol conformance descriptor for Institution.BackgroundRefreshConfiguration);
    sub_23361F068();
    sub_233168580(v19, (uint64_t)v44 + v39[12], type metadata accessor for Institution.BackgroundRefreshConfiguration);
    LOBYTE(v45) = 9;
    *((_BYTE *)v44 + v39[13]) = sub_23361F038() & 1;
    LOBYTE(v45) = 10;
    *((_BYTE *)v44 + v39[14]) = sub_23361F038() & 1;
    LOBYTE(v45) = 11;
    sub_233167C58(&qword_256046500, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditions, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditions);
    sub_23361EFFC();
    sub_233170B8C(v37, v43, &qword_254247CD0);
    LOBYTE(v45) = 12;
    *((_BYTE *)v44 + v39[16]) = sub_23361F038() & 1;
    LOBYTE(v45) = 13;
    *((_BYTE *)v44 + v39[17]) = sub_23361F038() & 1;
    v47 = 14;
    sub_2332444D8();
    sub_23361EFFC();
    v28 = v44;
    v29 = v45;
    v30 = v42;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v28 + v30) = v29;
    v47 = 15;
    sub_23324451C();
    sub_23361F068();
    *(_WORD *)((char *)v44 + v39[19]) = v45;
    v47 = 16;
    sub_233244560();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v38);
    v31 = v46;
    v32 = (uint64_t)v44;
    v33 = (char *)v44 + v39[20];
    *v33 = v45;
    *((_QWORD *)v33 + 1) = v31;
    sub_2331684BC(v32, v36, type metadata accessor for Institution);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    return sub_233168500(v32, type metadata accessor for Institution);
  }
}

uint64_t sub_233242B90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Institution.init(from:)(a1, a2);
}

uint64_t sub_233242BA4(_QWORD *a1)
{
  return Institution.encode(to:)(a1);
}

uint64_t sub_233242BB8(uint64_t a1, uint64_t a2)
{
  return sub_233242BC4(a1, a2, (void (*)(_BYTE *))Institution.hash(into:));
}

uint64_t sub_233242BC4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_23361F350();
  a3(v5);
  return sub_23361F3A4();
}

uint64_t sub_233242C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_233242C14(a1, a2, a3, (void (*)(_BYTE *))Institution.hash(into:));
}

uint64_t sub_233242C14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_23361F350();
  a4(v6);
  return sub_23361F3A4();
}

uint64_t Institution.init(fromRaw:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *refreshed;
  uint64_t v26;
  uint64_t v27;
  _WORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  double v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  __int16 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  int v93;
  uint64_t v94;
  char v95;
  double v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  int v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;
  char v132[8];
  double v133;
  __int16 v134;
  uint64_t v135;
  __int16 v136[3];

  v122 = a2;
  v3 = sub_23361D634();
  v127 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v100 = (char *)&v97 - v7;
  v126 = type metadata accessor for BankConnectTermsAndConditions();
  v8 = *(_QWORD *)(v126 - 8);
  v9 = MEMORY[0x24BDAC7A8](v126);
  v101 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v102 = (uint64_t)&v97 - v11;
  v120 = type metadata accessor for RawBankConnectData.TermsAndConditions();
  v12 = *(_QWORD *)(v120 - 8);
  v13 = MEMORY[0x24BDAC7A8](v120);
  v99 = (uint64_t *)((char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v121 = (uint64_t)&v97 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046520);
  MEMORY[0x24BDAC7A8](v16);
  v118 = (uint64_t)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v117 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v125 = (uint64_t)&v97 - v24;
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v26 = MEMORY[0x24BDAC7A8](refreshed);
  v28 = (_WORD *)((char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v26);
  v130 = (uint64_t)&v97 - v29;
  v131 = (int *)type metadata accessor for RawBankConnectData.Institution(0);
  v30 = (char *)a1 + v131[10];
  v31 = *((_QWORD *)v30 + 13);
  v103 = v6;
  v119 = v12;
  if (v31)
  {
    v32 = swift_bridgeObjectRetain();
    v116 = sub_2331C92EC(v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    v116 = 0;
  }
  if (v30[8])
    result = 0;
  else
    result = *(_QWORD *)v30;
  v34 = *((double *)v30 + 15);
  v35 = v30[128];
  v37 = *a1;
  v36 = a1[1];
  v38 = a1[2];
  v128 = a1[3];
  v129 = v36;
  v39 = *((unsigned __int8 *)a1 + v131[8]);
  v40 = *((_QWORD *)v30 + 11);
  v41 = *(_QWORD *)(v40 + 16);
  v42 = v127;
  if (v41)
  {
    v43 = 0;
    v44 = 0;
    v45 = v40 + 32;
    v46 = v41 - 1;
    do
    {
      if (*(_BYTE *)(v45 + v43))
      {
        if (*(_BYTE *)(v45 + v43) == 1)
        {
          v44 |= 2u;
          if (v46 == v43)
            goto LABEL_20;
        }
        else
        {
          v44 |= 4u;
          if (v46 == v43)
            goto LABEL_20;
        }
      }
      else
      {
        v44 |= 1u;
        if (v46 == v43)
          goto LABEL_20;
      }
      ++v43;
    }
    while (!__OFADD__(v43, 1));
    __break(1u);
  }
  LOWORD(v44) = 0;
LABEL_20:
  v136[0] = v44;
  if (result < -32768)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (result >= 0x8000)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  v111 = v35;
  v112 = v39;
  v113 = v38;
  v114 = v37;
  v115 = v8;
  v123 = v20;
  v110 = *((_QWORD *)v30 + 7);
  v109 = v30[64];
  v47 = *((double *)v30 + 9);
  v48 = *((double *)v30 + 10);
  v49 = *(uint64_t *)((char *)a1 + v131[9]);
  v124 = a1;
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v51 = v125;
  v52 = result;
  v50(v125, 1, 1, v3);
  v53 = (uint64_t)v117;
  v50((uint64_t)v117, 1, 1, v3);
  v107 = *((_QWORD *)v30 + 2);
  v106 = v30[24];
  v105 = *((_QWORD *)v30 + 4);
  v104 = v30[40];
  v54 = (uint64_t)v28 + refreshed[6];
  v50(v54, 1, 1, v3);
  v55 = v3;
  v59 = (uint64_t)v28 + refreshed[7];
  v98 = v55;
  v97 = v50;
  ((void (*)(uint64_t, uint64_t, uint64_t))v50)(v59, 1, 1);
  v56 = (char *)v28 + refreshed[8];
  *(_QWORD *)v56 = 0;
  v56[8] = 1;
  v58 = (uint64_t)v28 + refreshed[9];
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  *v28 = v52;
  v28[1] = v52;
  v108 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233170B8C(v51, v54, (uint64_t *)&unk_254247DA0);
  sub_233170B8C(v53, v59, (uint64_t *)&unk_254247DA0);
  *(_QWORD *)v56 = v107;
  v56[8] = v106;
  v57 = (uint64_t)v124;
  *(_QWORD *)v58 = v105;
  *(_BYTE *)(v58 + 8) = v104;
  sub_233168580((uint64_t)v28, v130, type metadata accessor for Institution.BackgroundRefreshConfiguration);
  LODWORD(v58) = v30[96];
  LODWORD(v59) = v30[97];
  v60 = v118;
  sub_2331686A0(v57 + v131[13], v118, &qword_256046520);
  v61 = v120;
  v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v60, 1, v120);
  v63 = 1;
  if (v62 != 1)
  {
    v64 = v121;
    sub_233168580(v60, v121, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    v65 = v99;
    sub_2331684BC(v64, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    v118 = *v65;
    v66 = v51;
    v117 = (char *)v65[1];
    v67 = (char *)v65 + *(int *)(v61 + 24);
    LODWORD(v119) = v58;
    v68 = v127;
    v69 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
    v70 = v100;
    v71 = v98;
    v69(v100, v67, v98);
    v72 = v66;
    v73 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v97;
    v97(v72, 1, 1, v71);
    v74 = v103;
    v69(v103, (char *)v65 + *(int *)(v61 + 28), v71);
    v58 = v126;
    v75 = *(int *)(v126 + 24);
    LODWORD(v120) = v59;
    v59 = (uint64_t)v101;
    v76 = (uint64_t)&v101[v75];
    v73(&v101[v75], 1, 1, v71);
    v77 = v117;
    *(_QWORD *)v59 = v118;
    *(_QWORD *)(v59 + 8) = v77;
    v78 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    v78(v59 + *(int *)(v58 + 20), v70, v71);
    swift_bridgeObjectRetain();
    sub_233170B8C(v125, v76, (uint64_t *)&unk_254247DA0);
    v79 = *(int *)(v58 + 28);
    LOBYTE(v58) = v119;
    v78(v59 + v79, v74, v71);
    v57 = (uint64_t)v124;
    v80 = v59;
    LOBYTE(v59) = v120;
    v81 = v102;
    sub_233168580(v80, v102, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    sub_233168500((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    sub_233168580(v81, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    sub_233168500(v121, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
    v63 = 0;
  }
  v82 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v123, v63, 1, v126);
  v83 = v30[98];
  v84 = v30[99];
  v135 = v116;
  v85 = *(_QWORD *)(v57 + v131[12]);
  v86 = *(_QWORD *)(v85 + 16);
  if (v86)
  {
    v87 = 0;
    v88 = (char *)(v85 + 32);
    v89 = v122;
    v90 = v114;
    v91 = v113;
    v92 = v112;
    v93 = v111;
    do
    {
      v94 = *v88++;
      v87 |= word_233630812[v94];
      --v86;
    }
    while (v86);
  }
  else
  {
    v87 = 0;
    v89 = v122;
    v90 = v114;
    v91 = v113;
    v92 = v112;
    v93 = v111;
  }
  v95 = (v84 == 2) | v84;
  v96 = 3600.0;
  if (!v93)
    v96 = v34;
  v134 = v87;
  v132[0] = v30[112] & 1;
  v133 = v96;
  Institution.init(id:name:reconsentType:supportedAuthTypes:firstTransactionsRequestWindow:maxAgeTransactionsFirstRequest:maxAgeTransactionsRefreshRequest:extensionsBundleIdentifiers:backgroundRefreshConfiguration:multipleConsentsEnabled:problemReportingEnabled:termsAndConditions:financialLabEnabled:timestampSuitableForUserDisplay:piiRedactionConfiguration:privacyLabels:consentSyncingConfiguration:)(v90, v129, v91, v128, v92, v136, v110, v109, v89, v47, v48, v108, v130, v58 & 1, v59 & 1, v82, v83 & 1, v95 & 1, &v135,
    &v134,
    v132);
  return sub_233168500(v57, type metadata accessor for RawBankConnectData.Institution);
}

uint64_t sub_233243554(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_23361F3A4();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_23361F35C();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_23361F350();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    v11 = sub_23361F3A4();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s10FinanceKit11InstitutionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t result;
  char v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int *v35;

  v4 = type metadata accessor for BankConnectTermsAndConditions();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046588);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v20 = sub_23361F224(), result = 0, (v20 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v22 = sub_23361F224(), result = 0, (v22 & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
        || *(unsigned __int16 *)(a1 + 34) != *(unsigned __int16 *)(a2 + 34))
      {
        return 0;
      }
      v23 = *(_BYTE *)(a2 + 48);
      if ((*(_BYTE *)(a1 + 48) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 48))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + 40) != *(double *)(a2 + 40))
          v23 = 1;
        if ((v23 & 1) != 0)
          return 0;
      }
      if (*(double *)(a1 + 56) != *(double *)(a2 + 56) || *(double *)(a1 + 64) != *(double *)(a2 + 64))
        return 0;
      v24 = *(_QWORD **)(a1 + 72);
      v25 = *(_QWORD **)(a2 + 72);
      if (v24)
      {
        if (!v25 || (sub_23322B8BC(v24, v25) & 1) == 0)
          return 0;
      }
      else if (v25)
      {
        return 0;
      }
      v35 = (int *)type metadata accessor for Institution(0);
      if (!_s10FinanceKit11InstitutionV30BackgroundRefreshConfigurationV2eeoiySbAE_AEtFZ_0((unsigned __int16 *)(a1 + v35[12]), (unsigned __int16 *)(a2 + v35[12]))|| *(unsigned __int8 *)(a1 + v35[13]) != *(unsigned __int8 *)(a2 + v35[13])|| *(unsigned __int8 *)(a1 + v35[14]) != *(unsigned __int8 *)(a2 + v35[14]))
      {
        return 0;
      }
      sub_2331686A0(a1 + v35[15], (uint64_t)v19, &qword_254247CD0);
      sub_2331686A0(a2 + v35[15], (uint64_t)v17, &qword_254247CD0);
      v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_2331686A0((uint64_t)v19, (uint64_t)v10, &qword_254247CD0);
      v34 = v26;
      sub_2331686A0((uint64_t)v17, v26, &qword_254247CD0);
      v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v27((uint64_t)v10, 1, v4) == 1)
      {
        sub_233168608((uint64_t)v17, &qword_254247CD0);
        sub_233168608((uint64_t)v19, &qword_254247CD0);
        if (v27(v34, 1, v4) == 1)
        {
          sub_233168608((uint64_t)v10, &qword_254247CD0);
          goto LABEL_32;
        }
      }
      else
      {
        sub_2331686A0((uint64_t)v10, (uint64_t)v14, &qword_254247CD0);
        v28 = v34;
        if (v27(v34, 1, v4) != 1)
        {
          sub_233168580(v28, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
          v29 = _s10FinanceKit29BankConnectTermsAndConditionsV2eeoiySbAC_ACtFZ_0(v14, v7);
          sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
          sub_233168608((uint64_t)v17, &qword_254247CD0);
          sub_233168608((uint64_t)v19, &qword_254247CD0);
          sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
          sub_233168608((uint64_t)v10, &qword_254247CD0);
          if ((v29 & 1) == 0)
            return 0;
LABEL_32:
          if (*(unsigned __int8 *)(a1 + v35[16]) != *(unsigned __int8 *)(a2 + v35[16])
            || *(unsigned __int8 *)(a1 + v35[17]) != *(unsigned __int8 *)(a2 + v35[17]))
          {
            return 0;
          }
          v30 = v35[18];
          v31 = *(_QWORD *)(a1 + v30);
          v32 = *(_QWORD *)(a2 + v30);
          if (v31)
          {
            if (v32)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              v33 = sub_2333E36C8(v31, v32);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              if ((v33 & 1) != 0)
              {
LABEL_39:
                if (*(unsigned __int16 *)(a1 + v35[19]) == *(unsigned __int16 *)(a2 + v35[19]))
                  return (*(double *)(a1 + v35[20] + 8) == *(double *)(a2 + v35[20] + 8)) & ~(*(unsigned __int8 *)(a1 + v35[20]) ^ *(unsigned __int8 *)(a2 + v35[20]));
              }
              return 0;
            }
            swift_bridgeObjectRetain();
          }
          else if (!v32)
          {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          return 0;
        }
        sub_233168608((uint64_t)v17, &qword_254247CD0);
        sub_233168608((uint64_t)v19, &qword_254247CD0);
        sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
      }
      sub_233168608((uint64_t)v10, &qword_256046588);
      return 0;
    }
  }
  return result;
}

BOOL _s10FinanceKit11InstitutionV30BackgroundRefreshConfigurationV2eeoiySbAE_AEtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t refreshed;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  unsigned int v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  void (*v38)(_BYTE *, uint64_t);
  int *v39;
  _BYTE *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v45;
  _BYTE *v46;
  char v47;
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  double *v50;
  char v51;
  double *v52;
  int v53;
  uint64_t v54;
  double *v55;
  char v56;
  double *v57;
  char v58;
  _BYTE v59[4];
  int v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  int *v63;
  unsigned __int16 *v64;
  unsigned __int16 *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;

  v4 = sub_23361D634();
  v69 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v67 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v68 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v59[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v59[-v14];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = &v59[-v18];
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = &v59[-v21];
  MEMORY[0x24BDAC7A8](v20);
  v26 = &v59[-v25];
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  v66 = v24;
  v62 = v23;
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v28 = *(int *)(refreshed + 24);
  v64 = a1;
  sub_2331686A0((uint64_t)a1 + v28, (uint64_t)v26, (uint64_t *)&unk_254247DA0);
  v63 = (int *)refreshed;
  v29 = *(int *)(refreshed + 24);
  v65 = a2;
  sub_2331686A0((uint64_t)a2 + v29, (uint64_t)v22, (uint64_t *)&unk_254247DA0);
  v30 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_2331686A0((uint64_t)v26, (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v22, v30, (uint64_t *)&unk_254247DA0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v31((uint64_t)v10, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v22, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
    v32 = v31(v30, 1, v4);
    v33 = v31;
    v34 = v66;
    if (v32 == 1)
    {
      v61 = v33;
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      goto LABEL_10;
    }
LABEL_8:
    v35 = (uint64_t)v10;
LABEL_16:
    sub_233168608(v35, &qword_256042DA0);
    return 0;
  }
  sub_2331686A0((uint64_t)v10, (uint64_t)v19, (uint64_t *)&unk_254247DA0);
  if (v31(v30, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v22, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v19, v4);
    goto LABEL_8;
  }
  v61 = v31;
  v36 = v69;
  v37 = v67;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v69 + 32))(v67, v30, v4);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v60 = sub_23361E108();
  v38 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
  v34 = v66;
  v38(v37, v4);
  sub_233168608((uint64_t)v22, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
  v38(v19, v4);
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((v60 & 1) == 0)
    return 0;
LABEL_10:
  v39 = v63;
  sub_2331686A0((uint64_t)v64 + v63[7], v34, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v65 + v39[7], (uint64_t)v15, (uint64_t *)&unk_254247DA0);
  v40 = v68;
  v41 = (uint64_t)&v68[*(int *)(v6 + 48)];
  sub_2331686A0(v34, (uint64_t)v68, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v15, v41, (uint64_t *)&unk_254247DA0);
  v42 = v61;
  if (v61((uint64_t)v40, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    sub_233168608(v34, (uint64_t *)&unk_254247DA0);
    if (v42(v41, 1, v4) == 1)
    {
      sub_233168608((uint64_t)v40, (uint64_t *)&unk_254247DA0);
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  v43 = v62;
  sub_2331686A0((uint64_t)v40, v62, (uint64_t *)&unk_254247DA0);
  if (v42(v41, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    sub_233168608(v34, (uint64_t *)&unk_254247DA0);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v43, v4);
LABEL_15:
    v35 = (uint64_t)v40;
    goto LABEL_16;
  }
  v45 = v69;
  v46 = v67;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v69 + 32))(v67, v41, v4);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v47 = sub_23361E108();
  v48 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
  v48(v46, v4);
  sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
  sub_233168608(v34, (uint64_t *)&unk_254247DA0);
  v48((_BYTE *)v43, v4);
  v39 = v63;
  sub_233168608((uint64_t)v40, (uint64_t *)&unk_254247DA0);
  if ((v47 & 1) == 0)
    return 0;
LABEL_19:
  v49 = v39[8];
  v50 = (double *)((char *)v64 + v49);
  v51 = *((_BYTE *)v64 + v49 + 8);
  v52 = (double *)((char *)v65 + v49);
  v53 = *((unsigned __int8 *)v65 + v49 + 8);
  if ((v51 & 1) != 0)
  {
    if (!v53)
      return 0;
  }
  else
  {
    if (*v50 != *v52)
      LOBYTE(v53) = 1;
    if ((v53 & 1) != 0)
      return 0;
  }
  v54 = v39[9];
  v55 = (double *)((char *)v64 + v54);
  v56 = *((_BYTE *)v64 + v54 + 8);
  v57 = (double *)((char *)v65 + v54);
  v58 = *((_BYTE *)v65 + v54 + 8);
  if ((v56 & 1) == 0)
  {
    if (*v55 != *v57)
      v58 = 1;
    return (v58 & 1) == 0;
  }
  return (v58 & 1) != 0;
}

unint64_t sub_2332441EC()
{
  unint64_t result;

  result = qword_256046470;
  if (!qword_256046470)
  {
    result = MEMORY[0x234934494](&unk_2336307C0, &type metadata for Institution.BackgroundRefreshConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046470);
  }
  return result;
}

unint64_t sub_233244230()
{
  unint64_t result;

  result = qword_256046488;
  if (!qword_256046488)
  {
    result = MEMORY[0x234934494](&unk_233630770, &type metadata for Institution.ConsentSyncingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046488);
  }
  return result;
}

uint64_t sub_233244274(uint64_t a1, uint64_t a2)
{
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(refreshed - 8) + 40))(a2, a1, refreshed);
  return a2;
}

unint64_t sub_2332442B8()
{
  unint64_t result;

  result = qword_2560464A0;
  if (!qword_2560464A0)
  {
    result = MEMORY[0x234934494](&unk_233630720, &type metadata for Institution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560464A0);
  }
  return result;
}

unint64_t sub_2332442FC()
{
  unint64_t result;

  result = qword_2560464A8;
  if (!qword_2560464A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ReconsentType, &type metadata for ReconsentType);
    atomic_store(result, (unint64_t *)&qword_2560464A8);
  }
  return result;
}

unint64_t sub_233244340()
{
  unint64_t result;

  result = qword_2560464B0;
  if (!qword_2560464B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_2560464B0);
  }
  return result;
}

unint64_t sub_233244384()
{
  unint64_t result;

  result = qword_2560464C8;
  if (!qword_2560464C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionConfiguration, &type metadata for PIIRedactionConfiguration);
    atomic_store(result, (unint64_t *)&qword_2560464C8);
  }
  return result;
}

unint64_t sub_2332443C8()
{
  unint64_t result;

  result = qword_2560464D0;
  if (!qword_2560464D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_2560464D0);
  }
  return result;
}

unint64_t sub_23324440C()
{
  unint64_t result;

  result = qword_2560464D8;
  if (!qword_2560464D8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Institution.ConsentSyncingConfiguration, &type metadata for Institution.ConsentSyncingConfiguration);
    atomic_store(result, (unint64_t *)&qword_2560464D8);
  }
  return result;
}

unint64_t sub_233244450()
{
  unint64_t result;

  result = qword_2560464E8;
  if (!qword_2560464E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ReconsentType, &type metadata for ReconsentType);
    atomic_store(result, (unint64_t *)&qword_2560464E8);
  }
  return result;
}

unint64_t sub_233244494()
{
  unint64_t result;

  result = qword_2560464F0;
  if (!qword_2560464F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_2560464F0);
  }
  return result;
}

unint64_t sub_2332444D8()
{
  unint64_t result;

  result = qword_256046508;
  if (!qword_256046508)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionConfiguration, &type metadata for PIIRedactionConfiguration);
    atomic_store(result, (unint64_t *)&qword_256046508);
  }
  return result;
}

unint64_t sub_23324451C()
{
  unint64_t result;

  result = qword_256046510;
  if (!qword_256046510)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InstitutionPrivacyLabels, &type metadata for InstitutionPrivacyLabels);
    atomic_store(result, (unint64_t *)&qword_256046510);
  }
  return result;
}

unint64_t sub_233244560()
{
  unint64_t result;

  result = qword_256046518;
  if (!qword_256046518)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Institution.ConsentSyncingConfiguration, &type metadata for Institution.ConsentSyncingConfiguration);
    atomic_store(result, (unint64_t *)&qword_256046518);
  }
  return result;
}

uint64_t sub_2332445A4()
{
  return sub_233167C58(&qword_256046528, type metadata accessor for Institution.BackgroundRefreshConfiguration, (uint64_t)&protocol conformance descriptor for Institution.BackgroundRefreshConfiguration);
}

unint64_t sub_2332445D4()
{
  unint64_t result;

  result = qword_256046530;
  if (!qword_256046530)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Institution.ConsentSyncingConfiguration, &type metadata for Institution.ConsentSyncingConfiguration);
    atomic_store(result, (unint64_t *)&qword_256046530);
  }
  return result;
}

uint64_t sub_233244618()
{
  return sub_233167C58(&qword_256046538, type metadata accessor for Institution, (uint64_t)&protocol conformance descriptor for Institution);
}

uint64_t sub_233244644()
{
  return MEMORY[0x24BEE0D10];
}

_QWORD *initializeBufferWithCopyOfBuffer for Institution(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *__dst;
  void (**__dsta)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *refreshed;
  unsigned int (*v55)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)(a1 + 34) = *((_WORD *)a2 + 17);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_QWORD *)(a1 + 72) = a2[9];
    v9 = a3[12];
    v10 = (uint64_t)a2 + v9;
    *(_DWORD *)(a1 + v9) = *(_DWORD *)((char *)a2 + v9);
    v53 = a1 + v9;
    refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
    v11 = refreshed[6];
    __dst = (void *)(v53 + v11);
    v51 = v10;
    v12 = (const void *)(v10 + v11);
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = refreshed[7];
    v19 = (void *)(v53 + v18);
    v20 = (const void *)(v51 + v18);
    if (v15((const void *)(v51 + v18), 1, v13))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    v22 = refreshed[8];
    v23 = v53 + v22;
    v24 = v51 + v22;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
    v25 = refreshed[9];
    v26 = v53 + v25;
    v27 = v51 + v25;
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v28 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)v4 + v28) = *((_BYTE *)a2 + v28);
    v29 = a3[15];
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = (int *)type metadata accessor for BankConnectTermsAndConditions();
    v33 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = v31[1];
      *v30 = *v31;
      v30[1] = v35;
      v36 = v32[5];
      v37 = (_QWORD *)v14;
      v38 = (char *)v30 + v36;
      v55 = (unsigned int (*)(char *, uint64_t, uint64_t))v15;
      v39 = v13;
      v40 = (char *)v31 + v36;
      __dsta = (void (**)(char *, _QWORD, uint64_t, uint64_t))v37;
      v52 = v33;
      v41 = (void (*)(char *, char *, uint64_t))v37[2];
      swift_bridgeObjectRetain();
      v41(v38, v40, v39);
      v42 = v32[6];
      v43 = (char *)v30 + v42;
      v44 = (char *)v31 + v42;
      if (v55((char *)v31 + v42, 1, v39))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v41(v43, v44, v39);
        __dsta[7](v43, 0, 1, v39);
      }
      v41((char *)v30 + v32[7], (char *)v31 + v32[7], v39);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v52 + 56))(v30, 0, 1, v32);
    }
    v46 = a3[17];
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)v4 + v46) = *((_BYTE *)a2 + v46);
    v47 = a3[19];
    *(_QWORD *)((char *)v4 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(_WORD *)((char *)v4 + v47) = *(_WORD *)((char *)a2 + v47);
    *(_OWORD *)((char *)v4 + a3[20]) = *(_OWORD *)((char *)a2 + a3[20]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Institution(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t refreshed;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v6 = v4 + *(int *)(refreshed + 24);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + *(int *)(refreshed + 28);
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = a1 + *(int *)(a2 + 60);
  v12 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v13(v11 + v12[5], v7);
    v14 = v11 + v12[6];
    if (!v9(v14, 1, v7))
      v13(v14, v7);
    v13(v11 + v12[7], v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Institution(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t refreshed;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *__dst;
  void (**__dsta)(char *, _QWORD, uint64_t, uint64_t);
  int *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v54)(char *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[12];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v11 = *(int *)(refreshed + 24);
  __dst = (void *)(v8 + v11);
  v50 = (int *)refreshed;
  v52 = v9;
  v12 = (void *)(v9 + v11);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = v15;
  if (v15((char *)v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v17 = v50[7];
  v18 = (void *)(v8 + v17);
  v19 = (const void *)(v52 + v17);
  if (v15((char *)(v52 + v17), 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  v21 = v50[8];
  v22 = v8 + v21;
  v23 = v52 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v24 = v50[9];
  v25 = v8 + v24;
  v26 = v52 + v24;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[15];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  v32 = *((_QWORD *)v31 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = v30[1];
    *v29 = *v30;
    v29[1] = v34;
    v35 = v31[5];
    v36 = (_QWORD *)v14;
    v37 = (char *)v29 + v35;
    v38 = v13;
    v39 = (char *)v30 + v35;
    __dsta = (void (**)(char *, _QWORD, uint64_t, uint64_t))v36;
    v51 = v32;
    v40 = (void (*)(char *, char *, uint64_t))v36[2];
    swift_bridgeObjectRetain();
    v40(v37, v39, v38);
    v41 = v31[6];
    v42 = (char *)v29 + v41;
    v43 = (char *)v30 + v41;
    if (v54((char *)v30 + v41, 1, v38))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v40(v42, v43, v38);
      __dsta[7](v42, 0, 1, v38);
    }
    v40((char *)v29 + v31[7], (char *)v30 + v31[7], v38);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v51 + 56))(v29, 0, 1, v31);
  }
  v45 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  v46 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_WORD *)(a1 + v46) = *(_WORD *)(a2 + v46);
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Institution(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *refreshed;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, int *);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v61)(char *, char *, uint64_t);
  int *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = a3;
  v7 = a3[12];
  v8 = (char *)(a1 + v7);
  v9 = a2 + v7;
  *(_WORD *)v8 = *(_WORD *)(a2 + v7);
  *((_WORD *)v8 + 1) = *(_WORD *)(a2 + v7 + 2);
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v11 = refreshed[6];
  v12 = &v8[v11];
  v13 = (char *)(v9 + v11);
  v14 = sub_23361D634();
  v66 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v16 = v15(v12, 1, v14);
  v65 = v15;
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v12, v13, v14);
LABEL_7:
  v19 = refreshed[7];
  v20 = &v8[v19];
  v21 = (char *)(v9 + v19);
  v22 = v15(&v8[v19], 1, v14);
  v23 = v15(v21, 1, v14);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v20, v21, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v20, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v20, v14);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v20, v21, v14);
LABEL_13:
  v25 = v62;
  v26 = refreshed[8];
  v27 = &v8[v26];
  v28 = (uint64_t *)(v9 + v26);
  v29 = *v28;
  v27[8] = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  v30 = refreshed[9];
  v31 = &v8[v30];
  v32 = (uint64_t *)(v9 + v30);
  v33 = *v32;
  v31[8] = *((_BYTE *)v32 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(a1 + v62[13]) = *(_BYTE *)(a2 + v62[13]);
  *(_BYTE *)(a1 + v62[14]) = *(_BYTE *)(a2 + v62[14]);
  v34 = v62[15];
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  v38 = *((_QWORD *)v37 - 1);
  v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (v41)
    {
      sub_233168500((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
      goto LABEL_19;
    }
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61 = *(void (**)(char *, char *, uint64_t))(v66 + 24);
    v61(&v35[v37[5]], &v36[v37[5]], v14);
    v51 = v37[6];
    v52 = &v35[v51];
    v53 = &v36[v51];
    v54 = v65(&v35[v51], 1, v14);
    v55 = v65(v53, 1, v14);
    if (v54)
    {
      if (!v55)
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v52, v53, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v52, 0, 1, v14);
LABEL_30:
        v25 = v62;
        v61(&v35[v37[7]], &v36[v37[7]], v14);
        goto LABEL_31;
      }
    }
    else
    {
      if (!v55)
      {
        v61(v52, v53, v14);
        v25 = v62;
        v61(&v35[v37[7]], &v36[v37[7]], v14);
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v14);
    }
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_30;
  }
  if (v41)
  {
LABEL_19:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  v42 = v37[5];
  v63 = &v35[v42];
  v43 = &v36[v42];
  v44 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  swift_bridgeObjectRetain();
  v45 = v63;
  v64 = v44;
  v44(v45, v43, v14);
  v46 = v37[6];
  v47 = &v35[v46];
  v48 = &v36[v46];
  if (v65(&v36[v46], 1, v14))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v64(v47, v48, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v47, 0, 1, v14);
  }
  v64(&v35[v37[7]], &v36[v37[7]], v14);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_31:
  *(_BYTE *)(a1 + v25[16]) = *(_BYTE *)(a2 + v25[16]);
  *(_BYTE *)(a1 + v25[17]) = *(_BYTE *)(a2 + v25[17]);
  *(_QWORD *)(a1 + v25[18]) = *(_QWORD *)(a2 + v25[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v25[19]) = *(_WORD *)(a2 + v25[19]);
  v57 = v25[20];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_BYTE *)v58 = *(_BYTE *)v59;
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  return a1;
}

uint64_t initializeWithTake for Institution(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  int *refreshed;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(char *, char *, uint64_t);
  char *__dst;
  unsigned int (*v42)(const void *, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[12];
  v8 = (_WORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_WORD *)(a2 + v7);
  v8[1] = *(_WORD *)(a2 + v7 + 2);
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v11 = refreshed[6];
  v12 = (char *)v8 + v11;
  v13 = (const void *)(v9 + v11);
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  v42 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v42(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = refreshed[7];
  v18 = (char *)v8 + v17;
  v19 = (const void *)(v9 + v17);
  if (v42((const void *)(v9 + v17), 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  v21 = refreshed[8];
  v22 = (char *)v8 + v21;
  v23 = v9 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = *(_BYTE *)(v23 + 8);
  v24 = refreshed[9];
  v25 = (char *)v8 + v24;
  v26 = v9 + v24;
  v25[8] = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[15];
  v29 = (_OWORD *)(a1 + v28);
  v30 = (_OWORD *)(a2 + v28);
  v31 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  v32 = *((_QWORD *)v31 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    *v29 = *v30;
    v40 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v40((char *)v29 + v31[5], (char *)v30 + v31[5], v14);
    v34 = v31[6];
    __dst = (char *)v29 + v34;
    v35 = (char *)v30 + v34;
    if (v42((char *)v30 + v34, 1, v14))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v40(__dst, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v40((char *)v29 + v31[7], (char *)v30 + v31[7], v14);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
  }
  v37 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v38 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_WORD *)(a1 + v38) = *(_WORD *)(a2 + v38);
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  return a1;
}

uint64_t assignWithTake for Institution(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *refreshed;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, int *);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v58)(char *, char *, uint64_t);
  void (*__src)(char *, char *, uint64_t);
  int *__dst;
  char *__dsta;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  __dst = a3;
  v8 = a3[12];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v12 = refreshed[6];
  v13 = (void *)(v9 + v12);
  v14 = (void *)(v10 + v12);
  v15 = sub_23361D634();
  v63 = *(_QWORD *)(v15 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  v17 = v16(v13, 1, v15);
  v62 = (uint64_t (*)(char *, uint64_t, uint64_t))v16;
  v18 = v16(v14, 1, v15);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v13, v15);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v13, v14, v15);
LABEL_7:
  v20 = refreshed[7];
  v21 = (void *)(v9 + v20);
  v22 = (void *)(v10 + v20);
  v23 = v16((void *)(v9 + v20), 1, v15);
  v24 = v16(v22, 1, v15);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v21, v22, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v21, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v21, v15);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v21, v22, v15);
LABEL_13:
  v26 = __dst;
  v27 = refreshed[8];
  v28 = v9 + v27;
  v29 = v10 + v27;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  v30 = refreshed[9];
  v31 = v9 + v30;
  v32 = v10 + v30;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v33 = __dst[14];
  *(_BYTE *)(a1 + __dst[13]) = *(_BYTE *)(a2 + __dst[13]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = __dst[15];
  v35 = (char *)(a1 + v34);
  v36 = (char *)(a2 + v34);
  v37 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  v38 = *((_QWORD *)v37 - 1);
  v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (v41)
    {
      sub_233168500((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
      goto LABEL_19;
    }
    v46 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v46;
    swift_bridgeObjectRelease();
    v58 = *(void (**)(char *, char *, uint64_t))(v63 + 40);
    v58(&v35[v37[5]], &v36[v37[5]], v15);
    v47 = v37[6];
    v48 = &v35[v47];
    v49 = &v36[v47];
    v50 = v62(&v35[v47], 1, v15);
    v51 = v62(v49, 1, v15);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v48, v49, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v48, 0, 1, v15);
LABEL_30:
        v26 = __dst;
        v58(&v35[v37[7]], &v36[v37[7]], v15);
        goto LABEL_31;
      }
    }
    else
    {
      if (!v51)
      {
        v58(v48, v49, v15);
        v26 = __dst;
        v58(&v35[v37[7]], &v36[v37[7]], v15);
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v15);
    }
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_30;
  }
  if (v41)
  {
LABEL_19:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
  __src = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  __src(&v35[v37[5]], &v36[v37[5]], v15);
  v42 = v37[6];
  __dsta = &v35[v42];
  v43 = &v36[v42];
  if (v62(&v36[v42], 1, v15))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dsta, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    __src(__dsta, v43, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v15);
  }
  __src(&v35[v37[7]], &v36[v37[7]], v15);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_31:
  v53 = v26[17];
  *(_BYTE *)(a1 + v26[16]) = *(_BYTE *)(a2 + v26[16]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  *(_QWORD *)(a1 + v26[18]) = *(_QWORD *)(a2 + v26[18]);
  swift_bridgeObjectRelease();
  v54 = v26[20];
  *(_WORD *)(a1 + v26[19]) = *(_WORD *)(a2 + v26[19]);
  v55 = a1 + v54;
  v56 = a2 + v54;
  *(_BYTE *)v55 = *(_BYTE *)v56;
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(v56 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Institution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233245DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t refreshed;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
    v9 = *(_QWORD *)(refreshed - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = refreshed;
      v11 = *(int *)(a3 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Institution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233245E74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t refreshed;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
    v9 = *(_QWORD *)(refreshed - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = refreshed;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_233245F14()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Institution.BackgroundRefreshConfiguration(319);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, &qword_254247CD8, (void (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditions);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Institution.BackgroundRefreshConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23361D634();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v4 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = (char *)v4 + v20;
    v24 = (char *)a2 + v20;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
  }
  return v4;
}

uint64_t destroy for Institution.BackgroundRefreshConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_DWORD *initializeWithCopy for Institution.BackgroundRefreshConfiguration(_DWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  *a1 = *(_DWORD *)a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = (char *)a1 + v18;
  v22 = &a2[v18];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  return a1;
}

char *assignWithCopy for Institution.BackgroundRefreshConfiguration(char *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *(_WORD *)a1 = *a2;
  *((_WORD *)a1 + 1) = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  return a1;
}

_DWORD *initializeWithTake for Institution.BackgroundRefreshConfiguration(_DWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  *a1 = *(_DWORD *)a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = (char *)a1 + v18;
  v22 = &a2[v18];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  return a1;
}

char *assignWithTake for Institution.BackgroundRefreshConfiguration(char *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;

  *(_DWORD *)a1 = *a2;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[8];
  v22 = a3[9];
  v23 = &a1[v21];
  v24 = (char *)a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = &a1[v22];
  v26 = (char *)a2 + v22;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for Institution.BackgroundRefreshConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233246950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v6);
}

uint64_t storeEnumTagSinglePayload for Institution.BackgroundRefreshConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332469AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 24), a2, a2, v7);
}

void sub_233246A00()
{
  unint64_t v0;

  sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for Institution.ConsentSyncingConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Institution.ConsentSyncingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Institution.ConsentSyncingConfiguration()
{
  return &type metadata for Institution.ConsentSyncingConfiguration;
}

uint64_t getEnumTagSinglePayload for TransactionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Institution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_233246C14 + 4 * byte_23363010C[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_233246C48 + 4 * byte_233630107[v4]))();
}

uint64_t sub_233246C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233246C58);
  return result;
}

uint64_t sub_233246C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233246C6CLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_233246C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Institution.CodingKeys()
{
  return &type metadata for Institution.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Institution.ConsentSyncingConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233246CE0 + 4 * byte_233630116[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233246D14 + 4 * byte_233630111[v4]))();
}

uint64_t sub_233246D14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246D1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233246D24);
  return result;
}

uint64_t sub_233246D30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233246D38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233246D3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246D44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Institution.ConsentSyncingConfiguration.CodingKeys()
{
  return &type metadata for Institution.ConsentSyncingConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Institution.BackgroundRefreshConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233246DAC + 4 * byte_233630120[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233246DE0 + 4 * byte_23363011B[v4]))();
}

uint64_t sub_233246DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233246DF0);
  return result;
}

uint64_t sub_233246DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233246E04);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233246E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233246E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Institution.BackgroundRefreshConfiguration.CodingKeys()
{
  return &type metadata for Institution.BackgroundRefreshConfiguration.CodingKeys;
}

unint64_t sub_233246E30()
{
  unint64_t result;

  result = qword_256046540;
  if (!qword_256046540)
  {
    result = MEMORY[0x234934494](&unk_233630588, &type metadata for Institution.BackgroundRefreshConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046540);
  }
  return result;
}

unint64_t sub_233246E78()
{
  unint64_t result;

  result = qword_256046548;
  if (!qword_256046548)
  {
    result = MEMORY[0x234934494](&unk_233630640, &type metadata for Institution.ConsentSyncingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046548);
  }
  return result;
}

unint64_t sub_233246EC0()
{
  unint64_t result;

  result = qword_256046550;
  if (!qword_256046550)
  {
    result = MEMORY[0x234934494](&unk_2336306F8, &type metadata for Institution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046550);
  }
  return result;
}

unint64_t sub_233246F08()
{
  unint64_t result;

  result = qword_256046558;
  if (!qword_256046558)
  {
    result = MEMORY[0x234934494](&unk_233630668, &type metadata for Institution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046558);
  }
  return result;
}

unint64_t sub_233246F50()
{
  unint64_t result;

  result = qword_256046560;
  if (!qword_256046560)
  {
    result = MEMORY[0x234934494](&unk_233630690, &type metadata for Institution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046560);
  }
  return result;
}

unint64_t sub_233246F98()
{
  unint64_t result;

  result = qword_256046568;
  if (!qword_256046568)
  {
    result = MEMORY[0x234934494](&unk_2336305B0, &type metadata for Institution.ConsentSyncingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046568);
  }
  return result;
}

unint64_t sub_233246FE0()
{
  unint64_t result;

  result = qword_256046570;
  if (!qword_256046570)
  {
    result = MEMORY[0x234934494](&unk_2336305D8, &type metadata for Institution.ConsentSyncingConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046570);
  }
  return result;
}

unint64_t sub_233247028()
{
  unint64_t result;

  result = qword_256046578;
  if (!qword_256046578)
  {
    result = MEMORY[0x234934494](&unk_2336304F8, &type metadata for Institution.BackgroundRefreshConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046578);
  }
  return result;
}

unint64_t sub_233247070()
{
  unint64_t result;

  result = qword_256046580;
  if (!qword_256046580)
  {
    result = MEMORY[0x234934494](&unk_233630520, &type metadata for Institution.BackgroundRefreshConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046580);
  }
  return result;
}

uint64_t sub_2332470B4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x800000023366D640 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023366D660 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7466417972746572 && a2 == 0xEE00657461447265 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726665527473616CLL && a2 == 0xEF65746144687365 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366D680 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023366D6A0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23324735C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C62616E457369 && a2 == 0xE900000000000064;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023366D6C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233247454(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736E6F636572 && a2 == 0xED00006570795474 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366D6E0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023366D700 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023366D720 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023366D740 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023366D770 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023366D790 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023366D7B0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023366D7D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366D7F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023366D810 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023366D830 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023366D850 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x4C79636176697270 && a2 == 0xED0000736C656261 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023366D870)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

id XPCSecureCodingCodableWrapper.value.getter()
{
  id *v0;

  return *v0;
}

void XPCSecureCodingCodableWrapper.value.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*XPCSecureCodingCodableWrapper.value.modify())()
{
  return nullsub_1;
}

uint64_t XPCSecureCodingCodableWrapper.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t XPCSecureCodingCodableWrapper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_233247C98();
    sub_23361F248();
    sub_233168668(0, &qword_2560430A0);
    sub_2331D1374(v8, v9);
    v5 = sub_23361E81C();
    v7 = v5;
    if (v5)
    {
      sub_23316BEA4(v8, v9);
      sub_23316BEA4(v8, v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      *a2 = v7;
    }
    else
    {
      sub_23361EE10();
      swift_allocError();
      sub_23361EDD4();
      swift_willThrow();
      sub_23316BEA4(v8, v9);
      sub_23316BEA4(v8, v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_233247C98()
{
  unint64_t result;

  result = qword_256046590;
  if (!qword_256046590)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for XPCDataWrapper, &type metadata for XPCDataWrapper);
    atomic_store(result, (unint64_t *)&qword_256046590);
  }
  return result;
}

uint64_t XPCSecureCodingCodableWrapper.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v10;
  id v11[6];

  v11[5] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *v1;
  v11[0] = 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v3, 1, v11);
  v5 = v11[0];
  if (v4)
  {
    v6 = sub_23361D3C4();
    v8 = v7;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2331D1374(v6, v8);
    sub_23361F404();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, (uint64_t)v11[3]);
    sub_233247E50();
    sub_23361F26C();
    sub_23316BEA4(v6, v8);
    sub_23316BEA4(v6, v8);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    v10 = v5;
    sub_23361D1B4();

    return swift_willThrow();
  }
}

unint64_t sub_233247E50()
{
  unint64_t result;

  result = qword_2560465A0;
  if (!qword_2560465A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for XPCDataWrapper, &type metadata for XPCDataWrapper);
    atomic_store(result, (unint64_t *)&qword_2560465A0);
  }
  return result;
}

uint64_t sub_233247E94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCSecureCodingCodableWrapper.init(from:)(a1, a2);
}

uint64_t sub_233247EAC(_QWORD *a1)
{
  return XPCSecureCodingCodableWrapper.encode(to:)(a1);
}

uint64_t static XPCSecureCodingCodableWrapper.== infix(_:_:)()
{
  sub_233168668(0, (unint64_t *)&qword_254247F98);
  return sub_23361EA14() & 1;
}

uint64_t type metadata accessor for XPCSecureCodingCodableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCSecureCodingCodableWrapper);
}

void sub_233247F20(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v10, &qword_254248700);
  v11 = *a2;
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);

}

uint64_t sub_233248004@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_23361D2D4();

    v6 = sub_23361D340();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = sub_23361D340();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

id ManagedTransactionActions.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransactionActions.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransactionActions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTransactionActions.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit25ManagedTransactionActions;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id ManagedTransactionActions.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  id v31;
  void *v32;
  int v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v43 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v43 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for Actions();
  v22 = *((_QWORD *)v21 - 1);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  sub_2331686A0(a1, (uint64_t)v20, &qword_2560465A8);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21) == 1)
  {

    sub_233248660(a1);
    sub_233248660((uint64_t)v20);
  }
  else
  {
    v44 = a2;
    v45 = a1;
    sub_2332486A0((uint64_t)v20, (uint64_t)v24);
    sub_2331686A0((uint64_t)v24, (uint64_t)v17, &qword_254248700);
    v26 = v25;
    v27 = sub_23361D340();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v17, 1, v27);
    v43 = v26;
    v31 = v26;
    v32 = 0;
    if (v30 != 1)
    {
      v32 = (void *)sub_23361D268();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
    }
    objc_msgSend(v31, sel_setTransferFunds_, v32);

    sub_2331686A0((uint64_t)&v24[v21[5]], (uint64_t)v15, &qword_254248700);
    v33 = v29(v15, 1, v27);
    v34 = (uint64_t)v47;
    if (v33 == 1)
    {
      v35 = 0;
    }
    else
    {
      v35 = (void *)sub_23361D268();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
    }
    v36 = (uint64_t)v48;
    objc_msgSend(v31, sel_setPayNow_, v35);

    v37 = v46;
    sub_2331686A0((uint64_t)&v24[v21[6]], v46, &qword_254248700);
    if (v29((char *)v37, 1, v27) == 1)
    {
      v38 = 0;
    }
    else
    {
      v38 = (void *)sub_23361D268();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v27);
    }
    objc_msgSend(v31, sel_setDigitalServicing_, v38);

    sub_2331686A0((uint64_t)&v24[v21[7]], v34, &qword_254248700);
    if (v29((char *)v34, 1, v27) == 1)
    {
      v39 = 0;
    }
    else
    {
      v39 = (void *)sub_23361D268();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v27);
    }
    objc_msgSend(v31, sel_setPostInstallment_, v39);

    sub_2331686A0((uint64_t)&v24[v21[8]], v36, &qword_254248700);
    if (v29((char *)v36, 1, v27) == 1)
    {
      v40 = 0;
    }
    else
    {
      v40 = (void *)sub_23361D268();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v36, v27);
    }
    v41 = v45;
    objc_msgSend(v31, sel_setRedeemRewards_, v40);

    sub_233248660(v41);
    sub_233168500((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
    return v43;
  }
  return v25;
}

{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  _s10FinanceKit25ManagedTransactionActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(v5, a1);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
  return v5;
}

uint64_t sub_233248660(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2332486A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void Actions.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  char *v49;
  uint64_t v50;

  v50 = a2;
  v3 = (int *)type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v47 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v47 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  v21 = objc_msgSend(a1, sel_transferFunds);
  if (v21)
  {
    v22 = v21;
    sub_23361D2D4();

    v23 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 0, 1, v23);
  }
  else
  {
    v24 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
  }
  v25 = objc_msgSend(a1, sel_payNow);
  if (v25)
  {
    v26 = v25;
    sub_23361D2D4();

    v27 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 0, 1, v27);
  }
  else
  {
    v28 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
  }
  v29 = objc_msgSend(a1, sel_digitalServicing);
  if (v29)
  {
    v30 = v29;
    sub_23361D2D4();

    v31 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
  }
  else
  {
    v32 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 1, 1, v32);
  }
  v33 = objc_msgSend(a1, sel_postInstallment);
  if (v33)
  {
    v34 = v33;
    sub_23361D2D4();

    v35 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 0, 1, v35);
  }
  else
  {
    v36 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 1, 1, v36);
  }
  v47 = v20;
  v48 = a1;
  v37 = objc_msgSend(a1, sel_redeemRewards);
  v49 = v12;
  if (v37)
  {
    v38 = v37;
    v39 = (uint64_t)v18;
    sub_23361D2D4();

    v40 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 0, 1, v40);
  }
  else
  {
    v39 = (uint64_t)v18;
    v40 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 1, 1, v40);
  }
  v41 = (uint64_t)v9;
  sub_23361D340();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v42(v5, 1, 1, v40);
  v43 = (uint64_t)&v5[v3[5]];
  v42((char *)v43, 1, 1, v40);
  v44 = (uint64_t)&v5[v3[6]];
  v42((char *)v44, 1, 1, v40);
  v45 = (uint64_t)&v5[v3[7]];
  v42((char *)v45, 1, 1, v40);
  v46 = (uint64_t)&v5[v3[8]];
  v42((char *)v46, 1, 1, v40);
  sub_2331AAFB8((uint64_t)v47, (uint64_t)v5);
  sub_2331AAFB8(v39, v43);
  sub_2331AAFB8((uint64_t)v15, v44);
  sub_2331AAFB8((uint64_t)v49, v45);
  sub_2331AAFB8(v41, v46);
  sub_2332486A0((uint64_t)v5, v50);

}

{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  char *v49;
  uint64_t v50;

  v50 = a2;
  v3 = (int *)type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v47 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v47 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  v21 = objc_msgSend(a1, sel_transferFunds);
  if (v21)
  {
    v22 = v21;
    sub_23361D2D4();

    v23 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 0, 1, v23);
  }
  else
  {
    v24 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
  }
  v25 = objc_msgSend(a1, sel_payNow);
  if (v25)
  {
    v26 = v25;
    sub_23361D2D4();

    v27 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 0, 1, v27);
  }
  else
  {
    v28 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 1, 1, v28);
  }
  v29 = objc_msgSend(a1, sel_digitalServicing);
  if (v29)
  {
    v30 = v29;
    sub_23361D2D4();

    v31 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
  }
  else
  {
    v32 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 1, 1, v32);
  }
  v33 = objc_msgSend(a1, sel_postInstallment);
  if (v33)
  {
    v34 = v33;
    sub_23361D2D4();

    v35 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 0, 1, v35);
  }
  else
  {
    v36 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 1, 1, v36);
  }
  v47 = v20;
  v48 = a1;
  v37 = objc_msgSend(a1, sel_redeemRewards);
  v49 = v12;
  if (v37)
  {
    v38 = v37;
    v39 = (uint64_t)v18;
    sub_23361D2D4();

    v40 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 0, 1, v40);
  }
  else
  {
    v39 = (uint64_t)v18;
    v40 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 1, 1, v40);
  }
  v41 = (uint64_t)v9;
  sub_23361D340();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v42(v5, 1, 1, v40);
  v43 = (uint64_t)&v5[v3[5]];
  v42((char *)v43, 1, 1, v40);
  v44 = (uint64_t)&v5[v3[6]];
  v42((char *)v44, 1, 1, v40);
  v45 = (uint64_t)&v5[v3[7]];
  v42((char *)v45, 1, 1, v40);
  v46 = (uint64_t)&v5[v3[8]];
  v42((char *)v46, 1, 1, v40);
  sub_2331AAFB8((uint64_t)v47, (uint64_t)v5);
  sub_2331AAFB8(v39, v43);
  sub_2331AAFB8((uint64_t)v15, v44);
  sub_2331AAFB8((uint64_t)v49, v45);
  sub_2331AAFB8(v41, v46);
  sub_2332486A0((uint64_t)v5, v50);

}

void _s10FinanceKit25ManagedTransactionActionsC6update_5usingyAC_AA18RawBankConnectDataO0E0VtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  int *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v29 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v29 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  sub_2331686A0(a2, (uint64_t)&v29 - v16, &qword_254248700);
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(v17, 1, v18) != 1)
  {
    v21 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  objc_msgSend(a1, sel_setTransferFunds_, v21);

  v22 = (int *)type metadata accessor for RawBankConnectData.Actions();
  sub_2331686A0(a2 + v22[5], (uint64_t)v15, &qword_254248700);
  v23 = 0;
  if (v20(v15, 1, v18) != 1)
  {
    v23 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  objc_msgSend(a1, sel_setPayNow_, v23);

  sub_2331686A0(a2 + v22[6], (uint64_t)v12, &qword_254248700);
  if (v20(v12, 1, v18) == 1)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v18);
  }
  objc_msgSend(a1, sel_setDigitalServicing_, v24);

  sub_2331686A0(a2 + v22[7], (uint64_t)v9, &qword_254248700);
  if (v20(v9, 1, v18) == 1)
  {
    v25 = 0;
  }
  else
  {
    v25 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
  }
  objc_msgSend(a1, sel_setPostInstallment_, v25);

  v26 = a2 + v22[8];
  v27 = v30;
  sub_2331686A0(v26, v30, &qword_254248700);
  if (v20((char *)v27, 1, v18) == 1)
  {
    v28 = 0;
  }
  else
  {
    v28 = (void *)sub_23361D268();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v27, v18);
  }
  objc_msgSend(a1, sel_setRedeemRewards_, v28);

}

char *keypath_get_selector_transferFunds()
{
  return sel_transferFunds;
}

uint64_t sub_233248EC4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_transferFunds, a2);
}

void sub_233248EE0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233247F20(a1, a2, a3, a4, (SEL *)&selRef_setTransferFunds_);
}

char *keypath_get_selector_payNow()
{
  return sel_payNow;
}

uint64_t sub_233248F08@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_payNow, a2);
}

void sub_233248F24(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233247F20(a1, a2, a3, a4, (SEL *)&selRef_setPayNow_);
}

char *keypath_get_selector_digitalServicing()
{
  return sel_digitalServicing;
}

uint64_t sub_233248F4C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_digitalServicing, a2);
}

void sub_233248F68(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233247F20(a1, a2, a3, a4, (SEL *)&selRef_setDigitalServicing_);
}

char *keypath_get_selector_postInstallment()
{
  return sel_postInstallment;
}

uint64_t sub_233248F90@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_postInstallment, a2);
}

void sub_233248FAC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233247F20(a1, a2, a3, a4, (SEL *)&selRef_setPostInstallment_);
}

char *keypath_get_selector_redeemRewards()
{
  return sel_redeemRewards;
}

uint64_t sub_233248FD4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233248004(a1, (SEL *)&selRef_redeemRewards, a2);
}

void sub_233248FF0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233247F20(a1, a2, a3, a4, (SEL *)&selRef_setRedeemRewards_);
}

uint64_t type metadata accessor for ManagedTransactionActions()
{
  return objc_opt_self();
}

FinanceKit::FinanceStoreAnalyticsEventsBuilder::OrdersEndpoint_optional __swiftcall FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::FinanceStoreAnalyticsEventsBuilder::OrdersEndpoint_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2332490C0 + 4 * byte_233630920[*v0]))(0x736E6961746E6F63, 0xED0000726564724FLL);
}

unint64_t sub_2332490C0()
{
  return 0xD000000000000011;
}

uint64_t sub_2332491E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_233228EBC(*a1, *a2);
}

uint64_t sub_2332491F4()
{
  sub_23361F350();
  FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233249258()
{
  FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2332492A8()
{
  sub_23361F350();
  FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::FinanceStoreAnalyticsEventsBuilder::OrdersEndpoint_optional sub_233249308(Swift::String *a1)
{
  return FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.init(rawValue:)(*a1);
}

uint64_t sub_233249314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FinanceStoreAnalyticsEventsBuilder.makeOrdersAPICalledEvent(bundleIdentifier:endpoint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  char v7;
  uint64_t v8;

  v7 = *a3;
  a4[3] = (uint64_t)&type metadata for FinanceStoreAnalyticsEventsBuilder.APICalledEvent;
  a4[4] = (uint64_t)&off_250474C20;
  v8 = swift_allocObject();
  *a4 = v8;
  *(_QWORD *)(v8 + 16) = 0xD000000000000023;
  *(_QWORD *)(v8 + 24) = 0x800000023366D940;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_BYTE *)(v8 + 48) = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2332493C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2332493F0()
{
  unint64_t result;

  result = qword_2560465B0;
  if (!qword_2560465B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint, &type metadata for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint);
    atomic_store(result, (unint64_t *)&qword_2560465B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_233249510 + 4 * byte_233630931[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_233249544 + 4 * byte_23363092C[v4]))();
}

uint64_t sub_233249544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23324954C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233249554);
  return result;
}

uint64_t sub_233249560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233249568);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23324956C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233249574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint()
{
  return &type metadata for FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint;
}

ValueMetadata *type metadata accessor for FinanceStoreAnalyticsEventsBuilder()
{
  return &type metadata for FinanceStoreAnalyticsEventsBuilder;
}

uint64_t initializeWithCopy for FinanceStoreAnalyticsEventsBuilder.APICalledEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FinanceStoreAnalyticsEventsBuilder.APICalledEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FinanceStoreAnalyticsEventsBuilder.APICalledEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FinanceStoreAnalyticsEventsBuilder.APICalledEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FinanceStoreAnalyticsEventsBuilder.APICalledEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceStoreAnalyticsEventsBuilder.APICalledEvent()
{
  return &type metadata for FinanceStoreAnalyticsEventsBuilder.APICalledEvent;
}

unint64_t sub_233249740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560465B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x800000023366D970;
  if (v1)
  {
    swift_bridgeObjectRetain();
    if ((sub_23324987C() & 1) == 0)
      swift_bridgeObjectRelease();
  }
  v3 = sub_23361E12C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = 0x746E696F70646E65;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  FinanceStoreAnalyticsEventsBuilder.OrdersEndpoint.rawValue.getter();
  v4 = sub_23361E12C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v4;
  return sub_233160218(inited);
}

uint64_t sub_23324987C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_23361E294();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_23361E294();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_23361E294();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_23361E294();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2332499E0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CloudOrderQuery.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CloudOrderQuery.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*CloudOrderQuery.limit.modify())()
{
  return nullsub_1;
}

void *CloudOrderQuery.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void CloudOrderQuery.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*CloudOrderQuery.predicate.modify())()
{
  return nullsub_1;
}

uint64_t CloudOrderQuery.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CloudOrderQuery.sortDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CloudOrderQuery.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t CloudOrderQuery.init(limit:predicate:sortDescriptors:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_233249AF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23324A470();
  *a1 = result;
  return result;
}

uint64_t sub_233249B1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23324A470();
  *a1 = result;
  return result;
}

uint64_t sub_233249B40()
{
  sub_23324A278();
  return sub_23361F428();
}

uint64_t sub_233249B68()
{
  sub_23324A278();
  return sub_23361F434();
}

void CloudOrderQuery.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23324A278();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  else
  {
    LOBYTE(v28) = 0;
    v9 = sub_23361EFF0();
    v11 = v10;
    v27 = v9;
    LOBYTE(v28) = 1;
    v12 = sub_23361F0A4();
    if ((v12 & 1) != 0)
    {
      v30 = 1;
      sub_2331A6B08();
      sub_23361F068();
      v26 = a2;
      v13 = v28;
      v14 = v29;
      sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_254247FB0);
      v25 = v14;
      v21 = (void *)sub_23361E81C();
      sub_23316BEA4(v13, v25);
    }
    else
    {
      v26 = a2;
      v21 = 0;
    }
    LOBYTE(v28) = 2;
    if ((sub_23361F0A4() & 1) != 0)
    {
      v30 = 2;
      sub_2331A6B08();
      sub_23361F068();
      v18 = v28;
      v19 = v29;
      v25 = sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      v23 = v18;
      v24 = v19;
      v20 = sub_23361E834();
      if (v20)
        v15 = v20;
      else
        v15 = MEMORY[0x24BEE4AF8];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_23316BEA4(v23, v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v15 = 0;
    }
    v16 = v26;
    *v26 = v27;
    *((_BYTE *)v16 + 8) = v11 & 1;
    v16[2] = (uint64_t)v21;
    v16[3] = v15;
    swift_bridgeObjectRetain();
    v17 = v21;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

uint64_t CloudOrderQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)v1;
  v8 = *(_BYTE *)(v1 + 8);
  v9 = *(void **)(v1 + 16);
  v33 = *(_QWORD *)(v1 + 24);
  v34 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23324A278();
  sub_23361F410();
  v37 = v7;
  LOBYTE(v38) = v8;
  v10 = v6;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560430B0);
  sub_2331A6B4C();
  v11 = v35;
  sub_23361F17C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v4;
  v15 = v33;
  v14 = v34;
  if (v34)
  {
    v16 = (void *)objc_opt_self();
    v37 = 0;
    v17 = v14;
    v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, &v37);
    v19 = v37;
    if (!v18)
    {
      v23 = v19;
      sub_23361D1B4();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
    }
    v20 = (void *)sub_23361D3C4();
    v22 = v21;

    v37 = v20;
    v38 = v22;
    v36 = 1;
    sub_2331A6BA8();
    sub_23361F17C();

    sub_23316BEA4((uint64_t)v20, v22);
  }
  if (v15)
  {
    v24 = (void *)objc_opt_self();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v25 = (void *)sub_23361E3D8();
    v37 = 0;
    v26 = objc_msgSend(v24, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 1, &v37);

    v27 = v37;
    if (v26)
    {
      v28 = (void *)sub_23361D3C4();
      v30 = v29;

      v37 = v28;
      v38 = v30;
      v36 = 2;
      sub_2331A6BA8();
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v3);
      return sub_23316BEA4((uint64_t)v28, v30);
    }
    v31 = v27;
    sub_23361D1B4();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
}

void sub_23324A250(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  CloudOrderQuery.init(from:)(a1, a2);
}

uint64_t sub_23324A264(_QWORD *a1)
{
  return CloudOrderQuery.encode(to:)(a1);
}

unint64_t sub_23324A278()
{
  unint64_t result;

  result = qword_2560465C8;
  if (!qword_2560465C8)
  {
    result = MEMORY[0x234934494](&unk_233630C14, &type metadata for CloudOrderQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560465C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudOrderQuery()
{
  return &type metadata for CloudOrderQuery;
}

uint64_t storeEnumTagSinglePayload for CloudOrderQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23324A318 + 4 * byte_233630A69[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23324A34C + 4 * byte_233630A64[v4]))();
}

uint64_t sub_23324A34C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23324A354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23324A35CLL);
  return result;
}

uint64_t sub_23324A368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23324A370);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23324A374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23324A37C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudOrderQuery.CodingKeys()
{
  return &type metadata for CloudOrderQuery.CodingKeys;
}

unint64_t sub_23324A39C()
{
  unint64_t result;

  result = qword_2560465F0;
  if (!qword_2560465F0)
  {
    result = MEMORY[0x234934494](&unk_233630BEC, &type metadata for CloudOrderQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560465F0);
  }
  return result;
}

unint64_t sub_23324A3E4()
{
  unint64_t result;

  result = qword_2560465F8;
  if (!qword_2560465F8)
  {
    result = MEMORY[0x234934494](&unk_233630B24, &type metadata for CloudOrderQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560465F8);
  }
  return result;
}

unint64_t sub_23324A42C()
{
  unint64_t result;

  result = qword_256046600;
  if (!qword_256046600)
  {
    result = MEMORY[0x234934494](&unk_233630B4C, &type metadata for CloudOrderQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256046600);
  }
  return result;
}

uint64_t sub_23324A470()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t AccountMatch.init(id:fullyQualifiedAccountIdentifier:fpanID:matchingType:isMismatched:lastUpdatedAt:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;

  v24 = *a2;
  v14 = *((_QWORD *)a2 + 2);
  v15 = *((_QWORD *)a2 + 3);
  v16 = *a5;
  v17 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a8, a1, v17);
  v18 = (int *)type metadata accessor for AccountMatch();
  v19 = a8 + v18[5];
  *(_OWORD *)v19 = v24;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v15;
  v20 = (_QWORD *)(a8 + v18[6]);
  *v20 = a3;
  v20[1] = a4;
  *(_BYTE *)(a8 + v18[7]) = v16;
  *(_BYTE *)(a8 + v18[8]) = a6;
  v21 = a8 + v18[9];
  v22 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a7, v22);
}

uint64_t type metadata accessor for AccountMatch()
{
  uint64_t result;

  result = qword_256046660;
  if (!qword_256046660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AccountMatch.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AccountMatch.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AccountMatch.id.modify())()
{
  return nullsub_1;
}

uint64_t AccountMatch.fullyQualifiedAccountIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AccountMatch() + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 AccountMatch.fullyQualifiedAccountIdentifier.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for AccountMatch() + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*AccountMatch.fullyQualifiedAccountIdentifier.modify())()
{
  type metadata accessor for AccountMatch();
  return nullsub_1;
}

uint64_t AccountMatch.fpanID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountMatch() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountMatch.fpanID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccountMatch() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccountMatch.fpanID.modify())()
{
  type metadata accessor for AccountMatch();
  return nullsub_1;
}

uint64_t AccountMatch.matchingType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountMatch();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AccountMatch.matchingType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AccountMatch();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*AccountMatch.matchingType.modify())()
{
  type metadata accessor for AccountMatch();
  return nullsub_1;
}

uint64_t AccountMatch.isMismatched.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccountMatch() + 32));
}

uint64_t AccountMatch.isMismatched.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountMatch();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*AccountMatch.isMismatched.modify())()
{
  type metadata accessor for AccountMatch();
  return nullsub_1;
}

uint64_t AccountMatch.lastUpdatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountMatch() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AccountMatch.lastUpdatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountMatch() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AccountMatch.lastUpdatedAt.modify())()
{
  type metadata accessor for AccountMatch();
  return nullsub_1;
}

uint64_t _s10FinanceKit12AccountMatchV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;

  if ((sub_23361D670() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for AccountMatch();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = *(_QWORD *)(a1 + v5 + 16);
  v9 = *(_QWORD *)(a1 + v5 + 24);
  v10 = (_QWORD *)(a2 + v5);
  v11 = v10[2];
  v12 = v10[3];
  v13 = v6 == *v10 && v7 == v10[1];
  if ((v13 || (sub_23361F224() & 1) != 0)
    && (v8 == v11 ? (v14 = v9 == v12) : (v14 = 0),
        (v14 || (sub_23361F224() & 1) != 0)
     && ((v15 = v4[6],
          v16 = *(_QWORD *)(a1 + v15),
          v17 = *(_QWORD *)(a1 + v15 + 8),
          v18 = (_QWORD *)(a2 + v15),
          v16 == *v18)
       ? (v19 = v17 == v18[1])
       : (v19 = 0),
         (v19 || (sub_23361F224() & 1) != 0)
      && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7])
      && *(unsigned __int8 *)(a1 + v4[8]) == *(unsigned __int8 *)(a2 + v4[8]))))
  {
    return sub_23361D5E0();
  }
  else
  {
    return 0;
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountMatch(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    v14 = (_QWORD *)((char *)a1 + v9);
    v15 = (_QWORD *)((char *)a2 + v9);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    LOBYTE(v14) = *((_BYTE *)a2 + v17);
    v18 = a3[9];
    v19 = (char *)a2 + v18;
    v20 = (char *)a1 + v18;
    *((_BYTE *)a1 + v17) = (_BYTE)v14;
    v21 = sub_23361D634();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v20, v19, v21);
  }
  return a1;
}

uint64_t destroy for AccountMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for AccountMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  LOBYTE(v13) = *(_BYTE *)(a2 + v16);
  v17 = a3[9];
  v18 = a2 + v17;
  v19 = a1 + v17;
  *(_BYTE *)(a1 + v16) = (_BYTE)v13;
  v20 = sub_23361D634();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v19, v18, v20);
  return a1;
}

uint64_t assignWithCopy for AccountMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for AccountMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for AccountMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountMatch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23324AFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23361D634();
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountMatch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23324B098(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_23361D634();
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23324B140()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_23324B1EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  v1 = *v0;
  v3 = v0[2];
  v2 = v0[3];
  v4 = v0[4];
  v5 = v0[6];
  v39 = v0[1];
  v40 = v0[7];
  v6 = v0[8];
  v41 = v0[9];
  v42 = v0[5];
  v7 = v0[12];
  v43 = v0[11];
  v44 = v0[10];
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v45 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2334A4AA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_2334A4AA4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v11[4] = v2;
    v11[5] = v4;
    v45 = v8;
  }
  if (v1)
  {
    v12 = swift_bridgeObjectRetain();
    sub_233189424(v12);
    v8 = v45;
  }
  if (!v8[2])
  {
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v20 = v7;
    if (v3)
      goto LABEL_11;
LABEL_18:
    v21 = v5;
    v22 = v44;
    if (!v6)
      goto LABEL_24;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23319C29C();
  v13 = sub_23361E0D8();
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = sub_2334A50D8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_2334A50D8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v19 = &v16[3 * v18];
  v19[4] = v13;
  v19[5] = v15;
  *((_BYTE *)v19 + 48) = 0;
  v20 = v7;
  if (!v3)
    goto LABEL_18;
LABEL_11:
  swift_bridgeObjectRetain();
  v21 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_2334A50D8(0, v16[2] + 1, 1, v16);
  v22 = v44;
  v24 = v16[2];
  v23 = v16[3];
  if (v24 >= v23 >> 1)
    v16 = sub_2334A50D8((_QWORD *)(v23 > 1), v24 + 1, 1, v16);
  v16[2] = v24 + 1;
  v25 = &v16[3 * v24];
  v25[4] = v39;
  v25[5] = v3;
  *((_BYTE *)v25 + 48) = 1;
  if (v6)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_2334A50D8(0, v16[2] + 1, 1, v16);
    v27 = v16[2];
    v26 = v16[3];
    if (v27 >= v26 >> 1)
      v16 = sub_2334A50D8((_QWORD *)(v26 > 1), v27 + 1, 1, v16);
    v16[2] = v27 + 1;
    v28 = &v16[3 * v27];
    v28[4] = v40;
    v28[5] = v6;
    *((_BYTE *)v28 + 48) = 4;
  }
LABEL_24:
  if (v22)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_2334A50D8(0, v16[2] + 1, 1, v16);
    v30 = v16[2];
    v29 = v16[3];
    if (v30 >= v29 >> 1)
      v16 = sub_2334A50D8((_QWORD *)(v29 > 1), v30 + 1, 1, v16);
    v16[2] = v30 + 1;
    v31 = &v16[3 * v30];
    v31[4] = v41;
    v31[5] = v22;
    *((_BYTE *)v31 + 48) = 3;
  }
  if (v21)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_2334A50D8(0, v16[2] + 1, 1, v16);
    v33 = v16[2];
    v32 = v16[3];
    if (v33 >= v32 >> 1)
      v16 = sub_2334A50D8((_QWORD *)(v32 > 1), v33 + 1, 1, v16);
    v16[2] = v33 + 1;
    v34 = &v16[3 * v33];
    v34[4] = v42;
    v34[5] = v21;
    *((_BYTE *)v34 + 48) = 2;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_2334A50D8(0, v16[2] + 1, 1, v16);
  v36 = v16[2];
  v35 = v16[3];
  if (v36 >= v35 >> 1)
    v16 = sub_2334A50D8((_QWORD *)(v35 > 1), v36 + 1, 1, v16);
  v16[2] = v36 + 1;
  v37 = &v16[3 * v36];
  v37[4] = v43;
  v37[5] = v20;
  *((_BYTE *)v37 + 48) = 5;
  return v16;
}

uint64_t RawBankConnectData.PartyAddress.addressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.PartyAddress.addressLines.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.addressLines.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.streetName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.streetName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.streetName.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.buildingNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.buildingNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.buildingNumber.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.postCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.postCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.postCode.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.townName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.townName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.townName.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.countrySubDivision.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.countrySubDivision.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.countrySubDivision.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.PartyAddress.country.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.PartyAddress.country.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*RawBankConnectData.PartyAddress.country.modify())()
{
  return nullsub_1;
}

double RawBankConnectData.PartyAddress.init(country:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = a1;
  *(_QWORD *)(a3 + 96) = a2;
  return result;
}

uint64_t sub_23324B950(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23324B98C + 4 * byte_233630D30[a1]))(0x4C73736572646461, 0xEC00000073656E69);
}

uint64_t sub_23324B98C()
{
  return 0x614E746565727473;
}

uint64_t sub_23324B9A8()
{
  return 0x676E69646C697562;
}

uint64_t sub_23324B9CC()
{
  return 0x65646F4374736F70;
}

uint64_t sub_23324B9E4()
{
  return 0x656D614E6E776F74;
}

unint64_t sub_23324B9FC()
{
  return 0xD000000000000012;
}

uint64_t sub_23324BA18()
{
  return 0x7972746E756F63;
}

uint64_t sub_23324BA30()
{
  unsigned __int8 *v0;

  return sub_23324B950(*v0);
}

uint64_t sub_23324BA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23324CAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23324BA5C()
{
  sub_23324C5AC();
  return sub_23361F428();
}

uint64_t sub_23324BA84()
{
  sub_23324C5AC();
  return sub_23361F434();
}

uint64_t RawBankConnectData.PartyAddress.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[13];
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560466A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v16[11] = v1[2];
  v16[12] = v8;
  v10 = v1[3];
  v16[9] = v1[4];
  v16[10] = v10;
  v11 = v1[5];
  v16[7] = v1[6];
  v16[8] = v11;
  v12 = v1[7];
  v16[5] = v1[8];
  v16[6] = v12;
  v13 = v1[10];
  v16[3] = v1[9];
  v16[4] = v13;
  v14 = v1[11];
  v16[1] = v1[12];
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23324C5AC();
  sub_23361F410();
  v24 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23361F110();
  if (!v2)
  {
    v22 = 1;
    sub_23361F0E0();
    v21 = 2;
    sub_23361F0E0();
    v20 = 3;
    sub_23361F0E0();
    v19 = 4;
    sub_23361F0E0();
    v18 = 5;
    sub_23361F0E0();
    v17 = 6;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawBankConnectData.PartyAddress.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560466B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23324C5AC();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v56 = 0;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v10 = v57;
    v55 = 1;
    swift_bridgeObjectRetain();
    v11 = sub_23361EFCC();
    v49 = v10;
    v54 = 2;
    v13 = v12;
    swift_bridgeObjectRetain();
    v47 = sub_23361EFCC();
    v48 = v13;
    v53 = 3;
    v15 = v14;
    swift_bridgeObjectRetain();
    v44 = sub_23361EFCC();
    v45 = a2;
    v46 = v15;
    v52 = 4;
    v17 = v16;
    swift_bridgeObjectRetain();
    v18 = sub_23361EFCC();
    v20 = v19;
    v41 = v18;
    v42 = v11;
    v43 = v17;
    v51 = 5;
    swift_bridgeObjectRetain();
    v21 = sub_23361EFCC();
    v23 = v22;
    v40 = v21;
    v50 = 6;
    swift_bridgeObjectRetain();
    v24 = sub_23361F02C();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v39 = v24;
    v27(v8, v5);
    v28 = v49;
    swift_bridgeObjectRetain();
    v29 = v48;
    swift_bridgeObjectRetain();
    v30 = v46;
    swift_bridgeObjectRetain();
    v31 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v45;
    v33 = v42;
    *v45 = v28;
    v32[1] = v33;
    v34 = v47;
    v32[2] = v29;
    v32[3] = v34;
    v35 = v44;
    v32[4] = v30;
    v32[5] = v35;
    v36 = v41;
    v32[6] = v31;
    v32[7] = v36;
    v37 = v40;
    v32[8] = v20;
    v32[9] = v37;
    v38 = v39;
    v32[10] = v23;
    v32[11] = v38;
    v32[12] = v26;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23324C284@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawBankConnectData.PartyAddress.init(from:)(a1, a2);
}

uint64_t sub_23324C298(_QWORD *a1)
{
  return RawBankConnectData.PartyAddress.encode(to:)(a1);
}

uint64_t _s10FinanceKit18RawBankConnectDataO12PartyAddressV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v4 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 96);
  v76 = v16;
  v17 = *(_QWORD **)a2;
  v19 = *(_QWORD *)(a2 + 8);
  v18 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  v21 = *(_QWORD *)(a2 + 32);
  v23 = *(_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v75 = v29;
  if (v4)
  {
    if (!v17)
      return 0;
    v55 = v28;
    v56 = v15;
    v67 = v11;
    v69 = v25;
    v63 = v27;
    v65 = v12;
    v60 = v9;
    v61 = v26;
    v58 = v18;
    v59 = v14;
    v30 = v13;
    v31 = v24;
    v72 = v22;
    v32 = v23;
    v33 = v8;
    v34 = v7;
    v35 = v21;
    v36 = v20;
    v57 = v5;
    v37 = v6;
    v38 = v19;
    v39 = sub_23322B8BC(v4, v17);
    v19 = v38;
    v5 = v57;
    v18 = v58;
    v6 = v37;
    v20 = v36;
    v21 = v35;
    v7 = v34;
    v8 = v33;
    v23 = v32;
    v25 = v69;
    v22 = v72;
    v24 = v31;
    v13 = v30;
    v14 = v59;
    v9 = v60;
    v26 = v61;
    v27 = v63;
    v12 = v65;
    v11 = v67;
    if ((v39 & 1) == 0)
      return 0;
  }
  else
  {
    v55 = v28;
    v56 = v15;
    if (v17)
      return 0;
  }
  if (!v5)
  {
    if (v18)
      return 0;
LABEL_13:
    if (v8)
    {
      if (!v21)
        return 0;
      if (v7 != v20 || v8 != v21)
      {
        v71 = v24;
        v74 = v22;
        v43 = v13;
        v44 = v23;
        v45 = sub_23361F224();
        v23 = v44;
        v24 = v71;
        v22 = v74;
        v13 = v43;
        v46 = v45;
        result = 0;
        if ((v46 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v10)
    {
      if (!v22)
        return 0;
      if (v9 != v23 || v10 != v22)
      {
        v47 = v24;
        v48 = v13;
        v49 = sub_23361F224();
        v24 = v47;
        v13 = v48;
        v50 = v49;
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v11)
    {
      if (!v25)
        return 0;
      if (v12 != v24 || v11 != v25)
      {
        v51 = v13;
        v52 = sub_23361F224();
        v13 = v51;
        v53 = v52;
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    if (v14)
    {
      if (v26)
      {
        if (v13 != v27 || v14 != v26)
        {
          v54 = sub_23361F224();
          result = 0;
          if ((v54 & 1) == 0)
            return result;
        }
LABEL_43:
        if (v76 == v75 && v56 == v55)
          return 1;
        else
          return sub_23361F224();
      }
    }
    else if (!v26)
    {
      goto LABEL_43;
    }
    return 0;
  }
  if (!v18)
    return 0;
  if (v6 == v19 && v5 == v18)
    goto LABEL_13;
  v70 = v24;
  v73 = v22;
  v66 = v7;
  v68 = v13;
  v62 = v20;
  v64 = v23;
  v40 = sub_23361F224();
  v20 = v62;
  v23 = v64;
  v7 = v66;
  v13 = v68;
  v24 = v70;
  v22 = v73;
  v41 = v40;
  result = 0;
  if ((v41 & 1) != 0)
    goto LABEL_13;
  return result;
}

unint64_t sub_23324C5AC()
{
  unint64_t result;

  result = qword_2560466B0;
  if (!qword_2560466B0)
  {
    result = MEMORY[0x234934494](&unk_233630EA8, &_s12PartyAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560466B0);
  }
  return result;
}

uint64_t _s12PartyAddressVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12PartyAddressVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s12PartyAddressVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s12PartyAddressVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[12];
  a1[11] = a2[11];
  a1[12] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12PartyAddressVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12PartyAddressVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 96) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.PartyAddress()
{
  return &type metadata for RawBankConnectData.PartyAddress;
}

uint64_t _s12PartyAddressV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23324C978 + 4 * byte_233630D3C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23324C9AC + 4 * byte_233630D37[v4]))();
}

uint64_t sub_23324C9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23324C9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23324C9BCLL);
  return result;
}

uint64_t sub_23324C9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23324C9D0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23324C9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23324C9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12PartyAddressV10CodingKeysOMa()
{
  return &_s12PartyAddressV10CodingKeysON;
}

unint64_t sub_23324C9FC()
{
  unint64_t result;

  result = qword_2560466C0;
  if (!qword_2560466C0)
  {
    result = MEMORY[0x234934494](&unk_233630E80, &_s12PartyAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560466C0);
  }
  return result;
}

unint64_t sub_23324CA44()
{
  unint64_t result;

  result = qword_2560466C8;
  if (!qword_2560466C8)
  {
    result = MEMORY[0x234934494](&unk_233630DF0, &_s12PartyAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560466C8);
  }
  return result;
}

unint64_t sub_23324CA8C()
{
  unint64_t result;

  result = qword_2560466D0;
  if (!qword_2560466D0)
  {
    result = MEMORY[0x234934494](&unk_233630E18, &_s12PartyAddressV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560466D0);
  }
  return result;
}

uint64_t sub_23324CAD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C73736572646461 && a2 == 0xEC00000073656E69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E746565727473 && a2 == 0xEA0000000000656DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69646C697562 && a2 == 0xEE007265626D754ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F4374736F70 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D614E6E776F74 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366D990 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t NSManagedObjectContext.performAndRetryOnMergeConflict<A>(operation:)()
{
  return sub_23361E960();
}

void sub_23324CE24(void (*a1)(void)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  id v26;
  char *v27;
  char v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  char *v38;
  os_log_type_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  void (*v50)(void);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;

  v48 = a3;
  v8 = sub_23361DB80();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361C938();
  v53 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v45 - v14;
  v15 = sub_23361C944();
  v58 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)&v45 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v45 - v21;
  v60 = 1;
  v23 = swift_beginAccess();
  v49 = a4;
  v50 = a1;
  v51 = a2;
  ((void (*)(uint64_t))a1)(v23);
  if (v4)
  {
    *(_QWORD *)&v24 = 134218242;
    v45 = v24;
    v25 = v54;
    v46 = v13;
    v47 = v18;
    v59 = v4;
    v26 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_16:

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v22, v18, v15);
    sub_233167C58(&qword_254246B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v27 = v22;
    sub_23361D190();
    sub_23361C8CC();
    sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
    v28 = sub_23361E108();
    v29 = v25;
    v30 = *(void (**)(char *, uint64_t))(v53 + 8);
    v30(v13, v10);
    if ((v28 & 1) != 0)
    {
      v30(v29, v10);
      v31 = v52;
    }
    else
    {
      sub_23361C908();
      v32 = sub_23361E108();
      v30(v13, v10);
      v30(v29, v10);
      v31 = v52;
      if ((v32 & 1) == 0)
      {
        v43 = *(void (**)(char *, uint64_t))(v58 + 8);
        v33 = v27;
LABEL_15:
        v43(v33, v15);
        goto LABEL_16;
      }
    }

    v33 = v27;
    if (qword_2542483B0 != -1)
      swift_once();
    v34 = v57;
    v35 = __swift_project_value_buffer(v57, (uint64_t)qword_254248210);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v35, v34);
    v36 = v58;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v31, v27, v15);
    v37 = sub_23361DB68();
    v38 = v31;
    v39 = sub_23361E768();
    if (os_log_type_enabled(v37, v39))
    {
      v40 = swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v40 = v45;
      *(_QWORD *)(v40 + 4) = v60;
      *(_WORD *)(v40 + 12) = 2112;
      sub_23361C8B4();
      v42 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v40 + 14) = v42;
      *v41 = v42;
      v43 = *(void (**)(char *, uint64_t))(v36 + 8);
      v43(v38, v15);
      _os_log_impl(&dword_233151000, v37, v39, "Failed to perform operation (#%ld) with error: %@", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v41, -1, -1);
      v44 = v40;
      v33 = v27;
      MEMORY[0x234934590](v44, -1, -1);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t))(v36 + 8);
      v43(v38, v15);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
    if (v60 <= 4)
    {
      ++v60;
      objc_msgSend(v48, sel_reset);
      v43(v33, v15);

      v50();
      return;
    }
    sub_23361C8B4();
    swift_willThrow();
    goto LABEL_15;
  }
}

void sub_23324D330(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23324CE24(*(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), a1);
}

void sub_23324D34C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_name);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_23324D3A0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setName_, v3);

}

void sub_23324D3F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_localizationName);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23324D454(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setLocalizationName_);

}

uint64_t ManagedECommerceOrderContent.receipt(named:languages:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  id v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_23324D6A0((_QWORD *)v7, a3, KeyPath);
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release();
  if (v3)
    return a3;
  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v13 = sub_23361EF30();
  result = swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_9;
LABEL_4:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v10);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_7:
    a3 = (uint64_t)v12;
    swift_bridgeObjectRelease();
    return a3;
  }
  __break(1u);
  return result;
}

uint64_t ManagedECommerceOrderContent.receipts(named:languages:)(_QWORD *a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_23324D6A0(a1, a2, KeyPath);
  v6 = v5;
  swift_release();
  swift_release();
  return v6;
}

void sub_23324D6A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  type metadata accessor for ManagedOrderReceipt();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v8 + 16) = xmmword_23362AF00;
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 32) = 1701667182;
  *(_QWORD *)(v8 + 40) = 0xE400000000000000;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v8 + 64) = a1;
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 96) = 0xD000000000000015;
  *(_QWORD *)(v8 + 104) = 0x80000002336688D0;
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v3, sel_objectID);
  *(_QWORD *)(v8 + 152) = sub_23324F034();
  *(_QWORD *)(v8 + 128) = v11;
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v12, v13);

  objc_msgSend(v7, sel_setPredicate_, v14);
  v15 = objc_msgSend(v3, sel_managedObjectContext);
  if (!v15)
  {
    sub_23324F070();
    swift_allocError();
    *v18 = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  v16 = v15;
  v17 = sub_23361E984();
  if (v4)
  {

    v7 = v14;
    v14 = v16;
LABEL_5:

    return;
  }
  v19 = v17;
  swift_retain();
  v20 = sub_23324E384(v19, a3, (void (*)(void))sub_23327AC20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  v21 = sub_23324E884(v20, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    v22 = (uint64_t)sub_2333AFC6C(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v25 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_233250CC4(&v25, a3, a1, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderReceipt, (void (*)(id **, void ***, void ***))sub_23360584C);
  swift_bridgeObjectRelease();

  swift_release_n();
  swift_bridgeObjectRelease_n();
}

void sub_23324DA58(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  type metadata accessor for ManagedOrderReturnLabel();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v8 + 16) = xmmword_23362AF00;
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 32) = 1701667182;
  *(_QWORD *)(v8 + 40) = 0xE400000000000000;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v8 + 64) = a1;
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 96) = 0xD000000000000015;
  *(_QWORD *)(v8 + 104) = 0x80000002336688D0;
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v3, sel_objectID);
  *(_QWORD *)(v8 + 152) = sub_23324F034();
  *(_QWORD *)(v8 + 128) = v11;
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v12, v13);

  objc_msgSend(v7, sel_setPredicate_, v14);
  v15 = objc_msgSend(v3, sel_managedObjectContext);
  if (!v15)
  {
    sub_23324F070();
    swift_allocError();
    *v18 = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  v16 = v15;
  v17 = sub_23361E984();
  if (v4)
  {

    v7 = v14;
    v14 = v16;
LABEL_5:

    return;
  }
  v19 = v17;
  swift_retain();
  v20 = sub_23324E384(v19, a3, (void (*)(void))sub_23327B230);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  v21 = sub_23324E884(v20, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    v22 = (uint64_t)sub_2333AFD5C(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v25 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_233250CC4(&v25, a3, a1, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturnLabel, (void (*)(id **, void ***, void ***))sub_23360584C);
  swift_bridgeObjectRelease();

  swift_release_n();
  swift_bridgeObjectRelease_n();
}

void sub_23324DE10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  type metadata accessor for ManagedOrderImage();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v8 + 16) = xmmword_23362AF00;
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 32) = 1701667182;
  *(_QWORD *)(v8 + 40) = 0xE400000000000000;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v8 + 64) = a1;
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 96) = 0xD000000000000015;
  *(_QWORD *)(v8 + 104) = 0x80000002336688D0;
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v3, sel_objectID);
  *(_QWORD *)(v8 + 152) = sub_23324F034();
  *(_QWORD *)(v8 + 128) = v11;
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v12, v13);

  objc_msgSend(v7, sel_setPredicate_, v14);
  v15 = objc_msgSend(v3, sel_managedObjectContext);
  if (!v15)
  {
    sub_23324F070();
    swift_allocError();
    *v18 = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  v16 = v15;
  v17 = sub_23361E984();
  if (v4)
  {

    v7 = v14;
    v14 = v16;
LABEL_5:

    return;
  }
  v19 = v17;
  swift_retain();
  v20 = sub_23324E384(v19, a3, (void (*)(void))sub_23327B55C);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  v21 = sub_23324E884(v20, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    v22 = (uint64_t)sub_2333AFE6C(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v25 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_233250CC4(&v25, a3, a1, (uint64_t (*)(uint64_t))sub_233605C7C, (void (*)(_QWORD))type metadata accessor for ManagedOrderImage, (void (*)(id **, void ***, void ***))sub_23360584C);
  swift_bridgeObjectRelease();

  swift_release_n();
  swift_bridgeObjectRelease_n();
}

uint64_t sub_23324E1C8(unint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t result;
  id v9;

  swift_bridgeObjectRetain();
  swift_retain();
  v4 = sub_23324E624(a2, a1);
  swift_bridgeObjectRelease();
  swift_release();
  if ((unint64_t)v4 >> 62)
  {
    if (sub_23361EF30())
      goto LABEL_3;
  }
  else if (*(_QWORD *)(((unint64_t)v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if (((unint64_t)v4 & 0xC000000000000001) != 0)
    {
      v5 = (id)MEMORY[0x234933120](0, v4);
      goto LABEL_6;
    }
    if (*(_QWORD *)(((unint64_t)v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *((id *)v4 + 4);
LABEL_6:
      v6 = v5;
LABEL_14:
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    result = sub_23361EF30();
    if (!result)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_10:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x234933120](0, a1);
    goto LABEL_13;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(a1 + 32);
LABEL_13:
    v6 = v9;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_23324E32C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setName_, v3);

}

uint64_t sub_23324E384(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v32 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v5 = (_QWORD *)MEMORY[0x24BEE4B00];
      v6 = 4;
      v28 = v4;
      while (1)
      {
        v9 = v6 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v10 = (id)MEMORY[0x234933120](v6 - 4, a1);
          v11 = v6 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_20;
        }
        else
        {
          v10 = *(id *)(a1 + 8 * v6);
          v11 = v6 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v29 = v11;
        v12 = v10;
        swift_getAtKeyPath();

        v13 = v30;
        v15 = sub_2331E3D18(v30, v31);
        v16 = v5[2];
        v17 = (v14 & 1) == 0;
        if (__OFADD__(v16, v17))
          goto LABEL_21;
        v18 = v14;
        if (v5[3] < v16 + v17)
        {
          a3();
          v5 = v32;
          v19 = sub_2331E3D18(v30, v31);
          if ((v18 & 1) != (v20 & 1))
          {
            swift_release();
            result = sub_23361F2B4();
            __break(1u);
            return result;
          }
          v15 = v19;
        }
        if ((v18 & 1) != 0)
        {
          v7 = swift_bridgeObjectRelease();
          v8 = (_QWORD *)(v5[7] + 8 * v15);
          MEMORY[0x234932730](v7);
          if (*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23361E414();
          sub_23361E438();
          sub_23361E408();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
          v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_233625CF0;
          *(_QWORD *)(v21 + 32) = v12;
          v30 = v21;
          sub_23361E408();
          v5[(v15 >> 6) + 8] |= 1 << v15;
          v22 = (uint64_t *)(v5[6] + 16 * v15);
          *v22 = v13;
          v22[1] = v31;
          *(_QWORD *)(v5[7] + 8 * v15) = v30;
          v23 = v5[2];
          v24 = __OFADD__(v23, 1);
          v25 = v23 + 1;
          if (v24)
            goto LABEL_22;
          v5[2] = v25;
        }
        ++v6;
        if (v29 == v28)
          return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x24BEE4B00];
}

id sub_23324E624(uint64_t a1, unint64_t a2)
{
  id result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = (id)MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v13 = a2 & 0xFFFFFFFFFFFFFF8;
    v16 = a2 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v15 = v5;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v6 = sub_23361EF30();
        if (v6)
        {
LABEL_9:
          v7 = 4;
          while (1)
          {
            v8 = v7 - 4;
            if (v16)
            {
              result = (id)MEMORY[0x234933120](v7 - 4, a2);
              v9 = v7 - 3;
              if (__OFADD__(v8, 1))
                goto LABEL_23;
            }
            else
            {
              result = *(id *)(a2 + 8 * v7);
              v9 = v7 - 3;
              if (__OFADD__(v8, 1))
              {
LABEL_23:
                __break(1u);
                return result;
              }
            }
            v10 = result;
            swift_getAtKeyPath();

            if (v17)
            {
              sub_2331685C4();
              v11 = sub_23361EBF4();
              swift_bridgeObjectRelease();
              if (!v11)
                break;
            }

            ++v7;
            if (v9 == v6)
              goto LABEL_3;
          }
          swift_bridgeObjectRelease();
          swift_release();
          v12 = swift_bridgeObjectRelease();
          MEMORY[0x234932730](v12);
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23361E414();
          sub_23361E438();
          sub_23361E408();
          goto LABEL_4;
        }
      }
      else
      {
        v6 = *(_QWORD *)(v13 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v6)
          goto LABEL_9;
      }
LABEL_3:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      v5 = v15 + 1;
      if (v15 + 1 == v14)
      {
        swift_bridgeObjectRelease();
        return (id)v18;
      }
    }
  }
  return result;
}

uint64_t sub_23324E884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;

  v17 = MEMORY[0x24BEE4AF8];
  v15 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v16 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_19;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v16)
      goto LABEL_29;
    v10 = *(_QWORD *)(v15 + 8 * v8);
    if (!v10)
      break;
LABEL_18:
    v6 = (v10 - 1) & v10;
LABEL_19:
    v12 = swift_bridgeObjectRetain();
    v13 = sub_23324E1C8(v12, a2);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v14 = v13;
    result = swift_bridgeObjectRelease();
    if (v14)
    {
      MEMORY[0x234932730](result);
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      result = sub_23361E408();
    }
  }
  v11 = v8 + 1;
  if (v8 + 1 >= v16)
    goto LABEL_29;
  v10 = *(_QWORD *)(v15 + 8 * v11);
  if (v10)
    goto LABEL_17;
  v11 = v8 + 2;
  if (v8 + 2 >= v16)
    goto LABEL_29;
  v10 = *(_QWORD *)(v15 + 8 * v11);
  if (v10)
    goto LABEL_17;
  v11 = v8 + 3;
  if (v8 + 3 >= v16)
    goto LABEL_29;
  v10 = *(_QWORD *)(v15 + 8 * v11);
  if (v10)
    goto LABEL_17;
  v11 = v8 + 4;
  if (v8 + 4 >= v16)
  {
LABEL_29:
    swift_release();
    return v17;
  }
  v10 = *(_QWORD *)(v15 + 8 * v11);
  if (v10)
  {
LABEL_17:
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v16)
      goto LABEL_29;
    v10 = *(_QWORD *)(v15 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23324EACC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t *);
  uint64_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;

  v62 = a4;
  v63 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560466D8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v52 - v10);
  v12 = (uint64_t *)sub_23361D340();
  v13 = *(v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (unint64_t)&v52 - v17;
  v19 = type metadata accessor for LocalizedURLMap();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BEE4AF8];
  sub_2331E5720(a3, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v60 = a2;
    v61 = v13;
    v59 = v16;
    v64 = v12;
    v22 = 0;
    v23 = *(_QWORD *)v21;
    v24 = *(_QWORD *)(*(_QWORD *)v21 + 64);
    v56 = *(_QWORD *)v21 + 64;
    v25 = 1 << *(_BYTE *)(v23 + 32);
    v26 = -1;
    if (v25 < 64)
      v26 = ~(-1 << v25);
    v18 = v26 & v24;
    v57 = (unint64_t)(v25 + 63) >> 6;
    v58 = v23;
    v55 = (id)(v57 - 5);
    v53 = v57 - 1;
    v54 = v23 + 104;
    v12 = &qword_2560466E0;
    while (!v18)
    {
      v34 = (int64_t)v22 + 1;
      v13 = v61;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_38:
        sub_23361E414();
LABEL_33:
        sub_23361E438();
        sub_23361E408();

        goto LABEL_34;
      }
      if (v34 >= v57)
      {
        v36 = (char *)v22;
      }
      else
      {
        v35 = *(_QWORD *)(v56 + 8 * v34);
        if (v35)
          goto LABEL_11;
        v36 = (char *)v22 + 1;
        if ((uint64_t)v22 + 2 < v57)
        {
          v35 = *(_QWORD *)(v56 + 8 * ((_QWORD)v22 + 2));
          if (v35)
          {
            v34 = (int64_t)v22 + 2;
            goto LABEL_11;
          }
          v36 = (char *)v22 + 2;
          if ((uint64_t)v22 + 3 < v57)
          {
            v35 = *(_QWORD *)(v56 + 8 * ((_QWORD)v22 + 3));
            if (v35)
            {
              v34 = (int64_t)v22 + 3;
LABEL_11:
              v18 = (v35 - 1) & v35;
              v28 = __clz(__rbit64(v35)) + (v34 << 6);
              v22 = (id)v34;
LABEL_7:
              v29 = *(_QWORD *)(v58 + 56);
              v30 = (_QWORD *)(*(_QWORD *)(v58 + 48) + 16 * v28);
              v31 = v30[1];
              *(_QWORD *)v9 = *v30;
              *((_QWORD *)v9 + 1) = v31;
              v32 = v29 + *(_QWORD *)(v13 + 72) * v28;
              v33 = __swift_instantiateConcreteTypeFromMangledName(v12);
              (*(void (**)(char *, uint64_t, uint64_t *))(v13 + 16))(&v9[*(int *)(v33 + 48)], v32, v64);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 0, 1, v33);
              swift_bridgeObjectRetain();
              goto LABEL_14;
            }
            v34 = (int64_t)v22 + 4;
            v36 = (char *)v22 + 3;
            if ((uint64_t)v22 + 4 < v57)
            {
              v35 = *(_QWORD *)(v56 + 8 * v34);
              if (v35)
                goto LABEL_11;
              while (v55 != v22)
              {
                v35 = *(_QWORD *)(v54 + 8 * (_QWORD)v22);
                v22 = (char *)v22 + 1;
                if (v35)
                {
                  v34 = (int64_t)v22 + 4;
                  goto LABEL_11;
                }
              }
              v36 = (char *)v53;
            }
          }
        }
      }
      v37 = __swift_instantiateConcreteTypeFromMangledName(v12);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 1, 1, v37);
      v18 = 0;
      v22 = v36;
LABEL_14:
      sub_23324EFEC((uint64_t)v9, (uint64_t)v11);
      v38 = __swift_instantiateConcreteTypeFromMangledName(v12);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v11, 1, v38) == 1)
      {
        swift_release();
        return v65;
      }
      v39 = *v11;
      v40 = v11[1];
      v41 = (char *)v11 + *(int *)(v38 + 48);
      type metadata accessor for ManagedOrderReceipt();
      v42 = *(void (**)(char *, char *, uint64_t *))(v13 + 32);
      v43 = v12;
      v44 = (uint64_t)v59;
      v42(v59, v41, v64);
      LODWORD(v41) = v60;
      swift_bridgeObjectRetain();
      v45 = v62;
      v46 = v44;
      v12 = v43;
      v47 = ManagedOrderReceipt.__allocating_init(name:url:localizationName:context:)(v63, (int)v41, v46, v39, v40, v45);
      if (v47)
      {
        v48 = v47;
        MEMORY[0x234932730]();
        if (*(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23361E414();
        sub_23361E438();
        sub_23361E408();

      }
    }
    v27 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v28 = v27 | ((_QWORD)v22 << 6);
    v13 = v61;
    goto LABEL_7;
  }
  (*(void (**)(unint64_t, char *, uint64_t *))(v13 + 32))(v18, v21, v12);
  type metadata accessor for ManagedOrderReceipt();
  (*(void (**)(char *, unint64_t, uint64_t *))(v13 + 16))(v16, v18, v12);
  swift_bridgeObjectRetain();
  v49 = v62;
  v50 = ManagedOrderReceipt.__allocating_init(name:url:localizationName:context:)(v63, a2, (uint64_t)v16, 0, 0, v49);
  if (v50)
  {
    v22 = v50;
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_38;
    goto LABEL_33;
  }
LABEL_34:
  (*(void (**)(unint64_t, uint64_t *))(v13 + 8))(v18, v12);
  return v65;
}

uint64_t sub_23324EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560466D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23324F034()
{
  unint64_t result;

  result = qword_2560466E8;
  if (!qword_2560466E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2560466E8);
  }
  return result;
}

unint64_t sub_23324F070()
{
  unint64_t result;

  result = qword_2560466F0;
  if (!qword_2560466F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for StoreError, &type metadata for StoreError);
    atomic_store(result, (unint64_t *)&qword_2560466F0);
  }
  return result;
}

uint64_t sub_23324F0B4(uint64_t *a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD), void (*a5)(id **, void ***, void ***))
{
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v58;
  _BOOL4 v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  char v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  void **v139;
  id *v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void **v149;
  id *v150;
  char *v151;
  char *v152;
  unint64_t v153;
  uint64_t result;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  void **v164;
  char *v166;
  uint64_t v167;
  _BOOL4 v168;
  uint64_t v169;
  void *v170;
  void *v171;
  uint64_t v172;
  void *v173;
  char *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  id *v185;
  id *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;

  v9 = a1;
  v10 = a1[1];
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_23361F1C4();
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_258;
    if (v10)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_2332509A8(0, v10, 1, v9, a2, a3);
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    return swift_bridgeObjectRelease();
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_266;
  v13 = v11;
  v175 = a3;
  v182 = a2;
  v179 = v5;
  if (v10 < 2)
  {
    v189 = MEMORY[0x24BEE4AF8];
    v164 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v10 != 1)
    {
      v85 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v143 = MEMORY[0x24BEE4AF8];
      if (v85 < 2)
        goto LABEL_233;
      goto LABEL_219;
    }
  }
  else
  {
    v14 = v12 >> 1;
    a4(0);
    v15 = sub_23361E42C();
    *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
    v164 = (void **)((v15 & 0xFFFFFFFFFFFFFF8) + 32);
    v189 = v15;
  }
  v16 = 0;
  v155 = v9;
  v17 = *v9;
  v163 = a3 + 7;
  v156 = *v9 - 8;
  v157 = v13;
  v166 = (char *)MEMORY[0x24BEE4AF8];
  v160 = v10;
  v180 = *v9;
  while (2)
  {
    v162 = v16;
    if (v16 + 1 >= v10)
    {
      v26 = v16 + 1;
      goto LABEL_162;
    }
    v176 = v16 + 1;
    v18 = *(void **)(v17 + 8 * v16);
    v19 = *(id *)(v17 + 8 * (v16 + 1));
    v20 = v18;
    swift_getAtKeyPath();
    v21 = v20;
    swift_getAtKeyPath();

    v183 = a3[2];
    if (!v183)
    {
LABEL_50:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v37 = 0;
      v38 = v160;
      v25 = v162;
      goto LABEL_51;
    }
    v170 = v21;
    v23 = a3[4];
    v22 = a3[5];
    if (v23 == v187 && v22 == v188)
    {
      swift_bridgeObjectRelease();
      v24 = 0;
      v25 = v162;
LABEL_32:
      swift_bridgeObjectRelease();

LABEL_35:
      v27 = 0;
      goto LABEL_48;
    }
    if ((sub_23361F224() & 1) == 0)
    {
      v28 = v163;
      v29 = 1;
      do
      {
        v24 = v29;
        if (v183 == v29)
        {
          v21 = v170;
          goto LABEL_50;
        }
        if (*(v28 - 1) == v187 && *v28 == v188)
          break;
        v31 = sub_23361F224();
        v29 = v24 + 1;
        v28 += 2;
      }
      while ((v31 & 1) == 0);
      swift_bridgeObjectRelease();
      if (v23 == v187)
      {
        v25 = v162;
        if (v22 != v188)
          goto LABEL_33;
        goto LABEL_32;
      }
      v25 = v162;
LABEL_33:
      if ((sub_23361F224() & 1) == 0)
      {
        if (v183 <= 1)
          v32 = 1;
        else
          v32 = v183;
        v33 = v163;
        v34 = 1;
        while (1)
        {
          v27 = v34;
          if (v183 == v34)
            break;
          if (v32 == v34)
            goto LABEL_256;
          if (*(v33 - 1) != v187 || v188 != *v33)
          {
            v36 = sub_23361F224();
            v34 = v27 + 1;
            v33 += 2;
            if ((v36 & 1) == 0)
              continue;
          }

          swift_bridgeObjectRelease();
          v25 = v162;
          goto LABEL_48;
        }

        swift_bridgeObjectRelease();
        v37 = 0;
        v38 = v160;
        v25 = v162;
        goto LABEL_51;
      }

      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    v24 = 0;
    v25 = v162;
    if (v23 != v187 || v22 != v188)
      goto LABEL_33;

    swift_bridgeObjectRelease();
    v27 = 0;
    v24 = 0;
LABEL_48:
    v37 = v24 < v27;
    v38 = v160;
LABEL_51:

    v39 = v25 + 2;
    if (v39 >= v38)
      goto LABEL_94;
    v40 = v183;
    if (v183 <= 1)
      v40 = 1;
    v172 = v40 - 1;
    v41 = v180;
    v42 = v176;
    v168 = v37;
    while (1)
    {
      v43 = *(void **)(v41 + 8 * v42);
      v44 = *(id *)(v41 + 8 * v39);
      v45 = v43;
      swift_getAtKeyPath();
      v46 = v45;
      swift_getAtKeyPath();

      if (v183)
        break;
LABEL_90:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v38 = v160;
LABEL_91:

      if (v37)
      {
LABEL_99:
        v41 = v180;
LABEL_100:
        if (v39 < v162)
          goto LABEL_259;
        if (v162 < v39)
        {
          v60 = (uint64_t *)(v156 + 8 * v39);
          v61 = v39;
          v62 = v162;
          v63 = (uint64_t *)(v41 + 8 * v162);
          do
          {
            if (v62 != --v61)
            {
              if (!v41)
                goto LABEL_264;
              v64 = *v63;
              *v63 = *v60;
              *v60 = v64;
            }
            ++v62;
            --v60;
            ++v63;
          }
          while (v62 < v61);
        }
        v26 = v39;
        if (v39 >= v38)
          goto LABEL_162;
        goto LABEL_109;
      }
LABEL_57:
      v42 = v39++;
      v41 = v180;
      if (v39 == v38)
      {
        v39 = v38;
        v26 = v38;
        if (!v37)
          goto LABEL_97;
        goto LABEL_100;
      }
    }
    v48 = a3[4];
    v47 = a3[5];
    v171 = v46;
    if (v48 == v187 && v47 == v188)
    {
      swift_bridgeObjectRelease();
      v38 = v160;
LABEL_76:
      swift_bridgeObjectRelease();

LABEL_56:
      a3 = v175;
      if (v37)
        goto LABEL_94;
      goto LABEL_57;
    }
    if ((sub_23361F224() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v49 = 0;
      if (v48 == v187)
      {
        v38 = v160;
        if (v47 == v188)
        {

          swift_bridgeObjectRelease();
          a3 = v175;
          if (v37)
            goto LABEL_99;
          goto LABEL_57;
        }
      }
      else
      {
        v38 = v160;
      }
    }
    else
    {
      v50 = v163;
      v51 = 1;
      do
      {
        v49 = v51;
        if (v183 == v51)
        {
          a3 = v175;
          v37 = v168;
          v46 = v171;
          goto LABEL_90;
        }
        if (*(v50 - 1) == v187 && *v50 == v188)
          break;
        v53 = sub_23361F224();
        v51 = v49 + 1;
        v50 += 2;
      }
      while ((v53 & 1) == 0);
      swift_bridgeObjectRelease();
      v38 = v160;
      v37 = v168;
      if (v48 == v187 && v47 == v188)
        goto LABEL_76;
    }
    if ((sub_23361F224() & 1) != 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    v54 = 0;
    v55 = v163;
    do
    {
      if (v183 - 1 == v54)
      {

        swift_bridgeObjectRelease();
        a3 = v175;
        goto LABEL_91;
      }
      v56 = v54;
      if (v172 == v54)
        goto LABEL_239;
      if (*(v55 - 1) == v187 && v188 == *v55)
        break;
      v58 = sub_23361F224();
      v55 += 2;
      v54 = v56 + 1;
    }
    while ((v58 & 1) == 0);

    swift_bridgeObjectRelease();
    v59 = v49 > v56;
    a3 = v175;
    if (((v37 ^ v59) & 1) != 0)
      goto LABEL_57;
LABEL_94:
    v41 = v180;
    v26 = v39;
    if (v37)
      goto LABEL_100;
LABEL_97:
    if (v26 >= v38)
    {
LABEL_162:
      v65 = v162;
      goto LABEL_163;
    }
LABEL_109:
    v65 = v162;
    if (__OFSUB__(v26, v162))
      goto LABEL_257;
    if (v26 - v162 >= v157)
    {
LABEL_163:
      v89 = v166;
      if (v26 < v65)
        goto LABEL_255;
      v178 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v89 = sub_23360573C(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
      v91 = *((_QWORD *)v89 + 2);
      v90 = *((_QWORD *)v89 + 3);
      v85 = v91 + 1;
      v17 = v180;
      if (v91 >= v90 >> 1)
      {
        v142 = sub_23360573C((char *)(v90 > 1), v91 + 1, 1, v89);
        v17 = v180;
        v89 = v142;
      }
      *((_QWORD *)v89 + 2) = v85;
      v92 = v89 + 32;
      v93 = &v89[16 * v91 + 32];
      v16 = v178;
      *(_QWORD *)v93 = v162;
      *((_QWORD *)v93 + 1) = v178;
      v166 = v89;
      if (!v91)
      {
        v85 = 1;
LABEL_212:
        v10 = v160;
        a3 = v175;
        if (v16 >= v160)
          goto LABEL_232;
        continue;
      }
      v174 = v89 + 32;
      while (1)
      {
        v94 = v85 - 1;
        if (v85 >= 4)
        {
          v99 = &v92[16 * v85];
          v100 = *((_QWORD *)v99 - 8);
          v101 = *((_QWORD *)v99 - 7);
          v105 = __OFSUB__(v101, v100);
          v102 = v101 - v100;
          if (v105)
            goto LABEL_240;
          v104 = *((_QWORD *)v99 - 6);
          v103 = *((_QWORD *)v99 - 5);
          v105 = __OFSUB__(v103, v104);
          v97 = v103 - v104;
          v98 = v105;
          if (v105)
            goto LABEL_241;
          v106 = v85 - 2;
          v107 = &v92[16 * v85 - 32];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          v105 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          if (v105)
            goto LABEL_243;
          v105 = __OFADD__(v97, v110);
          v111 = v97 + v110;
          if (v105)
            goto LABEL_246;
          if (v111 >= v102)
          {
            v129 = &v92[16 * v94];
            v131 = *(_QWORD *)v129;
            v130 = *((_QWORD *)v129 + 1);
            v105 = __OFSUB__(v130, v131);
            v132 = v130 - v131;
            if (v105)
              goto LABEL_250;
            v122 = v97 < v132;
            goto LABEL_201;
          }
        }
        else
        {
          if (v85 != 3)
          {
            v123 = *((_QWORD *)v89 + 4);
            v124 = *((_QWORD *)v89 + 5);
            v105 = __OFSUB__(v124, v123);
            v116 = v124 - v123;
            v117 = v105;
            goto LABEL_195;
          }
          v96 = *((_QWORD *)v89 + 4);
          v95 = *((_QWORD *)v89 + 5);
          v105 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          v98 = v105;
        }
        if ((v98 & 1) != 0)
          goto LABEL_242;
        v106 = v85 - 2;
        v112 = &v92[16 * v85 - 32];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v115 = __OFSUB__(v113, v114);
        v116 = v113 - v114;
        v117 = v115;
        if (v115)
          goto LABEL_245;
        v118 = &v92[16 * v94];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v105 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v105)
          goto LABEL_248;
        if (__OFADD__(v116, v121))
          goto LABEL_249;
        if (v116 + v121 >= v97)
        {
          v122 = v97 < v121;
LABEL_201:
          if (v122)
            v94 = v106;
          goto LABEL_203;
        }
LABEL_195:
        if ((v117 & 1) != 0)
          goto LABEL_244;
        v125 = &v92[16 * v94];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v105 = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (v105)
          goto LABEL_247;
        if (v128 < v116)
        {
          v16 = v178;
          goto LABEL_212;
        }
LABEL_203:
        v133 = v94 - 1;
        if (v94 - 1 >= v85)
        {
          __break(1u);
LABEL_236:
          __break(1u);
LABEL_237:
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
          goto LABEL_261;
        }
        if (!v17)
          goto LABEL_262;
        v134 = &v92[16 * v133];
        v135 = *(_QWORD *)v134;
        v136 = v94;
        v137 = &v92[16 * v94];
        v138 = *((_QWORD *)v137 + 1);
        v139 = (void **)(v17 + 8 * *(_QWORD *)v134);
        v140 = (id *)(v17 + 8 * *(_QWORD *)v137);
        v185 = (id *)(v17 + 8 * v138);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2332501C8(v139, v140, v185, v164, v182, v175, a5);
        if (v179)
        {
LABEL_216:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          *(_QWORD *)((v189 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_23361E408();
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_release();
        swift_bridgeObjectRelease();
        v89 = v166;
        if (v138 < v135)
          goto LABEL_236;
        if (v136 > *((_QWORD *)v166 + 2))
          goto LABEL_237;
        v179 = 0;
        *(_QWORD *)v134 = v135;
        v92 = v174;
        *(_QWORD *)&v174[16 * v133 + 8] = v138;
        v141 = *((_QWORD *)v166 + 2);
        if (v136 >= v141)
          goto LABEL_238;
        v85 = v141 - 1;
        memmove(v137, v137 + 16, 16 * (v141 - 1 - v136));
        *((_QWORD *)v166 + 2) = v141 - 1;
        v17 = v180;
        v16 = v178;
        if (v141 <= 2)
          goto LABEL_212;
      }
    }
    break;
  }
  v66 = v162 + v157;
  if (__OFADD__(v162, v157))
    goto LABEL_260;
  if (v66 >= v38)
    v66 = v38;
  if (v66 >= v162)
  {
    if (v26 == v66)
      goto LABEL_163;
    v158 = v66;
    v67 = a3[2];
    v68 = v67 - 1;
    v184 = v67;
    if (v67 <= 1)
      v67 = 1;
    v159 = v67 - 1;
LABEL_119:
    v69 = *(void **)(v41 + 8 * v26);
    v177 = v26;
    v70 = v26;
    while (1)
    {
      v167 = v70 - 1;
      v169 = v70;
      v71 = *(void **)(v41 + 8 * (v70 - 1));
      v72 = v69;
      v73 = v71;
      swift_getAtKeyPath();

      v74 = v73;
      swift_getAtKeyPath();

      if (!v184)
        goto LABEL_155;
      v173 = v72;
      v75 = a3;
      v77 = a3[4];
      v76 = a3[5];
      if (v77 == v187 && v76 == v188)
      {
        swift_bridgeObjectRelease();
        a3 = v75;
        goto LABEL_157;
      }
      v161 = v76;
      if ((sub_23361F224() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v78 = 0;
        if (v77 == v187)
        {
          a3 = v75;
          if (v161 == v188)
          {

            swift_bridgeObjectRelease();
            goto LABEL_159;
          }
        }
        else
        {
          a3 = v75;
        }
        goto LABEL_140;
      }
      v79 = v163;
      v80 = 1;
      do
      {
        v78 = v80;
        if (v184 == v80)
        {
          v72 = v173;
          a3 = v175;
LABEL_155:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_159;
        }
        if (*(v79 - 1) == v187 && *v79 == v188)
          break;
        v82 = sub_23361F224();
        v80 = v78 + 1;
        v79 += 2;
      }
      while ((v82 & 1) == 0);
      swift_bridgeObjectRelease();
      if (v77 == v187)
      {
        a3 = v175;
        if (v161 == v188)
        {
LABEL_157:
          swift_bridgeObjectRelease();

LABEL_158:
LABEL_159:
          v41 = v180;
          goto LABEL_160;
        }
      }
      else
      {
        a3 = v175;
      }
LABEL_140:
      if ((sub_23361F224() & 1) != 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_158;
      }
      v83 = 0;
      v84 = v163;
      v85 = v159;
LABEL_142:
      if (v68 == v83)
      {

        swift_bridgeObjectRelease();
        goto LABEL_159;
      }
      v86 = v83;
      if (v159 == v83)
        break;
      if (*(v84 - 1) != v187 || v188 != *v84)
      {
        v88 = sub_23361F224();
        v84 += 2;
        v83 = v86 + 1;
        if ((v88 & 1) == 0)
          goto LABEL_142;
      }

      swift_bridgeObjectRelease();
      if (v78 > v86)
        goto LABEL_159;
      v41 = v180;
      if (!v180)
        goto LABEL_263;
      v69 = *(void **)(v180 + 8 * v169);
      *(_QWORD *)(v180 + 8 * v169) = *(_QWORD *)(v180 + 8 * v167);
      *(_QWORD *)(v180 + 8 * v167) = v69;
      v70 = v167;
      if (v167 == v162)
      {
LABEL_160:
        v26 = v177 + 1;
        if (v177 + 1 == v158)
        {
          v26 = v158;
          goto LABEL_162;
        }
        goto LABEL_119;
      }
    }
    __break(1u);
LABEL_232:
    v143 = (uint64_t)v166;
    v9 = v155;
    if (v85 < 2)
    {
LABEL_233:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v189 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_23361E408();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_219:
    v144 = *v9;
    v181 = *v9;
    while (1)
    {
      v145 = v85 - 2;
      if (v85 < 2)
        goto LABEL_251;
      if (!v144)
        goto LABEL_265;
      v146 = (char *)v143;
      v147 = *(_QWORD *)(v143 + 32 + 16 * v145);
      v148 = *(_QWORD *)(v143 + 32 + 16 * (v85 - 1) + 8);
      v149 = (void **)(v144 + 8 * v147);
      v186 = (id *)(v144 + 8 * *(_QWORD *)(v143 + 32 + 16 * (v85 - 1)));
      v150 = (id *)(v144 + 8 * v148);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_2332501C8(v149, v186, v150, v164, v182, v175, a5);
      if (v179)
        goto LABEL_216;
      swift_release();
      swift_bridgeObjectRelease();
      if (v148 < v147)
        goto LABEL_252;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v146 = sub_233605C04(v143);
      if (v145 >= *((_QWORD *)v146 + 2))
        goto LABEL_253;
      v143 = (uint64_t)v146;
      v151 = v146 + 32;
      v152 = &v146[16 * v145 + 32];
      *(_QWORD *)v152 = v147;
      *((_QWORD *)v152 + 1) = v148;
      v153 = *((_QWORD *)v146 + 2);
      if (v85 > v153)
        goto LABEL_254;
      v179 = 0;
      memmove(&v151[16 * v85 - 16], &v151[16 * v85], 16 * (v153 - v85));
      *(_QWORD *)(v143 + 16) = v153 - 1;
      v85 = v153 - 1;
      v144 = v181;
      if (v153 <= 2)
        goto LABEL_233;
    }
  }
LABEL_261:
  __break(1u);
LABEL_262:
  swift_bridgeObjectRelease_n();
  swift_release_n();
  __break(1u);
LABEL_263:
  swift_bridgeObjectRelease_n();
  swift_release_n();
  __break(1u);
LABEL_264:
  swift_bridgeObjectRelease_n();
  swift_release_n();
  __break(1u);
LABEL_265:
  swift_bridgeObjectRelease_n();
  swift_release_n();
  __break(1u);
LABEL_266:
  swift_bridgeObjectRelease_n();
  swift_release_n();
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t sub_2332501C8(void **__src, id *a2, id *a3, void **__dst, uint64_t a5, _QWORD *a6, void (*a7)(id **, void ***, void ***))
{
  void **v7;
  id *v8;
  id *v9;
  void **v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  char v28;
  unint64_t v29;
  id *v30;
  id *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v36;
  void **v37;
  unint64_t v38;
  unint64_t v39;
  id *v40;
  void **v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;
  uint64_t v48;
  void **v49;
  _QWORD *v50;
  uint64_t v51;
  char v53;
  void **v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v59;
  BOOL v60;
  uint64_t result;
  uint64_t v63;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  void **v69;
  id v70;
  unint64_t v71;
  id *v72;
  id v73;
  void **v74;
  void **v75;
  void **v76;
  void **v77;
  id *v78;
  id *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void **v84;
  void **v85;
  id *v86;

  v7 = __dst;
  v8 = a3;
  v9 = a2;
  v10 = __src;
  v11 = (char *)a2 - (char *)__src;
  v12 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v12 = (char *)a2 - (char *)__src;
  v13 = v12 >> 3;
  v14 = (char *)a3 - (char *)a2;
  v15 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v15 = (char *)a3 - (char *)a2;
  v16 = v15 >> 3;
  v86 = __src;
  v85 = __dst;
  if (v13 >= v15 >> 3)
  {
    if (v14 < -7)
      goto LABEL_122;
    if (__dst != a2 || &a2[v16] <= __dst)
      memmove(__dst, a2, 8 * v16);
    v37 = &v7[v16];
    v84 = v37;
    v86 = v9;
    if (v10 >= v9 || v14 < 8)
    {
LABEL_119:
      a7(&v86, &v85, &v84);
      return 1;
    }
    v38 = a6[2];
    v39 = v38 - 1;
    v81 = v38;
    if (v38 <= 1)
      v38 = 1;
    v65 = v38 - 1;
    v66 = v39;
    v40 = v9;
    v76 = v7;
    v77 = v10;
    while (1)
    {
      v79 = v8;
      v72 = v8 - 1;
      v74 = v37;
      v41 = v37 - 1;
      v42 = *--v40;
      v70 = *(v37 - 1);
      v43 = v42;
      swift_getAtKeyPath();
      v44 = v43;
      swift_getAtKeyPath();
      v68 = v44;

      if (!v81)
        goto LABEL_88;
      v45 = a6[4];
      v46 = a6[5];
      v63 = v46;
      if (v45 == v82 && v46 == v83)
      {
        swift_bridgeObjectRelease();
        v47 = v79;
LABEL_87:
        swift_bridgeObjectRelease();

      }
      else
      {
        if ((sub_23361F224() & 1) == 0)
        {
          v50 = a6 + 7;
          v51 = 1;
          while (1)
          {
            v48 = v51;
            if (v81 == v51)
              break;
            if (*(v50 - 1) != v82 || *v50 != v83)
            {
              v53 = sub_23361F224();
              v51 = v48 + 1;
              v50 += 2;
              if ((v53 & 1) == 0)
                continue;
            }
            swift_bridgeObjectRelease();
            if (v45 != v82)
              goto LABEL_91;
            v47 = v79;
            if (v63 != v83)
              goto LABEL_92;
            goto LABEL_87;
          }
LABEL_88:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v47 = v79;
LABEL_89:
          v37 = v74;

          v49 = v76;
LABEL_90:
          v54 = v72;
          goto LABEL_95;
        }
        swift_bridgeObjectRelease();
        v48 = 0;
        if (v45 == v82)
        {
          v27 = v46 == v83;
          v47 = v79;
          if (v27)
          {

            swift_bridgeObjectRelease();
            v37 = v74;
            v49 = v76;
            goto LABEL_90;
          }
        }
        else
        {
LABEL_91:
          v47 = v79;
        }
LABEL_92:
        if ((sub_23361F224() & 1) == 0)
        {
          v55 = 0;
          v56 = a6 + 7;
          do
          {
            v57 = v55;
            if (v66 == v55)
            {

              swift_bridgeObjectRelease();
              goto LABEL_89;
            }
            if (v65 == v55)
            {
              __break(1u);
LABEL_121:
              __break(1u);
              goto LABEL_122;
            }
            if (*(v56 - 1) == v82 && v83 == *v56)
              break;
            v59 = sub_23361F224();
            v56 += 2;
            v55 = v57 + 1;
          }
          while ((v59 & 1) == 0);

          swift_bridgeObjectRelease();
          v60 = v48 <= v57;
          v37 = v74;
          v49 = v76;
          v54 = v72;
          if (!v60)
            goto LABEL_95;
          if (v47 != v9 || v72 >= v9)
            *v72 = *v40;
          v86 = v40;
          goto LABEL_100;
        }

        swift_bridgeObjectRelease();
      }
      v54 = v72;
      v37 = v74;

      v49 = v76;
LABEL_95:
      v84 = v41;
      if (v47 < v37 || v54 >= v37 || v47 != v37)
        *v54 = *v41;
      v40 = v9;
      v37 = v41;
LABEL_100:
      if (v40 > v77)
      {
        v9 = v40;
        v8 = v54;
        if (v37 > v49)
          continue;
      }
      goto LABEL_119;
    }
  }
  if (v11 >= -7)
  {
    if (__dst != __src || &__src[v13] <= __dst)
      memmove(__dst, __src, 8 * v13);
    v69 = &v7[v13];
    v84 = v69;
    if (v9 < v8 && v11 >= 8)
    {
      v17 = a6[2];
      v67 = v17 - 1;
      v78 = v8;
      v80 = v17;
      if (v17 <= 1)
        v17 = 1;
      v71 = v17 - 1;
      while (1)
      {
        v75 = v7;
        v18 = *v7;
        v73 = *v9;
        v19 = v18;
        swift_getAtKeyPath();
        v20 = v19;
        swift_getAtKeyPath();

        if (v80)
        {
          v21 = a6[4];
          v22 = a6[5];
          if (v21 == v82 && v22 == v83)
          {
            swift_bridgeObjectRelease();
LABEL_32:
            swift_bridgeObjectRelease();

LABEL_37:
            v7 = v75;
            goto LABEL_38;
          }
          if ((sub_23361F224() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v23 = 0;
            v24 = v67;
            if (v21 == v82 && v22 == v83)
            {

              swift_bridgeObjectRelease();
              v7 = v75;
              goto LABEL_39;
            }
LABEL_35:
            if ((sub_23361F224() & 1) == 0)
            {
              v32 = 0;
              v33 = a6 + 7;
              v7 = v75;
              do
              {
                if (v24 == v32)
                {

                  swift_bridgeObjectRelease();
                  goto LABEL_38;
                }
                v34 = v32;
                if (v71 == v32)
                  goto LABEL_121;
                if (*(v33 - 1) == v82 && v83 == *v33)
                  break;
                v36 = sub_23361F224();
                v33 += 2;
                v32 = v34 + 1;
              }
              while ((v36 & 1) == 0);

              swift_bridgeObjectRelease();
              v29 = (unint64_t)v78;
              v30 = v9;
              if (v23 > v34)
                goto LABEL_40;
              v31 = v9 + 1;
              if (v10 < v9 || v10 >= v31 || v10 != v9)
                *v10 = *v9;
              goto LABEL_43;
            }

            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
          v25 = a6 + 7;
          v26 = 1;
          while (1)
          {
            v23 = v26;
            if (v80 == v26)
              break;
            v27 = *(v25 - 1) == v82 && *v25 == v83;
            if (!v27)
            {
              v28 = sub_23361F224();
              v26 = v23 + 1;
              v25 += 2;
              if ((v28 & 1) == 0)
                continue;
            }
            swift_bridgeObjectRelease();
            if (v21 != v82)
            {
              v24 = v67;
              goto LABEL_35;
            }
            v24 = v67;
            if (v22 != v83)
              goto LABEL_35;
            goto LABEL_32;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v7 = v75;
LABEL_38:

LABEL_39:
        v29 = (unint64_t)v78;
        v30 = v9;
LABEL_40:
        if (v10 != v7)
          *v10 = *v7;
        v85 = ++v7;
        v31 = v30;
LABEL_43:
        ++v10;
        if (v7 < v69)
        {
          v9 = v31;
          if ((unint64_t)v31 < v29)
            continue;
        }
        v86 = v10;
        goto LABEL_119;
      }
    }
    goto LABEL_119;
  }
LABEL_122:
  swift_bridgeObjectRelease();
  swift_release();
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

void sub_2332509A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (a3 == a2)
    return;
  v6 = *a4;
  v7 = a6[2];
  v8 = v7 - 1;
  v36 = v7;
  if (v7 <= 1)
    v7 = 1;
  v9 = v7 - 1;
  v31 = *a4;
  do
  {
    v10 = *(void **)(v6 + 8 * a3);
    v30 = a3;
    while (2)
    {
      v33 = a3 - 1;
      v34 = a3;
      v11 = *(void **)(v6 + 8 * (a3 - 1));
      v12 = v10;
      v13 = v11;
      swift_getAtKeyPath();
      v35 = v12;

      v14 = v13;
      swift_getAtKeyPath();

      if (!v36 || (v16 = a6[4], v15 = a6[5], v16 == v37) && v15 == v38)
      {
LABEL_36:
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();

        goto LABEL_38;
      }
      if ((sub_23361F224() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v17 = 0;
        if (v16 == v37 && v15 == v38)
        {

          swift_bridgeObjectRelease();
LABEL_39:
          v6 = v31;
          break;
        }
      }
      else
      {
        v27 = v15;
        v18 = a6 + 7;
        v19 = 1;
        do
        {
          v17 = v19;
          if (v36 == v19)
            goto LABEL_36;
          if (*(v18 - 1) == v37 && *v18 == v38)
            break;
          v21 = sub_23361F224();
          v19 = v17 + 1;
          v18 += 2;
        }
        while ((v21 & 1) == 0);
        swift_bridgeObjectRelease();
        if (v16 == v37 && v27 == v38)
          goto LABEL_37;
      }
      if ((sub_23361F224() & 1) != 0)
      {
LABEL_35:

        swift_bridgeObjectRelease();
LABEL_38:

        goto LABEL_39;
      }
      v22 = 0;
      v23 = a6 + 7;
      do
      {
        if (v8 == v22)
          goto LABEL_35;
        v24 = v22;
        if (v9 == v22)
        {
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (*(v23 - 1) == v37 && v38 == *v23)
          break;
        v26 = sub_23361F224();
        v23 += 2;
        v22 = v24 + 1;
      }
      while ((v26 & 1) == 0);

      swift_bridgeObjectRelease();
      v6 = v31;
      if (v17 > v24)
        break;
      if (!v31)
        goto LABEL_43;
      v10 = *(void **)(v31 + 8 * v34);
      *(_QWORD *)(v31 + 8 * v34) = *(_QWORD *)(v31 + 8 * v33);
      *(_QWORD *)(v31 + 8 * v33) = v10;
      a3 = v33;
      if (v33 != a1)
        continue;
      break;
    }
    a3 = v30 + 1;
  }
  while (v30 + 1 != a2);
}

uint64_t sub_233250CC4(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t), void (*a5)(_QWORD), void (*a6)(id **, void ***, void ***))
{
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v16[2];

  v12 = *a1;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = a4(v12);
    *a1 = v12;
  }
  v14 = *(_QWORD *)(v12 + 16);
  v16[0] = v12 + 32;
  v16[1] = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23324F0B4(v16, a2, a3, a5, a6);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23361EE58();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Input.formatted<A>(_:)()
{
  return sub_23361CA04();
}

uint64_t static Order.PickupFulfillment.NotificationFormatStyle.Input.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  char v11;

  if (_s10FinanceKit5OrderV17PickupFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0(a1, a2))
  {
    v4 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
    v5 = *(int *)(v4 + 20);
    v6 = *(_QWORD *)(a1 + v5);
    v7 = *(_QWORD *)(a1 + v5 + 8);
    v8 = (_QWORD *)(a2 + v5);
    v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (v10 = sub_23361F224(), v11 = 0, (v10 & 1) != 0))
      v11 = *(_BYTE *)(a1 + *(int *)(v4 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Output.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Output.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.Fulfillment.NotificationFormatStyle.Output.title.modify())()
{
  return nullsub_1;
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Output.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Output.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Order.Fulfillment.NotificationFormatStyle.Output.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t Order.Fulfillment.NotificationFormatStyle.format(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a1;
  v45 = a2;
  v2 = _s40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v2);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v43, (uint64_t)v26, v27);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v26, (uint64_t)v11, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input);
    sub_2331684BC(v44, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    if (v11[*(int *)(v9 + 24)] == 1)
    {
      v28 = v41;
      sub_2331684BC((uint64_t)v8, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_233254318((uint64_t (*)(void))sub_233256DE4, &v46);
      v29 = _s39NotificationMultiFulfillmentFormatStyleVMa;
    }
    else
    {
      v28 = v42;
      sub_2331684BC((uint64_t)v8, v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_23325443C((uint64_t)v11, &v46);
      v29 = _s40NotificationSingleFulfillmentFormatStyleVMa;
    }
    sub_233168500(v28, v29);
    v32 = v46;
    v33 = v47;
    v34 = v48;
    v35 = v49;
    sub_233168500((uint64_t)v8, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle);
    v36 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input;
    v37 = (uint64_t)v11;
  }
  else
  {
    sub_233168580((uint64_t)v26, (uint64_t)v23, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input);
    sub_2331684BC(v44, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    if (v23[*(int *)(v21 + 24)] == 1)
    {
      sub_2331684BC((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_233254318((uint64_t (*)(void))sub_233253018, &v46);
      v30 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa;
      v31 = (uint64_t)v17;
    }
    else
    {
      sub_2331684BC((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      sub_233251744((uint64_t)v23, &v46);
      v30 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa;
      v31 = (uint64_t)v14;
    }
    sub_233168500(v31, v30);
    v32 = v46;
    v33 = v47;
    v34 = v48;
    v35 = v49;
    sub_233168500((uint64_t)v20, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle);
    v36 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input;
    v37 = (uint64_t)v23;
  }
  result = sub_233168500(v37, v36);
  v39 = v45;
  *v45 = v32;
  v39[1] = v33;
  v39[2] = v34;
  v39[3] = v35;
  return result;
}

double Order.PickupFulfillment.NotificationFormatStyle.format(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  double result;
  __int128 v15;
  _OWORD v16[2];

  v3 = v2;
  v6 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1
                + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 24)) == 1)
  {
    sub_2331684BC(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233254318((uint64_t (*)(void))sub_233253018, (uint64_t *)v16);
    v12 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233251744(a1, (uint64_t *)v16);
    v12 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v8;
  }
  sub_233168500(v13, v12);
  result = *(double *)v16;
  v15 = v16[1];
  *a2 = v16[0];
  a2[1] = v15;
  return result;
}

double Order.ShippingFulfillment.NotificationFormatStyle.format(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  double result;
  __int128 v15;
  _OWORD v16[2];

  v3 = v2;
  v6 = _s40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1
                + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0) + 24)) == 1)
  {
    sub_2331684BC(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233254318((uint64_t (*)(void))sub_233256DE4, (uint64_t *)v16);
    v12 = _s39NotificationMultiFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23325443C(a1, (uint64_t *)v16);
    v12 = _s40NotificationSingleFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v8;
  }
  sub_233168500(v13, v12);
  result = *(double *)v16;
  v15 = v16[1];
  *a2 = v16[0];
  a2[1] = v15;
  return result;
}

uint64_t sub_2332515B0()
{
  sub_23325B7D0();
  return sub_23361F428();
}

uint64_t sub_2332515D8()
{
  sub_23325B7D0();
  return sub_23361F434();
}

uint64_t Order.Fulfillment.NotificationFormatStyle.encode(to:)(_QWORD *a1)
{
  return sub_23325A5E4(a1, &qword_2560466F8, (void (*)(void))sub_23325B7D0);
}

uint64_t Order.Fulfillment.NotificationFormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256046708, type metadata accessor for Order.Fulfillment.NotificationFormatStyle, (void (*)(void))sub_23325B7D0, a2);
}

uint64_t sub_233251668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.Fulfillment.NotificationFormatStyle.init(from:)(a1, a2);
}

uint64_t sub_23325167C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_2560466F8, (void (*)(void))sub_23325B7D0);
}

uint64_t sub_2332516B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  char v12;

  if (static Order.PickupFulfillment.StatusValues.== infix(_:_:)(a1, a2))
  {
    v6 = *(int *)(a3 + 20);
    v7 = *(_QWORD *)(a1 + v6);
    v8 = *(_QWORD *)(a1 + v6 + 8);
    v9 = (_QWORD *)(a2 + v6);
    v10 = v7 == *v9 && v8 == v9[1];
    if (v10 || (v11 = sub_23361F224(), v12 = 0, (v11 & 1) != 0))
      v12 = *(_BYTE *)(a1 + *(int *)(a3 + 24)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_233251744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
  v9 = *v7;
  v8 = v7[1];
  sub_2331686A0(a1, (uint64_t)v6, &qword_256043800);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
      __asm { BR              X9 }
    v46 = a2;
    v26 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v26 != -1)
      swift_once();
    v27 = (void *)qword_2542450A0;
    v28 = (void *)sub_23361E12C();
    v29 = (void *)sub_23361E12C();
    v30 = (void *)sub_23361E12C();
    v31 = objc_msgSend(v27, sel_localizedStringForKey_value_table_, v28, v29, v30);

    v11 = sub_23361E150();
    v20 = v32;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_233623D60;
    *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v33 + 64) = sub_2331683F0();
    *(_QWORD *)(v33 + 32) = v9;
    *(_QWORD *)(v33 + 40) = v8;
    v34 = (void *)qword_2542450A0;
    v35 = (void *)sub_23361E12C();
    v36 = (void *)sub_23361E12C();
    v37 = (void *)sub_23361E12C();
    v38 = objc_msgSend(v34, sel_localizedStringForKey_value_table_, v35, v36, v37);

    sub_23361E150();
    v42 = sub_23361E180();
    v44 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_233168608((uint64_t)v6, &qword_256043800);
    goto LABEL_14;
  }
  v11 = *v6;
  if (*v6)
  {
    if ((_DWORD)v11 == 1)
    {
      v12 = v9;
      v46 = a2;
      v13 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v13 == -1)
      {
LABEL_7:
        v14 = (void *)qword_2542450A0;
        v15 = (void *)sub_23361E12C();
        v16 = (void *)sub_23361E12C();
        v17 = (void *)sub_23361E12C();
        v18 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, v16, v17);

        v11 = sub_23361E150();
        v20 = v19;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_233623D60;
        *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v21 + 64) = sub_2331683F0();
        *(_QWORD *)(v21 + 32) = v12;
        *(_QWORD *)(v21 + 40) = v8;
        v22 = (void *)qword_2542450A0;
        v23 = (void *)sub_23361E12C();
        v24 = (void *)sub_23361E12C();
        v25 = (void *)sub_23361E12C();
        v41 = objc_msgSend(v22, sel_localizedStringForKey_value_table_, v23, v24, v25);

        sub_23361E150();
        v42 = sub_23361E180();
        v44 = v43;
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
LABEL_14:
        a2 = v46;
        goto LABEL_15;
      }
    }
    else
    {
      v12 = v9;
      v46 = a2;
      v40 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v40 == -1)
        goto LABEL_7;
    }
    swift_once();
    goto LABEL_7;
  }
  v20 = *v6;
  v42 = v20;
  v44 = v20;
LABEL_15:
  *a2 = v11;
  a2[1] = v20;
  a2[2] = v42;
  a2[3] = v44;
  return result;
}

uint64_t sub_23325228C()
{
  sub_23325B828();
  return sub_23361F428();
}

uint64_t sub_2332522B4()
{
  sub_23325B828();
  return sub_23361F434();
}

uint64_t Order.PickupFulfillment.NotificationFormatStyle.encode(to:)(_QWORD *a1)
{
  return sub_23325A5E4(a1, &qword_256046710, (void (*)(void))sub_23325B828);
}

uint64_t Order.PickupFulfillment.NotificationFormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256046720, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle, (void (*)(void))sub_23325B828, a2);
}

double sub_233252340@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  double result;
  __int128 v15;
  _OWORD v16[2];

  v3 = v2;
  v6 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1
                + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 24)) == 1)
  {
    sub_2331684BC(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233254318((uint64_t (*)(void))sub_233253018, (uint64_t *)v16);
    v12 = _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233251744(a1, (uint64_t *)v16);
    v12 = _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v8;
  }
  sub_233168500(v13, v12);
  result = *(double *)v16;
  v15 = v16[1];
  *a2 = v16[0];
  a2[1] = v15;
  return result;
}

uint64_t sub_233252468@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.PickupFulfillment.NotificationFormatStyle.init(from:)(a1, a2);
}

uint64_t sub_23325247C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256046710, (void (*)(void))sub_23325B828);
}

uint64_t sub_2332524A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.PickupFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233252A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for FullDateFormatter();
  v5 = MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v17 + 24), (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_233623D60;
    v19 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = sub_2331683F0();
    *(_QWORD *)(v18 + 32) = v21;
    *(_QWORD *)(v18 + 40) = v20;
    v22 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (void *)qword_2542450A0;
    v24 = (void *)sub_23361E12C();
    v25 = (void *)sub_23361E12C();
    v26 = (void *)sub_23361E12C();
    v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_233623D50;
    v30 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v42 = v13;
    v31 = *v30;
    v32 = v30[1];
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    v33 = sub_2331683F0();
    *(_QWORD *)(v29 + 64) = v33;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v32;
    sub_2331684BC(v43, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v4, (uint64_t)v7);
    v7[*(int *)(v44 + 20)] = 0;
    sub_233168580((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v29 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 104) = v33;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v34 = v16;
    if (qword_2542450A8 != -1)
      swift_once();
    v35 = (void *)qword_2542450A0;
    v36 = (void *)sub_23361E12C();
    v37 = (void *)sub_23361E12C();
    v38 = (void *)sub_23361E12C();
    v39 = objc_msgSend(v35, sel_localizedStringForKey_value_table_, v36, v37, v38);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v42);
  }
  return v28;
}

uint64_t sub_233252F64()
{
  sub_233260EAC();
  return sub_23361F428();
}

uint64_t sub_233252F8C()
{
  sub_233260EAC();
  return sub_23361F434();
}

uint64_t sub_233252FB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256047150, _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa, (void (*)(void))sub_233260EAC, a2);
}

uint64_t sub_233252FEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047160, (void (*)(void))sub_233260EAC);
}

uint64_t sub_233253018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  sub_2331686A0(a1, (uint64_t)v4, &qword_256043800);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v9 = *v4;
    if (!*v4)
      return v9;
    if ((_DWORD)v9 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_233623D60;
      *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v10 + 64) = sub_2331683F0();
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v6;
      v11 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v11 == -1)
        goto LABEL_13;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_233623D60;
      *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v19 + 64) = sub_2331683F0();
      *(_QWORD *)(v19 + 32) = v7;
      *(_QWORD *)(v19 + 40) = v6;
      v20 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v20 == -1)
      {
LABEL_13:
        v21 = (void *)qword_2542450A0;
        v22 = (void *)sub_23361E12C();
        v23 = (void *)sub_23361E12C();
        v24 = (void *)sub_23361E12C();
        v25 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, v23, v24);

        sub_23361E150();
        v9 = sub_23361E180();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    swift_once();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
    __asm { BR              X9 }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233623D60;
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 64) = sub_2331683F0();
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v6;
  v13 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = (void *)qword_2542450A0;
  v15 = (void *)sub_23361E12C();
  v16 = (void *)sub_23361E12C();
  v17 = (void *)sub_23361E12C();
  v18 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, v16, v17);

  sub_23361E150();
  v9 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233168608((uint64_t)v4, &qword_256043800);
  return v9;
}

uint64_t sub_23325378C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.PickupFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233253D2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for FullDateFormatter();
  v5 = MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v17 + 24), (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_233623D60;
    v19 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = sub_2331683F0();
    *(_QWORD *)(v18 + 32) = v21;
    *(_QWORD *)(v18 + 40) = v20;
    v22 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (void *)qword_2542450A0;
    v24 = (void *)sub_23361E12C();
    v25 = (void *)sub_23361E12C();
    v26 = (void *)sub_23361E12C();
    v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_233623D50;
    v30 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0) + 20));
    v42 = v13;
    v31 = *v30;
    v32 = v30[1];
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    v33 = sub_2331683F0();
    *(_QWORD *)(v29 + 64) = v33;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v32;
    sub_2331684BC(v43, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v4, (uint64_t)v7);
    v7[*(int *)(v44 + 20)] = 0;
    sub_233168580((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v29 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 104) = v33;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v34 = v16;
    if (qword_2542450A8 != -1)
      swift_once();
    v35 = (void *)qword_2542450A0;
    v36 = (void *)sub_23361E12C();
    v37 = (void *)sub_23361E12C();
    v38 = (void *)sub_23361E12C();
    v39 = objc_msgSend(v35, sel_localizedStringForKey_value_table_, v36, v37, v38);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v42);
  }
  return v28;
}

uint64_t sub_233254248()
{
  sub_233260E68();
  return sub_23361F428();
}

uint64_t sub_233254270()
{
  sub_233260E68();
  return sub_23361F434();
}

double sub_233254298@<D0>(uint64_t *a1@<X8>)
{
  return sub_233254318((uint64_t (*)(void))sub_233253018, a1);
}

uint64_t sub_2332542B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256047138, _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa, (void (*)(void))sub_233260E68, a2);
}

uint64_t sub_2332542E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047148, (void (*)(void))sub_233260E68);
}

double sub_233254318@<D0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v3 = a1();
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    if (qword_2542450A8 != -1)
      swift_once();
    v7 = (void *)qword_2542450A0;
    v8 = (void *)sub_23361E12C();
    v9 = (void *)sub_23361E12C();
    v10 = (void *)sub_23361E12C();
    v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

    v12 = sub_23361E150();
    v14 = v13;

    *a2 = v12;
    a2[1] = v14;
    a2[2] = v5;
    a2[3] = v6;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

void sub_23325443C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  unsigned __int8 v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v7 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0) + 20));
  v9 = *v7;
  v8 = v7[1];
  sub_2331686A0(a1, (uint64_t)v6, &qword_256043810);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v15 = *v6;
    if (!*v6)
    {
      v14 = *v6;
      v13 = v14;
      v12 = v14;
      goto LABEL_14;
    }
    if ((_DWORD)v15 == 1)
    {
      v16 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v16 == -1)
        goto LABEL_13;
    }
    else
    {
      v31 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v31 == -1)
      {
LABEL_13:
        v32 = (void *)qword_2542450A0;
        v33 = (void *)sub_23361E12C();
        v34 = (void *)sub_23361E12C();
        v35 = (void *)sub_23361E12C();
        v36 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, v34, v35);

        v12 = sub_23361E150();
        v13 = v37;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_233623D60;
        *(_QWORD *)(v38 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v38 + 64) = sub_2331683F0();
        *(_QWORD *)(v38 + 32) = v9;
        *(_QWORD *)(v38 + 40) = v8;
        v39 = (void *)qword_2542450A0;
        v40 = (void *)sub_23361E12C();
        v41 = (void *)sub_23361E12C();
        v42 = (void *)sub_23361E12C();
        v43 = objc_msgSend(v39, sel_localizedStringForKey_value_table_, v40, v41, v42);

        sub_23361E150();
        v14 = sub_23361E180();
        v15 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_once();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v11 = v6[1];
    v46[0] = *v6;
    v46[1] = v11;
    sub_233254CBC(a1, v46);
    v12 = v47;
    v13 = v48;
    v14 = v49;
    v15 = v50;
  }
  else
  {
    v17 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v17 != -1)
      swift_once();
    v18 = (void *)qword_2542450A0;
    v19 = (void *)sub_23361E12C();
    v20 = (void *)sub_23361E12C();
    v21 = (void *)sub_23361E12C();
    v22 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, v20, v21);

    v12 = sub_23361E150();
    v13 = v23;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_233623D60;
    *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v24 + 64) = sub_2331683F0();
    *(_QWORD *)(v24 + 32) = v9;
    *(_QWORD *)(v24 + 40) = v8;
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v14 = sub_23361E180();
    v15 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)v6, &qword_256043810);
  }
LABEL_14:
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v14;
  a2[3] = v15;
}

uint64_t sub_233254AA0()
{
  sub_23325B86C();
  return sub_23361F428();
}

uint64_t sub_233254AC8()
{
  sub_23325B86C();
  return sub_23361F434();
}

uint64_t Order.ShippingFulfillment.NotificationFormatStyle.encode(to:)(_QWORD *a1)
{
  return sub_23325A5E4(a1, &qword_256046728, (void (*)(void))sub_23325B86C);
}

uint64_t Order.ShippingFulfillment.NotificationFormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256046738, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle, (void (*)(void))sub_23325B86C, a2);
}

double sub_233254B54@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  double result;
  __int128 v15;
  _OWORD v16[2];

  v3 = v2;
  v6 = _s40NotificationSingleFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s39NotificationMultiFulfillmentFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1
                + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0) + 24)) == 1)
  {
    sub_2331684BC(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233254318((uint64_t (*)(void))sub_233256DE4, (uint64_t *)v16);
    v12 = _s39NotificationMultiFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23325443C(a1, (uint64_t *)v16);
    v12 = _s40NotificationSingleFulfillmentFormatStyleVMa;
    v13 = (uint64_t)v8;
  }
  sub_233168500(v13, v12);
  result = *(double *)v16;
  v15 = v16[1];
  *a2 = v16[0];
  a2[1] = v15;
  return result;
}

uint64_t sub_233254C7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.ShippingFulfillment.NotificationFormatStyle.init(from:)(a1, a2);
}

uint64_t sub_233254C90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256046728, (void (*)(void))sub_23325B86C);
}

void sub_233254CBC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  v2 = *a2;
  type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  __asm { BR              X9 }
}

uint64_t sub_233254D24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v4 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if ((v3 & 1) != 0)
  {
    if (v4 != -1)
      swift_once();
  }
  else if (v4 != -1)
  {
    swift_once();
  }
  v5 = (void *)qword_2542450A0;
  v6 = (void *)sub_23361E12C();
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

  v10 = sub_23361E150();
  v12 = v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_233623D60;
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 64) = sub_2331683F0();
  *(_QWORD *)(v13 + 32) = v2;
  *(_QWORD *)(v13 + 40) = v1;
  v14 = (void *)qword_2542450A0;
  v15 = (void *)sub_23361E12C();
  v16 = (void *)sub_23361E12C();
  v17 = (void *)sub_23361E12C();
  v18 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, v16, v17);

  sub_23361E150();
  v19 = sub_23361E180();
  v21 = v20;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v0 = v10;
  v0[1] = v12;
  v0[2] = v19;
  v0[3] = v21;
  return result;
}

uint64_t sub_233255738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233255CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233256278(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for FullDateFormatter();
  v5 = MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v17 + 24), (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_233623D60;
    v19 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = sub_2331683F0();
    *(_QWORD *)(v18 + 32) = v21;
    *(_QWORD *)(v18 + 40) = v20;
    v22 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (void *)qword_2542450A0;
    v24 = (void *)sub_23361E12C();
    v25 = (void *)sub_23361E12C();
    v26 = (void *)sub_23361E12C();
    v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_233623D50;
    v30 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v42 = v13;
    v31 = *v30;
    v32 = v30[1];
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    v33 = sub_2331683F0();
    *(_QWORD *)(v29 + 64) = v33;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v32;
    sub_2331684BC(v43, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v4, (uint64_t)v7);
    v7[*(int *)(v44 + 20)] = 0;
    sub_233168580((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v29 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 104) = v33;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v34 = v16;
    if (qword_2542450A8 != -1)
      swift_once();
    v35 = (void *)qword_2542450A0;
    v36 = (void *)sub_23361E12C();
    v37 = (void *)sub_23361E12C();
    v38 = (void *)sub_23361E12C();
    v39 = objc_msgSend(v35, sel_localizedStringForKey_value_table_, v36, v37, v38);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v42);
  }
  return v28;
}

uint64_t sub_233256794(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v46);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for FullDateFormatter();
  v6 = MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v45 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 28);
  v48 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v13, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_233168608((uint64_t)v13, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v48
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v31 = 0xD000000000000039;
    if (v18)
      v31 = 0xD00000000000003CLL;
    v45[0] = v31;
    v32 = 0x800000023366F000;
    if (v18)
      v32 = 0x800000023366EFC0;
    v45[1] = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_233623D50;
    v34 = (uint64_t *)(v48
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v48 = v14;
    v36 = *v34;
    v35 = v34[1];
    *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
    v37 = sub_2331683F0();
    *(_QWORD *)(v33 + 64) = v37;
    *(_QWORD *)(v33 + 32) = v36;
    *(_QWORD *)(v33 + 40) = v35;
    sub_2331684BC(v45[2], (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v5, (uint64_t)v8);
    v8[*(int *)(v47 + 20)] = 0;
    sub_233168580((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v33 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v33 + 104) = v37;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v38 = v17;
    if (qword_2542450A8 != -1)
      swift_once();
    v39 = (void *)qword_2542450A0;
    v40 = (void *)sub_23361E12C();
    v41 = (void *)sub_23361E12C();
    v42 = (void *)sub_23361E12C();
    v43 = objc_msgSend(v39, sel_localizedStringForKey_value_table_, v40, v41, v42, v45[0]);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v48);
  }
  return v30;
}

uint64_t sub_233256D30()
{
  sub_233260F34();
  return sub_23361F428();
}

uint64_t sub_233256D58()
{
  sub_233260F34();
  return sub_23361F434();
}

uint64_t sub_233256D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256047180, _s40NotificationSingleFulfillmentFormatStyleVMa, (void (*)(void))sub_233260F34, a2);
}

uint64_t sub_233256DB8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047190, (void (*)(void))sub_233260F34);
}

uint64_t sub_233256DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  unsigned __int8 v30[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v5 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  sub_2331686A0(a1, (uint64_t)v4, &qword_256043810);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v11 = *v4;
    if (!*v4)
      return v11;
    if ((_DWORD)v11 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_233623D60;
      *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v12 + 64) = sub_2331683F0();
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v6;
      v13 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v13 == -1)
        goto LABEL_13;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_233623D60;
      *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v21 + 64) = sub_2331683F0();
      *(_QWORD *)(v21 + 32) = v7;
      *(_QWORD *)(v21 + 40) = v6;
      v22 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v22 == -1)
      {
LABEL_13:
        v23 = (void *)qword_2542450A0;
        v24 = (void *)sub_23361E12C();
        v25 = (void *)sub_23361E12C();
        v26 = (void *)sub_23361E12C();
        v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

        sub_23361E150();
        v11 = sub_23361E180();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    swift_once();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v9 = v4[1];
    v30[0] = *v4;
    v30[1] = v9;
    sub_233257258(a1, v30);
    return v10;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_233623D60;
    *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v14 + 64) = sub_2331683F0();
    *(_QWORD *)(v14 + 32) = v7;
    *(_QWORD *)(v14 + 40) = v6;
    v15 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v15 != -1)
      swift_once();
    v16 = (void *)qword_2542450A0;
    v17 = (void *)sub_23361E12C();
    v18 = (void *)sub_23361E12C();
    v19 = (void *)sub_23361E12C();
    v20 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, v18, v19);

    sub_23361E150();
    v11 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)v4, &qword_256043810);
  }
  return v11;
}

void sub_233257258(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  v2 = *a2;
  type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  __asm { BR              X9 }
}

uint64_t sub_2332572B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2331683F0();
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v0;
  v4 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if ((v2 & 1) != 0)
  {
    if (v4 != -1)
      swift_once();
  }
  else if (v4 != -1)
  {
    swift_once();
  }
  v5 = (void *)qword_2542450A0;
  v6 = (void *)sub_23361E12C();
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

  sub_23361E150();
  v10 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2332576F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233257C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v48 - v7;
  v9 = sub_23361D634();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 20);
  v53 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v14, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256043808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    v31 = v48;
    Order.FulfillmentWindow.isSingleDateWindow(calendar:)();
    Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
    v32 = v49;
    sub_2331684BC(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v32, (uint64_t)v6);
    v6[*(int *)(v52 + 20)] = 0;
    sub_233168580((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
    v33 = v54;
    v34 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D50;
    v36 = (uint64_t *)(v53
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    v40 = sub_2331683F0();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    v41 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = (void *)qword_2542450A0;
    v43 = (void *)sub_23361E12C();
    v44 = (void *)sub_23361E12C();
    v45 = (void *)sub_23361E12C();
    v46 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, v44, v45);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
  }
  return v30;
}

uint64_t sub_233258230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for FullDateFormatter();
  v5 = MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v17 + 24), (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_233623D60;
    v19 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = sub_2331683F0();
    *(_QWORD *)(v18 + 32) = v21;
    *(_QWORD *)(v18 + 40) = v20;
    v22 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (void *)qword_2542450A0;
    v24 = (void *)sub_23361E12C();
    v25 = (void *)sub_23361E12C();
    v26 = (void *)sub_23361E12C();
    v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_233623D50;
    v30 = (uint64_t *)(a1
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v42 = v13;
    v31 = *v30;
    v32 = v30[1];
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    v33 = sub_2331683F0();
    *(_QWORD *)(v29 + 64) = v33;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v32;
    sub_2331684BC(v43, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v4, (uint64_t)v7);
    v7[*(int *)(v44 + 20)] = 0;
    sub_233168580((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v29 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 104) = v33;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v34 = v16;
    if (qword_2542450A8 != -1)
      swift_once();
    v35 = (void *)qword_2542450A0;
    v36 = (void *)sub_23361E12C();
    v37 = (void *)sub_23361E12C();
    v38 = (void *)sub_23361E12C();
    v39 = objc_msgSend(v35, sel_localizedStringForKey_value_table_, v36, v37, v38);

    sub_23361E150();
    v28 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v42);
  }
  return v28;
}

uint64_t sub_23325874C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v46);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for FullDateFormatter();
  v6 = MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v45 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v19 = *(int *)(type metadata accessor for Order.ShippingFulfillment.StatusValues(0) + 28);
  v48 = a1;
  sub_2331686A0(a1 + v19, (uint64_t)v13, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_233168608((uint64_t)v13, (uint64_t *)&unk_254247DA0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_233623D60;
    v21 = (uint64_t *)(v48
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_2331683F0();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v22;
    v24 = qword_2542450A8;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = (void *)qword_2542450A0;
    v26 = (void *)sub_23361E12C();
    v27 = (void *)sub_23361E12C();
    v28 = (void *)sub_23361E12C();
    v29 = objc_msgSend(v25, sel_localizedStringForKey_value_table_, v26, v27, v28);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v31 = 0xD000000000000038;
    if (v18)
      v31 = 0xD00000000000003BLL;
    v45[0] = v31;
    v32 = 0x800000023366E9C0;
    if (v18)
      v32 = 0x800000023366E980;
    v45[1] = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_233623D50;
    v34 = (uint64_t *)(v48
                    + *(int *)(type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0)
                             + 20));
    v48 = v14;
    v36 = *v34;
    v35 = v34[1];
    *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
    v37 = sub_2331683F0();
    *(_QWORD *)(v33 + 64) = v37;
    *(_QWORD *)(v33 + 32) = v36;
    *(_QWORD *)(v33 + 40) = v35;
    sub_2331684BC(v45[2], (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    swift_bridgeObjectRetain();
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090((uint64_t)v5, (uint64_t)v8);
    v8[*(int *)(v47 + 20)] = 0;
    sub_233168580((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    *(_QWORD *)(v33 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v33 + 104) = v37;
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    sub_23361D61C();
    sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v38 = v17;
    if (qword_2542450A8 != -1)
      swift_once();
    v39 = (void *)qword_2542450A0;
    v40 = (void *)sub_23361E12C();
    v41 = (void *)sub_23361E12C();
    v42 = (void *)sub_23361E12C();
    v43 = objc_msgSend(v39, sel_localizedStringForKey_value_table_, v40, v41, v42, v45[0]);

    sub_23361E150();
    v30 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v48);
  }
  return v30;
}

uint64_t sub_233258CE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t (*v27)(_QWORD);

  v25 = a4;
  v22 = a5;
  v8 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v24 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a3;
  v13 = a3(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - v14;
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v25();
  v16 = v26;
  sub_23361F3EC();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t)v15;
    v18 = v27;
  }
  else
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    sub_2331C7090(v24, (uint64_t)v15);
    v20 = v27;
    sub_2331684BC((uint64_t)v15, v22, v27);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t)v15;
    v18 = v20;
  }
  return sub_233168500(v17, v18);
}

uint64_t sub_233258EF4()
{
  sub_233260EF0();
  return sub_23361F428();
}

uint64_t sub_233258F1C()
{
  sub_233260EF0();
  return sub_23361F434();
}

double sub_233258F44@<D0>(uint64_t *a1@<X8>)
{
  return sub_233254318((uint64_t (*)(void))sub_233256DE4, a1);
}

uint64_t sub_233258F60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256047168, _s39NotificationMultiFulfillmentFormatStyleVMa, (void (*)(void))sub_233260EF0, a2);
}

uint64_t sub_233258F94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047178, (void (*)(void))sub_233260EF0);
}

uint64_t _s10FinanceKit5OrderV11FulfillmentO23NotificationFormatStyleV13configurationAgA22FormatterConfigurationV_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23361D6D0();
  type metadata accessor for FormatterConfiguration();
  sub_23361D7D8();
  sub_23361D88C();
  return sub_2331C7090(a1, a2);
}

uint64_t Order.Return.NotificationFormatStyle.format(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v3 = v2;
  v6 = _s35NotificationSingleReturnFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s34NotificationMultiReturnFormatStyleVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    sub_2331684BC(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233259140(a1, (uint64_t)v18);
    v12 = _s34NotificationMultiReturnFormatStyleVMa;
    v13 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_2332598EC(a1);
    v12 = _s35NotificationSingleReturnFormatStyleVMa;
    v13 = (uint64_t)v8;
  }
  result = sub_233168500(v13, v12);
  v15 = v18[1];
  v16 = v18[2];
  v17 = v18[3];
  *a2 = v18[0];
  a2[1] = v15;
  a2[2] = v16;
  a2[3] = v17;
  return result;
}

void sub_233259140(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v17 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v17);
  v16[4] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v19);
  v16[2] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)v16 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23361D634();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v21 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542450A8 != -1)
    swift_once();
  v10 = (void *)qword_2542450A0;
  v11 = (void *)sub_23361E12C();
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E12C();
  v14 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, v12, v13);

  sub_23361E150();
  v22 = v15;

  __asm { BR              X10 }
}

void sub_2332598EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X10 }
}

uint64_t sub_233259A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  *(_QWORD *)(v10 - 168) = v3;
  *(_QWORD *)(v10 - 160) = v4;
  *(_QWORD *)(v10 - 144) = v1;
  *(_QWORD *)(v10 - 128) = v5;
  *(_QWORD *)(v10 - 120) = a1;
  if (qword_2542450A8 != -1)
    swift_once();
  v11 = (void *)qword_2542450A0;
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E12C();
  *(_QWORD *)(v10 - 152) = 0x8000000233668A40;
  v14 = (void *)sub_23361E12C();
  v15 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, v13, v14);

  *(_QWORD *)(v10 - 136) = sub_23361E150();
  *(_QWORD *)(v10 - 112) = v16;

  v17 = type metadata accessor for Order.Return.NotificationFormatStyle.Input(0);
  v18 = *(_QWORD *)(v10 - 128);
  sub_2331686A0(v18 + *(int *)(v17 + 28), v2, (uint64_t *)&unk_254247DA0);
  v19 = *(_QWORD *)(v10 - 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2, 1, v19) == 1)
  {
    sub_233168608(v2, (uint64_t *)&unk_254247DA0);
    v20 = (void *)qword_2542450A0;
    v21 = (void *)sub_23361E12C();
    v22 = (void *)sub_23361E12C();
    v23 = (void *)sub_23361E12C();
    v24 = objc_msgSend(v20, sel_localizedStringForKey_value_table_, v21, v22, v23);

    sub_23361E150();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_233623D60;
    v27 = *(_QWORD *)(v18 + 8);
    v26 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v25 + 64) = sub_2331683F0();
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v26;
    swift_bridgeObjectRetain();
    v28 = sub_23361E18C();
    v30 = v29;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v10 - 144), v2, v19);
    v32 = (void *)qword_2542450A0;
    v33 = (void *)sub_23361E12C();
    v34 = (void *)sub_23361E12C();
    v35 = (void *)sub_23361E12C();
    v36 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, v34, v35);
    v37 = v18;
    v38 = v36;

    *(_QWORD *)(v10 - 152) = sub_23361E150();
    *(_QWORD *)(v10 - 176) = v39;

    sub_2331684BC(*(_QWORD *)(v10 - 168), v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v9, v6);
    *(_BYTE *)(v6 + *(int *)(*(_QWORD *)(v10 - 160) + 20)) = 0;
    sub_233168580(v6, v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    sub_233167C58(&qword_256047198, (uint64_t (*)(uint64_t))type metadata accessor for FullDateFormatter, (uint64_t)&protocol conformance descriptor for FullDateFormatter);
    v40 = *(_QWORD *)(v10 - 144);
    sub_23361D61C();
    sub_233168500(v8, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v41 = *(_QWORD *)(v10 - 96);
    v42 = *(_QWORD *)(v10 - 88);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_233623D50;
    v45 = *(_QWORD *)(v37 + 8);
    v44 = *(_QWORD *)(v37 + 16);
    v46 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v43 + 56) = MEMORY[0x24BEE0D00];
    v47 = sub_2331683F0();
    *(_QWORD *)(v43 + 32) = v45;
    *(_QWORD *)(v43 + 40) = v44;
    *(_QWORD *)(v43 + 96) = v46;
    *(_QWORD *)(v43 + 104) = v47;
    *(_QWORD *)(v43 + 64) = v47;
    *(_QWORD *)(v43 + 72) = v41;
    *(_QWORD *)(v43 + 80) = v42;
    swift_bridgeObjectRetain();
    v28 = sub_23361E18C();
    v30 = v48;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t, _QWORD))(v7 + 8))(v40, *(_QWORD *)(v10 - 120));
  }
  v49 = *(_QWORD *)(v10 - 112);
  v50 = *(_QWORD **)(v10 - 104);
  *v50 = *(_QWORD *)(v10 - 136);
  v50[1] = v49;
  v50[2] = v28;
  v50[3] = v30;
  return result;
}

uint64_t sub_23325A568()
{
  sub_23325B8D8();
  return sub_23361F428();
}

uint64_t sub_23325A590()
{
  sub_23325B8D8();
  return sub_23361F434();
}

uint64_t Order.Return.NotificationFormatStyle.encode(to:)(_QWORD *a1)
{
  return sub_23325A5E4(a1, &qword_256046740, (void (*)(void))sub_23325B8D8);
}

uint64_t sub_23325A5E4(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Order.Return.NotificationFormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233258CE8(a1, &qword_256046750, type metadata accessor for Order.Return.NotificationFormatStyle, (void (*)(void))sub_23325B8D8, a2);
}

uint64_t sub_23325A738@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.Return.NotificationFormatStyle.init(from:)(a1, a2);
}

uint64_t sub_23325A74C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256046740, (void (*)(void))sub_23325B8D8);
}

uint64_t sub_23325A778()
{
  sub_233260E24();
  return sub_23361F428();
}

uint64_t sub_23325A7A0()
{
  sub_233260E24();
  return sub_23361F434();
}

uint64_t sub_23325A7CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23325A82C(a1, &qword_256047120, _s35NotificationSingleReturnFormatStyleVMa, (void (*)(void))sub_233260E24, a2);
}

uint64_t sub_23325A800(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047130, (void (*)(void))sub_233260E24);
}

uint64_t sub_23325A82C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a5;
  v9 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v9);
  v24 = (uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3;
  v14 = a3(0);
  MEMORY[0x24BDAC7A8](v14);
  v20 = (uint64_t)&v19 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4();
  v16 = v25;
  sub_23361F3EC();
  if (!v16)
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
    v17 = v20;
    sub_233168580(v24, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233168580(v17, v21, v22);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23325AA00()
{
  sub_233260DE0();
  return sub_23361F428();
}

uint64_t sub_23325AA28()
{
  sub_233260DE0();
  return sub_23361F434();
}

uint64_t sub_23325AA54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23325A82C(a1, &qword_256047108, _s34NotificationMultiReturnFormatStyleVMa, (void (*)(void))sub_233260DE0, a2);
}

uint64_t sub_23325AA88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23325AAB4(a1, a2, a3, &qword_256047118, (void (*)(void))sub_233260DE0);
}

uint64_t sub_23325AAB4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t Order.Fulfillment.NotificationFormatStyle.Input.init(order:orderContent:fulfillment:)@<X0>(void *a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((a3 & 0x8000000000000000) != 0)
    Order.PickupFulfillment.NotificationFormatStyle.Input.init(order:orderContent:fulfillment:)(a1, a2, (void *)(a3 & 0x7FFFFFFFFFFFFFFFLL), a4);
  else
    Order.ShippingFulfillment.NotificationFormatStyle.Input.init(order:orderContent:fulfillment:)(a1, a2, (void *)a3, a4);
  type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Order.PickupFulfillment.NotificationFormatStyle.Input.init(order:orderContent:fulfillment:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23325AC48(a1, a2, a3, (void (*)(id, id, id))Order.PickupFulfillment.StatusValues.init(order:orderContent:fulfillment:), type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input, a4);
}

uint64_t Order.ShippingFulfillment.NotificationFormatStyle.Input.init(order:orderContent:fulfillment:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23325AC48(a1, a2, a3, (void (*)(id, id, id))Order.ShippingFulfillment.StatusValues.init(order:orderContent:fulfillment:), type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input, a4);
}

uint64_t sub_23325AC48@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void (*a4)(id, id, id)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  _QWORD *v25;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  a4(v11, v12, v13);
  v14 = objc_msgSend(v12, sel_merchant);
  v15 = objc_msgSend(v14, sel_displayName);

  v16 = sub_23361D6B8();
  v17 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v16);

  swift_bridgeObjectRelease();
  v18 = a5(0);
  *(Swift::String *)(a6 + *(int *)(v18 + 20)) = v17;
  v19 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v20 = (_QWORD *)sub_2331A6FB8(v19);
  swift_bridgeObjectRelease();
  v25 = v20;
  v21 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v22 = sub_2331A70F4(v21);
  swift_bridgeObjectRelease();
  sub_2331896C8(v22);
  sub_2331A8628(&v25);

  v23 = v25[2];
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(a6 + *(int *)(v18 + 24)) = v23 > 1;
  return result;
}

uint64_t Order.Return.NotificationFormatStyle.Input.init(order:orderContent:orderReturn:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  Swift::String v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);

  v11 = a4 + *(int *)(type metadata accessor for Order.Return.NotificationFormatStyle.Input(0) + 28);
  v12 = sub_23361D634();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v25 = v11;
  v13(v11, 1, 1, v12);
  *(_BYTE *)a4 = ManagedOrderReturn.status.getter();
  v14 = objc_msgSend(a2, sel_merchant);
  v15 = objc_msgSend(v14, sel_displayName);

  v16 = sub_23361D6B8();
  v17 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v16);

  swift_bridgeObjectRelease();
  *(Swift::String *)(a4 + 8) = v17;
  v18 = objc_msgSend(a2, sel_returnObjects);
  v19 = (uint64_t)objc_msgSend(v18, sel_count);

  *(_BYTE *)(a4 + 24) = v19 > 1;
  v20 = objc_msgSend(a3, sel_dropOffDate);
  if (v20)
  {
    v21 = v20;
    sub_23361D5EC();

    v22 = 0;
  }
  else
  {

    v22 = 1;
  }
  v13((uint64_t)v10, v22, 1, v12);
  return sub_23318C8A8((uint64_t)v10, v25);
}

BOOL _s10FinanceKit5OrderV6ReturnV23NotificationFormatStyleV5InputV2eeoiySbAI_AItFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  if (*a1 != *a2)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2)
    || (v20 = sub_23361F224(), result = 0, (v20 & 1) != 0))
  {
    if (a1[24] == a2[24])
    {
      v34 = v7;
      v22 = v4;
      v23 = v5;
      v24 = type metadata accessor for Order.Return.NotificationFormatStyle.Input(0);
      sub_2331686A0((uint64_t)&a1[*(int *)(v24 + 28)], (uint64_t)v19, (uint64_t *)&unk_254247DA0);
      v25 = *(int *)(v24 + 28);
      v26 = v23;
      v27 = v22;
      sub_2331686A0((uint64_t)&a2[v25], (uint64_t)v17, (uint64_t *)&unk_254247DA0);
      v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_2331686A0((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_254247DA0);
      sub_2331686A0((uint64_t)v17, v28, (uint64_t *)&unk_254247DA0);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
      if (v29((uint64_t)v10, 1, v22) == 1)
      {
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        if (v29(v28, 1, v22) == 1)
        {
          sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
          return 1;
        }
      }
      else
      {
        sub_2331686A0((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
        if (v29(v28, 1, v22) != 1)
        {
          v30 = v34;
          (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v34, v28, v27);
          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          v31 = sub_23361E108();
          v32 = *(void (**)(char *, uint64_t))(v26 + 8);
          v32(v30, v27);
          sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
          v32(v14, v27);
          sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
          return (v31 & 1) != 0;
        }
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v22);
      }
      sub_233168608((uint64_t)v10, &qword_256042DA0);
    }
    return 0;
  }
  return result;
}

uint64_t _s10FinanceKit5OrderV19ShippingFulfillmentV23NotificationFormatStyleV5InputV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  char v11;

  if (static Order.ShippingFulfillment.StatusValues.== infix(_:_:)(a1, a2))
  {
    v4 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
    v5 = *(int *)(v4 + 20);
    v6 = *(_QWORD *)(a1 + v5);
    v7 = *(_QWORD *)(a1 + v5 + 8);
    v8 = (_QWORD *)(a2 + v5);
    v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (v10 = sub_23361F224(), v11 = 0, (v10 & 1) != 0))
      v11 = *(_BYTE *)(a1 + *(int *)(v4 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s10FinanceKit5OrderV11FulfillmentO23NotificationFormatStyleV5InputO2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  BOOL v32;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;

  v37 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  MEMORY[0x24BDAC7A8](v37);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
  MEMORY[0x24BDAC7A8](v36);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560471A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_2331684BC(a1, (uint64_t)v17, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
  sub_2331684BC(a2, v18, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331684BC((uint64_t)v17, (uint64_t)v11, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v18, (uint64_t)v5, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input);
      if (!_s10FinanceKit5OrderV19ShippingFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0((uint64_t)v11, (uint64_t)v5)
        || ((v19 = *(int *)(v37 + 20),
             v20 = *(_QWORD *)&v11[v19],
             v21 = *(_QWORD *)&v11[v19 + 8],
             v22 = &v5[v19],
             v20 == *(_QWORD *)v22)
          ? (v23 = v21 == *((_QWORD *)v22 + 1))
          : (v23 = 0),
            !v23 && (sub_23361F224() & 1) == 0 || v11[*(int *)(v37 + 24)] != v5[*(int *)(v37 + 24)]))
      {
        sub_233168500((uint64_t)v5, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input);
        v24 = (uint64_t)v11;
        v25 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input;
LABEL_23:
        sub_233168500(v24, v25);
        sub_233168500((uint64_t)v17, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
        return 0;
      }
      sub_233168500((uint64_t)v5, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input);
      v34 = (uint64_t)v11;
      v35 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input;
      goto LABEL_28;
    }
    v26 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input;
    v27 = (uint64_t)v11;
  }
  else
  {
    sub_2331684BC((uint64_t)v17, (uint64_t)v13, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v18, (uint64_t)v7, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input);
      if (!_s10FinanceKit5OrderV17PickupFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0((uint64_t)v13, (uint64_t)v7)
        || ((v28 = *(int *)(v36 + 20),
             v29 = *(_QWORD *)&v13[v28],
             v30 = *(_QWORD *)&v13[v28 + 8],
             v31 = &v7[v28],
             v29 == *(_QWORD *)v31)
          ? (v32 = v30 == *((_QWORD *)v31 + 1))
          : (v32 = 0),
            !v32 && (sub_23361F224() & 1) == 0 || v13[*(int *)(v36 + 24)] != v7[*(int *)(v36 + 24)]))
      {
        sub_233168500((uint64_t)v7, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input);
        v24 = (uint64_t)v13;
        v25 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input;
        goto LABEL_23;
      }
      sub_233168500((uint64_t)v7, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input);
      v34 = (uint64_t)v13;
      v35 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input;
LABEL_28:
      sub_233168500(v34, v35);
      sub_233168500((uint64_t)v17, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
      return 1;
    }
    v26 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input;
    v27 = (uint64_t)v13;
  }
  sub_233168500(v27, v26);
  sub_233168608((uint64_t)v17, &qword_2560471A0);
  return 0;
}

uint64_t type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(uint64_t a1)
{
  return sub_233177414(a1, qword_2560469F8);
}

uint64_t _s40NotificationSingleFulfillmentFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046FB0);
}

uint64_t _s39NotificationMultiFulfillmentFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046F20);
}

uint64_t type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle(uint64_t a1)
{
  return sub_233177414(a1, qword_256046A90);
}

uint64_t type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(uint64_t a1)
{
  return sub_233177414(a1, qword_256046B20);
}

uint64_t _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046E90);
}

uint64_t _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046E00);
}

uint64_t type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle(uint64_t a1)
{
  return sub_233177414(a1, qword_256046968);
}

uint64_t type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input(uint64_t a1)
{
  return sub_233177414(a1, qword_2560468D8);
}

unint64_t sub_23325B7D0()
{
  unint64_t result;

  result = qword_256046700;
  if (!qword_256046700)
  {
    result = MEMORY[0x234934494](&unk_23363200C, &_s23NotificationFormatStyleV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256046700);
  }
  return result;
}

uint64_t type metadata accessor for Order.Fulfillment.NotificationFormatStyle(uint64_t a1)
{
  return sub_233177414(a1, qword_256046830);
}

unint64_t sub_23325B828()
{
  unint64_t result;

  result = qword_256046718;
  if (!qword_256046718)
  {
    result = MEMORY[0x234934494](&unk_233631FBC, &_s14descr250475739C23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046718);
  }
  return result;
}

unint64_t sub_23325B86C()
{
  unint64_t result;

  result = qword_256046730;
  if (!qword_256046730)
  {
    result = MEMORY[0x234934494](&unk_233631F6C, &_s23NotificationFormatStyleV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256046730);
  }
  return result;
}

uint64_t _s35NotificationSingleReturnFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046D70);
}

uint64_t _s34NotificationMultiReturnFormatStyleVMa(uint64_t a1)
{
  return sub_233177414(a1, qword_256046CE0);
}

unint64_t sub_23325B8D8()
{
  unint64_t result;

  result = qword_256046748;
  if (!qword_256046748)
  {
    result = MEMORY[0x234934494](&unk_233631F1C, &_s23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256046748);
  }
  return result;
}

uint64_t type metadata accessor for Order.Return.NotificationFormatStyle(uint64_t a1)
{
  return sub_233177414(a1, qword_256046BB8);
}

uint64_t type metadata accessor for Order.Return.NotificationFormatStyle.Input(uint64_t a1)
{
  return sub_233177414(a1, qword_256046C48);
}

uint64_t sub_23325B944()
{
  return sub_233167C58(&qword_256046758, type metadata accessor for Order.Fulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Fulfillment.NotificationFormatStyle);
}

uint64_t sub_23325B970()
{
  return sub_233167C58(&qword_256046760, type metadata accessor for Order.Fulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Fulfillment.NotificationFormatStyle);
}

uint64_t sub_23325B99C()
{
  return sub_233167C58(&qword_256046768, type metadata accessor for Order.Fulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Fulfillment.NotificationFormatStyle);
}

uint64_t sub_23325B9C8()
{
  return sub_233167C58(&qword_256046770, type metadata accessor for Order.Fulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Fulfillment.NotificationFormatStyle);
}

uint64_t sub_23325B9F4()
{
  return sub_233167C58(&qword_256046778, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BA20()
{
  return sub_233167C58(&qword_256046780, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BA4C()
{
  return sub_233167C58(&qword_256046788, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BA78()
{
  return sub_233167C58(&qword_256046790, type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BAA4()
{
  return sub_233167C58(&qword_256046798, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BAD0()
{
  return sub_233167C58(&qword_2560467A0, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BAFC()
{
  return sub_233167C58(&qword_2560467A8, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BB28()
{
  return sub_233167C58(&qword_2560467B0, type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment.NotificationFormatStyle);
}

uint64_t sub_23325BB54()
{
  return sub_233167C58(&qword_2560467B8, type metadata accessor for Order.Return.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Return.NotificationFormatStyle);
}

uint64_t sub_23325BB80()
{
  return sub_233167C58(&qword_2560467C0, type metadata accessor for Order.Return.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Return.NotificationFormatStyle);
}

uint64_t sub_23325BBAC()
{
  return sub_233167C58(&qword_2560467C8, type metadata accessor for Order.Return.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Return.NotificationFormatStyle);
}

uint64_t sub_23325BBD8()
{
  return sub_233167C58(&qword_2560467D0, type metadata accessor for Order.Return.NotificationFormatStyle, (uint64_t)&protocol conformance descriptor for Order.Return.NotificationFormatStyle);
}

uint64_t _s23NotificationFormatStyleVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s23NotificationFormatStyleVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s23NotificationFormatStyleV5InputOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v7 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v11 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Order.FulfillmentWindow(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v26 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v13, v14, v26);
        if (EnumCaseMultiPayload == 1)
        {
          v27 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v28 = &v13[v27];
          v29 = &v14[v27];
          v30 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v37 = v11[6];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_23361D634();
      v41 = *(_QWORD *)(v40 - 8);
      v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      if (v42(v39, 1, v40))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v44 = v11[7];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      if (v42((char *)a2 + v44, 1, v40))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v46, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v40);
      }
      v48 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
      v49 = *(int *)(v48 + 20);
      v50 = (uint64_t *)((char *)a1 + v49);
      v51 = (uint64_t *)((char *)a2 + v49);
      v53 = *v51;
      v52 = v51[1];
      *v50 = v53;
      v50[1] = v52;
      *((_BYTE *)a1 + *(int *)(v48 + 24)) = *((_BYTE *)a2 + *(int *)(v48 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v10 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      v18 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
      v19 = *(int *)(v18 + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for Order.FulfillmentWindow(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v31 = swift_getEnumCaseMultiPayload();
        v32 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v20, v21, v32);
        if (v31 == 1)
        {
          v33 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v34 = &v20[v33];
          v35 = &v21[v33];
          v36 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v54 = *(int *)(v18 + 24);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_23361D634();
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v60 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
      v61 = *(int *)(v60 + 20);
      v62 = (uint64_t *)((char *)a1 + v61);
      v63 = (uint64_t *)((char *)a2 + v61);
      v65 = *v63;
      v64 = v63[1];
      *v62 = v65;
      v62[1] = v64;
      *((_BYTE *)a1 + *(int *)(v60 + 24)) = *((_BYTE *)a2 + *(int *)(v60 + 24));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputOwxx(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v2 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    }
    v3 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
    v4 = a1 + v3[5];
    v5 = type metadata accessor for Order.FulfillmentWindow(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v7 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      if (EnumCaseMultiPayload == 1)
      {
        v8 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v9 = sub_23361CD40();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
    }
    v10 = a1 + v3[6];
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (!v13(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v14 = a1 + v3[7];
    if (!v13(v14, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v15 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
    }
    v16 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
    v17 = a1 + *(int *)(v16 + 20);
    v18 = type metadata accessor for Order.FulfillmentWindow(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
    {
      v19 = swift_getEnumCaseMultiPayload();
      v20 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);
      if (v19 == 1)
      {
        v21 = v17 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v22 = sub_23361CD40();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
    }
    v23 = a1 + *(int *)(v16 + 24);
    v24 = sub_23361D634();
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
  }
  return swift_bridgeObjectRelease();
}

char *_s23NotificationFormatStyleV5InputOwcp(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v5 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Order.FulfillmentWindow(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v23 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v11, v23);
      if (EnumCaseMultiPayload == 1)
      {
        v24 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v25 = &v10[v24];
        v26 = &v11[v24];
        v27 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v34 = v8[6];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = sub_23361D634();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v39(v36, 1, v37))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v41 = v8[7];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v39(&a2[v41], 1, v37))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v42, v43, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
    }
    v45 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
    v46 = *(int *)(v45 + 20);
    v47 = &a1[v46];
    v48 = &a2[v46];
    v50 = *(_QWORD *)v48;
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = v50;
    *((_QWORD *)v47 + 1) = v49;
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
    v16 = *(int *)(v15 + 20);
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for Order.FulfillmentWindow(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v28 = swift_getEnumCaseMultiPayload();
      v29 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v17, v18, v29);
      if (v28 == 1)
      {
        v30 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v31 = &v17[v30];
        v32 = &v18[v30];
        v33 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v51 = *(int *)(v15 + 24);
    v52 = &a1[v51];
    v53 = &a2[v51];
    v54 = sub_23361D634();
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v45 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
    v57 = *(int *)(v45 + 20);
    v58 = &a1[v57];
    v59 = &a2[v57];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = v61;
    *((_QWORD *)v58 + 1) = v60;
  }
  a1[*(int *)(v45 + 24)] = a2[*(int *)(v45 + 24)];
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *_s23NotificationFormatStyleV5InputOwca(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v5 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Order.FulfillmentWindow(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v23 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v11, v23);
        if (EnumCaseMultiPayload == 1)
        {
          v24 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v25 = &v10[v24];
          v26 = &v11[v24];
          v27 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v34 = v8[6];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_23361D634();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      if (v39(v36, 1, v37))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v41 = v8[7];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v39(&a2[v41], 1, v37))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v42, v43, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
      }
      v45 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
      v46 = *(int *)(v45 + 20);
      v47 = &a1[v46];
      v48 = &a2[v46];
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
    }
    else
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v7 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
      v16 = *(int *)(v15 + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for Order.FulfillmentWindow(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v28 = swift_getEnumCaseMultiPayload();
        v29 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v17, v18, v29);
        if (v28 == 1)
        {
          v30 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v31 = &v17[v30];
          v32 = &v18[v30];
          v33 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v49 = *(int *)(v15 + 24);
      v50 = &a1[v49];
      v51 = &a2[v49];
      v52 = sub_23361D634();
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v45 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
      v55 = *(int *)(v45 + 20);
      v56 = &a1[v55];
      v57 = &a2[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
    }
    a1[*(int *)(v45 + 24)] = a2[*(int *)(v45 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *_s23NotificationFormatStyleV5InputOwtk(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v5 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Order.FulfillmentWindow(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v23 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v10, v11, v23);
      if (EnumCaseMultiPayload == 1)
      {
        v24 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v25 = &v10[v24];
        v26 = &v11[v24];
        v27 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v34 = v8[6];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = sub_23361D634();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v39(v36, 1, v37))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v41 = v8[7];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v39(&a2[v41], 1, v37))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v42, v43, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
    }
    v45 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
    v16 = *(int *)(v15 + 20);
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for Order.FulfillmentWindow(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v28 = swift_getEnumCaseMultiPayload();
      v29 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v17, v18, v29);
      if (v28 == 1)
      {
        v30 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v31 = &v17[v30];
        v32 = &v18[v30];
        v33 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v46 = *(int *)(v15 + 24);
    v47 = &a1[v46];
    v48 = &a2[v46];
    v49 = sub_23361D634();
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v45 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
  }
  *(_OWORD *)&a1[*(int *)(v45 + 20)] = *(_OWORD *)&a2[*(int *)(v45 + 20)];
  a1[*(int *)(v45 + 24)] = a2[*(int *)(v45 + 24)];
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *_s23NotificationFormatStyleV5InputOwta(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v5 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Order.FulfillmentWindow(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v23 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v10, v11, v23);
        if (EnumCaseMultiPayload == 1)
        {
          v24 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v25 = &v10[v24];
          v26 = &v11[v24];
          v27 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v34 = v8[6];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_23361D634();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      if (v39(v36, 1, v37))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v41 = v8[7];
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v39(&a2[v41], 1, v37))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v42, v43, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
      }
      v45 = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(0);
    }
    else
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v7 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
      v16 = *(int *)(v15 + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for Order.FulfillmentWindow(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v28 = swift_getEnumCaseMultiPayload();
        v29 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v17, v18, v29);
        if (v28 == 1)
        {
          v30 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v31 = &v17[v30];
          v32 = &v18[v30];
          v33 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v46 = *(int *)(v15 + 24);
      v47 = &a1[v46];
      v48 = &a2[v46];
      v49 = sub_23361D634();
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v45 = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(0);
    }
    *(_OWORD *)&a1[*(int *)(v45 + 20)] = *(_OWORD *)&a2[*(int *)(v45 + 20)];
    a1[*(int *)(v45 + 24)] = a2[*(int *)(v45 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23325D888()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Order.PickupFulfillment.NotificationFormatStyle.Input(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Order.ShippingFulfillment.NotificationFormatStyle.Input(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Order.Fulfillment.NotificationFormatStyle.Output()
{
  return &type metadata for Order.Fulfillment.NotificationFormatStyle.Output;
}

uint64_t _s14descr250475739C23NotificationFormatStyleVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s14descr250475739C23NotificationFormatStyleVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s14descr250475739C23NotificationFormatStyleV5InputVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
    v11 = *(int *)(v10 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Order.FulfillmentWindow(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v12[v19];
        v21 = &v13[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v23 = *(int *)(v10 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_23361D634();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = *(int *)(a3 + 20);
    v30 = *(int *)(a3 + 24);
    v31 = (uint64_t *)((char *)a1 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s14descr250475739C23NotificationFormatStyleV5InputVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v2 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  v3 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v9 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
  }
  v10 = a1 + *(int *)(v3 + 24);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

char *_s14descr250475739C23NotificationFormatStyleV5InputVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v9 = *(int *)(v8 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v21 = *(int *)(v8 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23361D634();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = *(int *)(a3 + 20);
  v28 = *(int *)(a3 + 24);
  v29 = &a1[v27];
  v30 = &a2[v27];
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v31;
  a1[v28] = a2[v28];
  swift_bridgeObjectRetain();
  return a1;
}

char *_s14descr250475739C23NotificationFormatStyleV5InputVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043800);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v9 = *(int *)(v8 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v10[v19];
        v21 = &v11[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_17;
    }
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  if (v16)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v10, v11, v25);
    if (v24 == 1)
    {
      v26 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v27 = &v10[v26];
      v28 = &v11[v26];
      v29 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v30 = *(int *)(v8 + 24);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23361D634();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_22;
  }
  if (v37)
  {
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_23:
  v39 = *(int *)(a3 + 20);
  v40 = &a1[v39];
  v41 = &a2[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *_s14descr250475739C23NotificationFormatStyleV5InputVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v9 = *(int *)(v8 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v10, v11, v16);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v21 = *(int *)(v8 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23361D634();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  a1[v27] = a2[v27];
  return a1;
}

char *_s14descr250475739C23NotificationFormatStyleV5InputVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043800);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v9 = *(int *)(v8 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v10, v11, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v10[v19];
        v21 = &v11[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_17;
    }
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  if (v16)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v10, v11, v25);
    if (v24 == 1)
    {
      v26 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v27 = &v10[v26];
      v28 = &v11[v26];
      v29 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v30 = *(int *)(v8 + 24);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23361D634();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_22;
  }
  if (v37)
  {
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_23:
  v39 = *(int *)(a3 + 20);
  v40 = &a1[v39];
  v41 = &a2[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t _s14descr250475739C23NotificationFormatStyleV5InputVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23325E8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, type metadata accessor for Order.PickupFulfillment.StatusValues);
}

uint64_t _s14descr250475739C23NotificationFormatStyleV5InputVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23325E910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, type metadata accessor for Order.PickupFulfillment.StatusValues);
}

uint64_t sub_23325E91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23325FD20(a1, a2, a3, type metadata accessor for Order.PickupFulfillment.StatusValues);
}

uint64_t _s23NotificationFormatStyleVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s23NotificationFormatStyleVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s23NotificationFormatStyleV5InputVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
    v11 = v10[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Order.FulfillmentWindow(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v12[v19];
        v21 = &v13[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v23 = v10[6];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_23361D634();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v30 = v10[7];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    if (v28((char *)a2 + v30, 1, v26))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    v34 = *(int *)(a3 + 20);
    v35 = *(int *)(a3 + 24);
    v36 = (uint64_t *)((char *)a1 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwxx(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v2 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  v3 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v9 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
  }
  v10 = a1 + v3[6];
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = a1 + v3[7];
  if (!v13(v14, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  return swift_bridgeObjectRelease();
}

char *_s23NotificationFormatStyleV5InputVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v21 = v8[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23361D634();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = v8[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v26(&a2[v28], 1, v24))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v29, v30, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  v32 = *(int *)(a3 + 20);
  v33 = *(int *)(a3 + 24);
  v34 = &a1[v32];
  v35 = &a2[v32];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  a1[v33] = a2[v33];
  swift_bridgeObjectRetain();
  return a1;
}

char *_s23NotificationFormatStyleV5InputVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043810);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v10[v19];
        v21 = &v11[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_17;
    }
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  if (v16)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v10, v11, v25);
    if (v24 == 1)
    {
      v26 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v27 = &v10[v26];
      v28 = &v11[v26];
      v29 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v30 = v8[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23361D634();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_23:
  v39 = v8[7];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = v35(&a1[v39], 1, v33);
  v43 = v35(v41, 1, v33);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v40, v41, v33);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
    goto LABEL_28;
  }
  if (v43)
  {
LABEL_28:
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v40, v41, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
LABEL_29:
  v45 = *(int *)(a3 + 20);
  v46 = &a1[v45];
  v47 = &a2[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *_s23NotificationFormatStyleV5InputVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v10, v11, v16);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v21 = v8[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23361D634();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = v8[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v26(&a2[v28], 1, v24))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v30, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  v32 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  a1[v32] = a2[v32];
  return a1;
}

char *_s23NotificationFormatStyleV5InputVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043810);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v10, v11, v18);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v20 = &v10[v19];
        v21 = &v11[v19];
        v22 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_17;
    }
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  if (v16)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v10, v11, v25);
    if (v24 == 1)
    {
      v26 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v27 = &v10[v26];
      v28 = &v11[v26];
      v29 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v30 = v8[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23361D634();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
LABEL_23:
  v39 = v8[7];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = v35(&a1[v39], 1, v33);
  v43 = v35(v41, 1, v33);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v40, v41, v33);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
    goto LABEL_28;
  }
  if (v43)
  {
LABEL_28:
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v40, v41, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
LABEL_29:
  v45 = *(int *)(a3 + 20);
  v46 = &a1[v45];
  v47 = &a2[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23325FBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, type metadata accessor for Order.ShippingFulfillment.StatusValues);
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t _s23NotificationFormatStyleV5InputVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23325FC8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, type metadata accessor for Order.ShippingFulfillment.StatusValues);
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23325FD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23325FD20(a1, a2, a3, type metadata accessor for Order.ShippingFulfillment.StatusValues);
}

uint64_t sub_23325FD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s23NotificationFormatStyleVwet_1()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s23NotificationFormatStyleVwst_1()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *_s23NotificationFormatStyleV5InputVwCP_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 28);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_23361D634();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t _s23NotificationFormatStyleV5InputVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s23NotificationFormatStyleV5InputVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s23NotificationFormatStyleV5InputVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t _s23NotificationFormatStyleV5InputVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332603E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_233260458()
{
  unint64_t v0;

  sub_2331FE95C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *_s23NotificationFormatStyleV10CodingKeysOMa()
{
  return &_s23NotificationFormatStyleV10CodingKeysON;
}

uint64_t sub_2332604F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260504()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260514()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260524()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *_s23NotificationFormatStyleV10CodingKeysOMa_0()
{
  return &_s23NotificationFormatStyleV10CodingKeysON_0;
}

ValueMetadata *_s14descr250475739C23NotificationFormatStyleV10CodingKeysOMa()
{
  return &_s14descr250475739C23NotificationFormatStyleV10CodingKeysON;
}

ValueMetadata *_s23NotificationFormatStyleV10CodingKeysOMa_1()
{
  return &_s23NotificationFormatStyleV10CodingKeysON_1;
}

uint64_t sub_233260564()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260574()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260584()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233260594()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332605A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332605B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332605C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_233260610()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_233260660()
{
  return sub_233167C58(&qword_256046FE8, _s40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_2336315DC);
}

uint64_t sub_23326068C()
{
  return sub_233167C58(&qword_256046FF0, _s40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_23363166C);
}

uint64_t sub_2332606B8()
{
  return sub_233167C58(&qword_256046FF8, _s40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_233631644);
}

uint64_t sub_2332606E4()
{
  return sub_233167C58(&qword_256047000, _s40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_233631604);
}

uint64_t sub_233260710()
{
  return sub_233167C58(&qword_256047008, _s39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_2336316EC);
}

uint64_t sub_23326073C()
{
  return sub_233167C58(&qword_256047010, _s39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_23363177C);
}

uint64_t sub_233260768()
{
  return sub_233167C58(&qword_256047018, _s39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_233631754);
}

uint64_t sub_233260794()
{
  return sub_233167C58(&qword_256047020, _s39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_233631714);
}

uint64_t sub_2332607C0()
{
  return sub_233167C58(&qword_256047028, _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_2336317FC);
}

uint64_t sub_2332607EC()
{
  return sub_233167C58(&qword_256047030, _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_23363188C);
}

uint64_t sub_233260818()
{
  return sub_233167C58(&qword_256047038, _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_233631864);
}

uint64_t sub_233260844()
{
  return sub_233167C58(&qword_256047040, _s14descr250475739C40NotificationSingleFulfillmentFormatStyleVMa, (uint64_t)&unk_233631824);
}

uint64_t sub_233260870()
{
  return sub_233167C58(&qword_256047048, _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_23363190C);
}

uint64_t sub_23326089C()
{
  return sub_233167C58(&qword_256047050, _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_23363199C);
}

uint64_t sub_2332608C8()
{
  return sub_233167C58(&qword_256047058, _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_233631974);
}

uint64_t sub_2332608F4()
{
  return sub_233167C58(&qword_256047060, _s14descr250475739C39NotificationMultiFulfillmentFormatStyleVMa, (uint64_t)&unk_233631934);
}

unint64_t sub_233260924()
{
  unint64_t result;

  result = qword_256047068;
  if (!qword_256047068)
  {
    result = MEMORY[0x234934494](&unk_233631AAC, &_s23NotificationFormatStyleV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256047068);
  }
  return result;
}

unint64_t sub_23326096C()
{
  unint64_t result;

  result = qword_256047070;
  if (!qword_256047070)
  {
    result = MEMORY[0x234934494](&unk_233631B64, &_s14descr250475739C23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047070);
  }
  return result;
}

unint64_t sub_2332609B4()
{
  unint64_t result;

  result = qword_256047078;
  if (!qword_256047078)
  {
    result = MEMORY[0x234934494](&unk_233631C1C, &_s23NotificationFormatStyleV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256047078);
  }
  return result;
}

uint64_t sub_2332609F8()
{
  return sub_233167C58(&qword_256047080, _s35NotificationSingleReturnFormatStyleVMa, (uint64_t)&unk_233631C44);
}

uint64_t sub_233260A24()
{
  return sub_233167C58(&qword_256047088, _s35NotificationSingleReturnFormatStyleVMa, (uint64_t)&unk_233631CD4);
}

uint64_t sub_233260A50()
{
  return sub_233167C58(&qword_256047090, _s35NotificationSingleReturnFormatStyleVMa, (uint64_t)&unk_233631CAC);
}

uint64_t sub_233260A7C()
{
  return sub_233167C58(&qword_256047098, _s35NotificationSingleReturnFormatStyleVMa, (uint64_t)&unk_233631C6C);
}

uint64_t sub_233260AA8()
{
  return sub_233167C58(&qword_2560470A0, _s34NotificationMultiReturnFormatStyleVMa, (uint64_t)&unk_233631D54);
}

uint64_t sub_233260AD4()
{
  return sub_233167C58(&qword_2560470A8, _s34NotificationMultiReturnFormatStyleVMa, (uint64_t)&unk_233631DE4);
}

uint64_t sub_233260B00()
{
  return sub_233167C58(&qword_2560470B0, _s34NotificationMultiReturnFormatStyleVMa, (uint64_t)&unk_233631DBC);
}

uint64_t sub_233260B2C()
{
  return sub_233167C58(&qword_2560470B8, _s34NotificationMultiReturnFormatStyleVMa, (uint64_t)&unk_233631D7C);
}

unint64_t sub_233260B5C()
{
  unint64_t result;

  result = qword_2560470C0;
  if (!qword_2560470C0)
  {
    result = MEMORY[0x234934494](&unk_233631EF4, &_s23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560470C0);
  }
  return result;
}

unint64_t sub_233260BA4()
{
  unint64_t result;

  result = qword_2560470C8;
  if (!qword_2560470C8)
  {
    result = MEMORY[0x234934494](&unk_233631E64, &_s23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560470C8);
  }
  return result;
}

unint64_t sub_233260BEC()
{
  unint64_t result;

  result = qword_2560470D0;
  if (!qword_2560470D0)
  {
    result = MEMORY[0x234934494](&unk_233631E8C, &_s23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560470D0);
  }
  return result;
}

unint64_t sub_233260C34()
{
  unint64_t result;

  result = qword_2560470D8;
  if (!qword_2560470D8)
  {
    result = MEMORY[0x234934494](&unk_233631B8C, &_s23NotificationFormatStyleV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2560470D8);
  }
  return result;
}

unint64_t sub_233260C7C()
{
  unint64_t result;

  result = qword_2560470E0;
  if (!qword_2560470E0)
  {
    result = MEMORY[0x234934494](&unk_233631BB4, &_s23NotificationFormatStyleV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2560470E0);
  }
  return result;
}

unint64_t sub_233260CC4()
{
  unint64_t result;

  result = qword_2560470E8;
  if (!qword_2560470E8)
  {
    result = MEMORY[0x234934494](&unk_233631AD4, &_s14descr250475739C23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560470E8);
  }
  return result;
}

unint64_t sub_233260D0C()
{
  unint64_t result;

  result = qword_2560470F0;
  if (!qword_2560470F0)
  {
    result = MEMORY[0x234934494](&unk_233631AFC, &_s14descr250475739C23NotificationFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560470F0);
  }
  return result;
}

unint64_t sub_233260D54()
{
  unint64_t result;

  result = qword_2560470F8;
  if (!qword_2560470F8)
  {
    result = MEMORY[0x234934494](&unk_233631A1C, &_s23NotificationFormatStyleV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_2560470F8);
  }
  return result;
}

unint64_t sub_233260D9C()
{
  unint64_t result;

  result = qword_256047100;
  if (!qword_256047100)
  {
    result = MEMORY[0x234934494](&unk_233631A44, &_s23NotificationFormatStyleV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256047100);
  }
  return result;
}

unint64_t sub_233260DE0()
{
  unint64_t result;

  result = qword_256047110;
  if (!qword_256047110)
  {
    result = MEMORY[0x234934494](&unk_23363263C, &_s34NotificationMultiReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047110);
  }
  return result;
}

unint64_t sub_233260E24()
{
  unint64_t result;

  result = qword_256047128;
  if (!qword_256047128)
  {
    result = MEMORY[0x234934494](&unk_2336325EC, &_s35NotificationSingleReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047128);
  }
  return result;
}

unint64_t sub_233260E68()
{
  unint64_t result;

  result = qword_256047140;
  if (!qword_256047140)
  {
    result = MEMORY[0x234934494](&unk_23363259C, &_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047140);
  }
  return result;
}

unint64_t sub_233260EAC()
{
  unint64_t result;

  result = qword_256047158;
  if (!qword_256047158)
  {
    result = MEMORY[0x234934494](&unk_23363254C, &_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047158);
  }
  return result;
}

unint64_t sub_233260EF0()
{
  unint64_t result;

  result = qword_256047170;
  if (!qword_256047170)
  {
    result = MEMORY[0x234934494](&unk_2336324FC, &_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047170);
  }
  return result;
}

unint64_t sub_233260F34()
{
  unint64_t result;

  result = qword_256047188;
  if (!qword_256047188)
  {
    result = MEMORY[0x234934494](&unk_2336324AC, &_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047188);
  }
  return result;
}

ValueMetadata *_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysOMa()
{
  return &_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysON;
}

ValueMetadata *_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysOMa()
{
  return &_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysON;
}

ValueMetadata *_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysOMa()
{
  return &_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysON;
}

ValueMetadata *_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysOMa()
{
  return &_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysON;
}

ValueMetadata *_s35NotificationSingleReturnFormatStyleV10CodingKeysOMa()
{
  return &_s35NotificationSingleReturnFormatStyleV10CodingKeysON;
}

uint64_t _s23NotificationFormatStyleV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233261008 + 4 * byte_233630F70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233261028 + 4 * byte_233630F75[v4]))();
}

_BYTE *sub_233261008(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233261028(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233261030(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233261038(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233261040(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233261048(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s34NotificationMultiReturnFormatStyleV10CodingKeysOMa()
{
  return &_s34NotificationMultiReturnFormatStyleV10CodingKeysON;
}

unint64_t sub_233261068()
{
  unint64_t result;

  result = qword_2560471A8;
  if (!qword_2560471A8)
  {
    result = MEMORY[0x234934494](&unk_2336320EC, &_s34NotificationMultiReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471A8);
  }
  return result;
}

unint64_t sub_2332610B0()
{
  unint64_t result;

  result = qword_2560471B0;
  if (!qword_2560471B0)
  {
    result = MEMORY[0x234934494](&unk_2336321A4, &_s35NotificationSingleReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471B0);
  }
  return result;
}

unint64_t sub_2332610F8()
{
  unint64_t result;

  result = qword_2560471B8;
  if (!qword_2560471B8)
  {
    result = MEMORY[0x234934494](&unk_23363225C, &_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471B8);
  }
  return result;
}

unint64_t sub_233261140()
{
  unint64_t result;

  result = qword_2560471C0;
  if (!qword_2560471C0)
  {
    result = MEMORY[0x234934494](&unk_233632314, &_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471C0);
  }
  return result;
}

unint64_t sub_233261188()
{
  unint64_t result;

  result = qword_2560471C8;
  if (!qword_2560471C8)
  {
    result = MEMORY[0x234934494](&unk_2336323CC, &_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471C8);
  }
  return result;
}

unint64_t sub_2332611D0()
{
  unint64_t result;

  result = qword_2560471D0;
  if (!qword_2560471D0)
  {
    result = MEMORY[0x234934494](&unk_233632484, &_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471D0);
  }
  return result;
}

unint64_t sub_233261218()
{
  unint64_t result;

  result = qword_2560471D8;
  if (!qword_2560471D8)
  {
    result = MEMORY[0x234934494](&unk_2336323F4, &_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471D8);
  }
  return result;
}

unint64_t sub_233261260()
{
  unint64_t result;

  result = qword_2560471E0;
  if (!qword_2560471E0)
  {
    result = MEMORY[0x234934494](&unk_23363241C, &_s40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471E0);
  }
  return result;
}

unint64_t sub_2332612A8()
{
  unint64_t result;

  result = qword_2560471E8;
  if (!qword_2560471E8)
  {
    result = MEMORY[0x234934494](&unk_23363233C, &_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471E8);
  }
  return result;
}

unint64_t sub_2332612F0()
{
  unint64_t result;

  result = qword_2560471F0;
  if (!qword_2560471F0)
  {
    result = MEMORY[0x234934494](&unk_233632364, &_s39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471F0);
  }
  return result;
}

unint64_t sub_233261338()
{
  unint64_t result;

  result = qword_2560471F8;
  if (!qword_2560471F8)
  {
    result = MEMORY[0x234934494](&unk_233632284, &_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560471F8);
  }
  return result;
}

unint64_t sub_233261380()
{
  unint64_t result;

  result = qword_256047200;
  if (!qword_256047200)
  {
    result = MEMORY[0x234934494](&unk_2336322AC, &_s14descr250475739C40NotificationSingleFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047200);
  }
  return result;
}

unint64_t sub_2332613C8()
{
  unint64_t result;

  result = qword_256047208;
  if (!qword_256047208)
  {
    result = MEMORY[0x234934494](&unk_2336321CC, &_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047208);
  }
  return result;
}

unint64_t sub_233261410()
{
  unint64_t result;

  result = qword_256047210;
  if (!qword_256047210)
  {
    result = MEMORY[0x234934494](&unk_2336321F4, &_s14descr250475739C39NotificationMultiFulfillmentFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047210);
  }
  return result;
}

unint64_t sub_233261458()
{
  unint64_t result;

  result = qword_256047218;
  if (!qword_256047218)
  {
    result = MEMORY[0x234934494](&unk_233632114, &_s35NotificationSingleReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047218);
  }
  return result;
}

unint64_t sub_2332614A0()
{
  unint64_t result;

  result = qword_256047220;
  if (!qword_256047220)
  {
    result = MEMORY[0x234934494](&unk_23363213C, &_s35NotificationSingleReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047220);
  }
  return result;
}

unint64_t sub_2332614E8()
{
  unint64_t result;

  result = qword_256047228;
  if (!qword_256047228)
  {
    result = MEMORY[0x234934494](&unk_23363205C, &_s34NotificationMultiReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047228);
  }
  return result;
}

unint64_t sub_233261530()
{
  unint64_t result;

  result = qword_256047230;
  if (!qword_256047230)
  {
    result = MEMORY[0x234934494](&unk_233632084, &_s34NotificationMultiReturnFormatStyleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256047230);
  }
  return result;
}

uint64_t DropboxApplePayOrder.credentialIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DropboxApplePayOrder.credentialIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DropboxApplePayOrder.credentialIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.encryptedTransactionInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 20);
  v2 = *(_QWORD *)v1;
  sub_2331D1374(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for DropboxApplePayOrder()
{
  uint64_t result;

  result = qword_2560472A0;
  if (!qword_2560472A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DropboxApplePayOrder.encryptedTransactionInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 20);
  result = sub_23316BEA4(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*DropboxApplePayOrder.encryptedTransactionInfo.modify())()
{
  type metadata accessor for DropboxApplePayOrder();
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.EncryptionScheme.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t static DropboxApplePayOrder.EncryptionScheme.== infix(_:_:)()
{
  return 1;
}

uint64_t DropboxApplePayOrder.EncryptionScheme.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t (*DropboxApplePayOrder.encryptionScheme.modify())()
{
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.ephemeralPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 28);
  v4 = sub_23361DFC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DropboxApplePayOrder.ephemeralPublicKey.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 28);
  v4 = sub_23361DFC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DropboxApplePayOrder.ephemeralPublicKey.modify())()
{
  type metadata accessor for DropboxApplePayOrder();
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 32);
  v2 = *(_QWORD *)v1;
  sub_2331D1374(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t DropboxApplePayOrder.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 32);
  result = sub_23316BEA4(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*DropboxApplePayOrder.data.modify())()
{
  type metadata accessor for DropboxApplePayOrder();
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DropboxApplePayOrder.creationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DropboxApplePayOrder() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DropboxApplePayOrder.creationDate.modify())()
{
  type metadata accessor for DropboxApplePayOrder();
  return nullsub_1;
}

uint64_t DropboxApplePayOrder.init(credentialIdentifier:encryptedTransactionInfo:encryptionScheme:ephemeralPublicKey:data:creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v16 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a8, a1, v16);
  v17 = (int *)type metadata accessor for DropboxApplePayOrder();
  v18 = (_QWORD *)(a8 + v17[5]);
  *v18 = a2;
  v18[1] = a3;
  v19 = a8 + v17[7];
  v20 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a4, v20);
  v21 = (_QWORD *)(a8 + v17[8]);
  *v21 = a5;
  v21[1] = a6;
  v22 = a8 + v17[9];
  v23 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a7, v23);
}

uint64_t DropboxApplePayOrder.isRecent(now:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v1 = sub_23361D850();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23361D634();
  v8 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D748();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361D868();
  v25 = *(_QWORD *)(v14 - 8);
  v26 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDCEF50], v10);
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCF230], v1);
  type metadata accessor for DropboxApplePayOrder();
  sub_23361D814();
  v17 = v24;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v26);
    sub_2331D0F20((uint64_t)v7);
    v18 = 0;
  }
  else
  {
    v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v22, v7, v17);
    v18 = sub_23361D5C8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v17);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  }
  return v18 & 1;
}

uint64_t DropboxApplePayOrder.HPKEInfo.versionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DropboxApplePayOrder.HPKEInfo.transactionIdentifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_2331D1374(v2, v3);
}

uint64_t DropboxApplePayOrder.HPKEInfo.transactionIdentifier.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_23316BEA4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*DropboxApplePayOrder.HPKEInfo.transactionIdentifier.modify())()
{
  return nullsub_1;
}

__n128 DropboxApplePayOrder.HPKEInfo.init(transactionIdentifier:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0xD000000000000011;
  a2->n128_u64[1] = 0x800000023366F040;
  result = *a1;
  a2[1] = *a1;
  return result;
}

uint64_t DropboxApplePayOrder.HPKEInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3F8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_23361F1F4();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_2331A6BA8();
    sub_23361F200();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t sub_233261E64(_QWORD *a1)
{
  return DropboxApplePayOrder.HPKEInfo.encode(to:)(a1);
}

uint64_t DropboxApplePayOrder.TransactionContext.transactionIdentifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2331D1374(v2, v3);
}

uint64_t DropboxApplePayOrder.TransactionContext.transactionIdentifier.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_23316BEA4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*DropboxApplePayOrder.TransactionContext.transactionIdentifier.modify())()
{
  return nullsub_1;
}

__n128 DropboxApplePayOrder.TransactionContext.init(transactionIdentifier:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static DropboxApplePayOrder.seal(signedArchive:using:withIdentifier:context:creationDate:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t *v84;
  _QWORD v85[3];
  char *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;

  v91 = a6;
  v90 = a4;
  v116 = a3;
  v94 = a2;
  v93 = a1;
  v92 = a7;
  v112 = sub_23361DFC4();
  v96 = *(_QWORD *)(v112 - 8);
  v8 = MEMORY[0x24BDAC7A8](v112);
  v97 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v95 = (char *)v85 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v110 = (unint64_t)v85 - v12;
  v100 = sub_23361DF7C();
  v99 = *(_QWORD *)(v100 - 8);
  v13 = MEMORY[0x24BDAC7A8](v100);
  v111 = (char *)v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (char *)v85 - v15;
  v16 = sub_23361DF4C();
  v107 = *(_QWORD *)(v16 - 8);
  v108 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v109 = (uint64_t)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_23361DF34();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v106 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23361DF40();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v103 = (char *)v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23361DF28();
  v21 = *(_QWORD *)(v20 - 8);
  v113 = v20;
  v114 = v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (_QWORD *)((char *)v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v85 - v25;
  v27 = type metadata accessor for ApplePayTransactionInfo();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (_QWORD *)((char *)v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_23361E000();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *a5;
  v35 = a5[1];
  sub_23361DFF4();
  v36 = (char *)v29 + *(int *)(v27 + 20);
  v115 = v31;
  v37 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v124 = v33;
  v118 = v30;
  v37(v36, v33, v30);
  *v29 = v34;
  v29[1] = v35;
  sub_2331D1374(v34, v35);
  v38 = v117;
  v39 = ApplePayTransactionInfo.seal(using:)(v116);
  if (v38)
  {
    if (qword_254246760 != -1)
      swift_once();
    v41 = sub_23361DB80();
    __swift_project_value_buffer(v41, (uint64_t)qword_254246748);
    v42 = v38;
    v43 = v38;
    v44 = sub_23361DB68();
    v45 = sub_23361E768();
    if (os_log_type_enabled(v44, v45))
    {
      v117 = v29;
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v46 = 138412290;
      v48 = v38;
      v49 = _swift_stdlib_bridgeErrorToNSError();
      v120 = v49;
      v29 = v117;
      sub_23361EBC4();
      *v47 = v49;

      _os_log_impl(&dword_233151000, v44, v45, "Failed to encode or encrypt transaction info with error: %@", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      v50 = v124;
      MEMORY[0x234934590](v47, -1, -1);
      MEMORY[0x234934590](v46, -1, -1);
      v51 = v115;
    }
    else
    {

      v51 = v115;
      v50 = v124;
    }

    swift_willThrow();
    sub_233264028((uint64_t)v29);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v118);
  }
  else
  {
    v52 = v40;
    v117 = v24;
    v86 = v26;
    v53 = v39;
    sub_23361D928();
    swift_allocObject();
    sub_2331D1374(v34, v35);
    sub_2331D1374(v53, v52);
    v54 = sub_23361D91C();
    v120 = 0xD000000000000011;
    v121 = 0x800000023366F040;
    v87 = v34;
    v122 = v34;
    v123 = v35;
    v88 = v35;
    sub_233264064();
    v55 = sub_23361D910();
    v89 = v52;
    v116 = v53;
    v56 = v55;
    v58 = v57;
    v85[2] = v54;
    v85[1] = "HIPPING_SHIPPED_WITH_DATE";
    (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v103, *MEMORY[0x24BDC6768], v102);
    (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v106, *MEMORY[0x24BDC6758], v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v107 + 104))(v109, *MEMORY[0x24BDC6778], v108);
    sub_2331D1374(v56, v58);
    v59 = v56;
    v60 = v86;
    sub_23361DF1C();
    sub_23361DFD0();
    (*(void (**)(uint64_t *, char *, uint64_t))(v114 + 16))(v117, v60, v113);
    v61 = v111;
    v109 = v59;
    v110 = v58;
    v62 = v112;
    sub_23361DF58();
    v63 = v61;
    v64 = v98;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v63, v100);
    v120 = sub_23361DF64();
    v121 = v65;
    v66 = v97;
    sub_23361DFB8();
    v67 = v88;
    v68 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
    v69 = v66;
    v70 = v95;
    v68(v95, v69, v62);
    v120 = v93;
    v121 = v94;
    v119 = xmmword_233632690;
    sub_2332640A8();
    v71 = sub_23361DF70();
    v72 = v89;
    v73 = v71;
    v117 = v74;
    sub_23316BEA4(v109, v110);
    sub_23316BEA4(v116, v72);
    swift_bridgeObjectRelease();
    swift_release();
    sub_23316BEA4(v87, v67);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v100);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v86, v113);
    sub_233264028((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v124, v118);
    v75 = sub_23361D6A0();
    v76 = v92;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v92, v90, v75);
    v77 = v72;
    v78 = (int *)type metadata accessor for DropboxApplePayOrder();
    v68((char *)(v76 + v78[7]), v70, v62);
    v79 = v76 + v78[9];
    v80 = sub_23361D634();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v79, v91, v80);
    v82 = (_QWORD *)(v76 + v78[5]);
    *v82 = v116;
    v82[1] = v77;
    v83 = (uint64_t *)(v76 + v78[8]);
    v84 = v117;
    *v83 = v73;
    v83[1] = (uint64_t)v84;
  }
  return result;
}

NSObject *DropboxApplePayOrder.open(using:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  id v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  void *v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD *v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint8_t *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  id v120;

  v114 = a2;
  v96 = a1;
  v99 = sub_23361DFA0();
  v98 = *(_QWORD *)(v99 - 8);
  v3 = MEMORY[0x24BDAC7A8](v99);
  v107 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v97 = (char *)&v87 - v5;
  v6 = sub_23361DF4C();
  v104 = *(_QWORD *)(v6 - 8);
  v105 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v106 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23361DF34();
  v102 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v103 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (char *)sub_23361DF40();
  v100 = *((_QWORD *)v109 - 1);
  MEMORY[0x24BDAC7A8](v109);
  v101 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_23361DF28();
  v10 = *(_QWORD *)(v108 - 8);
  v11 = MEMORY[0x24BDAC7A8](v108);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v87 - v14;
  v113 = sub_23361E000();
  v111 = *(_QWORD *)(v113 - 8);
  v16 = MEMORY[0x24BDAC7A8](v113);
  v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v112 = (char *)&v87 - v19;
  v20 = type metadata accessor for ApplePayTransactionInfo();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (uint64_t *)((char *)&v87 - v24);
  v26 = type metadata accessor for DropboxApplePayOrder();
  v27 = v120;
  static ApplePayTransactionInfo.open(combined:using:)(*(_QWORD *)(v2 + *(int *)(v26 + 20)), *(_QWORD *)(v2 + *(int *)(v26 + 20) + 8));
  v120 = v27;
  if (v27)
  {
    if (qword_254246760 != -1)
      swift_once();
    v28 = sub_23361DB80();
    __swift_project_value_buffer(v28, (uint64_t)qword_254246748);
    v29 = v120;
    v30 = v120;
    v31 = v29;
    v32 = sub_23361DB68();
    v33 = sub_23361E768();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v34 = 138412290;
      v36 = v29;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v116 = v37;
      sub_23361EBC4();
      *v35 = v37;

      _os_log_impl(&dword_233151000, v32, v33, "Failed to decrypt or decode transaction info with error: %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v35, -1, -1);
      MEMORY[0x234934590](v34, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
  }
  else
  {
    v114 = v20;
    v88 = v26;
    v89 = v18;
    v90 = v13;
    v91 = v2;
    v93 = v15;
    v92 = v10;
    sub_2332640EC((uint64_t)v23, (uint64_t)v25);
    v38 = *v25;
    v39 = v25[1];
    sub_2331D1374(*v25, v39);
    if (qword_254246760 != -1)
      swift_once();
    v40 = sub_23361DB80();
    v41 = __swift_project_value_buffer(v40, (uint64_t)qword_254246748);
    sub_2331D1374(v38, v39);
    sub_2331D1374(v38, v39);
    v42 = sub_23361DB68();
    v43 = sub_23361E750();
    v44 = os_log_type_enabled(v42, v43);
    v45 = v120;
    v95 = v25;
    if (v44)
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v116 = v94;
      *(_DWORD *)v46 = 136315138;
      v87 = v46 + 4;
      sub_2331D1374(v38, v39);
      sub_2331D32A4(v38, v39);
      v48 = v47;
      v50 = v49;
      sub_23316BEA4(v38, v39);
      *(_QWORD *)&v115 = sub_233164DCC(v48, v50, &v116);
      v25 = v95;
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_23316BEA4(v38, v39);
      sub_23316BEA4(v38, v39);
      _os_log_impl(&dword_233151000, v42, v43, "Recovered info for transaction %s", v46, 0xCu);
      v51 = v94;
      swift_arrayDestroy();
      MEMORY[0x234934590](v51, -1, -1);
      v52 = v46;
      v45 = v120;
      MEMORY[0x234934590](v52, -1, -1);
    }
    else
    {
      sub_23316BEA4(v38, v39);
      sub_23316BEA4(v38, v39);
    }

    v53 = (void *)v39;
    v54 = v109;
    v55 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
    v55(v112, (char *)v25 + *(int *)(v114 + 20), v113);
    sub_23361D928();
    swift_allocObject();
    sub_2331D1374(v38, v39);
    v56 = sub_23361D91C();
    v109 = "HIPPING_SHIPPED_WITH_DATE";
    v116 = 0xD000000000000011;
    v117 = 0x800000023366F040;
    v114 = v38;
    v118 = v38;
    v119 = v39;
    sub_233264064();
    v94 = v56;
    v57 = sub_23361D910();
    v59 = v110;
    if (v45)
    {
      v60 = v45;
      v61 = v45;
      v32 = sub_23361DB68();
      v62 = sub_23361E768();
      if (os_log_type_enabled(v32, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        v64 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v63 = 138412290;
        v65 = v45;
        v66 = v53;
        v67 = _swift_stdlib_bridgeErrorToNSError();
        v116 = v67;
        sub_23361EBC4();
        *v64 = v67;
        v53 = v66;

        _os_log_impl(&dword_233151000, v32, v62, "Failed to encode info parameter with error: %@", v63, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
        swift_arrayDestroy();
        v25 = v95;
        MEMORY[0x234934590](v64, -1, -1);
        MEMORY[0x234934590](v63, -1, -1);
      }
      else
      {

      }
      v68 = v114;

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      sub_23316BEA4(v68, (unint64_t)v53);
      sub_23316BEA4(v68, (unint64_t)v53);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v113);
      sub_233264028((uint64_t)v25);
    }
    else
    {
      v69 = v57;
      v70 = v58;
      v87 = (uint8_t *)v41;
      v120 = v53;
      (*(void (**)(char *, _QWORD, char *))(v100 + 104))(v101, *MEMORY[0x24BDC6768], v54);
      (*(void (**)(char *, _QWORD, unint64_t))(v102 + 104))(v103, *MEMORY[0x24BDC6758], v59);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v104 + 104))(v106, *MEMORY[0x24BDC6778], v105);
      sub_2331D1374(v69, v70);
      v71 = v70;
      v72 = v93;
      sub_23361DF1C();
      v55(v89, v112, v113);
      v73 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 16))(v90, v72, v108);
      v74 = v88;
      v75 = v91;
      MEMORY[0x234932310](v73);
      v76 = v107;
      v106 = v69;
      v110 = v71;
      sub_23361DF88();
      v77 = v98;
      v78 = v97;
      v79 = v99;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v76, v99);
      v80 = (uint64_t *)(v75 + *(int *)(v74 + 32));
      v82 = v80[1];
      v116 = *v80;
      v81 = v116;
      v117 = v82;
      v115 = xmmword_233632690;
      sub_2331D1374(v116, v82);
      sub_2332640A8();
      v83 = sub_23361DF94();
      v84 = (unint64_t)v120;
      v32 = v83;
      sub_23316BEA4(v106, v110);
      swift_bridgeObjectRelease();
      swift_release();
      sub_23316BEA4(v114, v84);
      sub_23316BEA4(v81, v82);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v108);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v113);
      sub_233264028((uint64_t)v95);
      v85 = v96;
      *v96 = v114;
      v85[1] = v84;
    }
  }
  return v32;
}

uint64_t static DropboxApplePayOrder.seal(signedArchive:using:context:creationDate:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[2];

  v11 = *a4;
  v12 = a4[1];
  v13 = a3 + *(int *)(type metadata accessor for ApplePayTransactionDocumentCredential() + 20);
  v15[0] = v11;
  v15[1] = v12;
  return static DropboxApplePayOrder.seal(signedArchive:using:withIdentifier:context:creationDate:)(a1, a2, v13, a3, v15, a5, a6);
}

uint64_t _s10FinanceKit20DropboxApplePayOrderV8HPKEInfoV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  char v7;
  char v8;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_23361F224() & 1) == 0)
    return 0;
  sub_2331D1374(v2, v3);
  sub_2331D1374(v4, v5);
  sub_2334C71D4(v2, v3);
  v8 = v7;
  sub_23316BEA4(v4, v5);
  sub_23316BEA4(v2, v3);
  return v8 & 1;
}

uint64_t sub_233264028(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ApplePayTransactionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_233264064()
{
  unint64_t result;

  result = qword_256047238;
  if (!qword_256047238)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for DropboxApplePayOrder.HPKEInfo, &type metadata for DropboxApplePayOrder.HPKEInfo);
    atomic_store(result, (unint64_t *)&qword_256047238);
  }
  return result;
}

unint64_t sub_2332640A8()
{
  unint64_t result;

  result = qword_256049A70;
  if (!qword_256049A70)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256049A70);
  }
  return result;
}

uint64_t sub_2332640EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplePayTransactionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_233264134()
{
  unint64_t result;

  result = qword_256047240;
  if (!qword_256047240)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for DropboxApplePayOrder.EncryptionScheme, &type metadata for DropboxApplePayOrder.EncryptionScheme);
    atomic_store(result, (unint64_t *)&qword_256047240);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DropboxApplePayOrder(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_2331D1374(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23361DFC4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = *v19;
    v21 = v19[1];
    sub_2331D1374(*v19, v21);
    *v18 = v20;
    v18[1] = v21;
    v22 = a3[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for DropboxApplePayOrder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_23316BEA4(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8));
  v5 = a1 + a2[7];
  v6 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_23316BEA4(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8));
  v7 = a1 + a2[9];
  v8 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for DropboxApplePayOrder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_2331D1374(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  sub_2331D1374(*v18, v20);
  *v17 = v19;
  v17[1] = v20;
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for DropboxApplePayOrder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_2331D1374(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_23316BEA4(v12, v13);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[8];
  v19 = (uint64_t *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  v22 = v20[1];
  sub_2331D1374(*v20, v22);
  v23 = *v19;
  v24 = v19[1];
  *v19 = v21;
  v19[1] = v22;
  sub_23316BEA4(v23, v24);
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t initializeWithTake for DropboxApplePayOrder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for DropboxApplePayOrder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_23316BEA4(v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361DFC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  v15 = *(_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14 + 8);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  sub_23316BEA4(v15, v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for DropboxApplePayOrder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332646DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 12)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8) >> 60;
    if (((4 * (_DWORD)v9) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
    else
      return 0;
  }
  else
  {
    v10 = sub_23361DFC4();
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[7];
    }
    else
    {
      v12 = sub_23361D634();
      v11 = *(_QWORD *)(v12 - 8);
      v13 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DropboxApplePayOrder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2332647C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 12)
    {
      v13 = (_QWORD *)(a1 + a4[5]);
      *v13 = 0;
      v13[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
      return result;
    }
    v14 = sub_23361DFC4();
    v15 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == a3)
    {
      v10 = v14;
      v16 = a4[7];
    }
    else
    {
      v10 = sub_23361D634();
      v15 = *(_QWORD *)(v10 - 8);
      v16 = a4[9];
    }
    v12 = a1 + v16;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_233264898()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = sub_23361DFC4();
    if (v2 <= 0x3F)
    {
      result = sub_23361D634();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DropboxApplePayOrder.EncryptionScheme(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233264990 + 4 * byte_2336326A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2332649B0 + 4 * byte_2336326A5[v4]))();
}

_BYTE *sub_233264990(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2332649B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2332649B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2332649C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2332649C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2332649D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DropboxApplePayOrder.EncryptionScheme()
{
  return &type metadata for DropboxApplePayOrder.EncryptionScheme;
}

uint64_t destroy for DropboxApplePayOrder.HPKEInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_23316BEA4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for DropboxApplePayOrder.HPKEInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_2331D1374(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for DropboxApplePayOrder.HPKEInfo(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_2331D1374(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_23316BEA4(v6, v7);
  return a1;
}

_QWORD *assignWithTake for DropboxApplePayOrder.HPKEInfo(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_23316BEA4(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DropboxApplePayOrder.HPKEInfo()
{
  return &type metadata for DropboxApplePayOrder.HPKEInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCDataWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_2331D1374(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for XPCDataWrapper(uint64_t a1)
{
  return sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for XPCDataWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_2331D1374(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23316BEA4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for XPCDataWrapper(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23316BEA4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCDataWrapper(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for XPCDataWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DropboxApplePayOrder.TransactionContext()
{
  return &type metadata for DropboxApplePayOrder.TransactionContext;
}

void *NSManagedObjectContext.localStore.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_persistentStores);

    sub_233168668(0, (unint64_t *)&qword_2542482A0);
    v4 = sub_23361E3F0();

    if (v4 >> 62)
      goto LABEL_21;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_23361EF30())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, sel_configurationName);
        v11 = sub_23361E150();
        v13 = v12;

        if (v11 == 0x6C61636F4CLL && v13 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return v8;
        }
        v15 = sub_23361F224();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          return v8;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_15;
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void *Array<A>.first(where:)(unsigned __int8 *a1, unint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *a1;
  if (a2 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x234933120](v5 - 4, a2);
        else
          v6 = *(id *)(a2 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v9 = objc_msgSend(v6, sel_configuration);
        if (v9)
        {
          v10 = v9;
          v11 = sub_23361E150();
          v13 = v12;

          if (!v3)
            goto LABEL_16;
        }
        else
        {
          v11 = 0;
          v13 = 0;
          if (!v3)
          {
LABEL_16:
            v14 = 0xE500000000000000;
            v15 = 0x6C61636F4CLL;
            if (!v13)
              goto LABEL_4;
            goto LABEL_19;
          }
        }
        if (v3 == 1)
        {
          v14 = 0xE500000000000000;
          v15 = 0x64756F6C43;
          if (!v13)
            goto LABEL_4;
        }
        else
        {
          v14 = 0xE700000000000000;
          v15 = 0x786F62706F7244;
          if (!v13)
          {
LABEL_4:

            swift_bridgeObjectRelease();
            goto LABEL_5;
          }
        }
LABEL_19:
        if (v11 == v15 && v13 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        v16 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v7;
        }

LABEL_5:
        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;

  v3 = *a1;
  if (a2 >> 62)
    goto LABEL_27;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_23361EF30())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v5 - 4, a2) : *(id *)(a2 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, sel_configurationName);
      v10 = sub_23361E150();
      v12 = v11;

      if (v3)
      {
        if (v3 == 1)
          v13 = 0x64756F6C43;
        else
          v13 = 0x786F62706F7244;
        if (v3 == 1)
          v14 = 0xE500000000000000;
        else
          v14 = 0xE700000000000000;
      }
      else
      {
        v14 = 0xE500000000000000;
        v13 = 0x6C61636F4CLL;
      }
      if (v10 == v13 && v12 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRelease();
        return v7;
      }
      v16 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_24;

      ++v5;
      if (v8 == v4)
        goto LABEL_22;
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

void *NSManagedObjectContext.cloudStore.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_persistentStores);

    sub_233168668(0, (unint64_t *)&qword_2542482A0);
    v4 = sub_23361E3F0();

    if (v4 >> 62)
      goto LABEL_21;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_23361EF30())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, sel_configurationName);
        v11 = sub_23361E150();
        v13 = v12;

        if (v11 == 0x64756F6C43 && v13 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return v8;
        }
        v15 = sub_23361F224();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          return v8;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_15;
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void *NSManagedObjectContext.dropboxStore.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_persistentStores);

    sub_233168668(0, (unint64_t *)&qword_2542482A0);
    v4 = sub_23361E3F0();

    if (v4 >> 62)
      goto LABEL_21;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_23361EF30())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, sel_configurationName);
        v11 = sub_23361E150();
        v13 = v12;

        if (v11 == 0x786F62706F7244 && v13 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return v8;
        }
        v15 = sub_23361F224();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          return v8;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_15;
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_2332655C4(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  void *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  void *v29;
  __int128 v30;
  _OWORD v31[2];
  _QWORD v32[2];
  __int128 v33;

  v2 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  v3 = (void *)sub_23361D268();
  v4 = objc_msgSend(v2, sel_initWithURL_, v3);

  v5 = (void *)sub_23361E12C();
  objc_msgSend(v4, sel_setConfiguration_, v5);

  objc_msgSend(v4, sel_setType_, *MEMORY[0x24BDBB5D8]);
  sub_233168668(0, (unint64_t *)&qword_254248750);
  v6 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v6, *MEMORY[0x24BDBB4C8]);

  v7 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v7, *MEMORY[0x24BDBB520]);

  v8 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v8, *MEMORY[0x24BDBB488]);

  v9 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v9, *MEMORY[0x24BDBB420]);

  v10 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for CoreDataStoreClientConfiguration(0) + 24));
  v27 = v10 + 64;
  v11 = 1 << *(_BYTE *)(v10 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v10 + 64);
  v28 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  if (!v13)
    goto LABEL_11;
LABEL_9:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v19 = v18 | (v14 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v10 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v19);
    v22 = v21[1];
    *(_QWORD *)&v30 = *v21;
    *((_QWORD *)&v30 + 1) = v22;
    sub_233168350(v20 + 32 * v19, (uint64_t)v31);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2332659EC((uint64_t)&v30, (uint64_t)v32);
      if (!v32[1])
      {
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_233625CF0;
        *(_QWORD *)(v26 + 32) = v4;
        v32[0] = v26;
        sub_23361E408();
        return;
      }
      sub_2331683D0(&v33, &v30);
      sub_233168668(0, (unint64_t *)&qword_254247F98);
      v15 = swift_dynamicCast();
      v16 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      if (v15)
        v17 = v29;
      else
        v17 = 0;
      objc_msgSend(v4, sel_setOption_forKey_, v17, v16);

      if (v13)
        goto LABEL_9;
LABEL_11:
      v23 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v23 < v28)
      {
        v24 = *(_QWORD *)(v27 + 8 * v23);
        if (v24)
          goto LABEL_14;
        v25 = v14 + 2;
        ++v14;
        if (v23 + 1 < v28)
        {
          v24 = *(_QWORD *)(v27 + 8 * v25);
          if (v24)
            goto LABEL_17;
          v14 = v23 + 1;
          if (v23 + 2 < v28)
          {
            v24 = *(_QWORD *)(v27 + 8 * (v23 + 2));
            if (v24)
            {
              v23 += 2;
              goto LABEL_14;
            }
            v25 = v23 + 3;
            v14 = v23 + 2;
            if (v23 + 3 < v28)
              break;
          }
        }
      }
LABEL_28:
      v13 = 0;
      memset(v31, 0, sizeof(v31));
      v30 = 0u;
    }
    v24 = *(_QWORD *)(v27 + 8 * v25);
    if (v24)
    {
LABEL_17:
      v23 = v25;
LABEL_14:
      v13 = (v24 - 1) & v24;
      v19 = __clz(__rbit64(v24)) + (v23 << 6);
      v14 = v23;
      continue;
    }
    break;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v28)
    {
      v14 = v28 - 1;
      goto LABEL_28;
    }
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_14;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_2332659EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_233265A34()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v0 = (void *)*MEMORY[0x24BDBB4C0];
  if (qword_254246228 != -1)
    swift_once();
  v1 = qword_25424C310;
  v2 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_23361D268();
  v4 = objc_msgSend(v2, sel_initWithURL_, v3);

  v5 = (void *)sub_23361E12C();
  objc_msgSend(v4, sel_setConfiguration_, v5);

  objc_msgSend(v4, sel_setType_, *MEMORY[0x24BDBB580]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245018);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = v0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246590);
  *(_QWORD *)(inited + 40) = v1;
  v8 = (void *)*MEMORY[0x24BDBB4A8];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  v9 = sub_233168668(0, (unint64_t *)&qword_254248750);
  v10 = v0;
  v11 = v8;
  v12 = sub_23361E9F0();
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 80) = v12;
  sub_23315F5AC(inited);
  type metadata accessor for NSPersistentHistoryTrackingOptionKey(0);
  sub_233266810();
  v13 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setOption_forKey_, v13, *MEMORY[0x24BDBB4C8]);

  v14 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v14, *MEMORY[0x24BDBB520]);

  v15 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v15, *MEMORY[0x24BDBB488]);

  v16 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v16, *MEMORY[0x24BDBB420]);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_233623D60;
  if (qword_2542450A8 != -1)
    swift_once();
  v18 = (void *)qword_2542450A0;
  *(_QWORD *)(v17 + 56) = sub_233168668(0, &qword_254248EF8);
  *(_QWORD *)(v17 + 32) = v18;
  sub_233168668(0, &qword_254247130);
  v19 = v18;
  v20 = (void *)MEMORY[0x234932D24](v17);
  objc_msgSend(v4, sel_setOption_forKey_, v20, *MEMORY[0x24BDBB4D8]);

  sub_23361E150();
  v21 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setOption_forKey_, v21, *MEMORY[0x24BDBB4F8]);

  v22 = (void *)sub_23361E9F0();
  objc_msgSend(v4, sel_setOption_forKey_, v22, *MEMORY[0x24BDBB528]);

  v23 = (void *)sub_23361E9FC();
  objc_msgSend(v4, sel_setOption_forKey_, v23, *MEMORY[0x24BDBB4D0]);

  return v4;
}

id sub_233265E14()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  v1 = (void *)sub_23361D268();
  v2 = objc_msgSend(v0, sel_initWithURL_, v1);

  objc_msgSend(v2, sel_setType_, *MEMORY[0x24BDBB580]);
  sub_233168668(0, (unint64_t *)&qword_254248750);
  v3 = (void *)sub_23361E9F0();
  objc_msgSend(v2, sel_setOption_forKey_, v3, *MEMORY[0x24BDBB520]);

  sub_23361E150();
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setOption_forKey_, v4, *MEMORY[0x24BDBB4F8]);

  v5 = (void *)sub_23361E9F0();
  objc_msgSend(v2, sel_setOption_forKey_, v5, *MEMORY[0x24BDBB528]);

  v6 = (void *)sub_23361E9FC();
  objc_msgSend(v2, sel_setOption_forKey_, v6, *MEMORY[0x24BDBB4D0]);

  return v2;
}

id sub_233265F7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  _BYTE v28[48];

  v2 = sub_23361D340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 20), v2);
  v7 = sub_233265E14();
  v8 = (void *)sub_23361E12C();
  objc_msgSend(v7, sel_setConfiguration_, v8);

  v9 = (void *)*MEMORY[0x24BDBB4C0];
  if (qword_254246220 != -1)
    swift_once();
  v10 = qword_25424C308;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542465C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  swift_bridgeObjectRetain();
  v12 = v9;
  sub_23315F5C8(inited);
  type metadata accessor for NSPersistentHistoryTrackingOptionKey(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246590);
  sub_233266810();
  v13 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setOption_forKey_, v13, *MEMORY[0x24BDBB4C8]);

  if (*(_BYTE *)(a1 + *(int *)(v6 + 36)) == 1)
  {
    if (qword_2542483B0 != -1)
      swift_once();
    v14 = sub_23361DB80();
    __swift_project_value_buffer(v14, (uint64_t)qword_254248210);
    v15 = sub_23361DB68();
    v16 = sub_23361E750();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_233151000, v15, v16, "Cloud mirroring enabled, setting mirroring delegate", v17, 2u);
      MEMORY[0x234934590](v17, -1, -1);
    }

    v18 = objc_allocWithZone(MEMORY[0x24BDBB6F8]);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_initWithContainerIdentifier_, v19);

    objc_msgSend(v20, sel_setUseDeviceToDeviceEncryption_, 1);
    v21 = (void *)sub_23361E12C();
    objc_msgSend(v20, sel_setApsConnectionMachServiceName_, v21);

    sub_233168668(0, (unint64_t *)&qword_254248750);
    v22 = (void *)sub_23361E9FC();
    objc_msgSend(v20, sel_setOperationMemoryThresholdBytes_, v22);

    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9048]), sel_init);
    v24 = (void *)sub_23361E12C();
    objc_msgSend(v23, sel_setApplicationBundleIdentifierOverrideForTCC_, v24);

    v25 = (void *)sub_23361E12C();
    objc_msgSend(v23, sel_setApplicationBundleIdentifierOverrideForNetworkAttribution_, v25);

    v26 = (void *)sub_23361E12C();
    objc_msgSend(v23, sel_setEncryptionServiceName_, v26);

    objc_msgSend(v23, sel_setUseZoneWidePCS_, 1);
    objc_msgSend(v20, sel_setContainerOptions_, v23);
    objc_msgSend(v7, sel_setCloudKitContainerOptions_, v20);

  }
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

id sub_2332663E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  _BYTE v27[48];

  v2 = sub_23361D340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 32), v2);
  v7 = sub_233265E14();
  v8 = (void *)sub_23361E12C();
  objc_msgSend(v7, sel_setConfiguration_, v8);

  v9 = (void *)*MEMORY[0x24BDBB4C0];
  if (qword_254246B38 != -1)
    swift_once();
  v10 = qword_25424C328;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542465C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  swift_bridgeObjectRetain();
  v12 = v9;
  sub_23315F5C8(inited);
  type metadata accessor for NSPersistentHistoryTrackingOptionKey(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246590);
  sub_233266810();
  v13 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setOption_forKey_, v13, *MEMORY[0x24BDBB4C8]);

  if (*(_BYTE *)(a1 + *(int *)(v6 + 36)) == 1)
  {
    if (qword_2542483B0 != -1)
      swift_once();
    v14 = sub_23361DB80();
    __swift_project_value_buffer(v14, (uint64_t)qword_254248210);
    v15 = sub_23361DB68();
    v16 = sub_23361E750();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_233151000, v15, v16, "Cloud mirroring enabled, setting mirroring delegate for dropbox", v17, 2u);
      MEMORY[0x234934590](v17, -1, -1);
    }

    v18 = objc_allocWithZone(MEMORY[0x24BDBB6F8]);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_initWithContainerIdentifier_, v19);

    objc_msgSend(v20, sel_setUseDeviceToDeviceEncryption_, 0);
    v21 = (void *)sub_23361E12C();
    objc_msgSend(v20, sel_setApsConnectionMachServiceName_, v21);

    sub_233168668(0, (unint64_t *)&qword_254248750);
    v22 = (void *)sub_23361E9FC();
    objc_msgSend(v20, sel_setOperationMemoryThresholdBytes_, v22);

    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9048]), sel_init);
    v24 = (void *)sub_23361E12C();
    objc_msgSend(v23, sel_setApplicationBundleIdentifierOverrideForTCC_, v24);

    v25 = (void *)sub_23361E12C();
    objc_msgSend(v23, sel_setApplicationBundleIdentifierOverrideForNetworkAttribution_, v25);

    objc_msgSend(v20, sel_setContainerOptions_, v23);
    objc_msgSend(v7, sel_setCloudKitContainerOptions_, v20);

  }
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

unint64_t sub_233266810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254246598;
  if (!qword_254246598)
  {
    type metadata accessor for NSPersistentHistoryTrackingOptionKey(255);
    result = MEMORY[0x234934494](&unk_233624A10, v1);
    atomic_store(result, (unint64_t *)&qword_254246598);
  }
  return result;
}

uint64_t CoreDataStore.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CoreDataStore.init(configuration:)(a1);
  return v2;
}

NSManagedObjectContext __swiftcall CoreDataStore.newBackgroundManagedObjectContext()()
{
  uint64_t v0;

  return (NSManagedObjectContext)objc_msgSend(*(id *)(v0 + 16), sel_newBackgroundContext);
}

uint64_t sub_2332668B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_23361C938();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_233167C58(&qword_256043F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC0]),
        v6 = sub_23361E084(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
      v12 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_233266A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23361F350();
    sub_23361E0A8();
    v6 = sub_23361F3A4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23361F224() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23361F224() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_233266B6C(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (*(_QWORD *)(a2 + 16)
    && (v4 = sub_23353EC20(),
        v5 = -1 << *(_BYTE *)(a2 + 32),
        v6 = v4 & ~v5,
        ((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    v7 = ~v5;
    v8 = qword_233632880[a1];
    while (qword_233632880[*(char *)(*(_QWORD *)(a2 + 48) + v6)] != v8)
    {
      v9 = sub_23361F224();
      swift_bridgeObjectRelease_n();
      if ((v9 & 1) == 0)
      {
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
          continue;
      }
      return v9 & 1;
    }
    swift_bridgeObjectRelease_n();
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_233266C6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v18;
  char v20;
  char v22;
  id v23;
  id v24;
  id v25;
  char v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23361F350();
    Order.ShippingRecipient.hash(into:)();
    v4 = sub_23361F3A4();
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v7 = ~v5;
      v8 = a1[1];
      v34 = *a1;
      v9 = a1[3];
      v30 = a1[2];
      v28 = a1[4];
      v31 = a1[5];
      v32 = ~v5;
      v29 = (void *)a1[6];
      v33 = v9;
      do
      {
        v10 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 56 * v6);
        v12 = v10[1];
        v11 = v10[2];
        v14 = v10[3];
        v13 = v10[4];
        v16 = v10[5];
        v15 = (void *)v10[6];
        if (v12)
        {
          if (!v8)
            goto LABEL_5;
          if (*v10 != v34 || v12 != v8)
          {
            v18 = sub_23361F224();
            v7 = v32;
            v9 = v33;
            if ((v18 & 1) == 0)
              goto LABEL_5;
          }
        }
        else if (v8)
        {
          goto LABEL_5;
        }
        if (v14)
        {
          if (!v9)
            goto LABEL_5;
          if (v11 != v30 || v14 != v9)
          {
            v20 = sub_23361F224();
            v7 = v32;
            v9 = v33;
            if ((v20 & 1) == 0)
              goto LABEL_5;
          }
        }
        else if (v9)
        {
          goto LABEL_5;
        }
        if (v16)
        {
          if (!v31)
            goto LABEL_5;
          if (v13 != v28 || v16 != v31)
          {
            v22 = sub_23361F224();
            v7 = v32;
            v9 = v33;
            if ((v22 & 1) == 0)
              goto LABEL_5;
          }
        }
        else if (v31)
        {
          goto LABEL_5;
        }
        if (v15)
        {
          if (v29)
          {
            sub_233168668(0, &qword_254247E48);
            swift_bridgeObjectRetain();
            v23 = v15;
            v24 = v29;
            v25 = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v26 = sub_23361EA14();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v7 = v32;
            v9 = v33;
            if ((v26 & 1) != 0)
              return 1;
          }
        }
        else if (!v29)
        {
          return 1;
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_233266F0C(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v3 = a1 & 1;
  sub_23361F350();
  sub_23361F35C();
  v4 = sub_23361F3A4();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(a2 + 48);
  if ((((v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    v9 = 1;
    return v9 & 1;
  }
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return v9 & 1;
  }
  do
  {
    v9 = (v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

uint64_t sub_233267014(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_23361D6A0();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_23361E084(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_233267198(char a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_23361F350();
    __asm { BR              X10 }
  }
  return 0;
}

char *CoreDataStore.init(configuration:)(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint8_t *v87;
  uint8_t *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  void *v95;
  char *v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void *v127;
  id v128;
  id v129;

  v3 = v1;
  v122 = *(_QWORD *)v1;
  v111 = sub_23361D6A0();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  MEMORY[0x24BDAC7A8](v6);
  v113 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CoreDataStoreLocalConfiguration(0);
  MEMORY[0x24BDAC7A8](v8);
  v114 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361C938();
  v117 = *(_QWORD *)(v10 - 8);
  v118 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v103 - v14;
  v126 = sub_23361C944();
  v121 = *(_QWORD *)(v126 - 8);
  v16 = MEMORY[0x24BDAC7A8](v126);
  v125 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v115 = (char *)&v103 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v103 - v20;
  v124 = type metadata accessor for CoreDataStoreConfiguration(0);
  v22 = MEMORY[0x24BDAC7A8](v124);
  v112 = (uint64_t)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v119 = (uint64_t)&v103 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v120 = (uint64_t)&v103 - v26;
  v116 = type metadata accessor for CoreDataStoreClientConfiguration(0);
  MEMORY[0x24BDAC7A8](v116);
  v123 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542483E0 != -1)
    swift_once();
  v28 = (void *)sub_2332691B8();
  objc_msgSend(v28, sel_mutableCopy);
  sub_23361EC24();

  swift_unknownObjectRelease();
  sub_233168668(0, (unint64_t *)&qword_2542482A8);
  swift_dynamicCast();
  v29 = v129;
  v30 = objc_allocWithZone(MEMORY[0x24BDBB6D8]);
  v31 = (void *)sub_23361E12C();
  v32 = objc_msgSend(v30, sel_initWithName_managedObjectModel_, v31, v29);

  *((_QWORD *)v3 + 2) = v32;
  v33 = v32;
  sub_2332683F8(a1);
  v34 = v3;
  v35 = a1;
  if (!v2)
  {

    goto LABEL_8;
  }

  v129 = v2;
  v36 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  v38 = v125;
  v37 = v126;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v108 = v35;
    v107 = v34;

    v39 = v121;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v21, v38, v37);
    v106 = sub_233167C58(&qword_254246B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23361D190();
    sub_23361C8C0();
    sub_233167C58(&qword_2560472F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAED0]);
    v40 = v118;
    sub_23361E348();
    sub_23361E348();
    v42 = v127;
    v41 = v128;
    v43 = *(void (**)(char *, uint64_t))(v117 + 8);
    v43(v13, v40);
    v105 = (void (*)(uint64_t, uint64_t))v43;
    v43(v15, v40);
    if (v41 == v42)
    {
      v44 = (void *)sub_23361C8B4();
      v34 = v107;
      v35 = v108;
      sub_233269B50(v44, *((void **)v107 + 2), v108);
      v75 = *(void (**)(char *, uint64_t))(v121 + 8);
      v76 = v126;
      v75(v21, v126);

      v75(v125, v76);
LABEL_8:
      v45 = (uint64_t)v123;
      goto LABEL_9;
    }
    v61 = v126;
    v104 = *(void (**)(char *, uint64_t))(v39 + 8);
    v104(v21, v126);
    v62 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v34 = v115;
    v62(v115, v125, v61);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560472F8);
    v63 = (uint64_t)v15;
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_233627010;
    sub_23361C92C();
    sub_23361C8D8();
    sub_23361C8FC();
    sub_23361C914();
    sub_23361C8F0();
    sub_23361C920();
    v65 = sub_2331C8E74(v64);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23361D190();
    LOBYTE(v64) = sub_2332668B4(v63, v65);
    swift_bridgeObjectRelease();
    v105(v63, v40);
    v54 = v108;
    if ((v64 & 1) == 0)
      goto LABEL_22;
    if (qword_254247668 == -1)
      goto LABEL_19;
    goto LABEL_48;
  }

  v128 = v2;
  v50 = v2;
  sub_233168668(0, (unint64_t *)&qword_2560472E8);
  if (!swift_dynamicCast())
  {
    sub_233168500(v35, type metadata accessor for CoreDataStoreConfiguration);
    goto LABEL_36;
  }
  v51 = v35;
  v52 = v129;
  v53 = objc_msgSend(v129, sel_domain);
  v54 = sub_23361E150();
  v56 = v55;

  v57 = sub_23361E150();
  v45 = (uint64_t)v123;
  if (v54 != v57 || v56 != v58)
  {
    v54 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) != 0)
      goto LABEL_30;
    sub_233168500(v51, type metadata accessor for CoreDataStoreConfiguration);

LABEL_36:
    goto LABEL_37;
  }
  swift_bridgeObjectRelease_n();
LABEL_30:

  v70 = (uint64_t)objc_msgSend(v52, sel_code);
  if (v70 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v70 <= 0x7FFFFFFF)
  {
    v35 = v51;
    if ((_DWORD)v70 != 26 && (_DWORD)v70 != 11)
    {
      swift_willThrow();
      sub_233168500(v51, type metadata accessor for CoreDataStoreConfiguration);

      goto LABEL_37;
    }
    v71 = (void *)*((_QWORD *)v34 + 2);
    v72 = v52;
    v73 = v71;
    sub_233269B50(v72, v73, v51);

    goto LABEL_9;
  }
  __break(1u);
LABEL_48:
  swift_once();
LABEL_19:
  swift_beginAccess();
  if (byte_254246F48 != 1)
  {
LABEL_22:
    sub_23361C8B4();
    swift_willThrow();
    sub_233168500(v54, type metadata accessor for CoreDataStoreConfiguration);
    v104(v34, v126);

    v34 = v107;
LABEL_37:

    swift_deallocPartialClassInstance();
    return v34;
  }
  v66 = v112;
  sub_233269DB4(v54, v112);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168500(v66, type metadata accessor for CoreDataStoreConfiguration);
    goto LABEL_22;
  }
  v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
  v81 = v66;
  v82 = v66 + v80;
  sub_233168580(v81, v114, type metadata accessor for CoreDataStoreLocalConfiguration);
  sub_233168580(v82, v113, type metadata accessor for CoreDataStoreCloudConfiguration);
  if (qword_2542483B0 != -1)
    swift_once();
  v83 = sub_23361DB80();
  __swift_project_value_buffer(v83, (uint64_t)qword_254248210);
  v84 = sub_23361DB68();
  v85 = sub_23361E768();
  v86 = os_log_type_enabled(v84, v85);
  v34 = v107;
  if (v86)
  {
    v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v87 = 0;
    _os_log_impl(&dword_233151000, v84, v85, "Failed to migrate Core Data store. Let's delete it and try again.", v87, 2u);
    v88 = v87;
    v54 = v108;
    MEMORY[0x234934590](v88, -1, -1);
  }

  v89 = *((id *)v34 + 2);
  v91 = v113;
  v90 = v114;
  sub_2332696E8(v89, v114, v113);
  v45 = (uint64_t)v123;

  v92 = *((id *)v34 + 2);
  sub_2332683F8(v54);

  v93 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF8800]), sel_init);
  v94 = (void *)sub_23361E12C();
  objc_msgSend(v93, sel_setTitle_, v94);

  v95 = (void *)sub_23361E12C();
  objc_msgSend(v93, sel_setBody_, v95);

  objc_msgSend(v93, sel_setInterruptionLevel_, 1);
  v96 = v109;
  sub_23361D694();
  sub_23361D64C();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v96, v111);
  v97 = v93;
  v98 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v99 = objc_msgSend((id)objc_opt_self(), sel_requestWithIdentifier_content_trigger_, v98, v97, 0);

  v100 = objc_allocWithZone(MEMORY[0x24BDF88B8]);
  v101 = (void *)sub_23361E12C();
  v102 = objc_msgSend(v100, sel_initWithBundleIdentifier_, v101);

  objc_msgSend(v102, sel_addNotificationRequest_withCompletionHandler_, v99, 0);
  v35 = v108;

  sub_233168500(v91, type metadata accessor for CoreDataStoreCloudConfiguration);
  sub_233168500(v90, type metadata accessor for CoreDataStoreLocalConfiguration);
  v104(v115, v126);

LABEL_9:
  v46 = v120;
  sub_233269DB4(v35, v120);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v59 = type metadata accessor for CoreDataStoreConfiguration;
    v60 = v46;
LABEL_24:
    sub_233168500(v60, v59);
    v79 = 0;
    goto LABEL_25;
  }
  sub_233168580(v46, v45, type metadata accessor for CoreDataStoreClientConfiguration);
  if (*(_BYTE *)(v45 + *(int *)(v116 + 20)) != 1)
  {
    v59 = type metadata accessor for CoreDataStoreClientConfiguration;
    v60 = v45;
    goto LABEL_24;
  }
  v47 = v35;
  v48 = objc_msgSend(*((id *)v34 + 2), sel_viewContext);
  v49 = objc_msgSend(v48, sel_setAutomaticallyMergesChangesFromParent_, 0);
  MEMORY[0x24BDAC7A8](v49);
  *(&v103 - 2) = (uint64_t)v48;
  sub_23361E960();
  v77 = (void *)*((_QWORD *)v34 + 2);
  type metadata accessor for RemoteStoreManager();
  swift_allocObject();
  v78 = v77;
  v79 = sub_23352E5E0(v78);

  sub_233168500(v45, type metadata accessor for CoreDataStoreClientConfiguration);
  v35 = v47;
LABEL_25:
  *((_QWORD *)v34 + 3) = v79;
  v67 = v119;
  sub_233269DB4(v35, v119);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168500(v35, type metadata accessor for CoreDataStoreConfiguration);
  }
  else
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8);
    sub_233168500(v67 + *(int *)(v68 + 48), type metadata accessor for CoreDataStoreCloudConfiguration);
    sub_233168500(v67, type metadata accessor for CoreDataStoreLocalConfiguration);
    v69 = objc_msgSend(*((id *)v34 + 2), sel_newBackgroundContext);
    sub_2332694DC(v69);

    v67 = v35;
  }
  sub_233168500(v67, type metadata accessor for CoreDataStoreConfiguration);
  return v34;
}

id sub_2332683F8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  id v31;
  id v32[2];

  v2 = v1;
  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CoreDataStoreLocalConfiguration(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CoreDataStoreClientConfiguration(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CoreDataStoreConfiguration(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233269DB4(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v15, (uint64_t)v12, type metadata accessor for CoreDataStoreClientConfiguration);
    if (qword_2542483B0 != -1)
      swift_once();
    v16 = sub_23361DB80();
    __swift_project_value_buffer(v16, (uint64_t)qword_254248210);
    v17 = sub_23361DB68();
    v18 = sub_23361E750();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_233151000, v17, v18, "Configuring core data store for client", v19, 2u);
      MEMORY[0x234934590](v19, -1, -1);
    }

    sub_2332655C4((uint64_t)v12);
    sub_233168668(0, (unint64_t *)&unk_254248740);
    v20 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPersistentStoreDescriptions_, v20);

    v21 = type metadata accessor for CoreDataStoreClientConfiguration;
    v22 = (uint64_t)v12;
  }
  else
  {
    v23 = (uint64_t)&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48)];
    sub_233168580((uint64_t)v15, (uint64_t)v9, type metadata accessor for CoreDataStoreLocalConfiguration);
    sub_233168580(v23, (uint64_t)v6, type metadata accessor for CoreDataStoreCloudConfiguration);
    if (qword_2542483B0 != -1)
      swift_once();
    v24 = sub_23361DB80();
    __swift_project_value_buffer(v24, (uint64_t)qword_254248210);
    v25 = sub_23361DB68();
    v26 = sub_23361E750();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_233151000, v25, v26, "Configuring core data store for daemon", v27, 2u);
      MEMORY[0x234934590](v27, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_233626360;
    *(_QWORD *)(v28 + 32) = sub_233265A34();
    *(_QWORD *)(v28 + 40) = sub_233265F7C((uint64_t)v6);
    v32[0] = (id)v28;
    sub_23361E408();
    if (v6[*(int *)(v4 + 28)] == 1)
    {
      sub_2332663E4((uint64_t)v6);
      MEMORY[0x234932730]();
      if (*(_QWORD *)(((unint64_t)v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v32[0] & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_233168668(0, (unint64_t *)&unk_254248740);
    v29 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPersistentStoreDescriptions_, v29);

    sub_233168500((uint64_t)v6, type metadata accessor for CoreDataStoreCloudConfiguration);
    v21 = type metadata accessor for CoreDataStoreLocalConfiguration;
    v22 = (uint64_t)v9;
  }
  sub_233168500(v22, v21);
  v32[0] = 0;
  if ((objc_msgSend(v2, sel_load_, v32) & 1) != 0)
    return v32[0];
  v31 = v32[0];
  sub_23361D1B4();

  return (id)swift_willThrow();
}

id CoreDataStore.persistentContainer.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void sub_2332688EC()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CLLocationValueTransformer()), sel_init);
  if (qword_254248490 != -1)
    swift_once();
  objc_msgSend(v0, sel_setValueTransformer_forName_, v1, qword_25424C338);

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CNPostalAddressValueTransformer()), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248558);
  sub_23361E1C8();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValueTransformer_forName_, v2, v3);

  if (qword_254248728 != -1)
    swift_once();
  v4 = qword_254248720;
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LocalizedStringTransformer()), sel_init);
  objc_msgSend(v0, sel_setValueTransformer_forName_, v5, v4);

  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UNNotificationContentValueTransformer()), sel_init);
  if (qword_254248738 != -1)
    swift_once();
  objc_msgSend(v0, sel_setValueTransformer_forName_, v6, qword_254248730);

  v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StorableColorValueTransformer()), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248550);
  sub_23361E1C8();
  v8 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValueTransformer_forName_, v7, v8);

  if (qword_254248710 != -1)
    swift_once();
  v9 = qword_2542481F0;
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StringParamsTransformer()), sel_init);
  objc_msgSend(v0, sel_setValueTransformer_forName_, v10, v9);

}

uint64_t sub_233268B7C()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2336328C0;
  sub_233168668(0, (unint64_t *)&qword_2542465C0);
  *(_QWORD *)(v0 + 32) = sub_23361EA2C();
  *(_QWORD *)(v0 + 40) = sub_23361EA2C();
  *(_QWORD *)(v0 + 48) = sub_23361EA2C();
  *(_QWORD *)(v0 + 56) = sub_23361EA2C();
  *(_QWORD *)(v0 + 64) = sub_23361EA2C();
  *(_QWORD *)(v0 + 72) = sub_23361EA2C();
  *(_QWORD *)(v0 + 80) = sub_23361EA2C();
  *(_QWORD *)(v0 + 88) = sub_23361EA2C();
  *(_QWORD *)(v0 + 96) = sub_23361EA2C();
  *(_QWORD *)(v0 + 104) = sub_23361EA2C();
  *(_QWORD *)(v0 + 112) = sub_23361EA2C();
  *(_QWORD *)(v0 + 120) = sub_23361EA2C();
  *(_QWORD *)(v0 + 128) = sub_23361EA2C();
  result = sub_23361E408();
  qword_25424C310 = v0;
  return result;
}

uint64_t sub_233268D30()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2336328D0;
  sub_233168668(0, (unint64_t *)&qword_2542465C0);
  *(_QWORD *)(v0 + 32) = sub_23361EA2C();
  *(_QWORD *)(v0 + 40) = sub_23361EA2C();
  *(_QWORD *)(v0 + 48) = sub_23361EA2C();
  *(_QWORD *)(v0 + 56) = sub_23361EA2C();
  result = sub_23361E408();
  qword_25424C308 = v0;
  return result;
}

uint64_t sub_233268E0C()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2542465C0);
  *(_QWORD *)(v0 + 32) = sub_23361EA2C();
  result = sub_23361E408();
  qword_25424C328 = v0;
  return result;
}

void sub_233268EA0(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17[3];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  LOBYTE(v16) = 3;
  NSPersistentStore.subscript.getter((uint64_t)&v16);
  v3 = v18;
  sub_233168608((uint64_t)v17, &qword_254245020);
  if (!v3)
  {
    v18 = MEMORY[0x24BEE3F30];
    LOWORD(v17[0]) = 1;
    LOBYTE(v16) = 3;
    NSPersistentStore.subscript.setter((uint64_t)v17, (uint64_t)&v16);
  }
  v17[0] = 0;
  if (objc_msgSend(a2, sel_save_, v17))
  {
    v4 = v17[0];
  }
  else
  {
    v5 = v17[0];
    v6 = (void *)sub_23361D1B4();

    swift_willThrow();
    if (qword_2542483B0 != -1)
      swift_once();
    v7 = sub_23361DB80();
    __swift_project_value_buffer(v7, (uint64_t)qword_254248210);
    v8 = v6;
    v9 = v6;
    v10 = sub_23361DB68();
    v11 = sub_23361E768();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (void *)swift_slowAlloc();
      v17[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_23361F2E4();
      v16 = sub_233164DCC(v14, v15, (uint64_t *)v17);
      sub_23361EBC4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_233151000, v10, v11, "Error saving default store metadata: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v13, -1, -1);
      MEMORY[0x234934590](v12, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t CoreDataStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CoreDataStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2332691B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  id v19;
  uint64_t result;
  id v21;
  _QWORD v22[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v22 - v8;
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_23361E12C();
  v12 = objc_msgSend(v10, sel_bundleWithIdentifier_, v11);

  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  v13 = (void *)sub_23361E12C();
  v14 = (void *)sub_23361E12C();
  v15 = objc_msgSend(v12, sel_URLForResource_withExtension_, v13, v14);

  if (!v15)
  {
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_8;
  }
  sub_23361D2D4();

  v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v16(v2, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_8:
    sub_233168608((uint64_t)v2, &qword_254248700);
    goto LABEL_9;
  }
  v16(v9, v2, v3);
  v17 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v18 = (void *)sub_23361D268();
  v19 = objc_msgSend(v17, sel_initWithContentsOfURL_, v18);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  if (v19)
  {

    return (uint64_t)v19;
  }
LABEL_9:
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v12, sel_description, 0xD00000000000002ELL, 0x800000023366F2F0);
  sub_23361E150();

  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = sub_23361EF24();
  __break(1u);
  return result;
}

void sub_2332694DC(void *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *oslog;
  _QWORD aBlock[6];

  v2 = NSManagedObjectContext.cloudStore.getter();
  if (v2)
  {
    v3 = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = a1;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_23326A094;
    *(_QWORD *)(v5 + 24) = v4;
    aBlock[4] = sub_233167E10;
    aBlock[5] = v5;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2332714C0;
    aBlock[3] = &block_descriptor_3;
    v6 = _Block_copy(aBlock);
    v7 = v3;
    v8 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_performBlockAndWait_, v6);

    _Block_release(v6);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v8 & 1) == 0)
      return;
    __break(1u);
    goto LABEL_9;
  }
  if (qword_2542483B0 != -1)
LABEL_9:
    swift_once();
  v9 = sub_23361DB80();
  __swift_project_value_buffer(v9, (uint64_t)qword_254248210);
  oslog = sub_23361DB68();
  v10 = sub_23361E768();
  if (os_log_type_enabled(oslog, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_233151000, oslog, v10, "Could not fetch cloud store to set default metadata", v11, 2u);
    MEMORY[0x234934590](v11, -1, -1);
  }

}

void sub_2332696E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  unsigned int v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  char *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  unsigned int v35;
  id v36;
  id v37;
  void *v38;
  unsigned __int8 v39;
  id v40;
  id v41;
  _QWORD v42[2];
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47[2];

  v45 = a3;
  v47[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = sub_23361E84C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v42 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v42 - v13;
  if (qword_2542483B0 != -1)
    swift_once();
  v46 = a2;
  v15 = sub_23361DB80();
  __swift_project_value_buffer(v15, (uint64_t)qword_254248210);
  v16 = sub_23361DB68();
  v17 = sub_23361E780();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_233151000, v16, v17, "Removing persistent stores", v18, 2u);
    MEMORY[0x234934590](v18, -1, -1);
  }

  v19 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  v47[0] = 0;
  v20 = objc_msgSend(v19, sel__removeAllPersistentStores_, v47);

  v21 = v47[0];
  if (!v20)
    goto LABEL_12;
  v22 = v47[0];
  v23 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  sub_23361E840();
  sub_23361E9A8();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);

    return;
  }
  v43 = *(void (**)(char *, uint64_t))(v7 + 8);
  v43(v14, v6);

  v24 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  v25 = v45 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 20);
  sub_23361E840();
  sub_23361E9A8();
  v42[1] = v25;
  v26 = v43;
  v43(v12, v6);

  v27 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  v28 = v44;
  sub_23361E840();
  sub_23361E9A8();
  v26(v28, v6);

  v29 = (void *)objc_opt_self();
  v30 = objc_msgSend(v29, sel_defaultManager);
  v31 = (void *)sub_23361D268();
  v47[0] = 0;
  LODWORD(v28) = objc_msgSend(v30, sel_removeItemAtURL_error_, v31, v47);

  v21 = v47[0];
  if (!(_DWORD)v28)
    goto LABEL_12;
  v32 = v47[0];
  v33 = objc_msgSend(v29, sel_defaultManager);
  v34 = (void *)sub_23361D268();
  v47[0] = 0;
  v35 = objc_msgSend(v33, sel_removeItemAtURL_error_, v34, v47);

  v21 = v47[0];
  if (!v35)
    goto LABEL_12;
  v36 = v47[0];
  v37 = objc_msgSend(v29, sel_defaultManager);
  v38 = (void *)sub_23361D268();
  v47[0] = 0;
  v39 = objc_msgSend(v37, sel_removeItemAtURL_error_, v38, v47);

  v21 = v47[0];
  if ((v39 & 1) != 0)
  {
    v40 = v47[0];
  }
  else
  {
LABEL_12:
    v41 = v21;
    sub_23361D1B4();

    swift_willThrow();
  }
}

id sub_233269B50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v7 = type metadata accessor for CoreDataStoreConfiguration(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CoreDataStoreLocalConfiguration(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233269DB4(a3, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for CoreDataStoreConfiguration);
    swift_willThrow();
    return a1;
  }
  else
  {
    v17 = (uint64_t)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48)];
    sub_233168580((uint64_t)v9, (uint64_t)v15, type metadata accessor for CoreDataStoreLocalConfiguration);
    sub_233168580(v17, (uint64_t)v12, type metadata accessor for CoreDataStoreCloudConfiguration);
    if (qword_2542483B0 != -1)
      swift_once();
    v18 = sub_23361DB80();
    __swift_project_value_buffer(v18, (uint64_t)qword_254248210);
    v19 = sub_23361DB68();
    v20 = sub_23361E768();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_233151000, v19, v20, "Core Data store was corrupted. Deleting and retrying.", v21, 2u);
      MEMORY[0x234934590](v21, -1, -1);
    }

    sub_2332696E8(a2, (uint64_t)v15, (uint64_t)v12);
    if (!v3)
      sub_2332683F8(a3);
    sub_233168500((uint64_t)v12, type metadata accessor for CoreDataStoreCloudConfiguration);
    return (id)sub_233168500((uint64_t)v15, type metadata accessor for CoreDataStoreLocalConfiguration);
  }
}

uint64_t sub_233269DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreDataStoreConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CoreDataStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreDataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDataStore.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreDataStore.StoreType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for CoreDataStore.StoreType(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for CoreDataStore.StoreType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for CoreDataStore.StoreType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataStore.StoreType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CoreDataStore.StoreType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_23326A020(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23326A038(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CoreDataStore.StoreType()
{
  return &type metadata for CoreDataStore.StoreType;
}

uint64_t sub_23326A068()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23326A094()
{
  uint64_t v0;

  sub_233268EA0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23326A09C()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t PIIRedactionRegex.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIIRedactionRegex.pattern.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIIRedactionRegex.regex.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PIIRedactionRegex() + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PIIRedactionRegex()
{
  uint64_t result;

  result = qword_256047390;
  if (!qword_256047390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PIIRedactionRegex.replacement.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PIIRedactionRegex() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

BOOL PIIRedactionRegex.isGlobal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for PIIRedactionRegex() + 32)) + 16) == 0;
}

uint64_t PIIRedactionRegex.locales.getter()
{
  type metadata accessor for PIIRedactionRegex();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23326A220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PIIRedactionRegex.init(from:)(a1, a2);
}

uint64_t PIIRedactionRegex.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v37 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047308);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PIIRedactionRegex();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23326A774();
  v11 = v41;
  sub_23361F3EC();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v41 = v5;
  v12 = v40;
  v36 = (int *)v8;
  v49 = 0;
  v13 = v4;
  *v10 = sub_23361F02C();
  v10[1] = v15;
  v48 = 2;
  v16 = sub_23361F02C();
  v17 = v7;
  v18 = v36;
  v19 = (uint64_t *)((char *)v10 + v36[7]);
  *v19 = v16;
  v19[1] = v20;
  v47 = 1;
  v21 = sub_23361F02C();
  v35 = v17;
  v10[2] = v21;
  v10[3] = v22;
  swift_bridgeObjectRetain();
  v23 = v39;
  sub_23361DA30();
  v24 = (char *)v10 + v18[6];
  v25 = v12;
  v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v23, v38);
  v46 = 3;
  v27 = sub_23361F038();
  v39 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  v45 = 4;
  sub_23326A7B8();
  sub_23361EFFC();
  if (v42)
    v28 = v42;
  else
    v28 = MEMORY[0x24BEE4AF8];
  v29 = sub_2331C92EC(v28);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v10 + v36[8]) = v29;
  v30 = *(_QWORD *)(v29 + 16);
  if ((v27 & 1) == 0)
  {
    v31 = v37;
    if (!v30)
    {
      v44 = 4;
      sub_23361EE10();
      swift_allocError();
      sub_23326AE94();
      v32 = v35;
      goto LABEL_13;
    }
LABEL_11:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v13);
    sub_23326AE14((uint64_t)v10, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_23326AE58((uint64_t)v10);
  }
  v31 = v37;
  if (!v30)
    goto LABEL_11;
  v43 = 4;
  sub_23361EE10();
  swift_allocError();
  sub_23326AE94();
  v32 = v35;
LABEL_13:
  sub_23361EDE0();
  v33 = v41;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v13);
  v34 = v39;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v34)
    (*(void (**)(char *, uint64_t))(v25 + 8))((char *)v10 + v36[6], v26);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23326A774()
{
  unint64_t result;

  result = qword_256047310;
  if (!qword_256047310)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionRegex.CodingKeys, &type metadata for PIIRedactionRegex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047310);
  }
  return result;
}

unint64_t sub_23326A7B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2560425E8;
  if (!qword_2560425E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246588);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2560425E8);
  }
  return result;
}

FinanceKit::PIIRedactionRegex::CodingKeys_optional __swiftcall PIIRedactionRegex.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::PIIRedactionRegex::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

FinanceKit::PIIRedactionRegex::CodingKeys_optional __swiftcall PIIRedactionRegex.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  FinanceKit::PIIRedactionRegex::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = PIIRedactionRegex.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

FinanceKit::PIIRedactionRegex::CodingKeys_optional __swiftcall PIIRedactionRegex.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 5;
  return (FinanceKit::PIIRedactionRegex::CodingKeys_optional)intValue;
}

uint64_t PIIRedactionRegex.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t PIIRedactionRegex.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23326A8E0 + 4 * byte_2336328E0[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23326A8E0()
{
  return 0x6E726574746170;
}

uint64_t sub_23326A8F8()
{
  return 0x616C706552696970;
}

uint64_t sub_23326A91C()
{
  return 0x6C61626F6C477369;
}

uint64_t sub_23326A934()
{
  return 0x73656C61636F6CLL;
}

uint64_t PIIRedactionRegex.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23326A974 + 4 * byte_2336328E5[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23326A974()
{
  return 0x6E726574746170;
}

uint64_t sub_23326A98C()
{
  return 0x616C706552696970;
}

uint64_t sub_23326A9B0()
{
  return 0x6C61626F6C477369;
}

uint64_t sub_23326A9C8()
{
  return 0x73656C61636F6CLL;
}

void sub_23326A9E0(char *a1)
{
  sub_233227E54(*a1);
}

void sub_23326A9EC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23326AA30()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23326AAC4()
{
  __asm { BR              X10 }
}

uint64_t sub_23326AAF8()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23326AB78()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23326ABB8()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::PIIRedactionRegex::CodingKeys_optional sub_23326AC4C(Swift::String *a1)
{
  return PIIRedactionRegex.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_23326AC58()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23326AC80 + 4 * byte_2336328F9[*v0]))();
}

void sub_23326AC80(_QWORD *a1@<X8>)
{
  *a1 = 0x6E726574746170;
  a1[1] = 0xE700000000000000;
}

void sub_23326AC9C(char *a1@<X8>)
{
  strcpy(a1, "piiReplacement");
  a1[15] = -18;
}

void sub_23326ACC4(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61626F6C477369;
  a1[1] = 0xE800000000000000;
}

void sub_23326ACE0(_QWORD *a1@<X8>)
{
  *a1 = 0x73656C61636F6CLL;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_23326ACFC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23326AD24 + 4 * byte_2336328FE[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23326AD24()
{
  return 0x6E726574746170;
}

uint64_t sub_23326AD3C()
{
  return 0x616C706552696970;
}

uint64_t sub_23326AD60()
{
  return 0x6C61626F6C477369;
}

uint64_t sub_23326AD78()
{
  return 0x73656C61636F6CLL;
}

FinanceKit::PIIRedactionRegex::CodingKeys_optional sub_23326AD90@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  FinanceKit::PIIRedactionRegex::CodingKeys_optional result;
  char v5;

  result.value = PIIRedactionRegex.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_23326ADC4()
{
  sub_23326A774();
  return sub_23361F428();
}

uint64_t sub_23326ADEC()
{
  sub_23326A774();
  return sub_23361F434();
}

uint64_t sub_23326AE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PIIRedactionRegex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23326AE58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PIIRedactionRegex();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23326AE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256047318;
  if (!qword_256047318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256047308);
    result = MEMORY[0x234934494](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_256047318);
  }
  return result;
}

unint64_t sub_23326AEE4()
{
  unint64_t result;

  result = qword_256047320;
  if (!qword_256047320)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionRegex.CodingKeys, &type metadata for PIIRedactionRegex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047320);
  }
  return result;
}

unint64_t sub_23326AF2C()
{
  unint64_t result;

  result = qword_256047328;
  if (!qword_256047328)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionRegex.CodingKeys, &type metadata for PIIRedactionRegex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047328);
  }
  return result;
}

unint64_t sub_23326AF74()
{
  unint64_t result;

  result = qword_256047330;
  if (!qword_256047330)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionRegex.CodingKeys, &type metadata for PIIRedactionRegex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047330);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PIIRedactionRegex(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PIIRedactionRegex(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PIIRedactionRegex(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PIIRedactionRegex(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PIIRedactionRegex(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for PIIRedactionRegex(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PIIRedactionRegex()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326B3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PIIRedactionRegex()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326B478(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_23326B4F0()
{
  unint64_t v0;

  sub_23326B574();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23326B574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2560473A0)
  {
    sub_23361D9DC();
    v0 = sub_23361DA3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2560473A0);
  }
}

uint64_t storeEnumTagSinglePayload for PIIRedactionRegex.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23326B614 + 4 * byte_233632908[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23326B648 + 4 * byte_233632903[v4]))();
}

uint64_t sub_23326B648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23326B650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23326B658);
  return result;
}

uint64_t sub_23326B664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23326B66CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23326B670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23326B678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PIIRedactionRegex.CodingKeys()
{
  return &type metadata for PIIRedactionRegex.CodingKeys;
}

void static StorableColorValueTransformer.register()()
{
  objc_class *v0;
  void *v1;
  id v2;
  void *v3;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248550);
  sub_23361E1C8();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValueTransformer_forName_, v2, v3);

}

uint64_t static StorableColorValueTransformer.allowedTopLevelClasses.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254247DC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  *(_QWORD *)(v0 + 32) = type metadata accessor for StorableColor();
  return v0;
}

uint64_t type metadata accessor for StorableColor()
{
  return objc_opt_self();
}

id StorableColorValueTransformer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StorableColorValueTransformer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id StorableColor.__allocating_init(color:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StorableColor.init(color:)(a1);
}

id StorableColor.init(color:)(void *a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  char *v5;
  id v6;
  CGColorSpace *v7;
  CGColorSpace *v8;
  CGColorRef CopyByMatchingToColorSpace;
  CGColorRef v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v2 = v1;
  if (!a1)
    goto LABEL_11;
  v4 = (const __CFString *)*MEMORY[0x24BDBF228];
  v5 = v2;
  v6 = a1;
  v7 = CGColorSpaceCreateWithName(v4);
  if (!v7)
  {
LABEL_10:

LABEL_11:
    type metadata accessor for StorableColor();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v8 = v7;
  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v7, kCGRenderingIntentAbsoluteColorimetric, (CGColorRef)v6, 0);
  if (!CopyByMatchingToColorSpace)
  {
LABEL_9:

    goto LABEL_10;
  }
  v10 = CopyByMatchingToColorSpace;
  v11 = (_QWORD *)sub_23361E6A8();
  if (!v11)
  {
LABEL_8:

    goto LABEL_9;
  }
  if (v11[2] != 4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit13StorableColor_red] = v11[4];
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit13StorableColor_green] = v11[5];
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit13StorableColor_blue] = v11[6];
  v12 = v11[7];

  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit13StorableColor_alpha] = v12;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for StorableColor();
  v13 = objc_msgSendSuper2(&v15, sel_init);

  return v13;
}

CGColorRef sub_23326BA3C()
{
  uint64_t v0;
  CGColorSpace *v1;
  CGColorSpace *v2;
  CGFloat v3;
  CGFloat v4;
  CGColorRef v5;
  CGFloat v7[4];

  v1 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF228]);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = *(double *)(v0 + OBJC_IVAR____TtC10FinanceKit13StorableColor_green);
  v7[0] = *(CGFloat *)(v0 + OBJC_IVAR____TtC10FinanceKit13StorableColor_red);
  v7[1] = v3;
  v4 = *(double *)(v0 + OBJC_IVAR____TtC10FinanceKit13StorableColor_alpha);
  v7[2] = *(CGFloat *)(v0 + OBJC_IVAR____TtC10FinanceKit13StorableColor_blue);
  v7[3] = v4;
  v5 = CGColorCreate(v1, v7);

  return v5;
}

void sub_23326BACC(char *a1)
{
  sub_23322897C(*a1);
}

void sub_23326BAD8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23326BB1C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23326BB7C()
{
  __asm { BR              X10 }
}

uint64_t sub_23326BBB0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23326BBFC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_23326BC3C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23326BC9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23326C664();
  *a1 = result;
  return result;
}

uint64_t sub_23326BCC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23326BCF0 + 4 * byte_233632AFC[*v0]))();
}

void sub_23326BCF0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65657267;
  a1[1] = 0xE500000000000000;
}

void sub_23326BD08(_QWORD *a1@<X8>)
{
  *a1 = 1702194274;
  a1[1] = 0xE400000000000000;
}

void sub_23326BD1C(_QWORD *a1@<X8>)
{
  *a1 = 0x6168706C61;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_23326BD34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23326BD5C + 4 * byte_233632B00[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_23326BD5C()
{
  return 0x6E65657267;
}

uint64_t sub_23326BD70()
{
  return 1702194274;
}

uint64_t sub_23326BD80()
{
  return 0x6168706C61;
}

uint64_t sub_23326BD94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23326C664();
  *a1 = result;
  return result;
}

uint64_t sub_23326BDB8()
{
  sub_23326C7F0();
  return sub_23361F428();
}

uint64_t sub_23326BDE0()
{
  sub_23326C7F0();
  return sub_23361F434();
}

uint64_t static StorableColor.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_2560473E0;
}

uint64_t static StorableColor.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_2560473E0 = a1;
  return result;
}

uint64_t (*static StorableColor.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_23326BF50(void *a1)
{
  uint64_t v1;
  double v3;
  void *v4;
  double v5;
  void *v6;
  double v7;
  void *v8;
  double v9;
  id v10;

  v3 = *(double *)(v1 + OBJC_IVAR____TtC10FinanceKit13StorableColor_red);
  v4 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v4, v3);

  v5 = *(double *)(v1 + OBJC_IVAR____TtC10FinanceKit13StorableColor_green);
  v6 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v6, v5);

  v7 = *(double *)(v1 + OBJC_IVAR____TtC10FinanceKit13StorableColor_blue);
  v8 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v8, v7);

  v9 = *(double *)(v1 + OBJC_IVAR____TtC10FinanceKit13StorableColor_alpha);
  v10 = (id)sub_23361E12C();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v10, v9);

}

id StorableColor.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23326C6AC(a1);

  return v4;
}

id StorableColor.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23326C6AC(a1);

  return v2;
}

uint64_t sub_23326C160(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047408);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23326C7F0();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F158();
  if (!v1)
  {
    v8[14] = 1;
    sub_23361F158();
    v8[13] = 2;
    sub_23361F158();
    v8[12] = 3;
    sub_23361F158();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

id StorableColor.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StorableColor.init(from:)(a1);
}

id StorableColor.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  objc_super v22;
  char v23;

  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047418);
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v21 = a1;
  v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_23326C7F0();
  v9 = v1;
  v10 = v8;
  sub_23361F3EC();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    type metadata accessor for StorableColor();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v23 = 0;
    v11 = v20;
    sub_23361F044();
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit13StorableColor_red] = v12;
    v23 = 1;
    sub_23361F044();
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit13StorableColor_green] = v13;
    v23 = 2;
    sub_23361F044();
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit13StorableColor_blue] = v14;
    v23 = 3;
    sub_23361F044();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
    *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit13StorableColor_alpha] = v17;

    v18 = (objc_class *)type metadata accessor for StorableColor();
    v22.receiver = v9;
    v22.super_class = v18;
    v10 = objc_msgSendSuper2(&v22, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  return v10;
}

id StorableColor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StorableColor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StorableColor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorableColor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23326C5F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for StorableColor());
  result = StorableColor.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23326C644(_QWORD *a1)
{
  return sub_23326C160(a1);
}

uint64_t sub_23326C664()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

id sub_23326C6AC(void *a1)
{
  void *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  v3 = v1;
  v4 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v4);
  v6 = v5;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit13StorableColor_red] = v6;
  v7 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v7);
  v9 = v8;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit13StorableColor_green] = v9;
  v10 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v10);
  v12 = v11;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit13StorableColor_blue] = v12;
  v13 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v13);
  v15 = v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit13StorableColor_alpha] = v15;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for StorableColor();
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t sub_23326C7F0()
{
  unint64_t result;

  result = qword_256047410;
  if (!qword_256047410)
  {
    result = MEMORY[0x234934494](&unk_233632CBC, &type metadata for StorableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047410);
  }
  return result;
}

uint64_t type metadata accessor for StorableColorValueTransformer()
{
  return objc_opt_self();
}

uint64_t method lookup function for StorableColor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StorableColor.__allocating_init(color:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of StorableColor.cgColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of StorableColor.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StorableColor.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of StorableColor.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of StorableColor.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for StorableColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23326C938 + 4 * byte_233632B09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23326C96C + 4 * byte_233632B04[v4]))();
}

uint64_t sub_23326C96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23326C974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23326C97CLL);
  return result;
}

uint64_t sub_23326C988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23326C990);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23326C994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23326C99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorableColor.CodingKeys()
{
  return &type metadata for StorableColor.CodingKeys;
}

unint64_t sub_23326C9BC()
{
  unint64_t result;

  result = qword_256047420;
  if (!qword_256047420)
  {
    result = MEMORY[0x234934494](&unk_233632C94, &type metadata for StorableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047420);
  }
  return result;
}

unint64_t sub_23326CA04()
{
  unint64_t result;

  result = qword_256047428;
  if (!qword_256047428)
  {
    result = MEMORY[0x234934494](&unk_233632BCC, &type metadata for StorableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047428);
  }
  return result;
}

unint64_t sub_23326CA4C()
{
  unint64_t result;

  result = qword_256047430;
  if (!qword_256047430)
  {
    result = MEMORY[0x234934494](&unk_233632BF4, &type metadata for StorableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256047430);
  }
  return result;
}

void sub_23326CA94(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_countryCodes);
  v4 = sub_23361E5DC();

  *a2 = v4;
}

id ManagedPIIRedactionConfiguration.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPIIRedactionConfiguration.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPIIRedactionConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedPIIRedactionConfiguration.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v4;
  void *v5;

  v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v5 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setCountryCodes_, v5);

  return v4;
}

id ManagedPIIRedactionConfiguration.__allocating_init(_:context:)(uint64_t *a1, void *a2)
{
  objc_class *v2;
  uint64_t v4;
  id v5;
  void *v6;

  v4 = *a1;
  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  sub_2331C92EC(v4);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setCountryCodes_, v6);

  return v5;
}

char *keypath_get_selector_countryCodes()
{
  return sel_countryCodes;
}

void sub_23326CD78(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E5B8();
  objc_msgSend(v2, sel_setCountryCodes_, v3);

}

uint64_t type metadata accessor for ManagedPIIRedactionConfiguration()
{
  return objc_opt_self();
}

uint64_t CoreDataStoreClientConfiguration.init(url:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = type metadata accessor for CoreDataStoreClientConfiguration(0);
  *(_BYTE *)(a3 + *(int *)(v6 + 20)) = 0;
  v7 = sub_23361D340();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  *(_QWORD *)(a3 + *(int *)(v6 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for CoreDataStoreClientConfiguration(uint64_t a1)
{
  return sub_233177414(a1, qword_254248668);
}

uint64_t sub_23326CE6C(uint64_t a1)
{
  return sub_23326D07C(a1, qword_254244F58, (void (*)(void))static URL.financeCloudDatabaseURL.getter);
}

uint64_t static CoreDataStoreConfiguration.cloudStoreUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23326CFEC(&qword_2542464C0, (uint64_t)qword_254244F58, a1);
}

uint64_t sub_23326CEB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D340();
  __swift_allocate_value_buffer(v3, qword_2542464C8);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2542464C8);
  static URL.financeDropboxDatabaseURL.getter((uint64_t)v2);
  v5 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  sub_2331A046C((uint64_t)v2);
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t static CoreDataStoreConfiguration.dropboxStoreUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23326CFEC(&qword_2542464E0, (uint64_t)qword_2542464C8, a1);
}

uint64_t sub_23326CFEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23361D340();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_23326D054(uint64_t a1)
{
  return sub_23326D07C(a1, qword_2542481F8, (void (*)(void))static URL.financeLocalDatabaseURL.getter);
}

uint64_t sub_23326D07C(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D340();
  __swift_allocate_value_buffer(v8, a2);
  v9 = __swift_project_value_buffer(v8, (uint64_t)a2);
  a3();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v9, v7, v8);
  sub_2331A046C((uint64_t)v7);
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t static CoreDataStoreConfiguration.localStoreUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23326CFEC(&qword_2542484A0, (uint64_t)qword_2542481F8, a1);
}

uint64_t CoreDataStoreClientConfiguration.isViewClient.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CoreDataStoreClientConfiguration(0) + 20));
}

uint64_t CoreDataStoreClientConfiguration.isViewClient.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CoreDataStoreClientConfiguration(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CoreDataStoreClientConfiguration.isViewClient.modify())()
{
  type metadata accessor for CoreDataStoreClientConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.containerIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreDataStoreCloudConfiguration.containerIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CoreDataStoreCloudConfiguration.containerIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.persistentStoreURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CoreDataStoreCloudConfiguration(uint64_t a1)
{
  return sub_233177414(a1, qword_254248560);
}

uint64_t CoreDataStoreCloudConfiguration.persistentStoreURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CoreDataStoreCloudConfiguration.persistentStoreURL.modify())()
{
  type metadata accessor for CoreDataStoreCloudConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.dropboxContainerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreDataStoreCloudConfiguration.dropboxContainerIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CoreDataStoreCloudConfiguration.dropboxContainerIdentifier.modify())()
{
  type metadata accessor for CoreDataStoreCloudConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.isDropboxPersistentStoreEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 28));
}

uint64_t CoreDataStoreCloudConfiguration.isDropboxPersistentStoreEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*CoreDataStoreCloudConfiguration.isDropboxPersistentStoreEnabled.modify())()
{
  type metadata accessor for CoreDataStoreCloudConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.dropboxPersistentStoreURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 32);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CoreDataStoreCloudConfiguration.dropboxPersistentStoreURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 32);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CoreDataStoreCloudConfiguration.dropboxPersistentStoreURL.modify())()
{
  type metadata accessor for CoreDataStoreCloudConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.isMirroringEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CoreDataStoreCloudConfiguration(0) + 36));
}

uint64_t CoreDataStoreCloudConfiguration.isMirroringEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CoreDataStoreCloudConfiguration(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*CoreDataStoreCloudConfiguration.isMirroringEnabled.modify())()
{
  type metadata accessor for CoreDataStoreCloudConfiguration(0);
  return nullsub_1;
}

uint64_t CoreDataStoreCloudConfiguration.init(overrideContainerIdentifierForDevelopment:overrideDropboxContainerIdentifierForDevelopment:)@<X0>(char a1@<W0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;

  v6 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
  v7 = (char *)a3 + v6[5];
  if (qword_2542464C0 != -1)
    swift_once();
  v8 = sub_23361D340();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_254244F58);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10(v7, v9, v8);
  *((_BYTE *)a3 + v6[7]) = 1;
  v11 = v6[8];
  if (qword_2542464E0 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_2542464C8);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)((char *)a3 + v11, v12, v8);
  *((_BYTE *)a3 + v6[9]) = 1;
  v14 = 0xD000000000000021;
  if ((a1 & 1) == 0)
    v14 = 0xD000000000000015;
  v15 = 0x800000023366F510;
  if ((a1 & 1) == 0)
    v15 = 0x800000023366F060;
  *a3 = v14;
  a3[1] = v15;
  v16 = (unint64_t *)((char *)a3 + v6[6]);
  v17 = 0xD000000000000029;
  if ((a2 & 1) == 0)
    v17 = 0xD00000000000001DLL;
  v18 = 0x800000023366F4C0;
  if ((a2 & 1) != 0)
    v18 = 0x800000023366F4E0;
  *v16 = v17;
  v16[1] = v18;
  return result;
}

uint64_t CoreDataStoreLocalConfiguration.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

char *initializeBufferWithCopyOfBuffer for CoreDataStoreConfiguration(char *a1, char *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D340();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for CoreDataStoreClientConfiguration(0);
      a1[*(int *)(v9 + 20)] = a2[*(int *)(v9 + 20)];
      *(_QWORD *)&a1[*(int *)(v9 + 24)] = *(_QWORD *)&a2[*(int *)(v9 + 24)];
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = *(_QWORD *)&a2[v11];
      v15 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = v14;
      *((_QWORD *)v12 + 1) = v15;
      v16 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
      v17 = v16[5];
      v18 = &v12[v17];
      v19 = &v13[v17];
      swift_bridgeObjectRetain();
      v8(v18, v19, v7);
      v20 = v16[6];
      v21 = &v12[v20];
      v22 = &v13[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v12[v16[7]] = v13[v16[7]];
      v24 = v16[8];
      v25 = &v12[v24];
      v26 = &v13[v24];
      swift_bridgeObjectRetain();
      v8(v25, v26, v7);
      v12[v16[9]] = v13[v16[9]];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CoreDataStoreConfiguration(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23361D340();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v7(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for CoreDataStoreClientConfiguration(0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for CoreDataStoreCloudConfiguration(0);
    v7(v5 + *(int *)(v6 + 20), v3);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5 + *(int *)(v6 + 32), v3);
  }
}

uint64_t initializeWithCopy for CoreDataStoreConfiguration(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D340();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for CoreDataStoreClientConfiguration(0);
    *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
    *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
    v9 = (_QWORD *)(a1 + v8);
    v10 = a2 + v8;
    v11 = *(_QWORD *)(a2 + v8);
    v12 = *(_QWORD *)(v10 + 8);
    *v9 = v11;
    v9[1] = v12;
    v13 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
    v14 = v13[5];
    v15 = (char *)v9 + v14;
    v16 = v10 + v14;
    swift_bridgeObjectRetain();
    v6((uint64_t)v15, v16, v5);
    v17 = v13[6];
    v18 = (_QWORD *)((char *)v9 + v17);
    v19 = (_QWORD *)(v10 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)v9 + v13[7]) = *(_BYTE *)(v10 + v13[7]);
    v21 = v13[8];
    v22 = (char *)v9 + v21;
    v23 = v10 + v21;
    swift_bridgeObjectRetain();
    v6((uint64_t)v22, v23, v5);
    *((_BYTE *)v9 + v13[9]) = *(_BYTE *)(v10 + v13[9]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CoreDataStoreConfiguration(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_23326DCBC(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D340();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for CoreDataStoreClientConfiguration(0);
      *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
      *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
      v9 = (_QWORD *)(a1 + v8);
      v10 = a2 + v8;
      *v9 = *(_QWORD *)(a2 + v8);
      v9[1] = *(_QWORD *)(a2 + v8 + 8);
      v11 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
      v12 = v11[5];
      v13 = (char *)v9 + v12;
      v14 = v10 + v12;
      swift_bridgeObjectRetain();
      v6((uint64_t)v13, v14, v5);
      v15 = v11[6];
      v16 = (_QWORD *)((char *)v9 + v15);
      v17 = (_QWORD *)(v10 + v15);
      *v16 = *v17;
      v16[1] = v17[1];
      *((_BYTE *)v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
      v18 = v11[8];
      v19 = (char *)v9 + v18;
      v20 = v10 + v18;
      swift_bridgeObjectRetain();
      v6((uint64_t)v19, v20, v5);
      *((_BYTE *)v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23326DCBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CoreDataStoreConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CoreDataStoreConfiguration(uint64_t a1)
{
  return sub_233177414(a1, qword_2542484A8);
}

uint64_t initializeWithTake for CoreDataStoreConfiguration(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D340();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for CoreDataStoreClientConfiguration(0);
    *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
    *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  }
  else
  {
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
    v11 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
    v6(v9 + v11[5], v10 + v11[5], v5);
    *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
    *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
    v6(v9 + v11[8], v10 + v11[8], v5);
    *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for CoreDataStoreConfiguration(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;

  if (a1 != a2)
  {
    sub_23326DCBC(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D340();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for CoreDataStoreClientConfiguration(0);
      *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
      *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
    }
    else
    {
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254244FE8) + 48);
      v9 = a1 + v8;
      v10 = a2 + v8;
      *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
      v11 = (int *)type metadata accessor for CoreDataStoreCloudConfiguration(0);
      v6(v9 + v11[5], v10 + v11[5], v5);
      *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
      *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
      v6(v9 + v11[8], v10 + v11[8], v5);
      *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23326DF74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[6];

  v0 = sub_23361D340();
  if (v1 <= 0x3F)
  {
    v2 = type metadata accessor for CoreDataStoreCloudConfiguration(319);
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v7[4] = v7;
      v4 = type metadata accessor for CoreDataStoreClientConfiguration(319);
      v0 = v4;
      if (v5 <= 0x3F)
      {
        v7[5] = *(_QWORD *)(v4 - 8) + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for CoreDataStoreClientConfiguration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CoreDataStoreClientConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreDataStoreClientConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreDataStoreClientConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CoreDataStoreClientConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for CoreDataStoreClientConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataStoreClientConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326E2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDataStoreClientConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326E34C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361D340();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23326E3C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CoreDataStoreCloudConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361D340();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *((_BYTE *)a2 + v14);
    *v15 = v18;
    v15[1] = v17;
    *((_BYTE *)v4 + v14) = (_BYTE)v16;
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    v12(v20, v21, v11);
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return v4;
}

uint64_t destroy for CoreDataStoreCloudConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D340();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 32), v5);
}

_QWORD *initializeWithCopy for CoreDataStoreCloudConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D340();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v17 = *v15;
  v16 = v15[1];
  LOBYTE(v15) = *((_BYTE *)a2 + v13);
  *v14 = v17;
  v14[1] = v16;
  *((_BYTE *)a1 + v13) = (_BYTE)v15;
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  v11(v19, v20, v10);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithCopy for CoreDataStoreCloudConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v10((char *)a1 + a3[8], (char *)a2 + a3[8], v9);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for CoreDataStoreCloudConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v10((char *)a1 + a3[8], (char *)a2 + a3[8], v9);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for CoreDataStoreCloudConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D340();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v11((char *)a1 + v17, (char *)a2 + v17, v10);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataStoreCloudConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326E8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CoreDataStoreCloudConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326E974(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23326E9E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CoreDataStoreLocalConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CoreDataStoreLocalConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CoreDataStoreLocalConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CoreDataStoreLocalConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CoreDataStoreLocalConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CoreDataStoreLocalConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDataStoreLocalConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326EBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoreDataStoreLocalConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23326EC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CoreDataStoreLocalConfiguration(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254248600);
}

uint64_t sub_23326EC94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23326ECFC(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  __int16 v5;
  __int16 v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_233273C4C(0, v2, 0);
    result = v9;
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_233273C4C(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_WORD *)(result + 2 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

BOOL static ManagedTransactionImporterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ManagedTransactionImporterError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedTransactionImporterError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23326EE3C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    type metadata accessor for ManagedApplePayTransactionInsightImporter();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_23326EE8C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    type metadata accessor for ManagedBankMerchantInformationInsightImporter();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 24) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

_QWORD *sub_23326EEDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD **)(v0 + 32);
  }
  else
  {
    v2 = type metadata accessor for CoreAnalyticsProvider();
    v3 = swift_allocObject();
    type metadata accessor for ManagedMapsTransactionInsightImporter();
    v1 = (_QWORD *)swift_allocObject();
    v1[8] = v2;
    v1[9] = &protocol witness table for CoreAnalyticsProvider;
    v1[2] = 0;
    v1[3] = 0;
    v1[4] = &unk_250468EB0;
    v1[5] = v3;
    *(_QWORD *)(v0 + 32) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_23326EF6C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    type metadata accessor for ManagedContactTransactionInsightImporter();
    v1 = swift_allocObject();
    *(_QWORD *)(v0 + 40) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

double ManagedTransactionImporter.__allocating_init()()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

double ManagedTransactionImporter.init()()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

uint64_t ManagedTransactionImporter.insertOrUpdateTransactions(_:with:context:)(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  os_signpost_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[12];
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[160];
  uint64_t v83[20];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;

  v67 = a3;
  v64 = type metadata accessor for RawBankConnectData.Transaction(0);
  v61 = *(uint64_t **)(v64 - 8);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v62 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v59 - v7;
  v9 = sub_23361DAFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v59 - v14;
  v16 = *a2;
  v68 = a2[1];
  v69 = v16;
  v66 = a2[2];
  v63 = a2[3];
  if (qword_256041CD0 != -1)
    swift_once();
  v65 = (uint64_t *)v8;
  v17 = sub_23361DB20();
  __swift_project_value_buffer(v17, (uint64_t)qword_2560CD318);
  sub_23361DAF0();
  v18 = sub_23361DB08();
  v19 = sub_23361E8B8();
  if ((sub_23361EB88() & 1) != 0)
  {
    v59 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v59(v13, v15, v9);
    v20 = (uint8_t *)swift_slowAlloc();
    v60 = a1;
    v21 = v20;
    *(_WORD *)v20 = 0;
    v22 = sub_23361DAE4();
    v23 = v19;
    v24 = v10;
    _os_signpost_emit_with_name_impl(&dword_233151000, v18, v23, v22, "InsertOrUpdateTransactions", "", v21, 2u);
    v25 = v21;
    a1 = v60;
    MEMORY[0x234934590](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v59(v13, v15, v9);
  }
  else
  {

    v24 = v10;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  }
  sub_23361DB50();
  v26 = swift_allocObject();
  v27 = sub_23361DB44();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v9);
  *(_QWORD *)&v84 = v69;
  *((_QWORD *)&v84 + 1) = v68;
  *(_QWORD *)&v85 = v66;
  *((_QWORD *)&v85 + 1) = v63;
  v28 = v95;
  v29 = sub_233270138((uint64_t)&v84);
  if (v28)
  {
    sub_23326F750("InsertOrUpdateTransactions", 26, 2);
    swift_release();
    return v26;
  }
  v30 = v29;
  v95 = 0;
  v26 = MEMORY[0x24BEE4AF8];
  v94 = MEMORY[0x24BEE4AF8];
  v31 = a1;
  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
    goto LABEL_29;
  v59 = (void (*)(char *, char *, uint64_t))v27;
  v66 = type metadata accessor for ManagedInternalTransaction();
  v33 = v31 + ((*((unsigned __int8 *)v61 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v61 + 80));
  v63 = v61[9];
  v60 = v31;
  v61 = &v71;
  swift_bridgeObjectRetain();
  v69 = v32 - 1;
  v34 = v65;
  while (1)
  {
    v68 = v33;
    sub_2332702E0(v33, (uint64_t)v34);
    v36 = *v34;
    v35 = v34[1];
    swift_bridgeObjectRetain();
    v37 = objc_msgSend(v30, sel_accountId);
    v38 = sub_23361E150();
    v40 = v39;

    v41 = v30;
    v42 = objc_msgSend(v30, sel_institutionId);
    v43 = sub_23361E150();
    v45 = v44;

    *(_QWORD *)&v84 = v36;
    *((_QWORD *)&v84 + 1) = v35;
    *(_QWORD *)&v85 = v38;
    *((_QWORD *)&v85 + 1) = v40;
    *(_QWORD *)&v86 = v43;
    *((_QWORD *)&v86 + 1) = v45;
    v46 = v67;
    v47 = v95;
    v48 = static ManagedInternalTransaction.existingTransaction(with:in:)((uint64_t *)&v84);
    v95 = v47;
    if (v47)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v65, type metadata accessor for RawBankConnectData.Transaction);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    v49 = (void *)v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v49)
    {
      v50 = v49;
      v34 = v65;
      _s10FinanceKit26ManagedInternalTransactionC6update_07withRawE0yAC_AA0H15BankConnectDataO0E0VtFZ_0(v50, (uint64_t)v65);

      v30 = v41;
    }
    else
    {
      v34 = v65;
      v51 = v62;
      sub_2332702E0((uint64_t)v65, v62);
      v30 = v41;
      v50 = ManagedInternalTransaction.__allocating_init(_:for:context:)(v51, v41, v46);
    }
    sub_233270324((uint64_t)v34 + *(int *)(v64 + 64), (uint64_t)v83);
    sub_233270324((uint64_t)v83, (uint64_t)&v84);
    if (sub_23327036C((uint64_t)&v84) == 1)
      goto LABEL_22;
    sub_233270324((uint64_t)v83, (uint64_t)v82);
    sub_233270390((uint64_t)v82);
    sub_23326EE8C();
    v78 = v90;
    v79 = v91;
    v80 = v92;
    v81 = v93;
    v74 = v86;
    v75 = v87;
    v76 = v88;
    v77 = v89;
    v72 = v84;
    v73 = v85;
    memset(v70, 0, 88);
    v70[11] = 1;
    v52 = v61;
    *(_OWORD *)v61 = 0u;
    *((_OWORD *)v52 + 1) = 0u;
    *((_OWORD *)v52 + 2) = 0u;
    *((_OWORD *)v52 + 3) = 0u;
    if (!_s10FinanceKit18RawBankConnectDataO11TransactionV19MerchantInformationV2eeoiySbAG_AGtFZ_0(&v72, v70))
    {
      v53 = v95;
      v54 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(v46);
      v95 = v53;
      if (!v53)
      {
        v55 = v54;
        v56 = objc_msgSend(v54, sel_bankMerchantInformationInsightObject);
        if (!v56)
        {
          type metadata accessor for ManagedBankMerchantInformationInsight();
          v56 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v46);
          objc_msgSend(v55, sel_setBankMerchantInformationInsightObject_, v56);
        }

        v78 = v90;
        v79 = v91;
        v80 = v92;
        v81 = v93;
        v74 = v86;
        v75 = v87;
        v76 = v88;
        v77 = v89;
        v72 = v84;
        v73 = v85;
        sub_23356A890(v56, (uint64_t *)&v72, v50);
        swift_release();

        goto LABEL_21;
      }

      swift_release();
      sub_233168500((uint64_t)v34, type metadata accessor for RawBankConnectData.Transaction);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2332704B8(v83);
LABEL_27:
      v26 = (uint64_t)v59;
      sub_23326F750("InsertOrUpdateTransactions", 26, 2);
      swift_release();
      return v26;
    }
    swift_release();
LABEL_21:
    sub_2332704B8(v83);
LABEL_22:
    v57 = v50;
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();

    sub_233168500((uint64_t)v34, type metadata accessor for RawBankConnectData.Transaction);
    if (!v69)
      break;
    v33 = v68 + v63;
    --v69;
  }
  swift_bridgeObjectRelease();
  v26 = v94;
LABEL_29:
  objc_msgSend(v30, sel_setEarliestTransactionsRequestStartDate_, 0);

  sub_23326F750("InsertOrUpdateTransactions", 26, 2);
  swift_release();
  return v26;
}

uint64_t sub_23326F750(const char *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t result;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  char v25;

  v23 = a3;
  v24 = (char *)a1;
  v3 = sub_23361DB2C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361DAFC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v21 - v12;
  if (qword_256041CD0 != -1)
    swift_once();
  v14 = sub_23361DB20();
  __swift_project_value_buffer(v14, (uint64_t)qword_2560CD318);
  v15 = sub_23361DB08();
  sub_23361DB38();
  v22 = sub_23361E8AC();
  result = sub_23361EB88();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v23 & 1) == 0)
  {
    if (!v24)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v24 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (v24 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v24 = &v25;
LABEL_12:
  swift_retain();
  sub_23361DB5C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x24BEE7810])
  {
    v17 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v17 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v18 = 0;
  v19 = sub_23361DAE4();
  _os_signpost_emit_with_name_impl(&dword_233151000, v15, (os_signpost_type_t)v22, v19, v24, v17, v18, 2u);
  MEMORY[0x234934590](v18, -1, -1);

  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v20)(v11, v7);
}

void ManagedTransactionImporter.cleanUpMissingBankConnectTransactions(fullyQualifiedAccountIdentifier:seenTransactionIDs:transactionStatuses:dateInterval:context:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  sub_2332708FC(a1, a2, a3, a4, a5);
}

uint64_t ManagedTransactionImporter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ManagedTransactionImporter.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

id ManagedTransactionImporter.insertOrUpdateTransaction(account:appleTransaction:context:)(id a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v29[8];

  type metadata accessor for ManagedInternalTransaction();
  v27 = a2;
  v5 = objc_msgSend(a2, sel_transactionId);
  v6 = sub_23361E150();
  v8 = v7;

  v9 = objc_msgSend(a1, sel_accountId);
  v10 = sub_23361E150();
  v12 = v11;

  v13 = objc_msgSend(a1, sel_institutionId);
  v14 = sub_23361E150();
  v16 = v15;

  v29[0] = v6;
  v29[1] = v8;
  v29[2] = v10;
  v29[3] = v12;
  v29[4] = v14;
  v29[5] = v16;
  v17 = v29[7];
  v18 = static ManagedInternalTransaction.existingTransaction(with:in:)(v29);
  if (!v17)
  {
    v20 = (void *)v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20)
    {
      a1 = v20;
      _s10FinanceKit26ManagedInternalTransactionC6update_011withPaymentE026shouldUpdateRelatedObjectsyAC_So09FKPaymentE0CSbtFZ_0(a1, v27, 1);
      v21 = objc_msgSend(v27, sel_insights);
      if (!v21)
      {

        return a1;
      }
      v22 = v21;
      sub_23326FDE0(v21, a1, a3);

    }
    else
    {
      v23 = v27;
      v24 = a1;
      v25 = a3;
      a1 = ManagedInternalTransaction.__allocating_init(_:for:context:)(v23, v24, v25);
      v26 = objc_msgSend(v23, sel_insights);
      if (!v26)
        return a1;
      v22 = v26;
      sub_23326FDE0(v26, a1, v25);
    }

    return a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *ManagedTransactionImporter.updateTransaction(_:using:context:)(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;

  _s10FinanceKit26ManagedInternalTransactionC6update_011withPaymentE026shouldUpdateRelatedObjectsyAC_So09FKPaymentE0CSbtFZ_0(a1, a2, 1);
  v7 = objc_msgSend(a2, sel_insights);
  if (!v7 || (v8 = v7, sub_23326FDE0(v7, a1, a3), v8, !v3))
    v9 = a1;
  return a1;
}

id ManagedTransactionImporter.insertTransaction(_:account:context:)(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;

  type metadata accessor for ManagedInternalTransaction();
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = ManagedInternalTransaction.__allocating_init(_:for:context:)(v7, v8, v9);
  v11 = objc_msgSend(v7, sel_insights);
  if (v11)
  {
    v12 = v11;
    sub_23326FDE0(v11, v10, v9);
    if (v3)

  }
  return v10;
}

id sub_23326FDE0(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id result;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;

  v7 = sub_23361D634();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MapsTransactionInsight(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_applePayInsight);
  v28 = a1;
  if (v13)
  {
    v14 = v13;
    sub_23326EE3C();
    v15 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(a3);
    if (v3)
    {

      return (id)swift_release();
    }
    v16 = v15;
    v31 = a2;
    v27 = a3;
    v17 = objc_msgSend(v15, sel_applePayInsightObject);
    if (!v17)
    {
      type metadata accessor for ManagedApplePayTransactionInsight();
      v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v17 = objc_msgSend(v18, sel_initWithContext_, v27);
      objc_msgSend(v16, sel_setApplePayInsightObject_, v17);
    }

    sub_23352FB68(v17, v14, v31);
    swift_release();

    a3 = v27;
    a1 = v28;
  }
  else
  {
    v31 = a2;
  }
  v19 = objc_msgSend(a1, sel_mapsInsight);
  if (v19)
  {
    v20 = v19;
    sub_23326EEDC();
    v21 = v20;
    MapsTransactionInsight.init(_:)(v21, v12);
    sub_23361D5F8();
    v22 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(a3);
    if (v3)
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
      return (id)sub_233168500((uint64_t)v12, type metadata accessor for MapsTransactionInsight);
    }
    v23 = v22;
    v24 = objc_msgSend(v22, sel_mapsInsightObject);
    if (!v24)
    {
      type metadata accessor for ManagedMapsTransactionInsight();
      v24 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
      objc_msgSend(v23, sel_setMapsInsightObject_, v24);
    }

    sub_2332B2318(v24, (uint64_t)v12, v31, (uint64_t)v9, a3);
    swift_release();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    sub_233168500((uint64_t)v12, type metadata accessor for MapsTransactionInsight);
    a1 = v28;
  }
  result = objc_msgSend(a1, sel_contactInsight);
  if (result)
  {
    v26 = result;
    sub_23326EF6C();
    sub_2334294D4(v26, (uint64_t)v31, a3);

    return (id)swift_release();
  }
  return result;
}

char *sub_233270128()
{
  char v1;

  return &v1;
}

void *sub_233270138(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v13 = *(_OWORD *)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  type metadata accessor for ManagedInternalAccount();
  v14 = v13;
  v15 = v3;
  v16 = v4;
  v5 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v14);
  if (!v1)
  {
    v2 = v5;
    if (v5)
    {
      if (!objc_msgSend(v5, sel_isAccountEnabled))
      {
        if (qword_256041CA0 != -1)
          swift_once();
        v7 = sub_23361DB80();
        __swift_project_value_buffer(v7, (uint64_t)qword_2560495B0);
        v8 = sub_23361DB68();
        v9 = sub_23361E750();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v10 = 0;
          _os_log_impl(&dword_233151000, v8, v9, "Unable to update account, account is disabled", v10, 2u);
          MEMORY[0x234934590](v10, -1, -1);
        }

        sub_2332711E0();
        swift_allocError();
        *v11 = 1;
        swift_willThrow();

      }
    }
    else
    {
      sub_2332711E0();
      swift_allocError();
      *v12 = 0;
      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_2332702E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Transaction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233270324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23327036C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_233270390(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233270458(v4, v3);
  return a1;
}

uint64_t sub_233270458(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_2332704B8(uint64_t *a1)
{
  sub_233270518(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

void sub_233270518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2332705EC(a11, a12);
  }
}

uint64_t sub_2332705EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_23327064C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  __int128 v23;
  unsigned __int8 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_OWORD *)a1;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23362D290;
  v25 = v23;
  v26 = v11;
  v27 = v12;
  v14 = sub_23361CB84();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a4, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  v24 = 1;
  v16 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)&v25, 0, (uint64_t)v10, &v24);
  sub_2332711A0((uint64_t)v10);
  *(_QWORD *)(v13 + 32) = v16;
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v17 = swift_allocObject();
  v23 = xmmword_233623D60;
  *(_OWORD *)(v17 + 16) = xmmword_233623D60;
  *(_QWORD *)(v17 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
  *(_QWORD *)(v17 + 64) = sub_2331B1A14(&qword_2560459B8, (uint64_t *)&unk_2560578D0, MEMORY[0x24BDCFD00]);
  *(_QWORD *)(v17 + 32) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v13 + 40) = sub_23361E6B4();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v23;
  v19 = sub_23326ECFC(a3);
  *(_QWORD *)(v18 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449D0);
  *(_QWORD *)(v18 + 64) = sub_2331B1A14(&qword_256047478, &qword_2560449D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v13 + 48) = sub_23361E6B4();
  *(_QWORD *)&v25 = v13;
  sub_23361E408();
  v20 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v20);

  return v21;
}

void sub_2332708FC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v5;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  NSObject *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  objc_super v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v10 = *((_QWORD *)a1 + 2);
  v55 = *a1;
  v56 = v10;
  v11 = sub_233270138((uint64_t)&v55);
  if (!v5)
  {
    v12 = v11;
    type metadata accessor for ManagedInternalTransaction();
    v54.receiver = (id)swift_getObjCClassFromMetadata();
    v54.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
    v13 = objc_msgSendSuper2(&v54, sel_fetchRequest);
    v51 = a3;
    v14 = (void *)sub_23361E3D8();
    objc_msgSend(v13, sel_setRelationshipKeyPathsForPrefetching_, v14);

    objc_msgSend(v13, sel_setReturnsObjectsAsFaults_, 1);
    v15 = objc_msgSend(v12, sel_accountId);
    v16 = sub_23361E150();
    v18 = v17;

    v50 = v12;
    v19 = objc_msgSend(v12, sel_institutionId);
    v20 = a4;
    v21 = sub_23361E150();
    v23 = v22;

    *(_QWORD *)&v55 = v16;
    *((_QWORD *)&v55 + 1) = v18;
    v56 = v21;
    v57 = v23;
    v24 = sub_23327064C((uint64_t)&v55, a2, v51, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setPredicate_, v24);

    v25 = sub_23361E984();
    v26 = 0;
    v49 = v13;
    v27 = v25;
    v28 = (id *)(v25 >> 62);
    v53 = v25;
    if (v25 >> 62)
      goto LABEL_49;
    v29 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    v30 = a5;
    swift_bridgeObjectRetain();
    v31 = v50;
    while (v29)
    {
      if (v29 < 1)
      {
        __break(1u);
      }
      else
      {
        v32 = 0;
        v26 = v53 & 0xC000000000000001;
        v27 = (uint64_t)&selRef__initWithImage_;
        do
        {
          if (v26)
            v33 = (id)MEMORY[0x234933120](v32, v53);
          else
            v33 = *(id *)(v53 + 8 * v32 + 32);
          v34 = v33;
          ++v32;
          -[NSObject deleteObject:](a5, sel_deleteObject_, v33);

        }
        while (v29 != v32);
        v19 = (id)v53;
        swift_bridgeObjectRelease();

        if (qword_256041CA0 == -1)
          goto LABEL_13;
      }
      swift_once();
LABEL_13:
      v35 = sub_23361DB80();
      __swift_project_value_buffer(v35, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      a5 = sub_23361DB68();
      v36 = sub_23361E768();
      if (os_log_type_enabled(a5, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v37 = 134217984;
        if (v28)
        {
          v28 = (id *)v53;
          swift_bridgeObjectRetain();
          v38 = sub_23361EF30();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = (id *)v53;
          v38 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        *(_QWORD *)&v55 = v38;
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, a5, v36, "Not found %ld transactions in response.", v37, 0xCu);
        MEMORY[0x234934590](v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        v28 = (id *)v19;
      }
      v39 = 0;
      while (1)
      {
        if (v39 >= 5)
          goto LABEL_48;
        v40 = *((unsigned __int8 *)&unk_250468FD0 + v39 + 32);
        v52 = v39 + 1;
        v58 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        v41 = 4;
LABEL_26:
        a5 = (v41 - 4);
        v42 = v26 ? (id)MEMORY[0x234933120](v41 - 4, v28) : v28[v41];
        v43 = v42;
        v27 = v41 - 3;
        if (__OFADD__(a5, 1))
          break;
        v44 = objc_msgSend(v42, sel_publicTransactionObject);
        switch(objc_msgSend(v44, sel_statusValue))
        {
          case 0u:

            if (v40)
              goto LABEL_24;
            goto LABEL_38;
          case 1u:

            if (v40 == 1)
              goto LABEL_38;
            goto LABEL_24;
          case 2u:

            if (v40 == 2)
              goto LABEL_38;
            goto LABEL_24;
          case 3u:

            if (v40 == 3)
              goto LABEL_38;
            goto LABEL_24;
          case 4u:

            if (v40 == 4)
            {
LABEL_38:
              sub_23361EE4C();
              sub_23361EE7C();
              v28 = (id *)v53;
              sub_23361EE88();
              sub_23361EE58();
            }
            else
            {
LABEL_24:

            }
            ++v41;
            if (v27 != v29)
              goto LABEL_26;
            swift_bridgeObjectRelease();
            v45 = v58;
            swift_retain();
            a5 = sub_23361DB68();
            v46 = sub_23361E768();
            if (os_log_type_enabled(a5, v46))
            {
              v47 = swift_slowAlloc();
              *(_DWORD *)v47 = 134218240;
              v39 = v52;
              if (v45 < 0 || (v45 & 0x4000000000000000) != 0)
              {
                swift_bridgeObjectRetain();
                v27 = sub_23361EF30();
                swift_release();
              }
              else
              {
                v27 = *(_QWORD *)(v45 + 16);
              }
              swift_release();
              *(_QWORD *)(v47 + 4) = v27;
              swift_release();
              *(_WORD *)(v47 + 12) = 512;
              *(_WORD *)(v47 + 14) = v40;
              _os_log_impl(&dword_233151000, a5, v46, "Removing %ld transactions with\ntransaction status %hd", (uint8_t *)v47, 0x10u);
              MEMORY[0x234934590](v47, -1, -1);

              v28 = (id *)v53;
              if (v52 == 5)
              {
LABEL_46:
                swift_bridgeObjectRelease();

                return;
              }
            }
            else
            {

              swift_release_n();
              v39 = v52;
              if (v52 == 5)
                goto LABEL_46;
            }
            break;
          default:
            *(_QWORD *)&v55 = 0;
            *((_QWORD *)&v55 + 1) = 0xE000000000000000;
            sub_23361ED98();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v55 = 0xD000000000000025;
            *((_QWORD *)&v55 + 1) = 0x800000023366F7C0;
            objc_msgSend(v44, sel_statusValue);
            sub_23361F1D0();
            sub_23361E27C();
            swift_bridgeObjectRelease();
            sub_23361EF24();
            __break(1u);
            JUMPOUT(0x233271044);
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      if (v27 < 0)
        v19 = (id)v27;
      else
        v19 = (id)(v27 & 0xFFFFFFFFFFFFFF8);
      v48 = a5;
      swift_bridgeObjectRetain();
      v29 = sub_23361EF30();
      v31 = v50;
    }

    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_23327105C()
{
  unint64_t result;

  result = qword_256047468;
  if (!qword_256047468)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedTransactionImporterError, &type metadata for ManagedTransactionImporterError);
    atomic_store(result, (unint64_t *)&qword_256047468);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManagedTransactionImporterError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2332710EC + 4 * byte_233632E65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233271120 + 4 * asc_233632E60[v4]))();
}

uint64_t sub_233271120(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233271128(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233271130);
  return result;
}

uint64_t sub_23327113C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233271144);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233271148(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233271150(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedTransactionImporterError()
{
  return &type metadata for ManagedTransactionImporterError;
}

uint64_t type metadata accessor for ManagedTransactionImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedTransactionImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedTransactionImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_2332711A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2332711E0()
{
  unint64_t result;

  result = qword_256047480;
  if (!qword_256047480)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedTransactionImporterError, &type metadata for ManagedTransactionImporterError);
    atomic_store(result, (unint64_t *)&qword_256047480);
  }
  return result;
}

uint64_t ImageProcessingImplementation.backgroundColor(forImageWithData:)(uint64_t a1, uint64_t a2)
{
  CFDictionaryRef v2;
  CFDictionaryRef v3;
  uint64_t inited;
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_2331E5A64(a1, a2);
  if (!v2)
    return 0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560463D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  v5 = (void *)*MEMORY[0x24BDBF830];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF830];
  v6 = sub_233271454();
  v7 = v5;
  *(_QWORD *)(inited + 40) = sub_23361E9FC();
  v8 = (void *)*MEMORY[0x24BDBF818];
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = v8;
  v10 = sub_23361E9F0();
  *(_QWORD *)(inited + 104) = v6;
  *(_QWORD *)(inited + 80) = v10;
  v11 = sub_2331600D4(inited);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, v3);
  static ColorExtractor.backgroundColor(forImage:contextOptions:alwaysEstimateDominantColor:)(v12, v11, 0);
  v14 = v13;

  swift_bridgeObjectRelease();
  return v14;
}

uint64_t ImageProcessingImplementation.renderThumbnail(with:size:scale:options:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  void *v12;
  CFMutableDataRef v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 10);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  v14 = *(_QWORD *)a2;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  result = sub_23357B9A4(a1, &v14, a3, a4, a5);
  if (!v5)
  {
    v12 = (void *)result;
    v13 = CGImageRef.pngData.getter();

    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_2332713B8(uint64_t a1, uint64_t a2)
{
  return ImageProcessingImplementation.backgroundColor(forImageWithData:)(a1, a2);
}

uint64_t sub_2332713CC(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  void *v12;
  CFMutableDataRef v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 10);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  v14 = *(_QWORD *)a2;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  result = sub_23357B9A4(a1, &v14, a3, a4, a5);
  if (!v5)
  {
    v12 = (void *)result;
    v13 = CGImageRef.pngData.getter();

    return (uint64_t)v13;
  }
  return result;
}

unint64_t sub_233271454()
{
  unint64_t result;

  result = qword_254248750;
  if (!qword_254248750)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254248750);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageProcessingImplementation()
{
  return &type metadata for ImageProcessingImplementation;
}

uint64_t sub_2332714A0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2332714C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id BankConnectMessagesManager.__allocating_init(userDefaults:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_233277754(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

void sub_233271530()
{
  __asm { BR              X10 }
}

unint64_t sub_233271564()
{
  sub_23361ED98();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0xD000000000000016;
}

uint64_t BankConnectMessage.hash(into:)()
{
  sub_233271530();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t BankConnectMessage.hashValue.getter()
{
  sub_23361F350();
  sub_233271530();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233271798()
{
  sub_23361F350();
  sub_233271530();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23327180C()
{
  sub_233271530();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233271864()
{
  sub_23361F350();
  sub_233271530();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

id BankConnectMessagesManager.init(userDefaults:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_23327752C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

void sub_233271974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  int64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  os_log_type_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;

  v2 = v1;
  if (qword_256041CA0 != -1)
    swift_once();
  v4 = sub_23361DB80();
  __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v5 = sub_23361DB68();
  v6 = sub_23361E780();
  if (!os_log_type_enabled(v5, v6))
  {

    swift_bridgeObjectRelease_n();
    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
      return;
    goto LABEL_13;
  }
  v7 = (uint8_t *)swift_slowAlloc();
  v31 = swift_slowAlloc();
  v33 = v31;
  *(_DWORD *)v7 = 136315138;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v29 = v6;
    v30 = v5;
    v32 = MEMORY[0x24BEE4AF8];
    sub_23327399C(0, v8, 0);
    v9 = v32;
    v10 = (_BYTE *)(a1 + 48);
    do
    {
      v11 = *v10;
      v34 = *((_OWORD *)v10 - 1);
      v35 = v11;
      sub_233271530();
      v13 = v12;
      v15 = v14;
      v17 = *(_QWORD *)(v32 + 16);
      v16 = *(_QWORD *)(v32 + 24);
      if (v17 >= v16 >> 1)
        sub_23327399C(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v32 + 16) = v17 + 1;
      v18 = v32 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      v10 += 24;
      --v8;
    }
    while (v8);
    v5 = v30;
    v2 = v1;
    v6 = v29;
  }
  v20 = MEMORY[0x234932760](v9, MEMORY[0x24BEE0D00]);
  v22 = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v34 = sub_233164DCC(v20, v22, &v33);
  sub_23361EBC4();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_233151000, v5, v6, "Reseting message state for: %s", v7, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x234934590](v31, -1, -1);
  MEMORY[0x234934590](v7, -1, -1);

  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
LABEL_13:
    v23 = (_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults);
    swift_bridgeObjectRetain();
    v24 = (_BYTE *)(a1 + 48);
    do
    {
      v25 = *((_QWORD *)v24 - 2);
      v26 = *((_QWORD *)v24 - 1);
      v27 = *v24;
      v24 += 24;
      v28 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v23[3]);
      *(_QWORD *)&v34 = v25;
      *((_QWORD *)&v34 + 1) = v26;
      v35 = v27;
      sub_233271530();
      (*(void (**)(void))(v28 + 32))();
      swift_bridgeObjectRelease();
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_233271C68(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[2];
  unsigned __int8 v21;
  _QWORD v22[2];
  unsigned __int8 v23;
  uint64_t v24;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  sub_2332777EC(v3, v4, v5);
  sub_2332777EC(v3, v4, v5);
  v7 = sub_23361DB68();
  v8 = sub_23361E780();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v22[0] = v3;
    v22[1] = v4;
    v23 = v5;
    sub_233271530();
    v22[0] = sub_233164DCC(v11, v12, v20);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233277804(v3, v4, v5);
    sub_233277804(v3, v4, v5);
    *(_WORD *)(v9 + 12) = 1024;
    v13 = a1;
    LODWORD(v22[0]) = a1 & 1;
    sub_23361EBC4();
    _os_log_impl(&dword_233151000, v7, v8, "Setting the dismissal state of %s to %{BOOL}d.", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {
    sub_233277804(v3, v4, v5);
    sub_233277804(v3, v4, v5);

    v13 = a1;
  }
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 24);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults), v14);
  v24 = MEMORY[0x24BEE1328];
  LOBYTE(v22[0]) = v13 & 1;
  v20[0] = v3;
  v20[1] = v4;
  v21 = v5;
  sub_233271530();
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v22, v16, v17, v14, v15);
  swift_bridgeObjectRelease();
  return sub_233168608((uint64_t)v22, &qword_254245020);
}

uint64_t sub_233271F0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults), *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 24));
  sub_233271530();
  v2 = (*(uint64_t (**)(void))(v1 + 24))();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void BankConnectMessagesManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectMessagesManager.__deallocating_deinit()
{
  return sub_233272F60(type metadata accessor for BankConnectMessagesManager);
}

void sub_233272014(uint64_t a1)
{
  sub_233271974(a1);
}

uint64_t sub_233272034(char a1, uint64_t a2)
{
  return sub_233271C68(a1, a2);
}

uint64_t sub_233272054()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults), *(_QWORD *)(*v0 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 24));
  sub_233271530();
  v2 = (*(uint64_t (**)(void))(v1 + 24))();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

id static BankConnectMessagesManager.makeManager()()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;
  _QWORD v7[5];

  if (qword_254247678 != -1)
    swift_once();
  v0 = (void *)qword_254247670;
  v1 = (objc_class *)type metadata accessor for BankConnectMessagesManager();
  v2 = objc_allocWithZone(v1);
  v7[3] = sub_23327783C();
  v7[4] = &protocol witness table for NSUserDefaults;
  v7[0] = v0;
  sub_233177068((uint64_t)v7, (uint64_t)v2 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults);
  v6.receiver = v2;
  v6.super_class = v1;
  v3 = v0;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);

  return v4;
}

Swift::Void __swiftcall BankConnectMessagesManager.resetMessages(for:)(Swift::String a1)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  if (qword_254247048 != -1)
    swift_once();
  v4 = *(void **)(*((_QWORD *)off_254247040 + 2) + 16);
  swift_retain();
  v5 = objc_msgSend(v4, sel_newBackgroundContext);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v1;
  v6[3] = countAndFlagsBits;
  v6[4] = object;
  v6[5] = v5;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2332778AC;
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = sub_2331683B0;
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_2332714C0;
  v11[3] = &block_descriptor_4;
  v8 = _Block_copy(v11);
  v9 = v1;
  swift_bridgeObjectRetain();
  v10 = v5;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWait_, v8);
  swift_release();

  _Block_release(v8);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v10 & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall BankConnectMessagesManager.resetMessages(for:context:)(Swift::String a1, NSManagedObjectContext context)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = countAndFlagsBits;
  *(_QWORD *)(inited + 40) = object;
  *(_BYTE *)(inited + 48) = 0;
  type metadata accessor for ManagedInternalAccount();
  swift_bridgeObjectRetain();
  v6 = (void *)static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(countAndFlagsBits, (uint64_t)object, (uint64_t)context.super.isa);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_accountId);
    v9 = sub_23361E150();
    v11 = v10;

    swift_bridgeObjectRetain_n();
    inited = (uint64_t)sub_2334A4CBC((_QWORD *)1, 6, 1, (_QWORD *)inited);
    v12 = *(_QWORD *)(inited + 16);
    v13 = *(_QWORD *)(inited + 24);
    v14 = v12 + 1;
    swift_bridgeObjectRetain();
    if (v12 >= v13 >> 1)
      inited = (uint64_t)sub_2334A4CBC((_QWORD *)(v13 > 1), v12 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v14;
    v15 = inited + 24 * v12;
    *(_QWORD *)(v15 + 32) = v9;
    *(_QWORD *)(v15 + 40) = v11;
    *(_BYTE *)(v15 + 48) = 1;
    v16 = *(_QWORD *)(inited + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v16 >> 1)
      inited = (uint64_t)sub_2334A4CBC((_QWORD *)(v16 > 1), v12 + 2, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v12 + 2;
    v17 = inited + 24 * v14;
    *(_QWORD *)(v17 + 32) = v9;
    *(_QWORD *)(v17 + 40) = v11;
    *(_BYTE *)(v17 + 48) = 2;
    v18 = *(_QWORD *)(inited + 16);
    v19 = *(_QWORD *)(inited + 24);
    v20 = v18 + 1;
    swift_bridgeObjectRetain();
    if (v18 >= v19 >> 1)
      inited = (uint64_t)sub_2334A4CBC((_QWORD *)(v19 > 1), v18 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v20;
    v21 = inited + 24 * v18;
    *(_QWORD *)(v21 + 32) = v9;
    *(_QWORD *)(v21 + 40) = v11;
    *(_BYTE *)(v21 + 48) = 3;
    v22 = *(_QWORD *)(inited + 24);
    v23 = v18 + 2;
    swift_bridgeObjectRetain();
    if (v20 >= v22 >> 1)
      inited = (uint64_t)sub_2334A4CBC((_QWORD *)(v22 > 1), v23, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v23;
    v24 = inited + 24 * v20;
    *(_QWORD *)(v24 + 32) = v9;
    *(_QWORD *)(v24 + 40) = v11;
    *(_BYTE *)(v24 + 48) = 4;
    v25 = *(_QWORD *)(inited + 16);
    v26 = *(_QWORD *)(inited + 24);
    swift_bridgeObjectRetain();
    if (v25 >= v26 >> 1)
      inited = (uint64_t)sub_2334A4CBC((_QWORD *)(v26 > 1), v25 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v25 + 1;
    v27 = inited + 24 * v25;
    *(_QWORD *)(v27 + 32) = v9;
    *(_QWORD *)(v27 + 40) = v11;
    *(_BYTE *)(v27 + 48) = 5;
    swift_bridgeObjectRelease_n();
  }
  sub_233271974(inited);
  swift_bridgeObjectRelease();

}

uint64_t BankConnectMessagesManager.setIsDismissed(_:for:with:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _QWORD v6[2];
  char v7;

  if (a2)
  {
    result = sub_23361EF24();
    __break(1u);
  }
  else
  {
    v6[0] = a3;
    v6[1] = a4;
    v7 = 0;
    swift_bridgeObjectRetain();
    sub_233271C68(a1 & 1, (uint64_t)v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  uint64_t result;
  _QWORD v6[2];
  char v7;

  if ((unint64_t)(a2 - 1) >= 5)
  {
    result = sub_23361EF24();
    __break(1u);
  }
  else
  {
    v6[0] = a3;
    v6[1] = a4;
    v7 = 0x503020104uLL >> (8 * (a2 - 1));
    swift_bridgeObjectRetain();
    sub_233271C68(a1 & 1, (uint64_t)v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t BankConnectMessagesManager.isPassMessageDismissed(_:for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  if (a1)
  {
    result = sub_23361EF24();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 24);
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults), v2);
    swift_bridgeObjectRetain_n();
    sub_23361ED98();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    v4 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 24))(0xD000000000000016, 0x800000023366F900, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  return result;
}

uint64_t BankConnectMessagesManager.isAccountMessageDismissed(_:for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  if ((unint64_t)(a1 - 1) >= 5)
  {
    result = sub_23361EF24();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit26BankConnectMessagesManager_userDefaults + 24));
    swift_bridgeObjectRetain();
    sub_233271530();
    v3 = (*(uint64_t (**)(void))(v2 + 24))();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
  return result;
}

uint64_t sub_233272C4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = sub_23361E150();
  v10 = v9;
  v11 = a1;
  LOBYTE(a5) = a5(a3, v8, v10);

  swift_bridgeObjectRelease();
  return a5 & 1;
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.fqaid.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_fqaid);
}

uint64_t BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.sequenceNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_sequenceNumber);
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.__allocating_init(fqaid:sequenceNumber:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_fqaid] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_sequenceNumber] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.init(fqaid:sequenceNumber:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_fqaid] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_sequenceNumber] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken();
  return objc_msgSendSuper2(&v4, sel_init);
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken.__deallocating_deinit()
{
  return sub_233272F60(type metadata accessor for BankConnectMessagesManager.BackgroundRefreshConfirmationPromptToken);
}

uint64_t BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision.shouldShowPrompt.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BackgroundRefreshConfirmationPromptDecision_shouldShowPrompt);
}

void *BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision.token.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___BackgroundRefreshConfirmationPromptDecision_token);
  v2 = v1;
  return v1;
}

void BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision.__deallocating_deinit()
{
  return sub_233272F60(type metadata accessor for BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision);
}

id sub_233272F60(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t BankConnectMessagesManager.shouldDisplayBackgroundRefreshConfirmationMessage(fullyQualifiedAccountIdentifier:now:)()
{
  void *v0;
  id v1;
  uint64_t v3;

  if (qword_254247048 != -1)
    swift_once();
  v0 = *(void **)(*((_QWORD *)off_254247040 + 2) + 16);
  swift_retain();
  v1 = objc_msgSend(v0, sel_newBackgroundContext);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for BankConnectMessagesManager.BackgroundRefreshConfirmationPromptDecision();
  sub_23361E960();

  swift_release();
  return v3;
}

void BankConnectMessagesManager.dismissBackgroundRefreshConfirmationMessage(token:)()
{
  void *v0;
  id v1;

  if (qword_254247048 != -1)
    swift_once();
  v0 = *(void **)(*((_QWORD *)off_254247040 + 2) + 16);
  swift_retain();
  v1 = objc_msgSend(v0, sel_newBackgroundContext);
  BankConnectMessagesManager.dismissBackgroundRefreshConfirmationMessage(token:context:)();
  swift_release();

}

uint64_t BankConnectMessagesManager.dismissBackgroundRefreshConfirmationMessage(token:context:)()
{
  return sub_23361E960();
}

void sub_233273574(char *a1, void *a2)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  os_log_type_t type;
  NSObject *log;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v5 = *(id *)&a1[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_fqaid];
  v6 = objc_msgSend(v5, sel_accountID);
  v7 = sub_23361E150();
  v9 = v8;

  v10 = objc_msgSend(v5, sel_institutionID);
  v11 = sub_23361E150();
  v13 = v12;

  type metadata accessor for ManagedConsent();
  *(_QWORD *)&v31 = v7;
  *((_QWORD *)&v31 + 1) = v9;
  v32 = v11;
  v33 = v13;
  v14 = static ManagedConsent.existingConsent(grantingAccessTo:in:)(&v31, (uint64_t)a2);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v15 = (void *)v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v16, sel_backgroundRefreshConfirmationSequenceNumber);
    if (*(id *)&a1[OBJC_IVAR___BackgroundRefreshConfirmationPromptToken_sequenceNumber] == v17)
    {
      v18 = v17;
      objc_msgSend(v16, sel_setBackgroundRefreshConfirmationPromptDismissalSequenceNumber_, v17);
      *(_QWORD *)&v31 = 0;
      if (objc_msgSend(a2, sel_save_, &v31))
      {
        v19 = qword_256041CA0;
        v20 = (id)v31;
        if (v19 != -1)
          swift_once();
        v21 = sub_23361DB80();
        __swift_project_value_buffer(v21, (uint64_t)qword_2560495B0);
        v22 = a1;
        v23 = sub_23361DB68();
        v24 = sub_23361E780();
        log = v23;
        if (!os_log_type_enabled(v23, v24))
        {

          return;
        }
        type = v24;
        v25 = swift_slowAlloc();
        v26 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v25 = 138412546;
        *(_QWORD *)&v31 = v5;
        v27 = v5;
        sub_23361EBC4();
        *v26 = v5;

        *(_WORD *)(v25 + 12) = 2048;
        *(_QWORD *)&v31 = v18;
        sub_23361EBC4();

        _os_log_impl(&dword_233151000, log, type, "    Successfully dismissed the background refresh confirmation message for     %@ with token sequence number: %lld.", (uint8_t *)v25, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
        swift_arrayDestroy();
        MEMORY[0x234934590](v26, -1, -1);
        MEMORY[0x234934590](v25, -1, -1);

      }
      else
      {
        v28 = (id)v31;
        sub_23361D1B4();

        swift_willThrow();
      }
    }

  }
}

uint64_t sub_2332738EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256042208, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  *v3 = result;
  return result;
}

uint64_t sub_233273918(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047550, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_233273944(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047780, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
  *v3 = result;
  return result;
}

uint64_t sub_233273970(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560476B8, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  *v3 = result;
  return result;
}

uint64_t sub_23327399C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233274470(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2332739B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2332745D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2332739D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23327643C(a1, a2, a3, *v3, &qword_256047788);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2332739F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2332756FC(a1, a2, a3, (_QWORD *)*v3, &qword_2542465E0, &qword_256047700);
  *v3 = result;
  return result;
}

uint64_t sub_233273A24(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233274734(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273A40(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23327489C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273A5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2332768E4(a1, a2, a3, (_QWORD *)*v3, &qword_256047758, &qword_256047760);
  *v3 = result;
  return result;
}

uint64_t sub_233273A88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047770, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionIdentityWrapper);
  *v3 = result;
  return result;
}

uint64_t sub_233273AB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047768, (uint64_t (*)(_QWORD))MEMORY[0x24BDC7920]);
  *v3 = result;
  return result;
}

uint64_t sub_233273AE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233274A1C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273AFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047748, (uint64_t (*)(_QWORD))type metadata accessor for PIIRedactionRegex);
  *v3 = result;
  return result;
}

uint64_t sub_233273B28(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233276764(a1, a2, a3, *v3, &qword_2560476A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273B54(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233274BA0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273B70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047540, type metadata accessor for InternalTransaction);
  *v3 = result;
  return result;
}

uint64_t sub_233273B9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233274D20(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_233273BB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233274EA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273BD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275004(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273BF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275160(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273C0C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275B74(a1, a2, a3, *v3, &qword_2560475A8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273C30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275434(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273C4C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275590(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273C68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233276584(a1, a2, a3, (_QWORD *)*v3, &qword_256047708, &qword_256047710);
  *v3 = result;
  return result;
}

uint64_t sub_233273C94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047718, type metadata accessor for Order.ContentItem);
  *v3 = result;
  return result;
}

uint64_t sub_233273CC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275A08(a1, a2, a3, *v3, &qword_2560476F8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273CEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047738, type metadata accessor for Account);
  *v3 = result;
  return result;
}

uint64_t sub_233273D18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560475E0, (uint64_t (*)(_QWORD))type metadata accessor for Transaction);
  *v3 = result;
  return result;
}

uint64_t sub_233273D44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047560, type metadata accessor for AccountBalance);
  *v3 = result;
  return result;
}

uint64_t sub_233273D70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047740, type metadata accessor for InternalAccountBalance);
  *v3 = result;
  return result;
}

uint64_t sub_233273D9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560475F0, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  *v3 = result;
  return result;
}

uint64_t sub_233273DC8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275888(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273DE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560476E8, type metadata accessor for Order.PriorityInfo);
  *v3 = result;
  return result;
}

uint64_t sub_233273E10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275A08(a1, a2, a3, *v3, &qword_256047650);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273E3C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560476B0, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
  *v3 = result;
  return result;
}

uint64_t sub_233273E68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560476A8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
  *v3 = result;
  return result;
}

uint64_t sub_233273E94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_2560476C8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
  *v3 = result;
  return result;
}

uint64_t sub_233273EC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2332768E4(a1, a2, a3, (_QWORD *)*v3, &qword_2560476D0, &qword_2560476D8);
  *v3 = result;
  return result;
}

uint64_t sub_233273EEC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275B74(a1, a2, a3, *v3, &qword_2560476C0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273F10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233275CCC(a1, a2, a3, (_QWORD *)*v3, &qword_256047670, &qword_256047678);
  *v3 = result;
  return result;
}

uint64_t sub_233273F3C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233275CCC(a1, a2, a3, (_QWORD *)*v3, &qword_256047680, &qword_256047688);
  *v3 = result;
  return result;
}

uint64_t sub_233273F68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233275CCC(a1, a2, a3, (_QWORD *)*v3, &qword_256047690, &qword_256047698);
  *v3 = result;
  return result;
}

uint64_t sub_233273F94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233275E68(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_233273FB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233275FF0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273FCC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23327643C(a1, a2, a3, *v3, &qword_256047580);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233273FF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047530, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
  *v3 = result;
  return result;
}

uint64_t sub_23327401C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23327614C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_233274038(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047518, type metadata accessor for MapsTransactionInsightInput);
  *v3 = result;
  return result;
}

uint64_t sub_233274064(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2332762D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233274080(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23327643C(a1, a2, a3, *v3, &qword_256047510);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2332740A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047648, (uint64_t (*)(_QWORD))type metadata accessor for Order.Application);
  *v3 = result;
  return result;
}

uint64_t sub_2332740D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047638, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  *v3 = result;
  return result;
}

uint64_t sub_2332740FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047640, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
  *v3 = result;
  return result;
}

uint64_t sub_233274128(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233277200(a1, a2, a3, (_QWORD *)*v3, &qword_256047628, (uint64_t (*)(_QWORD))type metadata accessor for Order.PaymentTransaction);
  *v3 = result;
  return result;
}

uint64_t sub_233274154(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233276C08(a1, a2, a3, *v3, &qword_256047630);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233274180(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233276584(a1, a2, a3, (_QWORD *)*v3, &qword_2560475F8, &qword_256047600);
  *v3 = result;
  return result;
}

