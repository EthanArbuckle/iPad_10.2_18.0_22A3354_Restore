uint64_t sub_23337C7B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23337C7B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23337C7BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337C7C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s26CompleteConsentRequestBodyV10CodingKeysOMa()
{
  return &_s26CompleteConsentRequestBodyV10CodingKeysON;
}

ValueMetadata *_s16InitiatedConsentV10CodingKeysOMa()
{
  return &_s16InitiatedConsentV10CodingKeysON;
}

uint64_t _s13ConsentStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23337C83C + 4 * byte_23363E723[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23337C870 + 4 * byte_23363E71E[v4]))();
}

uint64_t sub_23337C870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337C878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23337C880);
  return result;
}

uint64_t sub_23337C88C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23337C894);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23337C898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337C8A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s23InitiateConsentResponseV10CodingKeysOMa()
{
  return &_s23InitiateConsentResponseV10CodingKeysON;
}

uint64_t _s26InitiateConsentRequestBodyV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23337C908 + 4 * byte_23363E72D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23337C93C + 4 * byte_23363E728[v4]))();
}

uint64_t sub_23337C93C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337C944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23337C94CLL);
  return result;
}

uint64_t sub_23337C958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23337C960);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23337C964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337C96C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s26InitiateConsentRequestBodyV10CodingKeysOMa()
{
  return &_s26InitiateConsentRequestBodyV10CodingKeysON;
}

uint64_t _s7ConsentV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23337C9D4 + 4 * byte_23363E737[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23337CA08 + 4 * byte_23363E732[v4]))();
}

uint64_t sub_23337CA08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337CA10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23337CA18);
  return result;
}

uint64_t sub_23337CA24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23337CA2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23337CA30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23337CA38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ConsentV10CodingKeysOMa()
{
  return &_s7ConsentV10CodingKeysON;
}

unint64_t sub_23337CA58()
{
  unint64_t result;

  result = qword_25604B6C8;
  if (!qword_25604B6C8)
  {
    result = MEMORY[0x234934494](&unk_23363F064, &_s7ConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6C8);
  }
  return result;
}

unint64_t sub_23337CAA0()
{
  unint64_t result;

  result = qword_25604B6D0;
  if (!qword_25604B6D0)
  {
    result = MEMORY[0x234934494](&unk_23363F11C, &_s26InitiateConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6D0);
  }
  return result;
}

unint64_t sub_23337CAE8()
{
  unint64_t result;

  result = qword_25604B6D8;
  if (!qword_25604B6D8)
  {
    result = MEMORY[0x234934494](&unk_23363F1D4, &_s23InitiateConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6D8);
  }
  return result;
}

unint64_t sub_23337CB30()
{
  unint64_t result;

  result = qword_25604B6E0;
  if (!qword_25604B6E0)
  {
    result = MEMORY[0x234934494](&unk_23363F28C, &_s16InitiatedConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6E0);
  }
  return result;
}

unint64_t sub_23337CB78()
{
  unint64_t result;

  result = qword_25604B6E8;
  if (!qword_25604B6E8)
  {
    result = MEMORY[0x234934494](&unk_23363F344, &_s26CompleteConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6E8);
  }
  return result;
}

unint64_t sub_23337CBC0()
{
  unint64_t result;

  result = qword_25604B6F0;
  if (!qword_25604B6F0)
  {
    result = MEMORY[0x234934494](&unk_23363F3FC, &_s23CompleteConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6F0);
  }
  return result;
}

unint64_t sub_23337CC08()
{
  unint64_t result;

  result = qword_25604B6F8;
  if (!qword_25604B6F8)
  {
    result = MEMORY[0x234934494](&unk_23363F4B4, &_s21ConsentStatusResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B6F8);
  }
  return result;
}

unint64_t sub_23337CC50()
{
  unint64_t result;

  result = qword_25604B700;
  if (!qword_25604B700)
  {
    result = MEMORY[0x234934494](&unk_23363F56C, &_s24RevokeConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B700);
  }
  return result;
}

unint64_t sub_23337CC98()
{
  unint64_t result;

  result = qword_25604B708;
  if (!qword_25604B708)
  {
    result = MEMORY[0x234934494](&unk_23363F4DC, &_s24RevokeConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B708);
  }
  return result;
}

unint64_t sub_23337CCE0()
{
  unint64_t result;

  result = qword_25604B710;
  if (!qword_25604B710)
  {
    result = MEMORY[0x234934494](&unk_23363F504, &_s24RevokeConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B710);
  }
  return result;
}

unint64_t sub_23337CD28()
{
  unint64_t result;

  result = qword_25604B718;
  if (!qword_25604B718)
  {
    result = MEMORY[0x234934494](&unk_23363F424, &_s21ConsentStatusResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B718);
  }
  return result;
}

unint64_t sub_23337CD70()
{
  unint64_t result;

  result = qword_25604B720;
  if (!qword_25604B720)
  {
    result = MEMORY[0x234934494](&unk_23363F44C, &_s21ConsentStatusResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B720);
  }
  return result;
}

unint64_t sub_23337CDB8()
{
  unint64_t result;

  result = qword_25604B728;
  if (!qword_25604B728)
  {
    result = MEMORY[0x234934494](&unk_23363F36C, &_s23CompleteConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B728);
  }
  return result;
}

unint64_t sub_23337CE00()
{
  unint64_t result;

  result = qword_25604B730;
  if (!qword_25604B730)
  {
    result = MEMORY[0x234934494](&unk_23363F394, &_s23CompleteConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B730);
  }
  return result;
}

unint64_t sub_23337CE48()
{
  unint64_t result;

  result = qword_25604B738;
  if (!qword_25604B738)
  {
    result = MEMORY[0x234934494](&unk_23363F2B4, &_s26CompleteConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B738);
  }
  return result;
}

unint64_t sub_23337CE90()
{
  unint64_t result;

  result = qword_25604B740;
  if (!qword_25604B740)
  {
    result = MEMORY[0x234934494](&unk_23363F2DC, &_s26CompleteConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B740);
  }
  return result;
}

unint64_t sub_23337CED8()
{
  unint64_t result;

  result = qword_25604B748;
  if (!qword_25604B748)
  {
    result = MEMORY[0x234934494](&unk_23363F1FC, &_s16InitiatedConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B748);
  }
  return result;
}

unint64_t sub_23337CF20()
{
  unint64_t result;

  result = qword_25604B750;
  if (!qword_25604B750)
  {
    result = MEMORY[0x234934494](&unk_23363F224, &_s16InitiatedConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B750);
  }
  return result;
}

unint64_t sub_23337CF68()
{
  unint64_t result;

  result = qword_25604B758;
  if (!qword_25604B758)
  {
    result = MEMORY[0x234934494](&unk_23363F144, &_s23InitiateConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B758);
  }
  return result;
}

unint64_t sub_23337CFB0()
{
  unint64_t result;

  result = qword_25604B760;
  if (!qword_25604B760)
  {
    result = MEMORY[0x234934494](&unk_23363F16C, &_s23InitiateConsentResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B760);
  }
  return result;
}

unint64_t sub_23337CFF8()
{
  unint64_t result;

  result = qword_25604B768;
  if (!qword_25604B768)
  {
    result = MEMORY[0x234934494](&unk_23363F08C, &_s26InitiateConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B768);
  }
  return result;
}

unint64_t sub_23337D040()
{
  unint64_t result;

  result = qword_25604B770;
  if (!qword_25604B770)
  {
    result = MEMORY[0x234934494](&unk_23363F0B4, &_s26InitiateConsentRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B770);
  }
  return result;
}

unint64_t sub_23337D088()
{
  unint64_t result;

  result = qword_25604B778;
  if (!qword_25604B778)
  {
    result = MEMORY[0x234934494](&unk_23363EFD4, &_s7ConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B778);
  }
  return result;
}

unint64_t sub_23337D0D0()
{
  unint64_t result;

  result = qword_25604B780;
  if (!qword_25604B780)
  {
    result = MEMORY[0x234934494](&unk_23363EFFC, &_s7ConsentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604B780);
  }
  return result;
}

uint64_t sub_23337D114(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEC00000074416465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEF6C69746E556465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5368736572666572 && a2 == 0xEF65636E65757165 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x54746E65736E6F63 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23337D388(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xED000064496E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364496E617066 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61684365646F63 && a2 == 0xED000065676E656CLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E656C6C616863 && a2 == 0xEF646F6874654D65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7453746E65696C63 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x54746E65736E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23337D6E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000233673FB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233670AB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23337D7CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E65736E6F63 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23337D8BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7463657269646572 && a2 == 0xEB00000000495255;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233670AB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6972655665646F63 && a2 == 0xEC00000072656966 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7373416475617266 && a2 == 0xEF746E656D737365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_23337DAC0()
{
  unint64_t result;

  result = qword_25604B788;
  if (!qword_25604B788)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ConsentStatus, &type metadata for RawBankConnectData.ConsentStatus);
    atomic_store(result, (unint64_t *)&qword_25604B788);
  }
  return result;
}

unint64_t sub_23337DB04()
{
  unint64_t result;

  result = qword_25604B790;
  if (!qword_25604B790)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InitiateConsentFlowType, &type metadata for RawBankConnectData.InitiateConsentFlowType);
    atomic_store(result, (unint64_t *)&qword_25604B790);
  }
  return result;
}

uint64_t FinanceStore.HistoryToken.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    sub_2331A6B08();
    sub_23361F248();
    sub_233168668(0, &qword_2560430A0);
    sub_233168668(0, (unint64_t *)&unk_256048680);
    v5 = sub_23361E81C();
    v7 = v5;
    if (v5)
    {
      sub_23316BEA4(v8, v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      *a2 = v7;
    }
    else
    {
      sub_23361EE10();
      swift_allocError();
      sub_23361EDD4();
      swift_willThrow();
      sub_23316BEA4(v8, v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t FinanceStore.HistoryToken.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v10[2];
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F404();
  v10[0] = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v10);
  v4 = v10[0];
  if (v3)
  {
    v5 = (void *)sub_23361D3C4();
    v7 = v6;

    v10[0] = v5;
    v10[1] = v7;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_2331A6BA8();
    sub_23361F26C();
    sub_23316BEA4((uint64_t)v5, (unint64_t)v7);
  }
  else
  {
    v8 = v4;
    sub_23361D1B4();

    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
}

uint64_t sub_23337DE28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FinanceStore.HistoryToken.init(from:)(a1, a2);
}

uint64_t sub_23337DE3C(_QWORD *a1)
{
  return FinanceStore.HistoryToken.encode(to:)(a1);
}

uint64_t FinanceStore.Changes.inserted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FinanceStore.Changes.updated.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FinanceStore.Changes.deleted.getter()
{
  return swift_bridgeObjectRetain();
}

id FinanceStore.Changes.newToken.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  *a1 = v2;
  return v2;
}

uint64_t sub_23337DE74@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  v5 = *a4;
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = v5;
  return result;
}

uint64_t sub_23337DE84()
{
  return swift_task_switch();
}

uint64_t sub_23337DE98()
{
  return sub_23361EF24();
}

uint64_t sub_23337DF0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23337DF14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 96) + *(_QWORD *)(**(_QWORD **)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2331676FC;
  return v6(a1);
}

uint64_t sub_23337DF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 24) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v7;
  _s15HistoryIteratorCMa(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), v8);
  *v7 = v5;
  v7[1] = sub_23337E024;
  return sub_23361E4E0();
}

uint64_t sub_23337E024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23337E080(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return swift_task_switch();
}

uint64_t sub_23337E0A0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_23337E12C;
  return sub_23361E4D4();
}

uint64_t sub_23337E12C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23337E1A0()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23337E1D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_23337E1F0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_deallocClassInstance();
}

uint64_t FinanceStore.History.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 96) + *(_QWORD *)(**(_QWORD **)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_23337E298;
  return v6(a1);
}

uint64_t sub_23337E298()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23337E304()
{
  uint64_t v0;
  void *v1;
  id v2;
  BOOL v3;

  v1 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
    v3 = *(_BYTE *)(v0 + 40) == 4;
  else
    v3 = 0;
  if (v3)
    return sub_23361EF24();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23337E3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23318C26C;
  v7 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 96) + *(_QWORD *)(**(_QWORD **)v1 + 96));
  v5 = (_QWORD *)swift_task_alloc();
  v4[3] = v5;
  *v5 = v4;
  v5[1] = sub_23337E298;
  return v7(a1);
}

uint64_t sub_23337E474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_23337E91C;
  return sub_23361E4E0();
}

uint64_t FinanceStore.History.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a1 = result;
  return result;
}

void sub_23337E558()
{
  JUMPOUT(0x234934494);
}

uint64_t sub_23337E568@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  FinanceStore.History.makeAsyncIterator()(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

ValueMetadata *type metadata accessor for FinanceStore.HistoryToken()
{
  return &type metadata for FinanceStore.HistoryToken;
}

uint64_t sub_23337E5A8()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23337E5B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *sub_23337E5E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *sub_23337E638(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  return a1;
}

uint64_t sub_23337E6C0(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t type metadata accessor for FinanceStore.Changes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Changes);
}

uint64_t sub_23337E720()
{
  return swift_initClassMetadata2();
}

uint64_t _s15HistoryIteratorCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s15HistoryIteratorCMn);
}

uint64_t sub_23337E760()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void _s29HistoryIteratorImplementationCMa()
{
  JUMPOUT(0x2349343ECLL);
}

uint64_t initializeWithCopy for UncheckedSendableUserDefaults(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for UncheckedSendableUserDefaults(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for UncheckedSendableUserDefaults(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UncheckedSendableUserDefaults(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UncheckedSendableUserDefaults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FinanceStore.History(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.History);
}

uint64_t type metadata accessor for FinanceStore.History.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.History.Iterator);
}

uint64_t dispatch thunk of FinanceConfigurationProviding.isBankConnectSupported(forCountryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

id static ManagedOrderWebService.existingOrNewObject(with:baseURL:in:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23337F514(a1, a2, a3);
}

void sub_23337E93C(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_baseURL);
  sub_23361D2D4();

}

void sub_23337E988(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_lastModifiedValue);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23337E9EC(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setLastModifiedValue_);

}

void ManagedOrderWebService.setLastModifiedValue(_:modificationDate:)()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_setLastModifiedValue_, v1);

  v2 = (id)sub_23361D5B0();
  objc_msgSend(v0, sel_setLastModifiedValueModificationDate_, v2);

}

void ManagedOrderWebService.log(level:message:date:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = v4;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  v12 = objc_msgSend(v5, sel_managedObjectContext);
  if (v12)
  {
    v13 = v12;
    v14 = objc_allocWithZone((Class)type metadata accessor for ManagedOrderWebServiceLogEntry());
    swift_bridgeObjectRetain();
    v15 = objc_msgSend(v14, sel_initWithContext_, v13);
    objc_msgSend(v15, sel_setLevelValue_, a1 & 1);
    v16 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setMessage_, v16);

    v17 = (void *)sub_23361D5B0();
    objc_msgSend(v15, sel_setDate_, v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = objc_msgSend(v5, sel_logEntries);
    v19 = objc_msgSend(v18, sel_setByAddingObject_, v15);

    if (v19)
    {
      objc_msgSend(v5, sel_setLogEntries_, v19);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id ManagedOrderWebService.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderWebService.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderWebService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOrderWebService.dictionaryFetchRequest()()
{
  id v0;
  objc_super v2;

  v2.receiver = (id)swift_getObjCClassFromMetadata();
  v2.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedOrderWebService;
  v0 = objc_msgSendSuper2(&v2, sel_fetchRequest);
  objc_msgSend(v0, sel_setResultType_, 2);
  return v0;
}

id static ManagedOrderWebService.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedOrderWebService;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedOrderWebService.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedOrderWebService.predicateForOrderWebServices(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

uint64_t static ManagedOrderWebService.predicateForOrderWebServices(withBaseURL:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D268();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_25604BA50);
  *(_QWORD *)(v0 + 64) = sub_23337F658();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

unint64_t static ManagedOrderWebService.existingObject(with:baseURL:in:)(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  unint64_t v12;
  id v13;
  uint64_t v14;
  objc_super v15;
  uint64_t v16;

  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedOrderWebService;
  v4 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_2331683F0();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = sub_23361E6B4();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  v8 = sub_23361D268();
  *(_QWORD *)(v7 + 56) = sub_233168668(0, &qword_25604BA50);
  *(_QWORD *)(v7 + 64) = sub_23337F658();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v5 + 40) = sub_23361E6B4();
  v16 = v5;
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9);

  objc_msgSend(v4, sel_setPredicate_, v10);
  result = sub_23361E984();
  if (v14)
  {

    return v6;
  }
  v12 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_9;
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v6;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x234933120](0, v12);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v12 + 32);
LABEL_8:
    v6 = (uint64_t)v13;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedOrderWebService.validateForInsert()()
{
  sub_23337F42C((SEL *)&selRef_validateForInsert_);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedOrderWebService.validateForUpdate()()
{
  sub_23337F42C((SEL *)&selRef_validateForUpdate_);
}

uint64_t sub_23337F42C(SEL *a1)
{
  void *v1;
  unsigned int v3;
  id v4;
  id v5;
  id v7;
  objc_super v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8.super_class = (Class)swift_getObjectType();
  v9[0] = 0;
  v8.receiver = v1;
  v3 = objc_msgSendSuper2(&v8, *a1, v9);
  v4 = v9[0];
  if (v3)
  {
    swift_getKeyPath();
    v5 = v4;
    sub_23330009C(v1);
    return swift_release();
  }
  else
  {
    v7 = v9[0];
    sub_23361D1B4();

    return swift_willThrow();
  }
}

id sub_23337F514(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;

  type metadata accessor for ManagedOrderWebService();
  v6 = objc_msgSend(a1, sel_orderTypeIdentifier);
  v7 = sub_23361E150();
  v9 = v8;

  v10 = static ManagedOrderWebService.existingObject(with:baseURL:in:)(v7, v9);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (id)v10;
    swift_bridgeObjectRelease();
    if (!v6)
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
      objc_msgSend(v6, sel_setOrderType_, a1);
      v11 = objc_msgSend(a1, sel_orderTypeIdentifier);
      objc_msgSend(v6, sel_setOrderTypeIdentifier_, v11);

      v12 = (void *)sub_23361D268();
      objc_msgSend(v6, sel_setBaseURL_, v12);

    }
  }
  return v6;
}

unint64_t sub_23337F658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604BA58;
  if (!qword_25604BA58)
  {
    v1 = sub_233168668(255, &qword_25604BA50);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_25604BA58);
  }
  return result;
}

id sub_23337F6B0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderType);
  *a2 = result;
  return result;
}

id sub_23337F6E8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderType_, *a1);
}

void sub_23337F700(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setOrderTypeIdentifier_, v3);

}

char *keypath_get_selector_baseURL()
{
  return sel_baseURL;
}

void sub_23337F760(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D268();
  objc_msgSend(v2, sel_setBaseURL_, v3);

}

id sub_23337F7A8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_updateSequenceNumber);
  *a2 = result;
  return result;
}

id sub_23337F7D8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUpdateSequenceNumber_, *a1);
}

char *keypath_get_selector_fetchChangesSequenceNumber()
{
  return sel_fetchChangesSequenceNumber;
}

id sub_23337F7F8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fetchChangesSequenceNumber);
  *a2 = result;
  return result;
}

id sub_23337F828(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFetchChangesSequenceNumber_, *a1);
}

char *keypath_get_selector_lastModifiedValueModificationDate()
{
  return sel_lastModifiedValueModificationDate;
}

uint64_t sub_23337F850@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastModifiedValueModificationDate, a2);
}

void sub_23337F86C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastModifiedValueModificationDate_);
}

id sub_23337F888@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requestAttemptCount);
  *a2 = result;
  return result;
}

id sub_23337F8B8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestAttemptCount_, *a1);
}

uint64_t sub_23337F8CC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastRequestAttemptDate, a2);
}

void sub_23337F8E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastRequestAttemptDate_);
}

id sub_23337F904@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_pendingApplePayOrders);
  *a2 = result;
  return result;
}

id sub_23337F93C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPendingApplePayOrders_, *a1);
}

id sub_23337F950@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orders);
  *a2 = result;
  return result;
}

id sub_23337F988(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrders_, *a1);
}

id sub_23337F99C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderRegistrations);
  *a2 = result;
  return result;
}

id sub_23337F9D4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderRegistrations_, *a1);
}

id sub_23337F9E8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_countOfOrdersWithEffectiveAutomaticUpdatesEnabled);
  *a2 = result;
  return result;
}

id sub_23337FA18(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCountOfOrdersWithEffectiveAutomaticUpdatesEnabled_, *a1);
}

char *keypath_get_selector_logEntries()
{
  return sel_logEntries;
}

id sub_23337FA38@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_logEntries);
  *a2 = result;
  return result;
}

id sub_23337FA70(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLogEntries_, *a1);
}

char *keypath_get_selector_countOfLogEntries()
{
  return sel_countOfLogEntries;
}

id sub_23337FA90@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_countOfLogEntries);
  *a2 = result;
  return result;
}

id sub_23337FAC0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCountOfLogEntries_, *a1);
}

uint64_t type metadata accessor for ManagedOrderWebService()
{
  return objc_opt_self();
}

id ManagedAccount.searchableItemAttributeSet(configuration:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_23361D6A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361DACC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361DAC0();
  v10 = objc_allocWithZone(MEMORY[0x24BDC2480]);
  v11 = (void *)sub_23361DA90();
  v12 = objc_msgSend(v10, sel_initWithContentType_, v11);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = objc_msgSend(v1, "id");
  sub_23361D67C();

  sub_23361D64C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setIdentifier_, v14);

  v15 = objc_msgSend(v1, sel_displayName);
  objc_msgSend(v12, sel_setDisplayName_, v15);

  v16 = objc_msgSend(v1, sel_accountDescription);
  objc_msgSend(v12, sel_setContentDescription_, v16);

  return v12;
}

id static FinancialInsightsServiceConfiguration.serviceInterface.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4688);
  sub_233547748();
  return v0;
}

unint64_t static FinancialInsightsServiceConfiguration.extensionPointIdentifier.getter()
{
  return 0xD000000000000027;
}

unint64_t sub_23337FD44()
{
  return 0xD000000000000027;
}

id sub_23337FD60()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4688);
  sub_233547748();
  return v0;
}

ValueMetadata *type metadata accessor for FinancialInsightsServiceConfiguration()
{
  return &type metadata for FinancialInsightsServiceConfiguration;
}

uint64_t BankConnectWebServiceOfflineLabPermissionLoadRequest.init(offlineLabUserID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void *BankConnectWebServiceOfflineLabPermissionLoadRequest.pathComponents.getter()
{
  return &unk_250467E88;
}

void BankConnectWebServiceOfflineLabPermissionLoadRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t BankConnectWebServiceOfflineLabPermissionLoadRequest.makeHTTPHeaderFields()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D64C();
  *(_QWORD *)(v0 + 32) = 0xD000000000000019;
  *(_QWORD *)(v0 + 40) = 0x8000000233670940;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

void *sub_23337FE84()
{
  return &unk_250467E88;
}

uint64_t sub_23337FE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D64C();
  *(_QWORD *)(v0 + 32) = 0xD000000000000019;
  *(_QWORD *)(v0 + 40) = 0x8000000233670940;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

uint64_t static BankConnectWebServiceOfflineLabPermissionLoadResponse.parse(data:urlResponse:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  char v23;

  v5 = sub_23361CA40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v11 = a3;
    v12 = objc_msgSend(v10, sel_statusCode);
    if (v12 == (id)200)
    {
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      if (qword_256041BF0 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v5, (uint64_t)qword_2560458E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      sub_23361CA4C();
      sub_2333801AC();
      sub_23361CA58();
      swift_release();
      if (v3)
      {
        type metadata accessor for FinanceNetworkError();
        sub_2332F3EFC();
        swift_allocError();
        *v14 = v3;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

      }
      else
      {

        v15 = v23;
      }
    }
    else
    {
      v19 = v12;
      type metadata accessor for FinanceNetworkError();
      sub_2332F3EFC();
      swift_allocError();
      *v20 = v19;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    v17 = v16;
    *v16 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v17[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v17[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v18 = a3;
    swift_willThrow();
  }
  return v15 & 1;
}

unint64_t sub_2333801AC()
{
  unint64_t result;

  result = qword_25604BA88;
  if (!qword_25604BA88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.OfflineLabPermissionBody, &type metadata for RawBankConnectData.OfflineLabPermissionBody);
    atomic_store(result, (unint64_t *)&qword_25604BA88);
  }
  return result;
}

uint64_t BankConnectWebServiceOfflineLabPermissionSaveRequest.init(hasPermission:offlineLabUserID:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t v5;

  *a3 = a1;
  v4 = &a3[*(int *)(type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveRequest(0) + 20)];
  v5 = sub_23361D6A0();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

uint64_t type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_25604BBC0);
}

void *BankConnectWebServiceOfflineLabPermissionSaveRequest.pathComponents.getter()
{
  return &unk_250467ED8;
}

uint64_t BankConnectWebServiceOfflineLabPermissionSaveRequest.makeAdditionalHTTPHeaderFields()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveRequest(0);
  v1 = sub_23361D64C();
  *(_QWORD *)(v0 + 32) = 0xD000000000000019;
  *(_QWORD *)(v0 + 40) = 0x8000000233670940;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

void BankConnectWebServiceOfflineLabPermissionSaveRequest.jsonBody.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_2333802F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D64C();
  *(_QWORD *)(v0 + 32) = 0xD000000000000019;
  *(_QWORD *)(v0 + 40) = 0x8000000233670940;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

void *sub_233380378()
{
  return &unk_250467ED8;
}

void static BankConnectWebServiceOfflineLabPermissionSaveResponse.parse(urlResponse:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)204)
    {
      v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_2332F3EFC();
      swift_allocError();
      *v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
    swift_willThrow();
  }
}

uint64_t BankConnectWebServiceOfflineLabItemsRequest.init(offlineLabUserID:offlineLabDeviceID:inputStream:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t result;

  v8 = (int *)type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0);
  *(_QWORD *)(a4 + v8[7]) = &unk_250469FC8;
  v9 = sub_23361D6A0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a4, a1, v9);
  *(_BYTE *)(a4 + v8[5]) = a2;
  *(_QWORD *)(a4 + v8[6]) = a3;
  return result;
}

uint64_t type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_25604BC50);
}

uint64_t BankConnectWebServiceOfflineLabItemsRequest.pathComponents.getter()
{
  type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServiceOfflineLabItemsRequest.pathComponents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*BankConnectWebServiceOfflineLabItemsRequest.pathComponents.modify())(_QWORD)
{
  type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0);
  return nullsub_1;
}

void BankConnectWebServiceOfflineLabItemsRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t BankConnectWebServiceOfflineLabItemsRequest.makeHTTPHeaderFields()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233627000;
  strcpy((char *)(v0 + 32), "Content-Type");
  *(_BYTE *)(v0 + 45) = 0;
  *(_WORD *)(v0 + 46) = -5120;
  *(_QWORD *)(v0 + 48) = 0xD000000000000010;
  *(_QWORD *)(v0 + 56) = 0x8000000233668540;
  v1 = sub_23361D64C();
  *(_QWORD *)(v0 + 64) = 0xD000000000000019;
  *(_QWORD *)(v0 + 72) = 0x8000000233670940;
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0);
  v3 = sub_23361F1D0();
  *(_QWORD *)(v0 + 96) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 104) = 0x8000000233670960;
  *(_QWORD *)(v0 + 112) = v3;
  *(_QWORD *)(v0 + 120) = v4;
  return v0;
}

uint64_t sub_2333806F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2333806FC()
{
  return BankConnectWebServiceOfflineLabItemsRequest.makeHTTPHeaderFields()();
}

void static BankConnectWebServiceOfflineLabItemsResponse.parse(urlResponse:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;

  if (a1 && (objc_opt_self(), (v2 = swift_dynamicCastObjCClass()) != 0))
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)200)
    {
      v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_2332F3EFC();
      swift_allocError();
      *v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BA90);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
    swift_willThrow();
  }
}

unint64_t sub_23338084C()
{
  unint64_t result;

  result = qword_25604BA98;
  if (!qword_25604BA98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.OfflineLabPermissionBody, &type metadata for RawBankConnectData.OfflineLabPermissionBody);
    atomic_store(result, (unint64_t *)&qword_25604BA98);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceOfflineLabPermissionLoadRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233380A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceOfflineLabPermissionLoadRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233380A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BankConnectWebServiceOfflineLabPermissionLoadRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_25604BB30);
}

uint64_t sub_233380AB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceOfflineLabPermissionLoadResponse()
{
  return &type metadata for BankConnectWebServiceOfflineLabPermissionLoadResponse;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectWebServiceOfflineLabPermissionSaveRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23361D6A0();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for BankConnectWebServiceOfflineLabPermissionSaveRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for BankConnectWebServiceOfflineLabPermissionSaveRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D6A0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for BankConnectWebServiceOfflineLabPermissionSaveRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D6A0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for BankConnectWebServiceOfflineLabPermissionSaveRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D6A0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for BankConnectWebServiceOfflineLabPermissionSaveRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D6A0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceOfflineLabPermissionSaveRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233380D6C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_23361D6A0();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceOfflineLabPermissionSaveRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_233380DF4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_23361D6A0();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_233380E64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveResponse()
{
  return &type metadata for BankConnectWebServiceOfflineLabPermissionSaveResponse;
}

_QWORD *initializeBufferWithCopyOfBuffer for BankConnectWebServiceOfflineLabItemsRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v10 = v9;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceOfflineLabItemsRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceOfflineLabItemsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333811E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceOfflineLabItemsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233381270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_2333812E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceOfflineLabItemsResponse()
{
  return &type metadata for BankConnectWebServiceOfflineLabItemsResponse;
}

unint64_t static ManagedInternalTransaction.existingTransaction(with:in:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t result;
  unint64_t v15;
  id v16;
  uint64_t v17[4];
  objc_super v18;
  uint64_t v19;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v18.receiver = (id)swift_getObjCClassFromMetadata();
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v7 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  v8 = MEMORY[0x24BEE0D00];
  v9 = (void *)sub_23361E3D8();
  objc_msgSend(v7, sel_setRelationshipKeyPathsForPrefetching_, v9);

  v17[0] = v3;
  v17[1] = v4;
  v17[2] = v5;
  v17[3] = v6;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = sub_2331683F0();
  *(_QWORD *)(v10 + 32) = v2;
  *(_QWORD *)(v10 + 40) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23361E6B4();
  v12 = sub_23338355C(v17, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  objc_msgSend(v7, sel_setPredicate_, v12);
  v13 = v19;
  result = sub_23361E984();
  if (v13)
  {

    return v2;
  }
  v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_9;
  }
  else
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v2;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x234933120](0, v15);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_8:
    v2 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void static ManagedInternalTransaction.deleteTransaction(with:in:)(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11[4];

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v11[0] = a1[2];
  v11[1] = v5;
  v11[2] = v6;
  v11[3] = v7;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  v10 = sub_23338355C(v11, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_233382BA0((uint64_t)v10, a2);
}

void static ManagedInternalTransaction.deleteAllTransactions(with:in:)(__int128 *a1, void *a2)
{
  sub_233383E88(a1, a2);
}

id static ManagedInternalTransaction.fetchRequest()()
{
  id v0;
  void *v1;
  objc_super v3;

  v3.receiver = (id)swift_getObjCClassFromMetadata();
  v3.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v0 = objc_msgSendSuper2(&v3, sel_fetchRequest);
  v1 = (void *)sub_23361E3D8();
  objc_msgSend(v0, sel_setRelationshipKeyPathsForPrefetching_, v1);

  return v0;
}

unint64_t static ManagedInternalTransaction.existingTransaction(withTransactionID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t result;
  unint64_t v10;
  id v11;
  objc_super v12;

  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v4 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = sub_23361D658();
  *(_QWORD *)(v6 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v6 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v10 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x234933120](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_8:
    a2 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void static ManagedInternalTransaction.oldestTransactionDate(externalAccountId:source:in:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  sub_233381A0C(a1, a2, a3, 1, a4);
}

void static ManagedInternalTransaction.latestTransactionDate(externalAccountId:source:in:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  sub_233381A0C(a1, a2, a3, 0, a4);
}

void sub_233381A0C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;

  LOBYTE(v21) = *a3;
  v8 = sub_2333823C4(a1, a2, (unsigned __int8 *)&v21);
  swift_getKeyPath();
  _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(a4);
  swift_release();
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v9);

  sub_233168668(0, (unint64_t *)&qword_256048E78);
  v10 = sub_23361E984();
  if (v5)
  {

    return;
  }
  v11 = v10;
  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_14:

    swift_bridgeObjectRelease();
    v21 = 0u;
    v22 = 0u;
LABEL_15:
    sub_233168608((uint64_t)&v21, &qword_254245020);
    v19 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a5, 1, 1, v19);
    return;
  }
  swift_bridgeObjectRetain();
  v18 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_14;
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
LABEL_8:
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = (void *)sub_23361E12C();
    v15 = objc_msgSend(v13, sel_valueForKeyPath_, v14);

    if (v15)
    {
      sub_23361EC24();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v20, 0, sizeof(v20));
    }
    sub_23319F578((uint64_t)v20, (uint64_t)&v21);
    if (*((_QWORD *)&v22 + 1))
    {
      v16 = sub_23361D634();
      v17 = swift_dynamicCast();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a5, v17 ^ 1u, 1, v16);
      return;
    }
    goto LABEL_15;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

id static ManagedInternalTransaction.dictionaryFetchRequest()()
{
  id v0;
  objc_super v2;

  v2.receiver = (id)swift_getObjCClassFromMetadata();
  v2.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v0 = objc_msgSendSuper2(&v2, sel_fetchRequest);
  objc_msgSend(v0, sel_setResultType_, 2);
  return v0;
}

id static ManagedInternalTransaction.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

id static ManagedInternalTransaction.predicateForTransaction(fqti:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10[4];

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v10[0] = a1[2];
  v10[1] = v3;
  v10[2] = v4;
  v10[3] = v5;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_2331683F0();
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_23361E6B4();
  v8 = sub_23338355C(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

unint64_t static ManagedInternalTransaction.existingTransaction(withPaymentHash:fqai:source:in:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  return sub_233381F4C(a1, a2, a3, a4);
}

unint64_t static ManagedInternalTransaction.existingTransaction(withTransactionID:fqai:source:in:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  return sub_233381F4C(a1, a2, a3, a4);
}

unint64_t sub_233381F4C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  id v13;
  unint64_t result;
  unint64_t v15;
  id v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;
  unsigned __int8 v23;

  v5 = v4;
  v17 = *(_OWORD *)a3;
  v9 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v10 = *a4;
  v22.receiver = (id)swift_getObjCClassFromMetadata();
  v22.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v11 = objc_msgSendSuper2(&v22, sel_fetchRequest);
  v12 = (void *)sub_23361E3D8();
  objc_msgSend(v11, sel_setRelationshipKeyPathsForPrefetching_, v12);

  v19 = v17;
  v20 = v9;
  v21 = v8;
  v23 = v10;
  v13 = sub_2333848E4(a1, a2, &v19, &v23);
  objc_msgSend(v11, sel_setPredicate_, v13);

  result = sub_23361E984();
  if (v18)
  {

    return v5;
  }
  v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_9;
  }
  else
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v5;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x234933120](0, v15);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_8:
    v5 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalTransaction.predicateForTransaction(withPublicTransactionID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

id static ManagedInternalTransaction.fetchRequest(for:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  __int128 v13;
  unsigned __int8 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v18.receiver = (id)swift_getObjCClassFromMetadata();
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v7 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  v8 = (void *)sub_23361E3D8();
  objc_msgSend(v7, sel_setRelationshipKeyPathsForPrefetching_, v8);

  v15 = v13;
  v16 = v5;
  v17 = v6;
  v9 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v14 = 3;
  v10 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)&v15, 0, (uint64_t)v4, &v14);
  sub_233168608((uint64_t)v4, &qword_256047470);
  objc_msgSend(v7, sel_setPredicate_, v10);

  swift_getKeyPath();
  _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(0);
  swift_release();
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  v11 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v11);

  objc_msgSend(v7, sel_setReturnsObjectsAsFaults_, 0);
  return v7;
}

id sub_2333823C4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  __int16 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  objc_super v14;

  v5 = *a3;
  v14.receiver = (id)swift_getObjCClassFromMetadata();
  v14.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v6 = objc_msgSendSuper2(&v14, sel_fetchRequest);
  objc_msgSend(v6, sel_setResultType_, 2);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D50;
  v8 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v7 + 64) = v8;
  *(_WORD *)(v7 + 32) = v5;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 104) = sub_2331683F0();
  *(_QWORD *)(v7 + 72) = a1;
  *(_QWORD *)(v7 + 80) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_23361E6B4();
  objc_msgSend(v6, sel_setPredicate_, v10);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233623D60;
  *(_QWORD *)(v11 + 56) = v9;
  *(_QWORD *)(v11 + 32) = 0x4164657461647075;
  *(_QWORD *)(v11 + 40) = 0xE900000000000074;
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v12);

  objc_msgSend(v6, sel_setFetchLimit_, 1);
  return v6;
}

void static ManagedInternalTransaction.oldestTransactionDate(accountIdentifier:source:transactionStatuses:dateInterval:in:)(__int128 *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;

  v7 = *((_QWORD *)a1 + 2);
  v8 = *((_QWORD *)a1 + 3);
  v9 = *a2;
  v22 = *a1;
  *(_QWORD *)&v23 = v7;
  *((_QWORD *)&v23 + 1) = v8;
  LOBYTE(v21[0]) = v9;
  v10 = sub_2333827D0((uint64_t)&v22, (unsigned __int8 *)v21, a3, a4);
  sub_233168668(0, (unint64_t *)&qword_256048E78);
  v11 = sub_23361E984();
  if (v5)
  {

    return;
  }
  v12 = v11;
  if (!(v11 >> 62))
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_14:

    swift_bridgeObjectRelease();
    v22 = 0u;
    v23 = 0u;
LABEL_15:
    sub_233168608((uint64_t)&v22, &qword_254245020);
    v20 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
    return;
  }
  swift_bridgeObjectRetain();
  v19 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_14;
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x234933120](0, v12);
LABEL_8:
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = (void *)sub_23361E12C();
    v16 = objc_msgSend(v14, sel_valueForKeyPath_, v15);

    if (v16)
    {
      sub_23361EC24();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v21, 0, sizeof(v21));
    }
    sub_23319F578((uint64_t)v21, (uint64_t)&v22);
    if (*((_QWORD *)&v23 + 1))
    {
      v17 = sub_23361D634();
      v18 = swift_dynamicCast();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, v18 ^ 1u, 1, v17);
      return;
    }
    goto LABEL_15;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v12 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

id sub_2333827D0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  __int128 v28;
  unsigned __int8 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_OWORD *)a1;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *a2;
  v33.receiver = (id)swift_getObjCClassFromMetadata();
  v33.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v14 = objc_msgSendSuper2(&v33, sel_fetchRequest);
  objc_msgSend(v14, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  v30 = v28;
  v31 = v11;
  v32 = v12;
  v16 = sub_23361CB84();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, a4, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  v29 = v13;
  v18 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)&v30, 0, (uint64_t)v10, &v29);
  sub_233168608((uint64_t)v10, &qword_256047470);
  *(_QWORD *)(v15 + 32) = v18;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v19 = swift_allocObject();
  v28 = xmmword_233623D60;
  *(_OWORD *)(v19 + 16) = xmmword_233623D60;
  v20 = sub_23326ECFC(a3);
  *(_QWORD *)(v19 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449D0);
  *(_QWORD *)(v19 + 64) = sub_2331B1A14(&qword_256047478, &qword_2560449D0, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v15 + 40) = sub_23361E6B4();
  *(_QWORD *)&v30 = v15;
  sub_23361E408();
  v21 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v21);

  objc_msgSend(v14, sel_setPredicate_, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v23 + 32) = 0xD000000000000027;
  *(_QWORD *)(v23 + 40) = 0x800000023363FDD0;
  v24 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setPropertiesToFetch_, v24);

  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v25 + 32) = sub_23361E7EC();
  *(_QWORD *)&v30 = v25;
  sub_23361E408();
  v26 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSortDescriptors_, v26);

  objc_msgSend(v14, sel_setFetchLimit_, 1);
  return v14;
}

void sub_233382BA0(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v14;

  v14.receiver = (id)swift_getObjCClassFromMetadata();
  v14.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v5 = objc_msgSendSuper2(&v14, sel_fetchRequest);
  v6 = (void *)sub_23361E3D8();
  objc_msgSend(v5, sel_setRelationshipKeyPathsForPrefetching_, v6);

  objc_msgSend(v5, sel_setPredicate_, a1);
  objc_msgSend(v5, sel_setIncludesPropertyValues_, 0);
  v7 = sub_23361E984();
  if (v2)
  {

    return;
  }
  v8 = v7;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v12 <= 1)
    {
      swift_bridgeObjectRetain();
      v13 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v13)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    sub_23361EF24();
    __break(1u);
    return;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9 > 1)
    goto LABEL_16;
  if (v9)
  {
LABEL_6:
    if ((v8 & 0xC000000000000001) != 0)
    {
      v10 = (id)MEMORY[0x234933120](0, v8);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(id *)(v8 + 32);
LABEL_9:
      v11 = v10;
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_deleteObject_, v11);

      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

void static ManagedInternalTransaction.deleteTransaction(withPublicTransactionID:in:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  v4 = sub_23361D658();
  *(_QWORD *)(v3 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v3 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (void *)sub_23361E6B4();
  sub_233382BA0((uint64_t)v5, a2);

}

void static ManagedInternalTransaction.deleteTransaction(withTransactionID:fqai:in:)(uint64_t a1, uint64_t a2, __int128 *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  uint64_t v12;

  v7 = *((_QWORD *)a3 + 2);
  v11 = *a3;
  v12 = v7;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  v10 = sub_23338355C((uint64_t *)&v11, v9);

  sub_233382BA0((uint64_t)v10, a4);
}

id static ManagedInternalTransaction.predicateForTransaction(transactionIdentifier:fqai:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *((_QWORD *)a3 + 2);
  v6 = *((_QWORD *)a3 + 3);
  v11 = *a3;
  v12 = v5;
  v13 = v6;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2331683F0();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23361E6B4();
  v9 = sub_23338355C((uint64_t *)&v11, v8);

  return v9;
}

uint64_t static ManagedInternalTransaction.predicateForTransactions(withIDs:)(uint64_t a1)
{
  uint64_t v2;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D60;
  *(_QWORD *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
  *(_QWORD *)(v2 + 64) = sub_2331B1A14(&qword_25604BC90, &qword_25604D970, MEMORY[0x24BDCFD00]);
  *(_QWORD *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

id static ManagedInternalTransaction.sortDescriptorForDate(ascending:)(char a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, a1 & 1);

  return v4;
}

id sub_233383208@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_publicTransactionObject);
  *a2 = result;
  return result;
}

id sub_233383240(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPublicTransactionObject_, *a1);
}

void sub_233383254(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_transactionDate);
  sub_23361D5EC();

}

void sub_2333832A0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setTransactionDate_, v3);

}

uint64_t sub_2333832E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x23493312C](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t (*sub_2333833A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23338347C(v6, a2, a3);
  return sub_2333833F8;
}

uint64_t (*sub_2333833FC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2333834E8(v6, a2, a3);
  return sub_2333833F8;
}

void sub_233383450(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_23338347C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x234933120](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s10FinanceKit19ManagedOrderContentOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_2333834E8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x234933120](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for ManagedOrderContent;
  }
  __break(1u);
  return result;
}

void destroy for ManagedOrderContent(id *a1)
{

}

id sub_23338355C(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v3 = a1[1];
  v15 = *a1;
  v5 = a1[2];
  v4 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23362D290;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  v9 = sub_2331683F0();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 32) = sub_23361E6B4();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = v9;
  *(_QWORD *)(v10 + 32) = v15;
  *(_QWORD *)(v10 + 40) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 40) = sub_23361E6B4();
  *(_QWORD *)(v6 + 48) = a2;
  sub_23361E408();
  v11 = a2;
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

id _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0(uint64_t *a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  char *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;

  v61 = a3;
  v59 = a2;
  v56 = sub_23361D634();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361CB84();
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v57 = *a4;
  v67 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  v16 = sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v18 = swift_allocObject();
  v65 = xmmword_233623D60;
  *(_OWORD *)(v18 + 16) = xmmword_233623D60;
  v19 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  v20 = sub_2331683F0();
  *(_QWORD *)(v18 + 64) = v20;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v14;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v15 + 32) = sub_23361E6B4();
  v64 = v17;
  v21 = v16;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v65;
  *(_QWORD *)(v22 + 56) = v19;
  *(_QWORD *)(v22 + 64) = v20;
  *(_QWORD *)(v22 + 32) = v11;
  *(_QWORD *)(v22 + 40) = v12;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v15 + 40) = sub_23361E6B4();
  v66 = v15;
  sub_23361E408();
  v23 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_andPredicateWithSubpredicates_, v23);

  v26 = v25;
  MEMORY[0x234932730]();
  if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23361E414();
  sub_23361E438();
  sub_23361E408();
  v28 = v59;
  v27 = (uint64_t)v60;
  if (v59)
  {
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = v65;
    *(_QWORD *)(v29 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    *(_QWORD *)(v29 + 64) = sub_2331B1A14((unint64_t *)&qword_256042C90, &qword_254246588, MEMORY[0x24BDCFBF8]);
    *(_QWORD *)(v29 + 32) = v28;
    swift_bridgeObjectRetain();
    v30 = (id)sub_23361E6B4();
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();

  }
  sub_2331686A0(v61, v27, &qword_256047470);
  v32 = v62;
  v31 = v63;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v27, 1, v63) == 1)
  {
    sub_233168608(v27, &qword_256047470);
    goto LABEL_15;
  }
  v53 = v26;
  v59 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v58, v27, v31);
  v61 = v21;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v65;
  v34 = v55;
  sub_23361CB60();
  v35 = sub_23361D5B0();
  v36 = *(void (**)(char *, uint64_t))(v54 + 8);
  v37 = v56;
  v36(v34, v56);
  v38 = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v33 + 56) = v38;
  v39 = sub_233385240((unint64_t *)&qword_254246F80, &qword_254246F78);
  *(_QWORD *)(v33 + 64) = v39;
  *(_QWORD *)(v33 + 32) = v35;
  v40 = (void *)sub_23361E6B4();
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v65;
  sub_23361CB48();
  v42 = sub_23361D5B0();
  v36(v34, v37);
  *(_QWORD *)(v41 + 56) = v38;
  *(_QWORD *)(v41 + 64) = v39;
  *(_QWORD *)(v41 + 32) = v42;
  v43 = (void *)sub_23361E6B4();
  if (!(v67 >> 62))
  {
    v44 = *(id *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
    v45 = (uint64_t)v44 + 2;
    if (!__OFADD__(v44, 2))
      goto LABEL_11;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v44 = (id)sub_23361EF30();
  swift_bridgeObjectRelease();
  v45 = (uint64_t)v44 + 2;
  if (__OFADD__(v44, 2))
    goto LABEL_22;
LABEL_11:
  sub_2333832E8(v45, 1);
  sub_23361E408();
  v44 = v40;
  MEMORY[0x234932730]();
  if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_23:
    sub_23361E414();
  sub_23361E438();
  sub_23361E408();
  v46 = v43;
  MEMORY[0x234932730]();
  v24 = v59;
  v26 = v53;
  if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23361E414();
  sub_23361E438();
  sub_23361E408();

  (*(void (**)(char *, uint64_t))(v62 + 8))(v58, v63);
LABEL_15:
  v47 = v57;
  if (v57 != 3)
  {
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v65;
    v49 = MEMORY[0x24BEE3F78];
    *(_QWORD *)(v48 + 56) = MEMORY[0x24BEE3F30];
    *(_QWORD *)(v48 + 64) = v49;
    *(_WORD *)(v48 + 32) = v47;
    sub_23361E6B4();
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();
  }
  v50 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v51 = objc_msgSend(v24, sel_andPredicateWithSubpredicates_, v50);

  return v51;
}

void sub_233383E88(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t i;
  id v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;
  unsigned __int8 v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v8 = *((_QWORD *)a1 + 2);
  v9 = *((_QWORD *)a1 + 3);
  type metadata accessor for ManagedInternalTransaction();
  v26.receiver = (id)swift_getObjCClassFromMetadata();
  v26.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v10 = objc_msgSendSuper2(&v26, sel_fetchRequest);
  v11 = (void *)sub_23361E3D8();
  objc_msgSend(v10, sel_setRelationshipKeyPathsForPrefetching_, v11);

  objc_msgSend(v10, sel_setReturnsObjectsAsFaults_, 1);
  v23 = v22;
  v24 = v8;
  v25 = v9;
  v12 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v27 = 3;
  v13 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)&v23, 0, (uint64_t)v7, &v27);
  sub_233168608((uint64_t)v7, &qword_256047470);
  objc_msgSend(v10, sel_setPredicate_, v13);

  v14 = sub_23361E984();
  if (v2)
    goto LABEL_12;
  v15 = v14;
  if (!(v14 >> 62))
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = a2;
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_4;
LABEL_11:

    swift_bridgeObjectRelease_n();
LABEL_12:

    return;
  }
  v21 = a2;
  swift_bridgeObjectRetain();
  v16 = sub_23361EF30();
  if (!v16)
    goto LABEL_11;
LABEL_4:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x234933120](i, v15);
      else
        v19 = *(id *)(v15 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(a2, sel_deleteObject_, v19);

    }
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(char a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23362D290;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_retain();
  *(_QWORD *)(v2 + 32) = sub_23361E7EC();
  v3 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v4 = (void *)sub_23361E12C();
  v5 = objc_msgSend(v3, sel_initWithKey_ascending_selector_, v4, (a1 & 1) == 0, sel_localizedCaseInsensitiveCompare_);

  *(_QWORD *)(v2 + 40) = v5;
  swift_getKeyPath();
  *(_QWORD *)(v2 + 48) = sub_23361E7EC();
  sub_23361E408();
  return v2;
}

id _s10FinanceKit26ManagedInternalTransactionC012predicateForE04with6amount8currency12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_So9NSDecimalaSS10Foundation04DateL0VAA0E6SourceOtFZ_0(__int128 *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  id v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v63 = a7;
  v55 = a5;
  LODWORD(v58) = a4;
  v57 = a3;
  v56 = a2;
  v12 = sub_23361D634();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *a1;
  v14 = *((_QWORD *)a1 + 2);
  v65 = *((_QWORD *)a1 + 3);
  v66 = v14;
  v64 = *a8;
  v59 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  v69 = xmmword_233626360;
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  v16 = sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v18 = swift_allocObject();
  v70 = xmmword_233623D60;
  *(_OWORD *)(v18 + 16) = xmmword_233623D60;
  v19 = sub_23361EA98();
  v20 = sub_233168668(0, &qword_25604BC98);
  *(_QWORD *)(v18 + 56) = v20;
  v21 = sub_233385240(&qword_25604BCA0, &qword_25604BC98);
  *(_QWORD *)(v18 + 64) = v21;
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v15 + 32) = sub_23361E6B4();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v70;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  v23 = sub_2331683F0();
  *(_QWORD *)(v22 + 64) = v23;
  *(_QWORD *)(v22 + 32) = a5;
  *(_QWORD *)(v22 + 40) = a6;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v15 + 40) = sub_23361E6B4();
  *(_QWORD *)&v71 = v15;
  sub_23361E408();
  v24 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v68 = (id)objc_opt_self();
  v25 = objc_msgSend(v68, sel_andPredicateWithSubpredicates_, v24);

  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v69;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v70;
  v28 = sub_23361EA98();
  *(_QWORD *)(v27 + 56) = v20;
  *(_QWORD *)(v27 + 64) = v21;
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)(v26 + 32) = sub_23361E6B4();
  v54[0] = v17;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v70;
  *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v29 + 64) = v23;
  *(_QWORD *)(v29 + 32) = v55;
  *(_QWORD *)(v29 + 40) = a6;
  swift_bridgeObjectRetain();
  v54[1] = v16;
  *(_QWORD *)(v26 + 40) = sub_23361E6B4();
  *(_QWORD *)&v71 = v26;
  sub_23361E408();
  v30 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v31 = v68;
  v32 = objc_msgSend(v68, sel_andPredicateWithSubpredicates_, v30);

  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2336328D0;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v69;
  *(_QWORD *)(v34 + 32) = v25;
  *(_QWORD *)(v34 + 40) = v32;
  *(_QWORD *)&v71 = v34;
  sub_23361E408();
  *(_QWORD *)&v69 = v25;
  v59 = v32;
  v35 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v31, sel_orPredicateWithSubpredicates_, v35);

  *(_QWORD *)(v33 + 32) = v36;
  v58 = v33;
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v70;
  v38 = v60;
  sub_23361CB60();
  v39 = sub_23361D5B0();
  v40 = v62;
  v41 = *(void (**)(char *, uint64_t))(v61 + 8);
  v41(v38, v62);
  v42 = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v37 + 56) = v42;
  v43 = sub_233385240((unint64_t *)&qword_254246F80, &qword_254246F78);
  *(_QWORD *)(v37 + 64) = v43;
  *(_QWORD *)(v37 + 32) = v39;
  *(_QWORD *)(v33 + 40) = sub_23361E6B4();
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v70;
  sub_23361CB48();
  v45 = sub_23361D5B0();
  v41(v38, v40);
  *(_QWORD *)(v44 + 56) = v42;
  *(_QWORD *)(v44 + 64) = v43;
  *(_QWORD *)(v44 + 32) = v45;
  v46 = sub_23361E6B4();
  v47 = v58;
  *(_QWORD *)(v58 + 48) = v46;
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v70;
  v49 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v48 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v48 + 64) = v49;
  *(_WORD *)(v48 + 32) = v64;
  *(_QWORD *)(v47 + 56) = sub_23361E6B4();
  *(_QWORD *)&v71 = v47;
  sub_23361E408();
  v50 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v51 = objc_msgSend(v68, sel_andPredicateWithSubpredicates_, v50);

  v71 = v67;
  v72 = v66;
  v73 = v65;
  v52 = sub_23338355C((uint64_t *)&v71, v51);

  return v52;
}

id sub_2333848E4(uint64_t a1, uint64_t a2, __int128 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *((_QWORD *)a3 + 2);
  v7 = *((_QWORD *)a3 + 3);
  v8 = *a4;
  v18 = *a3;
  v19 = v6;
  v20 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 64) = sub_2331683F0();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v9 + 32) = sub_23361E6B4();
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v11 + 16) = xmmword_233623D60;
  v13 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  *(_WORD *)(v11 + 32) = v8;
  *(_QWORD *)(v9 + 40) = sub_23361E6B4();
  sub_23361E408();
  v14 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v14);

  v16 = sub_23338355C((uint64_t *)&v18, v15);
  return v16;
}

id sub_233384AB4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_publicTransactionObject);
  *a2 = result;
  return result;
}

id sub_233384AEC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPublicTransactionObject_, *a1);
}

void sub_233384B04(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setTransactionDate_, v3);

}

id _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a1;
  v36 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23362D290;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v12 = swift_allocObject();
  v37 = xmmword_233623D60;
  *(_OWORD *)(v12 + 16) = xmmword_233623D60;
  v13 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v12 + 64) = v13;
  *(_WORD *)(v12 + 32) = 2;
  *(_QWORD *)&v33 = "nObject.transactionDate >= %@";
  *(_QWORD *)(v11 + 32) = sub_23361E6B4();
  *(_QWORD *)(v11 + 40) = sub_23361E6B4();
  *(_QWORD *)(v11 + 48) = sub_23361E6B4();
  v39 = v11;
  sub_23361E408();
  sub_2331686A0(a3, (uint64_t)v6, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_233168608((uint64_t)v6, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v37;
    v15 = sub_23361D5B0();
    *(_QWORD *)(v14 + 56) = sub_233168668(0, &qword_254246F78);
    *(_QWORD *)(v14 + 64) = sub_233385240((unint64_t *)&qword_254246F80, &qword_254246F78);
    *(_QWORD *)(v14 + 32) = v15;
    sub_23361E6B4();
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v16 = objc_allocWithZone(MEMORY[0x24BDD14C0]);
  v17 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_initWithType_subpredicates_, 1, v17);

  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v37;
  *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v19 + 64) = MEMORY[0x24BEE3F78];
  *(_WORD *)(v19 + 32) = 1;
  v20 = (void *)sub_23361E6B4();
  v21 = swift_allocObject();
  v33 = xmmword_233626360;
  *(_OWORD *)(v21 + 16) = xmmword_233626360;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v37;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 64) = sub_2331683F0();
  v23 = v36;
  *(_QWORD *)(v22 + 32) = v35;
  *(_QWORD *)(v22 + 40) = v23;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v21 + 32) = sub_23361E6B4();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v33;
  *(_QWORD *)(v24 + 32) = v18;
  *(_QWORD *)(v24 + 40) = v20;
  v38 = v24;
  sub_23361E408();
  v25 = objc_allocWithZone(MEMORY[0x24BDD14C0]);
  v26 = v18;
  v27 = v20;
  v28 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v25, sel_initWithType_subpredicates_, 2, v28);

  *(_QWORD *)(v21 + 40) = v29;
  v38 = v21;
  sub_23361E408();
  v30 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v30);

  return v31;
}

id _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with8sharedId6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_10Foundation4UUIDVAA0E6SourceOtFZ_0(__int128 *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v15 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D50;
  v8 = sub_23361D658();
  *(_QWORD *)(v7 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v7 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  v9 = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v7 + 32) = v8;
  v10 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v7 + 96) = v9;
  *(_QWORD *)(v7 + 104) = v10;
  *(_WORD *)(v7 + 72) = v5;
  *(_QWORD *)(v6 + 32) = sub_23361E6B4();
  sub_23361E408();
  v11 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v11);

  v16 = v15;
  v17 = v3;
  v18 = v4;
  v13 = sub_23338355C((uint64_t *)&v16, v12);

  return v13;
}

uint64_t sub_233385240(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_233168668(255, a2);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v4);
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_transactionId()
{
  return sel_transactionId;
}

id ManagedOrderWebServiceLogEntry.__allocating_init(level:message:date:context:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v6 = v5;
  v10 = objc_msgSend(objc_allocWithZone(v6), sel_initWithContext_, a5);
  objc_msgSend(v10, sel_setLevelValue_, a1 & 1);
  v11 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setMessage_, v11);

  v12 = (void *)sub_23361D5B0();
  objc_msgSend(v10, sel_setDate_, v12);

  v13 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a4, v13);
  return v10;
}

uint64_t ManagedOrderWebServiceLogEntry.Level.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x524F525245;
  else
    return 1330007625;
}

FinanceKit::ManagedOrderWebServiceLogEntry::Level_optional __swiftcall ManagedOrderWebServiceLogEntry.Level.init(rawValue:)(Swift::Int16 rawValue)
{
  FinanceKit::ManagedOrderWebServiceLogEntry::Level_optional v1;

  if (rawValue == 1)
    v1.value = FinanceKit_ManagedOrderWebServiceLogEntry_Level_error;
  else
    v1.value = FinanceKit_ManagedOrderWebServiceLogEntry_Level_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

uint64_t ManagedOrderWebServiceLogEntry.Level.rawValue.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_2333853E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x524F525245;
  else
    return 1330007625;
}

uint64_t ManagedOrderWebServiceLogEntry.level.getter()
{
  void *v0;
  uint64_t result;

  result = (uint64_t)objc_msgSend(v0, sel_levelValue);
  if ((_DWORD)result)
  {
    if ((unsigned __int16)result == 1)
    {
      return 1;
    }
    else
    {
      result = sub_23361EF24();
      __break(1u);
    }
  }
  return result;
}

id sub_233385498@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  id result;
  char v4;

  result = objc_msgSend(*a1, sel_levelValue);
  if ((_DWORD)result == 1)
  {
    v4 = 1;
LABEL_4:
    *a2 = v4;
    return result;
  }
  v4 = (char)result;
  if (!(_WORD)result)
    goto LABEL_4;
  result = (id)sub_23361EF24();
  __break(1u);
  return result;
}

void sub_233385534(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_message);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_233385588(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_date);
  sub_23361D5EC();

}

Swift::String __swiftcall ManagedOrderWebServiceLogEntry.formatted()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  id v14;
  uint64_t v15;
  void *v16;
  Swift::String result;
  _QWORD v18[2];
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = sub_23361D538();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  v20 = 0xE000000000000000;
  v10 = objc_msgSend(v1, sel_date);
  sub_23361D5EC();

  MEMORY[0x234930D74]();
  sub_233385804();
  sub_23361D61C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = v18[0];
  v12 = v18[1];
  swift_bridgeObjectRelease();
  v19 = v11;
  v20 = v12;
  sub_23361E27C();
  v13 = objc_msgSend(v1, sel_levelValue);
  if (v13 && (unsigned __int16)v13 != 1)
  {
    v15 = sub_23361EF24();
    __break(1u);
  }
  else
  {
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    v14 = objc_msgSend(v1, sel_message);
    sub_23361E150();

    sub_23361E27C();
    swift_bridgeObjectRelease();
    v15 = v19;
    v16 = (void *)v20;
  }
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

unint64_t sub_233385804()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254246738;
  if (!qword_254246738)
  {
    v1 = sub_23361D538();
    result = MEMORY[0x234934494](MEMORY[0x24BDCE430], v1);
    atomic_store(result, (unint64_t *)&qword_254246738);
  }
  return result;
}

id ManagedOrderWebServiceLogEntry.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderWebServiceLogEntry.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderWebServiceLogEntry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOrderWebServiceLogEntry.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit30ManagedOrderWebServiceLogEntry;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedOrderWebServiceLogEntry.validateForInsert()()
{
  sub_233385AC4((SEL *)&selRef_validateForInsert_);
}

id sub_233385A1C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderWebService);
  *a2 = result;
  return result;
}

id sub_233385A54(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderWebService_, *a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedOrderWebServiceLogEntry.validateForUpdate()()
{
  sub_233385AC4((SEL *)&selRef_validateForUpdate_);
}

uint64_t sub_233385AC4(SEL *a1)
{
  void *v1;
  unsigned int v3;
  id v4;
  id v5;
  id v7;
  objc_super v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8.super_class = (Class)swift_getObjectType();
  v9[0] = 0;
  v8.receiver = v1;
  v3 = objc_msgSendSuper2(&v8, *a1, v9);
  v4 = v9[0];
  if (v3)
  {
    swift_getKeyPath();
    v5 = v4;
    sub_23330009C(v1);
    return swift_release();
  }
  else
  {
    v7 = v9[0];
    sub_23361D1B4();

    return swift_willThrow();
  }
}

unint64_t sub_233385BA4()
{
  unint64_t result;

  result = qword_25604BCA8;
  if (!qword_25604BCA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderWebServiceLogEntry.Level, &type metadata for ManagedOrderWebServiceLogEntry.Level);
    atomic_store(result, (unint64_t *)&qword_25604BCA8);
  }
  return result;
}

id sub_233385BEC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLevelValue_, *a1);
}

void sub_233385C04(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setMessage_, v3);

}

char *keypath_get_selector_date()
{
  return sel_date;
}

void sub_233385C64(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setDate_, v3);

}

uint64_t type metadata accessor for ManagedOrderWebServiceLogEntry()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ManagedOrderWebServiceLogEntry.Level(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233385D18 + 4 * byte_23363FED5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233385D4C + 4 * byte_23363FED0[v4]))();
}

uint64_t sub_233385D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233385D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233385D5CLL);
  return result;
}

uint64_t sub_233385D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233385D70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233385D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233385D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderWebServiceLogEntry.Level()
{
  return &type metadata for ManagedOrderWebServiceLogEntry.Level;
}

void FinanceStore.checkDataAvailability(for:)(_BYTE *a1)
{
  uint64_t v1;
  Class v2;
  _BYTE *v3;
  char v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  if (*a1)
  {
    if (*a1 == 1)
    {
      v1 = sub_23361E12C();
      v2 = NSClassFromString((NSString *)v1);

      v5 = &_s10FinanceKit11FeatureFlagVN_0;
      v6 = sub_2331BA5D8();
      v4[0] = 4;
      LOBYTE(v1) = sub_23361D988();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      if ((v1 & 1) != 0 || v2)
        return;
    }
    else
    {
      static DeviceInfo.deviceType.getter(v4);
      if (!v4[0])
        return;
    }
    sub_23316853C();
    swift_allocError();
    *v3 = 3;
    swift_willThrow();
  }
}

uint64_t FinanceStore.isDataAvailable(for:deviceInfo:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Class v4;
  char v5;
  _QWORD v7[5];

  if (*a1)
  {
    if (*a1 == 1)
    {
      v3 = sub_23361E12C();
      v4 = NSClassFromString((NSString *)v3);

      v7[3] = &_s10FinanceKit11FeatureFlagVN_0;
      v7[4] = sub_2331BA5D8();
      LOBYTE(v7[0]) = 4;
      LOBYTE(v3) = sub_23361D988();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
      v5 = v3 | (v4 != 0);
    }
    else
    {
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 8))(v7, a2, a3);
      v5 = LOBYTE(v7[0]) == 0;
    }
  }
  else
  {
    v5 = 1;
  }
  return v5 & 1;
}

uint64_t FinanceStore.checkDataRestriction(for:)(char *a1)
{
  char v1;
  uint64_t result;
  _BYTE *v3;
  char v4;

  v1 = *a1;
  v4 = *a1;
  result = FinanceStore.isDataRestricted(for:)(&v4);
  if ((result & 1) != 0)
  {
    sub_23316853C();
    swift_allocError();
    *v3 = v1;
    return swift_willThrow();
  }
  return result;
}

uint64_t FinanceStore.DataType.hash(into:)()
{
  return sub_23361F35C();
}

BOOL static FinanceStore.DataType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_233385FEC()
{
  sub_233386D50();
  return sub_23361F428();
}

uint64_t sub_233386014()
{
  sub_233386D50();
  return sub_23361F434();
}

uint64_t sub_23338603C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646572436B6E6162;
  if (*v0 != 1)
    v1 = 0x6169636E616E6966;
  if (*v0)
    return v1;
  else
    return 0x73726564726FLL;
}

uint64_t sub_2333860AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233387210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333860D0()
{
  sub_233386CC8();
  return sub_23361F428();
}

uint64_t sub_2333860F8()
{
  sub_233386CC8();
  return sub_23361F434();
}

uint64_t sub_233386120()
{
  sub_233386D0C();
  return sub_23361F428();
}

uint64_t sub_233386148()
{
  sub_233386D0C();
  return sub_23361F434();
}

uint64_t sub_233386170()
{
  sub_233386D94();
  return sub_23361F428();
}

uint64_t sub_233386198()
{
  sub_233386D94();
  return sub_23361F434();
}

uint64_t FinanceStore.DataType.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t FinanceStore.DataType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCB0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCB8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCC0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCC8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233386CC8();
  sub_23361F410();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_233386D50();
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_233386D0C();
      v16 = v21;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_233386D94();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t FinanceStore.DataType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCF0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BCF8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BD00);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BD08);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233386CC8();
  v13 = v41;
  sub_23361F3EC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23361F098();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23361EE10();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v25 = &type metadata for FinanceStore.DataType;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_233386D50();
      v20 = v9;
      sub_23361EFA8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_233386D0C();
      v28 = v15;
      sub_23361EFA8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_233386D94();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_2333868AC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FinanceStore.DataType.init(from:)(a1, a2);
}

uint64_t sub_2333868C0(_QWORD *a1)
{
  return FinanceStore.DataType.encode(to:)(a1);
}

unint64_t FinanceStore.DataType.XPC.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t sub_2333868E8()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23338692C()
{
  return sub_23361F35C();
}

uint64_t sub_233386954()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t *sub_233386994@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t FinanceStore.DataType.xpcValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t static FinanceStore.isDataAvailable(_:)(_BYTE *a1)
{
  int v1;
  uint64_t v2;
  Class v3;
  char v4;
  char v6[24];
  ValueMetadata *v7;
  unint64_t v8;

  v1 = *a1;
  if (qword_254244AD0 == -1)
  {
    if (*a1)
      goto LABEL_3;
LABEL_7:
    v4 = 1;
    return v4 & 1;
  }
  swift_once();
  if (!v1)
    goto LABEL_7;
LABEL_3:
  if (v1 == 1)
  {
    v2 = sub_23361E12C();
    v3 = NSClassFromString((NSString *)v2);

    v7 = &_s10FinanceKit11FeatureFlagVN_0;
    v8 = sub_2331BA5D8();
    v6[0] = 4;
    LOBYTE(v2) = sub_23361D988();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    v4 = v2 | (v3 != 0);
  }
  else
  {
    static DeviceInfo.deviceType.getter(v6);
    v4 = v6[0] == 0;
  }
  return v4 & 1;
}

uint64_t FinanceStore.isDataRestricted(for:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  uint64_t v7;

  v2 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = *a1;
  swift_storeEnumTagMultiPayload();
  v5 = sub_2332E2844((uint64_t)v4);
  sub_2331CB0F4((uint64_t)v4);
  return v5 & 1;
}

unint64_t sub_233386CC8()
{
  unint64_t result;

  result = qword_25604BCD0;
  if (!qword_25604BCD0)
  {
    result = MEMORY[0x234934494](&unk_2336404B0, &_s8DataTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BCD0);
  }
  return result;
}

unint64_t sub_233386D0C()
{
  unint64_t result;

  result = qword_25604BCD8;
  if (!qword_25604BCD8)
  {
    result = MEMORY[0x234934494](&unk_233640460, &_s8DataTypeO23FinancialDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BCD8);
  }
  return result;
}

unint64_t sub_233386D50()
{
  unint64_t result;

  result = qword_25604BCE0;
  if (!qword_25604BCE0)
  {
    result = MEMORY[0x234934494](&unk_233640410, &_s8DataTypeO25BankCredentialsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BCE0);
  }
  return result;
}

unint64_t sub_233386D94()
{
  unint64_t result;

  result = qword_25604BCE8;
  if (!qword_25604BCE8)
  {
    result = MEMORY[0x234934494](&unk_2336403C0, &_s8DataTypeO16OrdersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BCE8);
  }
  return result;
}

unint64_t sub_233386DDC()
{
  unint64_t result;

  result = qword_25604BD10;
  if (!qword_25604BD10)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.DataType, &type metadata for FinanceStore.DataType);
    atomic_store(result, (unint64_t *)&qword_25604BD10);
  }
  return result;
}

unint64_t sub_233386E24()
{
  unint64_t result;

  result = qword_25604BD18;
  if (!qword_25604BD18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.DataType.XPC, &type metadata for FinanceStore.DataType.XPC);
    atomic_store(result, (unint64_t *)&qword_25604BD18);
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceStore.DataType()
{
  return &type metadata for FinanceStore.DataType;
}

ValueMetadata *type metadata accessor for FinanceStore.DataType.XPC()
{
  return &type metadata for FinanceStore.DataType.XPC;
}

uint64_t _s8DataTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233386ED8 + 4 * byte_233640035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233386F0C + 4 * asc_233640030[v4]))();
}

uint64_t sub_233386F0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233386F14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233386F1CLL);
  return result;
}

uint64_t sub_233386F28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233386F30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233386F34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233386F3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8DataTypeO10CodingKeysOMa()
{
  return &_s8DataTypeO10CodingKeysON;
}

ValueMetadata *_s8DataTypeO16OrdersCodingKeysOMa()
{
  return &_s8DataTypeO16OrdersCodingKeysON;
}

ValueMetadata *_s8DataTypeO25BankCredentialsCodingKeysOMa()
{
  return &_s8DataTypeO25BankCredentialsCodingKeysON;
}

ValueMetadata *_s8DataTypeO23FinancialDataCodingKeysOMa()
{
  return &_s8DataTypeO23FinancialDataCodingKeysON;
}

unint64_t sub_233386F8C()
{
  unint64_t result;

  result = qword_25604BD20;
  if (!qword_25604BD20)
  {
    result = MEMORY[0x234934494](&unk_233640398, &_s8DataTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD20);
  }
  return result;
}

unint64_t sub_233386FD4()
{
  unint64_t result;

  result = qword_25604BD28;
  if (!qword_25604BD28)
  {
    result = MEMORY[0x234934494](&unk_2336402B8, &_s8DataTypeO16OrdersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD28);
  }
  return result;
}

unint64_t sub_23338701C()
{
  unint64_t result;

  result = qword_25604BD30;
  if (!qword_25604BD30)
  {
    result = MEMORY[0x234934494](&unk_2336402E0, &_s8DataTypeO16OrdersCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD30);
  }
  return result;
}

unint64_t sub_233387064()
{
  unint64_t result;

  result = qword_25604BD38;
  if (!qword_25604BD38)
  {
    result = MEMORY[0x234934494](&unk_233640268, &_s8DataTypeO25BankCredentialsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD38);
  }
  return result;
}

unint64_t sub_2333870AC()
{
  unint64_t result;

  result = qword_25604BD40;
  if (!qword_25604BD40)
  {
    result = MEMORY[0x234934494](&unk_233640290, &_s8DataTypeO25BankCredentialsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD40);
  }
  return result;
}

unint64_t sub_2333870F4()
{
  unint64_t result;

  result = qword_25604BD48;
  if (!qword_25604BD48)
  {
    result = MEMORY[0x234934494](&unk_233640218, &_s8DataTypeO23FinancialDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD48);
  }
  return result;
}

unint64_t sub_23338713C()
{
  unint64_t result;

  result = qword_25604BD50;
  if (!qword_25604BD50)
  {
    result = MEMORY[0x234934494](&unk_233640240, &_s8DataTypeO23FinancialDataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD50);
  }
  return result;
}

unint64_t sub_233387184()
{
  unint64_t result;

  result = qword_25604BD58;
  if (!qword_25604BD58)
  {
    result = MEMORY[0x234934494](&unk_233640308, &_s8DataTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD58);
  }
  return result;
}

unint64_t sub_2333871CC()
{
  unint64_t result;

  result = qword_25604BD60;
  if (!qword_25604BD60)
  {
    result = MEMORY[0x234934494](&unk_233640330, &_s8DataTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604BD60);
  }
  return result;
}

uint64_t sub_233387210(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73726564726FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646572436B6E6162 && a2 == 0xEF736C6169746E65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6169636E616E6966 && a2 == 0xED0000617461446CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t ManagedInstitution.reconsentType.getter()
{
  void *v0;
  uint64_t result;

  result = (uint64_t)objc_msgSend(v0, sel_reconsentTypeValue);
  if ((_DWORD)result)
  {
    if ((unsigned __int16)result == 1)
    {
      return 1;
    }
    else
    {
      sub_23361ED98();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_reconsentTypeValue);
      sub_23361F1D0();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      result = sub_23361EF24();
      __break(1u);
    }
  }
  return result;
}

id ManagedInstitution.privacyLabels.getter@<X0>(_WORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_privacyLabelsValue);
  *a1 = (_WORD)result;
  return result;
}

uint64_t static ManagedInstitution.setBackgroundRefreshMetadata(retryAfter:remainingRefreshes:institutionID:context:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  return sub_23361E960();
}

uint64_t static ManagedInstitution.setBackgroundRefreshMetadata(retryAfter:remainingRefreshes:consentID:context:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  return sub_23361E960();
}

void sub_233387C30(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "id");
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_233387C84(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_extensionsBundleIdentifiers);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E3F0();

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_233387CE8(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1)
    v3 = sub_23361E3D8();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setExtensionsBundleIdentifiers_);

}

id ManagedInstitution.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitution.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitution.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedInstitution.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  uint64_t v18;

  v3 = v2;
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  v13 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  v14 = (void *)sub_23361E12C();
  objc_msgSend(v13, sel_setId_, v14);

  sub_23361D5F8();
  Date.advancedByDays(_:)(1, (uint64_t)v12);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v16 = (void *)sub_23361D5B0();
  v15(v12, v6);
  objc_msgSend(v13, sel_setEarliestUpdateRequestStartDate_, v16);

  _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(v13, a1, a2);
  sub_233168500(a1, type metadata accessor for Institution);
  return v13;
}

uint64_t ManagedInstitution.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  v14 = (void *)sub_23361E12C();
  objc_msgSend(v13, sel_setId_, v14);

  sub_23361D5F8();
  Date.advancedByDays(_:)(1, (uint64_t)v12);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v16 = (void *)sub_23361D5B0();
  v15(v12, v6);
  objc_msgSend(v13, sel_setEarliestUpdateRequestStartDate_, v16);

  result = type metadata accessor for RawBankConnectData.Institution(0);
  v18 = a1 + *(int *)(result + 40);
  if (*(_BYTE *)(v18 + 8))
    v19 = 0;
  else
    v19 = *(_QWORD *)v18;
  if (v19 < -32768)
  {
    __break(1u);
  }
  else if (v19 < 0x8000)
  {
    objc_msgSend(v13, sel_setNumberOfRemainingBackgroundRefreshes_, (__int16)v19);
    _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA18RawBankConnectDataO0D0VSo22NSManagedObjectContextCtFZ_0(v13, a1, a2);

    sub_233168500(a1, type metadata accessor for RawBankConnectData.Institution);
    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

id ManagedInstitution.reconsentType.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setReconsentTypeValue_, a1 & 1);
}

id ManagedInstitution.supportedAuthTypes.setter(__int16 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setAuthTypeObjects_, *a1);
}

id ManagedInstitution.privacyLabels.setter(__int16 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setPrivacyLabelsValue_, *a1);
}

id ManagedInstitution.supportedNotificationEventTypes.setter(unsigned int *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setSupportedNotificationEventTypesValue_, *a1);
}

void Institution.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *refreshed;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  BOOL v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char v61;
  char v62;
  id v63;
  id v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  char v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  id v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  char v90[8];
  uint64_t v91;
  unsigned __int16 v92;
  uint64_t v93;
  unsigned __int16 v94[5];

  v89 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v3);
  v88 = (uint64_t *)((char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v73 - v9;
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v12 = MEMORY[0x24BDAC7A8](refreshed);
  v14 = (_WORD *)((char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v73 - v15;
  v17 = objc_msgSend(a1, sel_piiRedactionConfiguration);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_countryCodes);
    v85 = sub_23361E5DC();

  }
  else
  {
    v85 = 0;
  }
  v20 = objc_msgSend(a1, "id");
  v21 = sub_23361E150();
  v86 = v22;
  v87 = v21;

  v23 = objc_msgSend(a1, sel_name);
  v24 = sub_23361E150();
  v83 = v25;
  v84 = v24;

  v82 = ManagedInstitution.reconsentType.getter();
  v94[0] = (unsigned __int16)objc_msgSend(a1, sel_authTypeObjects);
  v26 = objc_msgSend(a1, sel_firstTransactionsRequestWindow);
  v76 = v26;
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, sel_doubleValue);
    v29 = v28;

    v80 = v29;
  }
  else
  {
    v80 = 0;
  }
  objc_msgSend(a1, sel_maxAgeTransactionsFirstRequest);
  v31 = v30;
  objc_msgSend(a1, sel_maxAgeTransactionsRefreshRequest);
  v33 = v32;
  v34 = objc_msgSend(a1, sel_extensionsBundleIdentifiers);
  if (v34)
  {
    v35 = v34;
    v77 = sub_23361E3F0();

  }
  else
  {
    v77 = 0;
  }
  v75 = objc_msgSend(a1, sel_maximumNumberOfBackgroundRefreshes);
  v74 = objc_msgSend(a1, sel_numberOfRemainingBackgroundRefreshes);
  v36 = objc_msgSend(a1, sel_backgroundRefreshRetryAfterDate);
  if (v36)
  {
    v37 = v36;
    sub_23361D5EC();

    v38 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v10, 0, 1, v38);
  }
  else
  {
    v39 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v10, 1, 1, v39);
  }
  v40 = objc_msgSend(a1, sel_lastBackgroundRefreshDate);
  if (v40)
  {
    v41 = v40;
    sub_23361D5EC();

    v42 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v8, 0, 1, v42);
  }
  else
  {
    v43 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v8, 1, 1, v43);
  }
  v79 = v10;
  v44 = objc_msgSend(a1, sel_backgroundRefreshConfirmationWindow);
  v45 = v44;
  v46 = 0;
  v47 = 0;
  if (v44)
  {
    objc_msgSend(v44, sel_doubleValue);
    v47 = v48;

  }
  v78 = v8;
  v81 = v16;
  v49 = objc_msgSend(a1, sel_backgroundRefreshConfirmationExpiryWindow);
  v50 = v49;
  if (v49)
  {
    objc_msgSend(v49, sel_doubleValue);
    v46 = v51;

  }
  v52 = v50 == 0;
  v53 = v45 == 0;
  v54 = (uint64_t)v14 + refreshed[6];
  v55 = sub_23361D634();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
  v56(v54, 1, 1, v55);
  v57 = (uint64_t)v14 + refreshed[7];
  v56(v57, 1, 1, v55);
  v58 = (char *)v14 + refreshed[8];
  *(_QWORD *)v58 = 0;
  v58[8] = 1;
  v59 = (char *)v14 + refreshed[9];
  *(_QWORD *)v59 = 0;
  v59[8] = 1;
  *v14 = v75;
  v14[1] = v74;
  sub_23318C8A8((uint64_t)v79, v54);
  sub_23318C8A8((uint64_t)v78, v57);
  *(_QWORD *)v58 = v47;
  v58[8] = v53;
  *(_QWORD *)v59 = v46;
  v59[8] = v52;
  v60 = (uint64_t)v81;
  sub_23318F3EC((uint64_t)v14, (uint64_t)v81);
  v61 = objc_msgSend(a1, sel_multipleConsentsEnabled);
  v62 = objc_msgSend(a1, sel_problemReportingEnabled);
  v63 = objc_msgSend(a1, sel_termsAndConditionsObject);
  if (v63)
  {
    v64 = v63;
    v65 = v88;
    BankConnectTermsAndConditions.init(from:)(v64, v88);
    v66 = type metadata accessor for BankConnectTermsAndConditions();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);

  }
  else
  {
    v67 = type metadata accessor for BankConnectTermsAndConditions();
    v65 = v88;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v88, 1, 1, v67);
  }
  v68 = v76 == 0;
  v69 = objc_msgSend(a1, sel_financialLabEnabled);
  v70 = objc_msgSend(a1, sel_timestampSuitableForUserDisplay);
  v93 = v85;
  v92 = (unsigned __int16)objc_msgSend(a1, sel_privacyLabelsValue);
  v71 = objc_msgSend(a1, sel_consentSyncingEnabled);
  objc_msgSend(a1, sel_consentSyncingOutdatedTokenWaitTimeout);
  v90[0] = v71;
  v91 = v72;
  Institution.init(id:name:reconsentType:supportedAuthTypes:firstTransactionsRequestWindow:maxAgeTransactionsFirstRequest:maxAgeTransactionsRefreshRequest:extensionsBundleIdentifiers:backgroundRefreshConfiguration:multipleConsentsEnabled:problemReportingEnabled:termsAndConditions:financialLabEnabled:timestampSuitableForUserDisplay:piiRedactionConfiguration:privacyLabels:consentSyncingConfiguration:)(v87, v86, v84, v83, v82, (__int16 *)v94, v80, v68, v89, v31, v33, v77, v60, v61, v62, (uint64_t)v65, v69, v70, &v93,
    (__int16 *)&v92,
    v90);

}

id ManagedInstitution.supportedAuthTypes.getter@<X0>(_WORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_authTypeObjects);
  *a1 = (_WORD)result;
  return result;
}

id (*ManagedInstitution.reconsentType.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ManagedInstitution.reconsentType.getter();
  return sub_233388900;
}

id sub_233388900(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setReconsentTypeValue_, *(unsigned __int8 *)(a1 + 8));
}

id (*ManagedInstitution.supportedAuthTypes.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_WORD *)(a1 + 8) = (unsigned __int16)objc_msgSend(v1, sel_authTypeObjects);
  return sub_233388958;
}

id sub_233388958(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setAuthTypeObjects_, *(__int16 *)(a1 + 8));
}

id ManagedInstitution.supportedNotificationEventTypes.getter@<X0>(_DWORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_supportedNotificationEventTypesValue);
  *a1 = (_DWORD)result;
  return result;
}

id (*ManagedInstitution.supportedNotificationEventTypes.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = objc_msgSend(v1, sel_supportedNotificationEventTypesValue);
  return sub_2333889E0;
}

id sub_2333889E0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setSupportedNotificationEventTypesValue_, *(unsigned int *)(a1 + 8));
}

id (*ManagedInstitution.privacyLabels.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_WORD *)(a1 + 8) = (unsigned __int16)objc_msgSend(v1, sel_privacyLabelsValue);
  return sub_233388A38;
}

id sub_233388A38(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setPrivacyLabelsValue_, *(__int16 *)(a1 + 8));
}

void sub_233388A50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t (*a7)(uint64_t, uint64_t, void *))
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  v17 = a7(a1, a2, a3);
  if (!v7)
  {
    v18 = (void *)v17;
    if (v17)
    {
      sub_23319F164(a5, (uint64_t)v16);
      v19 = sub_23361D634();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) != 1)
      {
        v21 = (void *)sub_23361D5B0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
      }
      objc_msgSend(v18, sel_setBackgroundRefreshRetryAfterDate_, v21);

    }
    objc_msgSend(v18, sel_setNumberOfRemainingBackgroundRefreshes_, a6);
    v24[0] = 0;
    if ((objc_msgSend(a3, sel_save_, v24) & 1) != 0)
    {
      v22 = v24[0];
    }
    else
    {
      v23 = v24[0];
      sub_23361D1B4();

      swift_willThrow();
    }

  }
}

void sub_233388C0C()
{
  sub_233388C44((uint64_t (*)(uint64_t, uint64_t, void *))static ManagedInstitution.existingInstitution(withInstitutionID:in:));
}

void sub_233388C28()
{
  sub_233388C44((uint64_t (*)(uint64_t, uint64_t, void *))static ManagedInstitution.existingInstitution(forConsentID:in:));
}

void sub_233388C44(uint64_t (*a1)(uint64_t, uint64_t, void *))
{
  uint64_t v1;

  sub_233388A50(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_WORD *)(v1 + 56), a1);
}

uint64_t _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *refreshed;
  uint64_t v13;
  __int16 *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  double *v27;
  id v28;
  double *v29;
  id v30;
  double *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v39;
  char *v40;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v39 - v10;
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  MEMORY[0x24BDAC7A8](refreshed);
  v14 = (__int16 *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setName_, v15);

  objc_msgSend(a1, sel_setReconsentTypeValue_, *(unsigned __int8 *)(a2 + 32));
  objc_msgSend(a1, sel_setAuthTypeObjects_, *(__int16 *)(a2 + 34));
  v16 = 0;
  if ((*(_BYTE *)(a2 + 48) & 1) == 0)
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(a2 + 40));
  objc_msgSend(a1, sel_setFirstTransactionsRequestWindow_, v16);

  objc_msgSend(a1, sel_setMaxAgeTransactionsFirstRequest_, *(double *)(a2 + 56));
  objc_msgSend(a1, sel_setMaxAgeTransactionsRefreshRequest_, *(double *)(a2 + 64));
  v17 = *(_QWORD *)(a2 + 72);
  v39 = a3;
  v40 = v9;
  if (v17)
    v18 = (void *)sub_23361E3D8();
  else
    v18 = 0;
  objc_msgSend(a1, sel_setExtensionsBundleIdentifiers_, v18, v39);

  v19 = (int *)type metadata accessor for Institution(0);
  sub_233389F2C(a2 + v19[12], (uint64_t)v14);
  objc_msgSend(a1, sel_setMaximumNumberOfBackgroundRefreshes_, *v14);
  objc_msgSend(a1, sel_setNumberOfRemainingBackgroundRefreshes_, v14[1]);
  sub_23319F164((uint64_t)v14 + refreshed[6], (uint64_t)v11);
  v20 = sub_23361D634();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = 0;
  if (v22(v11, 1, v20) != 1)
  {
    v23 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v20);
  }
  objc_msgSend(a1, sel_setBackgroundRefreshRetryAfterDate_, v23);

  v24 = (uint64_t)v40;
  sub_23319F164((uint64_t)v14 + refreshed[7], (uint64_t)v40);
  if (v22((char *)v24, 1, v20) == 1)
  {
    v25 = 0;
  }
  else
  {
    v25 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v20);
  }
  v26 = v39;
  objc_msgSend(a1, sel_setLastBackgroundRefreshDate_, v25);

  v27 = (double *)((char *)v14 + refreshed[8]);
  if (((_BYTE)v27[1] & 1) != 0)
    v28 = 0;
  else
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *v27);
  objc_msgSend(a1, sel_setBackgroundRefreshConfirmationWindow_, v28);

  v29 = (double *)((char *)v14 + refreshed[9]);
  if (((_BYTE)v29[1] & 1) != 0)
    v30 = 0;
  else
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *v29);
  objc_msgSend(a1, sel_setBackgroundRefreshConfirmationExpiryWindow_, v30);

  objc_msgSend(a1, sel_setMultipleConsentsEnabled_, *(unsigned __int8 *)(a2 + v19[13]));
  objc_msgSend(a1, sel_setProblemReportingEnabled_, *(unsigned __int8 *)(a2 + v19[14]));
  objc_msgSend(a1, sel_setFinancialLabEnabled_, *(unsigned __int8 *)(a2 + v19[16]));
  objc_msgSend(a1, sel_setTimestampSuitableForUserDisplay_, *(unsigned __int8 *)(a2 + v19[17]));
  v31 = (double *)(a2 + v19[20]);
  objc_msgSend(a1, sel_setConsentSyncingEnabled_, *(unsigned __int8 *)v31);
  objc_msgSend(a1, sel_setConsentSyncingOutdatedTokenWaitTimeout_, v31[1]);
  v32 = objc_msgSend(a1, sel_piiRedactionConfiguration);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v26, sel_deleteObject_, v32);

  }
  if (*(_QWORD *)(a2 + v19[18]))
  {
    v34 = objc_allocWithZone((Class)type metadata accessor for ManagedPIIRedactionConfiguration());
    swift_bridgeObjectRetain();
    v35 = v26;
    v36 = objc_msgSend(v34, sel_initWithContext_, v35);
    v37 = (void *)sub_23361E5B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setCountryCodes_, v37);

    objc_msgSend(a1, sel_setPiiRedactionConfiguration_, v36);
  }
  objc_msgSend(a1, sel_setPrivacyLabelsValue_, *(__int16 *)(a2 + v19[19]));
  return sub_233168500((uint64_t)v14, type metadata accessor for Institution.BackgroundRefreshConfiguration);
}

void _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA18RawBankConnectDataO0D0VSo22NSManagedObjectContextCtFZ_0(void *a1, uint64_t a2, void *a3)
{
  void *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  double v20;
  char v21;
  double v22;
  char v23;
  id v24;
  id v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setName_, v6);

  v7 = (int *)type metadata accessor for RawBankConnectData.Institution(0);
  objc_msgSend(a1, sel_setReconsentTypeValue_, *(unsigned __int8 *)(a2 + v7[8]));
  v8 = a2 + v7[10];
  v9 = *(_QWORD *)(v8 + 88);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = 0;
    v12 = 0;
    v13 = v9 + 32;
    v14 = v10 - 1;
    do
    {
      if (*(_BYTE *)(v13 + v11))
      {
        if (*(_BYTE *)(v13 + v11) == 1)
        {
          v12 |= 2u;
          if (v14 == v11)
            goto LABEL_14;
        }
        else
        {
          v12 |= 4u;
          if (v14 == v11)
            goto LABEL_14;
        }
      }
      else
      {
        v12 |= 1u;
        if (v14 == v11)
          goto LABEL_14;
      }
      ++v11;
    }
    while (!__OFADD__(v11, 1));
    __break(1u);
  }
  LOWORD(v12) = 0;
LABEL_14:
  objc_msgSend(a1, sel_setAuthTypeObjects_, (__int16)v12);
  v16 = *(double *)(v8 + 72);
  v15 = *(double *)(v8 + 80);
  if ((*(_BYTE *)(v8 + 64) & 1) != 0)
    v17 = 0;
  else
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(v8 + 56));
  objc_msgSend(a1, sel_setFirstTransactionsRequestWindow_, v17);

  objc_msgSend(a1, sel_setMaxAgeTransactionsFirstRequest_, v16);
  objc_msgSend(a1, sel_setMaxAgeTransactionsRefreshRequest_, v15);
  if (*(_QWORD *)(a2 + v7[9]))
    v18 = (void *)sub_23361E3D8();
  else
    v18 = 0;
  objc_msgSend(a1, sel_setExtensionsBundleIdentifiers_, v18);

  v19 = *(_QWORD *)v8;
  if (*(_BYTE *)(v8 + 8))
    v19 = 0;
  if (v19 < -32768)
    goto LABEL_63;
  if (v19 >= 0x8000)
  {
LABEL_64:
    __break(1u);
    return;
  }
  v20 = *(double *)(v8 + 16);
  v21 = *(_BYTE *)(v8 + 24);
  v22 = *(double *)(v8 + 32);
  v23 = *(_BYTE *)(v8 + 40);
  objc_msgSend(a1, sel_setMaximumNumberOfBackgroundRefreshes_, (__int16)v19);
  if ((v21 & 1) != 0)
    v24 = 0;
  else
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v20);
  objc_msgSend(a1, sel_setBackgroundRefreshConfirmationWindow_, v24);

  if ((v23 & 1) != 0)
    v25 = 0;
  else
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v22);
  objc_msgSend(a1, sel_setBackgroundRefreshConfirmationExpiryWindow_, v25);

  v26 = *(unsigned __int8 *)(v8 + 96);
  if (v26 != 2)
    objc_msgSend(a1, sel_setMultipleConsentsEnabled_, v26 & 1);
  v27 = *(unsigned __int8 *)(v8 + 97);
  if (v27 != 2)
    objc_msgSend(a1, sel_setProblemReportingEnabled_, v27 & 1);
  v28 = *(unsigned __int8 *)(v8 + 98);
  if (v28 != 2)
    objc_msgSend(a1, sel_setFinancialLabEnabled_, v28 & 1);
  v29 = *(unsigned __int8 *)(v8 + 99);
  if (v29 != 2)
    objc_msgSend(a1, sel_setTimestampSuitableForUserDisplay_, v29 & 1);
  v30 = *(unsigned __int8 *)(v8 + 112);
  if (v30 != 2)
    objc_msgSend(a1, sel_setConsentSyncingEnabled_, v30 & 1);
  if ((*(_BYTE *)(v8 + 128) & 1) == 0)
    objc_msgSend(a1, sel_setConsentSyncingOutdatedTokenWaitTimeout_, *(double *)(v8 + 120));
  v31 = objc_msgSend(a1, sel_piiRedactionConfiguration);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(a3, sel_deleteObject_, v31);

  }
  v33 = *(_QWORD *)(v8 + 104);
  if (v33)
  {
    v34 = objc_allocWithZone((Class)type metadata accessor for ManagedPIIRedactionConfiguration());
    swift_bridgeObjectRetain();
    v35 = a3;
    v36 = objc_msgSend(v34, sel_initWithContext_, v35);
    sub_2331C92EC(v33);
    swift_bridgeObjectRelease();
    v37 = (void *)sub_23361E5B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setCountryCodes_, v37);

    objc_msgSend(a1, sel_setPiiRedactionConfiguration_, v36);
  }
  if (*(_QWORD *)(v8 + 136))
    v38 = *(_QWORD *)(v8 + 136);
  else
    v38 = MEMORY[0x24BEE4AF8];
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    v40 = 0;
    v41 = v38 + 32;
    v42 = 0;
    while (1)
    {
      v43 = v42 + 1;
      if (__OFADD__(v42, 1))
        break;
      if (*(_BYTE *)(v41 + v42))
      {
        if (*(_BYTE *)(v41 + v42) == 1)
          v40 = v40 | 1;
        else
          v40 = v40 | 2;
        if (v43 == v39)
          goto LABEL_61;
        ++v42;
      }
      else
      {
        ++v42;
        if (v43 == v39)
          goto LABEL_61;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v40 = 0;
LABEL_61:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setSupportedNotificationEventTypesValue_, v40);
}

void sub_233389670(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_authTypeObjects()
{
  return sel_authTypeObjects;
}

id sub_2333896D4@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_authTypeObjects);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389704(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAuthTypeObjects_, *a1);
}

char *keypath_get_selector_firstTransactionsRequestWindow()
{
  return sel_firstTransactionsRequestWindow;
}

id sub_233389724@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_firstTransactionsRequestWindow);
  *a2 = result;
  return result;
}

id sub_23338975C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFirstTransactionsRequestWindow_, *a1);
}

char *keypath_get_selector_maxAgeTransactionsFirstRequest()
{
  return sel_maxAgeTransactionsFirstRequest;
}

id sub_23338977C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_maxAgeTransactionsFirstRequest);
  *a2 = v4;
  return result;
}

id sub_2333897AC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMaxAgeTransactionsFirstRequest_, *a1);
}

char *keypath_get_selector_maxAgeTransactionsRefreshRequest()
{
  return sel_maxAgeTransactionsRefreshRequest;
}

id sub_2333897CC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_maxAgeTransactionsRefreshRequest);
  *a2 = v4;
  return result;
}

id sub_2333897FC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMaxAgeTransactionsRefreshRequest_, *a1);
}

char *keypath_get_selector_extensionsBundleIdentifiers()
{
  return sel_extensionsBundleIdentifiers;
}

char *keypath_get_selector_updateRequestAttemptCount()
{
  return sel_updateRequestAttemptCount;
}

id sub_233389830@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_updateRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_233389860(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUpdateRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastUpdateRequestAttemptDate()
{
  return sel_lastUpdateRequestAttemptDate;
}

uint64_t sub_233389880@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastUpdateRequestAttemptDate, a2);
}

void sub_23338989C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastUpdateRequestAttemptDate_);
}

char *keypath_get_selector_earliestUpdateRequestStartDate()
{
  return sel_earliestUpdateRequestStartDate;
}

uint64_t sub_2333898C4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_earliestUpdateRequestStartDate, a2);
}

void sub_2333898E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setEarliestUpdateRequestStartDate_);
}

char *keypath_get_selector_maximumNumberOfBackgroundRefreshes()
{
  return sel_maximumNumberOfBackgroundRefreshes;
}

id sub_233389908@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_maximumNumberOfBackgroundRefreshes);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389938(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMaximumNumberOfBackgroundRefreshes_, *a1);
}

char *keypath_get_selector_numberOfRemainingBackgroundRefreshes()
{
  return sel_numberOfRemainingBackgroundRefreshes;
}

id sub_233389958@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_numberOfRemainingBackgroundRefreshes);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389988(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfRemainingBackgroundRefreshes_, *a1);
}

char *keypath_get_selector_backgroundRefreshRetryAfterDate()
{
  return sel_backgroundRefreshRetryAfterDate;
}

uint64_t sub_2333899A8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_backgroundRefreshRetryAfterDate, a2);
}

void sub_2333899C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setBackgroundRefreshRetryAfterDate_);
}

char *keypath_get_selector_lastBackgroundRefreshDate()
{
  return sel_lastBackgroundRefreshDate;
}

uint64_t sub_2333899EC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastBackgroundRefreshDate, a2);
}

void sub_233389A08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastBackgroundRefreshDate_);
}

char *keypath_get_selector_backgroundRefreshConfirmationWindow()
{
  return sel_backgroundRefreshConfirmationWindow;
}

id sub_233389A30@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_backgroundRefreshConfirmationWindow);
  *a2 = result;
  return result;
}

id sub_233389A68(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBackgroundRefreshConfirmationWindow_, *a1);
}

char *keypath_get_selector_backgroundRefreshConfirmationExpiryWindow()
{
  return sel_backgroundRefreshConfirmationExpiryWindow;
}

id sub_233389A88@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_backgroundRefreshConfirmationExpiryWindow);
  *a2 = result;
  return result;
}

id sub_233389AC0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBackgroundRefreshConfirmationExpiryWindow_, *a1);
}

char *keypath_get_selector_multipleConsentsEnabled()
{
  return sel_multipleConsentsEnabled;
}

id sub_233389AE0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_multipleConsentsEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233389B10(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMultipleConsentsEnabled_, *a1);
}

char *keypath_get_selector_problemReportingEnabled()
{
  return sel_problemReportingEnabled;
}

id sub_233389B30@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_problemReportingEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233389B60(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setProblemReportingEnabled_, *a1);
}

char *keypath_get_selector_financialLabEnabled()
{
  return sel_financialLabEnabled;
}

id sub_233389B80@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_financialLabEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233389BB0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFinancialLabEnabled_, *a1);
}

char *keypath_get_selector_timestampSuitableForUserDisplay()
{
  return sel_timestampSuitableForUserDisplay;
}

id sub_233389BD0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_timestampSuitableForUserDisplay);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233389C00(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestampSuitableForUserDisplay_, *a1);
}

char *keypath_get_selector_piiRedactionConfiguration()
{
  return sel_piiRedactionConfiguration;
}

id sub_233389C20@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_piiRedactionConfiguration);
  *a2 = result;
  return result;
}

id sub_233389C58(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPiiRedactionConfiguration_, *a1);
}

char *keypath_get_selector_privacyLabelsValue()
{
  return sel_privacyLabelsValue;
}

id sub_233389C78@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_privacyLabelsValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389CA8(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPrivacyLabelsValue_, *a1);
}

char *keypath_get_selector_consentSyncingEnabled()
{
  return sel_consentSyncingEnabled;
}

id sub_233389CC8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_consentSyncingEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233389CF8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentSyncingEnabled_, *a1);
}

char *keypath_get_selector_consentSyncingOutdatedTokenWaitTimeout()
{
  return sel_consentSyncingOutdatedTokenWaitTimeout;
}

id sub_233389D18@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_consentSyncingOutdatedTokenWaitTimeout);
  *a2 = v4;
  return result;
}

id sub_233389D48(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentSyncingOutdatedTokenWaitTimeout_, *a1);
}

char *keypath_get_selector_supportedNotificationEventTypesValue()
{
  return sel_supportedNotificationEventTypesValue;
}

id sub_233389D68@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_supportedNotificationEventTypesValue);
  *a2 = (_DWORD)result;
  return result;
}

id sub_233389D98(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSupportedNotificationEventTypesValue_, *a1);
}

char *keypath_get_selector_termsAndConditionsObject()
{
  return sel_termsAndConditionsObject;
}

id sub_233389DB8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_termsAndConditionsObject);
  *a2 = result;
  return result;
}

id sub_233389DF0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTermsAndConditionsObject_, *a1);
}

uint64_t sub_233389E04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ManagedInstitution.reconsentType.getter();
  *a1 = result;
  return result;
}

id sub_233389E2C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReconsentTypeValue_, *a1);
}

id sub_233389E40@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_authTypeObjects);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389E70(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAuthTypeObjects_, *a1);
}

id sub_233389E84@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_supportedNotificationEventTypesValue);
  *a2 = (_DWORD)result;
  return result;
}

id sub_233389EB4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSupportedNotificationEventTypesValue_, *a1);
}

id sub_233389EC8@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_privacyLabelsValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_233389EF8(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPrivacyLabelsValue_, *a1);
}

uint64_t type metadata accessor for ManagedInstitution()
{
  return objc_opt_self();
}

uint64_t sub_233389F2C(uint64_t a1, uint64_t a2)
{
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(refreshed - 8) + 16))(a2, a1, refreshed);
  return a2;
}

id ManagedBankCredential.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankCredential.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankCredential.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedBankCredential.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  void *v6;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v6 = (void *)sub_23361D658();
  objc_msgSend(v5, sel_setId_, v6);

  _s10FinanceKit21ManagedBankCredentialC6update_06sealedE0yAC_AA0dE0O9SealedBoxVtFZ_0(v5, a1);
  sub_23338ACA4(a1);
  return v5;
}

void ManagedBankCredential.update(_:context:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void (*v16)(char *, uint64_t);
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_23361D634();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - v12;
  v14 = objc_msgSend(a1, sel_credentialIdentifier);
  sub_23361D67C();

  v15 = objc_msgSend(v2, "id");
  sub_23361D67C();

  LOBYTE(v15) = sub_23361D670();
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v16(v13, v7);
  if ((v15 & 1) != 0)
  {
    v17 = objc_msgSend(a1, sel_credentialIdentifier);
    sub_23361D67C();

    v18 = (void *)sub_23361D658();
    v16(v13, v7);
    objc_msgSend(v2, sel_setId_, v18);

    v19 = objc_msgSend(a1, sel_credentialData);
    v20 = sub_23361D3C4();
    v22 = v21;

    v23 = (void *)sub_23361D3AC();
    sub_23316BEA4(v20, v22);
    objc_msgSend(v2, sel_setCredentialData_, v23);

    objc_msgSend(v2, sel_setCredentialTypeValue_, objc_msgSend(a1, sel_credentialTypeValue));
    v24 = objc_msgSend(a1, sel_nickname);
    objc_msgSend(v2, sel_setNickname_, v24);

    v25 = objc_msgSend(a1, sel_updatedDate);
    sub_23361D5EC();

    v26 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
    objc_msgSend(v2, sel_setUpdatedDate_, v26);

    v27 = objc_msgSend(a1, sel_keyIdentifier);
    sub_23361D67C();

    v28 = (void *)sub_23361D658();
    v16(v13, v7);
    objc_msgSend(v2, sel_setKeyIdentifier_, v28);

  }
  else
  {
    __break(1u);
  }
}

unint64_t static ManagedBankCredential.existingCredential(withCredentialID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  objc_super v11;

  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit21ManagedBankCredential;
  v4 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23361D658();
  *(_QWORD *)(v5 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v5 + 64) = sub_2331B372C();
  *(_QWORD *)(v5 + 32) = v6;
  v7 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id static ManagedBankCredential.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit21ManagedBankCredential;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t static ManagedBankCredential.predicateForCredential(withCredentialID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_2331B372C();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

id static ManagedBankCredential.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

id ManagedBankCredential.credentialType.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_credentialTypeValue);
  if ((_DWORD)result != 1)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_credentialTypeValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = (id)sub_23361EF24();
    __break(1u);
  }
  return result;
}

void _s10FinanceKit21ManagedBankCredentialC6update_06sealedE0yAC_AA0dE0O9SealedBoxVtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BankCredential.SealedBox(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23338AE7C(a2, (uint64_t)v10);
  v11 = objc_msgSend(a1, "id");
  sub_23361D67C();

  LOBYTE(v11) = sub_23361D670();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23338ACA4((uint64_t)v10);
  if ((v11 & 1) != 0)
  {
    v12 = (void *)sub_23361D658();
    objc_msgSend(a1, sel_setId_, v12);

    objc_msgSend(a1, sel_setCredentialTypeValue_, 1);
    v13 = (void *)sub_23361D3AC();
    objc_msgSend(a1, sel_setCredentialData_, v13);

    if (*(_QWORD *)(a2 + *(int *)(v8 + 20) + 8))
      v14 = (void *)sub_23361E12C();
    else
      v14 = 0;
    objc_msgSend(a1, sel_setNickname_, v14);

    v15 = (void *)sub_23361D5B0();
    objc_msgSend(a1, sel_setUpdatedDate_, v15);

    v16 = (void *)sub_23361D658();
    objc_msgSend(a1, sel_setKeyIdentifier_, v16);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23338ACA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BankCredential.SealedBox(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23338ACE0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_id, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_23338AD04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setId_);
}

void sub_23338AD1C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D3AC();
  objc_msgSend(v2, sel_setCredentialData_, v3);

}

id sub_23338AD6C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_credentialTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_23338AD9C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCredentialTypeValue_, *a1);
}

void sub_23338ADB8(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_updatedDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_23338ADDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setUpdatedDate_);
}

void sub_23338ADF0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_keyIdentifier, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_23338AE14(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setKeyIdentifier_);
}

id sub_23338AE28()
{
  return ManagedBankCredential.credentialType.getter();
}

id sub_23338AE48(uint64_t a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCredentialTypeValue_, 1);
}

uint64_t type metadata accessor for ManagedBankCredential()
{
  return objc_opt_self();
}

uint64_t sub_23338AE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankCredential.SealedBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL ManagedPendingApplePayOrder.isEligibleForFetch(now:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void (*v10)(char *, uint64_t);
  id v11;
  _BOOL8 result;
  uint64_t v13;

  v1 = v0;
  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - v7;
  v9 = objc_msgSend(v0, sel_creationDate);
  sub_23361D5EC();

  sub_23361D544();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  sub_2331B19CC();
  LOBYTE(v9) = sub_23361E0E4();
  v10(v8, v2);
  result = 1;
  if ((v9 & 1) != 0)
  {
    if ((uint64_t)objc_msgSend(v1, sel_responseCount) > 2)
      return 0;
    v11 = objc_msgSend(v1, sel_creationDate);
    sub_23361D5EC();

    sub_23361D544();
    v10(v6, v2);
    LOBYTE(v11) = sub_23361E0E4();
    v10(v8, v2);
    if ((v11 & 1) != 0)
      return 0;
  }
  return result;
}

Swift::Void __swiftcall ManagedPendingApplePayOrder.awakeFromInsert()()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  objc_super v8;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_23361D634();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8.receiver = v1;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, sel_awakeFromInsert);
  sub_23361D5F8();
  v7 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v1, sel_setCreationDate_, v7);

}

id ManagedPendingApplePayOrder.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPendingApplePayOrder.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPendingApplePayOrder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedPendingApplePayOrder.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedPendingApplePayOrder;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedPendingApplePayOrder.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

unint64_t static ManagedPendingApplePayOrder.existingPendingApplePayOrder(with:in:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v11 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedPendingApplePayOrder;
  v6 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  v12 = v11;
  v13 = v4;
  v14 = v5;
  v7 = _s10FinanceKit27ManagedPendingApplePayOrderC012predicateFordefG04withSo11NSPredicateCAA014FullyQualifiedG10IdentifierV_tFZ_0((uint64_t *)&v12);
  objc_msgSend(v6, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedPendingApplePayOrder.validateForInsert()()
{
  sub_23338B668((SEL *)&selRef_validateForInsert_);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedPendingApplePayOrder.validateForUpdate()()
{
  sub_23338B668((SEL *)&selRef_validateForUpdate_);
}

uint64_t sub_23338B668(SEL *a1)
{
  void *v1;
  uint64_t v2;
  unsigned int v4;
  id v5;
  id v6;
  uint64_t result;
  id v8;
  objc_super v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9.super_class = (Class)swift_getObjectType();
  v10[0] = 0;
  v9.receiver = v1;
  v4 = objc_msgSendSuper2(&v9, *a1, v10);
  v5 = v10[0];
  if (v4)
  {
    swift_getKeyPath();
    v6 = v5;
    sub_23330009C(v1);
    result = swift_release();
    if (!v2)
    {
      swift_getKeyPath();
      sub_23330009C(v1);
      return swift_release();
    }
  }
  else
  {
    v8 = v10[0];
    sub_23361D1B4();

    return swift_willThrow();
  }
  return result;
}

id _s10FinanceKit27ManagedPendingApplePayOrderC012predicateFordefG04withSo11NSPredicateCAA014FullyQualifiedG10IdentifierV_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626360;
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v8 = sub_2331683F0();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = sub_23361E6B4();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v3;
  *(_QWORD *)(v5 + 40) = sub_23361E6B4();
  sub_23361E408();
  v10 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  return v11;
}

id sub_23338B920@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderWebService);
  *a2 = result;
  return result;
}

id sub_23338B958(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderWebService_, *a1);
}

id sub_23338B96C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderType);
  *a2 = result;
  return result;
}

id sub_23338B9A4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderType_, *a1);
}

char *keypath_get_selector_transactionIdentifier()
{
  return sel_transactionIdentifier;
}

void sub_23338B9C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_transactionIdentifier, a2);
}

void sub_23338B9E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setTransactionIdentifier_);
}

void sub_23338B9EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_orderTypeIdentifier, a2);
}

void sub_23338BA08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setOrderTypeIdentifier_);
}

void sub_23338BA14(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_orderIdentifier, a2);
}

void sub_23338BA30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setOrderIdentifier_);
}

void sub_23338BA3C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_authenticationToken, a2);
}

void sub_23338BA58(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setAuthenticationToken_);
}

void sub_23338BA68(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setCreationDate_, v3);

}

id sub_23338BAB0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requestAttemptCount);
  *a2 = result;
  return result;
}

id sub_23338BAE0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestAttemptCount_, *a1);
}

char *keypath_get_selector_responseCount()
{
  return sel_responseCount;
}

id sub_23338BB08@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_responseCount);
  *a2 = result;
  return result;
}

id sub_23338BB38(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResponseCount_, *a1);
}

uint64_t type metadata accessor for ManagedPendingApplePayOrder()
{
  return objc_opt_self();
}

_QWORD *BankConnectConsentStore.__allocating_init(store:activityVoucherManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  v8 = sub_23338E204(a1, v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v8;
}

_QWORD *BankConnectConsentStore.init(store:activityVoucherManager:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_23338E1AC(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

_QWORD *BankConnectConsentStore.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = type metadata accessor for BankConnectCloudKitActivityVoucherManaging();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  v4 = (_QWORD *)swift_allocObject();
  v4[6] = v2;
  v4[7] = &protocol witness table for BankConnectCloudKitActivityVoucherManaging;
  v4[2] = a1;
  v4[3] = v3;
  swift_retain();
  return v4;
}

void BankConnectConsentStore.getConsent(forConsentID:)(uint64_t a1, unint64_t a2)
{
  sub_23338C394(a1, a2, "Getting consent for consentID: %s.");
}

void BankConnectConsentStore.getConsent(grantingAccessTo:)()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  id v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_256041CA0 != -1)
    swift_once();
  v0 = sub_23361DB80();
  __swift_project_value_buffer(v0, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v1 = sub_23361DB68();
  v2 = sub_23361E750();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315138;
    v8 = v4;
    v6 = v3 + 4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361ED98();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233164DCC(0, 0xE000000000000000, &v8);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v1, v2, "Getting consent for %s.", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v4, -1, -1);
    MEMORY[0x234934590](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(v7 + 16) + 16), sel_newBackgroundContext, v6);
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for BankConnectConsent();
  sub_23361E960();

}

void sub_23338C048(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for ManagedConsent();
  *(_QWORD *)&v20 = a1;
  *((_QWORD *)&v20 + 1) = a2;
  v21 = a3;
  v22 = a4;
  v13 = (void *)static ManagedConsent.existingConsent(grantingAccessTo:in:)(&v20, a5);
  if (!v6)
  {
    if (v13)
    {
      BankConnectConsent.init(_:)(v13, a6);
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v14 = sub_23361DB80();
      __swift_project_value_buffer(v14, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v15 = sub_23361DB68();
      v16 = sub_23361E768();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        *(_QWORD *)&v20 = 0;
        *(_DWORD *)v17 = 136315138;
        v23 = v19;
        *((_QWORD *)&v20 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23361ED98();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v20 = sub_233164DCC(v20, *((unint64_t *)&v20 + 1), &v23);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v15, v16, "Failed to find consent for %s.", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v19, -1, -1);
        MEMORY[0x234934590](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_23330B8C0();
      swift_allocError();
      *v18 = 1;
      swift_willThrow();
    }
  }
}

void BankConnectConsentStore.getPendingConsent(forConsentID:)(uint64_t a1, unint64_t a2)
{
  sub_23338C394(a1, a2, "Getting pending consent for consentID: %s");
}

void sub_23338C394(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v5 = v3;
  if (qword_256041CA0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v9 = sub_23361DB68();
  v10 = sub_23361E750();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v14 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(a1, a2, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v9, v10, a3, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v12, -1, -1);
    MEMORY[0x234934590](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v13 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 16) + 16), sel_newBackgroundContext);
  MEMORY[0x24BDAC7A8](v13);
  type metadata accessor for BankConnectConsent();
  sub_23361E960();

}

uint64_t sub_23338C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)())
{
  uint64_t v7;
  uint64_t result;

  a5(0);
  result = sub_23361E960();
  if (!v7)
    return a7();
  return result;
}

void BankConnectConsentStore.updateConsent(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v1;
  v5 = type metadata accessor for BankConnectConsent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  sub_2331684BC(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  v9 = sub_23361DB68();
  v10 = sub_23361E750();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v23 = v2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v22 = v3;
    *(_DWORD *)v12 = 136315138;
    v25 = v13;
    v14 = (uint64_t *)&v7[*(int *)(v5 + 20)];
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    v24 = sub_233164DCC(v15, v16, &v25);
    v3 = v22;
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
    _os_log_impl(&dword_233151000, v9, v10, "Updating consent for consentID: %s.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v12, -1, -1);
  }
  else
  {
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  }

  v17 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_newBackgroundContext);
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(&v21 - 4) = v3;
  *(&v21 - 3) = a1;
  *(&v21 - 2) = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(&v21 - 4) = (uint64_t)sub_23338E348;
  *(&v21 - 3) = v20;
  *(&v21 - 2) = v19;
  sub_23361E960();

}

void sub_23338C90C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13[9];

  v13[8] = *(void **)MEMORY[0x24BDAC8D0];
  v7 = a2 + *(int *)(type metadata accessor for BankConnectConsent() + 20);
  v9 = *(void **)v7;
  v8 = *(void **)(v7 + 8);
  v13[3] = v9;
  v13[4] = v8;
  v13[5] = a3;
  v13[6] = a1;
  type metadata accessor for ManagedConsent();
  sub_23361E960();
  if (!v3)
  {
    v10 = v13[0];
    _s10FinanceKit14ManagedConsentC6update_4withyAC_AA011BankConnectD0VtFZ_0(v13[0], a2);
    v13[0] = 0;
    if ((objc_msgSend(a3, sel_save_, v13) & 1) != 0)
    {
      v11 = v13[0];
    }
    else
    {
      v12 = v13[0];
      sub_23361D1B4();

      swift_willThrow();
    }

  }
}

void BankConnectConsentStore.updateConsent(_:consentStatus:lastUpdatedAt:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v3;
  v9 = type metadata accessor for RawBankConnectData.Consent(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)&v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LODWORD(v12) = *a2;
  if (qword_256041CA0 != -1)
    swift_once();
  v13 = sub_23361DB80();
  __swift_project_value_buffer(v13, (uint64_t)qword_2560495B0);
  sub_2331684BC(a1, (uint64_t)v11, type metadata accessor for RawBankConnectData.Consent);
  v14 = sub_23361DB68();
  v15 = sub_23361E750();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v31 = v4;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v28 = v12;
    v12 = v18;
    v33 = v18;
    v29 = a1;
    v30 = v5;
    *(_DWORD *)v17 = 136315138;
    v19 = a3;
    v20 = *v11;
    v21 = v11[1];
    swift_bridgeObjectRetain();
    v32 = sub_233164DCC(v20, v21, &v33);
    a1 = v29;
    sub_23361EBC4();
    a3 = v19;
    v5 = v30;
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v11, type metadata accessor for RawBankConnectData.Consent);
    _os_log_impl(&dword_233151000, v14, v15, "Updating consent for consentID: %s.", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v12;
    LOBYTE(v12) = v28;
    MEMORY[0x234934590](v22, -1, -1);
    MEMORY[0x234934590](v17, -1, -1);
  }
  else
  {
    sub_233168500((uint64_t)v11, type metadata accessor for RawBankConnectData.Consent);
  }

  v23 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 16) + 16), sel_newBackgroundContext);
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)&v27[-48] = v5;
  *(_QWORD *)&v27[-40] = a1;
  *(_QWORD *)&v27[-32] = v24;
  v27[-24] = v12;
  *(_QWORD *)&v27[-16] = a3;
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)&v27[-32] = sub_23338E364;
  *(_QWORD *)&v27[-24] = v26;
  *(_QWORD *)&v27[-16] = v25;
  sub_23361E960();

}

void sub_23338CCDC(void *a1, id *a2, void *a3, char a4)
{
  uint64_t v4;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12[9];

  v12[8] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = a2[1];
  v12[3] = *a2;
  v12[4] = v8;
  v12[5] = a3;
  v12[6] = a1;
  type metadata accessor for ManagedConsent();
  sub_23361E960();
  if (!v4)
  {
    v9 = v12[0];
    LOBYTE(v12[0]) = a4 & 1;
    _s10FinanceKit14ManagedConsentC6update_4with13consentStatus13lastUpdatedAtyAC_AA18RawBankConnectDataO0D0VAA0mndH0O10Foundation4DateVtFZ_0(v9, a2, (unsigned __int8 *)v12);
    v12[0] = 0;
    if ((objc_msgSend(a3, sel_save_, v12) & 1) != 0)
    {
      v10 = v12[0];
    }
    else
    {
      v11 = v12[0];
      sub_23361D1B4();

      swift_willThrow();
    }

  }
}

void BankConnectConsentStore.updateConsent(withConsentID:consentStatus:lastUpdatedAt:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v13 = v3;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(a1, a2, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Updating consent for consentID: %s.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_newBackgroundContext, v13);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_23361E960();

}

void sub_23338D060(void *a1, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v5;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12[9];

  v12[8] = *(id *)MEMORY[0x24BDAC8D0];
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  type metadata accessor for ManagedConsent();
  sub_23361E960();
  if (!v5)
  {
    v8 = v12[0];
    objc_msgSend(v12[0], sel_setConsentStatusValue_, a5 & 1);
    v9 = (void *)sub_23361D5B0();
    objc_msgSend(v12[0], sel_setLastUpdatedAt_, v9);

    v12[0] = 0;
    if ((objc_msgSend(a4, sel_save_, v12) & 1) != 0)
    {
      v10 = v12[0];
    }
    else
    {
      v11 = v12[0];
      sub_23361D1B4();

      swift_willThrow();
    }

  }
}

uint64_t sub_23338D190@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X4>, uint64_t (*a5)(uint64_t, unint64_t, uint64_t)@<X5>, const char *a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;

  a4(0);
  result = a5(a1, a2, a3);
  if (!v7)
  {
    if (result)
    {
      *a7 = result;
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v15 = sub_23361DB80();
      __swift_project_value_buffer(v15, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v16 = sub_23361DB68();
      v17 = sub_23361E768();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v21 = v19;
        *(_DWORD *)v18 = 136315138;
        swift_bridgeObjectRetain();
        sub_233164DCC(a1, a2, &v21);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v16, v17, a6, v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v19, -1, -1);
        MEMORY[0x234934590](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_23330B8C0();
      swift_allocError();
      *v20 = 1;
      return swift_willThrow();
    }
  }
  return result;
}

void BankConnectConsentStore.setIdentifiedOutdatedAtAndApplyActivityVoucherIfNeeded(forConsentID:userPresence:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v6 = v3;
  v10 = type metadata accessor for UserPresence();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for UserPresence);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  sub_233168500((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for UserPresence);
  if ((_DWORD)a3 == 1)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v14 = sub_23361DB80();
    __swift_project_value_buffer(v14, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain_n();
    v15 = sub_23361DB68();
    v16 = sub_23361E780();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v33 = v18;
      v31 = v4;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      v32 = sub_233164DCC(a1, a2, &v33);
      v5 = v31;
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v15, v16, "Out of date token detected for consentID: %s. User is present so applying import voucher and setting the identified as outdated date if needed.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v18, -1, -1);
      MEMORY[0x234934590](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v24 = objc_msgSend(*(id *)(v6[2] + 16), sel_newBackgroundContext);
    v25 = MEMORY[0x24BDAC7A8](v24);
    *(&v31 - 4) = a1;
    *(&v31 - 3) = a2;
    *(&v31 - 2) = v25;
    v26 = MEMORY[0x24BDAC7A8](v25);
    *(&v31 - 4) = (uint64_t)sub_23338E3AC;
    *(&v31 - 3) = v27;
    *(&v31 - 2) = v26;
    sub_23361E960();
    if (!v5)
    {
      v28 = v6 + 3;
      v29 = v6[6];
      v30 = v6[7];
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v30 + 8))(a1, a2, v29, v30);
    }

  }
  else
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v19 = sub_23361DB80();
    __swift_project_value_buffer(v19, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain_n();
    v20 = sub_23361DB68();
    v21 = sub_23361E780();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v33 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain();
      v32 = sub_233164DCC(a1, a2, &v33);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v20, v21, "Out of date token detected for consentID: %s. User is not present so suppressing the error and waiting for updated token.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v23, -1, -1);
      MEMORY[0x234934590](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_23338D830(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  uint64_t v48;
  uint8_t *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  id v65;
  id v66;
  id v67;
  char *v68;
  uint8_t *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  unint64_t v81;
  uint64_t v82[2];

  v78 = a2;
  v79 = a3;
  v82[1] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23361D538();
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v72 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v75 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23361D634();
  v8 = *(_QWORD *)(v76 - 8);
  v9 = MEMORY[0x24BDAC7A8](v76);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v68 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v68 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v68 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (uint8_t *)&v68 - v21;
  type metadata accessor for ManagedConsent();
  v23 = v77;
  v24 = (void *)static ManagedConsent.existingConsent(withConsentID:in:)(a1, (uint64_t)v78, (uint64_t)v79);
  if (v23)
    return;
  v69 = v22;
  v70 = a1;
  v68 = v11;
  v71 = v14;
  v77 = 0;
  v25 = (uint64_t)v75;
  v26 = v76;
  if (!v24)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v43 = sub_23361DB80();
    __swift_project_value_buffer(v43, (uint64_t)qword_2560495B0);
    v44 = (unint64_t)v78;
    swift_bridgeObjectRetain_n();
    v45 = sub_23361DB68();
    v46 = sub_23361E768();
    v47 = os_log_type_enabled(v45, v46);
    v48 = v70;
    if (v47)
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = (void *)swift_slowAlloc();
      v80 = v50;
      *(_DWORD *)v49 = 136315138;
      swift_bridgeObjectRetain();
      v82[0] = sub_233164DCC(v48, v44, (uint64_t *)&v80);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v45, v46, "Failed to find consent with consentID: %s. Unable to set the date when the token was identified as outdated if needed.", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v50, -1, -1);
      MEMORY[0x234934590](v49, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  v78 = v24;
  v27 = objc_msgSend(v24, sel_consentTokenIdentifiedAsOutdatedAt);
  if (!v27)
  {
    v29 = v8;
    v31 = v26;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v25, 1, 1, v26);
    goto LABEL_14;
  }
  v28 = v27;
  sub_23361D5EC();

  v29 = v8;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v31 = v26;
  v30(v25, v20, v26);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v25, 1, v26) == 1)
  {
LABEL_14:
    sub_2331D0F20(v25);
    sub_23361D5F8();
    v51 = (void *)sub_23361D5B0();
    objc_msgSend(v78, sel_setConsentTokenIdentifiedAsOutdatedAt_, v51);

    if (qword_256041CA0 != -1)
      swift_once();
    v52 = sub_23361DB80();
    __swift_project_value_buffer(v52, (uint64_t)qword_2560495B0);
    v53 = v71;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v71, v17, v31);
    v54 = sub_23361DB68();
    v55 = sub_23361E780();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v75 = v17;
      v57 = (uint8_t *)v56;
      v58 = swift_slowAlloc();
      v82[0] = v58;
      *(_DWORD *)v57 = 136315138;
      v69 = v57 + 4;
      v70 = v29;
      v59 = v72;
      MEMORY[0x234930D74]();
      sub_233385804();
      v60 = v74;
      sub_23361D61C();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v59, v60);
      v80 = (id)sub_233164DCC((uint64_t)v80, v81, v82);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      v61 = *(void (**)(char *, uint64_t))(v70 + 8);
      v62 = v76;
      v61(v53, v76);
      _os_log_impl(&dword_233151000, v54, v55, "Consent was not already identified as outdated, setting date to: %s.", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v58, -1, -1);
      MEMORY[0x234934590](v57, -1, -1);

      v61(v75, v62);
    }
    else
    {

      v63 = *(void (**)(char *, uint64_t))(v29 + 8);
      v63(v53, v31);
      v63(v17, v31);
    }
    goto LABEL_21;
  }
  v32 = v69;
  v30((uint64_t)v69, (char *)v25, v26);
  v33 = v74;
  if (qword_256041CA0 != -1)
    swift_once();
  v34 = sub_23361DB80();
  __swift_project_value_buffer(v34, (uint64_t)qword_2560495B0);
  v35 = v68;
  (*(void (**)(char *, uint8_t *, uint64_t))(v8 + 16))(v68, v32, v31);
  v36 = sub_23361DB68();
  v37 = sub_23361E780();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v82[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v75 = (char *)(v38 + 4);
    v40 = v72;
    MEMORY[0x234930D74]();
    sub_233385804();
    sub_23361D61C();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v40, v33);
    v80 = (id)sub_233164DCC((uint64_t)v80, v81, v82);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v29 + 8);
    v42 = v76;
    v41(v68, v76);
    _os_log_impl(&dword_233151000, v36, v37, "Consent was already identified as outdated at: %s.", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v39, -1, -1);
    MEMORY[0x234934590](v38, -1, -1);

    v41((char *)v69, v42);
  }
  else
  {

    v64 = *(void (**)(char *, uint64_t))(v8 + 8);
    v64(v35, v31);
    v64((char *)v32, v31);
  }
LABEL_21:
  v65 = v79;
  if (objc_msgSend(v79, sel_hasChanges, v68))
  {
    v80 = 0;
    if (!objc_msgSend(v65, sel_save_, &v80))
    {
      v67 = v80;
      sub_23361D1B4();

      swift_willThrow();
      return;
    }
    v66 = v80;
  }

}

uint64_t BankConnectConsentStore.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return v0;
}

uint64_t BankConnectConsentStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocClassInstance();
}

void sub_23338E0CC(uint64_t a1, unint64_t a2)
{
  BankConnectConsentStore.getConsent(forConsentID:)(a1, a2);
}

void sub_23338E0EC()
{
  BankConnectConsentStore.getConsent(grantingAccessTo:)();
}

void sub_23338E10C(uint64_t a1, unint64_t a2)
{
  BankConnectConsentStore.getPendingConsent(forConsentID:)(a1, a2);
}

void sub_23338E12C(uint64_t a1)
{
  BankConnectConsentStore.updateConsent(_:)(a1);
}

void sub_23338E14C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  BankConnectConsentStore.updateConsent(_:consentStatus:lastUpdatedAt:)(a1, a2, a3);
}

void sub_23338E16C(uint64_t a1, unint64_t a2)
{
  BankConnectConsentStore.updateConsent(withConsentID:consentStatus:lastUpdatedAt:)(a1, a2);
}

void sub_23338E18C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  BankConnectConsentStore.setIdentifiedOutdatedAtAndApplyActivityVoucherIfNeeded(forConsentID:userPresence:)(a1, a2, a3);
}

_QWORD *sub_23338E1AC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;

  a3[6] = a4;
  a3[7] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3 + 3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  a3[2] = a1;
  return a3;
}

_QWORD *sub_23338E204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v15;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  v12[6] = a4;
  v12[7] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12 + 3);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_0, v11, a4);
  v12[2] = a1;
  return v12;
}

uint64_t sub_23338E2C0()
{
  uint64_t *v0;

  return sub_23338C5D4(v0[2], v0[3], v0[4], v0[5], (void (*)(_QWORD))type metadata accessor for ManagedConsent, (uint64_t)sub_23338E464, (uint64_t (*)())BankConnectConsent.init(_:));
}

void sub_23338E2F4(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_23338C048(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_23338E314()
{
  uint64_t *v0;

  return sub_23338C5D4(v0[2], v0[3], v0[4], v0[5], (void (*)(_QWORD))type metadata accessor for ManagedPendingConsent, (uint64_t)sub_23338E430, (uint64_t (*)())BankConnectConsent.init(_:));
}

void sub_23338E348()
{
  uint64_t v0;

  sub_23338C90C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_23338E364()
{
  uint64_t v0;

  sub_23338CCDC(*(void **)(v0 + 16), *(id **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void sub_23338E388()
{
  uint64_t v0;

  sub_23338D060(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48));
}

void sub_23338E3AC()
{
  uint64_t v0;

  sub_23338D830(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t type metadata accessor for BankConnectConsentStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectConsentStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectConsentStore.__allocating_init(store:activityVoucherManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_23338E3FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23338D190(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(_QWORD))type metadata accessor for ManagedConsent, (uint64_t (*)(uint64_t, unint64_t, uint64_t))static ManagedConsent.existingConsent(withConsentID:in:), "Failed to find consent for consentID: %s", a1);
}

uint64_t sub_23338E430@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23338D190(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(_QWORD))type metadata accessor for ManagedPendingConsent, (uint64_t (*)(uint64_t, unint64_t, uint64_t))static ManagedPendingConsent.existingConsent(withConsentID:in:), "Failed to find pending consent for consentID: %s", a1);
}

uint64_t sub_23338E464@<X0>(uint64_t *a1@<X8>)
{
  return sub_23338E3FC(a1);
}

uint64_t BankConnectService.updateConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23338E4D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[14];
  v2 = v0[11];
  v3 = v0[10];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23338E534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return BankConnectService.updateConsentStatus(forConsentID:)(a1, a2);
}

uint64_t dispatch thunk of BankConnectConsentStatusUpdating.updateConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return v11(a1, a2, a3, a4);
}

uint64_t FinancialInsightsService.__allocating_init(connections:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  result = sub_23361EF30();
  v3 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x234933120](i, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      objc_msgSend(*(id *)(v6 + 16), sel_resume);
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t FinancialInsightsService.init(connections:)(unint64_t a1)
{
  uint64_t v1;

  v1 = sub_23338E9E4(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FinancialInsightsService.__allocating_init(extensionFinder:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23338E75C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 16);
  v3 = v1[3];
  v2 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_23338E7E4;
  return static ExtensionServiceConfiguration.makeConnections<A>(extensionFinder:withBundleIdentifiers:)((uint64_t)v4, 0, (uint64_t)&type metadata for FinancialInsightsServiceConfiguration, v3, (uint64_t)&protocol witness table for FinancialInsightsServiceConfiguration, v2);
}

uint64_t sub_23338E7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23338E850()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  type metadata accessor for FinancialInsightsService();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    v9 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v9);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
  }
  swift_bridgeObjectRetain();
  result = sub_23361EF30();
  v3 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = *(_QWORD *)(v0 + 32) + 32;
    do
    {
      if (v6)
      {
        v8 = MEMORY[0x234933120](v5, *(_QWORD *)(v0 + 32));
      }
      else
      {
        v8 = *(_QWORD *)(v7 + 8 * v5);
        swift_retain();
      }
      ++v5;
      objc_msgSend(*(id *)(v8 + 16), sel_resume);
      swift_release();
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23338E970()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinancialInsightsService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FinancialInsightsService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23338E9E4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = a1;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return v1;
  }
  swift_bridgeObjectRetain();
  result = sub_23361EF30();
  v3 = result;
  if (!result)
    return v1;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x234933120](i, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      objc_msgSend(*(id *)(v6 + 16), sel_resume);
      swift_release();
    }
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FinancialInsightsService()
{
  return objc_opt_self();
}

uint64_t method lookup function for FinancialInsightsService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FinancialInsightsService.__allocating_init(connections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23338EAF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_23361D6A0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v16[1] = v1;
    v19 = MEMORY[0x24BEE4AF8];
    sub_233273918(0, v7, 0);
    v8 = v19;
    v9 = type metadata accessor for InternalAccount();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v18 = v9;
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v6, v11 + *(int *)(v18 + 24), v3);
      v19 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_233273918(v13 > 1, v14 + 1, 1);
        v8 = v19;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v6, v3);
      v11 += v17;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t BankConnectConsentConfirmationUpdater.updateConsentsForAccounts(accounts:confirmationTime:in:)()
{
  return sub_23361E960();
}

void sub_23338ECB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18[17];

  v18[16] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_23338EAF8(a1);
  type metadata accessor for ManagedConsent();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5F8]), sel_initWithEntity_, v6);

  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
  *(_QWORD *)(v8 + 64) = sub_23338EFD4();
  *(_QWORD *)(v8 + 32) = v5;
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25604BE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v18[0] = (id)0xD000000000000020;
  v18[1] = (id)0x8000000233673930;
  sub_23361ED50();
  v11 = sub_23361D634();
  *(_QWORD *)(inited + 96) = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, a2, v11);
  sub_23315F810(inited);
  v13 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setPropertiesToUpdate_, v13);

  v18[0] = 0;
  v14 = objc_msgSend(a3, sel_executeRequest_error_, v7, v18);
  if (v14)
  {
    v15 = v14;
    v16 = v18[0];

  }
  else
  {
    v17 = v18[0];
    sub_23361D1B4();

    swift_willThrow();
  }
}

void sub_23338EF48()
{
  uint64_t v0;

  sub_23338ECB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_23338EF64()
{
  return sub_23361E960();
}

uint64_t dispatch thunk of BankConnectConsentConfirmationUpdating.updateConsentsForAccounts(accounts:confirmationTime:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for BankConnectConsentConfirmationUpdater()
{
  return &type metadata for BankConnectConsentConfirmationUpdater;
}

unint64_t sub_23338EFD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604BE28;
  if (!qword_25604BE28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C3A0);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_25604BE28);
  }
  return result;
}

void sub_23338F020()
{
  sub_23338EF48();
}

uint64_t type metadata accessor for MapsInsightsExtensionModel()
{
  return objc_opt_self();
}

uint64_t sub_23338F054(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_23361EF30())
  {
    for (i = 4; ; ++i)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](i - 4, a3) : *(id *)(a3 + 8 * i);
      v9 = v8;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v8;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_23318A1F8(v12);
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23338F1A0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  os_activity_scope_state_s aBlock;
  uint64_t (*v9)(uint64_t);
  void *v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_254244AC8 != -1)
    swift_once();
  v2 = qword_254244AC0;
  v3 = swift_allocObject();
  swift_weakInit();
  v11 = sub_2333947A8;
  v12 = v3;
  aBlock.opaque[0] = MEMORY[0x24BDAC760];
  aBlock.opaque[1] = 1107296256;
  v9 = sub_23338F6BC;
  v10 = &block_descriptor_10;
  v4 = _Block_copy(&aBlock);
  swift_release();
  v5 = objc_msgSend(v1, sel_addObserverForName_object_queue_usingBlock_, v2, 0, 0, v4);
  _Block_release(v4);

  *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_notificationsObserver) = v5;
  swift_unknownObjectRelease();
  aBlock.opaque[0] = 0;
  aBlock.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v6 = _os_activity_create(&dword_233151000, "orders/MapsSuggestions", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v6, &aBlock);
  sub_23338F760(v0);
  os_activity_scope_leave(&aBlock);
  return swift_unknownObjectRelease();
}

uint64_t sub_23338F378()
{
  NSObject *v0;
  os_activity_scope_state_s state;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v0 = _os_activity_create(&dword_233151000, "orders/MapsSuggestions", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v0, &state);
  sub_23338F444();
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

void sub_23338F444()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_254246760 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_254246748);
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Some orders changed, refetching pickup orders", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23338FD4C();
    if (v0)
    {
      swift_release();
      v5 = v0;
      v6 = v0;
      v7 = sub_23361DB68();
      v8 = sub_23361E768();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v9 = 138412290;
        v11 = v0;
        v12 = _swift_stdlib_bridgeErrorToNSError();
        sub_23361EBC4();
        *v10 = v12;

        _os_log_impl(&dword_233151000, v7, v8, "Failed to fetch changed orders: %@", v9, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
        swift_arrayDestroy();
        MEMORY[0x234934590](v10, -1, -1);
        MEMORY[0x234934590](v9, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_23338F6BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23361CBA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23361CB90();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_23338F760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v56 = sub_23361D748();
  v2 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D868();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D538();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE448];
  v15 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  MEMORY[0x234930D74](v16);
  v49 = sub_233167C58((unint64_t *)&qword_254246738, v14, MEMORY[0x24BDCE430]);
  sub_23361D61C();
  v48 = *(void (**)(char *, uint64_t))(v15 + 8);
  v48(v18, v13);
  v47 = v59;
  v51 = v60;
  type metadata accessor for TimeWindow(0);
  v19 = v2;
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v21 = v56;
  v20(v4, *MEMORY[0x24BDCEF50], v56);
  sub_23361D754();
  v22 = v4;
  v23 = v54;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v21);
  sub_23361D808();
  v24 = v7;
  v25 = v55;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v25) == 1)
  {
    __break(1u);
  }
  else
  {
    v26 = v50;
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v50, v10, v25);
    MEMORY[0x234930D74](v27);
    sub_23361D61C();
    v48(v18, v13);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
    v28 = v59;
    v29 = v60;
    if (qword_254246760 != -1)
      swift_once();
    v30 = sub_23361DB80();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_254246748);
    v32 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = sub_23361DB68();
    v34 = sub_23361E780();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v58 = v31;
      v59 = v36;
      v37 = v36;
      *(_DWORD *)v35 = 136315394;
      swift_bridgeObjectRetain();
      v61 = sub_233164DCC(v47, v32, &v59);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v61 = sub_233164DCC(v28, v29, &v59);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v33, v34, "Fetching initial set of orders, window start date: %s, window end date: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v37, -1, -1);
      MEMORY[0x234934590](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v38 = v53;
    sub_23338FD4C();
    if (v38)
    {
      v39 = v38;
      v40 = v38;
      v41 = sub_23361DB68();
      v42 = sub_23361E768();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v43 = 138412290;
        v45 = v38;
        v46 = _swift_stdlib_bridgeErrorToNSError();
        v59 = v46;
        sub_23361EBC4();
        *v44 = v46;

        _os_log_impl(&dword_233151000, v41, v42, "Failed to perform initial fetch for orders: %@", v43, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
        swift_arrayDestroy();
        MEMORY[0x234934590](v44, -1, -1);
        MEMORY[0x234934590](v43, -1, -1);

      }
      else
      {

      }
    }
  }
}

void sub_23338FD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v21[2];

  v2 = v0;
  v3 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_timeWindow, (uint64_t)v5, type metadata accessor for TimeWindow);
  swift_storeEnumTagMultiPayload();
  v6 = sub_2331CB984((uint64_t)v5);
  sub_233168500((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  if (!v1)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_2331C9680(v7);
    swift_bridgeObjectRelease();
    v9 = OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_lastOrderPickupsSet;
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_lastOrderPickupsSet);
    if (v10
      && (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          v11 = sub_2333E3D20(v8, v10),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v11 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_254246760 != -1)
        swift_once();
      v12 = sub_23361DB80();
      __swift_project_value_buffer(v12, (uint64_t)qword_254246748);
      v13 = sub_23361DB68();
      v14 = sub_23361E780();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_233151000, v13, v14, "Pickup orders haven't changed", v15, 2u);
        MEMORY[0x234934590](v15, -1, -1);
      }

    }
    else
    {
      v16 = *(_QWORD *)(v8 + 16);
      if (qword_254246760 != -1)
        swift_once();
      v17 = sub_23361DB80();
      __swift_project_value_buffer(v17, (uint64_t)qword_254246748);
      v18 = sub_23361DB68();
      v19 = sub_23361E780();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v20 = 134217984;
        v21[1] = v16;
        sub_23361EBC4();
        _os_log_impl(&dword_233151000, v18, v19, "Pickup orders changed. Fetched %ld active pickup orders", v20, 0xCu);
        MEMORY[0x234934590](v20, -1, -1);
      }

      *(_QWORD *)(v2 + v9) = v8;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_callback))(v6);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t FinanceStore.mapsSuggestionsOrderPickups(inTimeWindow:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v4, type metadata accessor for TimeWindow);
  swift_storeEnumTagMultiPayload();
  v5 = sub_2331CB984((uint64_t)v4);
  sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  return v5;
}

uint64_t sub_233390110()
{
  uint64_t v0;

  swift_release();
  sub_233168500(v0 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_timeWindow, type metadata accessor for TimeWindow);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MapsSuggestionsOrderPickup.orderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 MapsSuggestionsOrderPickup.orderIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*MapsSuggestionsOrderPickup.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MapsSuggestionsOrderPickup.pickupIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsSuggestionsOrderPickup.pickupIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MapsSuggestionsOrderPickup.pickupIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MapsSuggestionsOrderPickup.pickupLocationDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsSuggestionsOrderPickup.pickupLocationDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*MapsSuggestionsOrderPickup.pickupLocationDisplayName.modify())()
{
  return nullsub_1;
}

uint64_t MapsSuggestionsOrderPickup.pickupWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 28), a1, type metadata accessor for Order.FulfillmentWindow);
}

uint64_t type metadata accessor for MapsSuggestionsOrderPickup(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254246E18);
}

uint64_t MapsSuggestionsOrderPickup.pickupWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 28);
  return sub_233390378(a1, v3);
}

uint64_t sub_233390378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MapsSuggestionsOrderPickup.pickupWindow.modify())(_QWORD)
{
  type metadata accessor for MapsSuggestionsOrderPickup(0);
  return nullsub_1;
}

void *MapsSuggestionsOrderPickup.pickupAddress.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 32));
  v2 = v1;
  return v1;
}

void MapsSuggestionsOrderPickup.pickupAddress.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 32);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*MapsSuggestionsOrderPickup.pickupAddress.modify())(_QWORD)
{
  type metadata accessor for MapsSuggestionsOrderPickup(0);
  return nullsub_1;
}

void *MapsSuggestionsOrderPickup.pickupLocation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 36));
  v2 = v1;
  return v1;
}

void MapsSuggestionsOrderPickup.pickupLocation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 36);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*MapsSuggestionsOrderPickup.pickupLocation.modify())(_QWORD)
{
  type metadata accessor for MapsSuggestionsOrderPickup(0);
  return nullsub_1;
}

uint64_t MapsSuggestionsOrderPickup.merchantDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsSuggestionsOrderPickup.merchantDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsSuggestionsOrderPickup.merchantDisplayName.modify())(_QWORD)
{
  type metadata accessor for MapsSuggestionsOrderPickup(0);
  return nullsub_1;
}

uint64_t MapsSuggestionsOrderPickup.merchantBusinessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 44);
  return sub_233199624(v3, a1);
}

uint64_t MapsSuggestionsOrderPickup.merchantBusinessChatURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MapsSuggestionsOrderPickup(0) + 44);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*MapsSuggestionsOrderPickup.merchantBusinessChatURL.modify())(_QWORD)
{
  type metadata accessor for MapsSuggestionsOrderPickup(0);
  return nullsub_1;
}

uint64_t static MapsSuggestionsOrderPickup.fetch(inTimeWindow:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  objc_super v61;
  __int16 v62;

  v49 = a2;
  v58 = a1;
  v2 = sub_23361D748();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D868();
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  v52 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for ManagedOrder();
  v61.receiver = (id)swift_getObjCClassFromMetadata();
  v61.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit12ManagedOrder;
  v14 = objc_msgSendSuper2(&v61, sel_fetchRequest);
  objc_msgSend(v14, sel_setReturnsObjectsAsFaults_, 0);
  v15 = (void *)sub_23361E3D8();
  v48 = v14;
  objc_msgSend(v14, sel_setRelationshipKeyPathsForPrefetching_, v15);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v16 + 16) = xmmword_233623D60;
  v18 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v18;
  *(_WORD *)(v16 + 32) = 0;
  v46 = sub_23361E6B4();
  v59 = 0;
  v60 = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  v59 = 0xD000000000000025;
  v60 = 0x8000000233674A00;
  v62 = 0;
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  v45 = sub_23361E6B4();
  swift_bridgeObjectRelease();
  v44 = sub_23361E6B4();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_233623D50;
  *(_QWORD *)(v19 + 56) = v17;
  *(_QWORD *)(v19 + 64) = MEMORY[0x24BEE3F78];
  *(_WORD *)(v19 + 32) = 2;
  type metadata accessor for TimeWindow(0);
  v21 = v54;
  v20 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v4, *MEMORY[0x24BDCEF50], v55);
  sub_23361D754();
  v22 = v4;
  v23 = v51;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
  v24 = v53;
  v25 = v52;
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v57);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v23);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v13, v24, v23);
    v27 = sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v23);
    *(_QWORD *)(v19 + 96) = sub_233168668(0, &qword_254246F78);
    *(_QWORD *)(v19 + 104) = sub_2331E8D34();
    *(_QWORD *)(v19 + 72) = v27;
    v28 = (void *)sub_23361E6B4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_2336328D0;
    v31 = (void *)v45;
    v30 = (void *)v46;
    *(_QWORD *)(v29 + 32) = v46;
    *(_QWORD *)(v29 + 40) = v31;
    v32 = (void *)v44;
    *(_QWORD *)(v29 + 48) = v44;
    *(_QWORD *)(v29 + 56) = v28;
    v59 = v29;
    sub_23361E408();
    v33 = v30;
    v34 = v31;
    v35 = v32;
    v36 = v28;
    v37 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v38 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v37);

    v39 = v48;
    objc_msgSend(v48, sel_setPredicate_, v38);

    v40 = v50;
    v41 = sub_23361E984();
    if (v40)
    {

    }
    else
    {
      v42 = v41;
      MEMORY[0x24BDAC7A8](v41);
      *(&v43 - 2) = v58;
      v37 = (void *)sub_23338F054((void (*)(uint64_t *__return_ptr, id *))sub_233390CBC, (uint64_t)(&v43 - 4), v42);
      swift_bridgeObjectRelease();

    }
    return (uint64_t)v37;
  }
  return result;
}

id sub_233390BE8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  id v5;
  id result;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  v5 = *a1;
  result = objc_msgSend(*a1, sel_ecommerceOrderContent);
  if (result)
  {
    v7 = result;
    v8 = ManagedECommerceOrderContent.pickupFulfillments.getter();
    MEMORY[0x24BDAC7A8](v8);
    v10[2] = a2;
    v10[3] = v5;
    v10[4] = v7;
    v9 = sub_2334C8104((void (*)(id *))sub_2333947B8, (uint64_t)v10, v8);

    result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v9;
  return result;
}

id sub_233390CBC@<X0>(id *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_233390BE8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_233390CD4@<X0>(void **a1@<X0>, char *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  id v69;
  id v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  Swift::String v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  Swift::String v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  int *v99;
  _QWORD v100[2];
  uint64_t *v101;
  id v102;
  id v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *object;
  uint64_t countAndFlagsBits;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;

  v102 = a3;
  v103 = a4;
  v116 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v7);
  v104 = (char *)v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_23361D748();
  v112 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  object = (char *)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_23361D868();
  countAndFlagsBits = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v109 = (char *)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v108);
  v14 = (char *)v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v118 = v15;
  v119 = v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v107 = (uint64_t)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v106 = (char *)v100 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v117 = (char *)v100 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v100 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v121 = (char *)v100 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Order.FulfillmentWindow(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v105 = (uint64_t)v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)v100 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v120 = (uint64_t)v100 - v37;
  v38 = *a1;
  if (ManagedOrderPickupFulfillment.status.getter() != 2)
  {
    v41 = type metadata accessor for MapsSuggestionsOrderPickup(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a5, 1, 1, v41);
  }
  v101 = a5;
  v39 = objc_msgSend(v38, sel_address);

  if (!v39)
  {
    v40 = objc_msgSend(v38, sel_location);

    if (!v40)
      goto LABEL_19;
  }
  ManagedOrderPickupFulfillment.pickupWindow.getter(v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_233168608((uint64_t)v29, &qword_256043808);
LABEL_19:
    v68 = type metadata accessor for MapsSuggestionsOrderPickup(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v101, 1, 1, v68);
  }
  v43 = v120;
  sub_233168580((uint64_t)v29, v120, type metadata accessor for Order.FulfillmentWindow);
  sub_2331684BC(v43, (uint64_t)v36, type metadata accessor for Order.FulfillmentWindow);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v36, (uint64_t)v14, type metadata accessor for TimeWindow);
    v45 = v118;
    v44 = v119;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v25, v14, v118);
    sub_233168500((uint64_t)v14, type metadata accessor for TimeWindow);
  }
  else
  {
    v45 = v118;
    v44 = v119;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v25, v36, v118);
  }
  v46 = v121;
  v47 = sub_233167C58((unint64_t *)&qword_2560436A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v48 = v116;
  v49 = sub_23361E0F0();
  v50 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v100[1] = v47;
  v100[0] = v50;
  if ((v49 & 1) != 0)
  {
    v51 = v46;
    v52 = v25;
  }
  else
  {
    v51 = v46;
    v52 = v48;
  }
  v50(v51, v52, v45);
  v53 = *(void (**)(char *, uint64_t))(v44 + 8);
  v53(v25, v45);
  v54 = v112;
  v55 = object;
  v56 = v115;
  (*(void (**)(char *, _QWORD, uint64_t))(v112 + 104))(object, *MEMORY[0x24BDCEF50], v115);
  v57 = v109;
  sub_23361D754();
  v58 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59 = v119;
  v58(v55, v56);
  v60 = v113;
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(countAndFlagsBits + 8))(v57, v114);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v60, 1, v45);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v61 = v106;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v106, v60, v45);
  v62 = v107;
  v63 = v120;
  Order.FulfillmentWindow.endDate.getter(v107);
  if ((sub_23361E0E4() & 1) != 0)
    v64 = v62;
  else
    v64 = (uint64_t)v61;
  v65 = v117;
  ((void (*)(char *, uint64_t, uint64_t))v100[0])(v117, v64, v45);
  v53((char *)v62, v45);
  v53(v61, v45);
  v66 = v121;
  v67 = v53;
  if ((sub_23361E0E4() & 1) != 0)
  {
    v53(v65, v45);
    v53(v66, v45);
    sub_233168500(v63, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_19;
  }
  v69 = v102;
  v70 = objc_msgSend(v102, sel_orderTypeIdentifier);
  v119 = sub_23361E150();
  v116 = v71;

  v72 = objc_msgSend(v69, sel_orderIdentifier);
  v73 = sub_23361E150();
  v114 = v74;
  v115 = v73;

  v75 = objc_msgSend(v38, sel_fulfillmentIdentifier);
  v76 = sub_23361E150();
  v112 = v77;
  v113 = (char *)v76;

  v78 = objc_msgSend(v38, sel_displayName);
  v79 = sub_23361D6B8();
  v80 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v79);
  object = (char *)v80._object;
  countAndFlagsBits = v80._countAndFlagsBits;

  swift_bridgeObjectRelease();
  sub_2331684BC(v63, v105, type metadata accessor for Order.FulfillmentWindow);
  v109 = (char *)objc_msgSend(v38, sel_address);
  v81 = objc_msgSend(v38, sel_location);
  v82 = v103;
  v83 = objc_msgSend(v103, sel_merchant);
  v84 = objc_msgSend(v83, sel_displayName);

  v85 = sub_23361D6B8();
  v86 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v85);

  swift_bridgeObjectRelease();
  v87 = objc_msgSend(v82, sel_merchant);
  v88 = objc_msgSend(v87, sel_businessChatURL);

  if (v88)
  {
    v89 = (uint64_t)v104;
    sub_23361D2D4();

    v90 = v118;
    v67(v117, v118);
    v67(v121, v90);
    sub_233168500(v120, type metadata accessor for Order.FulfillmentWindow);
    v91 = sub_23361D340();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v89, 0, 1, v91);
  }
  else
  {
    v92 = v118;
    v67(v117, v118);
    v67(v121, v92);
    sub_233168500(v120, type metadata accessor for Order.FulfillmentWindow);
    v93 = sub_23361D340();
    v89 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v104, 1, 1, v93);
  }
  v94 = v101;
  v95 = v116;
  *v101 = v119;
  v94[1] = (uint64_t)v95;
  v96 = v114;
  v94[2] = v115;
  v94[3] = v96;
  v97 = v112;
  v94[4] = (uint64_t)v113;
  v94[5] = v97;
  v98 = object;
  v94[6] = countAndFlagsBits;
  v94[7] = (uint64_t)v98;
  v99 = (int *)type metadata accessor for MapsSuggestionsOrderPickup(0);
  sub_233168580(v105, (uint64_t)v94 + v99[7], type metadata accessor for Order.FulfillmentWindow);
  *(uint64_t *)((char *)v94 + v99[8]) = (uint64_t)v109;
  *(uint64_t *)((char *)v94 + v99[9]) = (uint64_t)v81;
  *(Swift::String *)((char *)v94 + v99[10]) = v86;
  sub_2331A04AC(v89, (uint64_t)v94 + v99[11]);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, int *))(*((_QWORD *)v99 - 1) + 56))(v94, 0, 1, v99);
}

uint64_t MapsSuggestionsOrderPickup.hash(into:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t MapsSuggestionsOrderPickup.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23339176C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333917AC + 4 * a5[a1]))(0x656449726564726FLL, 0xEF7265696669746ELL);
}

unint64_t sub_2333917AC()
{
  return 0xD000000000000010;
}

unint64_t sub_2333917C8()
{
  return 0xD000000000000019;
}

uint64_t sub_233391884(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333918C4 + 4 * byte_233640788[a1]))(0x656449726564726FLL, 0xEF7265696669746ELL);
}

unint64_t sub_2333918C4()
{
  return 0xD000000000000010;
}

unint64_t sub_2333918E0()
{
  return 0xD000000000000019;
}

uint64_t sub_23339199C()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233391A4C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233391AE0()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_233391B90(char *a1)
{
  sub_23322626C(*a1);
}

void sub_233391B9C()
{
  char *v0;

  sub_23353F7E8(0, *v0);
}

void sub_233391BA8(uint64_t a1)
{
  char *v1;

  sub_23353E2A8(a1, *v1);
}

void sub_233391BB0(uint64_t a1)
{
  char *v1;

  sub_23353F7E8(a1, *v1);
}

uint64_t sub_233391BB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23339473C();
  *a1 = result;
  return result;
}

uint64_t sub_233391BE4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23339176C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_233391C0C()
{
  unsigned __int8 *v0;

  return sub_233391884(*v0);
}

uint64_t sub_233391C14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23339473C();
  *a1 = result;
  return result;
}

void sub_233391C38(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_233391C44()
{
  sub_233393678();
  return sub_23361F428();
}

uint64_t sub_233391C6C()
{
  sub_233393678();
  return sub_23361F434();
}

uint64_t MapsSuggestionsOrderPickup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  double v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  double v44;
  id v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  __int128 v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;

  v76 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v3);
  v71 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23361D634();
  v74 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v75);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BED8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v13 = (int *)MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v13[8];
  v81 = v15;
  v82 = v16;
  *(_QWORD *)&v15[v16] = 0;
  v80 = v13[9];
  *(_QWORD *)&v15[v80] = 0;
  v17 = (uint64_t)&v15[v13[11]];
  v18 = sub_23361D340();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v77 = v17;
  v19(v17, 1, 1, v18);
  v20 = a1[3];
  v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_233393678();
  v21 = v78;
  sub_23361F3EC();
  if (v21)
  {
    v25 = v81;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);

    return sub_233168608(v77, &qword_254248700);
  }
  else
  {
    v22 = (uint64_t)v7;
    v70 = v18;
    v23 = v9;
    v78 = v12;
    v24 = v76;
    v95 = 0;
    sub_23322AA98();
    sub_23361F068();
    v27 = v84;
    v28 = v85;
    v29 = (double *)v81;
    *v81 = v83;
    v29[2] = v27;
    *((_QWORD *)v29 + 3) = v28;
    LOBYTE(v83) = 1;
    *((_QWORD *)v29 + 4) = sub_23361F02C();
    *((_QWORD *)v29 + 5) = v30;
    LOBYTE(v83) = 2;
    v31 = v11;
    v69 = 0;
    v32 = sub_23361F02C();
    v33 = v78;
    *((_QWORD *)v29 + 6) = v32;
    *((_QWORD *)v29 + 7) = v34;
    LOBYTE(v83) = 3;
    sub_233167C58(&qword_25604BEE8, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
    sub_23361F068();
    sub_233168580(v22, (uint64_t)v29 + *(int *)(v33 + 28), type metadata accessor for Order.FulfillmentWindow);
    v95 = 4;
    sub_23320C7C4();
    sub_23361EFFC();
    v68 = v31;
    v75 = v8;
    v35 = v83;
    if ((_QWORD)v83 == 1)
    {
      v36 = 0;
    }
    else
    {
      v38 = *((_QWORD *)&v83 + 1);
      v37 = v84;
      v39 = v85;
      v67 = v86;
      v66 = v87;
      v65 = v88;
      v64 = v89;
      v63 = v90;
      v62 = v91;
      v61 = v92;
      v60 = v93;
      v59 = v94;
      sub_233168668(0, (unint64_t *)&qword_256045B60);
      *(_QWORD *)&v83 = v35;
      *((_QWORD *)&v83 + 1) = v38;
      v29 = (double *)v81;
      v84 = v37;
      v85 = v39;
      v33 = v78;
      v86 = v67;
      v87 = v66;
      v88 = v65;
      v89 = v64;
      v90 = v63;
      v91 = v62;
      v92 = v61;
      v93 = v60;
      v94 = v59;
      v36 = CNMutablePostalAddress.init(rawAddress:)((uint64_t *)&v83);
    }
    v40 = v73;
    *(_QWORD *)((char *)v29 + v82) = v36;
    v95 = 5;
    sub_2333936BC();
    sub_23361EFFC();
    v41 = v74;
    if ((v85 & 0x100) != 0)
    {
      v42 = 0;
    }
    else
    {
      v43 = v83;
      if ((v85 & 1) != 0)
        v44 = 0.0;
      else
        v44 = v84;
      v45 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
      v46 = v72;
      sub_23361D628();
      v47 = (void *)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v46, v40);
      v48 = v45;
      v33 = v78;
      v42 = objc_msgSend(v48, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v47, v43, v44, 0.0, 1.0);

    }
    v49 = v24;
    v50 = v80;

    *(_QWORD *)((char *)v29 + v50) = v42;
    LOBYTE(v83) = 6;
    v51 = v75;
    v52 = v68;
    v53 = sub_23361F02C();
    v54 = (uint64_t *)((char *)v29 + *(int *)(v33 + 40));
    *v54 = v53;
    v54[1] = v55;
    LOBYTE(v83) = 7;
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v56 = (uint64_t)v71;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v51);
    sub_2331AAFB8(v56, v77);
    v57 = v81;
    sub_2331684BC((uint64_t)v81, v49, type metadata accessor for MapsSuggestionsOrderPickup);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
    return sub_233168500((uint64_t)v57, type metadata accessor for MapsSuggestionsOrderPickup);
  }
}

uint64_t MapsSuggestionsOrderPickup.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604BEF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233393678();
  sub_23361F410();
  v9 = *((_QWORD *)v3 + 2);
  v10 = *((_QWORD *)v3 + 3);
  v44 = *v3;
  v45 = v9;
  v46 = v10;
  v56 = 0;
  sub_23322AA54();
  sub_23361F17C();
  if (!v2)
  {
    LOBYTE(v44) = 1;
    sub_23361F140();
    LOBYTE(v44) = 2;
    sub_23361F140();
    v11 = type metadata accessor for MapsSuggestionsOrderPickup(0);
    LOBYTE(v44) = 3;
    type metadata accessor for Order.FulfillmentWindow(0);
    sub_233167C58(&qword_25604BF00, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
    sub_23361F17C();
    v12 = *(void **)((char *)v3 + *(int *)(v11 + 32));
    v34[0] = v11;
    if (v12)
    {
      RawAddress.init(_:)(v12, (uint64_t *)&v44);
      v13 = *((_QWORD *)&v44 + 1);
      v14 = v44;
      v15 = v45;
      v16 = v46;
      v17 = v47;
      v18 = v48;
      v19 = v49;
      v20 = v50;
      v12 = v51;
      v21 = v52;
      v22 = v53;
      v23 = v54;
      v24 = v55;
    }
    else
    {
      v13 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v14 = 1;
    }
    v34[1] = v21;
    v35 = v14;
    v36 = v13;
    v37 = v15;
    v38 = v12;
    v39 = v16;
    v40 = v17;
    v41 = v18;
    v42 = v19;
    v43 = v20;
    *(_QWORD *)&v44 = v14;
    *((_QWORD *)&v44 + 1) = v13;
    v45 = v15;
    v46 = v16;
    v47 = v17;
    v48 = v18;
    v49 = v19;
    v50 = v20;
    v51 = v12;
    v52 = v21;
    v53 = v22;
    v54 = v23;
    v55 = v24;
    v56 = 4;
    sub_23320C808();
    sub_23361F110();
    sub_233329310(v35);
    v25 = *(void **)((char *)v3 + *(int *)(v34[0] + 36));
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v26, sel_coordinate);
      v28 = v27;
      objc_msgSend(v26, sel_coordinate);
      v30 = v29;
      objc_msgSend(v26, sel_altitude);
      v32 = v31;

    }
    else
    {
      v28 = 0;
      v30 = 0;
      v32 = 0;
    }
    *(_QWORD *)&v44 = v28;
    *((_QWORD *)&v44 + 1) = v30;
    v45 = v32;
    LOBYTE(v46) = 0;
    BYTE1(v46) = v25 == 0;
    v56 = 5;
    sub_233393700();
    sub_23361F110();
    LOBYTE(v44) = 6;
    sub_23361F140();
    LOBYTE(v44) = 7;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_233392970@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MapsSuggestionsOrderPickup.init(from:)(a1, a2);
}

uint64_t sub_233392984(_QWORD *a1)
{
  return MapsSuggestionsOrderPickup.encode(to:)(a1);
}

uint64_t FinanceStore.startObservingOrderPickupsWithLocations(in:callback:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v7 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v9, type metadata accessor for TimeWindow);
  type metadata accessor for TimeWindowOrderPickupsObserver(0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_lastOrderPickupsSet) = 0;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_notificationsObserver) = 0;
  *(_QWORD *)(v10 + 16) = v3;
  sub_233168580((uint64_t)v9, v10 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_timeWindow, type metadata accessor for TimeWindow);
  v11 = (_QWORD *)(v10 + OBJC_IVAR____TtC10FinanceKit30TimeWindowOrderPickupsObserver_callback);
  *v11 = a2;
  v11[1] = a3;
  swift_retain();
  swift_retain();
  sub_23338F1A0();
  return v10;
}

uint64_t _s10FinanceKit26MapsSuggestionsOrderPickupV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v58;
  int *v59;
  char v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  char v66;
  id v67;
  id v68;
  uint64_t v69;
  void *v70;
  double v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  void *v79;
  double v80;
  double v81;
  id v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v112 = sub_23361D340();
  v110 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v107 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v108 = (uint64_t)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v109);
  v111 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v8 = MEMORY[0x24BDAC7A8](v113);
  v114 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v115 = (uint64_t)&v107 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v122 = (uint64_t)&v107 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v121 = (uint64_t)&v107 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v119 = (char *)&v107 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v120 = (char *)&v107 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v123 = (uint64_t)&v107 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v118 = (char *)&v107 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v116 = (uint64_t)&v107 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v117 = (uint64_t)&v107 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v107 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v107 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v107 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v107 - v37;
  v40 = a1[2];
  v39 = a1[3];
  v41 = a2[2];
  v42 = a2[3];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_23361F224() & 1) == 0
    || (v40 != v41 || v39 != v42) && (sub_23361F224() & 1) == 0)
  {
    sub_2331684BC((uint64_t)a1, (uint64_t)v38, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a2, (uint64_t)v36, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500((uint64_t)v38, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500((uint64_t)v36, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a1, (uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a2, (uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
    v43 = v123;
    goto LABEL_15;
  }
  sub_2331684BC((uint64_t)a1, (uint64_t)v38, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a2, (uint64_t)v36, type metadata accessor for MapsSuggestionsOrderPickup);
  if (*((_QWORD *)v38 + 4) != *((_QWORD *)v36 + 4) || *((_QWORD *)v38 + 5) != *((_QWORD *)v36 + 5))
  {
    v44 = sub_23361F224();
    sub_233168500((uint64_t)v38, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500((uint64_t)v36, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a1, (uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a2, (uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
    v43 = v123;
    if ((v44 & 1) != 0)
      goto LABEL_12;
LABEL_15:
    sub_233168500((uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500((uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
    v47 = v117;
    sub_2331684BC((uint64_t)a1, v117, type metadata accessor for MapsSuggestionsOrderPickup);
    v48 = v116;
    sub_2331684BC((uint64_t)a2, v116, type metadata accessor for MapsSuggestionsOrderPickup);
    v45 = (uint64_t)v120;
    v46 = (uint64_t)v118;
    goto LABEL_16;
  }
  sub_233168500((uint64_t)v38, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_233168500((uint64_t)v36, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a1, (uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a2, (uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
  v43 = v123;
LABEL_12:
  v45 = (uint64_t)v120;
  v46 = (uint64_t)v118;
  if (*((_QWORD *)v33 + 6) == *((_QWORD *)v30 + 6) && *((_QWORD *)v33 + 7) == *((_QWORD *)v30 + 7))
  {
    sub_233168500((uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500((uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
    v47 = v117;
    sub_2331684BC((uint64_t)a1, v117, type metadata accessor for MapsSuggestionsOrderPickup);
    v48 = v116;
    sub_2331684BC((uint64_t)a2, v116, type metadata accessor for MapsSuggestionsOrderPickup);
    goto LABEL_25;
  }
  v58 = sub_23361F224();
  sub_233168500((uint64_t)v33, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_233168500((uint64_t)v30, type metadata accessor for MapsSuggestionsOrderPickup);
  v47 = v117;
  sub_2331684BC((uint64_t)a1, v117, type metadata accessor for MapsSuggestionsOrderPickup);
  v48 = v116;
  sub_2331684BC((uint64_t)a2, v116, type metadata accessor for MapsSuggestionsOrderPickup);
  if ((v58 & 1) == 0)
  {
LABEL_16:
    sub_233168500(v48, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v47, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a1, v46, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a2, v43, type metadata accessor for MapsSuggestionsOrderPickup);
    v49 = (uint64_t)v119;
LABEL_17:
    sub_233168500(v43, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v46, type metadata accessor for MapsSuggestionsOrderPickup);
LABEL_18:
    sub_2331684BC((uint64_t)a1, v45, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_2331684BC((uint64_t)a2, v49, type metadata accessor for MapsSuggestionsOrderPickup);
LABEL_19:
    sub_233168500(v49, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v45, type metadata accessor for MapsSuggestionsOrderPickup);
    goto LABEL_20;
  }
LABEL_25:
  v59 = (int *)v113;
  v60 = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0(v47 + *(int *)(v113 + 28), v48 + *(int *)(v113 + 28));
  sub_233168500(v48, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_233168500(v47, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a1, v46, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a2, v43, type metadata accessor for MapsSuggestionsOrderPickup);
  v49 = (uint64_t)v119;
  if ((v60 & 1) == 0)
    goto LABEL_17;
  v61 = v59[8];
  v62 = *(void **)(v46 + v61);
  v63 = *(void **)(v43 + v61);
  if (!v62)
  {
    v67 = v63;
    sub_233168500(v43, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v46, type metadata accessor for MapsSuggestionsOrderPickup);
    if (!v63)
    {
      sub_2331684BC((uint64_t)a1, v45, type metadata accessor for MapsSuggestionsOrderPickup);
      sub_2331684BC((uint64_t)a2, v49, type metadata accessor for MapsSuggestionsOrderPickup);
      goto LABEL_34;
    }

    goto LABEL_18;
  }
  if (!v63)
  {
    v68 = v62;
    sub_233168500(v123, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v46, type metadata accessor for MapsSuggestionsOrderPickup);

    goto LABEL_18;
  }
  sub_233168668(0, &qword_254247E48);
  v64 = v63;
  v65 = v62;
  v66 = sub_23361EA14();
  sub_233168500(v123, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_233168500(v46, type metadata accessor for MapsSuggestionsOrderPickup);

  sub_2331684BC((uint64_t)a1, v45, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_2331684BC((uint64_t)a2, v49, type metadata accessor for MapsSuggestionsOrderPickup);
  if ((v66 & 1) == 0)
    goto LABEL_19;
LABEL_34:
  v69 = v59[9];
  v70 = *(void **)(v45 + v69);
  v71 = 0.0;
  if (v70)
  {
    v72 = v70;
    objc_msgSend(v72, sel_coordinate);
    v74 = v73;
    objc_msgSend(v72, sel_coordinate);
    v76 = v75;
    objc_msgSend(v72, sel_altitude);
    v78 = v77;

    v69 = v59[9];
  }
  else
  {
    v74 = 0.0;
    v76 = 0.0;
    v78 = 0.0;
  }
  v79 = *(void **)(v49 + v69);
  v80 = 0.0;
  v81 = 0.0;
  if (v79)
  {
    v82 = v79;
    objc_msgSend(v82, sel_coordinate);
    v71 = v83;
    objc_msgSend(v82, sel_coordinate);
    v80 = v84;
    objc_msgSend(v82, sel_altitude);
    v81 = v85;

  }
  sub_233168500(v49, type metadata accessor for MapsSuggestionsOrderPickup);
  sub_233168500(v45, type metadata accessor for MapsSuggestionsOrderPickup);
  if (!v70)
  {
    if (!v79)
      goto LABEL_46;
LABEL_20:
    v50 = v121;
    sub_2331684BC((uint64_t)a1, v121, type metadata accessor for MapsSuggestionsOrderPickup);
    v51 = v122;
    sub_2331684BC((uint64_t)a2, v122, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v50, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v51, type metadata accessor for MapsSuggestionsOrderPickup);
    v52 = (uint64_t)a1;
    v53 = v115;
    sub_2331684BC(v52, v115, type metadata accessor for MapsSuggestionsOrderPickup);
    v54 = (uint64_t)a2;
    v55 = v114;
    sub_2331684BC(v54, v114, type metadata accessor for MapsSuggestionsOrderPickup);
LABEL_21:
    sub_233168500(v55, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v53, type metadata accessor for MapsSuggestionsOrderPickup);
    goto LABEL_22;
  }
  if (!v79 || v74 != v71 || v76 != v80 || v78 != v81)
    goto LABEL_20;
LABEL_46:
  v86 = v121;
  sub_2331684BC((uint64_t)a1, v121, type metadata accessor for MapsSuggestionsOrderPickup);
  v87 = v122;
  sub_2331684BC((uint64_t)a2, v122, type metadata accessor for MapsSuggestionsOrderPickup);
  v88 = v59[10];
  v89 = *(_QWORD *)(v86 + v88);
  v90 = *(_QWORD *)(v86 + v88 + 8);
  v91 = (_QWORD *)(v87 + v88);
  if (v89 == *v91 && v90 == v91[1])
  {
    sub_233168500(v86, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v87, type metadata accessor for MapsSuggestionsOrderPickup);
    v92 = (uint64_t)a1;
    v53 = v115;
    sub_2331684BC(v92, v115, type metadata accessor for MapsSuggestionsOrderPickup);
    v93 = (uint64_t)a2;
    v55 = v114;
    sub_2331684BC(v93, v114, type metadata accessor for MapsSuggestionsOrderPickup);
    v95 = (uint64_t)v111;
    v94 = v112;
  }
  else
  {
    v96 = sub_23361F224();
    sub_233168500(v86, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v87, type metadata accessor for MapsSuggestionsOrderPickup);
    v97 = (uint64_t)a1;
    v53 = v115;
    sub_2331684BC(v97, v115, type metadata accessor for MapsSuggestionsOrderPickup);
    v98 = (uint64_t)a2;
    v55 = v114;
    sub_2331684BC(v98, v114, type metadata accessor for MapsSuggestionsOrderPickup);
    v95 = (uint64_t)v111;
    v94 = v112;
    if ((v96 & 1) == 0)
      goto LABEL_21;
  }
  v99 = v59[11];
  v100 = v55 + v99;
  v101 = v95 + *(int *)(v109 + 48);
  sub_233199624(v53 + v99, v95);
  sub_233199624(v100, v101);
  v102 = v110;
  v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  if (v103(v95, 1, v94) == 1)
  {
    sub_233168500(v55, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v53, type metadata accessor for MapsSuggestionsOrderPickup);
    if (v103(v101, 1, v94) == 1)
    {
      sub_233168608(v95, &qword_254248700);
      v56 = 1;
      return v56 & 1;
    }
  }
  else
  {
    v104 = v108;
    sub_233199624(v95, v108);
    if (v103(v101, 1, v94) != 1)
    {
      v105 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v107, v101, v94);
      sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v56 = sub_23361E108();
      v106 = *(void (**)(char *, uint64_t))(v102 + 8);
      v106(v105, v94);
      sub_233168500(v55, type metadata accessor for MapsSuggestionsOrderPickup);
      sub_233168500(v53, type metadata accessor for MapsSuggestionsOrderPickup);
      v106((char *)v104, v94);
      sub_233168608(v95, &qword_254248700);
      return v56 & 1;
    }
    sub_233168500(v55, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_233168500(v53, type metadata accessor for MapsSuggestionsOrderPickup);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v104, v94);
  }
  sub_233168608(v95, &qword_256045948);
LABEL_22:
  v56 = 0;
  return v56 & 1;
}

unint64_t sub_233393678()
{
  unint64_t result;

  result = qword_25604BEE0;
  if (!qword_25604BEE0)
  {
    result = MEMORY[0x234934494](&unk_233640A2C, &type metadata for MapsSuggestionsOrderPickup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604BEE0);
  }
  return result;
}

unint64_t sub_2333936BC()
{
  unint64_t result;

  result = qword_25604BEF0;
  if (!qword_25604BEF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawLocation, &type metadata for RawLocation);
    atomic_store(result, (unint64_t *)&qword_25604BEF0);
  }
  return result;
}

unint64_t sub_233393700()
{
  unint64_t result;

  result = qword_25604BF08;
  if (!qword_25604BF08)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawLocation, &type metadata for RawLocation);
    atomic_store(result, (unint64_t *)&qword_25604BF08);
  }
  return result;
}

uint64_t type metadata accessor for TimeWindowOrderPickupsObserver(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_2542452F8);
}

uint64_t sub_233393758()
{
  return sub_233167C58(qword_254245258, type metadata accessor for MapsSuggestionsOrderPickup, (uint64_t)&protocol conformance descriptor for MapsSuggestionsOrderPickup);
}

uint64_t sub_233393784()
{
  return type metadata accessor for TimeWindowOrderPickupsObserver(0);
}

uint64_t sub_23339378C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TimeWindow(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MapsSuggestionsOrderPickup(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  id v34;
  id v35;
  uint64_t v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    type metadata accessor for Order.FulfillmentWindow(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v7) = swift_getEnumCaseMultiPayload();
    v14 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    if ((_DWORD)v7 == 1)
    {
      v15 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v16 = &v12[v15];
      v17 = &v13[v15];
      v18 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
    v20 = a3[8];
    v21 = a3[9];
    v22 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)v4 + v20) = (uint64_t)v22;
    v23 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)v4 + v21) = (uint64_t)v23;
    v24 = a3[10];
    v25 = a3[11];
    v26 = (uint64_t *)((char *)v4 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)v4 + v25;
    v30 = (char *)a2 + v25;
    v31 = sub_23361D340();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v22;
    v35 = v23;
    swift_bridgeObjectRetain();
    if (v33(v30, 1, v31))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return v4;
}

uint64_t destroy for MapsSuggestionsOrderPickup(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  type metadata accessor for Order.FulfillmentWindow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v8 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }

  swift_bridgeObjectRelease();
  v9 = a1 + a2[11];
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

_QWORD *initializeWithCopy for MapsSuggestionsOrderPickup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  id v32;
  id v33;
  uint64_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  type metadata accessor for Order.FulfillmentWindow(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LODWORD(v6) = swift_getEnumCaseMultiPayload();
  v13 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  if ((_DWORD)v6 == 1)
  {
    v14 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = sub_23361CD40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  swift_storeEnumTagMultiPayload();
  v18 = a3[8];
  v19 = a3[9];
  v20 = *(void **)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v20;
  v21 = *(void **)((char *)a2 + v19);
  *(_QWORD *)((char *)a1 + v19) = v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (char *)a1 + v23;
  v28 = (char *)a2 + v23;
  v29 = sub_23361D340();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v20;
  v33 = v21;
  swift_bridgeObjectRetain();
  if (v31(v28, 1, v29))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

_QWORD *assignWithCopy for MapsSuggestionsOrderPickup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[7];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_233168500((uint64_t)a1 + v6, type metadata accessor for Order.FulfillmentWindow);
    type metadata accessor for Order.FulfillmentWindow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  v15 = a3[8];
  v16 = *(void **)((char *)a1 + v15);
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = v17;

  v19 = a3[9];
  v20 = *(void **)((char *)a1 + v19);
  v21 = *(void **)((char *)a2 + v19);
  *(_QWORD *)((char *)a1 + v19) = v21;
  v22 = v21;

  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[11];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_23361D340();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_10;
  }
  if (v33)
  {
LABEL_10:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

_OWORD *initializeWithTake for MapsSuggestionsOrderPickup(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  type metadata accessor for Order.FulfillmentWindow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v12 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_23361CD40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v18 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23361D340();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

_QWORD *assignWithTake for MapsSuggestionsOrderPickup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_233168500((uint64_t)a1 + v10, type metadata accessor for Order.FulfillmentWindow);
    type metadata accessor for Order.FulfillmentWindow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v14 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v16 = &v11[v15];
      v17 = &v12[v15];
      v18 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  v19 = a3[8];
  v20 = *(void **)((char *)a1 + v19);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);

  v21 = a3[9];
  v22 = *(void **)((char *)a1 + v21);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);

  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_23361D340();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_10;
  }
  if (v35)
  {
LABEL_10:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsSuggestionsOrderPickup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333943A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Order.FulfillmentWindow(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MapsSuggestionsOrderPickup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233394450(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Order.FulfillmentWindow(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2333944F0()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Order.FulfillmentWindow(319);
  if (v0 <= 0x3F)
  {
    sub_233233038();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for MapsSuggestionsOrderPickup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2333945E4 + 4 * byte_233640795[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_233394618 + 4 * byte_233640790[v4]))();
}

uint64_t sub_233394618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233394620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233394628);
  return result;
}

uint64_t sub_233394634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23339463CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_233394640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233394648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsSuggestionsOrderPickup.CodingKeys()
{
  return &type metadata for MapsSuggestionsOrderPickup.CodingKeys;
}

unint64_t sub_233394668()
{
  unint64_t result;

  result = qword_25604BF10;
  if (!qword_25604BF10)
  {
    result = MEMORY[0x234934494](&unk_233640A04, &type metadata for MapsSuggestionsOrderPickup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604BF10);
  }
  return result;
}

unint64_t sub_2333946B0()
{
  unint64_t result;

  result = qword_25604BF18;
  if (!qword_25604BF18)
  {
    result = MEMORY[0x234934494](&unk_23364093C, &type metadata for MapsSuggestionsOrderPickup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604BF18);
  }
  return result;
}

unint64_t sub_2333946F8()
{
  unint64_t result;

  result = qword_25604BF20;
  if (!qword_25604BF20)
  {
    result = MEMORY[0x234934494](&unk_233640964, &type metadata for MapsSuggestionsOrderPickup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604BF20);
  }
  return result;
}

uint64_t sub_23339473C()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_233394784()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2333947A8()
{
  return sub_23338F378();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_2333947B8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_233390CD4(a1, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t FinanceStore.activeOrders()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = type metadata accessor for FinanceStore.Message();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233394830()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_256043058 + dword_256043058);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2333948A4;
  return v3(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2333948A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  sub_2331CB0F4(*(_QWORD *)(v4 + 32));
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_233394938(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_notificationIdentifier);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id ManagedUserNotification.__allocating_init(_:fullyQualifiedOrderIdentifier:context:)(void *a1, uint64_t *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v25[2];

  v4 = v3;
  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v15 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  objc_msgSend(v15, sel_setContent_, a1);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23361E12C();
    v25[1] = v14;
    v17 = v9;
    v18 = v8;
    v19 = a1;
    v20 = a3;
    v21 = (void *)v16;
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setOrderIdentifier_, v21);

    a3 = v20;
    a1 = v19;
    v8 = v18;
    v9 = v17;
    swift_bridgeObjectRetain();
    sub_2332DCF70(v13, v12);
    v22 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v15, sel_setOrderIdentifier_, 0);
    v22 = 0;
  }
  objc_msgSend(v15, sel_setOrderTypeIdentifier_, v22);

  sub_23361D694();
  sub_23361D64C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setNotificationIdentifier_, v23);

  return v15;
}

id ManagedUserNotification.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedUserNotification.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedUserNotification.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double ManagedUserNotification.fullyQualifiedOrderIdentifier.getter@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_orderIdentifier);
  if (v4)
  {
    v5 = v4;
    v6 = sub_23361E150();
    v8 = v7;

    v9 = objc_msgSend(v2, sel_orderTypeIdentifier);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23361E150();
      v13 = v12;

      *a1 = v11;
      a1[1] = v13;
      a1[2] = v6;
      a1[3] = v8;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

id static ManagedUserNotification.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit23ManagedUserNotification;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedUserNotification.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

char *keypath_get_selector_content()
{
  return sel_content;
}

id sub_233394E80@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_content);
  *a2 = result;
  return result;
}

id sub_233394EB8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContent_, *a1);
}

char *keypath_get_selector_requiresWallet()
{
  return sel_requiresWallet;
}

id sub_233394ED8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requiresWallet);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233394F08(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequiresWallet_, *a1);
}

void sub_233394F1C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_orderIdentifier, a2);
}

void sub_233394F38(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setOrderIdentifier_);
}

void sub_233394F54(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_orderTypeIdentifier, a2);
}

void sub_233394F70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setOrderTypeIdentifier_);
}

char *keypath_get_selector_notificationIdentifier()
{
  return sel_notificationIdentifier;
}

void sub_233394F9C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setNotificationIdentifier_, v3);

}

uint64_t type metadata accessor for ManagedUserNotification()
{
  return objc_opt_self();
}

id static SaveOrderUIXPCConfiguration.serviceInterface.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D5498);
}

id sub_23339504C()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D5498);
}

ValueMetadata *type metadata accessor for SaveOrderUIXPCConfiguration()
{
  return &type metadata for SaveOrderUIXPCConfiguration;
}

unint64_t sub_23339509C(unint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v27 = (char *)v25 - v11;
  if (a1 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_23361EF30())
  {
    v25[1] = v2;
    v29 = a1 & 0xC000000000000001;
    v13 = MEMORY[0x24BEE4AF8];
    v14 = 4;
    v26 = a1;
    v28 = v12;
    while (1)
    {
      v15 = v29 ? (id)MEMORY[0x234933120](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      v2 = v15;
      v16 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v17 = objc_msgSend(v15, sel_sharedId);
      if (v17)
      {
        v18 = v17;
        sub_23361D67C();

        v19 = 0;
      }
      else
      {
        v19 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v19, 1, v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_233168608((uint64_t)v6, &qword_254246740);
      }
      else
      {
        v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v21 = v27;
        v20(v27, v6, v7);
        v20(v30, v21, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_2334A4E00(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
        v23 = *(_QWORD *)(v13 + 16);
        v22 = *(_QWORD *)(v13 + 24);
        if (v23 >= v22 >> 1)
          v13 = sub_2334A4E00(v22 > 1, v23 + 1, 1, v13);
        *(_QWORD *)(v13 + 16) = v23 + 1;
        v20((char *)(v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v23), v30, v7);
        a1 = v26;
      }
      ++v14;
      if (v16 == v28)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t BankConnectAccountUnlinker.__allocating_init(store:consentStore:messagesManager:webServiceClientProvider:paymentPassDataSourceProvider:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  sub_23318B020(a2, v10 + 24);
  sub_23318B020(a3, v10 + 64);
  sub_23318B020(a4, v10 + 104);
  sub_23318B020(a5, v10 + 144);
  return v10;
}

uint64_t BankConnectAccountUnlinker.init(store:consentStore:messagesManager:webServiceClientProvider:paymentPassDataSourceProvider:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a1;
  sub_23318B020(a2, v5 + 24);
  sub_23318B020(a3, v5 + 64);
  sub_23318B020(a4, v5 + 104);
  sub_23318B020(a5, v5 + 144);
  return v5;
}

uint64_t BankConnectAccountUnlinker.unlinkAccount(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 96) = v1;
  v4 = sub_23361E96C();
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 120) = swift_task_alloc();
  *(_QWORD *)(v2 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  v5 = type metadata accessor for InternalAccount();
  *(_QWORD *)(v2 + 144) = v5;
  *(_QWORD *)(v2 + 152) = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a1;
  *(_QWORD *)(v2 + 160) = v6;
  *(_QWORD *)(v2 + 168) = v7;
  *(_OWORD *)(v2 + 176) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 192) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233395530()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = v0[23];
  v1 = v0[24];
  v4 = v0[21];
  v3 = v0[22];
  v6 = v0[14];
  v5 = v0[15];
  v7 = v0[13];
  v8 = *(_QWORD *)(v0[12] + 16);
  v0[25] = v8;
  v9 = objc_msgSend(*(id *)(v8 + 16), sel_newBackgroundContext);
  v0[26] = v9;
  v10 = (_QWORD *)swift_allocObject();
  v0[27] = v10;
  v10[2] = v4;
  v10[3] = v3;
  v10[4] = v2;
  v10[5] = v1;
  v10[6] = v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDBB370], v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9;
  v11 = (_QWORD *)swift_task_alloc();
  v0[28] = v11;
  *v11 = v0;
  v11[1] = sub_233395640;
  return sub_23361E990();
}

uint64_t sub_233395640()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2333956C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 136), &qword_2560486B0);
    if (qword_256041CA0 != -1)
      swift_once();
    v4 = sub_23361DB80();
    __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v5 = sub_23361DB68();
    v6 = sub_23361E768();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      *(_DWORD *)v7 = 136315138;
      v28 = v8;
      v29 = 0;
      v30 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361ED98();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 80) = sub_233164DCC(0, 0xE000000000000000, &v28);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v5, v6, "Failed to find an account with fqaid: %s.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v8, -1, -1);
      MEMORY[0x234934590](v7, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

  }
  else
  {
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 144);
    sub_233398524(*(_QWORD *)(v0 + 136), v9);
    v11 = (uint64_t *)(v9 + *(int *)(v10 + 32));
    v12 = v11[1];
    *(_QWORD *)(v0 + 240) = v12;
    if (v12)
    {
      v13 = *v11;
      v14 = (uint64_t *)(*(_QWORD *)(v0 + 160) + *(int *)(*(_QWORD *)(v0 + 144) + 20));
      v15 = *v14;
      v16 = v14[1];
      *(_QWORD *)(v0 + 248) = v16;
      v17 = v14[2];
      v18 = v14[3];
      *(_QWORD *)(v0 + 16) = v15;
      *(_QWORD *)(v0 + 256) = v18;
      *(_QWORD *)(v0 + 24) = v16;
      *(_QWORD *)(v0 + 32) = v17;
      *(_QWORD *)(v0 + 40) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v19;
      *v19 = v0;
      v19[1] = sub_233395D9C;
      return sub_2333961D4((uint64_t *)(v0 + 16), v13, v12);
    }
    if (qword_256041CA0 != -1)
      swift_once();
    v21 = sub_23361DB80();
    __swift_project_value_buffer(v21, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_23361DB68();
    v23 = sub_23361E750();
    if (os_log_type_enabled(v22, v23))
    {
      v27 = *(_QWORD *)(v0 + 160);
      v24 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v25 = v28;
      *(_DWORD *)v24 = 136315138;
      v29 = 0;
      v30 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361ED98();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 88) = sub_233164DCC(0, 0xE000000000000000, &v28);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v22, v23, "The account is already unlinked: %s.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v25, -1, -1);
      MEMORY[0x234934590](v24, -1, -1);

      sub_233168500(v27, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    }
    else
    {
      v26 = *(_QWORD *)(v0 + 160);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233395D40()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233395D9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;

  v2 = *v1;
  *(_QWORD *)(v2 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 184);
    v4 = *(_QWORD *)(v2 + 192);
    v7 = *(_OWORD *)(v2 + 168);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v2 + 48) = v7;
    *(_QWORD *)(v2 + 64) = v5;
    *(_QWORD *)(v2 + 72) = v4;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 280) = v6;
    *v6 = v2;
    v6[1] = sub_233395E94;
    return sub_233396D10((uint64_t *)(v2 + 48));
  }
}

uint64_t sub_233395E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 288) = a1;
  *(_QWORD *)(v3 + 296) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233395F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v14 = *(_OWORD *)(v0 + 168);
  v15 = *(_OWORD *)(v0 + 184);
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 200) + 16), sel_newBackgroundContext);
  v4 = swift_task_alloc();
  *(_OWORD *)(v4 + 16) = v14;
  *(_OWORD *)(v4 + 32) = v15;
  *(_QWORD *)(v4 + 48) = v2;
  *(_QWORD *)(v4 + 56) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = sub_233398568;
  v5[3] = v4;
  v5[4] = v3;
  sub_23361E960();
  if (v1)
  {
    v6 = *(_QWORD *)(v0 + 160);

    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 184);
    v16 = *(_OWORD *)(v0 + 168);

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = objc_msgSend(*(id *)(v7 + 16), sel_newBackgroundContext);
    v11 = swift_task_alloc();
    *(_OWORD *)(v11 + 16) = v16;
    *(_QWORD *)(v11 + 32) = v9;
    *(_QWORD *)(v11 + 40) = v8;
    *(_QWORD *)(v11 + 48) = v10;
    v12 = (_QWORD *)swift_task_alloc();
    v12[2] = sub_233398588;
    v12[3] = v11;
    v12[4] = v10;
    sub_23361E960();
    v6 = *(_QWORD *)(v0 + 160);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  sub_233168500(v6, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23339610C()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233396170()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333961D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  v6 = sub_23361CAC4();
  *(_QWORD *)(v4 + 96) = v6;
  *(_QWORD *)(v4 + 104) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 112) = swift_task_alloc();
  type metadata accessor for BankConnectConsent();
  v7 = swift_task_alloc();
  v8 = *a1;
  *(_QWORD *)(v4 + 120) = v7;
  *(_QWORD *)(v4 + 128) = v8;
  *(_OWORD *)(v4 + 136) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v4 + 152) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233396298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v29 = *(_OWORD *)(v0 + 128);
  v3 = *(_QWORD **)(v0 + 72);
  v4 = v3[16];
  v5 = v3[17];
  __swift_project_boxed_opaque_existential_1(v3 + 13, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  *(_QWORD *)(v0 + 160) = v6;
  v7 = v3 + 3;
  v8 = v3[6];
  v9 = v3[7];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v31 = v29;
  v32 = v2;
  v33 = v1;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v9 + 16))(&v31, v8, v9);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 152);
  v30 = *(_OWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_256045900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  sub_23361CADC();
  *(_OWORD *)(v0 + 16) = v30;
  *(_QWORD *)(v0 + 32) = v11;
  *(_QWORD *)(v0 + 40) = v10;
  sub_23317220C();
  v16 = sub_23361CAE8();
  v17 = *(_QWORD *)(v0 + 120);
  v18 = v16;
  v20 = v19;
  v22 = *(_QWORD *)(v0 + 56);
  v21 = *(_QWORD *)(v0 + 64);
  swift_release();
  v23 = sub_23361D3B8();
  v25 = v24;
  *(_QWORD *)(v0 + 168) = v24;
  sub_23316BEA4(v18, v20);
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v26;
  v26[2] = v6;
  v26[3] = v17;
  v26[4] = v22;
  v26[5] = v21;
  v26[6] = v23;
  v26[7] = v25;
  *(_QWORD *)&v30 = (char *)&dword_256057878 + dword_256057878;
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v27;
  *v27 = v0;
  v27[1] = sub_2333967C0;
  return ((uint64_t (*)(uint64_t, int *))v30)(v30, (int *)&unk_25604C048);
}

uint64_t sub_2333967C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23339683C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v14 = *(_OWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 16) + 16), sel_newBackgroundContext);
  v7 = swift_task_alloc();
  *(_OWORD *)(v7 + 16) = v14;
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  v8[2] = sub_233398750;
  v8[3] = v7;
  v8[4] = v6;
  sub_23361E960();
  if (v2)
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc();
    swift_task_dealloc();
    v11 = type metadata accessor for InternalAccount();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11) != 1)
      sub_23339776C(*(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
    v12 = *(_QWORD *)(v0 + 88);

    sub_233168608(v12, &qword_2560486B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v9();
}

uint64_t sub_2333969E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  v2 = *(void **)(v0 + 192);
  if (qword_256041CA0 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  v4 = v2;
  v5 = v2;
  v6 = sub_23361DB68();
  v7 = sub_23361E768();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v2;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v11;
    sub_23361EBC4();
    *v9 = v11;

    _os_log_impl(&dword_233151000, v6, v7, "Failed to unlink an account remotely. %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);

  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = objc_msgSend(*(id *)(*(_QWORD *)(v14 + 16) + 16), sel_newBackgroundContext, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  v16 = swift_task_alloc();
  *(_OWORD *)(v16 + 16) = v22;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v15;
  *(_QWORD *)(v16 + 56) = v14;
  v17 = (_QWORD *)swift_task_alloc();
  v17[2] = sub_233398750;
  v17[3] = v16;
  v17[4] = v15;
  sub_23361E960();
  v18 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  v19 = type metadata accessor for InternalAccount();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19) != 1)
    sub_23339776C(*(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
  v20 = *(_QWORD *)(v0 + 88);

  sub_233168608(v20, &qword_2560486B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233396D10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 24) = v1;
  v4 = sub_23361E96C();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *a1;
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 56) = v6;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 80) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233396D88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;

  v2 = v0[9];
  v1 = v0[10];
  v4 = v0[7];
  v3 = v0[8];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[4];
  v8 = objc_msgSend(*(id *)(*(_QWORD *)(v0[3] + 16) + 16), sel_newBackgroundContext);
  v0[11] = v8;
  v9 = (_QWORD *)swift_allocObject();
  v0[12] = v9;
  v9[2] = v4;
  v9[3] = v3;
  v9[4] = v2;
  v9[5] = v1;
  v9[6] = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, *MEMORY[0x24BDBB370], v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
  *v10 = v0;
  v10[1] = sub_233396EB0;
  return sub_23361E990();
}

uint64_t sub_233396EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233396F44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233396F8C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233396FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a2;
  v7[3] = a3;
  v7[8] = type metadata accessor for BankConnectWebServicePassUnlinkRequest(0);
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233397030()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v6 = v0[4];
  v5 = v0[5];
  sub_2331925D8(v0[3], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B50);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_2333970F4;
  return BankConnectWebServiceClient.unlinkAccountWithPass(for:)(v0[9]);
}

uint64_t sub_2333970F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_233168500(v2, type metadata accessor for BankConnectWebServicePassUnlinkRequest);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_233397184(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  os_log_type_t type;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];

  v30[1] = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v27 = a1;
  *((_QWORD *)&v27 + 1) = a2;
  v28 = a3;
  v29 = a4;
  v13 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v27);
  if (!v6)
  {
    v14 = v13;
    if (v13)
    {
      sub_2333975E4(v13);
      objc_msgSend(v14, sel_setExternalAccountId_, 0);
      objc_msgSend(v14, sel_setAccountMatchingTypeValue_, 0);
      objc_msgSend(v14, sel_setIsAccountMismatched_, 0);
      v15 = objc_msgSend(v14, sel_accountMatchObject);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v14, sel_setAccountMatchObject_, 0);
        objc_msgSend(a5, sel_deleteObject_, v16);

      }
      *(_QWORD *)&v27 = 0;
      if (objc_msgSend(a5, sel_save_, &v27))
      {
        v17 = (id)v27;
        InternalAccount.init(_:)(v14, a6);
        v18 = type metadata accessor for InternalAccount();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a6, 0, 1, v18);
      }
      else
      {
        v24 = (id)v27;
        sub_23361D1B4();

        swift_willThrow();
      }
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v19 = sub_23361DB80();
      __swift_project_value_buffer(v19, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v20 = sub_23361DB68();
      v21 = sub_23361E768();
      if (os_log_type_enabled(v20, v21))
      {
        type = v21;
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v22 = 136315138;
        v30[0] = v23;
        *(_QWORD *)&v27 = 0;
        *((_QWORD *)&v27 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23361ED98();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v27 = sub_233164DCC(v27, *((unint64_t *)&v27 + 1), v30);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v20, type, "Failed to fetch an account with fqaid: %s.", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v23, -1, -1);
        MEMORY[0x234934590](v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v25 = type metadata accessor for InternalAccount();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a6, 1, 1, v25);
    }
  }
}

uint64_t sub_2333975E4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v2 = v1;
  v4 = objc_msgSend(a1, sel_externalAccountId);
  if (v4)
  {
    v5 = v4;
    v6 = sub_23361E150();
    v8 = v7;

    v9 = v2[12];
    __swift_project_boxed_opaque_existential_1(v2 + 8, v2[11]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_233623D60;
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = v8;
    *(_BYTE *)(v10 + 48) = 0;
    (*(void (**)(void))(v9 + 8))();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(a1, sel_accountId);
  v12 = sub_23361E150();
  v14 = v13;

  v15 = v2 + 8;
  v17 = v2[11];
  v16 = v2[12];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_233626370;
  *(_QWORD *)(v18 + 32) = v12;
  *(_QWORD *)(v18 + 40) = v14;
  *(_BYTE *)(v18 + 48) = 1;
  *(_QWORD *)(v18 + 56) = v12;
  *(_QWORD *)(v18 + 64) = v14;
  *(_BYTE *)(v18 + 72) = 2;
  *(_QWORD *)(v18 + 80) = v12;
  *(_QWORD *)(v18 + 88) = v14;
  *(_BYTE *)(v18 + 96) = 3;
  *(_QWORD *)(v18 + 104) = v12;
  *(_QWORD *)(v18 + 112) = v14;
  *(_BYTE *)(v18 + 120) = 4;
  *(_QWORD *)(v18 + 128) = v12;
  *(_QWORD *)(v18 + 136) = v14;
  *(_BYTE *)(v18 + 144) = 5;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain_n();
  v19(v18, v17, v16);
  return swift_bridgeObjectRelease();
}

void sub_23339776C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  void *v16;

  v3 = v2;
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = (void *)v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(a1, (unint64_t)a2, (uint64_t *)&v16);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Disable card art for fpanID: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = v3 + 18;
  v13 = v3[21];
  v12 = v3[22];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v16, v13, v12);
  v14 = v16;
  v15._countAndFlagsBits = a1;
  v15._object = a2;
  BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(0, v15);

}

void sub_23339795C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[4];
  objc_super v29;
  unsigned __int8 v30;

  v26 = a5;
  v25 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalTransaction();
  v29.receiver = (id)swift_getObjCClassFromMetadata();
  v29.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v13 = objc_msgSendSuper2(&v29, sel_fetchRequest);
  v14 = (void *)sub_23361E3D8();
  objc_msgSend(v13, sel_setRelationshipKeyPathsForPrefetching_, v14);

  objc_msgSend(v13, sel_setReturnsObjectsAsFaults_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  v28[0] = a1;
  v28[1] = a2;
  v28[2] = a3;
  v28[3] = a4;
  v16 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  v30 = 2;
  v17 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0(v28, 0, (uint64_t)v12, &v30);
  sub_233168608((uint64_t)v12, &qword_256047470);
  *(_QWORD *)(v15 + 32) = v17;
  sub_2331E28A0();
  *(_QWORD *)(v15 + 40) = sub_23361E6B4();
  v28[0] = v15;
  sub_23361E408();
  v18 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v18);

  objc_msgSend(v13, sel_setPredicate_, v19);
  v20 = v27;
  v21 = sub_23361E984();
  if (v20)
  {

  }
  else
  {
    v22 = sub_23339509C(v21);
    swift_bridgeObjectRelease();
    v23 = sub_2331C911C(v22);

    swift_bridgeObjectRelease();
    *v25 = v23;
  }
}

void sub_233397BFC(void *a1, void *a2, void *a3, void *a4, uint64_t a5, id *a6)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t i;
  id v48;
  void *v49;
  id v50;
  id v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  id *v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  id v62[4];
  objc_super v63;
  unsigned __int8 v64;
  uint64_t v65;

  v56 = a6;
  v65 = *MEMORY[0x24BDAC8D0];
  v61 = sub_23361D6A0();
  v11 = *(_QWORD *)(v61 - 8);
  v12 = MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v59 = (char *)&v52 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for ManagedInternalTransaction();
  v63.receiver = (id)swift_getObjCClassFromMetadata();
  v63.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v18 = objc_msgSendSuper2(&v63, sel_fetchRequest);
  v19 = (void *)sub_23361E3D8();
  objc_msgSend(v18, sel_setRelationshipKeyPathsForPrefetching_, v19);

  v57 = v18;
  objc_msgSend(v18, sel_setReturnsObjectsAsFaults_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_233626360;
  v62[0] = a1;
  v62[1] = a2;
  v62[2] = a3;
  v62[3] = a4;
  v21 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 1, 1, v21);
  v64 = 3;
  v22 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)v62, 0, (uint64_t)v17, &v64);
  sub_233168608((uint64_t)v17, &qword_256047470);
  v53 = (_QWORD *)v20;
  *(_QWORD *)(v20 + 32) = v22;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v23 = swift_allocObject();
  v24 = (_QWORD *)v23;
  *(_OWORD *)(v23 + 16) = xmmword_233623D60;
  v25 = *(_QWORD *)(a5 + 16);
  v26 = (id)MEMORY[0x24BEE4AF8];
  if (v25)
  {
    v52 = (_QWORD *)v23;
    v62[0] = (id)MEMORY[0x24BEE4AF8];
    v27 = v62;
    sub_23361EE70();
    v28 = sub_233398658(a5);
    v30 = v29;
    v32 = v31 & 1;
    v58 = a5 + 56;
    while ((v28 & 0x8000000000000000) == 0 && v28 < 1 << *(_BYTE *)(a5 + 32))
    {
      if (((*(_QWORD *)(v58 + (((unint64_t)v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(a5 + 36) != (_DWORD)v30)
        goto LABEL_20;
      v33 = v59;
      v34 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v59, *(_QWORD *)(a5 + 48) + *(_QWORD *)(v11 + 72) * v28, v61);
      v35 = v60;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v33, v34);
      sub_23361D658();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v34);
      v27 = v62;
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      v36 = sub_2334F22E0(v28, v30, v32 & 1, a5);
      v28 = v36;
      v30 = v37;
      v32 = v38 & 1;
      if (!--v25)
      {
        sub_233193A50(v36, v37, v38 & 1);
        v26 = v62[0];
        v24 = v52;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_9:
  sub_2331E28A0();
  v24[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_25604B340);
  v24[8] = sub_233369784();
  v24[4] = v26;
  v39 = sub_23361E6B4();
  v40 = v53;
  v53[5] = v39;
  v62[0] = v40;
  sub_23361E408();
  v41 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v42 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v41);

  v43 = v57;
  objc_msgSend(v57, sel_setPredicate_, v42);

  v44 = v55;
  v27 = v56;
  v45 = sub_23361E984();
  if (v44)
    goto LABEL_25;
  v11 = v45;
  if (v45 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v46 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v46)
      goto LABEL_22;
LABEL_12:
    if (v46 < 1)
      __break(1u);
    for (i = 0; i != v46; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v48 = (id)MEMORY[0x234933120](i, v11);
      else
        v48 = *(id *)(v11 + 8 * i + 32);
      v49 = v48;
      objc_msgSend(v48, sel_setSharedId_, 0);

    }
    goto LABEL_22;
  }
  v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v46)
    goto LABEL_12;
LABEL_22:
  swift_bridgeObjectRelease();
  v62[0] = 0;
  if ((objc_msgSend(v27, sel_save_, v62) & 1) != 0)
  {
    v50 = v62[0];

    return;
  }
  v51 = v62[0];
  sub_23361D1B4();

  swift_willThrow();
  v43 = v57;
LABEL_25:

}

void sub_233398174(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t i;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  _QWORD v28[2];
  id v29[4];
  objc_super v30;
  unsigned __int8 v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalTransaction();
  v30.receiver = (id)swift_getObjCClassFromMetadata();
  v30.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v13 = objc_msgSendSuper2(&v30, sel_fetchRequest);
  v14 = (void *)sub_23361E3D8();
  objc_msgSend(v13, sel_setRelationshipKeyPathsForPrefetching_, v14);

  v29[0] = a1;
  v29[1] = a2;
  v29[2] = a3;
  v29[3] = a4;
  v15 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  v31 = 2;
  v16 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)v29, 0, (uint64_t)v12, &v31);
  sub_233168608((uint64_t)v12, &qword_256047470);
  objc_msgSend(v13, sel_setPredicate_, v16);

  objc_msgSend(v13, sel_setReturnsObjectsAsFaults_, 1);
  v17 = v28[1];
  v18 = sub_23361E984();
  if (!v17)
  {
    v19 = v18;
    if (v18 >> 62)
    {
      v25 = a5;
      swift_bridgeObjectRetain();
      v20 = sub_23361EF30();
      if (v20)
        goto LABEL_4;
    }
    else
    {
      v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = a5;
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_4:
        if (v20 < 1)
          __break(1u);
        for (i = 0; i != v20; ++i)
        {
          if ((v19 & 0xC000000000000001) != 0)
            v23 = (id)MEMORY[0x234933120](i, v19);
          else
            v23 = *(id *)(v19 + 8 * i + 32);
          v24 = v23;
          objc_msgSend(a5, sel_deleteObject_, v23);

        }
      }
    }

    swift_bridgeObjectRelease_n();
    v29[0] = 0;
    if ((objc_msgSend(a5, sel_save_, v29) & 1) != 0)
    {
      v26 = v29[0];
    }
    else
    {
      v27 = v29[0];
      sub_23361D1B4();

      swift_willThrow();
    }
  }

}

uint64_t BankConnectAccountUnlinker.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  return v0;
}

uint64_t BankConnectAccountUnlinker.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  return swift_deallocClassInstance();
}

uint64_t sub_2333984D4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectAccountUnlinker.unlinkAccount(with:)(a1);
}

uint64_t sub_233398524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_233398568()
{
  uint64_t v0;

  sub_233397BFC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(id **)(v0 + 56));
}

void sub_233398588()
{
  void **v0;

  sub_233398174(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t dispatch thunk of BankConnectAccountUnlinking.unlinkAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for BankConnectAccountUnlinker()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectAccountUnlinker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectAccountUnlinker.__allocating_init(store:consentStore:messagesManager:webServiceClientProvider:paymentPassDataSourceProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_233398658(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_233398730(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  sub_23339795C(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

void sub_233398750(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_233397184(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), a1);
}

uint64_t sub_233398770(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2331676FC;
  return sub_233396FCC(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t static ManagedWalletMessage.existingMessage(withTermsAndConditionsID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit20ManagedWalletMessage;
  v7 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedWalletMessage.messagesWithOrder(_:in:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  objc_super v12;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit20ManagedWalletMessage;
  v5 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D50;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v8 = sub_2331683F0();
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = v2;
  *(_QWORD *)(v6 + 80) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v5, sel_setPredicate_, v9);

  v10 = sub_23361E984();
  return v10;
}

id ManagedWalletMessage.__allocating_init(messageType:creationDate:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char v17;

  v13 = *(_OWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v13;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v9 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a3);
  ManagedWalletMessage.messageType.setter((uint64_t)v14);
  v10 = (void *)sub_23361D5B0();
  objc_msgSend(v9, sel_setCreationDate_, v10);

  v11 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a2, v11);
  return v9;
}

void ManagedWalletMessage.messageType.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  switch(objc_msgSend(v1, sel_messageTypeValue))
  {
    case 0u:
      v4 = objc_msgSend(v1, sel_title);
      if (v4)
      {
        v5 = v4;
        v6 = sub_23361E150();
        v8 = v7;

      }
      else
      {
        v6 = 0;
        v8 = 0xE000000000000000;
      }
      v45 = objc_msgSend(v2, sel_body);
      if (v45)
      {
        v46 = v45;
        v47 = sub_23361E150();
        v49 = v48;

      }
      else
      {
        v47 = 0;
        v49 = 0;
      }
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v47;
      *(_QWORD *)(a1 + 24) = v49;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 0;
      *(_BYTE *)(a1 + 48) = 0;
      return;
    case 1u:
      v30 = objc_msgSend(v1, sel_orderTypeIdentifier);
      if (!v30)
        goto LABEL_27;
      v31 = v30;
      v32 = sub_23361E150();
      v34 = v33;

      v35 = objc_msgSend(v2, sel_orderIdentifier);
      if (!v35)
        goto LABEL_26;
      v36 = v35;
      v37 = sub_23361E150();
      v39 = v38;

      v40 = objc_msgSend(v2, sel_orderFulfillmentIdentifier);
      if (v40)
      {
        v41 = v40;
        v42 = sub_23361E150();
        v44 = v43;

        *(_QWORD *)a1 = v32;
        *(_QWORD *)(a1 + 8) = v34;
        *(_QWORD *)(a1 + 16) = v37;
        *(_QWORD *)(a1 + 24) = v39;
        *(_QWORD *)(a1 + 32) = v42;
        *(_QWORD *)(a1 + 40) = v44;
        v24 = 2;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 2u:
      v9 = objc_msgSend(v1, sel_orderTypeIdentifier);
      if (!v9)
        goto LABEL_27;
      v10 = v9;
      v11 = sub_23361E150();
      v13 = v12;

      v14 = objc_msgSend(v2, sel_orderIdentifier);
      if (!v14)
        goto LABEL_22;
      v15 = v14;
      v16 = sub_23361E150();
      v18 = v17;

      v19 = objc_msgSend(v2, sel_orderReturnIdentifier);
      if (!v19)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_27:
        sub_23361EF24();
        __break(1u);
        JUMPOUT(0x233398FBCLL);
      }
      v20 = v19;
      v21 = sub_23361E150();
      v23 = v22;

      *(_QWORD *)a1 = v11;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v18;
      *(_QWORD *)(a1 + 32) = v21;
      *(_QWORD *)(a1 + 40) = v23;
      v24 = 3;
LABEL_14:
      *(_BYTE *)(a1 + 48) = v24;
      return;
    case 3u:
      v25 = objc_msgSend(v1, sel_termsAndConditionsID);
      if (!v25)
        goto LABEL_27;
      v26 = v25;
      v27 = sub_23361E150();
      v29 = v28;

      *(_QWORD *)a1 = v27;
      *(_QWORD *)(a1 + 8) = v29;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      v24 = 1;
      goto LABEL_14;
    default:
      sub_23361ED98();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_messageTypeValue);
      sub_23361F1D0();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      goto LABEL_27;
  }
}

void ManagedWalletMessage.messageType.setter(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_233399018(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unsigned __int8 v29;
  void *v30;
  uint64_t v31;
  void *v32;

  objc_msgSend(v27, sel_setMessageTypeValue_, 0);
  v30 = (void *)sub_23361E12C();
  objc_msgSend(v27, sel_setTitle_, v30);

  if (v25)
    v31 = sub_23361E12C();
  else
    v31 = 0;
  v32 = (void *)v31;
  objc_msgSend(v27, sel_setBody_);
  sub_233350A18(v22, v23, v24, v25, v26, v28, v29);

}

Swift::Void __swiftcall ManagedWalletMessage.didSave()()
{
  id v0;

  if ((PKRunningInPassd() & 1) == 0)
  {
    v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init);
    objc_msgSend(v0, sel_updateFinanceKitApplicationMessages);

  }
}

id ManagedWalletMessage.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWalletMessage.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWalletMessage.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double ManagedWalletMessage.fullyQualifiedOrderIdentifier.getter@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_orderTypeIdentifier);
  if (v4)
  {
    v5 = v4;
    v6 = sub_23361E150();
    v8 = v7;

    v9 = objc_msgSend(v2, sel_orderIdentifier);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23361E150();
      v13 = v12;

      *a1 = v6;
      a1[1] = v8;
      a1[2] = v11;
      a1[3] = v13;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

void sub_233399504(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_orderTypeIdentifier);
  if (v4)
  {
    v5 = sub_23361E150();
    v7 = v6;

    v8 = objc_msgSend(v3, sel_orderIdentifier);
    if (v8)
    {
      v9 = v8;
      v10 = sub_23361E150();
      v4 = v11;

    }
    else
    {
      swift_bridgeObjectRelease();
      v5 = 0;
      v7 = 0;
      v10 = 0;
      v4 = 0;
    }
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v10 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v10;
  a2[3] = (uint64_t)v4;
}

void sub_2333995CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[4];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  v4[3] = v3;
  sub_2332DCF40(v4[0], v1);
  ManagedWalletMessage.fullyQualifiedOrderIdentifier.setter(v4);
}

void ManagedWalletMessage.fullyQualifiedOrderIdentifier.setter(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a1[1];
  if (v2)
  {
    v3 = *a1;
    swift_bridgeObjectRetain();
    v4 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setOrderIdentifier_, v4);

    swift_bridgeObjectRetain();
    sub_2332DCF70(v3, v2);
    v5 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v1, sel_setOrderIdentifier_, 0);
    v5 = 0;
  }
  objc_msgSend(v1, sel_setOrderTypeIdentifier_, v5);

}

void (*ManagedWalletMessage.fullyQualifiedOrderIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = objc_msgSend(v1, sel_orderTypeIdentifier);
  if (!v4)
    goto LABEL_5;
  v5 = v4;
  v6 = sub_23361E150();
  v8 = v7;

  v9 = objc_msgSend(v1, sel_orderIdentifier);
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
    return sub_2333997BC;
  }
  v10 = v9;
  v11 = sub_23361E150();
  v13 = v12;

  *v3 = v6;
  v3[1] = v8;
  v3[2] = v11;
  v3[3] = v13;
  return sub_2333997BC;
}

void sub_2333997BC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 8);
  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v2 + 32);
    if (v3)
    {
      v5 = *(_QWORD *)v2;
      sub_2332DCF40(*(_QWORD *)v2, v3);
      swift_bridgeObjectRetain();
      v6 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setOrderIdentifier_, v6);

      swift_bridgeObjectRetain();
      sub_2332DCF70(v5, v3);
      v7 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      objc_msgSend(*(id *)(v2 + 32), sel_setOrderIdentifier_, 0);
      v7 = 0;
    }
    objc_msgSend(*(id *)(v2 + 32), sel_setOrderTypeIdentifier_, v7);

    sub_2332DCF70(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  }
  else
  {
    v8 = *(void **)(v2 + 32);
    if (v3)
    {
      v9 = *(_QWORD *)v2;
      swift_bridgeObjectRetain();
      v10 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setOrderIdentifier_, v10);

      swift_bridgeObjectRetain();
      sub_2332DCF70(v9, v3);
      v11 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      objc_msgSend(*(id *)(v2 + 32), sel_setOrderIdentifier_, 0);
      v11 = 0;
    }
    objc_msgSend(*(id *)(v2 + 32), sel_setOrderTypeIdentifier_, v11);

  }
  free((void *)v2);
}

uint64_t ManagedWalletMessage.order()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0;
  v3 = objc_msgSend(v0, sel_orderTypeIdentifier);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = sub_23361E150();
  v7 = v6;

  v8 = objc_msgSend(v2, sel_orderIdentifier);
  if (!v8)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = v8;
  v10 = sub_23361E150();
  v12 = v11;

  v13 = objc_msgSend(v2, sel_managedObjectContext);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = v13;
  *(_QWORD *)&v18 = v5;
  *((_QWORD *)&v18 + 1) = v7;
  v19 = v10;
  v20 = v12;
  v15 = type metadata accessor for ManagedOrder();
  v16 = static ManagedOrder.existingOrder(with:in:)(&v18, (uint64_t)v14);
  if (!v1)
    v15 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v15;
}

void sub_233399AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7[6];
  unsigned __int8 v8;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  v7[0] = *(_QWORD *)a1;
  v7[1] = v1;
  v7[2] = v2;
  v7[3] = v3;
  v7[4] = v4;
  v7[5] = v5;
  v8 = v6;
  sub_23339AA3C(v7[0], v1, v2, v3, v4, v5, v6);
  ManagedWalletMessage.messageType.setter((uint64_t)v7);
}

void (*ManagedWalletMessage.messageType.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  ManagedWalletMessage.messageType.getter((uint64_t)v3);
  return sub_233399B64;
}

void sub_233399B64(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD v11[6];
  unsigned __int8 v12;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11[0] = v4;
  v11[1] = v5;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = v8;
  v11[5] = v9;
  v12 = v10;
  if ((a2 & 1) != 0)
  {
    sub_23339AA3C(v4, v5, v6, v7, v8, v9, v10);
    ManagedWalletMessage.messageType.setter((uint64_t)v11);
    sub_233350A18(*v3, v3[1], v3[2], v3[3], v3[4], v3[5], *((_BYTE *)v3 + 48));
  }
  else
  {
    ManagedWalletMessage.messageType.setter((uint64_t)v11);
  }
  free(v3);
}

id static ManagedWalletMessage.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit20ManagedWalletMessage;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedWalletMessage.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedWalletMessage.predicateForMessagesWithOrder(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D50;
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v7 = sub_2331683F0();
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v3;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = v2;
  *(_QWORD *)(v5 + 80) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

uint64_t static ManagedWalletMessage.predicate(withTermsAndConditionsID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

void static ManagedWalletMessage.cleanupInvalidWalletMessages(context:userDefaults:deviceInfo:)(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17[5];

  v17[4] = *(id *)MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4) & 1) != 0)
  {
    v6 = a2[3];
    v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    if (((*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 24))(0xD00000000000002CLL, 0x8000000233674E90, v6, v7) & 1) == 0)
    {
      v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
      v9 = _s10FinanceKit20ManagedWalletMessageC019predicateForInvalidE4TypeSo11NSPredicateCyFZ_0();
      objc_msgSend(v8, sel_setPredicate_, v9);

      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v8);
      v17[0] = 0;
      v11 = objc_msgSend(a1, sel_executeRequest_error_, v10, v17);
      if (v11)
      {
        v12 = v11;
        v13 = v17[0];

        v14 = a2[3];
        v15 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v14);
        v17[3] = (id)MEMORY[0x24BEE1328];
        LOBYTE(v17[0]) = 1;
        (*(void (**)(id *, unint64_t, unint64_t, uint64_t, uint64_t))(v15 + 8))(v17, 0xD00000000000002CLL, 0x8000000233674E90, v14, v15);

        sub_23319F5C0((uint64_t)v17);
      }
      else
      {
        v16 = v17[0];
        sub_23361D1B4();

        swift_willThrow();
      }
    }
  }
}

void _s10FinanceKit20ManagedWalletMessageC0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_23339A0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (v9)
  {
    v46 = v11;
    v20 = v11;
    v21 = v6;
    v22 = v4;
    v23 = v5;
    v24 = v2;
    v25 = v3;
    v26 = v0;
    v27 = v1;
    sub_23339AA3C(v7, v20, v21, v22, v10, v0, v9);
    sub_23339AA3C(v12, v27, v25, v49, v24, v23, v8);
    sub_233350A18(v12, v27, v25, v49, v24, v23, v8);
    v28 = v7;
    v29 = v46;
    v30 = v47;
    v31 = v48;
    v32 = v10;
    v33 = v26;
    v34 = v9;
LABEL_11:
    sub_233350A18(v28, v29, v31, v30, v32, v33, v34);
    goto LABEL_12;
  }
  v44 = v0;
  if (v12 != v7 || v1 != v11)
  {
    v13 = v1;
    v14 = v2;
    v15 = v3;
    v16 = sub_23361F224();
    v3 = v15;
    v2 = v14;
    v1 = v13;
    v0 = v44;
    if ((v16 & 1) == 0)
    {
      sub_23339AA3C(v7, v11, v6, v4, v10, v44, 0);
      sub_23339AA3C(v12, v13, v15, v49, v14, v5, 0);
      sub_233350A18(v12, v13, v15, v49, v14, v5, 0);
      v28 = v7;
      v29 = v11;
      v30 = v47;
      v31 = v48;
      v32 = v10;
      v33 = v44;
      v34 = 0;
      goto LABEL_11;
    }
  }
  v17 = v3;
  v18 = v2;
  v45 = v5;
  if (!v49)
  {
    v36 = v1;
    sub_23339AA3C(v7, v11, v6, v4, v10, v0, 0);
    sub_23339AA3C(v12, v36, v17, 0, v18, v45, 0);
    swift_bridgeObjectRetain();
    sub_233350A18(v12, v36, v17, 0, v18, v45, 0);
    sub_233350A18(v7, v11, v48, v4, v10, v44, 0);
    if (!v4)
    {
LABEL_19:
      v19 = 1;
      return v19 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_12:
    v19 = 0;
    return v19 & 1;
  }
  if (!v4)
  {
    v37 = v6;
    v38 = v0;
    v39 = v1;
    sub_23339AA3C(v7, v11, v37, 0, v10, v0, 0);
    sub_23339AA3C(v12, v39, v17, v49, v18, v5, 0);
    sub_233350A18(v12, v39, v17, v49, v18, v5, 0);
    v28 = v7;
    v29 = v11;
    v31 = v48;
    v30 = 0;
    v32 = v10;
    v33 = v38;
    v34 = 0;
    goto LABEL_11;
  }
  v43 = v1;
  if (v3 != v6 || v49 != v4)
  {
    v40 = v4;
    v41 = v0;
    v42 = sub_23361F224();
    sub_23339AA3C(v7, v11, v6, v40, v10, v41, 0);
    sub_23339AA3C(v12, v43, v17, v49, v18, v45, 0);
    sub_233350A18(v12, v43, v17, v49, v18, v45, 0);
    sub_233350A18(v7, v11, v6, v40, v10, v44, 0);
    if ((v42 & 1) != 0)
      goto LABEL_19;
    goto LABEL_12;
  }
  sub_23339AA3C(v7, v11, v3, v49, v10, v0, 0);
  sub_23339AA3C(v12, v43, v17, v49, v18, v5, 0);
  sub_233350A18(v12, v43, v17, v49, v18, v5, 0);
  sub_233350A18(v7, v11, v17, v49, v10, v44, 0);
  v19 = 1;
  return v19 & 1;
}

uint64_t sub_23339AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;

  if (a7 - 2 < 2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if (!a7)
  {
LABEL_6:
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (a7 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

id _s10FinanceKit20ManagedWalletMessageC019predicateForInvalidE4TypeSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = MEMORY[0x24BEE3F30];
  v2 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v0 + 64) = v2;
  *(_WORD *)(v0 + 32) = 1;
  v3 = (void *)sub_23361E6B4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = v1;
  *(_QWORD *)(v4 + 64) = v2;
  *(_WORD *)(v4 + 32) = 2;
  v5 = (void *)sub_23361E6B4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = v1;
  *(_QWORD *)(v6 + 64) = v2;
  *(_WORD *)(v6 + 32) = 3;
  v7 = (void *)sub_23361E6B4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23362D290;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v7;
  sub_23361E408();
  v9 = v3;
  v10 = v5;
  v11 = v7;
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v12);

  return v13;
}

void sub_23339AC9C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setCreationDate_, v3);

}

char *keypath_get_selector_priority()
{
  return sel_priority;
}

id sub_23339ACF0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_priority);
  *a2 = result;
  return result;
}

id sub_23339AD20(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPriority_, *a1);
}

double sub_23339AD3C@<D0>(uint64_t a1@<X8>)
{
  char v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  char v7;

  ManagedWalletMessage.messageType.getter((uint64_t)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = v2;
  return result;
}

uint64_t type metadata accessor for ManagedWalletMessage()
{
  return objc_opt_self();
}

uint64_t destroy for ManagedWalletMessage.MessageType(uint64_t a1)
{
  return sub_233350A18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for ManagedWalletMessage.MessageType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_23339AA3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for ManagedWalletMessage.MessageType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_23339AA3C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_233350A18(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedWalletMessage.MessageType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_233350A18(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedWalletMessage.MessageType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedWalletMessage.MessageType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_23339AFD0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_23339AFD8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ManagedWalletMessage.MessageType()
{
  return &type metadata for ManagedWalletMessage.MessageType;
}

id ManagedAccountBalanceImporter.insertOrUpdateAccountBalance(_:managedAccount:context:)(uint64_t a1, void *a2, void *a3)
{
  return sub_23339DFA4(a1, a2, a3);
}

id ManagedAccountBalanceImporter.insertOrUpdateAccountBalance(_:managedAccount:context:)(void *a1, void *a2, void *a3)
{
  return sub_23339D8E0(a1, a2, a3);
}

uint64_t AccountBalanceChanges.init(balance:rawUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  int v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  int v92;
  __int16 v93;
  int v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t (*v132)(uint64_t);
  uint64_t v133;
  __int16 v134;
  int v135;
  __int16 v136;
  uint64_t result;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t, uint64_t);
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t (*v156)(char *, uint64_t, uint64_t);
  uint64_t v157;
  unsigned __int8 v158;
  char v159[9];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v151 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v153 = (uint64_t)&v138 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v140 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v138 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v145 = (uint64_t)&v138 - v16;
  v17 = type metadata accessor for BalanceCalculation(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v143 = (char *)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v149 = (uint64_t)&v138 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v148 = (char *)&v138 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v146 = (char *)&v138 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v138 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v138 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E48);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v152 = (char *)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v142 = (char *)&v138 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v141 = (char *)&v138 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v147 = (char *)&v138 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v138 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v138 - v43;
  v45 = *(int *)(type metadata accessor for InternalAccountBalance(0) + 20);
  v144 = a1;
  v155 = a1 + v45;
  sub_2331684BC(a1 + v45, (uint64_t)v30, type metadata accessor for BalanceCalculation);
  v157 = v17;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v150 = v15;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v47 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v44, 1, 1, v47);
      v48 = type metadata accessor for BalanceCalculation;
      v49 = (uint64_t)v30;
    }
    else
    {
      v50 = &v30[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_2332E50E0((uint64_t)v30, (uint64_t)v44);
      v47 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v44, 0, 1, v47);
      v49 = (uint64_t)v50;
      v48 = type metadata accessor for BalanceCalculation.CalculationDetails;
    }
    sub_233168500(v49, v48);
  }
  else
  {
    sub_2332E50E0((uint64_t)v30, (uint64_t)v44);
    v47 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v44, 0, 1, v47);
  }
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v139 = *(_QWORD *)(v47 - 8);
  v156 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 48);
  v51 = v156(v44, 1, v47);
  v154 = a3;
  if (v51 != 1)
  {
    v59 = *((unsigned int *)v44 + 4);
    v61 = *(_QWORD *)v44;
    v60 = *((_QWORD *)v44 + 1);
    sub_233168500((uint64_t)v44, type metadata accessor for BalanceCalculation.CalculationDetails);
    v55 = RawBankConnectData.Account.availableBalance.getter();
    v56 = v63;
    v57 = v64;
    if ((v64 & 0x100000000) != 0)
    {
      v62 = 0;
      v58 = v64 & 0x100000000;
      goto LABEL_15;
    }
    if ((MEMORY[0x234932E38](v61, v60, v59, v55, v63, v64) & 1) == 0)
    {
      v58 = 0;
      v62 = 0;
      goto LABEL_15;
    }
LABEL_12:
    v61 = 0;
    v60 = 0;
    v65 = 0;
    v55 = 0;
    v56 = 0;
    v66 = 0;
    v67 = 1;
    goto LABEL_16;
  }
  sub_233168608((uint64_t)v44, &qword_256042E48);
  v52 = RawBankConnectData.Account.availableBalance.getter();
  if ((v54 & 0x100000000) != 0)
    goto LABEL_12;
  v55 = v52;
  v56 = v53;
  v57 = v54;
  v58 = 0;
  LODWORD(v59) = 0;
  v60 = 0;
  v61 = 0;
  v62 = 0x100000000;
LABEL_15:
  v67 = 0;
  v65 = v62 | v59;
  v66 = v57 | (unint64_t)v58;
LABEL_16:
  v68 = v154;
  *v154 = v61;
  v68[1] = v60;
  v69 = v68;
  v68[2] = v65;
  v68[3] = v55;
  v68[4] = v56;
  *((_DWORD *)v68 + 10) = v66;
  *((_BYTE *)v68 + 44) = BYTE4(v66);
  *((_BYTE *)v68 + 45) = v67;
  v70 = v155;
  sub_2331684BC(v155, (uint64_t)v28, type metadata accessor for BalanceCalculation);
  v71 = swift_getEnumCaseMultiPayload();
  if (v71)
  {
    if (v71 == 1)
    {
      v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
      v72(v42, 1, 1, v47);
      v73 = type metadata accessor for BalanceCalculation;
      v74 = (uint64_t)v28;
    }
    else
    {
      v75 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_2332E50E0((uint64_t)v28, (uint64_t)v42);
      v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
      v72(v42, 0, 1, v47);
      v73 = type metadata accessor for BalanceCalculation.CalculationDetails;
      v74 = (uint64_t)v75;
    }
    sub_233168500(v74, v73);
  }
  else
  {
    sub_2332E50E0((uint64_t)v28, (uint64_t)v42);
    v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
    v72(v42, 0, 1, v47);
  }
  v76 = (uint64_t)v140;
  if (v156(v42, 1, v47) == 1)
  {
    sub_233168608((uint64_t)v42, &qword_256042E48);
    v77 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
  }
  else
  {
    v78 = &v42[*(int *)(v47 + 20)];
    v79 = sub_23361D634();
    v80 = *(_QWORD *)(v79 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v76, v78, v79);
    sub_233168500((uint64_t)v42, type metadata accessor for BalanceCalculation.CalculationDetails);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v76, 0, 1, v79);
  }
  v82 = (uint64_t)v146;
  v81 = (uint64_t)v147;
  v83 = v153;
  RawBankConnectData.Account.availableBalanceAsOf.getter(v153);
  v84 = v145;
  sub_23339BE94(v76, v83, v145);
  v85 = (int *)type metadata accessor for AccountBalanceChanges();
  sub_233168478(v84, (uint64_t)v69 + v85[5], &qword_25604C050);
  sub_2331684BC(v70, v82, type metadata accessor for BalanceCalculation);
  v86 = swift_getEnumCaseMultiPayload();
  v87 = (uint64_t)v148;
  if (v86)
  {
    if (v86 == 1)
    {
      v72((char *)v81, 1, 1, v47);
      v88 = type metadata accessor for BalanceCalculation;
      v89 = v82;
    }
    else
    {
      v90 = v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      sub_2332E50E0(v82, v81);
      v72((char *)v81, 0, 1, v47);
      v88 = type metadata accessor for BalanceCalculation.CalculationDetails;
      v89 = v90;
    }
    sub_233168500(v89, v88);
  }
  else
  {
    sub_2332E50E0(v82, v81);
    v72((char *)v81, 0, 1, v47);
  }
  if (v156((char *)v81, 1, v47) != 1)
  {
    v92 = *(unsigned __int8 *)(v81 + *(int *)(v47 + 24));
    sub_233168500(v81, type metadata accessor for BalanceCalculation.CalculationDetails);
    RawBankConnectData.Account.availableBalanceCreditDebitIndicator.getter(v159);
    v91 = v159[0];
    if (v159[0] == 2 || v92 == ((v159[0] & 1) == 0))
      goto LABEL_37;
LABEL_36:
    v93 = 3;
    goto LABEL_38;
  }
  sub_233168608(v81, &qword_256042E48);
  RawBankConnectData.Account.availableBalanceCreditDebitIndicator.getter(v159);
  v91 = v159[0];
  if (v159[0] == 2)
    goto LABEL_36;
  LOWORD(v92) = 2;
LABEL_37:
  v93 = v92 | (v91 << 8);
LABEL_38:
  *(_WORD *)((char *)v69 + v85[6]) = v93;
  sub_2331684BC(v70, v87, type metadata accessor for BalanceCalculation);
  v94 = swift_getEnumCaseMultiPayload();
  if (v94)
  {
    if (v94 == 1)
    {
      v95 = (uint64_t)v141;
      sub_2332E50E0(v87, (uint64_t)v141);
      v72((char *)v95, 0, 1, v47);
      goto LABEL_44;
    }
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
    v95 = (uint64_t)v141;
    sub_2332E50E0(v87 + *(int *)(v97 + 48), (uint64_t)v141);
    v72((char *)v95, 0, 1, v47);
    v96 = type metadata accessor for BalanceCalculation.CalculationDetails;
  }
  else
  {
    v95 = (uint64_t)v141;
    v72(v141, 1, 1, v47);
    v96 = type metadata accessor for BalanceCalculation;
  }
  sub_233168500(v87, v96);
LABEL_44:
  if (v156((char *)v95, 1, v47) != 1)
  {
    v105 = *(unsigned int *)(v95 + 16);
    v107 = *(_QWORD *)v95;
    v106 = *(_QWORD *)(v95 + 8);
    sub_233168500(v95, type metadata accessor for BalanceCalculation.CalculationDetails);
    v101 = RawBankConnectData.Account.bookedBalance.getter();
    v102 = v109;
    v103 = v110;
    if ((v110 & 0x100000000) != 0)
    {
      v108 = 0;
      v104 = v110 & 0x100000000;
      goto LABEL_52;
    }
    if ((MEMORY[0x234932E38](v107, v106, v105, v101, v109, v110) & 1) == 0)
    {
      v104 = 0;
      v108 = 0;
      goto LABEL_52;
    }
LABEL_49:
    v107 = 0;
    v106 = 0;
    v111 = 0;
    v101 = 0;
    v102 = 0;
    v112 = 0;
    v113 = 1;
    goto LABEL_53;
  }
  sub_233168608(v95, &qword_256042E48);
  v98 = RawBankConnectData.Account.bookedBalance.getter();
  if ((v100 & 0x100000000) != 0)
    goto LABEL_49;
  v101 = v98;
  v102 = v99;
  v103 = v100;
  v104 = 0;
  LODWORD(v105) = 0;
  v106 = 0;
  v107 = 0;
  v108 = 0x100000000;
LABEL_52:
  v113 = 0;
  v111 = v108 | v105;
  v112 = v103 | (unint64_t)v104;
LABEL_53:
  v115 = v154;
  v114 = v155;
  v116 = (char *)v154 + v85[7];
  *(_QWORD *)v116 = v107;
  *((_QWORD *)v116 + 1) = v106;
  *((_QWORD *)v116 + 2) = v111;
  *((_QWORD *)v116 + 3) = v101;
  *((_QWORD *)v116 + 4) = v102;
  v116[44] = BYTE4(v112);
  *((_DWORD *)v116 + 10) = v112;
  v116[45] = v113;
  v117 = v149;
  sub_2331684BC(v114, v149, type metadata accessor for BalanceCalculation);
  v118 = swift_getEnumCaseMultiPayload();
  v140 = v72;
  if (v118)
  {
    if (v118 == 1)
    {
      v119 = (uint64_t)v142;
      sub_2332E50E0(v117, (uint64_t)v142);
      v72((char *)v119, 0, 1, v47);
      goto LABEL_59;
    }
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
    v119 = (uint64_t)v142;
    sub_2332E50E0(v117 + *(int *)(v121 + 48), (uint64_t)v142);
    v72((char *)v119, 0, 1, v47);
    v120 = type metadata accessor for BalanceCalculation.CalculationDetails;
  }
  else
  {
    v119 = (uint64_t)v142;
    v72(v142, 1, 1, v47);
    v120 = type metadata accessor for BalanceCalculation;
  }
  sub_233168500(v117, v120);
LABEL_59:
  v122 = (uint64_t)v143;
  v123 = v144;
  if (v156((char *)v119, 1, v47) == 1)
  {
    sub_233168608(v119, &qword_256042E48);
    v124 = sub_23361D634();
    v125 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v151, 1, 1, v124);
  }
  else
  {
    v126 = sub_23361D634();
    v127 = *(_QWORD *)(v126 - 8);
    v125 = (uint64_t)v151;
    (*(void (**)(void))(v127 + 16))();
    sub_233168500(v119, type metadata accessor for BalanceCalculation.CalculationDetails);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v125, 0, 1, v126);
  }
  v128 = (uint64_t)v152;
  v129 = v153;
  RawBankConnectData.Account.bookedBalanceAsOf.getter(v153);
  v130 = (uint64_t)v150;
  sub_23339BE94(v125, v129, (uint64_t)v150);
  sub_233168478(v130, (uint64_t)v115 + v85[8], &qword_25604C050);
  sub_2331684BC(v155, v122, type metadata accessor for BalanceCalculation);
  v131 = swift_getEnumCaseMultiPayload();
  if (v131)
  {
    if (v131 == 1)
    {
      sub_2332E50E0(v122, v128);
      v140((char *)v128, 0, 1, v47);
      goto LABEL_68;
    }
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
    sub_2332E50E0(v122 + *(int *)(v133 + 48), v128);
    v140((char *)v128, 0, 1, v47);
    v132 = type metadata accessor for BalanceCalculation.CalculationDetails;
  }
  else
  {
    v140((char *)v128, 1, 1, v47);
    v132 = type metadata accessor for BalanceCalculation;
  }
  sub_233168500(v122, v132);
LABEL_68:
  if (v156((char *)v128, 1, v47) == 1)
  {
    sub_233168608(v128, &qword_256042E48);
    RawBankConnectData.Account.bookedBalanceCreditDebitIndicator.getter((char *)&v158);
    v134 = v158;
    if (v158 != 2)
    {
      LOWORD(v135) = 2;
LABEL_74:
      v136 = v135 | (v134 << 8);
      goto LABEL_75;
    }
  }
  else
  {
    v135 = *(unsigned __int8 *)(v128 + *(int *)(v47 + 24));
    sub_233168500(v128, type metadata accessor for BalanceCalculation.CalculationDetails);
    RawBankConnectData.Account.bookedBalanceCreditDebitIndicator.getter((char *)&v158);
    v134 = v158;
    if (v158 == 2 || v135 == ((v158 & 1) == 0))
      goto LABEL_74;
  }
  v136 = 3;
LABEL_75:
  sub_233168500(a2, type metadata accessor for RawBankConnectData.Account);
  result = sub_233168500(v123, type metadata accessor for InternalAccountBalance);
  *(_WORD *)((char *)v115 + v85[9]) = v136;
  return result;
}

uint64_t ManagedAccountBalanceImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedAccountBalanceImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

__n128 AccountBalanceChanges.availableAmount.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  __n128 result;
  __int128 v7;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_DWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 44);
  v5 = *(_BYTE *)(v1 + 45);
  result = *(__n128 *)v1;
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 44) = v4;
  *(_DWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 45) = v5;
  return result;
}

uint64_t AccountBalanceChanges.availableAmountAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccountBalanceChanges();
  return sub_2331686A0(v1 + *(int *)(v3 + 20), a1, &qword_25604C050);
}

uint64_t AccountBalanceChanges.availableAmountCreditDebitIndicator.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountBalanceChanges();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

__n128 AccountBalanceChanges.bookedAmount.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  __n128 result;
  __int128 v9;

  v3 = v1 + *(int *)(type metadata accessor for AccountBalanceChanges() + 28);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_DWORD *)(v3 + 40);
  v6 = *(_BYTE *)(v3 + 44);
  v7 = *(_BYTE *)(v3 + 45);
  result = *(__n128 *)v3;
  v9 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 44) = v6;
  *(_DWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 45) = v7;
  return result;
}

uint64_t AccountBalanceChanges.bookedAmountAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccountBalanceChanges();
  return sub_2331686A0(v1 + *(int *)(v3 + 32), a1, &qword_25604C050);
}

uint64_t AccountBalanceChanges.bookedAmountCreditDebitIndicator.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountBalanceChanges();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t sub_23339BE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2331686A0(a1, (uint64_t)v16, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(a2, v17, (uint64_t *)&unk_254247DA0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
LABEL_8:
      sub_233168608(a2, (uint64_t *)&unk_254247DA0);
      sub_233168608(a1, (uint64_t *)&unk_254247DA0);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
    }
    goto LABEL_6;
  }
  sub_2331686A0((uint64_t)v16, (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_233168608((uint64_t)v16, &qword_256042DA0);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_2331EED8C(&qword_2560426C8, MEMORY[0x24BDCE958]);
  v19 = sub_23361E108();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v24 = a3 + *(int *)(v23 + 48);
  sub_233168478(a1, a3, (uint64_t *)&unk_254247DA0);
  sub_233168478(a2, v24, (uint64_t *)&unk_254247DA0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 0, 1, v23);
}

uint64_t sub_23339C15C@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, __int16 *a3@<X8>)
{
  unsigned __int8 v4;
  __int16 v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  char v12;

  v4 = result;
  if (result != 3)
  {
    if (a2 == 3)
      goto LABEL_5;
    v7 = 0xE900000000000064;
    if ((_BYTE)result)
    {
      if (result == 1)
        v8 = 0x6574656C706D6F63;
      else
        v8 = 0x656C6C65636E6163;
      v9 = 0xE900000000000064;
      v10 = a2;
      if ((_BYTE)a2)
      {
LABEL_11:
        if (v10 == 1)
          v11 = 0x6574656C706D6F63;
        else
          v11 = 0x656C6C65636E6163;
        if (v8 != v11)
          goto LABEL_20;
        goto LABEL_18;
      }
    }
    else
    {
      v9 = 0xE400000000000000;
      v8 = 1852141679;
      v10 = a2;
      if ((_BYTE)a2)
        goto LABEL_11;
    }
    v7 = 0xE400000000000000;
    if (v8 != 1852141679)
      goto LABEL_20;
LABEL_18:
    if (v9 == v7)
    {
      result = swift_bridgeObjectRelease_n();
      goto LABEL_21;
    }
LABEL_20:
    v12 = sub_23361F224();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_5;
LABEL_21:
    v6 = 4;
    goto LABEL_22;
  }
  if (a2 == 3)
    goto LABEL_21;
LABEL_5:
  v6 = v4 | (unsigned __int16)(a2 << 8);
LABEL_22:
  *a3 = v6;
  return result;
}

uint64_t AccountBalanceChanges.init(balance:appleAccountUpdate:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  int v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  int v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  id v99;
  __int16 v100;
  uint64_t v101;
  __int16 v102;
  id v103;
  int v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t);
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  int *v113;
  void *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  _QWORD *v122;
  id v123;
  char v124;
  char *v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t);
  uint64_t v150;
  int v151;
  id v152;
  __int16 v153;
  __int16 v154;
  uint64_t result;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  int *v171;
  char *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  unint64_t v180;
  unsigned int v181;
  id v182;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v168 = (char *)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v166 = (char *)&v156 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v162 = (char *)&v156 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v160 = (char *)&v156 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v165 = (uint64_t)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v158 = (uint64_t)&v156 - v17;
  v18 = type metadata accessor for BalanceCalculation(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v173 = (uint64_t)&v156 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v171 = (int *)((char *)&v156 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v159 = (char *)&v156 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v172 = (char *)&v156 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v156 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E48);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v167 = (uint64_t)&v156 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v164 = (uint64_t)&v156 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v163 = (uint64_t)&v156 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v161 = (uint64_t)&v156 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v156 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v156 - v44;
  v46 = *(int *)(type metadata accessor for InternalAccountBalance(0) + 20);
  v170 = a1;
  v176 = a1 + v46;
  sub_2331684BC(a1 + v46, (uint64_t)v31, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v169 = v21;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v48 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v45, 1, 1, v48);
      v49 = type metadata accessor for BalanceCalculation;
      v50 = (uint64_t)v31;
    }
    else
    {
      v51 = &v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_2332E50E0((uint64_t)v31, (uint64_t)v45);
      v48 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v45, 0, 1, v48);
      v50 = (uint64_t)v51;
      v49 = type metadata accessor for BalanceCalculation.CalculationDetails;
    }
    sub_233168500(v50, v49);
  }
  else
  {
    sub_2332E50E0((uint64_t)v31, (uint64_t)v45);
    v48 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v45, 0, 1, v48);
  }
  v177 = v18;
  v174 = a3;
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v157 = *(_QWORD *)(v48 - 8);
  v175 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48);
  v52 = v175(v45, 1, v48);
  if (v52 == 1)
  {
    sub_233168608((uint64_t)v45, &qword_256042E48);
    v53 = 0;
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v55 = *((unsigned int *)v45 + 4);
    v53 = *(_QWORD *)v45;
    v54 = *((_QWORD *)v45 + 1);
    sub_233168500((uint64_t)v45, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  v178 = a2;
  v56 = objc_msgSend(a2, sel_totalBalance);
  if (v56)
  {
    v57 = v56;
    objc_msgSend(v56, sel_decimalValue);
    v59 = v179;
    v58 = v180;
    v60 = v181;

    if (v52 == 1)
    {
      v61 = 0;
      v62 = 0x100000000;
    }
    else
    {
      v65 = MEMORY[0x234932E38](v53, v54, v55, v59, v58, v60);
      v61 = 0;
      if ((v65 & 1) != 0)
      {
        v64 = 1;
        v53 = 0;
        v54 = 0;
        v59 = 0;
        v58 = 0;
        v63 = 0;
        goto LABEL_20;
      }
      v62 = 0;
    }
  }
  else
  {
    if (v52 == 1)
    {
      v53 = 0;
      v54 = 0;
      v61 = 0;
      v59 = 0;
      v58 = 0;
      v63 = 0;
      v64 = 1;
      goto LABEL_20;
    }
    LODWORD(v60) = 0;
    v58 = 0;
    v59 = 0;
    v62 = 0;
    v61 = 0x100000000;
  }
  v64 = 0;
  v63 = v61 | v60;
  v61 = v62 | v55;
LABEL_20:
  v66 = v174;
  *v174 = v53;
  v66[1] = v54;
  v66[2] = v61;
  v66[3] = v59;
  v66[4] = v58;
  *((_DWORD *)v66 + 10) = v63;
  *((_BYTE *)v66 + 44) = BYTE4(v63);
  *((_BYTE *)v66 + 45) = v64;
  v67 = v176;
  v68 = v172;
  sub_2331684BC(v176, (uint64_t)v172, type metadata accessor for BalanceCalculation);
  v69 = swift_getEnumCaseMultiPayload();
  if (v69)
  {
    v70 = v175;
    if (v69 == 1)
    {
      v71 = *(char **)(v157 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v71)(v43, 1, 1, v48);
      v72 = type metadata accessor for BalanceCalculation;
      v73 = (uint64_t)v68;
    }
    else
    {
      v75 = &v68[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_2332E50E0((uint64_t)v68, (uint64_t)v43);
      v71 = *(char **)(v157 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71)(v43, 0, 1, v48);
      v72 = type metadata accessor for BalanceCalculation.CalculationDetails;
      v73 = (uint64_t)v75;
    }
    sub_233168500(v73, v72);
    v74 = v70(v43, 1, v48);
  }
  else
  {
    sub_2332E50E0((uint64_t)v68, (uint64_t)v43);
    v71 = *(char **)(v157 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71)(v43, 0, 1, v48);
    v70 = v175;
    v74 = v175(v43, 1, v48);
  }
  if (v74 == 1)
  {
    sub_233168608((uint64_t)v43, &qword_256042E48);
    v76 = sub_23361D634();
    v77 = (uint64_t)v160;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v160, 1, 1, v76);
  }
  else
  {
    v78 = &v43[*(int *)(v48 + 20)];
    v79 = sub_23361D634();
    v80 = v71;
    v81 = *(_QWORD *)(v79 - 8);
    v77 = (uint64_t)v160;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v160, v78, v79);
    sub_233168500((uint64_t)v43, type metadata accessor for BalanceCalculation.CalculationDetails);
    v82 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56);
    v71 = v80;
    v83 = v79;
    v70 = v175;
    v82(v77, 0, 1, v83);
  }
  v84 = (uint64_t)v159;
  v85 = objc_msgSend(v178, sel_lastUpdated);
  v86 = (uint64_t)v162;
  if (v85)
  {
    v87 = v85;
    sub_23361D5EC();

    v88 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v86, 0, 1, v88);
  }
  else
  {
    v89 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v86, 1, 1, v89);
  }
  v90 = v158;
  sub_23339BE94(v77, v86, v158);
  v91 = type metadata accessor for AccountBalanceChanges();
  sub_233168478(v90, (uint64_t)v66 + *(int *)(v91 + 20), &qword_25604C050);
  sub_2331684BC(v67, v84, type metadata accessor for BalanceCalculation);
  v92 = swift_getEnumCaseMultiPayload();
  if (v92)
  {
    v93 = v161;
    if (v92 == 1)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v71)(v161, 1, 1, v48);
      v94 = type metadata accessor for BalanceCalculation;
      v95 = v84;
    }
    else
    {
      v96 = v84 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      sub_2332E50E0(v84, v93);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v93, 0, 1, v48);
      v94 = type metadata accessor for BalanceCalculation.CalculationDetails;
      v95 = v96;
    }
    sub_233168500(v95, v94);
  }
  else
  {
    v93 = v161;
    sub_2332E50E0(v84, v161);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v93, 0, 1, v48);
  }
  if (v70((char *)v93, 1, v48) == 1)
  {
    sub_233168608(v93, &qword_256042E48);
    v97 = 2;
  }
  else
  {
    v98 = v93;
    v97 = *(unsigned __int8 *)(v93 + *(int *)(v48 + 24));
    sub_233168500(v98, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  v99 = objc_msgSend(v178, sel_creditDebitIndicator);
  if (!v99)
  {
    v100 = 0;
    v101 = (uint64_t)v171;
    if (v97 != 2 && (v97 & 1) == 0)
    {
      v102 = 3;
      goto LABEL_50;
    }
    goto LABEL_48;
  }
  v103 = v99;
  if (v99 != (id)1)
    goto LABEL_101;
  if ((v97 & 1) == 0)
  {
    v100 = 1;
    v101 = (uint64_t)v171;
LABEL_48:
    v102 = v97 | (v100 << 8);
    goto LABEL_50;
  }
  v102 = 3;
  v101 = (uint64_t)v171;
LABEL_50:
  v171 = (int *)v91;
  *(_WORD *)((char *)v66 + *(int *)(v91 + 24)) = v102;
  sub_2331684BC(v67, v101, type metadata accessor for BalanceCalculation);
  v104 = swift_getEnumCaseMultiPayload();
  if (v104)
  {
    v105 = v163;
    if (v104 == 1)
    {
      sub_2332E50E0(v101, v163);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v105, 0, 1, v48);
      goto LABEL_56;
    }
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
    sub_2332E50E0(v101 + *(int *)(v107 + 48), v105);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v105, 0, 1, v48);
    v106 = type metadata accessor for BalanceCalculation.CalculationDetails;
  }
  else
  {
    v105 = v163;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v71)(v163, 1, 1, v48);
    v106 = type metadata accessor for BalanceCalculation;
  }
  sub_233168500(v101, v106);
LABEL_56:
  v108 = v70((char *)v105, 1, v48);
  if (v108 == 1)
  {
    sub_233168608(v105, &qword_256042E48);
    v109 = 0;
    v110 = 0;
    v111 = 0;
  }
  else
  {
    v111 = *(unsigned int *)(v105 + 16);
    v109 = *(_QWORD *)v105;
    v110 = *(_QWORD *)(v105 + 8);
    sub_233168500(v105, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  v112 = objc_msgSend(v178, sel_currentBalance);
  v113 = v171;
  v172 = v71;
  if (!v112)
  {
    if (v108 == 1)
    {
      v109 = 0;
      v110 = 0;
      v118 = 0;
      v115 = 0;
      v116 = 0;
      v120 = 0;
      v121 = 1;
      v122 = v174;
      v123 = v178;
      goto LABEL_70;
    }
    LODWORD(v117) = 0;
    v116 = 0;
    v115 = 0;
    v119 = 0;
    v118 = 0x100000000;
    goto LABEL_67;
  }
  v114 = v112;
  objc_msgSend(v112, sel_decimalValue);
  v115 = v179;
  v116 = v180;
  v117 = v181;

  if (v108 == 1)
  {
    v118 = 0;
    v119 = 0x100000000;
LABEL_67:
    v122 = v174;
    v123 = v178;
    goto LABEL_69;
  }
  v124 = MEMORY[0x234932E38](v109, v110, v111, v115, v116, v117);
  v118 = 0;
  v122 = v174;
  v123 = v178;
  if ((v124 & 1) != 0)
  {
    v121 = 1;
    v109 = 0;
    v110 = 0;
    v115 = 0;
    v116 = 0;
    v120 = 0;
    goto LABEL_70;
  }
  v119 = 0;
LABEL_69:
  v121 = 0;
  v120 = v118 | v117;
  v118 = v119 | v111;
LABEL_70:
  v125 = (char *)v122 + v113[7];
  *(_QWORD *)v125 = v109;
  *((_QWORD *)v125 + 1) = v110;
  *((_QWORD *)v125 + 2) = v118;
  *((_QWORD *)v125 + 3) = v115;
  *((_QWORD *)v125 + 4) = v116;
  v125[44] = BYTE4(v120);
  *((_DWORD *)v125 + 10) = v120;
  v125[45] = v121;
  sub_2331684BC(v176, v173, type metadata accessor for BalanceCalculation);
  v126 = swift_getEnumCaseMultiPayload();
  if (v126)
  {
    v128 = (uint64_t)v168;
    v127 = (uint64_t)v169;
    v129 = (uint64_t)v166;
    v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v175;
    v131 = v164;
    if (v126 == 1)
    {
      sub_2332E50E0(v173, v164);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v131, 0, 1, v48);
    }
    else
    {
      v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
      v134 = v173;
      sub_2332E50E0(v173 + *(int *)(v133 + 48), v131);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v131, 0, 1, v48);
      sub_233168500(v134, type metadata accessor for BalanceCalculation.CalculationDetails);
    }
    v132 = v130(v131, 1, v48);
  }
  else
  {
    v131 = v164;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v172)(v164, 1, 1, v48);
    sub_233168500(v173, type metadata accessor for BalanceCalculation);
    v128 = (uint64_t)v168;
    v127 = (uint64_t)v169;
    v129 = (uint64_t)v166;
    v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v175;
    v132 = v175((char *)v131, 1, v48);
  }
  if (v132 == 1)
  {
    sub_233168608(v131, &qword_256042E48);
    v135 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v129, 1, 1, v135);
  }
  else
  {
    v136 = v131 + *(int *)(v48 + 20);
    v137 = v131;
    v138 = sub_23361D634();
    v139 = *(_QWORD *)(v138 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v129, v136, v138);
    v140 = v137;
    v113 = v171;
    sub_233168500(v140, type metadata accessor for BalanceCalculation.CalculationDetails);
    v141 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v139 + 56);
    v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v175;
    v141(v129, 0, 1, v138);
  }
  v142 = objc_msgSend(v123, sel_lastUpdated);
  if (v142)
  {
    v143 = v142;
    sub_23361D5EC();

    v144 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v128, 0, 1, v144);
  }
  else
  {
    v145 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v128, 1, 1, v145);
  }
  v146 = v165;
  sub_23339BE94(v129, v128, v165);
  sub_233168478(v146, (uint64_t)v122 + v113[8], &qword_25604C050);
  sub_2331684BC(v176, v127, type metadata accessor for BalanceCalculation);
  v147 = swift_getEnumCaseMultiPayload();
  if (!v147)
  {
    v148 = v167;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v172)(v167, 1, 1, v48);
    v149 = type metadata accessor for BalanceCalculation;
LABEL_87:
    sub_233168500(v127, v149);
    goto LABEL_88;
  }
  v148 = v167;
  if (v147 != 1)
  {
    v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
    sub_2332E50E0(v127 + *(int *)(v150 + 48), v148);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v148, 0, 1, v48);
    v149 = type metadata accessor for BalanceCalculation.CalculationDetails;
    goto LABEL_87;
  }
  sub_2332E50E0(v127, v167);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v148, 0, 1, v48);
LABEL_88:
  if (v130(v148, 1, v48) == 1)
  {
    sub_233168608(v148, &qword_256042E48);
    v151 = 2;
  }
  else
  {
    v151 = *(unsigned __int8 *)(v148 + *(int *)(v48 + 24));
    sub_233168500(v148, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  v152 = objc_msgSend(v123, sel_creditDebitIndicator);
  if (!v152)
  {

    v153 = 0;
    if (v151 == 2 || (v151 & 1) != 0)
      goto LABEL_98;
    goto LABEL_99;
  }
  v103 = v152;
  if (v152 == (id)1)
  {

    if ((v151 & 1) == 0)
    {
      v153 = 1;
LABEL_98:
      v154 = v151 | (v153 << 8);
LABEL_100:
      result = sub_233168500(v170, type metadata accessor for InternalAccountBalance);
      *(_WORD *)((char *)v122 + v113[9]) = v154;
      return result;
    }
LABEL_99:
    v154 = 3;
    goto LABEL_100;
  }
LABEL_101:
  v179 = 0;
  v180 = 0xE000000000000000;
  sub_23361ED98();
  sub_23361E27C();
  v182 = v103;
  type metadata accessor for FKCreditDebitIndicator(0);
  sub_23361EEE8();
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t sub_23339D294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  int *v29;
  int *v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v36 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v36 - v14;
  v16 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for InternalAccountBalance(0);
  sub_2331684BC(a2 + *(int *)(v19 + 20), (uint64_t)v18, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v24 = (int *)type metadata accessor for AccountBalanceChanges();
    if (*(_BYTE *)(a1 + v24[7] + 45) == 1 && *(_BYTE *)(a1 + 45) == 1 && *(_BYTE *)(a1 + v24[6]) == 3)
    {
      sub_2331686A0(a1 + v24[5], (uint64_t)v15, &qword_25604C050);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v15, 1, v25) == 1)
      {
        v23 = (uint64_t)v15;
        goto LABEL_13;
      }
      sub_233168608((uint64_t)&v15[*(int *)(v25 + 48)], (uint64_t *)&unk_254247DA0);
      v34 = (uint64_t)v15;
LABEL_27:
      sub_233168608(v34, (uint64_t *)&unk_254247DA0);
      v26 = 1;
      goto LABEL_15;
    }
LABEL_14:
    v26 = 0;
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v28 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
    if ((*(_BYTE *)(a1 + 45) & 1) == 0
      || (v29 = (int *)type metadata accessor for AccountBalanceChanges(), *(_BYTE *)(a1 + v29[6]) != 3)
      || (v30 = v29, (*(_BYTE *)(a1 + v29[7] + 45) & 1) == 0)
      || *(_BYTE *)(a1 + v29[9]) != 3)
    {
      v27 = type metadata accessor for BalanceCalculation.CalculationDetails;
      sub_233168500(v28, type metadata accessor for BalanceCalculation.CalculationDetails);
      v26 = 0;
      goto LABEL_24;
    }
    sub_2331686A0(a1 + v29[5], (uint64_t)v10, &qword_25604C050);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
    if (v32(v10, 1, v31) == 1)
    {
      sub_233168608((uint64_t)v10, &qword_25604C050);
      sub_2331686A0(a1 + v30[8], (uint64_t)v7, &qword_25604C050);
      if (v32(v7, 1, v31) == 1)
      {
        sub_233168608((uint64_t)v7, &qword_25604C050);
        v27 = type metadata accessor for BalanceCalculation.CalculationDetails;
        sub_233168500(v28, type metadata accessor for BalanceCalculation.CalculationDetails);
        v26 = 2;
        goto LABEL_24;
      }
      sub_233168608((uint64_t)&v7[*(int *)(v31 + 48)], (uint64_t *)&unk_254247DA0);
      v35 = (uint64_t)v7;
    }
    else
    {
      sub_233168608((uint64_t)&v10[*(int *)(v31 + 48)], (uint64_t *)&unk_254247DA0);
      v35 = (uint64_t)v10;
    }
    sub_233168608(v35, (uint64_t *)&unk_254247DA0);
    v27 = type metadata accessor for BalanceCalculation.CalculationDetails;
    sub_233168500(v28, type metadata accessor for BalanceCalculation.CalculationDetails);
    v26 = 1;
    goto LABEL_24;
  }
  if (*(_BYTE *)(a1 + 45) != 1)
    goto LABEL_14;
  v21 = (int *)type metadata accessor for AccountBalanceChanges();
  if (*(_BYTE *)(a1 + v21[7] + 45) != 1 || *(_BYTE *)(a1 + v21[9]) != 3)
    goto LABEL_14;
  sub_2331686A0(a1 + v21[8], (uint64_t)v13, &qword_25604C050);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v13, 1, v22) != 1)
  {
    sub_233168608((uint64_t)&v13[*(int *)(v22 + 48)], (uint64_t *)&unk_254247DA0);
    v34 = (uint64_t)v13;
    goto LABEL_27;
  }
  v23 = (uint64_t)v13;
LABEL_13:
  sub_233168608(v23, &qword_25604C050);
  v26 = 2;
LABEL_15:
  v27 = type metadata accessor for BalanceCalculation;
LABEL_24:
  sub_233168500((uint64_t)v18, v27);
  return v26;
}

void *sub_23339D6F0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v14 = objc_msgSend(a1, sel_lastUpdated);
  if (v14)
  {
    v15 = v14;
    sub_23361D5EC();

    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v16(v13, 0, 1, v4);
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v16(v13, 1, 1, v4);
  }
  v17 = objc_msgSend(a1, sel_lastUpdated);
  if (v17)
  {
    v18 = v17;
    sub_23361D5EC();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  v16(v11, v19, 1, v4);
  sub_23361D5F8();
  v20 = (void *)sub_23361D5B0();
  objc_msgSend(a2, sel_setLastUpdatedAt_, v20);

  v21 = objc_msgSend(a2, sel_publicAccountBalanceObject);
  _s10FinanceKit21ManagedAccountBalanceC6update_23withAvailableAmountAsOf0g6BookedijK0yAC_10Foundation4DateVSgAJtFZ_0(v21, (uint64_t)v13, (uint64_t)v11);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_233168608((uint64_t)v11, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v13, (uint64_t *)&unk_254247DA0);
  return a2;
}

id sub_23339D8E0(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  os_log_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v59[12];
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;

  v6 = sub_23361D340();
  v64 = *(os_log_t *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23361D634();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for AccountBalanceChanges();
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v59[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for InternalAccountBalance(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v59[-v19];
  v21 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (v21)
  {
    v63 = v6;
    v67 = v21;
    InternalAccountBalance.init(_:)(v67, (uint64_t)v20);
    sub_2331684BC((uint64_t)v20, (uint64_t)v18, type metadata accessor for InternalAccountBalance);
    v22 = a1;
    AccountBalanceChanges.init(balance:appleAccountUpdate:)((uint64_t)v18, v22, v14);
    v23 = sub_23339D294((uint64_t)v14, (uint64_t)v20);
    sub_233168500((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AccountBalanceChanges);
    sub_233168500((uint64_t)v20, type metadata accessor for InternalAccountBalance);
    v62 = v23;
    if ((_BYTE)v23)
    {
      if (v23 == 1)
      {
        v24 = sub_23339D6F0(v22, v67);
      }
      else
      {
        sub_23361D5F8();
        v35 = (void *)sub_23361D5B0();
        (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v11, v66);
        v36 = v67;
        objc_msgSend(v67, sel_setLastUpdatedAt_, v35);

        v24 = v36;
      }
      v32 = v24;
    }
    else
    {
      type metadata accessor for ManagedInternalAccountBalance();
      v30 = v22;
      v31 = a2;
      v32 = sub_2331985F8(v30, v31, a3);
      v33 = (void *)sub_23361E12C();
      v34 = objc_msgSend(v31, sel_mutableSetValueForKeyPath_, v33);

      objc_msgSend(v34, sel_addObject_, v32);
    }
    if (qword_254246F38 != -1)
      swift_once();
    v37 = sub_23361DB80();
    __swift_project_value_buffer(v37, (uint64_t)qword_254246F20);
    v27 = v32;
    v38 = sub_23361DB68();
    v39 = sub_23361E780();
    v40 = v39;
    if (!os_log_type_enabled(v38, v39))
    {

      return v27;
    }
    v41 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v69 = v61;
    *(_DWORD *)v41 = 136315906;
    v42 = objc_msgSend(v27, sel_objectID);
    v60 = v40;
    v43 = v42;
    v44 = objc_msgSend(v42, sel_URIRepresentation);

    sub_23361D2D4();
    v45 = sub_23361D25C();
    v47 = v46;
    ((void (*)(_BYTE *, uint64_t))v64[1].isa)(v8, v63);
    v68 = sub_233164DCC(v45, v47, &v69);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    v68 = sub_233164DCC(*(_QWORD *)&aInsert_0[8 * (char)v62], 0xE600000000000000, &v69);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 22) = 2080;
    v48 = objc_msgSend(v27, sel_lastUpdatedAt);
    sub_23361D5EC();

    sub_2331EED8C((unint64_t *)&qword_256045060, MEMORY[0x24BDCE988]);
    v64 = v38;
    v49 = v66;
    v50 = sub_23361F1D0();
    v52 = v51;
    v53 = *(void (**)(_BYTE *, uint64_t))(v65 + 8);
    v53(v11, v49);
    v68 = sub_233164DCC(v50, v52, &v69);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 32) = 2048;
    v54 = objc_msgSend(v27, sel_lastUpdatedAt);
    sub_23361D5EC();

    sub_23361D5D4();
    v56 = v55;
    v53(v11, v49);
    v68 = v56;
    sub_23361EBC4();

    v29 = v64;
    _os_log_impl(&dword_233151000, v64, (os_log_type_t)v60, "Inserted or updated balance: %s with strategy: %s lastUpdateAt: %s (%f ms)", (uint8_t *)v41, 0x2Au);
    v57 = v61;
    swift_arrayDestroy();
    MEMORY[0x234934590](v57, -1, -1);
    MEMORY[0x234934590](v41, -1, -1);

  }
  else
  {
    type metadata accessor for ManagedInternalAccountBalance();
    v25 = a1;
    v26 = a2;
    v27 = sub_2331985F8(v25, v26, a3);
    v28 = (void *)sub_23361E12C();
    v29 = (os_log_t)objc_msgSend(v26, sel_mutableSetValueForKeyPath_, v28);

    -[NSObject addObject:](v29, sel_addObject_, v27);
  }

  return v27;
}

id sub_23339DFA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;

  v63 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v59 = (uint64_t)&v57 - v8;
  v64 = sub_23361D634();
  v9 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RawBankConnectData.Account(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v57 - v16;
  v18 = type metadata accessor for AccountBalanceChanges();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for InternalAccountBalance(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v57 - v25;
  v27 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  if (!v27)
  {
    sub_2331684BC(a1, (uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
    v35 = a2;
    v36 = v63;
    sub_23361D5F8();
    v33 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v36);
    v37 = (void *)sub_23361D5B0();
    objc_msgSend(v33, sel_setLastUpdatedAt_, v37);

    type metadata accessor for ManagedAccountBalance();
    sub_2331684BC((uint64_t)v17, (uint64_t)v15, type metadata accessor for RawBankConnectData.Account);
    v38 = v35;
    v39 = v36;
    v40 = v11;
    v41 = v39;
    v42 = sub_23319E6C8((uint64_t)v15, v38, (uint64_t)v39);

    objc_msgSend(v33, sel_setPublicAccountBalanceObject_, v42);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v40, v64);
    sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.Account);

    v43 = (void *)sub_23361E12C();
    v44 = objc_msgSend(v38, sel_mutableSetValueForKeyPath_, v43);

    objc_msgSend(v44, sel_addObject_, v33);
LABEL_8:

    return v33;
  }
  v58 = a2;
  v28 = v11;
  v61 = v9;
  v62 = v27;
  InternalAccountBalance.init(_:)(v62, (uint64_t)v26);
  sub_2331684BC((uint64_t)v26, (uint64_t)v24, type metadata accessor for InternalAccountBalance);
  sub_2331684BC(a1, (uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
  AccountBalanceChanges.init(balance:rawUpdate:)((uint64_t)v24, (uint64_t)v17, v20);
  v29 = sub_23339D294((uint64_t)v20, (uint64_t)v26);
  sub_233168500((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for AccountBalanceChanges);
  sub_233168500((uint64_t)v26, type metadata accessor for InternalAccountBalance);
  if (!v29)
  {
    sub_2331684BC(a1, (uint64_t)v17, type metadata accessor for RawBankConnectData.Account);
    v45 = v58;
    v46 = v63;
    v47 = v28;
    sub_23361D5F8();
    v48 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedInternalAccountBalance()), sel_initWithContext_, v46);
    v49 = (void *)sub_23361D5B0();
    objc_msgSend(v48, sel_setLastUpdatedAt_, v49);

    type metadata accessor for ManagedAccountBalance();
    v50 = (uint64_t)v15;
    sub_2331684BC((uint64_t)v17, (uint64_t)v15, type metadata accessor for RawBankConnectData.Account);
    v51 = v45;
    v52 = v46;
    v53 = sub_23319E6C8(v50, v51, (uint64_t)v52);

    objc_msgSend(v48, sel_setPublicAccountBalanceObject_, v53);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v64);
    sub_233168500((uint64_t)v17, type metadata accessor for RawBankConnectData.Account);

    v54 = (void *)sub_23361E12C();
    v55 = objc_msgSend(v51, sel_mutableSetValueForKeyPath_, v54);

    objc_msgSend(v55, sel_addObject_, v48);
    return v48;
  }
  if (v29 != 1)
  {
    sub_23361D5F8();
    v44 = (id)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v64);
    v33 = v62;
    objc_msgSend(v62, sel_setLastUpdatedAt_, v44);
    goto LABEL_8;
  }
  v30 = v59;
  RawBankConnectData.Account.availableBalanceAsOf.getter(v59);
  v31 = v60;
  RawBankConnectData.Account.bookedBalanceAsOf.getter(v60);
  sub_23361D5F8();
  v32 = (void *)sub_23361D5B0();
  v33 = v62;
  objc_msgSend(v62, sel_setLastUpdatedAt_, v32);

  v34 = objc_msgSend(v33, sel_publicAccountBalanceObject);
  _s10FinanceKit21ManagedAccountBalanceC6update_23withAvailableAmountAsOf0g6BookedijK0yAC_10Foundation4DateVSgAJtFZ_0(v34, v30, v31);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v64);
  sub_233168608(v31, (uint64_t *)&unk_254247DA0);
  sub_233168608(v30, (uint64_t *)&unk_254247DA0);
  return v33;
}

uint64_t type metadata accessor for AccountBalanceChanges()
{
  uint64_t result;

  result = qword_25604C150;
  if (!qword_25604C150)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ManagedAccountBalanceImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedAccountBalanceImporter()
{
  return swift_lookUpClassMethod();
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountBalanceChanges(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v42 = v12;
      v16 = sub_23361D634();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v41 = v17;
      if (v18(v10, 1, v16))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
      }
      v20 = *(int *)(v11 + 48);
      v21 = &v9[v20];
      v22 = &v10[v20];
      if (v18(v22, 1, v16))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v21, v22, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v21, 0, 1, v16);
      }
      v12 = v42;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v9, 0, 1, v11);
    }
    v24 = a3[7];
    *(_WORD *)((char *)v4 + a3[6]) = *(_WORD *)((char *)a2 + a3[6]);
    v25 = (_OWORD *)((char *)v4 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_OWORD *)((char *)v25 + 30) = *(_OWORD *)((char *)v26 + 30);
    v28 = a3[8];
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    if (v13((char *)a2 + v28, 1, v11))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v43 = v12;
      v32 = sub_23361D634();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      if (v34(v30, 1, v32))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      }
      v36 = *(int *)(v11 + 48);
      v37 = &v29[v36];
      v38 = &v30[v36];
      if (v34(v38, 1, v32))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v37, v38, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v29, 0, 1, v11);
    }
    *(_WORD *)((char *)v4 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t destroy for AccountBalanceChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v4, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    v10 = v4 + *(int *)(v5 + 48);
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  v11 = a1 + *(int *)(a2 + 32);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, 1, v5);
  if (!(_DWORD)result)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v16 = v11 + *(int *)(v5 + 48);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v16, 1, v13);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

_OWORD *initializeWithCopy for AccountBalanceChanges(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v14 = sub_23361D634();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v39 = v15;
    if (v16(v9, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v9, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    }
    v18 = *(int *)(v10 + 48);
    v19 = &v8[v18];
    v20 = &v9[v18];
    if (v16(v20, 1, v14))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v19, v20, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v19, 0, 1, v14);
    }
    v11 = v40;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v8, 0, 1, v10);
  }
  v22 = a3[7];
  *(_WORD *)((char *)a1 + a3[6]) = *(_WORD *)((char *)a2 + a3[6]);
  v23 = (_OWORD *)((char *)a1 + v22);
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_OWORD *)((char *)v23 + 30) = *(_OWORD *)((char *)v24 + 30);
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  if (v12((char *)a2 + v26, 1, v10))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v41 = v11;
    v30 = sub_23361D634();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    if (v32(v28, 1, v30))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v27, v28, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
    }
    v34 = *(int *)(v10 + 48);
    v35 = &v27[v34];
    v36 = &v28[v34];
    if (v32(v36, 1, v30))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v35, v36, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v27, 0, 1, v10);
  }
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *assignWithCopy for AccountBalanceChanges(_OWORD *a1, __int128 *a2, int *a3)
{
  int *v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  int *v74;

  v3 = a3;
  v6 = *a2;
  v7 = a2[1];
  *(_OWORD *)((char *)a1 + 30) = *(__int128 *)((char *)a2 + 30);
  *a1 = v6;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_233168608((uint64_t)v9, &qword_25604C0F0);
      goto LABEL_7;
    }
    v71 = v12;
    v21 = sub_23361D634();
    v73 = *(_QWORD *)(v21 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v23 = v22(v9, 1, v21);
    v24 = v22(v10, 1, v21);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v9, v10, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v9, 0, 1, v21);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v9, v10, v21);
LABEL_19:
        v30 = *(int *)(v11 + 48);
        v31 = &v9[v30];
        v32 = &v10[v30];
        v33 = v22(v31, 1, v21);
        v34 = v22(v32, 1, v21);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v31, v32, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v31, 0, 1, v21);
LABEL_25:
            v12 = v71;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v31, v32, v21);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v21);
        }
        v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v21);
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_26;
  }
  v72 = v3;
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v70 = v12;
  if (v18(v10, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  }
  v25 = *(int *)(v11 + 48);
  v26 = &v9[v25];
  v27 = &v10[v25];
  if (v18(v27, 1, v16))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  }
  v12 = v70;
  v3 = v72;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v9, 0, 1, v11);
LABEL_26:
  *(_WORD *)((char *)a1 + v3[6]) = *(_WORD *)((char *)a2 + v3[6]);
  v36 = v3[7];
  v37 = (_OWORD *)((char *)a1 + v36);
  v38 = (__int128 *)((char *)a2 + v36);
  v39 = *v38;
  v40 = v38[1];
  *(_OWORD *)((char *)v37 + 30) = *(__int128 *)((char *)v38 + 30);
  *v37 = v39;
  v37[1] = v40;
  v41 = v3[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = v13((char *)a1 + v41, 1, v11);
  v45 = v13(v43, 1, v11);
  if (!v44)
  {
    if (v45)
    {
      sub_233168608((uint64_t)v42, &qword_25604C0F0);
      goto LABEL_32;
    }
    v54 = sub_23361D634();
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    v57 = v56(v42, 1, v54);
    v58 = v56(v43, 1, v54);
    if (v57)
    {
      if (!v58)
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v42, v43, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v42, 0, 1, v54);
LABEL_46:
        v65 = *(int *)(v11 + 48);
        v66 = &v42[v65];
        v67 = &v43[v65];
        v68 = v56(v66, 1, v54);
        v69 = v56(v67, 1, v54);
        if (v68)
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v66, v67, v54);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v66, 0, 1, v54);
            goto LABEL_42;
          }
        }
        else
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v66, v67, v54);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v54);
        }
        v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                        + 64);
        v52 = v66;
        v53 = v67;
        goto LABEL_33;
      }
    }
    else
    {
      if (!v58)
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v42, v43, v54);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v54);
    }
    v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_46;
  }
  if (v45)
  {
LABEL_32:
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C050) - 8) + 64);
    v52 = v42;
    v53 = v43;
LABEL_33:
    memcpy(v52, v53, v51);
    goto LABEL_42;
  }
  v74 = v3;
  v46 = sub_23361D634();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v12;
  if (v48(v43, 1, v46))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v42, v43, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v42, 0, 1, v46);
  }
  v59 = *(int *)(v11 + 48);
  v60 = &v42[v59];
  v61 = &v43[v59];
  if (v48(v61, 1, v46))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v46);
  }
  v3 = v74;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v42, 0, 1, v11);
LABEL_42:
  *(_WORD *)((char *)a1 + v3[9]) = *(_WORD *)((char *)a2 + v3[9]);
  return a1;
}

_OWORD *initializeWithTake for AccountBalanceChanges(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v14 = sub_23361D634();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v39 = v15;
    if (v16(v9, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v8, v9, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    }
    v18 = *(int *)(v10 + 48);
    v19 = &v8[v18];
    v20 = &v9[v18];
    if (v16(v20, 1, v14))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v19, v20, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v19, 0, 1, v14);
    }
    v11 = v40;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v8, 0, 1, v10);
  }
  v22 = a3[7];
  *(_WORD *)((char *)a1 + a3[6]) = *(_WORD *)((char *)a2 + a3[6]);
  v23 = (_OWORD *)((char *)a1 + v22);
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_OWORD *)((char *)v23 + 30) = *(_OWORD *)((char *)v24 + 30);
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  if (v12((char *)a2 + v26, 1, v10))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v41 = v11;
    v30 = sub_23361D634();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    if (v32(v28, 1, v30))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v27, v28, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
    }
    v34 = *(int *)(v10 + 48);
    v35 = &v27[v34];
    v36 = &v28[v34];
    if (v32(v36, 1, v30))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v36, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v27, 0, 1, v10);
  }
  *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *assignWithTake for AccountBalanceChanges(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v3;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  int *v72;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C0F0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_233168608((uint64_t)v8, &qword_25604C0F0);
      goto LABEL_7;
    }
    v69 = v11;
    v20 = sub_23361D634();
    v71 = *(_QWORD *)(v20 - 8);
    v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
    v22 = v21(v8, 1, v20);
    v23 = v21(v9, 1, v20);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v8, v9, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v8, 0, 1, v20);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v8, v9, v20);
LABEL_19:
        v29 = *(int *)(v10 + 48);
        v30 = &v8[v29];
        v31 = &v9[v29];
        v32 = v21(v30, 1, v20);
        v33 = v21(v31, 1, v20);
        if (v32)
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v30, v31, v20);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v30, 0, 1, v20);
LABEL_25:
            v11 = v69;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v30, v31, v20);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v30, v20);
        }
        v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v20);
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_26;
  }
  v70 = v3;
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v68 = v11;
  if (v17(v9, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  v24 = *(int *)(v10 + 48);
  v25 = &v8[v24];
  v26 = &v9[v24];
  if (v17(v26, 1, v15))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v26, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  v11 = v68;
  v3 = v70;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v8, 0, 1, v10);
LABEL_26:
  v35 = v3[7];
  *(_WORD *)((char *)a1 + v3[6]) = *(_WORD *)((char *)a2 + v3[6]);
  v36 = (_OWORD *)((char *)a1 + v35);
  v37 = (_OWORD *)((char *)a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_OWORD *)((char *)v36 + 30) = *(_OWORD *)((char *)v37 + 30);
  v39 = v3[8];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = v12((char *)a1 + v39, 1, v10);
  v43 = v12(v41, 1, v10);
  if (!v42)
  {
    if (v43)
    {
      sub_233168608((uint64_t)v40, &qword_25604C0F0);
      goto LABEL_32;
    }
    v52 = sub_23361D634();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
    v55 = v54(v40, 1, v52);
    v56 = v54(v41, 1, v52);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v40, v41, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v40, 0, 1, v52);
LABEL_46:
        v63 = *(int *)(v10 + 48);
        v64 = &v40[v63];
        v65 = &v41[v63];
        v66 = v54(v64, 1, v52);
        v67 = v54(v65, 1, v52);
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v64, v65, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v64, 0, 1, v52);
            goto LABEL_42;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v64, v65, v52);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v53 + 8))(v64, v52);
        }
        v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                        + 64);
        v50 = v64;
        v51 = v65;
        goto LABEL_33;
      }
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v40, v41, v52);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v52);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_46;
  }
  if (v43)
  {
LABEL_32:
    v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C050) - 8) + 64);
    v50 = v40;
    v51 = v41;
LABEL_33:
    memcpy(v50, v51, v49);
    goto LABEL_42;
  }
  v72 = v3;
  v44 = sub_23361D634();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v11;
  if (v46(v41, 1, v44))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v41, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v40, 0, 1, v44);
  }
  v57 = *(int *)(v10 + 48);
  v58 = &v40[v57];
  v59 = &v41[v57];
  if (v46(v59, 1, v44))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v58, v59, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v58, 0, 1, v44);
  }
  v3 = v72;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v40, 0, 1, v10);
LABEL_42:
  *(_WORD *)((char *)a1 + v3[9]) = *(_WORD *)((char *)a2 + v3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountBalanceChanges()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23339FEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 3u)
    v9 = 3;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 3;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccountBalanceChanges()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23339FF94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C050);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

void sub_2333A0014()
{
  unint64_t v0;

  sub_2333A0098(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2333A0098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_25604C160)
  {
    v2 = sub_23361D634();
    v3 = sub_2331EED8C(&qword_2560426C8, MEMORY[0x24BDCE958]);
    v5 = type metadata accessor for Change(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_25604C160);
  }
}

id Merchant.address.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void Merchant.address.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*Merchant.address.modify())()
{
  return nullsub_1;
}

uint64_t Merchant.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Merchant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Merchant.displayName.modify())()
{
  return nullsub_1;
}

uint64_t Merchant.logo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Merchant.logo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Merchant.logo.modify())()
{
  return nullsub_1;
}

uint64_t Merchant.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Merchant.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Merchant.identifier.modify())()
{
  return nullsub_1;
}

uint64_t Merchant.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Merchant() + 32);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Merchant()
{
  uint64_t result;

  result = qword_25604C210;
  if (!qword_25604C210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Merchant.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Merchant() + 32);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Merchant.url.modify())(_QWORD)
{
  type metadata accessor for Merchant();
  return nullsub_1;
}

uint64_t Merchant.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Merchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 36), a1, &qword_254248700);
}

uint64_t Merchant.businessChatURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Merchant() + 36);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*Merchant.businessChatURL.modify())(_QWORD)
{
  type metadata accessor for Merchant();
  return nullsub_1;
}

uint64_t Merchant.contactURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Merchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 40), a1, &qword_254248700);
}

uint64_t Merchant.contactURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Merchant() + 40);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*Merchant.contactURL.modify())(_QWORD)
{
  type metadata accessor for Merchant();
  return nullsub_1;
}

uint64_t Merchant.emailAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Merchant() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Merchant.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Merchant() + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Merchant.emailAddress.modify())(_QWORD)
{
  type metadata accessor for Merchant();
  return nullsub_1;
}

uint64_t Merchant.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Merchant() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Merchant.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Merchant() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Merchant.phoneNumber.modify())(_QWORD)
{
  type metadata accessor for Merchant();
  return nullsub_1;
}

uint64_t sub_2333A0624(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333A0658 + 4 * a6[a1]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_2333A0658()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2333A0678()
{
  return 1869049708;
}

uint64_t sub_2333A0688()
{
  return 0x696669746E656469;
}

uint64_t sub_2333A06A4()
{
  return 7107189;
}

uint64_t sub_2333A06B4()
{
  return 0x7373656E69737562;
}

uint64_t sub_2333A06D8()
{
  return 0x55746361746E6F63;
}

uint64_t sub_2333A06F4()
{
  return 0x6464416C69616D65;
}

uint64_t sub_2333A0714()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_2333A0738()
{
  unsigned __int8 *v0;

  return sub_2333A0624(*v0);
}

uint64_t sub_2333A0740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333A3020(a1, a2);
  *a3 = result;
  return result;
}

void sub_2333A0764(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2333A0770()
{
  sub_2333A1FF4();
  return sub_23361F428();
}

uint64_t sub_2333A0798()
{
  sub_2333A1FF4();
  return sub_23361F434();
}

uint64_t Merchant.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C1A0);
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333A1FF4();
  v31 = v6;
  sub_23361F410();
  v22 = v1;
  v7 = *v1;
  if (*v1)
  {
    RawAddress.init(_:)(v7, &v32);
    v8 = v32;
    v7 = v33;
    v9 = v34;
    v10 = v35;
    v11 = v36;
    v12 = v37;
    v13 = v38;
    v14 = v39;
    v15 = v40;
    v16 = v41;
    v17 = v42;
    v18 = v43;
    v19 = v44;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v8 = 1;
  }
  v25 = v10;
  v26 = v8;
  v32 = v8;
  v33 = v7;
  v24 = v9;
  v34 = v9;
  v35 = v10;
  v29 = v12;
  v30 = v11;
  v36 = v11;
  v37 = v12;
  v27 = v14;
  v28 = v13;
  v38 = v13;
  v39 = v14;
  v40 = v15;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v44 = v19;
  v45 = 0;
  sub_23320C808();
  v20 = v31;
  sub_23361F110();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v4);
    return sub_233329310(v26);
  }
  else
  {
    sub_233329310(v26);
    LOBYTE(v32) = 1;
    sub_23361F140();
    LOBYTE(v32) = 2;
    sub_23361F0E0();
    LOBYTE(v32) = 3;
    sub_23361F140();
    type metadata accessor for Merchant();
    LOBYTE(v32) = 4;
    sub_23361D340();
    sub_2333A3430((unint64_t *)&unk_256042310, MEMORY[0x24BDCDAE0]);
    sub_23361F17C();
    LOBYTE(v32) = 5;
    sub_23361F110();
    LOBYTE(v32) = 6;
    sub_23361F110();
    LOBYTE(v32) = 7;
    sub_23361F0E0();
    LOBYTE(v32) = 8;
    sub_23361F0E0();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v20, v4);
  }
}

uint64_t Merchant.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v49 - v6;
  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C1B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for Merchant();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 3) = 0;
  *((_QWORD *)v17 + 4) = 0;
  v18 = *(int *)(v15 + 36);
  v64 = v8;
  v19 = *(void (**)(void))(v8 + 56);
  v70 = &v17[v18];
  v19();
  v69 = &v17[v14[10]];
  v65 = v7;
  v19();
  v20 = &v17[v14[11]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v68 = v20;
  v63 = v14;
  v21 = &v17[v14[12]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = v21;
  v23 = a1[3];
  v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_2333A1FF4();
  v24 = v67;
  sub_23361F3EC();
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);

    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)v70, &qword_254248700);
    sub_233168608((uint64_t)v69, &qword_254248700);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v67 = v11;
    v84 = 0;
    sub_23320C7C4();
    sub_23361EFFC();
    v26 = v71;
    if (v71 == 1)
    {
      v27 = 0;
    }
    else
    {
      v29 = v72;
      v28 = v73;
      v58 = v74;
      v57 = v75;
      v56 = v76;
      v55 = v77;
      v54 = v78;
      v53 = v79;
      v52 = v80;
      v51 = v81;
      v50 = v82;
      v49 = v83;
      sub_233168668(0, (unint64_t *)&qword_256045B60);
      v71 = v26;
      v72 = v29;
      v73 = v28;
      v74 = v58;
      v75 = v57;
      v76 = v56;
      v77 = v55;
      v78 = v54;
      v79 = v53;
      v80 = v52;
      v81 = v51;
      v82 = v50;
      v83 = v49;
      v27 = CNMutablePostalAddress.init(rawAddress:)(&v71);
    }
    v30 = (uint64_t *)v22;
    v31 = v65;
    *(_QWORD *)v17 = v27;
    LOBYTE(v71) = 1;
    v32 = v10;
    v33 = sub_23361F02C();
    v34 = (uint64_t)v62;
    *((_QWORD *)v17 + 1) = v33;
    *((_QWORD *)v17 + 2) = v35;
    LOBYTE(v71) = 2;
    *((_QWORD *)v17 + 3) = sub_23361EFCC();
    *((_QWORD *)v17 + 4) = v36;
    LOBYTE(v71) = 3;
    *((_QWORD *)v17 + 5) = sub_23361F02C();
    *((_QWORD *)v17 + 6) = v37;
    LOBYTE(v71) = 4;
    v38 = sub_2333A3430(&qword_256042340, MEMORY[0x24BDCDB10]);
    v39 = v61;
    v58 = v38;
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v17[v63[8]], v39, v31);
    LOBYTE(v71) = 5;
    sub_23361EFFC();
    sub_2331AAFB8(v34, (uint64_t)v70);
    LOBYTE(v71) = 6;
    v40 = (uint64_t)v60;
    sub_23361EFFC();
    sub_2331AAFB8(v40, (uint64_t)v69);
    LOBYTE(v71) = 7;
    v41 = v32;
    v42 = sub_23361EFCC();
    v44 = v43;
    v45 = (uint64_t *)v68;
    swift_bridgeObjectRelease();
    *v45 = v42;
    v45[1] = v44;
    LOBYTE(v71) = 8;
    v46 = sub_23361EFCC();
    v48 = v47;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v41);
    swift_bridgeObjectRelease();
    *v30 = v46;
    v30[1] = v48;
    sub_2333A2038((uint64_t)v17, v59);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
    return sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Merchant);
  }
}

uint64_t sub_2333A129C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Merchant.init(from:)(a1, a2);
}

uint64_t sub_2333A12B0(_QWORD *a1)
{
  return Merchant.encode(to:)(a1);
}

uint64_t Merchant.contactInfoCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  __int128 *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v30[32];
  _BYTE v31[24];
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v30[-v5 - 8];
  v34 = xmmword_23362AF00;
  v7 = (int *)type metadata accessor for Merchant();
  sub_2331686A0(v0 + v7[10], (uint64_t)v6, &qword_254248700);
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v6, 1, v8) == 1)
  {
    sub_233168608((uint64_t)v6, &qword_254248700);
    v35 = 0u;
    v36 = 0u;
  }
  else
  {
    *((_QWORD *)&v36 + 1) = v8;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v9 + 32))(boxed_opaque_existential_0, v6, v8);
  }
  sub_2331686A0(v0 + v7[9], (uint64_t)v4, &qword_254248700);
  if (v10(v4, 1, v8) == 1)
  {
    sub_233168608((uint64_t)v4, &qword_254248700);
    v37 = 0u;
    v38 = 0u;
  }
  else
  {
    *((_QWORD *)&v38 + 1) = v8;
    v12 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v9 + 32))(v12, v4, v8);
  }
  v13 = (uint64_t *)(v0 + v7[12]);
  v14 = v13[1];
  if (v14)
  {
    v15 = *v13;
    v16 = MEMORY[0x24BEE0D00];
    v17 = v14;
  }
  else
  {
    v15 = 0;
    v17 = 0;
    v16 = 0;
    v41 = 0;
  }
  v39 = v15;
  v40 = v17;
  v42 = v16;
  v18 = (uint64_t *)(v0 + v7[11]);
  v19 = v18[1];
  if (v19)
  {
    v20 = *v18;
    v21 = MEMORY[0x24BEE0D00];
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v45 = 0;
  }
  v43 = v20;
  v44 = v19;
  v46 = v21;
  v22 = MEMORY[0x24BEE4AF8];
  v33 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v25 = &v35;
  while (v24 < (unint64_t)v34)
  {
    sub_2331686A0((uint64_t)v25, (uint64_t)v31, &qword_254245020);
    if (v32)
    {
      sub_23319F578((uint64_t)v31, (uint64_t)v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23327401C(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v22 = v33;
      v27 = *(_QWORD *)(v33 + 16);
      v26 = *(_QWORD *)(v33 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23327401C(v26 > 1, v27 + 1, 1);
        v22 = v33;
      }
      *(_QWORD *)(v22 + 16) = v27 + 1;
      result = sub_23319F578((uint64_t)v30, v22 + 32 * v27 + 32);
    }
    else
    {
      result = sub_233168608((uint64_t)v31, &qword_254245020);
    }
    ++v24;
    v25 += 2;
    if (v24 == 4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
      swift_arrayDestroy();
      v28 = *(_QWORD *)(v33 + 16);
      swift_release();
      return v28;
    }
  }
  __break(1u);
  return result;
}

uint64_t Merchant.init(_:bundle:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  void *v18;
  uint64_t v19;
  Swift::String v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[14];

  v4 = (int *)type metadata accessor for Merchant();
  v5 = a2 + v4[9];
  v6 = sub_23361D340();
  v41 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(void))(v41 + 56);
  v44 = v5;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  v42 = v6;
  v43 = a2 + v4[10];
  v7();
  v8 = 0;
  v9 = (_QWORD *)(a2 + v4[11]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(a2 + v4[12]);
  *v10 = 0;
  v10[1] = 0;
  v40 = v10;
  v11 = *a1;
  if (*a1 != 1)
  {
    v38 = a1[11];
    v39 = a1[12];
    v12 = a1[8];
    v36 = a1[9];
    v37 = a1[10];
    v13 = a1[6];
    v14 = a1[4];
    v34 = a1[5];
    v35 = a1[7];
    v15 = a1[2];
    v33 = a1[3];
    v16 = a1[1];
    sub_233168668(0, (unint64_t *)&qword_256045B60);
    v45[0] = v11;
    v45[1] = v16;
    v45[2] = v15;
    v45[3] = v33;
    v45[4] = v14;
    v45[5] = v34;
    v45[6] = v13;
    v45[7] = v35;
    v45[8] = v12;
    v45[9] = v36;
    v45[10] = v37;
    v45[11] = v38;
    v45[12] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = CNMutablePostalAddress.init(rawAddress:)(v45);
  }
  *(_QWORD *)a2 = v8;
  v17 = (int *)type metadata accessor for RawMerchant();
  v18 = (void *)OrderBundle.localizedString(forKey:)();
  v19 = sub_23361D6B8();
  v20 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v19);

  swift_release();
  swift_bridgeObjectRelease();
  *(Swift::String *)(a2 + 8) = v20;
  v21 = (uint64_t *)((char *)a1 + v17[9]);
  v22 = v21[1];
  *(_QWORD *)(a2 + 24) = *v21;
  *(_QWORD *)(a2 + 32) = v22;
  v23 = (uint64_t *)((char *)a1 + v17[10]);
  v24 = v23[1];
  *(_QWORD *)(a2 + 40) = *v23;
  *(_QWORD *)(a2 + 48) = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(a2 + v4[8], (char *)a1 + v17[12], v42);
  v25 = (uint64_t)a1 + v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2333A207C(v25, v44);
  sub_2333A207C((uint64_t)a1 + v17[6], v43);
  v26 = (uint64_t *)((char *)a1 + v17[8]);
  v28 = *v26;
  v27 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v9 = v28;
  v9[1] = v27;
  v29 = (uint64_t *)((char *)a1 + v17[11]);
  v31 = *v29;
  v30 = v29[1];
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  result = swift_bridgeObjectRelease();
  *v40 = v31;
  v40[1] = v30;
  return result;
}

BOOL _s10FinanceKit8MerchantV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  char v31;
  _BOOL8 result;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  int *v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  void (*v43)(_BYTE *, uint64_t);
  int *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  char v54;
  void (*v55)(_BYTE *, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _BYTE v67[4];
  int v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;

  v4 = sub_23361D340();
  v77 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v75 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v76 = &v67[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v67[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v67[-v16];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v67[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v25 = &v67[-v24];
  v26 = *(void **)a1;
  v27 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v27)
      return 0;
    v72 = v23;
    v73 = v22;
    v71 = v21;
    v74 = v4;
    sub_233168668(0, &qword_254247E48);
    v28 = v27;
    v29 = v26;
    v30 = sub_23361EA14();

    if ((v30 & 1) == 0)
      return 0;
  }
  else
  {
    v72 = v23;
    v73 = v22;
    v71 = v21;
    v74 = v4;
    if (v27)
      return 0;
  }
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    || (v31 = sub_23361F224(), result = 0, (v31 & 1) != 0))
  {
    v33 = *(_QWORD *)(a1 + 32);
    v34 = *(_QWORD *)(a2 + 32);
    if (v33)
    {
      if (!v34)
        return 0;
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24) || v33 != v34)
      {
        v35 = sub_23361F224();
        result = 0;
        if ((v35 & 1) == 0)
          return result;
      }
    }
    else if (v34)
    {
      return 0;
    }
    if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || *(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
    {
      v36 = sub_23361F224();
      result = 0;
      if ((v36 & 1) == 0)
        return result;
    }
    v70 = (int *)type metadata accessor for Merchant();
    if ((MEMORY[0x234931620](a1 + v70[8], a2 + v70[8]) & 1) == 0)
      return 0;
    v37 = v70;
    sub_2331686A0(a1 + v70[9], (uint64_t)v25, &qword_254248700);
    sub_2331686A0(a2 + v37[9], (uint64_t)v20, &qword_254248700);
    v38 = (uint64_t)&v10[*(int *)(v6 + 48)];
    sub_2331686A0((uint64_t)v25, (uint64_t)v10, &qword_254248700);
    sub_2331686A0((uint64_t)v20, v38, &qword_254248700);
    v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
    v40 = v74;
    if (v39((uint64_t)v10, 1, v74) == 1)
    {
      sub_233168608((uint64_t)v20, &qword_254248700);
      sub_233168608((uint64_t)v25, &qword_254248700);
      if (v39(v38, 1, v40) == 1)
      {
        v69 = v39;
        sub_233168608((uint64_t)v10, &qword_254248700);
LABEL_27:
        v44 = v70;
        v45 = v73;
        sub_2331686A0(a1 + v70[10], v73, &qword_254248700);
        v46 = v72;
        sub_2331686A0(a2 + v44[10], v72, &qword_254248700);
        v47 = v76;
        v48 = (uint64_t)&v76[*(int *)(v6 + 48)];
        sub_2331686A0(v45, (uint64_t)v76, &qword_254248700);
        sub_2331686A0(v46, v48, &qword_254248700);
        v49 = v69;
        if (v69((uint64_t)v47, 1, v40) == 1)
        {
          sub_233168608(v46, &qword_254248700);
          sub_233168608(v45, &qword_254248700);
          if (v49(v48, 1, v40) == 1)
          {
            sub_233168608((uint64_t)v47, &qword_254248700);
LABEL_37:
            v56 = v70[11];
            v57 = (_QWORD *)(a1 + v56);
            v58 = *(_QWORD *)(a1 + v56 + 8);
            v59 = (_QWORD *)(a2 + v56);
            v60 = v59[1];
            if (v58)
            {
              if (!v60)
                return 0;
              if (*v57 != *v59 || v58 != v60)
              {
                v61 = sub_23361F224();
                result = 0;
                if ((v61 & 1) == 0)
                  return result;
              }
            }
            else if (v60)
            {
              return 0;
            }
            v62 = v70[12];
            v63 = (_QWORD *)(a1 + v62);
            v64 = *(_QWORD *)(a1 + v62 + 8);
            v65 = (_QWORD *)(a2 + v62);
            v66 = v65[1];
            if (v64)
              return v66 && (*v63 == *v65 && v64 == v66 || (sub_23361F224() & 1) != 0);
            return !v66;
          }
        }
        else
        {
          v50 = v46;
          v73 = v45;
          v51 = v71;
          sub_2331686A0((uint64_t)v47, v71, &qword_254248700);
          if (v49(v48, 1, v40) != 1)
          {
            v52 = v77;
            v53 = v75;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v77 + 32))(v75, v48, v40);
            sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
            v54 = sub_23361E108();
            v55 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
            v55(v53, v40);
            sub_233168608(v50, &qword_254248700);
            sub_233168608(v73, &qword_254248700);
            v55((_BYTE *)v51, v40);
            sub_233168608((uint64_t)v47, &qword_254248700);
            if ((v54 & 1) == 0)
              return 0;
            goto LABEL_37;
          }
          sub_233168608(v46, &qword_254248700);
          sub_233168608(v73, &qword_254248700);
          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v51, v40);
        }
        v41 = (uint64_t)v47;
LABEL_33:
        sub_233168608(v41, &qword_256045948);
        return 0;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v10, (uint64_t)v17, &qword_254248700);
      v69 = v39;
      if (v39(v38, 1, v40) != 1)
      {
        v42 = v75;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v77 + 32))(v75, v38, v40);
        sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
        v68 = sub_23361E108();
        v43 = *(void (**)(_BYTE *, uint64_t))(v77 + 8);
        v43(v42, v40);
        sub_233168608((uint64_t)v20, &qword_254248700);
        sub_233168608((uint64_t)v25, &qword_254248700);
        v43(v17, v40);
        sub_233168608((uint64_t)v10, &qword_254248700);
        if ((v68 & 1) == 0)
          return 0;
        goto LABEL_27;
      }
      sub_233168608((uint64_t)v20, &qword_254248700);
      sub_233168608((uint64_t)v25, &qword_254248700);
      (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v17, v40);
    }
    v41 = (uint64_t)v10;
    goto LABEL_33;
  }
  return result;
}

unint64_t sub_2333A1FF4()
{
  unint64_t result;

  result = qword_25604C1A8;
  if (!qword_25604C1A8)
  {
    result = MEMORY[0x234934494](&unk_233640EBC, &type metadata for Merchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C1A8);
  }
  return result;
}

uint64_t sub_2333A2038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Merchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333A207C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

char *initializeBufferWithCopyOfBuffer for Merchant(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a2[6];
    v11 = a3[8];
    v34 = (uint64_t)a2 + v11;
    v35 = &a1[v11];
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v10;
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v35, v34, v12);
    v16 = a3[9];
    v17 = &v7[v16];
    v18 = (char *)a2 + v16;
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v19((char *)a2 + v16, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v14(v17, (uint64_t)v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    v21 = a3[10];
    v22 = &v7[v21];
    v23 = (char *)a2 + v21;
    if (v19((char *)a2 + v21, 1, v12))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v14(v22, (uint64_t)v23, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    v25 = a3[11];
    v26 = a3[12];
    v27 = &v7[v25];
    v28 = (char **)((char *)a2 + v25);
    v29 = v28[1];
    *(_QWORD *)v27 = *v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = &v7[v26];
    v31 = (char **)((char *)a2 + v26);
    v32 = v31[1];
    *(_QWORD *)v30 = *v31;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for Merchant(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  char *v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[8];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = (char *)a1 + a2[9];
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v8, 1, v5))
    v7(v8, v5);
  v10 = (char *)a1 + a2[10];
  if (!v9(v10, 1, v5))
    v7(v10, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Merchant(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  const void *v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  v10 = a3[8];
  v33 = a2 + v10;
  v34 = (char *)a1 + v10;
  a1[6] = *(_QWORD *)(a2 + 48);
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v34, v33, v11);
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (const void *)(a2 + v15);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v18(a2 + v15, 1, v11))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v13(v16, (uint64_t)v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v20 = a3[10];
  v21 = (char *)a1 + v20;
  v22 = (const void *)(a2 + v20);
  if (v18(a2 + v20, 1, v11))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v13(v21, (uint64_t)v22, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
  }
  v24 = a3[11];
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)((char *)a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Merchant(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t (*v18)(const void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  v15 = a3[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v19 = v18((const void *)(a1 + v15), 1, v12);
  v20 = v18(v17, 1, v12);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v14(v16, v17, v12);
LABEL_7:
  v22 = a3[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = v18((const void *)(a1 + v22), 1, v12);
  v26 = v18(v24, 1, v12);
  if (!v25)
  {
    if (!v26)
    {
      v14(v23, v24, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v23, v12);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v23, v24, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
LABEL_13:
  v28 = a3[11];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Merchant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[9];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v15(a2 + v12, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v17 = a3[10];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if (v15(a2 + v17, 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v11(v18, v19, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for Merchant(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23361D340();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(a1 + v16, 1, v13);
  v21 = v19((uint64_t)v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v15((uint64_t)v17, v18, v13);
LABEL_7:
  v23 = a3[10];
  v24 = (void *)(a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = v19(a1 + v23, 1, v13);
  v27 = v19((uint64_t)v25, 1, v13);
  if (!v26)
  {
    if (!v27)
    {
      v15((uint64_t)v24, v25, v13);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v24, v13);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v24, v25, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
LABEL_13:
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Merchant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333A2BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D340();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Merchant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333A2CA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = sub_23361D340();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2333A2D44()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D340();
  if (v0 <= 0x3F)
  {
    sub_233233038();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Merchant.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Merchant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2333A2EC8 + 4 * byte_233640CE6[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2333A2EFC + 4 * byte_233640CE1[v4]))();
}

uint64_t sub_2333A2EFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333A2F04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333A2F0CLL);
  return result;
}

uint64_t sub_2333A2F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333A2F20);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2333A2F24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333A2F2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Merchant.CodingKeys()
{
  return &type metadata for Merchant.CodingKeys;
}

unint64_t sub_2333A2F4C()
{
  unint64_t result;

  result = qword_25604C268;
  if (!qword_25604C268)
  {
    result = MEMORY[0x234934494](&unk_233640E94, &type metadata for Merchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C268);
  }
  return result;
}

unint64_t sub_2333A2F94()
{
  unint64_t result;

  result = qword_25604C270;
  if (!qword_25604C270)
  {
    result = MEMORY[0x234934494](&unk_233640E04, &type metadata for Merchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C270);
  }
  return result;
}

unint64_t sub_2333A2FDC()
{
  unint64_t result;

  result = qword_25604C278;
  if (!qword_25604C278)
  {
    result = MEMORY[0x234934494](&unk_233640E2C, &type metadata for Merchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C278);
  }
  return result;
}

uint64_t sub_2333A3020(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x55746361746E6F63 && a2 == 0xEA00000000004C52 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2333A3430(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23361D340();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id ManagedCloudConsent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCloudConsent.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCloudConsent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedCloudConsent.__allocating_init(consent:context:)(void *a1, void *a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unsigned __int8 v33;

  v31 = sub_23361D6A0();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_allocWithZone(v2);
  v32 = a2;
  v16 = objc_msgSend(v15, sel_initWithContext_, a2);
  v17 = objc_msgSend(a1, sel_consentID);
  objc_msgSend(v16, sel_setConsentID_, v17);

  v18 = objc_msgSend(a1, sel_authorizedAt);
  sub_23361D5EC();

  v19 = (void *)sub_23361D5B0();
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  objc_msgSend(v16, sel_setAuthorizedAt_, v19);

  v21 = objc_msgSend(a1, sel_authorizedUntil);
  sub_23361D5EC();

  v22 = (void *)sub_23361D5B0();
  v20(v14, v11);
  objc_msgSend(v16, sel_setAuthorizedUntil_, v22);

  objc_msgSend(a1, sel_refreshSequenceNumber);
  v23 = (void *)sub_23361F338();
  objc_msgSend(v16, sel_setRefreshSequenceNumber_, v23);

  v24 = objc_msgSend(a1, sel_consentToken);
  objc_msgSend(v16, sel_setConsentToken_, v24);

  ManagedConsent.consentStatus.getter(&v33);
  objc_msgSend(v16, sel_setConsentStatusValue_, v33);
  v25 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v25)
  {
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      v25 = 0;
    }
    else
    {
      v25 = (id)sub_23361D5B0();
      v20(v10, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  objc_msgSend(v16, sel_setBackgroundRefreshLastConfirmedAt_, v25);

  v26 = objc_msgSend(a1, sel_institutionObject);
  v27 = objc_msgSend(v26, "id");

  objc_msgSend(v16, sel_setInstitutionID_, v27);
  sub_23361D694();
  v28 = (void *)sub_23361D658();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
  objc_msgSend(v16, sel_setId_, v28);

  return v16;
}

id ManagedCloudConsent.consentStatus.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setConsentStatusValue_, *a1);
}

void ManagedCloudConsent.update(_:context:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned __int8 v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D634();
  v34 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_institutionID);
  v10 = sub_23361E150();
  v12 = v11;

  v13 = objc_msgSend(v2, sel_institutionID);
  if (!v13)
    goto LABEL_13;
  v14 = v13;
  v15 = sub_23361E150();
  v17 = v16;

  if (v10 != v15 || v12 != v17)
  {
    v18 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_6;
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v19 = objc_msgSend(a1, sel_consentID);
  objc_msgSend(v2, sel_setConsentID_, v19);

  v20 = objc_msgSend(a1, sel_authorizedAt);
  sub_23361D5EC();

  v21 = (void *)sub_23361D5B0();
  v22 = v34;
  v23 = *(void (**)(char *, uint64_t))(v34 + 8);
  v23(v8, v6);
  objc_msgSend(v2, sel_setAuthorizedAt_, v21);

  v24 = objc_msgSend(a1, sel_authorizedUntil);
  sub_23361D5EC();

  v25 = (void *)sub_23361D5B0();
  v23(v8, v6);
  objc_msgSend(v2, sel_setAuthorizedUntil_, v25);

  objc_msgSend(a1, sel_refreshSequenceNumber);
  v26 = (void *)sub_23361F338();
  objc_msgSend(v2, sel_setRefreshSequenceNumber_, v26);

  v27 = objc_msgSend(a1, sel_consentToken);
  objc_msgSend(v2, sel_setConsentToken_, v27);

  ManagedConsent.consentStatus.getter(&v35);
  objc_msgSend(v2, sel_setConsentStatusValue_, v35);
  v28 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v28)
  {
    v29 = v28;
    sub_23361D5EC();

    v30 = v33;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v33, v8, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v30, 1, v6) == 1)
    {
      v31 = 0;
    }
    else
    {
      v31 = (void *)sub_23361D5B0();
      v23(v30, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v33, 1, 1, v6);
    v31 = 0;
  }
  objc_msgSend(v2, sel_setBackgroundRefreshLastConfirmedAt_, v31);

}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  int v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unsigned __int8 v41;

  v2 = v1;
  v4 = sub_23361D634();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - v11;
  v13 = objc_msgSend(a1, sel_institutionID);
  if (v13)
  {
    v14 = v13;
    v15 = sub_23361E150();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = objc_msgSend(v2, sel_institutionID);
  if (!v18)
  {
    if (!v17)
      goto LABEL_15;
    goto LABEL_13;
  }
  v19 = v18;
  v20 = sub_23361E150();
  v22 = v21;

  if (!v17)
  {
    if (!v22)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (!v22)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_14;
  }
  if (v15 == v20 && v17 == v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_14:
  v23 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    __break(1u);
    return;
  }
LABEL_15:
  v24 = objc_msgSend(a1, sel_consentID);
  objc_msgSend(v2, sel_setConsentID_, v24);

  v25 = objc_msgSend(a1, sel_authorizedAt);
  if (v25)
  {
    v26 = v38;
    sub_23361D5EC();

    v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v12, v26, v4);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    v28(v12, 0, 1, v4);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v4);
    v30 = v37;
    if (v29 == 1)
    {
      v25 = 0;
    }
    else
    {
      v25 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v4);
    }
  }
  else
  {
    v27 = v40;
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v28(v12, 1, 1, v4);
    v30 = v37;
    v26 = v38;
  }
  objc_msgSend(v2, sel_setAuthorizedAt_, v25);

  v31 = objc_msgSend(a1, sel_authorizedUntil);
  if (v31)
  {
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v26, v4);
    v28(v30, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v4) == 1)
    {
      v31 = 0;
    }
    else
    {
      v31 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v4);
    }
  }
  else
  {
    v28(v30, 1, 1, v4);
  }
  objc_msgSend(v2, sel_setAuthorizedUntil_, v31);

  v32 = objc_msgSend(a1, sel_refreshSequenceNumber);
  objc_msgSend(v2, sel_setRefreshSequenceNumber_, v32);

  v33 = objc_msgSend(a1, sel_consentToken);
  objc_msgSend(v2, sel_setConsentToken_, v33);

  ManagedCloudConsent.consentStatus.getter(&v41);
  objc_msgSend(v2, sel_setConsentStatusValue_, v41);
  v34 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v34)
  {
    sub_23361D5EC();

    v35 = v39;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v39, v26, v4);
    v28(v35, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v35, 1, v4) == 1)
    {
      v34 = 0;
    }
    else
    {
      v34 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v4);
    }
  }
  else
  {
    v28(v39, 1, 1, v4);
  }
  objc_msgSend(v2, sel_setBackgroundRefreshLastConfirmedAt_, v34);

}

void ManagedCloudConsent.update(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_institutionID);
  v11 = sub_23361E150();
  v13 = v12;

  v14 = objc_msgSend(v2, sel_institutionID);
  if (!v14)
    goto LABEL_13;
  v15 = v14;
  v16 = sub_23361E150();
  v18 = v17;

  if (v11 != v16 || v13 != v18)
  {
    v19 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_6;
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v20 = objc_msgSend(a1, sel_consentID);
  objc_msgSend(v2, sel_setConsentID_, v20);

  v21 = objc_msgSend(a1, sel_authorizedAt);
  sub_23361D5EC();

  v22 = (void *)sub_23361D5B0();
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v9, v6);
  objc_msgSend(v2, sel_setAuthorizedAt_, v22);

  v24 = objc_msgSend(a1, sel_authorizedUntil);
  sub_23361D5EC();

  v25 = (void *)sub_23361D5B0();
  v23(v9, v6);
  objc_msgSend(v2, sel_setAuthorizedUntil_, v25);

  objc_msgSend(a1, sel_refreshSequenceNumber);
  v26 = (void *)sub_23361F338();
  objc_msgSend(v2, sel_setRefreshSequenceNumber_, v26);

  v27 = objc_msgSend(a1, sel_consentToken);
  objc_msgSend(v2, sel_setConsentToken_, v27);

  v28 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v28)
  {
    v29 = v28;
    sub_23361D5EC();

    v30 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v30, 1, v6) == 1)
    {
      v31 = 0;
    }
    else
    {
      v31 = (void *)sub_23361D5B0();
      v23(v30, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v33, 1, 1, v6);
    v31 = 0;
  }
  objc_msgSend(v2, sel_setBackgroundRefreshLastConfirmedAt_, v31);

}

id ManagedCloudConsent.consentStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  char v5;

  v2 = v1;
  result = objc_msgSend(v2, sel_consentStatusValue);
  if (!(_DWORD)result)
  {
    v5 = 0;
LABEL_4:
    *a1 = v5;
    return result;
  }
  v5 = (char)result;
  if ((unsigned __int16)result == 1)
    goto LABEL_4;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_consentStatusValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = (id)sub_23361EF24();
  __break(1u);
  return result;
}

id (*ManagedCloudConsent.consentStatus.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedCloudConsent.consentStatus.getter((_BYTE *)(a1 + 8));
  return sub_2333A474C;
}

id sub_2333A474C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setConsentStatusValue_, *(unsigned __int8 *)(a1 + 8));
}

id static ManagedCloudConsent.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit19ManagedCloudConsent;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedCloudConsent.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

unint64_t static ManagedCloudConsent.existingConsent(withConsentID:schemaVersion:in:)(uint64_t a1, uint64_t a2, __int16 a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t result;
  unint64_t v15;
  id v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v18.receiver = (id)swift_getObjCClassFromMetadata();
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit19ManagedCloudConsent;
  v6 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233626360;
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 + 32) = sub_23361E6B4();
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  v11 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  *(_WORD *)(v9 + 32) = a3;
  *(_QWORD *)(v7 + 40) = sub_23361E6B4();
  v19 = v7;
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  objc_msgSend(v6, sel_setPredicate_, v13);
  result = sub_23361E984();
  if (v17)
  {

    return v8;
  }
  v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_9;
  }
  else
  {
    v8 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v8;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x234933120](0, v15);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_8:
    v8 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedCloudConsent.predicateForCloudConsent(withConsentID:)(uint64_t a1, uint64_t a2)
{
  return sub_23336D494(a1, a2);
}

uint64_t static ManagedCloudConsent.predicateForCloudConsent(withCKSchemaVersion:)(__int16 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE3F30];
  *(_OWORD *)(v2 + 16) = xmmword_233623D60;
  v4 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_WORD *)(v2 + 32) = a1;
  return sub_23361E6B4();
}

uint64_t static ManagedCloudConsent.predicateForCloudConsent(institutionID:)(uint64_t a1, uint64_t a2)
{
  return sub_23336D494(a1, a2);
}

uint64_t BankConnectCloudConsent.init(validating:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, uint64_t);
  id v56;
  void *v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int *v63;
  char *v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  void (*v101)(char *, uint64_t);
  char *v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  unsigned __int16 v107;
  void (*v108)(char *, uint64_t);
  id v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  int *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v112 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v109 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v109 - v10;
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v109 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v114 = (char *)&v109 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23361D6A0();
  v24 = *(_QWORD *)(v23 - 8);
  v120 = v23;
  v121 = v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v119 = (char *)&v109 - v28;
  v29 = type metadata accessor for BankConnectCloudConsent();
  v117 = v12;
  v118 = (int *)v29;
  v30 = (uint64_t)&a2[*(int *)(v29 + 44)];
  v116 = v13;
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v32 = v30;
  v115 = v31;
  v31((char *)v30, 1, 1, v12);
  if (objc_msgSend(a1, sel_ckSchemaVersion) != 1)
  {
    v86 = (unsigned __int16)objc_msgSend(a1, sel_ckSchemaVersion);
    sub_2333A5604();
    swift_allocError();
    *(_QWORD *)v87 = v86;
    *(_QWORD *)(v87 + 8) = 0;
    *(_BYTE *)(v87 + 16) = 0;
LABEL_17:
    swift_willThrow();

    return sub_233168608(v32, (uint64_t *)&unk_254247DA0);
  }
  v111 = a2;
  v33 = objc_msgSend(a1, "id");
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v22, 1, 1, v120);
    goto LABEL_16;
  }
  v34 = v33;
  sub_23361D67C();

  v35 = v120;
  v36 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
  v37 = v27;
  v38 = v121;
  v36(v22, v37, v120);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v22, 0, 1, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v22, 1, v35) == 1)
  {
LABEL_16:
    sub_233168608((uint64_t)v22, &qword_254246740);
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v88 = xmmword_233640F60;
    *(_BYTE *)(v88 + 16) = 1;
    goto LABEL_17;
  }
  v110 = v32;
  v39 = v119;
  v36(v119, v22, v35);
  v40 = v111;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v111, v39, v35);
  v41 = objc_msgSend(a1, sel_consentID);
  if (!v41)
  {
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v90 = xmmword_233640F50;
    *(_BYTE *)(v90 + 16) = 1;
    swift_willThrow();

    v91 = *(void (**)(char *, uint64_t))(v38 + 8);
    v91(v39, v35);
    v91(v40, v35);
    goto LABEL_37;
  }
  v42 = v41;
  v43 = sub_23361E150();
  v45 = v44;

  v46 = (uint64_t *)&v40[v118[5]];
  *v46 = v43;
  v46[1] = v45;
  v47 = objc_msgSend(a1, sel_authorizedAt);
  if (!v47)
  {
    v115(v11, 1, 1, v117);
    goto LABEL_22;
  }
  v48 = v47;
  sub_23361D5EC();

  v49 = v116;
  v50 = v117;
  v51 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  v51(v11, v18, v117);
  v115(v11, 0, 1, v50);
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  if (v52(v11, 1, v50) == 1)
  {
LABEL_22:
    sub_233168608((uint64_t)v11, (uint64_t *)&unk_254247DA0);
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v92 = xmmword_233640F40;
    *(_BYTE *)(v92 + 16) = 1;
    swift_willThrow();

    v93 = 0;
    v94 = 0;
    v95 = 0;
    v60 = v117;
    v63 = v118;
    v61 = v120;
    goto LABEL_28;
  }
  v53 = v114;
  v54 = v117;
  v51(v114, v11, v117);
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v116 + 16);
  v55((uint64_t)&v111[v118[6]], v53, v54);
  v56 = objc_msgSend(a1, sel_authorizedUntil);
  if (!v56)
  {
    v115(v9, 1, 1, v54);
    v60 = v54;
    v61 = v120;
    goto LABEL_24;
  }
  v57 = v56;
  sub_23361D5EC();

  v51(v9, v18, v54);
  v115(v9, 0, 1, v54);
  v58 = v52(v9, 1, v54);
  v59 = v110;
  v60 = v54;
  v61 = v120;
  if (v58 == 1)
  {
LABEL_24:
    sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v96 = xmmword_233640F30;
    v93 = 1;
    *(_BYTE *)(v96 + 16) = 1;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v116 + 8))(v114, v60);
    v94 = 0;
    v95 = 0;
    v63 = v118;
    goto LABEL_28;
  }
  v62 = v113;
  v51(v113, v9, v60);
  v63 = v118;
  v64 = v111;
  v55((uint64_t)&v111[v118[7]], v62, v60);
  v65 = objc_msgSend(a1, sel_refreshSequenceNumber);
  if (!v65)
  {
    sub_2333A5604();
    swift_allocError();
    *(_QWORD *)v97 = 0xD000000000000015;
    *(_QWORD *)(v97 + 8) = 0x8000000233673900;
    v93 = 1;
    *(_BYTE *)(v97 + 16) = 1;
    swift_willThrow();

    v98 = *(void (**)(char *, uint64_t))(v116 + 8);
    v98(v62, v60);
    v98(v114, v60);
LABEL_27:
    v95 = 0;
    v94 = 1;
    goto LABEL_28;
  }
  v66 = v65;
  *(_QWORD *)&v64[v63[8]] = objc_msgSend(v65, sel_longLongValue);
  v67 = objc_msgSend(a1, sel_consentToken);
  if (!v67)
  {
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v99 = xmmword_233640F20;
    v93 = 1;
    *(_BYTE *)(v99 + 16) = 1;
    swift_willThrow();

    v60 = v117;
    v100 = *(void (**)(char *, uint64_t))(v116 + 8);
    v100(v113, v117);
    v100(v114, v60);
    goto LABEL_27;
  }
  v68 = v67;
  v69 = v64;
  v109 = v66;
  v70 = sub_23361E150();
  v72 = v71;

  v73 = (uint64_t *)&v69[v63[9]];
  *v73 = v70;
  v73[1] = v72;
  v74 = objc_msgSend(a1, sel_institutionID);
  if (!v74)
  {
    sub_2333A5604();
    swift_allocError();
    *(_OWORD *)v104 = xmmword_233640F10;
    v93 = 1;
    *(_BYTE *)(v104 + 16) = 1;
    swift_willThrow();

    v60 = v117;
    v105 = *(void (**)(char *, uint64_t))(v116 + 8);
    v105(v113, v117);
    v105(v114, v60);
    v94 = 1;
    v95 = 1;
LABEL_28:
    v101 = *(void (**)(char *, uint64_t))(v121 + 8);
    v101(v119, v61);
    v102 = v111;
    v101(v111, v61);
    swift_bridgeObjectRelease();
    if (v93)
    {
      v103 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
      v103((uint64_t)&v102[v63[6]], v60);
      if ((v94 & 1) == 0)
      {
LABEL_35:
        if (v95)
LABEL_36:
          swift_bridgeObjectRelease();
LABEL_37:
        v32 = v110;
        return sub_233168608(v32, (uint64_t *)&unk_254247DA0);
      }
    }
    else
    {
      if (!v94)
        goto LABEL_35;
      v103 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
    }
    v103((uint64_t)&v102[v63[7]], v60);
    if ((v95 & 1) == 0)
      goto LABEL_37;
    goto LABEL_36;
  }
  v75 = v74;
  v76 = sub_23361E150();
  v78 = v77;

  v79 = (uint64_t *)&v69[v63[12]];
  *v79 = v76;
  v79[1] = v78;
  v80 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v80)
  {
    v81 = v80;
    v82 = (uint64_t)v112;
    sub_23361D5EC();

    v83 = 0;
    v84 = v113;
    v85 = v117;
  }
  else
  {
    v83 = 1;
    v84 = v113;
    v85 = v117;
    v82 = (uint64_t)v112;
  }
  v115((char *)v82, v83, 1, v85);
  sub_23318C8A8(v82, v59);
  ManagedCloudConsent.consentStatus.getter(&v122);
  v106 = v111;
  v111[v63[10]] = v122;
  v107 = (unsigned __int16)objc_msgSend(a1, sel_ckSchemaVersion);

  v108 = *(void (**)(char *, uint64_t))(v116 + 8);
  v108(v84, v85);
  v108(v114, v85);
  result = (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v119, v61);
  *(_WORD *)&v106[v63[13]] = v107;
  return result;
}

unint64_t sub_2333A5604()
{
  unint64_t result;

  result = qword_25604C280;
  if (!qword_25604C280)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedCloudConsent.ValidationError, &type metadata for ManagedCloudConsent.ValidationError);
    atomic_store(result, (unint64_t *)&qword_25604C280);
  }
  return result;
}

void sub_2333A5648(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_consentID, a2);
}

void sub_2333A5664(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setConsentID_);
}

uint64_t sub_2333A5680@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_authorizedAt, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333A56AC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setAuthorizedAt_);
}

uint64_t sub_2333A56E0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_authorizedUntil, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333A570C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setAuthorizedUntil_);
}

id sub_2333A5740@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_refreshSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2333A5778(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRefreshSequenceNumber_, *a1);
}

void sub_2333A578C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_consentToken, a2);
}

void sub_2333A57A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setConsentToken_);
}

char *keypath_get_selector_consentStatusValue()
{
  return sel_consentStatusValue;
}

id sub_2333A57D0@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_consentStatusValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2333A5800(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentStatusValue_, *a1);
}

uint64_t sub_2333A5814@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_backgroundRefreshLastConfirmedAt, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333A5840(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setBackgroundRefreshLastConfirmedAt_);
}

void sub_2333A5874(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_institutionID, a2);
}

void sub_2333A5890(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setInstitutionID_);
}

uint64_t sub_2333A58AC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_id, (void (*)(void))MEMORY[0x24BDCE9F8], MEMORY[0x24BDCEA58], a2);
}

void sub_2333A58D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, &qword_254246740, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], MEMORY[0x24BDCE9D0], (SEL *)&selRef_setId_);
}

id sub_2333A590C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_ckSchemaVersion);
  *a2 = (_WORD)result;
  return result;
}

id sub_2333A593C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCkSchemaVersion_, *a1);
}

id sub_2333A5950@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedCloudConsent.consentStatus.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_2333A5988(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentStatusValue_, *a1);
}

uint64_t type metadata accessor for ManagedCloudConsent()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ManagedCloudConsent.ValidationError()
{
  return &type metadata for ManagedCloudConsent.ValidationError;
}

uint64_t AuxiliaryEntityPredicateProvider.auxEntitiesPredicates.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL AuxiliaryEntityPredicateProvider.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

FinanceKit::AuxiliaryEntityPredicateProvider __swiftcall AuxiliaryEntityPredicateProvider.init(auxEntitiesPredicates:)(Swift::OpaquePointer_optional auxEntitiesPredicates)
{
  void **v1;
  void **v2;

  v2 = v1;
  if (!auxEntitiesPredicates.value._rawValue)
    auxEntitiesPredicates.value._rawValue = (void *)sub_23315F950(MEMORY[0x24BEE4AF8]);
  *v2 = auxEntitiesPredicates.value._rawValue;
  return (FinanceKit::AuxiliaryEntityPredicateProvider)auxEntitiesPredicates.value._rawValue;
}

uint64_t static AuxiliaryEntityPredicateProvider.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_233193C50(*a1, *a2);
}

unint64_t sub_2333A5A24()
{
  return 0xD000000000000015;
}

uint64_t sub_2333A5A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333AA638(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2333A5A68()
{
  sub_2333A5BD8();
  return sub_23361F428();
}

uint64_t sub_2333A5A90()
{
  sub_2333A5BD8();
  return sub_23361F434();
}

uint64_t AuxiliaryEntityPredicateProvider.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C290);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333A5BD8();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
  sub_2331AA938((unint64_t *)&qword_256043200, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2333A5BD8()
{
  unint64_t result;

  result = qword_25604C298;
  if (!qword_25604C298)
  {
    result = MEMORY[0x234934494](&unk_2336412C4, &type metadata for AuxiliaryEntityPredicateProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C298);
  }
  return result;
}

uint64_t AuxiliaryEntityPredicateProvider.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25604C2A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333A5BD8();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
    sub_2331AA938(&qword_256043228, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2333A5D5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AuxiliaryEntityPredicateProvider.init(from:)(a1, a2);
}

uint64_t sub_2333A5D70(_QWORD *a1)
{
  return AuxiliaryEntityPredicateProvider.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AuxiliaryEntityPredicateProvider()
{
  return &type metadata for AuxiliaryEntityPredicateProvider;
}

void sub_2333A5D94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23361E900();
  if (v0 <= 0x3F)
  {
    sub_2332C25A4();
    if (v1 <= 0x3F)
    {
      sub_23361DB80();
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t sub_2333A5E98(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a3;
  v5[6] = a5;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = *a4;
  return swift_task_switch();
}

uint64_t sub_2333A5EBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24));
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_2333A5F28;
  return sub_233448430(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t *)(v0 + 16));
}

uint64_t sub_2333A5F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2333A5F9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A5FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v7[6] = a5;
  v7[7] = a7;
  v7[4] = a3;
  v7[5] = a4;
  v7[2] = a1;
  v7[3] = a2;
  v7[8] = type metadata accessor for FinanceStore.Message();
  v9 = swift_task_alloc();
  v10 = *a6;
  v7[9] = v9;
  v7[10] = v10;
  return swift_task_switch();
}

uint64_t sub_2333A6014()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 56), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
  v8 = (uint64_t)v1 + *(int *)(v7 + 64);
  v9 = *(int *)(v7 + 80);
  *v1 = v6;
  v1[1] = v5;
  v1[2] = v4;
  sub_2331D7514(v3, v8);
  *(_QWORD *)((char *)v1 + v9) = v2;
  swift_storeEnumTagMultiPayload();
  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043010 + dword_256043010);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v10;
  *v10 = v0;
  v10[1] = sub_2333A6108;
  return v12(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 72));
}

uint64_t sub_2333A6108()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2333A6194()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A61C8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[30] = a1;
  v2[31] = v1;
  v2[32] = *v1;
  v3 = sub_23361E900();
  v2[33] = v3;
  v2[34] = *(_QWORD *)(v3 - 8);
  v2[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247050);
  v2[36] = swift_task_alloc();
  v4 = sub_23361CBA8();
  v2[37] = v4;
  v2[38] = *(_QWORD *)(v4 - 8);
  v2[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333A62A8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34[2];

  v34[1] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v0 + 176) = 0;
  v1 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 184) = 0;
  os_activity_scope_enter(*(os_activity_t *)(v1 + qword_2560CD3A8), (os_activity_scope_state_t)(v0 + 176));
  *(_QWORD *)(v0 + 320) = qword_2560CD3A0;
  swift_retain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 248);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v34[0] = v6;
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v4 + qword_2560CD368);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256048670);
    v7 = sub_23361EB94();
    *(_QWORD *)(v0 + 232) = sub_233164DCC(v7, v8, v34);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_233151000, v2, v3, "Processing next FinanceStore change for token %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v6, -1, -1);
    MEMORY[0x234934590](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = *(_QWORD *)(v0 + 248);
  if ((*(_BYTE *)(v9 + 16) & 1) != 0)
  {
    v10 = (_QWORD *)(v9 + 24);
    v11 = *(_QWORD *)(v0 + 256);
    if ((*(_BYTE *)(v9 + 32) & 1) != 0)
    {
      v12 = qword_2560CD350;
      *(_QWORD *)(v0 + 344) = qword_2560CD348;
      *(_QWORD *)(v0 + 352) = v12;
      *(_QWORD *)(v0 + 360) = qword_2560CD360;
      swift_beginAccess();
      v13 = *(_QWORD *)(v11 + 120);
      *(_QWORD *)(v0 + 368) = v13;
      v14 = *(_QWORD *)(v11 + 144);
      *(_QWORD *)(v0 + 376) = v14;
      *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 24);
      type metadata accessor for FinanceStore.Changes(255, v13, v14, v15);
      v16 = sub_23361E45C();
      MEMORY[0x234934494](MEMORY[0x24BEE12E0], v16);
      if ((sub_23361E66C() & 1) != 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
        v17 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 384) = v17;
        *v17 = v0;
        v17[1] = sub_2333A6C60;
        return sub_23361E8F4();
      }
      v27 = *(_OWORD **)(v0 + 240);
      swift_beginAccess();
      MEMORY[0x234934494](MEMORY[0x24BEE12E8], v16);
      sub_23361E690();
      swift_endAccess();
      v28 = *(_OWORD *)(v0 + 32);
      *v27 = *(_OWORD *)(v0 + 16);
      v27[1] = v28;
    }
    else
    {
      swift_beginAccess();
      *(_QWORD *)(v0 + 200) = *v10;
      type metadata accessor for FinanceStore.Changes(255, *(_QWORD *)(v11 + 120), *(_QWORD *)(v11 + 144), v24);
      v25 = sub_23361E45C();
      MEMORY[0x234934494](MEMORY[0x24BEE12E0], v25);
      if ((sub_23361E66C() & 1) != 0)
      {
        v26 = *(_OWORD **)(v0 + 240);
        *v26 = 0u;
        v26[1] = 0u;
      }
      else
      {
        v29 = sub_23361DB68();
        v30 = sub_23361E780();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_233151000, v29, v30, "Not monitoring changes, removing from buffer", v31, 2u);
          MEMORY[0x234934590](v31, -1, -1);
        }
        v32 = *(_OWORD **)(v0 + 240);

        swift_beginAccess();
        MEMORY[0x234934494](MEMORY[0x24BEE12E8], v25);
        sub_23361E690();
        swift_endAccess();
        v33 = *(_OWORD *)(v0 + 64);
        *v32 = *(_OWORD *)(v0 + 48);
        v32[1] = v33;
      }
    }
    os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = sub_23361DB68();
    v20 = sub_23361E780();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_233151000, v19, v20, "Not initialized, performing initial fetch", v21, 2u);
      MEMORY[0x234934590](v21, -1, -1);
    }

    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v22;
    *v22 = v0;
    v22[1] = sub_2333A6870;
    v23 = *(_QWORD **)(v0 + 248);
    v22[48] = v23;
    v22[49] = *v23;
    return swift_task_switch();
  }
}

uint64_t sub_2333A6870()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333A6918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _OWORD *v19;
  __int128 v20;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = (_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    v4 = qword_2560CD350;
    *(_QWORD *)(v0 + 344) = qword_2560CD348;
    *(_QWORD *)(v0 + 352) = v4;
    *(_QWORD *)(v0 + 360) = qword_2560CD360;
    swift_beginAccess();
    v5 = *(_QWORD *)(v2 + 120);
    *(_QWORD *)(v0 + 368) = v5;
    v6 = *(_QWORD *)(v2 + 144);
    *(_QWORD *)(v0 + 376) = v6;
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 24);
    type metadata accessor for FinanceStore.Changes(255, v5, v6, v7);
    v8 = sub_23361E45C();
    MEMORY[0x234934494](MEMORY[0x24BEE12E0], v8);
    if ((sub_23361E66C() & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v9;
      *v9 = v0;
      v9[1] = sub_2333A6C60;
      return sub_23361E8F4();
    }
    v14 = *(_OWORD **)(v0 + 240);
    swift_beginAccess();
    MEMORY[0x234934494](MEMORY[0x24BEE12E8], v8);
    sub_23361E690();
    swift_endAccess();
    v15 = *(_OWORD *)(v0 + 32);
    *v14 = *(_OWORD *)(v0 + 16);
    v14[1] = v15;
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(v0 + 200) = *v3;
    type metadata accessor for FinanceStore.Changes(255, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 144), v11);
    v12 = sub_23361E45C();
    MEMORY[0x234934494](MEMORY[0x24BEE12E0], v12);
    if ((sub_23361E66C() & 1) != 0)
    {
      v13 = *(_OWORD **)(v0 + 240);
      *v13 = 0u;
      v13[1] = 0u;
    }
    else
    {
      v16 = sub_23361DB68();
      v17 = sub_23361E780();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_233151000, v16, v17, "Not monitoring changes, removing from buffer", v18, 2u);
        MEMORY[0x234934590](v18, -1, -1);
      }
      v19 = *(_OWORD **)(v0 + 240);

      swift_beginAccess();
      MEMORY[0x234934494](MEMORY[0x24BEE12E8], v12);
      sub_23361E690();
      swift_endAccess();
      v20 = *(_OWORD *)(v0 + 64);
      *v19 = *(_OWORD *)(v0 + 48);
      v19[1] = v20;
    }
  }
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A6C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 272);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_2333A6D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_OWORD **)(v0 + 240);
    sub_233168608(v3, (uint64_t *)&unk_254247050);
    *v4 = 0u;
    v4[1] = 0u;
LABEL_10:
    os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = (uint64_t *)(v6 + *(_QWORD *)(v0 + 352));
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 312), v3, v1);
  v9 = *v7;
  v8 = v7[1];
  v10 = *(void **)(v6 + v5);
  v11 = v10;
  LOBYTE(v9) = sub_2333A76AC(v9, v8, v10);

  if ((v9 & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    v18 = *(_QWORD *)(v0 + 368);
    v19 = *(_QWORD *)(v0 + 376);
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 24);
    type metadata accessor for FinanceStore.Changes(255, v18, v19, v20);
    v21 = sub_23361E45C();
    MEMORY[0x234934494](MEMORY[0x24BEE12E0], v21);
    if ((sub_23361E66C() & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
      v22 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v22;
      *v22 = v0;
      v22[1] = sub_2333A6C60;
      return sub_23361E8F4();
    }
    v23 = *(_OWORD **)(v0 + 240);
    swift_beginAccess();
    MEMORY[0x234934494](MEMORY[0x24BEE12E8], v21);
    sub_23361E690();
    swift_endAccess();
    v24 = *(_OWORD *)(v0 + 32);
    *v23 = *(_OWORD *)(v0 + 16);
    v23[1] = v24;
    goto LABEL_10;
  }
  v12 = sub_23361DB68();
  v13 = sub_23361E780();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_233151000, v12, v13, "Found relevant change, performing fetch", v14, 2u);
    MEMORY[0x234934590](v14, -1, -1);
  }

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v15;
  *v15 = v0;
  v15[1] = sub_2333A7050;
  v16 = *(_QWORD **)(v0 + 248);
  v15[48] = v16;
  v15[49] = *v16;
  return swift_task_switch();
}

uint64_t sub_2333A7050()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333A70F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v5;
  __int128 v6;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 24);
  type metadata accessor for FinanceStore.Changes(255, *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), v1);
  v2 = sub_23361E45C();
  MEMORY[0x234934494](MEMORY[0x24BEE12E0], v2);
  if ((sub_23361E66C() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v3;
    *v3 = v0;
    v3[1] = sub_2333A6C60;
    return sub_23361E8F4();
  }
  else
  {
    v5 = *(_OWORD **)(v0 + 240);
    swift_beginAccess();
    MEMORY[0x234934494](MEMORY[0x24BEE12E8], v2);
    sub_23361E690();
    swift_endAccess();
    v6 = *(_OWORD *)(v0 + 32);
    *v5 = *(_OWORD *)(v0 + 16);
    v5[1] = v6;
    os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2333A72C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 336);
  v2 = v1;
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E768();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 336);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 208) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v4, v5, "Fetch changes error: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 336);

  }
  swift_willThrow();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A74AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 400);
  v2 = v1;
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E768();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 400);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 216) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v4, v5, "Fetch changes error: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 400);

  }
  v13 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 296);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A76AC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  const char *v20;
  char v21;
  void *v23;
  id v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];
  __int128 v38;
  __int128 v39;

  v6 = sub_23361CB9C();
  if (!v6)
  {
    v38 = 0u;
    v39 = 0u;
LABEL_13:
    sub_233168608((uint64_t)&v38, &qword_254245020);
    goto LABEL_14;
  }
  v7 = v6;
  sub_23361E150();
  sub_23361ED50();
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_2331E3EC4((uint64_t)v37), (v9 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C((uint64_t)v37);
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_13;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    if (qword_256041CB0 != -1)
      swift_once();
    v16 = sub_23361DB80();
    __swift_project_value_buffer(v16, (uint64_t)qword_2560495E0);
    v17 = sub_23361DB68();
    v18 = sub_23361E780();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_19;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = "No store identifier, notification is not relevant.";
LABEL_18:
    _os_log_impl(&dword_233151000, v17, v18, v20, v19, 2u);
    MEMORY[0x234934590](v19, -1, -1);
    goto LABEL_19;
  }
  v11 = v37[0];
  v10 = v37[1];
  v12 = sub_23361CB9C();
  if (!v12)
  {
    v38 = 0u;
    v39 = 0u;
LABEL_32:
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)&v38, &qword_254245020);
LABEL_34:
    if (qword_256041CB0 != -1)
      swift_once();
    v27 = sub_23361DB80();
    __swift_project_value_buffer(v27, (uint64_t)qword_2560495E0);
    v17 = sub_23361DB68();
    v18 = sub_23361E780();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_19;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = "No notification token, notification is not relevant";
    goto LABEL_18;
  }
  v13 = v12;
  sub_23361E150();
  sub_23361ED50();
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_2331E3EC4((uint64_t)v37), (v15 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C((uint64_t)v37);
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_32;
  sub_233168668(0, (unint64_t *)&unk_256048680);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  v23 = (void *)v37[0];
  if (!a2)
  {
    swift_bridgeObjectRelease();
    if (qword_256041CB0 != -1)
      swift_once();
    v28 = sub_23361DB80();
    __swift_project_value_buffer(v28, (uint64_t)qword_2560495E0);
    v17 = sub_23361DB68();
    v29 = sub_23361E780();
    if (!os_log_type_enabled(v17, v29))
    {

      goto LABEL_49;
    }
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_233151000, v17, v29, "No local store identifier, notification is not relevant", v30, 2u);
    MEMORY[0x234934590](v30, -1, -1);

LABEL_19:
LABEL_20:
    v21 = 0;
    return v21 & 1;
  }
  if ((v11 != a1 || v10 != a2) && (sub_23361F224() & 1) == 0)
  {
    v31 = qword_256041CB0;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = sub_23361DB80();
    __swift_project_value_buffer(v32, (uint64_t)qword_2560495E0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = sub_23361DB68();
    v34 = sub_23361E780();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v37[0] = v36;
      *(_DWORD *)v35 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v38 = sub_233164DCC(v11, v10, v37);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v38 = sub_233164DCC(a1, a2, v37);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v33, v34, "Store identifier: %s does not match local identifier:%s, notification is not relevant", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v36, -1, -1);
      MEMORY[0x234934590](v35, -1, -1);

      goto LABEL_20;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
LABEL_49:

    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  if (a3)
  {
    v24 = v23;
    v25 = a3;
    v26 = sub_23361EA14();

    v21 = v26 ^ 1;
  }
  else
  {

    v21 = 1;
  }
  return v21 & 1;
}

uint64_t sub_2333A7CEC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = v0;
  *(_QWORD *)(v1 + 392) = *v0;
  return swift_task_switch();
}

uint64_t sub_2333A7D0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(void *, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v0 + 600) = v2;
  if ((v2 & 1) == 0)
  {
    *(_BYTE *)(v1 + 16) = 1;
    v1 = *(_QWORD *)(v0 + 384);
  }
  if (*(_QWORD *)(v1 + qword_2560CD388))
  {
    v3 = *(_QWORD *)(v1 + qword_2560CD388);
  }
  else
  {
    v3 = sub_23315F950(MEMORY[0x24BEE4AF8]);
    v1 = *(_QWORD *)(v0 + 384);
  }
  *(_QWORD *)(v0 + 400) = v3;
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(int **)(v1 + qword_2560CD370);
  v6 = qword_2560CD368;
  *(_QWORD *)(v0 + 408) = qword_2560CD368;
  v7 = *(void **)(v1 + v6);
  *(_QWORD *)(v0 + 416) = v7;
  v8 = *(_QWORD *)(v4 + 112);
  *(_QWORD *)(v0 + 424) = v8;
  v9 = *(_QWORD *)(v4 + 136);
  *(_QWORD *)(v0 + 432) = v9;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  *(_QWORD *)(v0 + 440) = v10;
  v11 = v7;
  swift_bridgeObjectRetain();
  v12 = v10(v8, v9);
  v14 = v13;
  *(_QWORD *)(v0 + 448) = v13;
  *(_QWORD *)(v0 + 328) = v3;
  v17 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))((char *)v5 + *v5);
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v15;
  *v15 = v0;
  v15[1] = sub_2333A7E58;
  return v17(v7, v12, v14, v0 + 328);
}

uint64_t sub_2333A7E58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)*v2;
  v3[58] = a1;
  v3[59] = v1;
  swift_task_dealloc();
  v4 = (void *)v3[52];
  if (v1)
    swift_bridgeObjectRelease_n();
  else
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_task_switch();
}

void sub_2333A7F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v46;
  _QWORD v47[4];
  id v48;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 464) + 16);
  *(_QWORD *)(v0 + 480) = v1;
  if (!v1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)(v0 + 600) & 1) != 0)
    {
      sub_233208748(0, 0, 0, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = sub_23361DB68();
      v15 = sub_23361E780();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_233151000, v14, v15, "Initial fetch, sending empty updates", v16, 2u);
        MEMORY[0x234934590](v16, -1, -1);
      }

      v17 = *(_QWORD *)(v0 + 480);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v0 + 384);
      if (v17 || (v21 = *(_QWORD *)(v0 + 408), (v30 = *(void **)(v18 + v21)) == 0))
      {
        v19 = objc_msgSend(*(id *)(*(_QWORD *)(v18 + qword_2560CD358) + 16), sel_newBackgroundContext);
        v20 = NSManagedObjectContext.currentLocalHistoryToken.getter();

        if (!v20)
        {
          sub_233208748(0, 0, 0, 0);
          __break(1u);
          return;
        }
        v21 = *(_QWORD *)(v0 + 408);
        v18 = *(_QWORD *)(v0 + 384);
      }
      else
      {
        v20 = v30;
      }
      v31 = *(_QWORD *)(v0 + 392);
      v32 = *(_QWORD *)(v31 + 120);
      v33 = sub_23361E420();
      v34 = sub_23361E420();
      v35 = *(_QWORD *)(v31 + 144);
      swift_getAssociatedTypeWitness();
      v36 = sub_23361E420();
      v48 = v20;
      sub_23337DE74(v33, v34, v36, (uint64_t *)&v48, v47);
      v38 = v47[0];
      v37 = v47[1];
      v40 = v47[2];
      v39 = (void *)v47[3];
      v41 = v21;
      v42 = *(void **)(v18 + v21);
      *(_QWORD *)(v18 + v41) = v20;
      v46 = v20;

      *(_QWORD *)(v0 + 48) = v38;
      *(_QWORD *)(v0 + 56) = v37;
      *(_QWORD *)(v0 + 64) = v40;
      *(_QWORD *)(v0 + 72) = v39;
      swift_beginAccess();
      type metadata accessor for FinanceStore.Changes(255, v32, v35, v43);
      sub_23361E45C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = v39;
      sub_23361E450();
      swift_endAccess();
      sub_233208748(0, 0, 0, 0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = qword_2560CD380;
  *(_QWORD *)(v0 + 488) = qword_2560CD378;
  *(_QWORD *)(v0 + 496) = v2;
  v3 = qword_2560CD3A0;
  *(_QWORD *)(v0 + 504) = qword_2560CD358;
  *(_QWORD *)(v0 + 512) = v3;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (1)
  {
    *(_QWORD *)(v0 + 560) = v4;
    *(_OWORD *)(v0 + 520) = 0u;
    *(_OWORD *)(v0 + 536) = 0u;
    *(_QWORD *)(v0 + 552) = 0;
    v5 = *(_QWORD *)(v0 + 408);
    v6 = *(_QWORD *)(v0 + 384);
    v7 = *(_QWORD *)(v0 + 464) + 16 * v4;
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(void **)(v7 + 40);
    *(_QWORD *)(v0 + 568) = v9;
    v10 = *(void **)(v6 + v5);
    if (!v10)
    {
      v22 = v9;
      goto LABEL_16;
    }
    sub_233168668(0, (unint64_t *)&unk_256048680);
    v11 = v9;
    v12 = v10;
    v13 = sub_23361EA14();

    if ((v13 & 1) == 0)
      break;

    v4 = *(_QWORD *)(v0 + 560) + 1;
    if (v4 == *(_QWORD *)(v0 + 480))
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  v6 = *(_QWORD *)(v0 + 384);
LABEL_16:
  v23 = *(_QWORD *)(v0 + 496);
  v24 = *(_QWORD *)(v0 + 400);
  v25 = *(int **)(v6 + *(_QWORD *)(v0 + 488));
  v26 = (*(uint64_t (**)(void))(v0 + 440))();
  v28 = v27;
  *(_QWORD *)(v0 + 576) = v27;
  *(_QWORD *)(v0 + 320) = v24;
  v45 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v25 + *v25);
  swift_bridgeObjectRetain();
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v29;
  *v29 = v0;
  v29[1] = sub_2333A838C;
  v45(v0 + 200, v8, v26, v28, v6 + v23, v0 + 320);
}

uint64_t sub_2333A838C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2333A842C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  char v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t);
  void *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  os_log_type_t type;
  uint64_t typea;
  NSObject *log;
  os_log_t loga;
  uint64_t v144;
  void *v145;
  id v146;
  id v147;
  uint64_t (*v148)(uint64_t, uint64_t);
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  void *v153;
  os_log_type_t v154;
  os_log_type_t v155[8];
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t (*v178)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190[3];

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(void **)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 504);
  v5 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 208);
  v182 = *(_QWORD *)(v0 + 216);
  v8 = *(void **)(v6 + v5);
  *(_QWORD *)(v6 + v5) = v3;
  v9 = v3;

  v10 = objc_msgSend(*(id *)(*(_QWORD *)(v6 + v4) + 16), sel_persistentStoreCoordinator);
  sub_2333A98F4(v1, v10);
  v180 = v10;
  if (v2)
  {
    v12 = *(void **)(v0 + 568);
    v13 = *(void **)(v0 + 552);
    v14 = *(void **)(v0 + 544);
    v15 = *(_QWORD *)(v0 + 536);
    v16 = *(_QWORD *)(v0 + 528);
    v17 = *(_QWORD *)(v0 + 520);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_233208748(v17, v16, v15, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  v171 = v11;
  sub_2333A98F4(v7, v10);
  v21 = v18;
  v153 = v9;
  v22 = *(_QWORD *)(v0 + 424);
  v166 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD **)(v0 + 392);
  *(_QWORD *)(v0 + 312) = v182;
  v24 = (_QWORD *)swift_task_alloc();
  v24[2] = v22;
  v25 = v23[15];
  v24[3] = v25;
  v24[4] = v23[16];
  v24[5] = v166;
  v26 = v23[18];
  v24[6] = v26;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
  v167 = v21;
  v161 = v26;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2331B1A14(&qword_25604C3A8, &qword_25604C3A0, MEMORY[0x24BEE12C8]);
  v156 = AssociatedTypeWitness;
  v28 = sub_23361E33C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v29 = v171;
  *(_QWORD *)(v0 + 272) = v171;
  v168 = v25;
  v30 = sub_23361E45C();
  MEMORY[0x234934494](MEMORY[0x24BEE12E0], v30);
  v174 = v3;
  if ((sub_23361E66C() & 1) != 0
    && (*(_QWORD *)(v0 + 368) = v21, (sub_23361E66C() & 1) != 0)
    && (*(_QWORD *)(v0 + 376) = v28,
        v31 = sub_23361E45C(),
        MEMORY[0x234934494](MEMORY[0x24BEE12E0], v31),
        (sub_23361E66C() & 1) != 0))
  {
    v32 = *(void **)(v0 + 552);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v33 = *(void **)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 536);
    v35 = *(_QWORD *)(v0 + 528);
    v36 = *(void **)(v0 + 520);
  }
  else
  {
    v177 = v28;
    v37 = (_QWORD *)(v0 + 144);
    v38 = *(void **)(v0 + 520);
    v39 = *(void **)(v0 + 552);
    if (v38)
    {
      v40 = *(_QWORD *)(v0 + 536);
      v183 = *(_QWORD *)(v0 + 528);
      v41 = *(void **)(v0 + 544);
      if (v39)
      {
        sub_2332C2708(v38, v183, v40, v41);
        sub_2332C2708(v38, v183, v40, v41);
        sub_2332C2708(v38, v183, v40, v41);
        sub_2332C2708(v38, v183, v40, v41);
        sub_2332C2708(v38, v183, v40, v41);
        sub_2332C2708(v38, v183, v40, v41);
        v163 = v40;
        sub_2332C2708(v38, v183, v40, v41);
        v146 = v39;
        v42 = sub_23361DB68();
        v43 = sub_23361E780();
        v44 = os_log_type_enabled(v42, v43);
        v45 = *(void **)(v0 + 544);
        v46 = *(_QWORD *)(v0 + 536);
        v47 = *(_QWORD *)(v0 + 528);
        if (v44)
        {
          log = v42;
          v48 = *(_QWORD *)(v0 + 432);
          v135 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 440);
          type = v43;
          v49 = *(_QWORD *)(v0 + 424);
          v50 = *(_QWORD *)(v0 + 520);
          v136 = *(void **)(v0 + 544);
          v51 = *(_QWORD *)(v0 + 528);
          v52 = swift_slowAlloc();
          v139 = swift_slowAlloc();
          v186 = (id)v139;
          *(_DWORD *)v52 = 136315906;
          v53 = v135(v49, v48);
          *(_QWORD *)(v0 + 336) = sub_233164DCC(v53, v54, (uint64_t *)&v186);
          sub_23361EBC4();
          swift_bridgeObjectRelease();
          *(_WORD *)(v52 + 12) = 2048;
          v55 = MEMORY[0x2349327A8](v38, v168);
          v134 = v50;
          sub_233208748(v50, v51, v46, v136);
          *(_QWORD *)(v0 + 344) = v55;
          sub_23361EBC4();
          sub_233208748(v50, v51, v46, v136);
          *(_WORD *)(v52 + 22) = 2048;
          v56 = MEMORY[0x2349327A8](v183, v168);
          sub_233208748(v50, v51, v46, v136);
          *(_QWORD *)(v0 + 352) = v56;
          sub_23361EBC4();
          sub_233208748(v50, v51, v46, v136);
          *(_WORD *)(v52 + 32) = 2048;
          v57 = MEMORY[0x2349327A8](v163, v156);
          sub_233208748(v50, v51, v46, v136);
          *(_QWORD *)(v0 + 360) = v57;
          sub_23361EBC4();
          sub_233208748(v50, v51, v46, v136);
          _os_log_impl(&dword_233151000, log, type, "Adding relevant pending updates to change history for entity %s, inserted: %ld, updated: %ld, deleted: %ld", (uint8_t *)v52, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x234934590](v139, -1, -1);
          MEMORY[0x234934590](v52, -1, -1);

        }
        else
        {
          v58 = *(_QWORD *)(v0 + 520);
          sub_233208748(v58, v47, v46, v45);
          sub_233208748(v58, v47, v46, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_233208748(v58, v47, v46, v45);
          sub_233208748(v58, v47, v46, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        v137 = *(_QWORD *)(v0 + 552);
        v144 = *(_QWORD *)(v0 + 536);
        v145 = *(void **)(v0 + 544);
        typea = *(_QWORD *)(v0 + 520);
        loga = *(os_log_t *)(v0 + 528);
        v59 = *(_QWORD *)(v0 + 408);
        v60 = *(_QWORD *)(v0 + 384);
        v186 = v146;
        sub_23337DE74((uint64_t)v38, v183, v163, (uint64_t *)&v186, (_QWORD *)(v0 + 112));
        v150 = *(_QWORD *)(v0 + 112);
        v61 = *(void **)(v0 + 136);
        v157 = *(_QWORD *)(v0 + 120);
        v159 = *(_QWORD *)(v0 + 128);
        v138 = *(void **)(v60 + v59);
        *(_QWORD *)(v60 + v59) = v137;
        v147 = v146;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();

        *(_QWORD *)(v0 + 80) = v150;
        *(_QWORD *)(v0 + 88) = v157;
        *(_QWORD *)(v0 + 96) = v159;
        *(_QWORD *)(v0 + 104) = v61;
        swift_beginAccess();
        type metadata accessor for FinanceStore.Changes(255, v168, v161, v62);
        sub_23361E45C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = v61;
        sub_23361E450();
        swift_endAccess();

        sub_233208748(typea, (uint64_t)loga, v144, v145);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_233208748(typea, (uint64_t)loga, v144, v145);
        v29 = v171;
        v21 = v167;
        v37 = (_QWORD *)(v0 + 144);
      }
      else
      {

        sub_233208748((uint64_t)v38, v183, v40, v41);
      }
    }
    else
    {

    }
    v186 = *(id *)(v0 + 568);
    v64 = v186;
    sub_23337DE74(v29, v21, v177, (uint64_t *)&v186, v37);
    v36 = *(void **)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 160);
    v33 = *(void **)(v0 + 168);
    v65 = v64;
  }
  v66 = *(_QWORD *)(v0 + 560) + 1;
  if (v66 == *(_QWORD *)(v0 + 480))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v181 = v35;
    if (v36)
    {
      if (v153)
      {
        sub_2332C2708(v36, v35, v34, v33);
        v162 = v153;
        swift_bridgeObjectRelease();
        sub_2332C2708(v36, v35, v34, v33);
        sub_2332C2708(v36, v35, v34, v33);
        sub_2332C2708(v36, v35, v34, v33);
        sub_2332C2708(v36, v35, v34, v33);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v80 = v33;
        v81 = sub_23361DB68();
        v82 = sub_23361E780();
        v172 = v33;
        if (os_log_type_enabled(v81, v82))
        {
          v148 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 440);
          v83 = (uint64_t)v36;
          v154 = v82;
          v84 = *(_QWORD *)(v0 + 424);
          v85 = *(_QWORD *)(v0 + 432);
          v184 = *(_QWORD *)(v0 + 392);
          v86 = swift_slowAlloc();
          v151 = swift_slowAlloc();
          v186 = (id)v151;
          *(_DWORD *)v86 = 136315906;
          v149 = v81;
          v87 = v148(v84, v85);
          *(_QWORD *)(v0 + 280) = sub_233164DCC(v87, v88, (uint64_t *)&v186);
          sub_23361EBC4();
          swift_bridgeObjectRelease();
          *(_WORD *)(v86 + 12) = 2048;
          v89 = *(_QWORD *)(v184 + 120);
          v90 = MEMORY[0x2349327A8](v83, v89);
          sub_233208748(v83, v35, v34, v33);
          *(_QWORD *)(v0 + 288) = v90;
          sub_23361EBC4();
          sub_233208748(v83, v35, v34, v33);
          *(_WORD *)(v86 + 22) = 2048;
          v91 = MEMORY[0x2349327A8](v35, v89);
          sub_233208748(v83, v35, v34, v33);
          *(_QWORD *)(v0 + 296) = v91;
          sub_23361EBC4();
          sub_233208748(v83, v35, v34, v33);
          *(_WORD *)(v86 + 32) = 2048;
          v160 = *(_QWORD *)(v184 + 144);
          v185 = v89;
          v92 = swift_getAssociatedTypeWitness();
          v93 = MEMORY[0x2349327A8](v34, v92);
          sub_233208748(v83, v35, v34, v33);
          *(_QWORD *)(v0 + 304) = v93;
          v94 = v83;
          sub_23361EBC4();
          sub_233208748(v83, v35, v34, v33);
          _os_log_impl(&dword_233151000, v149, v154, "Adding final updates to change history for entity %s, inserted: %ld, updated: %ld, deleted: %ld", (uint8_t *)v86, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x234934590](v151, -1, -1);
          MEMORY[0x234934590](v86, -1, -1);

          v95 = v35;
        }
        else
        {
          v109 = *(_QWORD *)(v0 + 392);
          sub_233208748((uint64_t)v36, v35, v34, v33);
          sub_233208748((uint64_t)v36, v35, v34, v33);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_233208748((uint64_t)v36, v35, v34, v33);
          sub_233208748((uint64_t)v36, v35, v34, v33);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v185 = *(_QWORD *)(v109 + 120);
          v160 = *(_QWORD *)(v109 + 144);
          v95 = v35;
          v94 = (uint64_t)v36;
        }
        v110 = *(_QWORD *)(v0 + 408);
        v111 = *(_QWORD *)(v0 + 384);
        v190[0] = (uint64_t)v162;
        sub_23337DE74(v94, v95, v34, v190, &v186);
        v112 = v187;
        v170 = v34;
        *(_QWORD *)v155 = v186;
        v158 = v188;
        v152 = v189;
        v113 = *(void **)(v111 + v110);
        *(_QWORD *)(v111 + v110) = v174;
        v176 = v162;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();

        *(_QWORD *)(v0 + 16) = *(_QWORD *)v155;
        *(_QWORD *)(v0 + 24) = v112;
        *(_QWORD *)(v0 + 32) = v158;
        *(_QWORD *)(v0 + 40) = v152;
        swift_beginAccess();
        type metadata accessor for FinanceStore.Changes(255, v185, v160, v114);
        sub_23361E45C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v115 = v152;
        sub_23361E450();
        swift_endAccess();
        sub_233208748(v94, v181, v170, v172);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_233208748(v94, v181, v170, v172);
        goto LABEL_44;
      }
      v96 = 0;
      if ((*(_BYTE *)(v0 + 600) & 1) == 0)
      {
LABEL_32:
        v179 = (uint64_t)v36;
        v105 = sub_23361DB68();
        v106 = sub_23361E780();
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v107 = 0;
          _os_log_impl(&dword_233151000, v105, v106, "Initial fetch, sending empty updates", v107, 2u);
          MEMORY[0x234934590](v107, -1, -1);
        }

        v173 = v33;
        v169 = v34;
        v175 = v96;
        if (v96)
        {
          v108 = v96;
          swift_bridgeObjectRelease();
        }
        else
        {
          v116 = *(_QWORD *)(v0 + 480);
          swift_bridgeObjectRelease();
          v117 = *(_QWORD *)(v0 + 384);
          if (!v116)
            goto LABEL_41;
          while (1)
          {
            v118 = objc_msgSend(*(id *)(*(_QWORD *)(v117 + qword_2560CD358) + 16), sel_newBackgroundContext, v134);
            v108 = NSManagedObjectContext.currentLocalHistoryToken.getter();

            if (v108)
              break;
            sub_233208748(v179, v35, v34, v33);
            __break(1u);
LABEL_41:
            v119 = *(void **)(v117 + *(_QWORD *)(v0 + 408));
            if (v119)
            {
              v108 = v119;
              break;
            }
          }
        }
        v164 = *(_QWORD *)(v0 + 408);
        v121 = *(_QWORD *)(v0 + 384);
        v120 = *(_QWORD *)(v0 + 392);
        v122 = *(_QWORD *)(v120 + 120);
        v123 = sub_23361E420();
        v124 = sub_23361E420();
        v125 = *(_QWORD *)(v120 + 144);
        swift_getAssociatedTypeWitness();
        v126 = sub_23361E420();
        v190[0] = (uint64_t)v108;
        sub_23337DE74(v123, v124, v126, v190, &v186);
        v128 = (uint64_t)v186;
        v127 = v187;
        v130 = v188;
        v129 = v189;
        v131 = *(void **)(v121 + v164);
        *(_QWORD *)(v121 + v164) = v108;
        v165 = v108;

        *(_QWORD *)(v0 + 48) = v128;
        *(_QWORD *)(v0 + 56) = v127;
        *(_QWORD *)(v0 + 64) = v130;
        *(_QWORD *)(v0 + 72) = v129;
        swift_beginAccess();
        type metadata accessor for FinanceStore.Changes(255, v122, v125, v132);
        sub_23361E45C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v133 = v129;
        sub_23361E450();
        swift_endAccess();

        sub_233208748(v179, v181, v169, v173);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_44;
      }
    }
    else
    {
      v96 = v174;
      if ((*(_BYTE *)(v0 + 600) & 1) == 0)
        goto LABEL_32;
    }
    sub_233208748((uint64_t)v36, v35, v34, v33);
    swift_bridgeObjectRelease();

LABEL_44:
    v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  while (1)
  {
    *(_QWORD *)(v0 + 560) = v66;
    *(_QWORD *)(v0 + 552) = v174;
    v67 = v33;
    *(_QWORD *)(v0 + 544) = v33;
    v68 = v34;
    *(_QWORD *)(v0 + 536) = v34;
    v69 = v35;
    *(_QWORD *)(v0 + 528) = v35;
    v70 = v36;
    *(_QWORD *)(v0 + 520) = v36;
    v71 = *(_QWORD *)(v0 + 408);
    v72 = *(_QWORD *)(v0 + 384);
    v73 = *(_QWORD *)(v0 + 464) + 16 * v66;
    v75 = *(_QWORD *)(v73 + 32);
    v74 = *(void **)(v73 + 40);
    *(_QWORD *)(v0 + 568) = v74;
    v76 = *(void **)(v72 + v71);
    if (!v76)
    {
      v97 = v74;
      goto LABEL_30;
    }
    sub_233168668(0, (unint64_t *)&unk_256048680);
    v77 = v74;
    v78 = v76;
    v79 = sub_23361EA14();

    if ((v79 & 1) == 0)
      break;

    v66 = *(_QWORD *)(v0 + 560) + 1;
    v33 = v67;
    v34 = v68;
    v35 = v69;
    v36 = v70;
    if (v66 == *(_QWORD *)(v0 + 480))
      goto LABEL_22;
  }
  v72 = *(_QWORD *)(v0 + 384);
LABEL_30:
  v98 = *(_QWORD *)(v0 + 496);
  v99 = *(_QWORD *)(v0 + 400);
  v100 = *(int **)(v72 + *(_QWORD *)(v0 + 488));
  v101 = (*(uint64_t (**)(void))(v0 + 440))();
  v103 = v102;
  *(_QWORD *)(v0 + 576) = v102;
  *(_QWORD *)(v0 + 320) = v99;
  v178 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v100 + *v100);
  swift_bridgeObjectRetain();
  v104 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v104;
  *v104 = v0;
  v104[1] = sub_2333A838C;
  return v178(v0 + 200, v75, v101, v103, v72 + v98, v0 + 320);
}

uint64_t sub_2333A97A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A97B4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 568);
  v2 = *(void **)(v0 + 552);
  sub_233208748(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536), *(void **)(v0 + 544));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333A9804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  int v8;
  uint64_t v10;

  v4 = sub_23361D6A0();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a2, v8 ^ 1u, 1, AssociatedTypeWitness);
}

void sub_2333A98F4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;

  v3 = v2;
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = a2;
    v6 = sub_2333AA414(a1, v5);

    v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_233625CF0;
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_233623D60;
    *(_QWORD *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_256048690);
    *(_QWORD *)(v9 + 64) = sub_2331B1A14((unint64_t *)&qword_256048698, &qword_256048690, MEMORY[0x24BDCFBF8]);
    *(_QWORD *)(v9 + 32) = v6;
    *(_QWORD *)(v8 + 32) = sub_23361E6B4();
    sub_23361E408();
    v15 = v8;
    v10 = *(void **)(v3 + qword_2560CD398);
    if (v10)
    {
      v11 = v10;
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();

    }
    v12 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

    objc_msgSend(v7, sel_setPredicate_, v13);
    objc_msgSend(v7, sel_setReturnsObjectsAsFaults_, 0);
    v14 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + qword_2560CD358) + 16), sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v14);
    sub_23361E45C();
    sub_23361E960();

  }
  else
  {
    sub_23361E03C();
  }
}

uint64_t sub_2333A9BE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044950);
  result = sub_23361E984();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C388);
    sub_2331B1A14((unint64_t *)&unk_25604C390, &qword_25604C388, MEMORY[0x24BEE12C8]);
    v4 = sub_23361E33C();
    result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_2333A9CC8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v21;
  uint64_t v22;

  v5 = *a1;
  v6 = swift_dynamicCastUnknownClass();
  if (v6)
  {
    v7 = v6;
    v8 = *(void (**)(uint64_t))((char *)a1 + qword_2560CD390);
    swift_unknownObjectRetain();
    v8(v7);
    if (v2)
    {
      if (qword_256041CB0 != -1)
        swift_once();
      v9 = sub_23361DB80();
      __swift_project_value_buffer(v9, (uint64_t)qword_2560495E0);
      swift_unknownObjectRetain_n();
      v10 = sub_23361DB68();
      v11 = sub_23361E768();
      if (os_log_type_enabled(v10, v11))
      {
        v22 = a2;
        v12 = (uint8_t *)swift_slowAlloc();
        v21 = v5;
        v13 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v12 = 138412290;
        swift_unknownObjectRetain();
        sub_23361EBC4();
        *v13 = v7;
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_233151000, v10, v11, "Unable to convert %@ into a model", v12, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
        swift_arrayDestroy();
        v14 = v13;
        v5 = v21;
        MEMORY[0x234934590](v14, -1, -1);
        v15 = v12;
        a2 = v22;
        MEMORY[0x234934590](v15, -1, -1);

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();

        swift_unknownObjectRelease_n();
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 120) - 8) + 56))(a2, 1, 1);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 120) - 8) + 56))(a2, 0, 1);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_256041CB0 != -1)
      swift_once();
    v16 = sub_23361DB80();
    __swift_project_value_buffer(v16, (uint64_t)qword_2560495E0);
    v17 = sub_23361DB68();
    v18 = sub_23361E780();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_233151000, v17, v18, "Fetch returned non managed objects", v19, 2u);
      MEMORY[0x234934590](v19, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 120) - 8) + 56))(a2, 1, 1);
  }
}

uint64_t sub_2333A9FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_2560CD348;
  v2 = sub_23361E900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  sub_233168608(v0 + qword_2560CD380, &qword_254246740);
  swift_bridgeObjectRelease();
  swift_release();

  v3 = v0 + qword_2560CD3A0;
  v4 = sub_23361DB80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_2333AA130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23337DF0C();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_2560CD348;
  v2 = sub_23361E900();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  sub_233168608(v0 + qword_2560CD380, &qword_254246740);
  swift_bridgeObjectRelease();
  swift_release();

  v3 = v0 + qword_2560CD3A0;
  v4 = sub_23361DB80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_2333AA274()
{
  sub_2333AA130();
  return swift_deallocClassInstance();
}

void type metadata accessor for FinancialDataAsyncIterator()
{
  JUMPOUT(0x2349343ECLL);
}

uint64_t storeEnumTagSinglePayload for AuxiliaryEntityPredicateProvider.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333AA2E0 + 4 * byte_233641020[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333AA300 + 4 * byte_233641025[v4]))();
}

_BYTE *sub_2333AA2E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333AA300(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AA308(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AA310(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AA318(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AA320(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryEntityPredicateProvider.CodingKeys()
{
  return &type metadata for AuxiliaryEntityPredicateProvider.CodingKeys;
}

unint64_t sub_2333AA340()
{
  unint64_t result;

  result = qword_25604C348;
  if (!qword_25604C348)
  {
    result = MEMORY[0x234934494](&unk_23364129C, &type metadata for AuxiliaryEntityPredicateProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C348);
  }
  return result;
}

unint64_t sub_2333AA388()
{
  unint64_t result;

  result = qword_25604C350;
  if (!qword_25604C350)
  {
    result = MEMORY[0x234934494](&unk_23364120C, &type metadata for AuxiliaryEntityPredicateProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C350);
  }
  return result;
}

unint64_t sub_2333AA3D0()
{
  unint64_t result;

  result = qword_25604C358;
  if (!qword_25604C358)
  {
    result = MEMORY[0x234934494](&unk_233641234, &type metadata for AuxiliaryEntityPredicateProvider.CodingKeys);
    atomic_store(result, &qword_25604C358);
  }
  return result;
}

uint64_t sub_2333AA414(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  id v22;
  uint64_t v23;

  v22 = a2;
  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  v18 = a1;
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v19 = *(_QWORD *)(v4 + 72);
    v20 = v11;
    swift_bridgeObjectRetain();
    while (1)
    {
      v20(v8, v10, v3);
      v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v12(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
        break;
      v13 = v21;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v21, v8, v3);
      v14 = (void *)sub_23361D268();
      v15 = objc_msgSend(v22, sel_managedObjectIDForURIRepresentation_, v14, v18);

      v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
      if (v15)
      {
        MEMORY[0x234932730](v16);
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23361E414();
        sub_23361E438();
        sub_23361E408();
      }
      v10 += v19;
      if (!--v9)
        goto LABEL_10;
    }
  }
  else
  {
    v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_10:
    v12(v8, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_2333AA638(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000233675340)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23361F224();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2333AA6BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2333A9BE4(a1);
}

uint64_t sub_2333AA6D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2333A9CC8(v1, a1);
}

uint64_t sub_2333AA6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2333A9804(a1, a2);
}

uint64_t AccountOriginType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::AccountOriginType_optional __swiftcall AccountOriginType.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((rawValue & 0xFFFC) != 0)
    v2 = 4;
  *v1 = v2;
  return (FinanceKit::AccountOriginType_optional)rawValue;
}

void *static AccountOriginType.allCases.getter()
{
  return &unk_25046A208;
}

unint64_t sub_2333AA740()
{
  unint64_t result;

  result = qword_25604C3B0;
  if (!qword_25604C3B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountOriginType, &type metadata for AccountOriginType);
    atomic_store(result, (unint64_t *)&qword_25604C3B0);
  }
  return result;
}

FinanceKit::AccountOriginType_optional sub_2333AA784(Swift::Int16 *a1)
{
  return AccountOriginType.init(rawValue:)(*a1);
}

uint64_t sub_2333AA78C()
{
  sub_2333AA960();
  return sub_23361E3A8();
}

uint64_t sub_2333AA7E8()
{
  sub_2333AA960();
  return sub_23361E36C();
}

unint64_t sub_2333AA838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604C3B8;
  if (!qword_25604C3B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C3C0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25604C3B8);
  }
  return result;
}

void sub_2333AA884(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046A230;
}

uint64_t storeEnumTagSinglePayload for AccountOriginType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2333AA8E0 + 4 * byte_233641325[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2333AA914 + 4 * byte_233641320[v4]))();
}

uint64_t sub_2333AA914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333AA91C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333AA924);
  return result;
}

uint64_t sub_2333AA930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333AA938);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2333AA93C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333AA944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountOriginType()
{
  return &type metadata for AccountOriginType;
}

unint64_t sub_2333AA960()
{
  unint64_t result;

  result = qword_25604C3C8;
  if (!qword_25604C3C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountOriginType, &type metadata for AccountOriginType);
    atomic_store(result, (unint64_t *)&qword_25604C3C8);
  }
  return result;
}

uint64_t OrderTitleFormatter.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233168580(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t OrderTitleFormatter.Input.firstLineItemTitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderTitleFormatter.Input.firstLineItemTitle.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderTitleFormatter.Input.firstLineItemTitle.modify())()
{
  return nullsub_1;
}

uint64_t OrderTitleFormatter.Input.totalNumberOfLineItems.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OrderTitleFormatter.Input.totalNumberOfLineItems.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*OrderTitleFormatter.Input.totalNumberOfLineItems.modify())()
{
  return nullsub_1;
}

uint64_t OrderTitleFormatter.Input.orderCreatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OrderTitleFormatter.Input(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OrderTitleFormatter.Input.orderCreatedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OrderTitleFormatter.Input(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OrderTitleFormatter.Input.orderCreatedDate.modify())(_QWORD)
{
  type metadata accessor for OrderTitleFormatter.Input(0);
  return nullsub_1;
}

uint64_t OrderTitleFormatter.Input.init(firstLineItemTitle:totalNumberOfLineItems:orderCreatedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5 + *(int *)(type metadata accessor for OrderTitleFormatter.Input(0) + 24);
  v7 = sub_23361D634();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

uint64_t type metadata accessor for OrderTitleFormatter.Input(uint64_t a1)
{
  return sub_233177414(a1, qword_25604C4F8);
}

uint64_t OrderTitleFormatter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t OrderTitleFormatter.configuration.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331C7090(a1, v1);
}

uint64_t (*OrderTitleFormatter.configuration.modify())()
{
  return nullsub_1;
}

uint64_t OrderTitleFormatter.format(_:now:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;

  v5 = type metadata accessor for OrderedDateFormatter();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v23 - v7;
  v9 = a1[1];
  if (v9)
  {
    v10 = *a1;
    v11 = a1[2];
    if (v11 < 2)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_233623D50;
      *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
      v13 = sub_2331683F0();
      *(_QWORD *)(v12 + 32) = v10;
      *(_QWORD *)(v12 + 40) = v9;
      v14 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v12 + 96) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v12 + 104) = v14;
      *(_QWORD *)(v12 + 64) = v13;
      *(_QWORD *)(v12 + 72) = v11 - 1;
      v15 = qword_2542450A8;
      swift_bridgeObjectRetain();
      if (v15 != -1)
        swift_once();
      v16 = (void *)qword_2542450A0;
      v17 = (void *)sub_23361E12C();
      v18 = (void *)sub_23361E12C();
      v19 = (void *)sub_23361E12C();
      v20 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, v18, v19);

      sub_23361E150();
      v10 = sub_23361E180();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2331684BC(v2, (uint64_t)&v23 - v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v21 = type metadata accessor for OrderTitleFormatter.Input(0);
    v10 = OrderedDateFormatter.format(_:now:)((uint64_t)a1 + *(int *)(v21 + 24), a2);
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for OrderedDateFormatter);
  }
  return v10;
}

uint64_t OrderTitleFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static OrderTitleFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_2333AAF50()
{
  sub_2333AC17C();
  return sub_23361F428();
}

uint64_t sub_2333AAF78()
{
  sub_2333AC17C();
  return sub_23361F434();
}

uint64_t OrderTitleFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333AC17C();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t OrderTitleFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t OrderTitleFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3E0);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OrderTitleFormatter(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333AC17C();
  sub_23361F3EC();
  if (!v2)
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_233168580(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233168580((uint64_t)v11, v13, type metadata accessor for OrderTitleFormatter);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2333AB380@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = OrderTitleFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2333AB3A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = OrderTitleFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2333AB440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderTitleFormatter.init(from:)(a1, a2);
}

uint64_t sub_2333AB454(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333AC17C();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t _s10FinanceKit19OrderTitleFormatterV5InputV9lineItems16orderCreatedDateAESayAA0C0V8LineItemVG_10Foundation0K0VtcfC_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v5 = a1[2];
  if (v5)
  {
    v7 = a1[9];
    v6 = a1[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v6;
  a3[2] = v5;
  v8 = (char *)a3 + *(int *)(type metadata accessor for OrderTitleFormatter.Input(0) + 24);
  v9 = sub_23361D634();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
}

unint64_t OrderTitleFormatter.Input.init(lineItems:orderCreatedDate:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v4;
  unint64_t v6;
  uint64_t countAndFlagsBits;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = result;
  v6 = result >> 62;
  if (!(result >> 62))
  {
    countAndFlagsBits = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (countAndFlagsBits)
      goto LABEL_3;
LABEL_9:
    object = 0;
    if (!v6)
      goto LABEL_7;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  countAndFlagsBits = sub_23361EF30();
  result = swift_bridgeObjectRelease();
  if (!countAndFlagsBits)
    goto LABEL_9;
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x234933120](0, v4);
LABEL_6:
    v9 = v8;
    v10 = objc_msgSend(v8, sel_title);

    v11 = sub_23361D6B8();
    v12 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v11);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;

    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_7:
      v14 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
      swift_bridgeObjectRelease();
      *a3 = countAndFlagsBits;
      a3[1] = (uint64_t)object;
      a3[2] = v14;
      v15 = (char *)a3 + *(int *)(type metadata accessor for OrderTitleFormatter.Input(0) + 24);
      v16 = sub_23361D634();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
    }
LABEL_10:
    swift_bridgeObjectRetain();
    v14 = sub_23361EF30();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v4 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t OrderTitleFormatter.Input.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order(0);
  v9 = *(_QWORD *)(a1 + *(int *)(v8 + 68));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v8 + 40), v4);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 72);
    v12 = swift_bridgeObjectRetain();
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  *(_QWORD *)a2 = v11;
  *((_QWORD *)a2 + 1) = v12;
  *((_QWORD *)a2 + 2) = v10;
  v13 = type metadata accessor for OrderTitleFormatter.Input(0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&a2[*(int *)(v13 + 24)], v7, v4);
  return sub_233168500(a1, type metadata accessor for Order);
}

void OrderTitleFormatter.Input.init(orderContent:fulfillment:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~a2 & 0xF000000000000007) != 0)
  {
    if (a2 < 0)
    {
      v12 = objc_msgSend((id)(a2 & 0x7FFFFFFFFFFFFFFFLL), sel_lineItemObjects);
      type metadata accessor for ManagedOrderLineItem();
      sub_233167C58((unint64_t *)&qword_256043F28, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderLineItem, MEMORY[0x24BEE5BD8]);
      sub_23361E5DC();

      v13 = swift_bridgeObjectRetain();
      v14 = sub_2333AFD68(v13);
      swift_bridgeObjectRelease();
      v16 = v14;
      sub_2333156B4((uint64_t *)&v16);
      swift_bridgeObjectRelease();
      sub_2333162E0(a2);
      sub_2333162E0(a2);
      v10 = v16;
      goto LABEL_6;
    }
    v9 = ManagedOrderShippingFulfillment.lineItems.getter();
  }
  else
  {
    v9 = ManagedECommerceOrderContent.lineItems.getter();
  }
  v10 = v9;
LABEL_6:
  v11 = objc_msgSend(a1, sel_createdDate);
  sub_23361D5EC();

  OrderTitleFormatter.Input.init(lineItems:orderCreatedDate:)(v10, (uint64_t)v8, a3);
  sub_2333162E0(a2);

}

void OrderTitleFormatter.Input.init(orderContent:orderReturn:)(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  id v10;
  uint64_t v11;

  v6 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ManagedOrderReturn.lineItems.getter();
  v10 = objc_msgSend(a1, sel_createdDate);
  sub_23361D5EC();

  OrderTitleFormatter.Input.init(lineItems:orderCreatedDate:)(v9, (uint64_t)v8, a3);
}

uint64_t OrderTitleFormatter.Input.init(_:orderReturn:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = type metadata accessor for Order(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v11 + 40), v6);
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(v10 + 72);
    v14 = swift_bridgeObjectRetain();
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  *(_QWORD *)a3 = v13;
  *((_QWORD *)a3 + 1) = v14;
  *((_QWORD *)a3 + 2) = v12;
  v15 = type metadata accessor for OrderTitleFormatter.Input(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a3[*(int *)(v15 + 24)], v9, v6);
  sub_233168500((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
  return sub_233168500(a1, type metadata accessor for Order);
}

void OrderTitleFormatter.Input.init(orderContent:contentItem:)(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  _QWORD v12[2];

  v6 = sub_23361D634();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  if ((~*a2 & 0x7000000000000007) != 0)
  {
    v12[1] = *a2;
    v10 = ManagedOrderContentItem.lineItems.getter();
    sub_2331B6B84(v9);
  }
  else
  {
    v10 = ManagedECommerceOrderContent.lineItems.getter();
  }
  v11 = objc_msgSend(a1, sel_createdDate);
  sub_23361D5EC();

  OrderTitleFormatter.Input.init(lineItems:orderCreatedDate:)(v10, (uint64_t)v8, a3);
}

uint64_t OrderTitleFormatter.Input.init(_:contentItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047BB0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a2, (uint64_t)v15, &qword_256047BB0);
  v16 = type metadata accessor for Order.ContentItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    sub_233168608((uint64_t)v15, &qword_256047BB0);
    sub_2331684BC(a1, (uint64_t)v12, type metadata accessor for Order);
  }
  else
  {
    v17 = (_QWORD *)Order.ContentItem.lineItems.getter();
    sub_233168500((uint64_t)v15, type metadata accessor for Order.ContentItem);
    sub_2331684BC(a1, (uint64_t)v12, type metadata accessor for Order);
    if (v17)
      goto LABEL_5;
  }
  v17 = *(_QWORD **)&v12[*(int *)(v10 + 68)];
  swift_bridgeObjectRetain();
LABEL_5:
  sub_233168500((uint64_t)v12, type metadata accessor for Order);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v10 + 40), v6);
  v18 = v17[2];
  if (v18)
  {
    v20 = v17[9];
    v19 = v17[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = 0;
    v19 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v20;
  *((_QWORD *)a3 + 1) = v19;
  *((_QWORD *)a3 + 2) = v18;
  v21 = type metadata accessor for OrderTitleFormatter.Input(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a3[*(int *)(v21 + 24)], v9, v6);
  sub_233168608(a2, &qword_256047BB0);
  return sub_233168500(a1, type metadata accessor for Order);
}

uint64_t OrderTitleFormatter.Input.init(orderContent:contentItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043798);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a2, (uint64_t)v15, &qword_256043798);
  v16 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    sub_233168608((uint64_t)v15, &qword_256043798);
    sub_2331684BC(a1, (uint64_t)v12, type metadata accessor for RawECommerceOrderContent);
  }
  else
  {
    v17 = (_QWORD *)RawECommerceOrderContent.ContentItem.lineItems.getter();
    sub_233168500((uint64_t)v15, type metadata accessor for RawECommerceOrderContent.ContentItem);
    sub_2331684BC(a1, (uint64_t)v12, type metadata accessor for RawECommerceOrderContent);
    if (v17)
      goto LABEL_5;
  }
  v17 = *(_QWORD **)&v12[*(int *)(v10 + 76)];
  swift_bridgeObjectRetain();
LABEL_5:
  sub_233168500((uint64_t)v12, type metadata accessor for RawECommerceOrderContent);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v10 + 44), v6);
  v18 = v17[2];
  if (v18)
  {
    v20 = v17[9];
    v19 = v17[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = 0;
    v19 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v20;
  *((_QWORD *)a3 + 1) = v19;
  *((_QWORD *)a3 + 2) = v18;
  v21 = type metadata accessor for OrderTitleFormatter.Input(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a3[*(int *)(v21 + 24)], v9, v6);
  sub_233168608(a2, &qword_256043798);
  return sub_233168500(a1, type metadata accessor for RawECommerceOrderContent);
}

uint64_t _s10FinanceKit19OrderTitleFormatterV5InputV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v4 = a1[1];
  v5 = a2[1];
  if (v4)
  {
    if (!v5)
      return 0;
    v6 = *a1 == *a2 && v4 == v5;
    if (!v6 && (sub_23361F224() & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  if (a1[2] == a2[2])
  {
    type metadata accessor for OrderTitleFormatter.Input(0);
    return sub_23361D5E0();
  }
  return 0;
}

unint64_t sub_2333AC17C()
{
  unint64_t result;

  result = qword_25604C3D8;
  if (!qword_25604C3D8)
  {
    result = MEMORY[0x234934494](&unk_23364170C, &type metadata for OrderTitleFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C3D8);
  }
  return result;
}

uint64_t type metadata accessor for OrderTitleFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_25604C468);
}

uint64_t sub_2333AC1D4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604C3E8, type metadata accessor for OrderTitleFormatter, (uint64_t)&protocol conformance descriptor for OrderTitleFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2333AC210()
{
  return sub_233167C58(&qword_25604C3F0, type metadata accessor for OrderTitleFormatter, (uint64_t)&protocol conformance descriptor for OrderTitleFormatter);
}

uint64_t sub_2333AC23C()
{
  return sub_233167C58(&qword_25604C3F8, type metadata accessor for OrderTitleFormatter, (uint64_t)&protocol conformance descriptor for OrderTitleFormatter);
}

uint64_t sub_2333AC268()
{
  return sub_233167C58(&qword_25604C400, type metadata accessor for OrderTitleFormatter, (uint64_t)&protocol conformance descriptor for OrderTitleFormatter);
}

uint64_t sub_2333AC294()
{
  return sub_233167C58(&qword_25604C408, type metadata accessor for OrderTitleFormatter, (uint64_t)&protocol conformance descriptor for OrderTitleFormatter);
}

uint64_t getEnumTagSinglePayload for OrderTitleFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333AC2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OrderTitleFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333AC314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for OrderTitleFormatter.Input(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23361D634();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for OrderTitleFormatter.Input(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for OrderTitleFormatter.Input(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23361D634();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for OrderTitleFormatter.Input(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for OrderTitleFormatter.Input(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for OrderTitleFormatter.Input(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderTitleFormatter.Input()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333AC620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for OrderTitleFormatter.Input()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333AC6B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2333AC728()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OrderTitleFormatter.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333AC7E8 + 4 * byte_233641490[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333AC808 + 4 * byte_233641495[v4]))();
}

_BYTE *sub_2333AC7E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333AC808(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AC810(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AC818(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AC820(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AC828(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OrderTitleFormatter.CodingKeys()
{
  return &type metadata for OrderTitleFormatter.CodingKeys;
}

unint64_t sub_2333AC848()
{
  unint64_t result;

  result = qword_25604C538;
  if (!qword_25604C538)
  {
    result = MEMORY[0x234934494](&unk_2336416E4, &type metadata for OrderTitleFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C538);
  }
  return result;
}

unint64_t sub_2333AC890()
{
  unint64_t result;

  result = qword_25604C540;
  if (!qword_25604C540)
  {
    result = MEMORY[0x234934494](&unk_233641654, &type metadata for OrderTitleFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C540);
  }
  return result;
}

unint64_t sub_2333AC8D8()
{
  unint64_t result;

  result = qword_25604C548;
  if (!qword_25604C548)
  {
    result = MEMORY[0x234934494](&unk_23364167C, &type metadata for OrderTitleFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C548);
  }
  return result;
}

uint64_t AppleAccountDataImporterError.Code.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t AppleAccountDataImporterError.Code.rawValue.getter()
{
  return 0;
}

_QWORD *sub_2333AC934@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_2333AC948(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

unint64_t static AppleAccountDataImporterError.errorDomain.getter()
{
  return 0xD000000000000029;
}

uint64_t AppleAccountDataImporterError.errorCode.getter()
{
  return 0;
}

uint64_t AppleAccountDataImporterError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2333AC9A4()
{
  unint64_t result;

  result = qword_25604C550;
  if (!qword_25604C550)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AppleAccountDataImporterError.Code, &type metadata for AppleAccountDataImporterError.Code);
    atomic_store(result, (unint64_t *)&qword_25604C550);
  }
  return result;
}

uint64_t sub_2333AC9E8()
{
  sub_2333ACB54();
  return sub_23361F2D8();
}

uint64_t sub_2333ACA10()
{
  sub_2333ACB54();
  return sub_23361F2CC();
}

unint64_t sub_2333ACA3C()
{
  unint64_t result;

  result = qword_25604C558;
  if (!qword_25604C558)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AppleAccountDataImporterError, &type metadata for AppleAccountDataImporterError);
    atomic_store(result, (unint64_t *)&qword_25604C558);
  }
  return result;
}

unint64_t sub_2333ACA80()
{
  return 0xD000000000000029;
}

uint64_t sub_2333ACA9C()
{
  return 0;
}

ValueMetadata *type metadata accessor for AppleAccountDataImporterError()
{
  return &type metadata for AppleAccountDataImporterError;
}

uint64_t storeEnumTagSinglePayload for AppleAccountDataImporterError.Code(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333ACAF8 + 4 * byte_233641760[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333ACB18 + 4 * byte_233641765[v4]))();
}

_BYTE *sub_2333ACAF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333ACB18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333ACB20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333ACB28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333ACB30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333ACB38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountDataImporterError.Code()
{
  return &type metadata for AppleAccountDataImporterError.Code;
}

unint64_t sub_2333ACB54()
{
  unint64_t result;

  result = qword_25604C560;
  if (!qword_25604C560)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AppleAccountDataImporterError, &type metadata for AppleAccountDataImporterError);
    atomic_store(result, (unint64_t *)&qword_25604C560);
  }
  return result;
}

uint64_t static BankConnectConsentHeaderParser.parse<A>(httpURLResponse:responseType:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v7 = sub_23361CA40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_23361E12C();
  v12 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v11);

  if (!v12)
  {
    sub_2331B04A4();
    swift_allocError();
    *v17 = 0;
    return swift_willThrow();
  }
  v22 = a3;
  v23 = v4;
  sub_23361E150();

  v13 = sub_23361D37C();
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v15 >> 60 == 15)
  {
    sub_2331B04A4();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
  sub_23361CA4C();
  v20 = v23;
  sub_23361CA58();
  swift_release();
  if (v20)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v21 = v20;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return sub_2331B04E8(v13, v15);
}

uint64_t static BankConnectConsentHeaderBuilder.encode(consent:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_23361CAC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_23361CADC();
  v10 = sub_23361CAE8();
  v12 = v11;
  result = swift_release();
  if (!v2)
  {
    v14 = sub_23361D3B8();
    v16 = v15;
    result = sub_23316BEA4(v10, v12);
    *a2 = 0x746E65736E6F43;
    a2[1] = 0xE700000000000000;
    a2[2] = v14;
    a2[3] = v16;
  }
  return result;
}

uint64_t static BankConnectConsentHeaderBuilder.build(consent:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  int *v37;
  uint64_t v38;
  uint64_t v39;

  v31 = a2;
  v3 = sub_23361CAC4();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  v6 = v5[6];
  v7 = (uint64_t *)(a1 + v5[5]);
  v8 = v7[1];
  v32 = *v7;
  v9 = a1 + v6;
  v10 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  v37 = v10;
  v38 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
  v12 = (char *)boxed_opaque_existential_0 + v10[5];
  v13 = sub_23361D634();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v12, v9, v13);
  v14((char *)boxed_opaque_existential_0 + v10[6], a1 + v5[7], v13);
  v15 = *(_QWORD *)(a1 + v5[9]);
  v16 = (uint64_t *)(a1 + v5[10]);
  v17 = *v16;
  v18 = v16[1];
  *boxed_opaque_existential_0 = v32;
  boxed_opaque_existential_0[1] = v8;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]) = v15;
  v19 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[8]);
  *v19 = v17;
  v19[1] = v18;
  __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v20 = v35;
  v21 = __swift_project_value_buffer(v35, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v21, v20);
  sub_23361CADC();
  v22 = v39;
  v23 = sub_23361CAE8();
  v25 = v24;
  swift_release();
  if (!v22)
  {
    v26 = sub_23361D3B8();
    v28 = v27;
    sub_23316BEA4(v23, v25);
    v29 = v31;
    *v31 = 0x746E65736E6F43;
    v29[1] = 0xE700000000000000;
    v29[2] = v26;
    v29[3] = v28;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
}

void static HTTPHeaderField.Name.consent.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x746E65736E6F43;
  a1[1] = 0xE700000000000000;
}

void static HTTPHeaderField.Name.operationID.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000002336753B0;
}

void static HTTPHeaderField.Name.userPresence.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000233668560;
}

void static HTTPHeaderField.Name.remainingRefreshes.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000002336753D0;
}

void static HTTPHeaderField.Name.refreshRetryAfter.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000002336753F0;
}

uint64_t static BankConnectResponseHeadersParser.parse(httpURLResponse:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  __int16 v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v4 = sub_23361CA40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Consent(0);
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_23361E12C();
  v11 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v10);

  if (!v11)
  {
    sub_2331B04A4();
    swift_allocError();
    *v16 = 0;
    return swift_willThrow();
  }
  v27 = a2;
  sub_23361E150();

  v12 = sub_23361D37C();
  v14 = v13;
  swift_bridgeObjectRelease();
  if (v14 >> 60 == 15)
  {
    sub_2331B04A4();
    swift_allocError();
    *v15 = 3;
    return swift_willThrow();
  }
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v4, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
  sub_23361CA4C();
  sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  v20 = v28;
  v19 = v29;
  sub_23361CA58();
  swift_release();
  if (v19)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v21 = v19;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_2331B04E8(v12, v14);
  }
  else
  {
    sub_2331B04E8(v12, v14);
    sub_2333ADA7C(a1);
    v23 = v22;
    v24 = (uint64_t)v20;
    v25 = v27;
    sub_2333ADE18(v24, v27);
    result = type metadata accessor for BankConnectResponseHeaders();
    v26 = v25 + *(int *)(result + 20);
    *(_WORD *)v26 = v23;
    *(_BYTE *)(v26 + 2) = 0;
  }
  return result;
}

void static BankConnectRemainingRefreshesHeaderParser.parse(httpURLResponse:)(void *a1)
{
  sub_2333ADA7C(a1);
}

uint64_t static BankConnectConsentHeaderBuilder.build(rawConsent:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  v5 = sub_23361CAC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for RawBankConnectData.Consent(0);
  v21 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v19);
  sub_2331684BC(a1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for RawBankConnectData.Consent);
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v5, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  sub_23361CADC();
  v11 = sub_23361CAE8();
  v13 = v12;
  swift_release();
  if (!v2)
  {
    v14 = sub_23361D3B8();
    v16 = v15;
    sub_23316BEA4(v11, v13);
    *a2 = 0x746E65736E6F43;
    a2[1] = 0xE700000000000000;
    a2[2] = v14;
    a2[3] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
}

void *sub_2333AD8E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_23361D6A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UserPresence();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return &unk_250467060;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233623D50;
  *(_QWORD *)(v11 + 32) = 0xD000000000000015;
  *(_QWORD *)(v11 + 40) = 0x8000000233668560;
  *(_QWORD *)(v11 + 48) = 0x534552505F544F4ELL;
  *(_QWORD *)(v11 + 56) = 0xEB00000000544E45;
  v12 = sub_23361D64C();
  *(_QWORD *)(v11 + 64) = 0xD000000000000014;
  *(_QWORD *)(v11 + 72) = 0x80000002336753B0;
  *(_QWORD *)(v11 + 80) = v12;
  *(_QWORD *)(v11 + 88) = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (void *)v11;
}

void sub_2333ADA7C(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  char *v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  _QWORD v31[3];

  v2 = (void *)sub_23361E12C();
  v3 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v2);

  if (!v3)
  {
    sub_2331B04A4();
    swift_allocError();
    v13 = 1;
LABEL_48:
    *v12 = v13;
    swift_willThrow();
    return;
  }
  v4 = sub_23361E150();
  v6 = v5;

  v7 = HIBYTE(v6) & 0xF;
  v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v6) & 0xF;
  else
    v9 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
    {
      if ((v4 & 0x1000000000000000) != 0)
        v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v10 = (unsigned __int8 *)sub_23361EE34();
      v11 = (sub_233490304(v10, v8, 10) >> 16) & 1;
LABEL_46:
      swift_bridgeObjectRelease();
      if (!v11)
        return;
      goto LABEL_47;
    }
    v31[0] = v4;
    v31[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v7)
        goto LABEL_61;
      if (v7 == 1)
        goto LABEL_33;
      v15 = (BYTE1(v4) - 48);
      if (v15 > 9)
        goto LABEL_33;
      if (v7 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u)
          goto LABEL_33;
        LOWORD(v15) = 10 * v15 + (BYTE2(v4) - 48);
        v16 = v7 - 3;
        if (v16)
        {
          v17 = (unsigned __int8 *)v31 + 3;
          while (1)
          {
            v18 = *v17 - 48;
            if (v18 > 9)
              goto LABEL_33;
            v19 = (__int16)(10 * v15);
            if (v19 != 10 * (__int16)v15)
              goto LABEL_33;
            v15 = v19 + v18;
            if ((__int16)(v19 + v18) != v15)
              goto LABEL_33;
            v11 = 0;
            ++v17;
            if (!--v16)
              goto LABEL_46;
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v7)
        {
          if (v7 != 1)
          {
            v14 = (BYTE1(v4) - 48);
            if (v14 <= 9)
            {
              if (v7 == 2)
              {
                v11 = 0;
                goto LABEL_46;
              }
              if ((BYTE2(v4) - 48) <= 9u)
              {
                LOWORD(v25) = -10 * v14 - (BYTE2(v4) - 48);
                v26 = v7 - 3;
                if (!v26)
                  goto LABEL_45;
                v27 = (unsigned __int8 *)v31 + 3;
                while (1)
                {
                  v28 = *v27 - 48;
                  if (v28 > 9)
                    break;
                  v29 = (__int16)(10 * v25);
                  if (v29 != 10 * (__int16)v25)
                    break;
                  v25 = v29 - v28;
                  if ((__int16)(v29 - v28) != v25)
                    break;
                  v11 = 0;
                  ++v27;
                  if (!--v26)
                    goto LABEL_46;
                }
              }
            }
          }
LABEL_33:
          v11 = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_61:
        __break(1u);
        return;
      }
      if (!v7)
        goto LABEL_33;
      v20 = (v4 - 48);
      if (v20 > 9)
        goto LABEL_33;
      if (v7 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u)
          goto LABEL_33;
        LOWORD(v20) = 10 * v20 + (BYTE1(v4) - 48);
        v21 = v7 - 2;
        if (v21)
        {
          v22 = (unsigned __int8 *)v31 + 2;
          while (1)
          {
            v23 = *v22 - 48;
            if (v23 > 9)
              goto LABEL_33;
            v24 = (__int16)(10 * v20);
            if (v24 != 10 * (__int16)v20)
              goto LABEL_33;
            v20 = v24 + v23;
            if ((__int16)(v24 + v23) != v20)
              goto LABEL_33;
            v11 = 0;
            ++v22;
            if (!--v21)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    v11 = 0;
    goto LABEL_46;
  }
  v30 = sub_2334903FC(v4, v6, 10);
  swift_bridgeObjectRelease();
  if ((v30 & 0x10000) != 0)
  {
LABEL_47:
    sub_2331B04A4();
    swift_allocError();
    v13 = 2;
    goto LABEL_48;
  }
}

uint64_t sub_2333ADE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Consent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BankConnectResponseHeadersParser()
{
  return &type metadata for BankConnectResponseHeadersParser;
}

ValueMetadata *type metadata accessor for BankConnectRemainingRefreshesHeaderParser()
{
  return &type metadata for BankConnectRemainingRefreshesHeaderParser;
}

ValueMetadata *type metadata accessor for BankConnectConsentHeaderParser()
{
  return &type metadata for BankConnectConsentHeaderParser;
}

ValueMetadata *type metadata accessor for BankConnectConsentHeaderBuilder()
{
  return &type metadata for BankConnectConsentHeaderBuilder;
}

ValueMetadata *type metadata accessor for BankConnectUserPresenceHeaderBuilder()
{
  return &type metadata for BankConnectUserPresenceHeaderBuilder;
}

unint64_t XPCService.rawValue.getter()
{
  return 0xD000000000000033;
}

uint64_t XPCService.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t sub_2333ADF20()
{
  unint64_t result;

  result = qword_25604C568;
  if (!qword_25604C568)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for XPCService, &type metadata for XPCService);
    atomic_store(result, (unint64_t *)&qword_25604C568);
  }
  return result;
}

uint64_t sub_2333ADF64()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333ADFB8()
{
  return sub_23361E0A8();
}

uint64_t sub_2333ADFD4()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333AE024@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2333AE074(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000033;
  a1[1] = 0x8000000233669570;
}

uint64_t storeEnumTagSinglePayload for XPCService(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333AE0D4 + 4 * asc_2336419D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333AE0F4 + 4 * byte_2336419DD[v4]))();
}

_BYTE *sub_2333AE0D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333AE0F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AE0FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AE104(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333AE10C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333AE114(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XPCService()
{
  return &type metadata for XPCService;
}

uint64_t ManagedOrderReturn.status.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t result;

  v1 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_willAccessValueForKey_, v1);

  v2 = objc_msgSend(v0, sel_statusValue);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_didAccessValueForKey_, v3);

  result = _s10FinanceKit24ManagedOrderPickupStatusO8rawValueACSgs5Int16V_tcfC_0((uint64_t)v2);
  if (result == 6)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = sub_23361EF24();
    __break(1u);
  }
  return result;
}

uint64_t ManagedOrderReturn.lineItems.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_willAccessValueForKey_, v1);

  v2 = objc_msgSend(v0, sel_lineItemObjects);
  type metadata accessor for ManagedOrderLineItem();
  sub_233316298();
  sub_23361E5DC();

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_didAccessValueForKey_, v3);

  v4 = swift_bridgeObjectRetain();
  v5 = sub_2333AFD68(v4);
  swift_bridgeObjectRelease();
  v7 = v5;
  sub_2333156B4(&v7);
  swift_bridgeObjectRelease();
  return v7;
}

void sub_2333AE3A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_returnIdentifier);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id ManagedOrderReturn.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturn.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturn.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOrderReturn.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedOrderReturn;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedOrderReturn.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

void sub_2333AE644(unsigned __int8 *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v3, sel_willChangeValueForKey_, v4);

  objc_msgSend(v3, sel_setStatusValue_, v2);
  v5 = (id)sub_23361E12C();
  objc_msgSend(v3, sel_didChangeValueForKey_, v5);

}

void ManagedOrderReturn.status.setter(unsigned __int8 a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  objc_msgSend(v1, sel_setStatusValue_, a1);
  v4 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

void (*ManagedOrderReturn.status.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ManagedOrderReturn.status.getter();
  return sub_2333AE7BC;
}

void sub_2333AE7BC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  objc_msgSend(v1, sel_setStatusValue_, v2);
  v4 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

void sub_2333AE860(uint64_t a1, void **a2)
{
  void *v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *a2;
  v3 = swift_bridgeObjectRetain();
  sub_2331C95F4(v3);
  swift_bridgeObjectRelease();
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v2, sel_willChangeValueForKey_, v4);

  type metadata accessor for ManagedOrderLineItem();
  sub_233316298();
  v5 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLineItemObjects_, v5);

  v6 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_didChangeValueForKey_, v6);

}

void ManagedOrderReturn.lineItems.setter(unint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  sub_2331C95F4(a1);
  swift_bridgeObjectRelease();
  v2 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v2);

  type metadata accessor for ManagedOrderLineItem();
  sub_233316298();
  v3 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setLineItemObjects_, v3);

  v4 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

void (*ManagedOrderReturn.lineItems.modify(uint64_t *a1))(unint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ManagedOrderReturn.lineItems.getter();
  return sub_2333AEA80;
}

void sub_2333AEA80(unint64_t *a1, char a2)
{
  void *v2;
  unint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    sub_2331C95F4(v3);
    swift_bridgeObjectRelease();
    v4 = (void *)sub_23361E12C();
    objc_msgSend(v2, sel_willChangeValueForKey_, v4);

    type metadata accessor for ManagedOrderLineItem();
    sub_233316298();
    v5 = (void *)sub_23361E5B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setLineItemObjects_, v5);

    v6 = (void *)sub_23361E12C();
    objc_msgSend(v2, sel_didChangeValueForKey_, v6);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2331C95F4(*a1);
    swift_bridgeObjectRelease();
    v7 = (void *)sub_23361E12C();
    objc_msgSend(v2, sel_willChangeValueForKey_, v7);

    type metadata accessor for ManagedOrderLineItem();
    sub_233316298();
    v8 = (void *)sub_23361E5B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setLineItemObjects_, v8);

    v9 = (id)sub_23361E12C();
    objc_msgSend(v2, sel_didChangeValueForKey_, v9);

  }
}

id ManagedOrderReturn.__allocating_init(_:bundle:context:)(_QWORD *a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id result;
  unint64_t v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  int *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  id v72;
  _QWORD *v73;
  uint64_t v74;
  int *v75;
  id v76;
  __int128 v77[8];
  _OWORD v78[8];
  unint64_t v79;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v69 = (uint64_t)&v67 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v67 - v14;
  v16 = objc_allocWithZone(v3);
  v76 = a3;
  v17 = objc_msgSend(v16, sel_initWithContext_, a3);
  v18 = type metadata accessor for RawOrderReturn();
  if (*(_QWORD *)((char *)a1 + *(int *)(v18 + 48) + 8))
  {
    v19 = v17;
    swift_bridgeObjectRetain();
    v20 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = v17;
    v20 = 0;
  }
  objc_msgSend(v17, sel_setCarrier_, v20);

  v22 = *(_QWORD *)((char *)a1 + *(int *)(v18 + 52) + 8);
  v75 = (int *)v18;
  v68 = v15;
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v72 = v17;
  objc_msgSend(v17, sel_setTrackingNumber_, v23);

  v67 = (uint64_t)&v67;
  v73 = a1;
  v24 = *a1;
  v79 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_23361EE70();
  v25 = *(_QWORD *)(v24 + 16);
  v74 = v24;
  swift_bridgeObjectRetain();
  if (v25)
  {
    v26 = (__int128 *)(v74 + 32);
    type metadata accessor for ManagedOrderLineItem();
    v27 = 0;
    while (1)
    {
      v28 = *v26;
      v29 = v26[1];
      v30 = v26[3];
      v78[2] = v26[2];
      v78[3] = v30;
      v78[0] = v28;
      v78[1] = v29;
      v31 = v26[4];
      v32 = v26[5];
      v33 = v26[7];
      v78[6] = v26[6];
      v78[7] = v33;
      v78[4] = v31;
      v78[5] = v32;
      v34 = v26[5];
      v77[4] = v26[4];
      v77[5] = v34;
      v35 = v26[7];
      v77[6] = v26[6];
      v77[7] = v35;
      v36 = v26[1];
      v77[0] = *v26;
      v77[1] = v36;
      v37 = v26[3];
      v77[2] = v26[2];
      v77[3] = v37;
      sub_23328C0F4((uint64_t)v78);
      sub_23328C0F4((uint64_t)v78);
      swift_retain();
      result = ManagedOrderLineItem.__allocating_init(_:bundle:context:)(v77, a2, v76);
      if (v27 == 0x8000)
        break;
      objc_msgSend(result, sel_setPositionIndex_, (__int16)v27);
      sub_23328C168((uint64_t)v78);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      v26 += 8;
      if (v25 == ++v27)
        goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    v39 = v79;
    swift_bridgeObjectRelease();
    sub_2331C95F4(v39);
    swift_release();
    v40 = (void *)sub_23361E12C();
    v41 = v72;
    objc_msgSend(v72, sel_willChangeValueForKey_, v40);

    type metadata accessor for ManagedOrderLineItem();
    sub_233316298();
    v42 = (void *)sub_23361E5B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_setLineItemObjects_, v42);

    v43 = (void *)sub_23361E12C();
    objc_msgSend(v41, sel_didChangeValueForKey_, v43);

    v44 = (uint64_t)v73;
    v45 = *((unsigned __int8 *)v73 + 8);
    v46 = (void *)sub_23361E12C();
    objc_msgSend(v41, sel_willChangeValueForKey_, v46);

    objc_msgSend(v41, sel_setStatusValue_, v45);
    v47 = (void *)sub_23361E12C();
    objc_msgSend(v41, sel_didChangeValueForKey_, v47);

    if (*(_QWORD *)(v44 + 24))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v48 = (void *)OrderBundle.localizedString(forKey:)();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = 0;
    }
    v49 = v75;
    objc_msgSend(v41, sel_setStatusDescription_, v48);

    v50 = (uint64_t)v68;
    if (*(_QWORD *)(v44 + 40))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v51 = (void *)OrderBundle.localizedString(forKey:)();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = 0;
    }
    objc_msgSend(v41, sel_setNotes_, v51);

    if (*(_QWORD *)(v44 + v49[11] + 8))
    {
      swift_bridgeObjectRetain();
      v52 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v52 = 0;
    }
    objc_msgSend(v41, sel_setReturnNumber_, v52);

    if (*(_QWORD *)(v44 + v49[14] + 8))
    {
      swift_bridgeObjectRetain();
      v53 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v53 = 0;
    }
    v54 = (uint64_t)v70;
    objc_msgSend(v41, sel_setReturnLabel_, v53);

    sub_2331686A0(v44 + v49[8], v50, (uint64_t *)&unk_254247DA0);
    v55 = sub_23361D634();
    v56 = *(_QWORD *)(v55 - 8);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    v58 = 0;
    if (v57(v50, 1, v55) != 1)
    {
      v58 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v50, v55);
    }
    objc_msgSend(v41, sel_setInitiationDate_, v58);

    v59 = v69;
    sub_2331686A0(v44 + v75[9], v69, (uint64_t *)&unk_254247DA0);
    if (v57(v59, 1, v55) == 1)
    {
      v60 = 0;
    }
    else
    {
      v60 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v59, v55);
    }
    objc_msgSend(v41, sel_setDropOffDate_, v60);

    sub_2331686A0(v44 + v75[10], v54, (uint64_t *)&unk_254247DA0);
    if (v57(v54, 1, v55) == 1)
    {
      v61 = 0;
    }
    else
    {
      v61 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
    }
    v62 = (uint64_t)v71;
    objc_msgSend(v41, sel_setReturnDate_, v61);

    sub_2331686A0(v44 + v75[15], v62, &qword_254248700);
    v63 = sub_23361D340();
    v64 = *(_QWORD *)(v63 - 8);
    v65 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63) != 1)
    {
      v65 = (void *)sub_23361D268();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
    }
    objc_msgSend(v41, sel_setReturnManagementURL_, v65);

    v66 = (void *)sub_23361E12C();
    objc_msgSend(v41, sel_setReturnIdentifier_, v66);

    swift_release();
    sub_2333B0F30(v44);
    return v41;
  }
  return result;
}

uint64_t ManagedOrderReturn.rawOrderReturn.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t countAndFlagsBits;
  void *object;
  id v38;
  void *v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t *v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v4);
  v95 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v89 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v88 = (char *)&v84 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v84 - v11;
  v12 = ManagedOrderReturn.status.getter();
  v13 = objc_msgSend(v2, sel_returnIdentifier);
  v14 = sub_23361E150();
  v16 = v15;

  v17 = (int *)type metadata accessor for RawOrderReturn();
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v18 = a1 + v17[8];
  v19 = sub_23361D634();
  v20 = *(void (**)(void))(*(_QWORD *)(v19 - 8) + 56);
  v84 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v18, 1, 1, v19);
  v85 = a1 + v17[9];
  v20();
  v87 = a1 + v17[10];
  v20();
  v21 = (uint64_t *)(a1 + v17[11]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (uint64_t *)(a1 + v17[12]);
  *v22 = 0;
  v22[1] = 0;
  v90 = v22;
  v23 = (uint64_t *)(a1 + v17[13]);
  *v23 = 0;
  v23[1] = 0;
  v91 = v23;
  v24 = (uint64_t *)(a1 + v17[14]);
  *v24 = 0;
  v24[1] = 0;
  v92 = v24;
  v25 = a1 + v17[15];
  v26 = sub_23361D340();
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v94 = v25;
  v27 = v25;
  v28 = v26;
  v93(v27, 1, 1, v26);
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = v12;
  v29 = (uint64_t *)(a1 + v17[16]);
  *v29 = v14;
  v29[1] = v16;
  v30 = ManagedOrderReturn.lineItems.getter();
  v31 = sub_233361AE0(v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v31;
  v32 = objc_msgSend(v2, sel_statusDescription);
  if (v32)
  {
    v33 = v32;
    v34 = sub_23361D6B8();
    v35 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v34);
    countAndFlagsBits = v35._countAndFlagsBits;
    object = v35._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = countAndFlagsBits;
  *(_QWORD *)(a1 + 24) = object;
  v38 = objc_msgSend(v2, sel_notes);
  if (v38)
  {
    v39 = v38;
    v40 = sub_23361D6B8();
    v41 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v40);
    v42 = v41._countAndFlagsBits;
    v43 = v41._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = 0;
    v43 = 0;
  }
  v44 = (uint64_t)v88;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v43;
  v45 = objc_msgSend(v2, sel_initiationDate);
  if (v45)
  {
    v46 = v45;
    v47 = (uint64_t)v86;
    sub_23361D5EC();

    v48 = 0;
    v49 = (uint64_t)v89;
  }
  else
  {
    v48 = 1;
    v49 = (uint64_t)v89;
    v47 = (uint64_t)v86;
  }
  v50 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v47, v48, 1, v19);
  sub_233170B8C(v47, v84, (uint64_t *)&unk_254247DA0);
  v51 = objc_msgSend(v2, sel_dropOffDate);
  if (v51)
  {
    v52 = v51;
    sub_23361D5EC();

    v50 = 0;
  }
  v53 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v44, v50, 1, v19);
  sub_233170B8C(v44, v85, (uint64_t *)&unk_254247DA0);
  v54 = objc_msgSend(v2, sel_returnDate);
  if (v54)
  {
    v55 = v54;
    sub_23361D5EC();

    v53 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v49, v53, 1, v19);
  sub_233170B8C(v49, v87, (uint64_t *)&unk_254247DA0);
  v56 = objc_msgSend(v2, sel_returnNumber);
  if (v56)
  {
    v57 = v56;
    v58 = sub_23361E150();
    v60 = v59;

  }
  else
  {
    v58 = 0;
    v60 = 0;
  }
  swift_bridgeObjectRelease();
  *v21 = v58;
  v21[1] = v60;
  v61 = objc_msgSend(v2, sel_carrier);
  if (v61)
  {
    v62 = v61;
    v63 = sub_23361E150();
    v65 = v64;

  }
  else
  {
    v63 = 0;
    v65 = 0;
  }
  v66 = v90;
  swift_bridgeObjectRelease();
  *v66 = v63;
  v66[1] = v65;
  v67 = objc_msgSend(v2, sel_trackingNumber);
  if (v67)
  {
    v68 = v67;
    v69 = sub_23361E150();
    v71 = v70;

  }
  else
  {
    v69 = 0;
    v71 = 0;
  }
  v72 = v91;
  swift_bridgeObjectRelease();
  *v72 = v69;
  v72[1] = v71;
  v73 = objc_msgSend(v2, sel_returnLabel);
  if (v73)
  {
    v74 = v73;
    v75 = sub_23361E150();
    v77 = v76;

  }
  else
  {
    v75 = 0;
    v77 = 0;
  }
  v78 = v92;
  swift_bridgeObjectRelease();
  *v78 = v75;
  v78[1] = v77;
  v79 = objc_msgSend(v2, sel_returnManagementURL);
  if (v79)
  {
    v80 = v79;
    v81 = (uint64_t)v95;
    sub_23361D2D4();

    v82 = 0;
  }
  else
  {
    v82 = 1;
    v81 = (uint64_t)v95;
  }
  v93(v81, v82, 1, v28);
  return sub_233170B8C(v81, v94, &qword_254248700);
}

size_t sub_2333AFA6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256047530);
  v3 = *(_QWORD *)(sub_23361D634() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_2333B0154(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_2331961F0();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_2333AFB64(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A68C);
}

_QWORD *sub_2333AFB70(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A6B0);
}

_QWORD *sub_2333AFB7C(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A8DC);
}

_QWORD *sub_2333AFB88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2333B049C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2331961F0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2333AFC6C(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A900);
}

_QWORD *sub_2333AFC78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256047660);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_2333B0698((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2331961F0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2333AFD5C(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A924);
}

uint64_t sub_2333AFD68(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_23361ECE4();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_2333B08B8(&v8, v3 + 4, v2, a1);
  result = sub_2331961F0();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_2333AFE60(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A948);
}

_QWORD *sub_2333AFE6C(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A96C);
}

_QWORD *sub_2333AFE78(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318A990);
}

_QWORD *sub_2333AFE84(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318ADDC);
}

_QWORD *sub_2333AFE90(unint64_t a1)
{
  return sub_2333AFE9C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23318AE00);
}

_QWORD *sub_2333AFE9C(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

_QWORD *sub_2333AFF9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2333B0BA0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2331961F0();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2333B0080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256047520);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_2333B0D9C(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_2331961F0();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2333B0154(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_2331D0F20((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2333B049C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2333B0698(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = 16 * v16;
    v21 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(a4 + 56) + v20);
    v25 = *v24;
    v26 = v24[1];
    *v11 = v23;
    v11[1] = v22;
    v11[2] = v25;
    v11[3] = v26;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_2333B08B8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_23361ECA8();
    type metadata accessor for ManagedOrderLineItem();
    sub_233316298();
    result = (_QWORD *)sub_23361E60C();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (_QWORD *)v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_23361ED08())
        goto LABEL_45;
      type metadata accessor for ManagedOrderLineItem();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_2333B0BA0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_2333B0D9C(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2333B0F30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawOrderReturn();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2333B0F6C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_carrier, a2);
}

void sub_2333B0F88(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCarrier_);
}

void sub_2333B0FA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_trackingNumber, a2);
}

void sub_2333B0FC0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setTrackingNumber_);
}

id sub_2333B0FDC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_statusDescription);
  *a2 = result;
  return result;
}

id sub_2333B1014(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStatusDescription_, *a1);
}

id sub_2333B1028@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_notes);
  *a2 = result;
  return result;
}

id sub_2333B1060(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNotes_, *a1);
}

char *keypath_get_selector_returnNumber()
{
  return sel_returnNumber;
}

void sub_2333B1080(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_returnNumber, a2);
}

void sub_2333B109C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setReturnNumber_);
}

char *keypath_get_selector_returnLabel()
{
  return sel_returnLabel;
}

void sub_2333B10C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_returnLabel, a2);
}

void sub_2333B10E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setReturnLabel_);
}

char *keypath_get_selector_initiationDate()
{
  return sel_initiationDate;
}

uint64_t sub_2333B1108@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_initiationDate, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333B1134(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setInitiationDate_);
}

char *keypath_get_selector_dropOffDate()
{
  return sel_dropOffDate;
}

uint64_t sub_2333B1174@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_dropOffDate, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333B11A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setDropOffDate_);
}

char *keypath_get_selector_returnDate()
{
  return sel_returnDate;
}

uint64_t sub_2333B11E0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_returnDate, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333B120C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setReturnDate_);
}

char *keypath_get_selector_returnManagementURL()
{
  return sel_returnManagementURL;
}

uint64_t sub_2333B124C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_returnManagementURL, (void (*)(void))MEMORY[0x24BDCD9C0], MEMORY[0x24BDCDAC0], a2);
}

void sub_2333B1278(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, &qword_254248700, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCD8D0], (SEL *)&selRef_setReturnManagementURL_);
}

char *keypath_get_selector_returnIdentifier()
{
  return sel_returnIdentifier;
}

void sub_2333B12BC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setReturnIdentifier_, v3);

}

id sub_2333B130C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_positionIndex);
  *a2 = (_WORD)result;
  return result;
}

id sub_2333B133C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPositionIndex_, *a1);
}

uint64_t sub_2333B1350@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ManagedOrderReturn.status.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2333B137C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ManagedOrderReturn.lineItems.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ManagedOrderReturn()
{
  return objc_opt_self();
}

id sub_2333B13C8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;

  v2 = v1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v1;
    v7 = objc_msgSend(v5, sel_leftExpression);
    v8 = sub_2333B15F0(a1);

    v9 = objc_msgSend(v5, sel_rightExpression);
    v10 = sub_2333B15F0(a1);

    v11 = objc_msgSend(v5, sel_comparisonPredicateModifier);
    v12 = objc_msgSend(v5, sel_predicateOperatorType);
    v13 = objc_msgSend(v5, sel_options);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v8, v10, v11, v12, v13);

LABEL_5:
    return v14;
  }
  objc_opt_self();
  v15 = (void *)swift_dynamicCastObjCClass();
  v8 = v2;
  if (v15)
  {
    v16 = objc_msgSend(v15, sel_subpredicates);
    v17 = sub_23361E3F0();

    swift_bridgeObjectRetain();
    sub_2333B1754(v17, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v15, sel_compoundPredicateType);
    v19 = objc_allocWithZone(MEMORY[0x24BDD14C0]);
    sub_2331E28A0();
    v10 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v19, sel_initWithType_subpredicates_, v18, v10);
    goto LABEL_5;
  }
  return v8;
}

id sub_2333B15F0(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  id v17;

  v2 = v1;
  v17 = v2;
  if (objc_msgSend(v2, sel_expressionType) == (id)3)
  {
    v4 = objc_msgSend(v17, sel_keyPath);
    v5 = sub_23361E150();
    v7 = v6;

    swift_bridgeObjectRelease();
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      v9 = objc_msgSend(v17, sel_keyPath);
      v10 = sub_23361E150();
      v12 = v11;

      if (*(_QWORD *)(a1 + 16))
      {
        sub_2331E3D18(v10, v12);
        if ((v13 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v14 = (void *)sub_23361E12C();
          swift_bridgeObjectRelease();
          v15 = objc_msgSend((id)objc_opt_self(), sel_expressionForKeyPath_, v14);

          return v15;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  return v17;
}

uint64_t sub_2333B1754(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v20;
  void *v21;
  _BYTE v22[32];
  uint64_t v23;

  result = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1 + 32;
    swift_bridgeObjectRetain();
    v6 = 0x24BDD1000;
    while (1)
    {
      sub_233168350(v5, (uint64_t)v22);
      sub_2331E28A0();
      if ((swift_dynamicCast() & 1) != 0)
        break;
LABEL_8:
      v5 += 32;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v23;
      }
    }
    objc_opt_self();
    v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      v7 = (void *)v12;
      v20 = v21;
      v8 = objc_msgSend(v7, sel_leftExpression);
      v9 = sub_2333B15F0(a2);

      v10 = objc_msgSend(v7, sel_rightExpression);
      v11 = sub_2333B15F0(a2);

      objc_msgSend(objc_allocWithZone(*(Class *)(v6 + 1208)), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v9, v11, objc_msgSend(v7, sel_comparisonPredicateModifier), objc_msgSend(v7, sel_predicateOperatorType), objc_msgSend(v7, sel_options));
    }
    else
    {
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (!v13)
        goto LABEL_5;
      v14 = (void *)v13;
      v9 = v21;
      v15 = objc_msgSend(v14, sel_subpredicates);
      v16 = sub_23361E3F0();

      swift_bridgeObjectRetain();
      sub_2333B1754(v16, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v14, sel_compoundPredicateType);
      v18 = objc_allocWithZone(MEMORY[0x24BDD14C0]);
      v11 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_initWithType_subpredicates_, v17, v11);
    }

    v6 = 0x24BDD1000uLL;
LABEL_5:
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();
    goto LABEL_8;
  }
  return result;
}

double NSXPCConnection.value<A>(for:)@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  double result;

  sub_23361E348();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_valueForEntitlement_, v3);

  if (v4)
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_2333B1B0C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC10FinanceKit26FinanciaDataConnectionInfo_applicationIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333B1B74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC10FinanceKit26FinanciaDataConnectionInfo_applicationIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2333B1BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit26FinanciaDataConnectionInfo_applicationIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2333B1C24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FinanciaDataConnectionInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FinanciaDataConnectionInfo.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC10FinanceKit26FinanciaDataConnectionInfo_applicationIdentifier];
  v2 = (objc_class *)type metadata accessor for FinanciaDataConnectionInfo();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for FinanciaDataConnectionInfo()
{
  return objc_opt_self();
}

id FinanciaDataConnectionInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FinanciaDataConnectionInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2333B1D6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC10FinanceKit26FinanciaDataConnectionInfo_applicationIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FinanciaDataConnectionInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FinanciaDataConnectionInfo.applicationIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of FinanciaDataConnectionInfo.applicationIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of FinanciaDataConnectionInfo.applicationIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t sub_2333B1E38(unint64_t a1)
{
  void *v1;
  char **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned int v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (!v4)
      return v5;
    v13 = MEMORY[0x24BEE4AF8];
    sub_233274080(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v6 = 0;
    v5 = v13;
    v2 = &selRef_getAssessment_;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x234933120](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v1 = v7;
      v8 = objc_msgSend(v7, sel_consentStatusValue);
      if (v8 == 1)
      {
        v9 = 1;
      }
      else
      {
        if ((_WORD)v8)
          goto LABEL_21;
        v9 = 0;
      }

      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      v1 = (void *)(v11 + 1);
      if (v11 >= v10 >> 1)
        sub_233274080(v10 > 1, v11 + 1, 1);
      ++v6;
      *(_QWORD *)(v13 + 16) = v1;
      *(_BYTE *)(v13 + v11 + 32) = v9;
      if (v4 == v6)
        return v5;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_21:
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, v2[265]);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t sub_2333B205C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23361E534();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23361E528();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_233168608(a1, (uint64_t *)&unk_254247060);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23361E474();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2333B21F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x23493465C](v1);
}

uint64_t sub_2333B2288()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2333B22E0(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23493465C](v5);
  return sub_2333B2350;
}

void sub_2333B2350(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id BankConnectAccountsProvider.__allocating_init(primaryAccountIdentifier:store:consentStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v9 = *(_QWORD *)(a4 + 24);
  v10 = *(_QWORD *)(a4 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a4, v9);
  v12 = sub_2333B644C(a1, a2, a3, v11, v4, v9, v10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v12;
}

id BankConnectAccountsProvider.init(primaryAccountIdentifier:store:consentStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v9 = *(_QWORD *)(a4 + 24);
  v10 = *(_QWORD *)(a4 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a4, v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  v15 = sub_2333B62F0(a1, a2, a3, (uint64_t)v13, v4, v9, v10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v15;
}

id sub_2333B254C(uint64_t a1, uint64_t a2)
{
  return sub_2333B6750(a1, a2);
}

uint64_t sub_2333B25EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  v1[12] = type metadata accessor for BankConnectConsent();
  v1[13] = swift_task_alloc();
  v1[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v1[15] = swift_task_alloc();
  v2 = type metadata accessor for InternalAccount();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333B2698()
{
  uint64_t v0;
  const void *v1;
  void **v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  char *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[5];

  v1 = (const void *)(v0 + 16);
  v2 = (void **)(v0 + 88);
  if (qword_256041CA0 != -1)
    swift_once();
  v3 = *v2;
  v4 = sub_23361DB80();
  __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
  v5 = v3;
  v6 = sub_23361DB68();
  v7 = sub_23361E750();
  v8 = os_log_type_enabled(v6, v7);
  v9 = (char *)*v2;
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v53[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
    v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8];
    swift_bridgeObjectRetain();
    v14 = v12;
    v1 = (const void *)(v0 + 16);
    *(_QWORD *)(v0 + 80) = sub_233164DCC(v14, v13, v53);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v6, v7, "Fetching account and reconsent status for primaryAccountIdentifier: %s.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {

  }
  v15 = *(char **)(v0 + 88);
  v16 = *(void **)&v15[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context];
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_2333B6878;
  *(_QWORD *)(v18 + 24) = v17;
  *(_QWORD *)(v0 + 48) = sub_233167E10;
  *(_QWORD *)(v0 + 56) = v18;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_2332714C0;
  *(_QWORD *)(v0 + 40) = &block_descriptor_11;
  v19 = _Block_copy(v1);
  v20 = v15;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_performBlockAndWait_, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(swift_task_alloc() + 16) = v22;
    sub_23361E960();
    v23 = *(_QWORD *)(v0 + 128);
    v24 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
    {
      v26 = *(void **)(v0 + 88);
      sub_233168608(*(_QWORD *)(v0 + 120), &qword_2560486B0);
      v27 = v26;
      v28 = sub_23361DB68();
      v29 = sub_23361E768();
      v30 = os_log_type_enabled(v28, v29);
      v31 = *(char **)(v0 + 88);
      if (v30)
      {
        v32 = (uint8_t *)swift_slowAlloc();
        v33 = swift_slowAlloc();
        v53[0] = v33;
        *(_DWORD *)v32 = 136315138;
        v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
        v34 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 64) = sub_233164DCC(v35, v34, v53);
        sub_23361EBC4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v28, v29, "Unable to find an account for primaryAccountIdentifier: %s.", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v33, -1, -1);
        MEMORY[0x234934590](v32, -1, -1);
        swift_release();

      }
      else
      {
        swift_release();

      }
      v50 = 0;
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 144);
      v37 = *(_QWORD *)(v0 + 128);
      v38 = *(_QWORD *)(v0 + 88);
      sub_233398524(*(_QWORD *)(v0 + 120), v36);
      v39 = (uint64_t *)(v36 + *(int *)(v37 + 20));
      v40 = v39[2];
      v41 = v39[3];
      v42 = v39[1];
      v51 = *v39;
      v43 = (_QWORD *)(v38 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore);
      v45 = *(_QWORD *)(v38 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore + 24);
      v44 = *(_QWORD *)(v38 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore + 32);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_1(v43, v45);
      v53[0] = v51;
      v53[1] = v42;
      v52 = v40;
      v53[2] = v40;
      v53[3] = v41;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 16))(v53, v45, v44);
      v46 = *(_QWORD *)(v0 + 144);
      v47 = *(_QWORD *)(v0 + 104);
      v48 = *(_QWORD *)(v0 + 88);
      LOBYTE(v45) = *(_BYTE *)(v47 + *(int *)(*(_QWORD *)(v0 + 96) + 44));
      sub_233168500(v47, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = swift_task_alloc();
      *(_QWORD *)(v49 + 16) = v52;
      *(_QWORD *)(v49 + 24) = v41;
      *(_QWORD *)(v49 + 32) = v48;
      *(_QWORD *)(v49 + 40) = v46;
      *(_BYTE *)(v49 + 48) = v45;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C5D0);
      sub_23361E960();
      sub_233168500(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v50 = *(_QWORD *)(v0 + 72);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v50);
  }
  return result;
}

void sub_2333B2D08(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = NSManagedObjectContext.currentLocalHistoryToken.getter();
  v3 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken) = v2;

  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_remoteChangeNotificationTask))
    sub_2333B3274();
}

void sub_2333B2D60(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;

  v13 = type metadata accessor for InternalAccount();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInstitution();
  v16 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(a1, a2, *(_QWORD *)(a3 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context));
  if (!v6)
  {
    v17 = (void *)v16;
    if (v16)
    {
      sub_233168668(0, &qword_254245090);
      sub_2331684BC(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v18 = FKAccount.init(from:)(v15);
      sub_233168668(0, (unint64_t *)&qword_25604C778);
      v19 = v17;
      v20 = FKInstitution.init(_:)(v19);
      v21 = objc_msgSend(objc_allocWithZone((Class)FKBankConnectAccountsProviderResponse), sel_initWithAccount_consentStatus_institution_, v18, a5 & 1, v20);

      *a6 = v21;
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v22 = sub_23361DB80();
      __swift_project_value_buffer(v22, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v23 = sub_23361DB68();
      v24 = sub_23361E768();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v28 = v26;
        *(_DWORD *)v25 = 136315138;
        v27[0] = v25 + 4;
        swift_bridgeObjectRetain();
        v27[1] = sub_233164DCC(a1, a2, &v28);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v23, v24, "Unable to find an institution with institutionID: %s.", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v26, -1, -1);
        MEMORY[0x234934590](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *a6 = 0;
    }
  }
}

uint64_t sub_2333B3158(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_2333B31B8;
  return sub_2333B25EC();
}

uint64_t sub_2333B31B8(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_23361D1A8();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](v7, a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_2333B3274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = sub_23361DB68();
  v7 = sub_23361E780();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_233151000, v6, v7, "Starting to observe persistent store remote change notifications", v8, 2u);
    MEMORY[0x234934590](v8, -1, -1);
  }

  v9 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_remoteChangeNotificationTask) = sub_2333B205C((uint64_t)v4, (uint64_t)&unk_25604C718, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_2333B3418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[35] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v4[36] = swift_task_alloc();
  v5 = sub_23361CBA8();
  v4[37] = v5;
  v4[38] = *(_QWORD *)(v5 - 8);
  v4[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247050);
  v4[40] = swift_task_alloc();
  v6 = sub_23361E900();
  v4[41] = v6;
  v4[42] = *(_QWORD *)(v6 - 8);
  v4[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333B34E8()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v0[44] = sub_23361E90C();

  swift_retain();
  sub_23361E8E8();
  swift_beginAccess();
  v0[45] = sub_233167C58((unint64_t *)&qword_254247070, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_2333B35F0;
  return sub_23361E4D4();
}

uint64_t sub_2333B35F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[49] = v0;
  }
  else
  {
    v3 = *MEMORY[0x24BDBB4B0];
    v2[47] = *MEMORY[0x24BDBB588];
    v2[48] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_2333B3670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  char v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 280) + 16;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 312), v1, v2);
  v5 = MEMORY[0x23493465C](v4);
  if (!v5)
  {
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 328);
    v15 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 296);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    goto LABEL_9;
  }
  v6 = (char *)v5;
  v7 = (_OWORD *)(v0 + 128);
  v8 = sub_23361CB9C();
  if (!v8)
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
LABEL_18:

LABEL_19:
    sub_233168608((uint64_t)v7, &qword_254245020);
LABEL_21:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    goto LABEL_22;
  }
  v9 = v8;
  *(_QWORD *)(v0 + 216) = sub_23361E150();
  *(_QWORD *)(v0 + 224) = v10;
  sub_23361ED50();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_2331E3EC4(v0 + 56), (v12 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v9 + 56) + 32 * v11, v0 + 128);
  }
  else
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C(v0 + 56);
  if (!*(_QWORD *)(v0 + 152))
    goto LABEL_18;
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_21;
  }
  v7 = (_OWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 248);
  v20 = *(_QWORD *)(v0 + 256);
  v22 = sub_23361CB9C();
  if (!v22)
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
LABEL_43:

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v23 = v22;
  *(_QWORD *)(v0 + 232) = sub_23361E150();
  *(_QWORD *)(v0 + 240) = v24;
  sub_23361ED50();
  if (*(_QWORD *)(v23 + 16) && (v25 = sub_2331E3EC4(v0 + 16), (v26 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v23 + 56) + 32 * v25, v0 + 160);
  }
  else
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C(v0 + 16);
  if (!*(_QWORD *)(v0 + 184))
    goto LABEL_43;
  sub_233168668(0, (unint64_t *)&unk_256048680);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v75 = v21;
  v77 = *(void **)(v0 + 272);
  v76 = objc_msgSend(*(id *)(*(_QWORD *)&v6[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_store] + 16), sel_persistentStoreCoordinator);
  v28 = objc_msgSend(v76, sel_persistentStores);
  sub_233168668(0, (unint64_t *)&qword_2542482A0);
  v29 = sub_23361E3F0();

  if (v29 >> 62)
    goto LABEL_71;
  v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v30)
  {
LABEL_40:
    v41 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 296);
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);

    swift_bridgeObjectRelease();
LABEL_41:

    goto LABEL_22;
  }
LABEL_28:
  v31 = 0;
  v74 = (_QWORD *)(v0 + 96);
  while (1)
  {
    if ((v29 & 0xC000000000000001) != 0)
    {
      v32 = (id)MEMORY[0x234933120](v31, v29);
      v33 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_70;
    }
    else
    {
      v32 = *(id *)(v29 + 8 * v31 + 32);
      v33 = v31 + 1;
      if (__OFADD__(v31, 1))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        swift_bridgeObjectRetain();
        v30 = sub_23361EF30();
        if (!v30)
          goto LABEL_40;
        goto LABEL_28;
      }
    }
    v78 = v32;
    v34 = objc_msgSend(v32, sel_configurationName, v74);
    v35 = sub_23361E150();
    v37 = v36;

    if (v35 == 0x6C61636F4CLL && v37 == 0xE500000000000000)
      break;
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      goto LABEL_46;

    ++v31;
    if (v33 == v30)
      goto LABEL_40;
  }
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease_n();
  v43 = objc_msgSend(v78, sel_identifier);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    v48 = v77;
    goto LABEL_59;
  }
  v44 = v43;
  v45 = sub_23361E150();
  v47 = v46;

  v48 = v77;
  if (v75 == v45 && v20 == v47)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_52;
  }
  v49 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0)
  {
LABEL_59:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));

    goto LABEL_22;
  }
LABEL_52:
  if (qword_256041CA0 != -1)
    swift_once();
  v50 = sub_23361DB80();
  __swift_project_value_buffer(v50, (uint64_t)qword_2560495B0);
  v51 = sub_23361DB68();
  v52 = sub_23361E780();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_233151000, v51, v52, "Received remote change notification for local persistent store", v53, 2u);
    MEMORY[0x234934590](v53, -1, -1);
  }

  v54 = OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastNotificationToken;
  v55 = *(void **)&v6[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastNotificationToken];
  if (v55)
  {
    v56 = v77;
    v57 = v55;
    v58 = sub_23361EA14();

    if ((v58 & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));

      goto LABEL_41;
    }
    v59 = *(void **)&v6[v54];
  }
  else
  {
    v59 = 0;
  }
  v60 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)&v6[v54] = v77;
  v61 = v77;

  v62 = sub_23361E534();
  v63 = *(_QWORD *)(v62 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v60, 1, 1, v62);
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = 0;
  v64[3] = 0;
  v64[4] = v6;
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v60, 1, v62);
  v66 = v6;
  v67 = *(_QWORD *)(v0 + 288);
  if (v65 == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_254247060);
    v68 = 0;
    v69 = 0;
  }
  else
  {
    sub_23361E528();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v67, v62);
    if (v64[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v68 = sub_23361E474();
      v69 = v70;
      swift_unknownObjectRelease();
    }
    else
    {
      v68 = 0;
      v69 = 0;
    }
  }
  if (v69 | v68)
  {
    *v74 = 0;
    v74[1] = 0;
    *(_QWORD *)(v0 + 112) = v68;
    *(_QWORD *)(v0 + 120) = v69;
  }
  v72 = *(_QWORD *)(v0 + 304);
  v71 = *(_QWORD *)(v0 + 312);
  v73 = *(_QWORD *)(v0 + 296);
  swift_task_create();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
LABEL_22:
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v27;
  *v27 = v0;
  v27[1] = sub_2333B3F64;
  return sub_23361E4D4();
}

uint64_t sub_2333B3F00()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 392);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_2333B3F64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 392) = v0;
  return swift_task_switch();
}

uint64_t sub_2333B3FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2333B3FE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_23361E960();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2333B4068(char *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)&a1[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context];
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v25[0] = 0;
  v5 = objc_msgSend(v3, sel_setQueryGenerationFromToken_error_, v4, v25);

  v6 = v25[0];
  if (!v5)
  {
    v13 = v25[0];
    sub_23361D1B4();

    swift_willThrow();
    return;
  }
  v7 = OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken;
  v8 = *(void **)&a1[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken];
  v9 = v8;
  v10 = v6;
  NSManagedObjectContext.fetchPersistentHistory(after:)((uint64_t)v8);
  if (!v1)
  {
    v14 = v11;

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_8:
        v16 = a1;
        v17 = sub_2333B5EBC(v14);

        v18 = v16;
        v19 = sub_2333B5FA4(v14);

        if ((v17 & 1) != 0)
          sub_2333B43BC();
        if ((v19 & 1) != 0)
          sub_2333B49DC();
        v20 = v15 - 1;
        if (__OFSUB__(v15, 1))
        {
          __break(1u);
        }
        else if ((v14 & 0xC000000000000001) == 0)
        {
          if ((v20 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v20 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v21 = *(id *)(v14 + 8 * v20 + 32);
LABEL_17:
            v22 = v21;
            swift_bridgeObjectRelease();
            v23 = objc_msgSend(v22, sel_token);

            v24 = *(void **)&a1[v7];
            *(_QWORD *)&a1[v7] = v23;

            v12 = (uint64_t)v18;
            goto LABEL_18;
          }
          __break(1u);
        }
        v21 = (id)MEMORY[0x234933120](v20, v14);
        goto LABEL_17;
      }
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v15)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }

LABEL_4:
  v12 = (uint64_t)a1;
LABEL_18:
  sub_2333B42E0(v12);
}

void sub_2333B42E0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context);
  v5[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v5))
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    v4 = (void *)sub_23361D1B4();

    swift_willThrow();
  }
}

uint64_t sub_2333B43BC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  void *v34;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[8];

  v2 = v1;
  v3 = sub_23361DDD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361DDFC();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v39 = *(_QWORD *)(v44 - 8);
  v9 = *(_QWORD *)(v39 + 64);
  v10 = MEMORY[0x24BDAC7A8](v44);
  v40 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)v35 - v11;
  if (qword_256041CA0 != -1)
    swift_once();
  v12 = sub_23361DB80();
  __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
  v13 = v0;
  v14 = sub_23361DB68();
  v15 = sub_23361E750();
  if (os_log_type_enabled(v14, v15))
  {
    v37 = v4;
    v16 = swift_slowAlloc();
    v36 = v6;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v38 = v3;
    v19 = v18;
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v35[1] = v9;
    v20 = v1;
    v21 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
    v22 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8];
    swift_bridgeObjectRetain();
    aBlock[7] = sub_233164DCC(v21, v22, aBlock);
    v4 = v37;
    sub_23361EBC4();
    v2 = v20;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v14, v15, "Fetching account changes for primaryAccountIdentifier: %s.", v17, 0xCu);
    swift_arrayDestroy();
    v23 = v19;
    v3 = v38;
    MEMORY[0x234934590](v23, -1, -1);
    v24 = v17;
    v6 = v36;
    MEMORY[0x234934590](v24, -1, -1);
  }
  else
  {

  }
  MEMORY[0x24BDAC7A8](v25);
  v35[-2] = v13;
  v26 = v45;
  result = sub_23361E960();
  if (!v2)
  {
    sub_233168668(0, qword_254245350);
    v44 = sub_23361E870();
    v28 = v40;
    sub_23318C184(v26, v40);
    v29 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v13;
    sub_2333B71B0(v28, v30 + v29);
    aBlock[4] = (uint64_t)sub_2333B71F8;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2331C9ED4;
    aBlock[3] = (uint64_t)&block_descriptor_22;
    v31 = _Block_copy(aBlock);
    v32 = v13;
    swift_release();
    v33 = v41;
    sub_23361DDF0();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_233167C58(&qword_25604C6F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C700);
    sub_2333B6D54();
    sub_23361EC6C();
    v34 = (void *)v44;
    MEMORY[0x234932BEC](0, v33, v6, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
    return sub_233168608(v45, &qword_2560486B0);
  }
  return result;
}

uint64_t sub_2333B4838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  void *v16;
  id v17;
  uint64_t v18;

  v4 = type metadata accessor for InternalAccount();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v14);
  if (result)
  {
    v16 = (void *)result;
    sub_23318C184(a2, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
    {
      v17 = 0;
    }
    else
    {
      sub_233398524((uint64_t)v13, (uint64_t)v10);
      sub_233168668(0, &qword_254245090);
      sub_2331684BC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v17 = FKAccount.init(from:)(v8);
      sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    }
    objc_msgSend(v16, sel_bankConnectAccountDidChange_, v17);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_2333B49DC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t aBlock[6];
  uint64_t v41;

  v2 = v1;
  v3 = sub_23361DDD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361DDFC();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  v9 = v0;
  v10 = sub_23361DB68();
  v11 = sub_23361E750();
  if (os_log_type_enabled(v10, v11))
  {
    v35 = v3;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    aBlock[0] = v13;
    v33 = v9;
    v34 = v4;
    *(_DWORD *)v12 = 136315138;
    v14 = v1;
    v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
    v16 = *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8];
    swift_bridgeObjectRetain();
    v41 = sub_233164DCC(v15, v16, aBlock);
    v4 = v34;
    v3 = v35;
    sub_23361EBC4();
    v2 = v14;
    v9 = v33;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v10, v11, "Fetching consent changes for primaryAccountIdentifier: %s.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v12, -1, -1);
  }
  else
  {

  }
  MEMORY[0x24BDAC7A8](v17);
  *(&v32 - 2) = (uint64_t)v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C6E8);
  sub_23361E960();
  if (!v2)
  {
    if (LOBYTE(aBlock[0]) == 2)
    {
      v18 = v9;
      v19 = sub_23361DB68();
      v20 = sub_23361E768();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        aBlock[0] = v22;
        *(_DWORD *)v21 = 136315138;
        v23 = *(_QWORD *)&v18[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
        v24 = *(_QWORD *)&v18[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8];
        swift_bridgeObjectRetain();
        v41 = sub_233164DCC(v23, v24, aBlock);
        sub_23361EBC4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_233151000, v19, v20, "Unable to find consent for primaryAccountIdentifier: %s.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v22, -1, -1);
        MEMORY[0x234934590](v21, -1, -1);
      }
      else
      {

      }
    }
    else
    {
      v25 = aBlock[0] & 1;
      sub_233168668(0, qword_254245350);
      v26 = (void *)sub_23361E870();
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v9;
      *(_BYTE *)(v27 + 24) = v25;
      aBlock[4] = (uint64_t)sub_2333B6D48;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_2331C9ED4;
      aBlock[3] = (uint64_t)&block_descriptor_15;
      v28 = _Block_copy(aBlock);
      v29 = v9;
      swift_release();
      v30 = v36;
      sub_23361DDF0();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_233167C58(&qword_25604C6F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C700);
      sub_2333B6D54();
      v31 = v39;
      sub_23361EC6C();
      MEMORY[0x234932BEC](0, v30, v31, v28);
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v31, v3);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
    }
  }
}

void *sub_2333B4EFC(uint64_t a1, char a2)
{
  uint64_t v3;
  void *result;

  v3 = a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_delegate;
  swift_beginAccess();
  result = (void *)MEMORY[0x23493465C](v3);
  if (result)
  {
    objc_msgSend(result, sel_bankConnectConsentStatusDidChange_, a2 & 1);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2333B4F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  v10[5] = a2;
  v10[6] = a3;
  v11 = v3;
  swift_retain();
  sub_2333B205C((uint64_t)v8, (uint64_t)&unk_25604C5E8, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_2333B5040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for AccountsProviderResponse();
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for BankConnectConsent();
  v6[10] = swift_task_alloc();
  v6[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C768);
  v6[12] = swift_task_alloc();
  v6[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v6[14] = swift_task_alloc();
  v8 = type metadata accessor for InternalAccount();
  v6[15] = v8;
  v6[16] = *(_QWORD *)(v8 - 8);
  v6[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333B5140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  _QWORD v28[5];

  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_23361E960();
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(void (**)(uint64_t))(v0 + 32);
    sub_233168608(*(_QWORD *)(v0 + 112), &qword_2560486B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    swift_storeEnumTagMultiPayload();
    v8(v5);
    sub_233168608(v5, &qword_25604C768);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 24);
    sub_233398524(*(_QWORD *)(v0 + 112), v10);
    v13 = (uint64_t *)(v10 + *(int *)(v11 + 20));
    v15 = *v13;
    v14 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    v18 = (_QWORD *)(v12 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore);
    v19 = *(_QWORD *)(v12 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore + 24);
    v20 = v18[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v28[0] = v15;
    v28[1] = v14;
    v28[2] = v16;
    v28[3] = v17;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 16))(v28, v19, v20);
    v21 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 64);
    v26 = *(_QWORD *)(v0 + 48);
    v27 = *(void (**)(uint64_t))(v0 + 32);
    LOBYTE(v20) = *(_BYTE *)(v23 + *(int *)(*(_QWORD *)(v0 + 72) + 44));
    sub_233168500(v23, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2331684BC(v21, v24, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    *(_BYTE *)(v24 + *(int *)(v26 + 20)) = v20;
    sub_2331684BC(v24, v22, (uint64_t (*)(_QWORD))type metadata accessor for AccountsProviderResponse);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v26);
    swift_storeEnumTagMultiPayload();
    v27(v22);
    sub_233168608(v22, &qword_25604C768);
    sub_233168500(v24, (uint64_t (*)(_QWORD))type metadata accessor for AccountsProviderResponse);
    sub_233168500(v21, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333B55B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ManagedInternalAccount();
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context);
  swift_bridgeObjectRetain();
  v8 = (void *)static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(v5, v6, v7);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      InternalAccount.init(_:)(v8, a2);
      v10 = type metadata accessor for InternalAccount();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
    }
    else
    {
      v11 = type metadata accessor for InternalAccount();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
    }
  }
  return result;
}

void sub_2333B5698(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  objc_super v12;

  type metadata accessor for ManagedConsent();
  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v5 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier + 8);
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_2331683F0();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v7;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v5, sel_setPredicate_, v9);

  v10 = sub_23361E984();
  if (v2)
    goto LABEL_4;
  v11 = sub_2333B1E38(v10);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + 16))
  {
    *a2 = *(_BYTE *)(v11 + 32);
    swift_bridgeObjectRelease();
LABEL_4:

    return;
  }
  swift_bridgeObjectRelease();

  *a2 = 2;
}

id BankConnectAccountsProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectAccountsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectAccountsProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectAccountsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t AccountsProviderResponse.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
}

uint64_t AccountsProviderResponse.account.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2333447A0(a1, v1);
}

uint64_t (*AccountsProviderResponse.account.modify())()
{
  return nullsub_1;
}

uint64_t AccountsProviderResponse.bankConnectConsentStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountsProviderResponse();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t AccountsProviderResponse.bankConnectConsentStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AccountsProviderResponse();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*AccountsProviderResponse.bankConnectConsentStatus.modify())(_QWORD)
{
  type metadata accessor for AccountsProviderResponse();
  return nullsub_1;
}

uint64_t sub_2333B5A5C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2333B5AC0;
  return v6(a1);
}

uint64_t sub_2333B5AC0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2333B5B0C(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char **v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v1 = (uint64_t)objc_msgSend(a1, sel_changes);
  if (v1)
  {
    sub_233168668(0, &qword_25604C730);
    v2 = sub_23361E3F0();

    if (v2 >> 62)
      goto LABEL_30;
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v3; v3 = sub_23361EF30())
    {
      v4 = 4;
      v5 = &selRef_getAssessment_;
      v36 = v3;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
        v8 = v7;
        v9 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v10 = objc_msgSend(v7, v5[285]);
        v11 = objc_msgSend(v10, sel_entity);

        v12 = objc_msgSend(v11, sel_name);
        if (v12)
        {
          v13 = sub_23361E150();
          v15 = v14;

          type metadata accessor for ManagedInternalAccount();
          v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
          v17 = sub_23361E150();
          v19 = v18;

          if (v13 == v17 && v15 == v19)
            goto LABEL_25;
          v20 = sub_23361F224();
          swift_bridgeObjectRelease();
          if ((v20 & 1) != 0)
            goto LABEL_26;
          type metadata accessor for ManagedAccount();
          v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
          v22 = sub_23361E150();
          v24 = v23;

          if (v13 == v22 && v15 == v24)
            goto LABEL_25;
          v25 = sub_23361F224();
          swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
            goto LABEL_26;
          type metadata accessor for ManagedAccountBalance();
          v26 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
          v27 = sub_23361E150();
          v29 = v28;

          if (v13 == v27 && v15 == v29)
          {
LABEL_25:

            swift_bridgeObjectRelease();
LABEL_27:
            swift_bridgeObjectRelease();
            v1 = 1;
            goto LABEL_32;
          }
          v30 = sub_23361F224();
          swift_bridgeObjectRelease();
          if ((v30 & 1) != 0)
          {
LABEL_26:

            goto LABEL_27;
          }
          type metadata accessor for ManagedInternalAccountBalance();
          v31 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
          v32 = sub_23361E150();
          v34 = v33;

          if (v13 == v32 && v15 == v34)
          {
            swift_bridgeObjectRelease_n();

            v1 = 1;
            goto LABEL_32;
          }
          v6 = sub_23361F224();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v3 = v36;
          v5 = &selRef_getAssessment_;
          if ((v6 & 1) != 0)
          {
            v1 = 1;
            goto LABEL_32;
          }
        }
        else
        {

        }
        ++v4;
        if (v9 == v3)
          goto LABEL_31;
      }
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
    }
LABEL_31:
    v1 = 0;
LABEL_32:
    swift_bridgeObjectRelease_n();
  }
  return v1;
}

uint64_t sub_2333B5EBC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  char v7;

  if (a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = sub_2333B5B0C(v4);

      if ((v7 & 1) == 0)
      {
        ++v3;
        if (v6 != v2)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v7 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2333B5FA4(unint64_t a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  BOOL v8;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  id v30;
  unint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;

  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
    goto LABEL_32;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v28 = (char *)(v3 + 32);
      v29 = v3;
      v30 = v2;
      v31 = v3 & 0xC000000000000001;
      v26 = v4;
      while (1)
      {
        if (v6)
        {
          v7 = (id)MEMORY[0x234933120](v5, v3);
          v8 = __OFADD__(v5++, 1);
          if (v8)
            goto LABEL_31;
        }
        else
        {
          v7 = *(id *)&v28[8 * v5];
          v8 = __OFADD__(v5++, 1);
          if (v8)
            goto LABEL_31;
        }
        v9 = v7;
        v10 = objc_msgSend(v7, sel_changes, v26);
        if (v10)
          break;

LABEL_5:
        if (v5 == v4)
          goto LABEL_33;
      }
      v11 = v10;
      v32 = v9;
      sub_233168668(0, &qword_25604C730);
      v12 = sub_23361E3F0();

      if (!(v12 >> 62))
        break;
      swift_bridgeObjectRetain();
      v13 = sub_23361EF30();
      if (!v13)
        goto LABEL_28;
LABEL_14:
      v27 = v5;
      v34 = v12 & 0xC000000000000001;
      v14 = 4;
      v33 = v12;
      while (1)
      {
        v16 = v34 ? (id)MEMORY[0x234933120](v14 - 4, v12) : *(id *)(v12 + 8 * v14);
        v17 = v16;
        v18 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
          break;
        v19 = objc_msgSend(v16, sel_changedObjectID);
        v3 = (unint64_t)objc_msgSend(v19, sel_entity);

        v2 = objc_msgSend((id)v3, sel_name);
        if (v2)
        {
          v20 = sub_23361E150();
          v22 = v21;

          type metadata accessor for ManagedConsent();
          v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
          v2 = (id)sub_23361E150();
          v3 = v24;

          if ((id)v20 == v2 && v22 == (void *)v3)
          {
            swift_bridgeObjectRelease_n();

LABEL_29:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();

            return 1;
          }
          v15 = sub_23361F224();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v33;
          if ((v15 & 1) != 0)
            goto LABEL_29;
        }
        else
        {

        }
        ++v14;
        if (v18 == v13)
        {

          swift_bridgeObjectRelease_n();
          v3 = v29;
          v2 = v30;
          v4 = v26;
          v5 = v27;
          v6 = v31;
          goto LABEL_5;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v4 = sub_23361EF30();
      if (!v4)
        goto LABEL_33;
    }
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_14;
LABEL_28:

    swift_bridgeObjectRelease_n();
    v6 = v31;
    goto LABEL_5;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_2333B62F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  char *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v21;
  uint64_t v22[5];

  v22[3] = a6;
  v22[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a4, a6);
  v14 = &a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_persistentHistoryTransactionProvider];
  *((_QWORD *)v14 + 3) = &type metadata for PersistentHistoryTransactionProvider;
  *((_QWORD *)v14 + 4) = &off_250481958;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastNotificationToken] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_remoteChangeNotificationTask] = 0;
  swift_unknownObjectWeakInit();
  v15 = &a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_store] = a3;
  v16 = *(void **)(a3 + 16);
  v17 = a5;
  swift_retain();
  v18 = objc_msgSend(v16, sel_newBackgroundContext);
  *(_QWORD *)&v17[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context] = v18;
  objc_msgSend(v18, sel_setAutomaticallyMergesChangesFromParent_, 0);
  sub_233177068((uint64_t)v22, (uint64_t)&v17[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore]);

  v21.receiver = v17;
  v21.super_class = (Class)type metadata accessor for BankConnectAccountsProvider();
  v19 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  return v19;
}

id sub_2333B644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;

  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)objc_allocWithZone((Class)type metadata accessor for BankConnectAccountsProvider());
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, a6);
  return sub_2333B62F0(a1, a2, a3, (uint64_t)v15, v16, a6, a7);
}

id sub_2333B650C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  objc_super v18;
  _QWORD v19[5];

  v10 = type metadata accessor for BankConnectConsentStore();
  v11 = &a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_persistentHistoryTransactionProvider];
  *((_QWORD *)v11 + 3) = &type metadata for PersistentHistoryTransactionProvider;
  *((_QWORD *)v11 + 4) = &off_250481958;
  v19[3] = v10;
  v19[4] = &protocol witness table for BankConnectConsentStore;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastToken] = 0;
  v19[0] = a4;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_lastNotificationToken] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_remoteChangeNotificationTask] = 0;
  swift_unknownObjectWeakInit();
  v12 = &a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_primaryAccountIdentifier];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  *(_QWORD *)&a5[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_store] = a3;
  v13 = *(void **)(a3 + 16);
  v14 = a5;
  swift_retain();
  v15 = objc_msgSend(v13, sel_newBackgroundContext);
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_context] = v15;
  objc_msgSend(v15, sel_setAutomaticallyMergesChangesFromParent_, 0);
  sub_233177068((uint64_t)v19, (uint64_t)&v14[OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_consentStore]);

  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for BankConnectAccountsProvider();
  v16 = objc_msgSendSuper2(&v18, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  return v16;
}

id sub_2333B665C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  id v9;

  if (qword_254247048 != -1)
    swift_once();
  v4 = *((_QWORD *)off_254247040 + 2);
  v5 = type metadata accessor for BankConnectCloudKitActivityVoucherManaging();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  type metadata accessor for BankConnectConsentStore();
  v7 = (_QWORD *)swift_allocObject();
  v7[6] = v5;
  v7[7] = &protocol witness table for BankConnectCloudKitActivityVoucherManaging;
  v7[2] = v4;
  v7[3] = v6;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for BankConnectAccountsProvider());
  swift_retain_n();
  swift_bridgeObjectRetain();
  v9 = sub_2333B650C(a1, a2, v4, (uint64_t)v7, v8);
  swift_release();
  return v9;
}

id sub_2333B6750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  id v9;

  if (qword_254247048 != -1)
    swift_once();
  v4 = *((_QWORD *)off_254247040 + 2);
  v5 = type metadata accessor for BankConnectCloudKitActivityVoucherManaging();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  type metadata accessor for BankConnectConsentStore();
  v7 = (_QWORD *)swift_allocObject();
  v7[6] = v5;
  v7[7] = &protocol witness table for BankConnectCloudKitActivityVoucherManaging;
  v7[2] = v4;
  v7[3] = v6;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for BankConnectAccountsProvider());
  swift_retain_n();
  swift_bridgeObjectRetain();
  v9 = sub_2333B650C(a1, a2, v4, (uint64_t)v7, v8);
  swift_release();
  return v9;
}

uint64_t sub_2333B6854()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2333B6878()
{
  uint64_t v0;

  sub_2333B2D08(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2333B6880()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_2333B6898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2333B55B0(*(_QWORD *)(v1 + 16), a1);
}

void sub_2333B68B0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_2333B2D60(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), a1);
}

uint64_t sub_2333B68D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2333B6904(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2331676FC;
  return sub_2333B5040(a1, v4, v5, v6, v7, v8);
}

uint64_t type metadata accessor for BankConnectAccountsProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AccountsProviderResponse()
{
  uint64_t result;

  result = qword_25604C6B0;
  if (!qword_25604C6B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333B69E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit27BankConnectAccountsProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_2333B6A34()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for BankConnectAccountsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.__allocating_init(primaryAccountIdentifier:store:consentStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of static BankConnectAccountsProvider.makeProvider(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of static BankConnectAccountsProvider.makeProvider(primaryAccountIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.accountAndReconsentStatus()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x148);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331D7608;
  return v5();
}

uint64_t dispatch thunk of BankConnectAccountsProvider.accountAndReconsentStatus(for:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t getEnumTagSinglePayload for AccountsProviderResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333B6BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for InternalAccount();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccountsProviderResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333B6C24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for InternalAccount();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_2333B6C9C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for InternalAccount();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2333B6D0C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_2333B5698(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2333B6D24()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *sub_2333B6D48()
{
  uint64_t v0;

  return sub_2333B4EFC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_2333B6D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604C708;
  if (!qword_25604C708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C700);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, &qword_25604C708);
  }
  return result;
}

uint64_t sub_2333B6DA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int EnumCaseMultiPayload;
  uint64_t v13;
  void (*v14)(unint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  v3 = v0 + v2;
  v4 = (int *)type metadata accessor for InternalAccount();
  if ((*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v0 + v2, 1, v4))
    return swift_deallocObject();
  v5 = sub_23361D6A0();
  v6 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v0 + v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v3 + v4[6], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v3 + v4[16];
  v8 = sub_23361D634();
  v30 = *(_QWORD *)(v8 - 8);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v28(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v3 + v4[19];
  v10 = type metadata accessor for InternalAccountBalance(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v6(v9, v5);
    v11 = v9 + *(int *)(v10 + 20);
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload < 2)
    {
      swift_bridgeObjectRelease();
      v16 = v11 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
      v14 = *(void (**)(unint64_t, uint64_t))(v30 + 8);
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        v14 = *(void (**)(unint64_t, uint64_t))(v30 + 8);
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v14 = *(void (**)(unint64_t, uint64_t))(v30 + 8);
      v14(v11 + *(int *)(v13 + 20), v8);
      v15 = v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      swift_bridgeObjectRelease();
      v16 = v15 + *(int *)(v13 + 20);
    }
    v14(v16, v8);
LABEL_11:
    v14(v9 + *(int *)(v10 + 24), v8);
  }
  v29 = v8;
  v17 = v3 + v4[20];
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (!v20(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  v21 = (int *)type metadata accessor for Actions();
  v22 = v17 + v21[5];
  if (!v20(v22, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
  v23 = v17 + v21[6];
  if (!v20(v23, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
  v24 = v17 + v21[7];
  if (!v20(v24, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v24, v18);
  v25 = v17 + v21[8];
  if (!v20(v25, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v18);
  swift_bridgeObjectRelease();
  v26 = v3 + v4[28];
  if (!v28(v26, 1, v29))
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v29);
  return swift_deallocObject();
}

uint64_t sub_2333B71B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333B71F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0) - 8) + 80);
  return sub_2333B4838(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_2333B722C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2333B7250()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2333B727C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23318C26C;
  return sub_2333B3418(a1, v4, v5, v6);
}

uint64_t sub_2333B72E8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2333B7314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  v3[2] = v2;
  return swift_task_switch();
}

void sub_2333B7374()
{
  uint64_t v0;

  sub_2333B4068(*(char **)(v0 + 16));
}

uint64_t sub_2333B738C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_2333B73B8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23318C26C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25604C738 + dword_25604C738))(v2, v3);
}

uint64_t sub_2333B7424(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23318C26C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2560589B0 + dword_2560589B0))(a1, v4, v5, v6);
}

uint64_t sub_2333B74A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2333B74CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25604C758 + dword_25604C758))(a1, v4);
}

ValueMetadata *type metadata accessor for PersistentHistoryTransactionProvider()
{
  return &type metadata for PersistentHistoryTransactionProvider;
}

uint64_t sub_2333B754C@<X0>(uint64_t a1@<X8>)
{
  return sub_2333B6898(a1);
}

uint64_t sub_2333B7570(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.Application();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (unint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_21;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v10)
      return v11;
    v36 = MEMORY[0x24BEE4AF8];
    result = sub_2332740A4(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
      break;
    v30 = v2;
    v31 = a1;
    v13 = 0;
    v11 = v36;
    v32 = a1 & 0xC000000000000001;
    v33 = v10;
    while (v10 != v13)
    {
      if (v32)
        v14 = (id)MEMORY[0x234933120](v13, a1);
      else
        v14 = *(id *)(a1 + 8 * v13 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_storeIdentifier, v30);
      v17 = objc_msgSend(v15, sel_launchURL);
      if (v17)
      {
        v18 = v17;
        sub_23361D2D4();

        v19 = sub_23361D340();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
      }
      else
      {
        v20 = sub_23361D340();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
      }
      v21 = objc_msgSend(v15, sel_customProductPageIdentifier);
      if (v21)
      {
        v22 = v21;
        v23 = sub_23361E150();
        v25 = v24;

      }
      else
      {
        v23 = 0;
        v25 = 0;
      }
      a1 = v31;
      *v9 = v16;
      v26 = v35;
      sub_2331A04AC((uint64_t)v6, (uint64_t)v9 + *(int *)(v35 + 20));

      v27 = (_QWORD *)((char *)v9 + *(int *)(v26 + 24));
      *v27 = v23;
      v27[1] = v25;
      v36 = v11;
      v29 = *(_QWORD *)(v11 + 16);
      v28 = *(_QWORD *)(v11 + 24);
      v2 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        sub_2332740A4(v28 > 1, v29 + 1, 1);
        v11 = v36;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v2;
      sub_233168580((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for Order.Application);
      v10 = v33;
      if (v33 == v13)
        return v11;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v10 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2333B7840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v30;

  v6 = type metadata accessor for RawOrderProvider();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v12, &qword_25604A470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v13 = type metadata accessor for Order.Provider(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v14 = (void *)OrderBundle.localizedString(forKey:)();
    v15 = sub_23361D6B8();
    v16 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v15);
    object = v16._object;
    countAndFlagsBits = v16._countAndFlagsBits;

    swift_bridgeObjectRelease();
    v17 = v9[3];
    v27 = v9[2];
    v30 = a2;
    v19 = v9[4];
    v18 = v9[5];
    v20 = (char *)v9 + *(int *)(v6 + 28);
    v21 = type metadata accessor for Order.Provider(0);
    v22 = (char *)a3 + *(int *)(v21 + 28);
    v23 = sub_23361D340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v22, v20, v23);
    v24 = (uint64_t)object;
    *a3 = countAndFlagsBits;
    a3[1] = v24;
    a3[2] = v27;
    a3[3] = v17;
    a3[4] = v19;
    a3[5] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 0, 1, v21);
  }
  return swift_release();
}

FinanceKit::FullyQualifiedOrderIdentifier __swiftcall FullyQualifiedOrderIdentifier.init(orderTypeIdentifier:orderIdentifier:)(Swift::String orderTypeIdentifier, Swift::String orderIdentifier)
{
  Swift::String *v2;
  FinanceKit::FullyQualifiedOrderIdentifier result;

  *v2 = orderTypeIdentifier;
  v2[1] = orderIdentifier;
  result.orderIdentifier = orderIdentifier;
  result.orderTypeIdentifier = orderTypeIdentifier;
  return result;
}

unint64_t FullyQualifiedOrderIdentifier.description.getter()
{
  sub_23361ED98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0xD000000000000016;
}

uint64_t Order.Provider.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Provider.displayName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.Provider.displayName.modify())()
{
  return nullsub_1;
}

uint64_t Order.Provider.trackingLogoNameDarkColorScheme.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Provider.trackingLogoNameDarkColorScheme.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Order.Provider.trackingLogoNameDarkColorScheme.modify())()
{
  return nullsub_1;
}

uint64_t Order.Provider.trackingLogoNameLightColorScheme.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Provider.trackingLogoNameLightColorScheme.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Order.Provider.trackingLogoNameLightColorScheme.modify())()
{
  return nullsub_1;
}

uint64_t Order.Provider.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.Provider(0) + 28);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Order.Provider.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.Provider(0) + 28);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.Provider.url.modify())(_QWORD)
{
  type metadata accessor for Order.Provider(0);
  return nullsub_1;
}

uint64_t sub_2333B7D50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333B7D88 + 4 * byte_233641C10[*v0]))(0x4E79616C70736964, 0xEB00000000656D61);
}

unint64_t sub_2333B7D88()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_2333B7DA4()
{
  return 0xD000000000000020;
}

uint64_t sub_2333B7DC4()
{
  return 7107189;
}

uint64_t sub_2333B7DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333C32D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333B7DF8()
{
  sub_2333BD214();
  return sub_23361F428();
}

uint64_t sub_2333B7E20()
{
  sub_2333BD214();
  return sub_23361F434();
}

uint64_t Order.Provider.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C780);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BD214();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F140();
  if (!v1)
  {
    v8[14] = 1;
    sub_23361F140();
    v8[13] = 2;
    sub_23361F140();
    type metadata accessor for Order.Provider(0);
    v8[12] = 3;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.Provider.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v22 = a2;
  v23 = sub_23361D340();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C790);
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.Provider(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BD214();
  v10 = v26;
  sub_23361F3EC();
  if (v10)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v26 = v7;
  v11 = v4;
  v12 = v24;
  v13 = v25;
  v30 = 0;
  v14 = (uint64_t)v9;
  *v9 = sub_23361F02C();
  v9[1] = v15;
  v29 = 1;
  v9[2] = sub_23361F02C();
  v9[3] = v16;
  v28 = 2;
  v9[4] = sub_23361F02C();
  v9[5] = v17;
  v27 = 3;
  sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v18 = v12;
  v19 = v23;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v26 + 28), v18, v19);
  sub_2331684BC(v14, v22, type metadata accessor for Order.Provider);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v14, type metadata accessor for Order.Provider);
}

uint64_t sub_2333B82F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.Provider.init(from:)(a1, a2);
}

uint64_t sub_2333B830C(_QWORD *a1)
{
  return Order.Provider.encode(to:)(a1);
}

uint64_t Order.merchant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Merchant);
}

uint64_t Order.merchant.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2333BD258(a1, v1);
}

uint64_t (*Order.merchant.modify())()
{
  return nullsub_1;
}

uint64_t Order.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for Order(0) + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Order.fullyQualifiedOrderIdentifier.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for Order(0) + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Order.fullyQualifiedOrderIdentifier.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.number.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Order(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.number.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Order(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Order.number.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.changeNotifications.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t Order.changeNotifications.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Order(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*Order.changeNotifications.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.status.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t Order.status.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Order(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*Order.status.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Order(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Order(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Order.statusDescription.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 40);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Order.createdDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 40);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.createdDate.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.updatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 44);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Order.updatedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 44);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.updatedDate.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.payment.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Order(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_2333BD2B0(v4, v5, v6, v7, v8, v9);
}

__n128 Order.payment.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;

  v9 = *a1;
  v7 = a1[2];
  v8 = a1[1];
  v6 = a1[3];
  v2 = a1[4].n128_u64[0];
  v3 = a1[4].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for Order(0) + 48));
  sub_2333BD308(v4->n128_u64[0], v4->n128_i64[1], v4[1].n128_i64[0], v4[1].n128_i64[1], v4[2].n128_i64[0], v4[2].n128_i64[1]);
  *v4 = v9;
  v4[1] = v8;
  result = v6;
  v4[2] = v7;
  v4[3] = v6;
  v4[4].n128_u64[0] = v2;
  v4[4].n128_u64[1] = v3;
  return result;
}

uint64_t (*Order.payment.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.returnInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 52), a1, &qword_25604C798);
}

uint64_t Order.returnInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 52), &qword_25604C798);
}

uint64_t (*Order.returnInfo.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.returns.getter()
{
  type metadata accessor for Order(0);
  return swift_bridgeObjectRetain();
}

uint64_t Order.returns.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Order(0) + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Order.returns.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.managementURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 60);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Order.managementURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order(0) + 60);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.managementURL.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.customer.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Order(0) + 64));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_233270458(v4, v5);
}

__n128 Order.customer.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v9 = *a1;
  v7 = a1[2];
  v8 = a1[1];
  v6 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  v4 = v1 + *(int *)(type metadata accessor for Order(0) + 64);
  sub_2332705EC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_OWORD *)v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 64) = v2;
  *(_QWORD *)(v4 + 72) = v3;
  return result;
}

uint64_t (*Order.customer.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.lineItems.getter()
{
  type metadata accessor for Order(0);
  return swift_bridgeObjectRetain();
}

uint64_t Order.lineItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Order(0) + 68);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Order.lineItems.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.fulfillments.getter()
{
  type metadata accessor for Order(0);
  return swift_bridgeObjectRetain();
}

uint64_t Order.fulfillments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Order(0) + 72);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Order.fulfillments.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.associatedApplications.getter()
{
  type metadata accessor for Order(0);
  return swift_bridgeObjectRetain();
}

uint64_t Order.associatedApplications.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Order(0) + 76);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Order.associatedApplications.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.associatedApplicationIdentifiers.getter()
{
  type metadata accessor for Order(0);
  return swift_bridgeObjectRetain();
}

uint64_t Order.associatedApplicationIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Order(0) + 80);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Order.associatedApplicationIdentifiers.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.barcode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Order(0) + 84));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return sub_233364468(v4, v5, v6, v7, v8);
}

__n128 Order.barcode.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Order(0) + 84));
  sub_2333BD360(*v3, v3[1], v3[2], v3[3], v3[4]);
  *(_OWORD *)v3 = v7;
  *((_OWORD *)v3 + 1) = v6;
  result = v5;
  *((__n128 *)v3 + 2) = v5;
  v3[6] = v2;
  return result;
}

uint64_t (*Order.barcode.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

uint64_t Order.orderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 88), a1, &qword_25604C7A0);
}

uint64_t Order.orderProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 88), &qword_25604C7A0);
}

uint64_t (*Order.orderProvider.modify())(_QWORD)
{
  type metadata accessor for Order(0);
  return nullsub_1;
}

BOOL static OrderChangeNotificationsValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2333B8FC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333B8FF4 + 4 * byte_233641C14[a1]))(0x746E61686372656DLL, 0xE800000000000000);
}

unint64_t sub_2333B8FF4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2333B918C()
{
  return 0x65646F63726162;
}

uint64_t sub_2333B91A4()
{
  return 0x6F7250726564726FLL;
}

uint64_t sub_2333B91C8()
{
  unsigned __int8 *v0;

  return sub_2333B8FC0(*v0);
}

uint64_t sub_2333B91D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333C3484(a1, a2);
  *a3 = result;
  return result;
}

void sub_2333B91F4(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_2333B9200()
{
  sub_2333BE56C();
  return sub_23361F428();
}

uint64_t sub_2333B9228()
{
  sub_2333BE56C();
  return sub_23361F434();
}

uint64_t Order.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BE56C();
  sub_23361F410();
  LOBYTE(v24) = 0;
  type metadata accessor for Merchant();
  sub_233167C58(&qword_25604C7B8, (uint64_t (*)(uint64_t))type metadata accessor for Merchant, (uint64_t)&protocol conformance descriptor for Merchant);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for Order(0);
    v10 = (__int128 *)(v3 + v9[5]);
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 2);
    v12 = *((_QWORD *)v10 + 3);
    v24 = v11;
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    v29 = 1;
    sub_23322AA54();
    sub_23361F17C();
    LOBYTE(v24) = 2;
    sub_23361F0E0();
    LOBYTE(v24) = *(_BYTE *)(v3 + v9[7]);
    v29 = 3;
    sub_2333BE5B0();
    sub_23361F17C();
    LOBYTE(v24) = *(_BYTE *)(v3 + v9[8]);
    v29 = 4;
    sub_2333BE5F4();
    sub_23361F17C();
    LOBYTE(v24) = 5;
    sub_23361F0E0();
    LOBYTE(v24) = 6;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    LOBYTE(v24) = 7;
    sub_23361F17C();
    v14 = (__int128 *)(v3 + v9[12]);
    v15 = v14[1];
    v24 = *v14;
    v25 = v15;
    v16 = v14[3];
    v26 = v14[2];
    v27 = v16;
    v28 = v14[4];
    v29 = 8;
    sub_2333BE638();
    sub_23361F110();
    LOBYTE(v24) = 9;
    type metadata accessor for Order.ReturnInfo();
    sub_233167C58(&qword_25604C7D8, (uint64_t (*)(uint64_t))type metadata accessor for Order.ReturnInfo, (uint64_t)&protocol conformance descriptor for Order.ReturnInfo);
    sub_23361F110();
    *(_QWORD *)&v24 = *(_QWORD *)(v3 + v9[14]);
    v29 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7E0);
    sub_2333BE67C();
    sub_23361F17C();
    LOBYTE(v24) = 11;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F17C();
    v17 = (__int128 *)(v3 + v9[16]);
    v18 = v17[1];
    v24 = *v17;
    v25 = v18;
    v19 = v17[3];
    v26 = v17[2];
    v27 = v19;
    v28 = v17[4];
    v29 = 12;
    sub_2333BE6F8();
    sub_23361F110();
    *(_QWORD *)&v24 = *(_QWORD *)(v3 + v9[17]);
    v29 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
    sub_2332E93D4(&qword_2560492A8, (uint64_t (*)(void))sub_2332E934C, MEMORY[0x24BEE12A0]);
    sub_23361F17C();
    *(_QWORD *)&v24 = *(_QWORD *)(v3 + v9[18]);
    v29 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C800);
    sub_2333BE73C();
    sub_23361F17C();
    *(_QWORD *)&v24 = *(_QWORD *)(v3 + v9[19]);
    v29 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C818);
    sub_2333BE7B8();
    sub_23361F17C();
    *(_QWORD *)&v24 = *(_QWORD *)(v3 + v9[20]);
    v29 = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23361F110();
    v20 = (__int128 *)(v3 + v9[21]);
    v21 = *((_QWORD *)v20 + 6);
    v22 = v20[1];
    v24 = *v20;
    v25 = v22;
    v26 = v20[2];
    *(_QWORD *)&v27 = v21;
    v29 = 17;
    sub_2333BE834();
    sub_23361F110();
    LOBYTE(v24) = 18;
    type metadata accessor for Order.Provider(0);
    sub_233167C58(&qword_25604C838, type metadata accessor for Order.Provider, (uint64_t)&protocol conformance descriptor for Order.Provider);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Order.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int *v46;
  uint64_t v48;
  __int128 v49;
  int *v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t *v62;
  __int128 v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  void (*v69)(_QWORD, _QWORD, _QWORD);
  __int128 v70;
  uint64_t *v71;
  __int128 v72;
  __int128 v73;
  void (*v74)(_QWORD, _QWORD, _QWORD);
  void (*v75)(_QWORD, _QWORD, _QWORD);
  void (*v76)(_QWORD, _QWORD, _QWORD);
  void (*v77)(_QWORD, _QWORD, _QWORD);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD, _QWORD);
  uint64_t v82;
  uint64_t *v83;
  __int128 v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  void (*v107)(_QWORD, _QWORD, _QWORD);
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  char *v112;
  int *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  char v119;

  v89 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
  MEMORY[0x24BDAC7A8](v3);
  v88 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_23361D340();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v90 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v91 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23361D634();
  v108 = *(_QWORD *)(v110 - 8);
  v8 = MEMORY[0x24BDAC7A8](v110);
  *(_QWORD *)&v93 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&v92 = (char *)&v87 - v10;
  v11 = type metadata accessor for Merchant();
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)&v94 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C840);
  v13 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for Order(0);
  v17 = (int *)MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[v17[6]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v111 = (uint64_t *)v20;
  v21 = &v19[v17[9]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v109 = (uint64_t *)v21;
  v22 = (uint64_t *)&v19[v17[12]];
  *((_OWORD *)v22 + 3) = 0u;
  *((_OWORD *)v22 + 4) = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  v106 = v22;
  *(_OWORD *)v22 = 0u;
  v23 = (uint64_t)&v19[v17[13]];
  v24 = type metadata accessor for Order.ReturnInfo();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v105 = v23;
  v25(v23, 1, 1, v24);
  v104 = v16[14];
  *(_QWORD *)&v19[v104] = MEMORY[0x24BEE4AF8];
  v26 = (uint64_t *)&v19[v16[16]];
  *(_OWORD *)v26 = xmmword_23363ADC0;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  v103 = v26;
  *((_OWORD *)v26 + 4) = 0u;
  v100 = v16[20];
  *(_QWORD *)&v19[v100] = 0;
  v27 = &v19[v16[21]];
  *((_QWORD *)v27 + 6) = 0;
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  v101 = (uint64_t *)v27;
  *(_OWORD *)v27 = 0u;
  v112 = v19;
  v113 = v16;
  v28 = (uint64_t)&v19[v16[22]];
  v29 = type metadata accessor for Order.Provider(0);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v102 = v28;
  v30(v28, 1, 1, v29);
  v31 = a1[3];
  v99 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_2333BE56C();
  v96 = v15;
  v32 = v107;
  sub_23361F3EC();
  if (v32)
  {
    v107 = v32;
    v37 = 5924;
    goto LABEL_4;
  }
  v33 = v92;
  v34 = v93;
  v87 = v29;
  v35 = v13;
  LOBYTE(v114) = 0;
  sub_233167C58(&qword_25604C848, (uint64_t (*)(uint64_t))type metadata accessor for Merchant, (uint64_t)&protocol conformance descriptor for Merchant);
  v36 = v94;
  sub_23361F068();
  v48 = (uint64_t)v112;
  sub_233168580(v36, (uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for Merchant);
  v119 = 1;
  sub_23322AA98();
  sub_23361F068();
  v49 = v115;
  v50 = v113;
  v51 = (_OWORD *)(v48 + v113[5]);
  *v51 = v114;
  v51[1] = v49;
  LOBYTE(v114) = 2;
  v52 = sub_23361EFCC();
  v53 = v111;
  *v111 = v52;
  v53[1] = v54;
  v119 = 3;
  sub_2333BE878();
  sub_23361F068();
  v112[v50[7]] = v114;
  v119 = 4;
  sub_2333BE8BC();
  sub_23361F068();
  v112[v50[8]] = v114;
  LOBYTE(v114) = 5;
  v55 = sub_23361EFCC();
  v56 = v109;
  *v109 = v55;
  v56[1] = v57;
  LOBYTE(v114) = 6;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v58 = v110;
  sub_23361F068();
  v59 = (uint64_t)v112;
  v60 = &v112[v50[10]];
  v107 = *(void (**)(_QWORD, _QWORD, _QWORD))(v108 + 32);
  v107(v60, v33, v58);
  LOBYTE(v114) = 7;
  sub_23361F068();
  v107(v59 + v113[11], v34, v58);
  v119 = 8;
  sub_2333BE900();
  sub_23361EFFC();
  v61 = v115;
  v62 = v106;
  *(_OWORD *)v106 = v114;
  *((_OWORD *)v62 + 1) = v61;
  v63 = v117;
  *((_OWORD *)v62 + 2) = v116;
  *((_OWORD *)v62 + 3) = v63;
  *((_OWORD *)v62 + 4) = v118;
  LOBYTE(v114) = 9;
  sub_233167C58(&qword_25604C868, (uint64_t (*)(uint64_t))type metadata accessor for Order.ReturnInfo, (uint64_t)&protocol conformance descriptor for Order.ReturnInfo);
  sub_23361EFFC();
  v107 = 0;
  sub_233170B8C(v91, v105, &qword_25604C798);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7E0);
  v119 = 10;
  sub_2333BE944();
  v64 = v107;
  sub_23361F068();
  v107 = v64;
  if (v64)
    goto LABEL_24;
  v65 = v114;
  v66 = v104;
  v67 = (uint64_t)v112;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v67 + v66) = v65;
  LOBYTE(v114) = 11;
  sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v68 = v107;
  sub_23361F068();
  v107 = v68;
  if (v68)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
    v37 = 6119;
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(&v112[v113[15]], v90, v98);
  v119 = 12;
  sub_2333BE9C0();
  v69 = v107;
  sub_23361EFFC();
  v107 = v69;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
    v37 = 8167;
LABEL_4:
    v38 = v37 | 0x70000;
    v39 = (uint64_t)v112;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    v40 = (v38 >> 6) & 1;
    v41 = (v38 >> 7) & 1;
    v42 = (v38 >> 11) & 1;
    if ((v38 & 1) != 0)
      sub_233168500(v39, (uint64_t (*)(_QWORD))type metadata accessor for Merchant);
    v43 = 0;
    v44 = 0;
    v45 = 0;
    if ((v38 & 2) == 0)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v113;
      if (v40)
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v39 + v113[10], v110);
      if (v41)
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v39 + v46[11], v110);
      sub_2333BD308(*v106, v106[1], v106[2], v106[3], v106[4], v106[5]);
      sub_233168608(v105, &qword_25604C798);
      swift_bridgeObjectRelease();
      if (v42)
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v39 + v46[15], v98);
      sub_2332705EC(*v103, v103[1]);
      if (v45)
      {
        swift_bridgeObjectRelease();
        if (!v44)
          goto LABEL_16;
      }
      else if (!v44)
      {
LABEL_16:
        if (!v43)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          sub_2333BD360(*v101, v101[1], v101[2], v101[3], v101[4]);
          return sub_233168608(v102, &qword_25604C7A0);
        }
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      if (!v43)
        goto LABEL_18;
      goto LABEL_17;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v94 = v114;
  v93 = v115;
  v92 = v116;
  v91 = v117;
  v70 = v118;
  v71 = v103;
  sub_2332705EC(*v103, v103[1]);
  v72 = v93;
  *(_OWORD *)v71 = v94;
  *((_OWORD *)v71 + 1) = v72;
  v73 = v91;
  *((_OWORD *)v71 + 2) = v92;
  *((_OWORD *)v71 + 3) = v73;
  *((_OWORD *)v71 + 4) = v70;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
  v119 = 13;
  sub_2332E93D4(&qword_2560492C8, (uint64_t (*)(void))sub_2332E943C, MEMORY[0x24BEE12D0]);
  v74 = v107;
  sub_23361F068();
  LODWORD(v94) = v74 == 0;
  v107 = v74;
  if (v74
    || (*(_QWORD *)&v112[v113[17]] = v114,
        __swift_instantiateConcreteTypeFromMangledName(&qword_25604C800),
        v119 = 14,
        sub_2333BEA04(),
        v75 = v107,
        sub_23361F068(),
        (v107 = v75) != 0))
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
    v44 = 0;
    v43 = 0;
LABEL_30:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    v39 = (uint64_t)v112;
    sub_233168500((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for Merchant);
    v42 = 1;
    v41 = 1;
    v40 = 1;
    v45 = v94;
    goto LABEL_7;
  }
  *(_QWORD *)&v112[v113[18]] = v114;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604C818);
  v119 = 15;
  sub_2333BEA80();
  v76 = v107;
  sub_23361F068();
  v107 = v76;
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
    v43 = 0;
    v44 = 1;
    goto LABEL_30;
  }
  *(_QWORD *)&v112[v113[19]] = v114;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  v119 = 16;
  sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v77 = v107;
  sub_23361EFFC();
  v107 = v77;
  if (v77)
    goto LABEL_36;
  v78 = v114;
  v79 = v100;
  v80 = (uint64_t)v112;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v80 + v79) = v78;
  v119 = 17;
  sub_2333BEAFC();
  v81 = v107;
  sub_23361EFFC();
  v107 = v81;
  if (v81)
    goto LABEL_36;
  v93 = v114;
  v92 = v115;
  v91 = v116;
  v82 = v117;
  v83 = v101;
  sub_2333BD360(*v101, v101[1], v101[2], v101[3], v101[4]);
  v84 = v92;
  *(_OWORD *)v83 = v93;
  *((_OWORD *)v83 + 1) = v84;
  *((_OWORD *)v83 + 2) = v91;
  v83[6] = v82;
  LOBYTE(v114) = 18;
  sub_233167C58(&qword_25604C8B0, type metadata accessor for Order.Provider, (uint64_t)&protocol conformance descriptor for Order.Provider);
  v85 = v107;
  sub_23361EFFC();
  v107 = v85;
  if (v85)
  {
LABEL_36:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
    v44 = 1;
    v43 = 1;
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v96, v95);
  sub_233170B8C(v88, v102, &qword_25604C7A0);
  v86 = (uint64_t)v112;
  sub_2331684BC((uint64_t)v112, v89, type metadata accessor for Order);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
  return sub_233168500(v86, type metadata accessor for Order);
}

uint64_t sub_2333BA908@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.init(from:)(a1, a2);
}

uint64_t sub_2333BA91C(_QWORD *a1)
{
  return Order.encode(to:)(a1);
}

uint64_t OrderChangeNotificationsValue.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_2333BA958()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0x64656C62616E65;
}

uint64_t sub_2333BA998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333C3C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333BA9BC()
{
  sub_2333BEB40();
  return sub_23361F428();
}

uint64_t sub_2333BA9E4()
{
  sub_2333BEB40();
  return sub_23361F434();
}

uint64_t sub_2333BAA0C()
{
  sub_2333BEB84();
  return sub_23361F428();
}

uint64_t sub_2333BAA34()
{
  sub_2333BEB84();
  return sub_23361F434();
}

uint64_t sub_2333BAA5C()
{
  sub_2333BEBC8();
  return sub_23361F428();
}

uint64_t sub_2333BAA84()
{
  sub_2333BEBC8();
  return sub_23361F434();
}

uint64_t OrderChangeNotificationsValue.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t OrderChangeNotificationsValue.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8B8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8C0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8C8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BEB40();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2333BEB84();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2333BEBC8();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t OrderChangeNotificationsValue.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8E8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8F0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C8F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BEB40();
  v11 = v33;
  sub_23361F3EC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23361F098();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23361EE10();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v21 = &type metadata for OrderChangeNotificationsValue;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2333BEB84();
    sub_23361EFA8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2333BEBC8();
    v22 = v6;
    sub_23361EFA8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_2333BB01C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OrderChangeNotificationsValue.init(from:)(a1, a2);
}

uint64_t sub_2333BB030(_QWORD *a1)
{
  return OrderChangeNotificationsValue.encode(to:)(a1);
}

uint64_t FullyQualifiedOrderIdentifier.orderTypeIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FullyQualifiedOrderIdentifier.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FullyQualifiedOrderIdentifier.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FullyQualifiedOrderIdentifier.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FullyQualifiedOrderIdentifier.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FullyQualifiedOrderIdentifier.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FullyQualifiedOrderIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333BB194()
{
  _BYTE *v0;

  if (*v0)
    return 0x656449726564726FLL;
  else
    return 0xD000000000000013;
}

uint64_t sub_2333BB1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333C3D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333BB204()
{
  sub_2333BEC0C();
  return sub_23361F428();
}

uint64_t sub_2333BB22C()
{
  sub_2333BEC0C();
  return sub_23361F434();
}

uint64_t FullyQualifiedOrderIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C900);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BEC0C();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v2)
  {
    v11 = 1;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t FullyQualifiedOrderIdentifier.hashValue.getter()
{
  sub_23361F350();
  sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedOrderIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C910);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333BEC0C();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F02C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333BB58C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FullyQualifiedOrderIdentifier.init(from:)(a1, a2);
}

uint64_t sub_2333BB5A0(_QWORD *a1)
{
  return FullyQualifiedOrderIdentifier.encode(to:)(a1);
}

uint64_t Order.init(_:bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int *v24;
  _QWORD *v25;
  void (*v26)(void);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t countAndFlagsBits;
  void *v45;
  uint64_t v46;
  Swift::String v47;
  void *object;
  int *v49;
  uint64_t v50;
  uint64_t *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t *v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t *v161;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  char *v174;
  void (*v175)(void);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int *v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  __int128 v209;
  __int128 v210;

  v186 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
  MEMORY[0x24BDAC7A8](v5);
  v181 = (uint64_t *)((char *)&v163 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v192 = type metadata accessor for RawOrderApplication();
  v171 = *(_QWORD *)(v192 - 8);
  MEMORY[0x24BDAC7A8](v192);
  v8 = (uint64_t *)((char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v191 = type metadata accessor for Order.Application();
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v10 = (uint64_t *)((char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Order.ReturnInfo();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v170 = (char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for RawOrderReturnInfo();
  v174 = *(char **)(v182 - 8);
  v14 = MEMORY[0x24BDAC7A8](v182);
  v169 = (uint64_t)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v178 = (uint64_t)&v163 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  MEMORY[0x24BDAC7A8](v17);
  v173 = (uint64_t)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
  MEMORY[0x24BDAC7A8](v19);
  v183 = (uint64_t)&v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for RawMerchant();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = (int *)type metadata accessor for Order(0);
  v25 = (_QWORD *)(a3 + v24[6]);
  v26 = *(void (**)(void))(v12 + 56);
  v176 = a3 + v24[13];
  v184 = v11;
  v175 = v26;
  v26();
  v177 = v24[14];
  *(_QWORD *)(a3 + v177) = MEMORY[0x24BEE4AF8];
  v27 = (uint64_t *)(a3 + v24[16]);
  *(_OWORD *)v27 = xmmword_23363ADC0;
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  *((_OWORD *)v27 + 3) = 0u;
  v172 = v27;
  *((_OWORD *)v27 + 4) = 0u;
  *(_QWORD *)(a3 + v24[20]) = 0;
  v28 = a3 + v24[21];
  *(_QWORD *)(v28 + 48) = 0;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_OWORD *)(v28 + 32) = 0u;
  v179 = (uint64_t *)v28;
  *(_OWORD *)v28 = 0u;
  v29 = a3 + v24[22];
  v30 = type metadata accessor for Order.Provider(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v180 = v29;
  v31(v29, 1, 1, v30);
  sub_2331684BC(a1, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  swift_retain();
  Merchant.init(_:bundle:)(v23, a3);
  v32 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v33 = (uint64_t *)(a1 + v32[5]);
  v34 = *v33;
  v35 = v33[1];
  v36 = (uint64_t *)(a1 + v32[6]);
  v37 = *v36;
  v38 = v36[1];
  v39 = (_QWORD *)(a3 + v24[5]);
  *v39 = v34;
  v39[1] = v35;
  v39[2] = v37;
  v39[3] = v38;
  v40 = (_QWORD *)(a1 + v32[7]);
  v41 = v40[1];
  *v25 = *v40;
  v25[1] = v41;
  *(_BYTE *)(a3 + v24[7]) = *(_BYTE *)(a1 + v32[8]) & 1;
  LOBYTE(v40) = *(_BYTE *)(a1 + v32[9]);
  v187 = v24;
  v42 = v24[8];
  v188 = a3;
  *(_BYTE *)(a3 + v42) = (_BYTE)v40;
  v189 = v32;
  v43 = (uint64_t *)(a1 + v32[10]);
  countAndFlagsBits = *v43;
  if (v43[1])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
    v46 = sub_23361D6B8();
    v47 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v46);
    countAndFlagsBits = v47._countAndFlagsBits;
    object = v47._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    object = 0;
  }
  v49 = v187;
  v50 = v188;
  v51 = (uint64_t *)(v188 + v187[9]);
  *v51 = countAndFlagsBits;
  v51[1] = (uint64_t)object;
  v52 = v189;
  v53 = a1 + v189[11];
  v54 = v50 + v49[10];
  v55 = a1;
  v56 = sub_23361D634();
  v167 = *(_QWORD *)(v56 - 8);
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16);
  v57(v54, v53, v56);
  v58 = v55 + v52[12];
  v59 = v50 + v49[11];
  v168 = v56;
  v60 = v56;
  v61 = v55;
  v57(v59, v58, v60);
  v62 = (uint64_t *)(v55 + v52[14]);
  v63 = v62[5];
  v185 = v55;
  if (v63)
  {
    v64 = v62[8];
    v65 = v62[9];
    v66 = v62[6];
    v165 = v62[7];
    v67 = v62[3];
    v164 = v62[4];
    v68 = v62[1];
    v69 = v62[2];
    v166 = *v62;
    LOBYTE(v193) = v166;
    v194 = v68;
    v195 = v69;
    LODWORD(v196) = v67;
    v197 = v164;
    v198 = v63;
    v199 = v66;
    v200 = v165;
    v201 = v64;
    v202 = v65;
    v70 = v186;
    swift_retain();
    v61 = v185;
    sub_2333BF1C8(v166, v68, v69, v67, v164, v63);
    OrderPayment.init(_:bundle:)((char *)&v193, v70, (uint64_t)&v203);
    v71 = v203;
    v72 = v206;
    v73 = v207;
    v74 = v208;
    v75 = v209;
    v76 = v210;
    v78 = v204;
    v77 = v205;
  }
  else
  {
    v71 = 0;
    v78 = 0;
    v77 = 0;
    v72 = 0;
    v73 = 0;
    v74 = 0;
    v75 = 0uLL;
    v76 = 0uLL;
  }
  v79 = v188 + v187[12];
  *(_QWORD *)v79 = v71;
  *(_QWORD *)(v79 + 8) = v78;
  *(_QWORD *)(v79 + 16) = v77;
  *(_QWORD *)(v79 + 24) = v72;
  *(_QWORD *)(v79 + 32) = v73;
  *(_QWORD *)(v79 + 40) = v74;
  *(_OWORD *)(v79 + 48) = v75;
  *(_OWORD *)(v79 + 64) = v76;
  v80 = v173;
  sub_2331686A0(v61 + v189[15], v173, &qword_25604A468);
  v81 = 1;
  v82 = (int *)v182;
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v174 + 6))(v80, 1, v182) != 1)
  {
    v83 = v178;
    sub_233168580(v80, v178, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    v84 = v169;
    sub_2331684BC(v83, v169, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    v85 = v184;
    v86 = *(int *)(v184 + 24);
    v87 = (uint64_t)v170;
    v174 = &v170[*(int *)(v184 + 20)];
    v88 = (uint64_t)&v170[v86];
    v89 = sub_23361D340();
    v90 = *(_QWORD *)(v89 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v88, 1, 1, v89);
    v91 = v87 + *(int *)(v85 + 28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 + 56))(v91, 1, 1, v168);
    v92 = *(int *)(v85 + 32);
    *(_BYTE *)(v87 + v92) = 2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v87, v84, v89);
    v93 = (uint64_t *)(v84 + v82[5]);
    v95 = *v93;
    v94 = v93[1];
    v96 = v174;
    *(_QWORD *)v174 = v95;
    *((_QWORD *)v96 + 1) = v94;
    v97 = v84 + v82[6];
    swift_bridgeObjectRetain();
    sub_2332C489C(v97, v88, &qword_254248700);
    sub_2332C489C(v84 + v82[7], v91, (uint64_t *)&unk_254247DA0);
    v98 = *(_BYTE *)(v84 + v82[8]);
    sub_233168500(v84, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    *(_BYTE *)(v87 + v92) = v98;
    v61 = v185;
    sub_233168580(v87, v183, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
    sub_233168500(v178, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    v81 = 0;
  }
  v99 = v183;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v175)(v183, v81, 1, v184);
  sub_233170B8C(v99, v176, &qword_25604C798);
  v100 = v189;
  v101 = v186;
  swift_retain();
  v102 = swift_bridgeObjectRetain();
  v103 = sub_2333BEC50(v102, v101);
  v178 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v104 = v188;
  v105 = v177;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v104 + v105) = v103;
  v106 = v61 + v100[13];
  v107 = v104 + v187[15];
  v108 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v107, v106, v108);
  v109 = 0;
  v110 = v61;
  v182 = 0;
  v111 = 0;
  v183 = 0;
  v112 = 0;
  v184 = 0;
  v113 = 0;
  v114 = 0;
  v115 = 0;
  v116 = (uint64_t *)(v110 + v100[18]);
  v117 = v116[1];
  if (v117 != 1)
  {
    v114 = v116[8];
    v115 = v116[9];
    v113 = v116[7];
    v184 = v116[6];
    v112 = v116[5];
    v183 = v116[4];
    v111 = v116[3];
    v182 = v116[2];
    v109 = *v116;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v118 = v172;
  sub_2332705EC(*v172, v172[1]);
  *v118 = v109;
  v118[1] = v117;
  v118[2] = v182;
  v118[3] = v111;
  v118[4] = v183;
  v118[5] = v112;
  v118[6] = v184;
  v118[7] = v113;
  v118[8] = v114;
  v118[9] = v115;
  v119 = v189;
  v120 = v185;
  v121 = v186;
  swift_retain();
  v122 = swift_bridgeObjectRetain();
  v123 = v178;
  sub_23328ABD4(v122, v121);
  v125 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  v126 = v187;
  v127 = v188;
  *(_QWORD *)(v188 + v187[17]) = v125;
  swift_retain();
  v128 = swift_bridgeObjectRetain();
  v129 = sub_2333BEDF8(v128, v121);
  v184 = v123;
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v127 + v126[18]) = v129;
  v130 = *(_QWORD *)(v120 + v119[20]);
  v131 = *(_QWORD *)(v130 + 16);
  v132 = MEMORY[0x24BEE4AF8];
  if (v131)
  {
    v203 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2332740A4(0, v131, 0);
    v133 = (*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80);
    v183 = v130;
    v134 = v130 + v133;
    v135 = *(_QWORD *)(v171 + 72);
    v132 = v203;
    v136 = v191;
    do
    {
      sub_2331684BC(v134, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
      v137 = *v8;
      v138 = v192;
      sub_2331686A0((uint64_t)v8 + *(int *)(v192 + 20), (uint64_t)v10 + *(int *)(v136 + 20), &qword_254248700);
      v139 = (uint64_t *)((char *)v8 + *(int *)(v138 + 24));
      v141 = *v139;
      v140 = v139[1];
      *v10 = v137;
      v142 = (_QWORD *)((char *)v10 + *(int *)(v136 + 24));
      *v142 = v141;
      v142[1] = v140;
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2332740A4(0, *(_QWORD *)(v132 + 16) + 1, 1);
        v132 = v203;
      }
      v144 = *(_QWORD *)(v132 + 16);
      v143 = *(_QWORD *)(v132 + 24);
      if (v144 >= v143 >> 1)
      {
        sub_2332740A4(v143 > 1, v144 + 1, 1);
        v132 = v203;
      }
      *(_QWORD *)(v132 + 16) = v144 + 1;
      sub_233168580((uint64_t)v10, v132+ ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80))+ *(_QWORD *)(v190 + 72) * v144, (uint64_t (*)(_QWORD))type metadata accessor for Order.Application);
      v134 += v135;
      --v131;
    }
    while (v131);
    swift_bridgeObjectRelease();
    v120 = v185;
  }
  *(_QWORD *)(v188 + v187[19]) = v132;
  v145 = (uint64_t *)(v120 + v189[22]);
  v146 = v145[4];
  v147 = v186;
  if (v146)
  {
    v149 = v145[5];
    v148 = v145[6];
    v151 = v145[2];
    v150 = v145[3];
    v152 = v145[1];
    v193 = *v145;
    v153 = v193;
    v194 = v152;
    LOBYTE(v195) = v151;
    v196 = v150;
    v197 = v146;
    v198 = v149;
    v199 = v148;
    swift_retain();
    sub_233364468(v153, v152, v151, v150, v146);
    Barcode.init(_:bundle:)((uint64_t)&v193, (uint64_t)&v203);
    v146 = v203;
    v154 = v204;
    v155 = v205;
    v156 = v206;
    v157 = v207;
    v158 = v208;
    v159 = v209;
  }
  else
  {
    v154 = 0;
    v155 = 0;
    v156 = 0;
    v157 = 0;
    v158 = 0;
    v159 = 0;
  }
  v160 = v179;
  sub_2333BD360(*v179, v179[1], v179[2], v179[3], v179[4]);
  *v160 = v146;
  v160[1] = v154;
  v160[2] = v155;
  v160[3] = v156;
  v160[4] = v157;
  v160[5] = v158;
  v160[6] = v159;
  v161 = v181;
  sub_2333B7840(v120 + v189[23], v147, v181);
  sub_233168500(v120, type metadata accessor for RawECommerceOrderContent);
  return sub_233170B8C((uint64_t)v161, v180, &qword_25604C7A0);
}

uint64_t Order.init(order:orderContent:)@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, uint64_t, uint64_t, uint64_t);
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t *v49;
  id v50;
  void *v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t *v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  id v82;
  __int128 v83;
  uint64_t *v84;
  __int128 v85;
  __int128 v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id i;
  unint64_t v92;
  unint64_t v93;
  _OWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t v112;
  id v113;
  unint64_t v114;
  unint64_t v115;
  int *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  Swift::String v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t *v153;
  void (*v154)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  uint64_t *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t *v167;
  char *v168;
  int *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;

  v158 = type metadata accessor for ManagedECommerceOrderContent.OrderProvider();
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v151 = (uint64_t *)((char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C918);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v156 = (uint64_t)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v168 = (char *)&v150 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
  MEMORY[0x24BDAC7A8](v11);
  v167 = (uint64_t *)((char *)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174 = type metadata accessor for Order.Fulfillment();
  v173 = *(_QWORD *)(v174 - 8);
  v13 = MEMORY[0x24BDAC7A8](v174);
  v171 = (uint64_t)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v172 = (char *)&v150 - v15;
  v16 = type metadata accessor for Order.Return();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)&v165 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for Order(0);
  v23 = &a3[v22[13]];
  v24 = type metadata accessor for Order.ReturnInfo();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  *(_QWORD *)&v164 = v23;
  *(_QWORD *)&v163 = v24;
  *(_QWORD *)&v162 = v25;
  v25(v23, 1, 1);
  v160 = v22[14];
  *(_QWORD *)&a3[v160] = MEMORY[0x24BEE4AF8];
  v26 = (uint64_t *)&a3[v22[16]];
  *(_OWORD *)v26 = xmmword_23363ADC0;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  v161 = v26;
  *((_OWORD *)v26 + 4) = 0u;
  v152 = v22[20];
  *(_QWORD *)&a3[v152] = 0;
  v27 = &a3[v22[21]];
  *((_QWORD *)v27 + 6) = 0;
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  v153 = (uint64_t *)v27;
  *(_OWORD *)v27 = 0u;
  v28 = (uint64_t)&a3[v22[22]];
  v29 = type metadata accessor for Order.Provider(0);
  v30 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v155 = v28;
  v166 = v29;
  v154 = v30;
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v28, 1, 1);
  v31 = objc_msgSend(a2, sel_merchant);
  ManagedOrderMerchant.model.getter(a3);

  v32 = objc_msgSend(a1, sel_orderTypeIdentifier);
  v33 = sub_23361E150();
  v35 = v34;

  v159 = a1;
  v36 = objc_msgSend(a1, sel_orderIdentifier);
  v37 = sub_23361E150();
  v39 = v38;

  v169 = v22;
  v40 = v22[5];
  v170 = a3;
  v41 = (uint64_t *)&a3[v40];
  *v41 = v33;
  v41[1] = v35;
  v41[2] = v37;
  v41[3] = v39;
  v42 = objc_msgSend(a2, sel_orderNumber);
  if (v42)
  {
    v43 = v42;
    v44 = sub_23361E150();
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = v169;
  v48 = v170;
  v49 = (uint64_t *)&v170[v169[6]];
  *v49 = v44;
  v49[1] = v46;
  ManagedECommerceOrderContent.changeNotifications.getter(&v175);
  v48[v47[7]] = v175;
  ManagedECommerceOrderContent.status.getter(&v175);
  v48[v47[8]] = v175;
  v50 = objc_msgSend(a2, sel_statusDescription);
  if (v50)
  {
    v51 = v50;
    v52 = sub_23361D6B8();
    v53 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v52);
    countAndFlagsBits = v53._countAndFlagsBits;
    object = v53._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  v56 = (uint64_t *)&v170[v169[9]];
  *v56 = countAndFlagsBits;
  v56[1] = (uint64_t)object;
  v57 = objc_msgSend(a2, sel_createdDate);
  sub_23361D5EC();

  v58 = objc_msgSend(a2, sel_updatedDate);
  sub_23361D5EC();

  v59 = objc_msgSend(a2, sel_payment);
  if (v59)
  {
    OrderPayment.init(_:)(v59, &v175);
    v60 = v175;
    v61 = DWORD2(v176);
    v63 = *((_QWORD *)&v177 + 1);
    v62 = v177;
    v64 = v178;
    v65 = v179;
    v67 = *((_QWORD *)&v175 + 1);
    v66 = v176;
  }
  else
  {
    v60 = 0;
    v67 = 0;
    v66 = 0;
    v61 = 0;
    v62 = 0;
    v63 = 0;
    v64 = 0uLL;
    v65 = 0uLL;
  }
  v68 = v165;
  v69 = &v170[v169[12]];
  *(_QWORD *)v69 = v60;
  *((_QWORD *)v69 + 1) = v67;
  *((_QWORD *)v69 + 2) = v66;
  *((_QWORD *)v69 + 3) = v61;
  *((_QWORD *)v69 + 4) = v62;
  *((_QWORD *)v69 + 5) = v63;
  *((_OWORD *)v69 + 3) = v64;
  *((_OWORD *)v69 + 4) = v65;
  v70 = objc_msgSend(a2, sel_returnInfo);
  if (v70)
  {
    v71 = v70;
    Order.ReturnInfo.init(_:)(v71, v68);
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD))v162)(v68, 0, 1, v163);

  }
  else
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD))v162)(v68, 1, 1, v163);
  }
  sub_233170B8C(v68, v164, &qword_25604C798);
  v72 = ManagedECommerceOrderContent.returns.getter();
  if (v72 >> 62)
  {
    v73 = sub_23361EF30();
    if (v73)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease();
    v76 = MEMORY[0x24BEE4AF8];
    goto LABEL_26;
  }
  v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v73)
    goto LABEL_25;
LABEL_15:
  *(_QWORD *)&v175 = MEMORY[0x24BEE4AF8];
  result = sub_2332740FC(0, v73 & ~(v73 >> 63), 0);
  if (v73 < 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  *(_QWORD *)&v165 = a2;
  v75 = 0;
  v76 = v175;
  do
  {
    if ((v72 & 0xC000000000000001) != 0)
      v77 = (id)MEMORY[0x234933120](v75, v72);
    else
      v77 = *(id *)(v72 + 8 * v75 + 32);
    Order.Return.init(_:)(v77, (uint64_t)v19);
    *(_QWORD *)&v175 = v76;
    v79 = *(_QWORD *)(v76 + 16);
    v78 = *(_QWORD *)(v76 + 24);
    if (v79 >= v78 >> 1)
    {
      sub_2332740FC(v78 > 1, v79 + 1, 1);
      v76 = v175;
    }
    ++v75;
    *(_QWORD *)(v76 + 16) = v79 + 1;
    sub_233168580((uint64_t)v19, v76+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v79, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
  }
  while (v73 != v75);
  swift_bridgeObjectRelease();
  a2 = (void *)v165;
LABEL_26:
  v80 = v170;
  v81 = v160;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v80[v81] = v76;
  v82 = objc_msgSend(a2, sel_orderManagementURL);
  sub_23361D2D4();

  ManagedECommerceOrderContent.customer.getter(&v175);
  v165 = v175;
  v164 = v176;
  v163 = v177;
  v162 = v178;
  v83 = v179;
  v84 = v161;
  sub_2332705EC(*v161, v161[1]);
  v85 = v164;
  *(_OWORD *)v84 = v165;
  *((_OWORD *)v84 + 1) = v85;
  v86 = v162;
  *((_OWORD *)v84 + 2) = v163;
  *((_OWORD *)v84 + 3) = v86;
  *((_OWORD *)v84 + 4) = v83;
  v87 = ManagedECommerceOrderContent.lineItems.getter();
  if (v87 >> 62)
  {
    v88 = sub_23361EF30();
    if (v88)
    {
LABEL_28:
      v183 = MEMORY[0x24BEE4AF8];
      result = sub_233273CC0(0, v88 & ~(v88 >> 63), 0);
      if ((v88 & 0x8000000000000000) == 0)
      {
        v89 = 0;
        v90 = v183;
        if ((v87 & 0xC000000000000001) == 0)
          goto LABEL_31;
LABEL_30:
        for (i = (id)MEMORY[0x234933120](v89, v87); ; i = *(id *)(v87 + 8 * v89 + 32))
        {
          Order.LineItem.init(_:)(i, &v175);
          v183 = v90;
          v93 = *(_QWORD *)(v90 + 16);
          v92 = *(_QWORD *)(v90 + 24);
          if (v93 >= v92 >> 1)
          {
            sub_233273CC0(v92 > 1, v93 + 1, 1);
            v90 = v183;
          }
          *(_QWORD *)(v90 + 16) = v93 + 1;
          v94 = (_OWORD *)(v90 + (v93 << 7));
          v95 = v175;
          v96 = v176;
          v97 = v178;
          v94[4] = v177;
          v94[5] = v97;
          v94[2] = v95;
          v94[3] = v96;
          v98 = v179;
          v99 = v180;
          v100 = v182;
          v94[8] = v181;
          v94[9] = v100;
          v94[6] = v98;
          v94[7] = v99;
          if (v88 - 1 == v89)
            break;
          ++v89;
          if ((v87 & 0xC000000000000001) != 0)
            goto LABEL_30;
LABEL_31:
          ;
        }
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
LABEL_60:
      __break(1u);
      return result;
    }
  }
  else
  {
    v88 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v88)
      goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v90 = MEMORY[0x24BEE4AF8];
LABEL_40:
  *(_QWORD *)&v170[v169[17]] = v90;
  v101 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v102 = sub_2331A6FB8(v101);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v175 = v102;
  v103 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v104 = sub_2331A70F4(v103);
  swift_bridgeObjectRelease();
  sub_2331896C8(v104);
  sub_2331A8628((_QWORD **)&v175);
  v105 = v175;
  v106 = *(_QWORD *)(v175 + 16);
  if (v106)
  {
    *(_QWORD *)&v175 = MEMORY[0x24BEE4AF8];
    sub_2332740D0(0, v106, 0);
    v107 = 0;
    v108 = v175;
    v109 = (uint64_t)v172;
    do
    {
      v110 = *(_QWORD *)(v105 + 8 * v107 + 32);
      if ((v110 & 0x8000000000000000) != 0)
      {
        v113 = (id)(v110 & 0x7FFFFFFFFFFFFFFFLL);
        v112 = v171;
        Order.PickupFulfillment.init(_:)(v113, v171);
      }
      else
      {
        v111 = (id)v110;
        v112 = v171;
        Order.ShippingFulfillment.init(_:)(v111, v171);
      }
      swift_storeEnumTagMultiPayload();
      sub_233168580(v112, v109, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      *(_QWORD *)&v175 = v108;
      v115 = *(_QWORD *)(v108 + 16);
      v114 = *(_QWORD *)(v108 + 24);
      if (v115 >= v114 >> 1)
      {
        sub_2332740D0(v114 > 1, v115 + 1, 1);
        v108 = v175;
      }
      ++v107;
      *(_QWORD *)(v108 + 16) = v115 + 1;
      sub_233168580(v109, v108+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72) * v115, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    }
    while (v106 != v107);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v108 = MEMORY[0x24BEE4AF8];
  }
  v116 = v169;
  v117 = v170;
  *(_QWORD *)&v170[v169[18]] = v108;
  v118 = ManagedECommerceOrderContent.associatedApplications.getter();
  v119 = sub_2333B7570(v118);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v117[v116[19]] = v119;
  v120 = objc_msgSend(a2, sel_associatedApplicationIdentifiers);
  if (v120)
  {
    v121 = v120;
    v122 = sub_23361E3F0();

  }
  else
  {
    v122 = 0;
  }
  v123 = v170;
  v124 = v152;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v123[v124] = v122;
  v125 = objc_msgSend(a2, sel_barcode);
  if (v125)
  {
    ManagedOrderBarcode.model.getter((uint64_t)&v175);

    v125 = (id)*((_QWORD *)&v175 + 1);
    v126 = v175;
    v127 = v176;
    v128 = *((_QWORD *)&v176 + 1);
    v130 = *((_QWORD *)&v177 + 1);
    v129 = v177;
    v131 = v178;
  }
  else
  {
    v126 = 0;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    v130 = 0;
    v131 = 0;
  }
  v132 = v153;
  sub_2333BD360(*v153, v153[1], v153[2], v153[3], v153[4]);
  *v132 = v126;
  v132[1] = (uint64_t)v125;
  v132[2] = v127;
  v132[3] = v128;
  v132[4] = v129;
  v132[5] = v130;
  v132[6] = v131;
  v133 = v168;
  ManagedECommerceOrderContent.orderProvider.getter(v168);
  v134 = v156;
  sub_2331686A0((uint64_t)v133, v156, &qword_25604C918);
  v135 = 1;
  v136 = v158;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48))(v134, 1, v158) != 1)
  {
    v137 = v151;
    sub_233168580(v134, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for ManagedECommerceOrderContent.OrderProvider);
    v138 = sub_23361D6B8();
    v139 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v138);
    v174 = v139._countAndFlagsBits;
    swift_bridgeObjectRelease();
    v141 = v137[1];
    v140 = v137[2];
    v142 = a2;
    v144 = v137[3];
    v143 = v137[4];
    v145 = (char *)v137 + *(int *)(v136 + 28);
    v146 = v167;
    v147 = (char *)v167 + *(int *)(v166 + 28);
    v148 = sub_23361D340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v147, v145, v148);
    *v146 = v174;
    v146[1] = (uint64_t)v139._object;
    v146[2] = v141;
    v146[3] = v140;
    v146[4] = v144;
    v146[5] = v143;
    a2 = v142;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_233168500((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for ManagedECommerceOrderContent.OrderProvider);
    v135 = 0;
  }
  v149 = (uint64_t)v167;
  v154(v167, v135, 1, v166);

  sub_233168608((uint64_t)v168, &qword_25604C918);
  return sub_233170B8C(v149, v155, &qword_25604C7A0);
}

uint64_t type metadata accessor for Order.Provider(uint64_t a1)
{
  return sub_233177414(a1, qword_25604CA70);
}

uint64_t _s10FinanceKit5OrderV8ProviderV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_23361F224() & 1) != 0)
  {
    v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if ((v5 || (sub_23361F224() & 1) != 0) && (a1[4] == a2[4] && a1[5] == a2[5] || (sub_23361F224() & 1) != 0))
    {
      type metadata accessor for Order.Provider(0);
      JUMPOUT(0x234931620);
    }
  }
  return 0;
}

unint64_t sub_2333BD214()
{
  unint64_t result;

  result = qword_25604C788;
  if (!qword_25604C788)
  {
    result = MEMORY[0x234934494](&unk_233642644, &type metadata for Order.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C788);
  }
  return result;
}

uint64_t sub_2333BD258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Merchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Order(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_25604C988);
}

uint64_t sub_2333BD2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2333BD308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2333BD360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL _s10FinanceKit5OrderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  int *v39;
  char v40;
  char v41;
  _BOOL8 result;
  int *v43;
  char v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int *v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  int *v59;
  char v60;
  char v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t *v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BOOL4 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v4 = type metadata accessor for Order.Provider(0);
  v168 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CB30);
  MEMORY[0x24BDAC7A8](v167);
  v8 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v169 = (uint64_t)&v150 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v170 = (uint64_t)&v150 - v15;
  v173 = type metadata accessor for Order.ReturnInfo();
  v16 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173);
  v171 = (uint64_t)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CB38);
  MEMORY[0x24BDAC7A8](v18);
  v174 = (uint64_t)&v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v172 = (uint64_t)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v150 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v150 - v26;
  if (!_s10FinanceKit8MerchantV2eeoiySbAC_ACtFZ_0(a1, a2))
    return 0;
  v162 = v6;
  v163 = v12;
  v164 = v4;
  v165 = v8;
  v28 = (int *)type metadata accessor for Order(0);
  v29 = v28[5];
  v30 = *(_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  v33 = *(_QWORD *)(a1 + v29 + 16);
  v32 = *(_QWORD *)(a1 + v29 + 24);
  v34 = (_QWORD *)(a2 + v29);
  v35 = v34[1];
  v37 = v34[2];
  v36 = v34[3];
  v38 = v30 == *v34;
  v166 = a2;
  if (v38 && v31 == v35
    || (v39 = v28, v40 = sub_23361F224(), v28 = v39, a2 = v166, v41 = v40, result = 0, (v41 & 1) != 0))
  {
    if (v33 == v37 && v32 == v36
      || (v43 = v28, v44 = sub_23361F224(), v28 = v43, a2 = v166, v45 = v44, result = 0, (v45 & 1) != 0))
    {
      v46 = v28[6];
      v47 = (_QWORD *)(a1 + v46);
      v48 = *(_QWORD *)(a1 + v46 + 8);
      v49 = (_QWORD *)(a2 + v46);
      v50 = v49[1];
      if (v48)
      {
        if (!v50)
          return 0;
        if (*v47 != *v49 || v48 != v50)
        {
          v51 = v28;
          v52 = sub_23361F224();
          v28 = v51;
          a2 = v166;
          v53 = v52;
          result = 0;
          if ((v53 & 1) == 0)
            return result;
        }
      }
      else if (v50)
      {
        return 0;
      }
      if (*(unsigned __int8 *)(a1 + v28[7]) != *(unsigned __int8 *)(a2 + v28[7])
        || *(unsigned __int8 *)(a1 + v28[8]) != *(unsigned __int8 *)(a2 + v28[8]))
      {
        return 0;
      }
      v54 = v28[9];
      v55 = (_QWORD *)(a1 + v54);
      v56 = *(_QWORD *)(a1 + v54 + 8);
      v57 = (_QWORD *)(a2 + v54);
      v58 = v57[1];
      if (v56)
      {
        if (v58)
        {
          if (*v55 != *v57 || v56 != v58)
          {
            v59 = v28;
            v60 = sub_23361F224();
            v28 = v59;
            a2 = v166;
            v61 = v60;
            result = 0;
            if ((v61 & 1) == 0)
              return result;
          }
LABEL_25:
          v62 = a2;
          v63 = v28;
          if ((sub_23361D5E0() & 1) == 0 || (sub_23361D5E0() & 1) == 0)
            return 0;
          v64 = v63[12];
          v65 = *(_QWORD *)(a1 + v64);
          v66 = *(_QWORD *)(a1 + v64 + 8);
          v68 = *(_QWORD *)(a1 + v64 + 16);
          v67 = *(_QWORD *)(a1 + v64 + 24);
          v69 = *(_QWORD *)(a1 + v64 + 32);
          v70 = *(_QWORD *)(a1 + v64 + 40);
          v72 = *(_QWORD *)(a1 + v64 + 48);
          v71 = *(_QWORD *)(a1 + v64 + 56);
          v73 = *(_QWORD *)(a1 + v64 + 64);
          v74 = *(_QWORD *)(a1 + v64 + 72);
          v75 = (uint64_t *)(v62 + v64);
          v77 = *v75;
          v76 = v75[1];
          v78 = v75[2];
          v79 = v75[3];
          v80 = v75[4];
          v81 = v75[5];
          v82 = v75[6];
          v83 = v75[7];
          v84 = v75[8];
          v85 = v75[9];
          v86 = a1;
          v87 = (uint64_t)v63;
          if (v70)
          {
            v185 = v65;
            v186 = v66;
            v187 = v68;
            v188 = v67;
            v189 = v69;
            v190 = v70;
            v191 = v72;
            v192 = v71;
            v193 = v73;
            v194 = v74;
            v88 = v71;
            v161 = v65;
            v160 = v69;
            v159 = v67;
            v158 = v68;
            v157 = v66;
            if (v81)
            {
              LOBYTE(v175) = v77;
              v176 = v76;
              v177 = v78;
              LODWORD(v178) = v79;
              v179 = v80;
              v180 = v81;
              v181 = v82;
              v182 = v83;
              v183 = v84;
              v184 = v85;
              v152 = v73;
              v154 = v74;
              v156 = a1;
              v155 = v87;
              sub_2333BD2B0(v65, v66, v68, v67, v69, v70);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v153 = _s10FinanceKit12OrderPaymentV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v185, (unsigned __int8 *)&v175);
              v151 = v70;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2333BD308(v161, v157, v158, v159, v160, v151);
              v87 = v155;
              v86 = v156;
              if (!v153)
                return 0;
LABEL_32:
              v89 = v86;
              v90 = (int *)v87;
              sub_2331686A0(v86 + *(int *)(v87 + 52), (uint64_t)v27, &qword_25604C798);
              v91 = v90;
              sub_2331686A0(v166 + v90[13], (uint64_t)v25, &qword_25604C798);
              v92 = v174;
              v93 = v174 + *(int *)(v18 + 48);
              sub_2331686A0((uint64_t)v27, v174, &qword_25604C798);
              sub_2331686A0((uint64_t)v25, v93, &qword_25604C798);
              v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
              v95 = v173;
              if (v94(v92, 1, v173) == 1)
              {
                sub_233168608((uint64_t)v25, &qword_25604C798);
                sub_233168608((uint64_t)v27, &qword_25604C798);
                if (v94(v93, 1, v95) == 1)
                {
                  sub_233168608(v92, &qword_25604C798);
LABEL_43:
                  v107 = v166;
                  if ((sub_23322B4B8(*(_QWORD *)(v89 + v91[14]), *(_QWORD *)(v166 + v91[14])) & 1) == 0
                    || (MEMORY[0x234931620](v89 + v91[15], v107 + v91[15]) & 1) == 0)
                  {
                    return 0;
                  }
                  v108 = v91[16];
                  v109 = *(_QWORD *)(v89 + v108);
                  v110 = *(_QWORD *)(v89 + v108 + 8);
                  v112 = *(_QWORD *)(v89 + v108 + 16);
                  v111 = *(_QWORD *)(v89 + v108 + 24);
                  v114 = *(_QWORD *)(v89 + v108 + 32);
                  v113 = *(_QWORD *)(v89 + v108 + 40);
                  v116 = *(_QWORD *)(v89 + v108 + 48);
                  v115 = *(_QWORD *)(v89 + v108 + 56);
                  v118 = *(_QWORD *)(v89 + v108 + 64);
                  v117 = *(_QWORD *)(v89 + v108 + 72);
                  v119 = (uint64_t *)(v107 + v108);
                  v120 = v119[1];
                  v155 = *v119;
                  v156 = v119[2];
                  v157 = v119[3];
                  v158 = v119[4];
                  v159 = v119[5];
                  v160 = v119[6];
                  v161 = v119[7];
                  v121 = v119[9];
                  v154 = v119[8];
                  v174 = v117;
                  v173 = v115;
                  v172 = v113;
                  v171 = v111;
                  if (v110 == 1)
                  {
                    v122 = v109;
                    if (v120 == 1)
                      goto LABEL_52;
                  }
                  else
                  {
                    v185 = v109;
                    v186 = v110;
                    v187 = v112;
                    v188 = v111;
                    v189 = v114;
                    v190 = v113;
                    v191 = v116;
                    v192 = v115;
                    v193 = v118;
                    v194 = v117;
                    if (v120 != 1)
                    {
                      v175 = v155;
                      v176 = v120;
                      v177 = v156;
                      v178 = v157;
                      v179 = v158;
                      v180 = v159;
                      v181 = v160;
                      v182 = v161;
                      v183 = v154;
                      v184 = v121;
                      v123 = _s10FinanceKit5OrderV8CustomerV2eeoiySbAE_AEtFZ_0(&v185, &v175);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v123 & 1) == 0)
                        return 0;
LABEL_52:
                      if ((sub_23322B4CC(*(_QWORD *)(v89 + v91[17]), *(_QWORD *)(v166 + v91[17])) & 1) == 0
                        || (sub_23322B4D8(*(_QWORD *)(v89 + v91[18]), *(_QWORD *)(v166 + v91[18])) & 1) == 0
                        || (sub_23322B8B0(*(_QWORD *)(v89 + v91[19]), *(_QWORD *)(v166 + v91[19])) & 1) == 0)
                      {
                        return 0;
                      }
                      v124 = v91[20];
                      v125 = *(_QWORD **)(v89 + v124);
                      v126 = *(_QWORD **)(v166 + v124);
                      if (v125)
                      {
                        if (!v126 || (sub_23322B8BC(v125, v126) & 1) == 0)
                          return 0;
                      }
                      else if (v126)
                      {
                        return 0;
                      }
                      v127 = v91[21];
                      v172 = *(_QWORD *)(v89 + v127);
                      v173 = *(_QWORD *)(v89 + v127 + 8);
                      v171 = *(_QWORD *)(v89 + v127 + 16);
                      v128 = *(_QWORD *)(v89 + v127 + 32);
                      v161 = *(_QWORD *)(v89 + v127 + 24);
                      v129 = *(_QWORD *)(v89 + v127 + 48);
                      v160 = *(_QWORD *)(v89 + v127 + 40);
                      v174 = v129;
                      v130 = (uint64_t *)(v166 + v127);
                      v131 = *v130;
                      v132 = v130[1];
                      v134 = v130[2];
                      v133 = v130[3];
                      v135 = v130[4];
                      v136 = v130[5];
                      v137 = v130[6];
                      if (v128)
                      {
                        v185 = v172;
                        v186 = v173;
                        v187 = v171;
                        v188 = v161;
                        v189 = v128;
                        v190 = v160;
                        v191 = v174;
                        if (v135)
                        {
                          v175 = v131;
                          v176 = v132;
                          LOBYTE(v177) = v134;
                          v178 = v133;
                          v179 = v135;
                          v180 = v136;
                          v181 = v137;
                          v138 = _s10FinanceKit7BarcodeV2eeoiySbAC_ACtFZ_0((uint64_t)&v185, (uint64_t)&v175);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v138 & 1) == 0)
                            return 0;
                          goto LABEL_65;
                        }
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else if (!v135)
                      {
LABEL_65:
                        v139 = v170;
                        sub_2331686A0(v89 + v91[22], v170, &qword_25604C7A0);
                        v140 = v169;
                        sub_2331686A0(v166 + v91[22], v169, &qword_25604C7A0);
                        v141 = (uint64_t)v165;
                        v142 = (uint64_t)&v165[*(int *)(v167 + 48)];
                        sub_2331686A0(v139, (uint64_t)v165, &qword_25604C7A0);
                        sub_2331686A0(v140, v142, &qword_25604C7A0);
                        v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48);
                        if (v143(v141, 1, v164) == 1)
                        {
                          sub_233168608(v169, &qword_25604C7A0);
                          sub_233168608(v170, &qword_25604C7A0);
                          if (v143(v142, 1, v164) == 1)
                          {
                            sub_233168608((uint64_t)v165, &qword_25604C7A0);
                            return 1;
                          }
                          v144 = &qword_25604CB30;
                        }
                        else
                        {
                          sub_2331686A0((uint64_t)v165, (uint64_t)v163, &qword_25604C7A0);
                          if (v143(v142, 1, v164) == 1)
                          {
                            v144 = &qword_25604CB30;
                          }
                          else
                          {
                            v145 = v142;
                            v146 = v162;
                            sub_233168580(v145, (uint64_t)v162, type metadata accessor for Order.Provider);
                            if ((*v163 == *v146 && v163[1] == v146[1] || (sub_23361F224() & 1) != 0)
                              && (v163[2] == v162[2] && v163[3] == v162[3] || (sub_23361F224() & 1) != 0)
                              && (v163[4] == v162[4] && v163[5] == v162[5] || (sub_23361F224() & 1) != 0))
                            {
                              v147 = v163;
                              v148 = v162;
                              v149 = MEMORY[0x234931620]((char *)v163 + *(int *)(v164 + 28), (char *)v162 + *(int *)(v164 + 28));
                              sub_233168500((uint64_t)v148, type metadata accessor for Order.Provider);
                              sub_233168608(v169, &qword_25604C7A0);
                              sub_233168608(v170, &qword_25604C7A0);
                              sub_233168500((uint64_t)v147, type metadata accessor for Order.Provider);
                              sub_233168608((uint64_t)v165, &qword_25604C7A0);
                              return (v149 & 1) != 0;
                            }
                            sub_233168500((uint64_t)v162, type metadata accessor for Order.Provider);
                            v144 = &qword_25604C7A0;
                          }
                          sub_233168608(v169, &qword_25604C7A0);
                          sub_233168608(v170, &qword_25604C7A0);
                          sub_233168500((uint64_t)v163, type metadata accessor for Order.Provider);
                        }
                        v104 = (uint64_t)v165;
                        v103 = v144;
                        goto LABEL_41;
                      }
                      sub_233364468(v131, v132, v134, v133, v135);
                      sub_2333BD360(v172, v173, v171, v161, v128);
                      sub_2333BD360(v131, v132, v134, v133, v135);
                      return 0;
                    }
                    v122 = v109;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  v185 = v122;
                  v186 = v110;
                  v187 = v112;
                  v188 = v171;
                  v189 = v114;
                  v190 = v172;
                  v191 = v116;
                  v192 = v173;
                  v193 = v118;
                  v194 = v174;
                  v195 = v155;
                  v196 = v120;
                  v197 = v156;
                  v198 = v157;
                  v199 = v158;
                  v200 = v159;
                  v201 = v160;
                  v202 = v161;
                  v203 = v154;
                  v204 = v121;
                  sub_233270458(v155, v120);
                  v101 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2332705EC;
                  goto LABEL_37;
                }
              }
              else
              {
                v102 = v172;
                sub_2331686A0(v92, v172, &qword_25604C798);
                if (v94(v93, 1, v95) != 1)
                {
                  v105 = v171;
                  sub_233168580(v93, v171, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
                  v106 = static Order.ReturnInfo.== infix(_:_:)(v102, v105);
                  sub_233168500(v105, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
                  sub_233168608((uint64_t)v25, &qword_25604C798);
                  sub_233168608((uint64_t)v27, &qword_25604C798);
                  sub_233168500(v102, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
                  sub_233168608(v92, &qword_25604C798);
                  if ((v106 & 1) == 0)
                    return 0;
                  goto LABEL_43;
                }
                sub_233168608((uint64_t)v25, &qword_25604C798);
                sub_233168608((uint64_t)v27, &qword_25604C798);
                sub_233168500(v102, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
              }
              v103 = &qword_25604CB38;
              v104 = v92;
LABEL_41:
              sub_233168608(v104, v103);
              return 0;
            }
            v96 = v72;
            v97 = v73;
            v174 = v83;
            v173 = v82;
            v172 = 0;
            v171 = v80;
            v170 = v79;
            v98 = v78;
            v99 = v76;
            v100 = v77;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v77 = v100;
            v76 = v99;
            v78 = v98;
            v79 = v170;
            v80 = v171;
            v81 = v172;
            v82 = v173;
            v83 = v174;
            v73 = v97;
            v65 = v161;
            v66 = v157;
            v68 = v158;
            v67 = v159;
            v69 = v160;
            v72 = v96;
            v71 = v88;
          }
          else if (!v81)
          {
            goto LABEL_32;
          }
          v185 = v65;
          v186 = v66;
          v187 = v68;
          v188 = v67;
          v189 = v69;
          v190 = v70;
          v191 = v72;
          v192 = v71;
          v193 = v73;
          v194 = v74;
          v195 = v77;
          v196 = v76;
          v197 = v78;
          v198 = v79;
          v199 = v80;
          v200 = v81;
          v201 = v82;
          v202 = v83;
          v203 = v84;
          v204 = v85;
          sub_2333BD2B0(v77, v76, v78, v79, v80, v81);
          v101 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2333BD308;
LABEL_37:
          sub_2333C3E78(&v185, v101);
        }
      }
      else if (!v58)
      {
        goto LABEL_25;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_2333BE56C()
{
  unint64_t result;

  result = qword_25604C7B0;
  if (!qword_25604C7B0)
  {
    result = MEMORY[0x234934494](&unk_2336425F4, &type metadata for Order.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C7B0);
  }
  return result;
}

unint64_t sub_2333BE5B0()
{
  unint64_t result;

  result = qword_25604C7C0;
  if (!qword_25604C7C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderChangeNotificationsValue, &type metadata for OrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_25604C7C0);
  }
  return result;
}

unint64_t sub_2333BE5F4()
{
  unint64_t result;

  result = qword_25604C7C8;
  if (!qword_25604C7C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderStatus, &type metadata for OrderStatus);
    atomic_store(result, (unint64_t *)&qword_25604C7C8);
  }
  return result;
}

unint64_t sub_2333BE638()
{
  unint64_t result;

  result = qword_25604C7D0;
  if (!qword_25604C7D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPayment, &type metadata for OrderPayment);
    atomic_store(result, (unint64_t *)&qword_25604C7D0);
  }
  return result;
}

unint64_t sub_2333BE67C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C7E8;
  if (!qword_25604C7E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C7E0);
    v2 = sub_233167C58(&qword_25604C7F0, (uint64_t (*)(uint64_t))type metadata accessor for Order.Return, (uint64_t)&protocol conformance descriptor for Order.Return);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C7E8);
  }
  return result;
}

unint64_t sub_2333BE6F8()
{
  unint64_t result;

  result = qword_25604C7F8;
  if (!qword_25604C7F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.Customer, &type metadata for Order.Customer);
    atomic_store(result, (unint64_t *)&qword_25604C7F8);
  }
  return result;
}

unint64_t sub_2333BE73C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C808;
  if (!qword_25604C808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C800);
    v2 = sub_233167C58(&qword_25604C810, (uint64_t (*)(uint64_t))type metadata accessor for Order.Fulfillment, (uint64_t)&protocol conformance descriptor for Order.Fulfillment);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C808);
  }
  return result;
}

unint64_t sub_2333BE7B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C820;
  if (!qword_25604C820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C818);
    v2 = sub_233167C58(&qword_25604C828, (uint64_t (*)(uint64_t))type metadata accessor for Order.Application, (uint64_t)&protocol conformance descriptor for Order.Application);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C820);
  }
  return result;
}

unint64_t sub_2333BE834()
{
  unint64_t result;

  result = qword_25604C830;
  if (!qword_25604C830)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Barcode, &type metadata for Barcode);
    atomic_store(result, (unint64_t *)&qword_25604C830);
  }
  return result;
}

unint64_t sub_2333BE878()
{
  unint64_t result;

  result = qword_25604C850;
  if (!qword_25604C850)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderChangeNotificationsValue, &type metadata for OrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_25604C850);
  }
  return result;
}

unint64_t sub_2333BE8BC()
{
  unint64_t result;

  result = qword_25604C858;
  if (!qword_25604C858)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderStatus, &type metadata for OrderStatus);
    atomic_store(result, (unint64_t *)&qword_25604C858);
  }
  return result;
}

unint64_t sub_2333BE900()
{
  unint64_t result;

  result = qword_25604C860;
  if (!qword_25604C860)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPayment, &type metadata for OrderPayment);
    atomic_store(result, (unint64_t *)&qword_25604C860);
  }
  return result;
}

unint64_t sub_2333BE944()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C870;
  if (!qword_25604C870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C7E0);
    v2 = sub_233167C58(&qword_25604C878, (uint64_t (*)(uint64_t))type metadata accessor for Order.Return, (uint64_t)&protocol conformance descriptor for Order.Return);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C870);
  }
  return result;
}

unint64_t sub_2333BE9C0()
{
  unint64_t result;

  result = qword_25604C880;
  if (!qword_25604C880)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.Customer, &type metadata for Order.Customer);
    atomic_store(result, (unint64_t *)&qword_25604C880);
  }
  return result;
}

unint64_t sub_2333BEA04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C888;
  if (!qword_25604C888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C800);
    v2 = sub_233167C58(&qword_25604C890, (uint64_t (*)(uint64_t))type metadata accessor for Order.Fulfillment, (uint64_t)&protocol conformance descriptor for Order.Fulfillment);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C888);
  }
  return result;
}

unint64_t sub_2333BEA80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25604C898;
  if (!qword_25604C898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C818);
    v2 = sub_233167C58(&qword_25604C8A0, (uint64_t (*)(uint64_t))type metadata accessor for Order.Application, (uint64_t)&protocol conformance descriptor for Order.Application);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25604C898);
  }
  return result;
}

unint64_t sub_2333BEAFC()
{
  unint64_t result;

  result = qword_25604C8A8;
  if (!qword_25604C8A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Barcode, &type metadata for Barcode);
    atomic_store(result, (unint64_t *)&qword_25604C8A8);
  }
  return result;
}

unint64_t sub_2333BEB40()
{
  unint64_t result;

  result = qword_25604C8D0;
  if (!qword_25604C8D0)
  {
    result = MEMORY[0x234934494](&unk_2336425A4, &type metadata for OrderChangeNotificationsValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C8D0);
  }
  return result;
}

unint64_t sub_2333BEB84()
{
  unint64_t result;

  result = qword_25604C8D8;
  if (!qword_25604C8D8)
  {
    result = MEMORY[0x234934494](&unk_233642554, &type metadata for OrderChangeNotificationsValue.DisabledIfAppInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C8D8);
  }
  return result;
}

unint64_t sub_2333BEBC8()
{
  unint64_t result;

  result = qword_25604C8E0;
  if (!qword_25604C8E0)
  {
    result = MEMORY[0x234934494](&unk_233642504, &type metadata for OrderChangeNotificationsValue.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C8E0);
  }
  return result;
}

unint64_t sub_2333BEC0C()
{
  unint64_t result;

  result = qword_25604C908;
  if (!qword_25604C908)
  {
    result = MEMORY[0x234934494](&unk_2336424B4, &type metadata for FullyQualifiedOrderIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604C908);
  }
  return result;
}

uint64_t sub_2333BEC50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = type metadata accessor for RawOrderReturn();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.Return();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v19 = v2;
    v21 = MEMORY[0x24BEE4AF8];
    sub_2332740FC(0, v13, 0);
    v14 = v21;
    v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v20 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_2331684BC(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      swift_retain();
      Order.Return.init(_:bundle:)((uint64_t)v8, a2, (uint64_t)v12);
      v21 = v14;
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2332740FC(v16 > 1, v17 + 1, 1);
        v14 = v21;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      sub_233168580((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
      v15 += v20;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_2333BEDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a2;
  v3 = type metadata accessor for RawOrderPickupFulfillment();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v39 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)&v34 - v6;
  v7 = type metadata accessor for RawOrderShippingFulfillment();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v34 - v10;
  v43 = type metadata accessor for RawOrderFulfillment();
  v11 = *(_QWORD *)(v43 - 8);
  v12 = MEMORY[0x24BDAC7A8](v43);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for Order.Fulfillment();
  v41 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v45 = (uint64_t)&v34 - v21;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = MEMORY[0x24BEE4AF8];
  if (v22)
  {
    v46 = MEMORY[0x24BEE4AF8];
    sub_2332740D0(0, v22, 0);
    v24 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v40 = *(_QWORD *)(v11 + 72);
    v35 = v14;
    do
    {
      sub_2331684BC(v24, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      sub_2331684BC((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = v38;
        sub_233168580((uint64_t)v14, v38, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v26 = v39;
        sub_2331684BC(v25, v39, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v27 = v44;
        swift_retain();
        Order.PickupFulfillment.init(_:bundle:)(v26, v27, (uint64_t)v20);
        sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
        v14 = v35;
        sub_233168500(v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      }
      else
      {
        v28 = v36;
        sub_233168580((uint64_t)v14, v36, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v29 = v37;
        sub_2331684BC(v28, v37, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v30 = v44;
        swift_retain();
        Order.ShippingFulfillment.init(_:bundle:)(v29, v30, (uint64_t)v20);
        sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
        sub_233168500(v28, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      }
      swift_storeEnumTagMultiPayload();
      sub_233168580((uint64_t)v20, v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      v23 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2332740D0(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v46;
      }
      v32 = *(_QWORD *)(v23 + 16);
      v31 = *(_QWORD *)(v23 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_2332740D0(v31 > 1, v32 + 1, 1);
        v23 = v46;
      }
      *(_QWORD *)(v23 + 16) = v32 + 1;
      sub_233168580(v45, v23+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v32, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      v24 += v40;
      --v22;
    }
    while (v22);
  }
  return v23;
}

uint64_t sub_2333BF1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2333BF224()
{
  unint64_t result;

  result = qword_25604C920;
  if (!qword_25604C920)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderChangeNotificationsValue, &type metadata for OrderChangeNotificationsValue);
    atomic_store(result, (unint64_t *)&qword_25604C920);
  }
  return result;
}

unint64_t sub_2333BF26C()
{
  unint64_t result;

  result = qword_25604C928;
  if (!qword_25604C928)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedOrderIdentifier, &type metadata for FullyQualifiedOrderIdentifier);
    atomic_store(result, (unint64_t *)&qword_25604C928);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for Order(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  int *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v7;
    v8 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v8;
    v9 = a2[6];
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v9;
    v10 = (int *)type metadata accessor for Merchant();
    v11 = v10[8];
    v120 = (char *)a2 + v11;
    v122 = &v6[v11];
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v14;
    swift_bridgeObjectRetain();
    v14(v122, v120, v12);
    v17 = v10[9];
    v18 = &v6[v17];
    v19 = (char *)a2 + v17;
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v20((char *)a2 + v17, 1, v12))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v16(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v22 = v10[10];
    v23 = &v6[v22];
    v24 = (char *)a2 + v22;
    v116 = v20;
    v121 = (void (*)(char *, uint64_t, uint64_t))v16;
    v123 = v12;
    v114 = v13;
    if (v20((char *)a2 + v22, 1, v12))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v16(v23, v24, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
    }
    v26 = v10[11];
    v27 = &v6[v26];
    v28 = (char **)((char *)a2 + v26);
    v29 = v28[1];
    *(_QWORD *)v27 = *v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v10[12];
    v31 = &v6[v30];
    v32 = (char **)((char *)a2 + v30);
    v33 = v32[1];
    *(_QWORD *)v31 = *v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = a3[5];
    v35 = a3[6];
    v36 = &v6[v34];
    v37 = (char **)((char *)a2 + v34);
    v38 = v37[1];
    *(_QWORD *)v36 = *v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = v37[3];
    *((_QWORD *)v36 + 2) = v37[2];
    *((_QWORD *)v36 + 3) = v39;
    v40 = &v6[v35];
    v41 = (char **)((char *)a2 + v35);
    v42 = v41[1];
    *(_QWORD *)v40 = *v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = a3[8];
    v6[a3[7]] = *((_BYTE *)a2 + a3[7]);
    v6[v43] = *((_BYTE *)a2 + v43);
    v44 = a3[9];
    v45 = a3[10];
    v46 = &v6[v44];
    v47 = (char **)((char *)a2 + v44);
    v48 = v47[1];
    *(_QWORD *)v46 = *v47;
    *((_QWORD *)v46 + 1) = v48;
    v117 = &v6[v45];
    v118 = (uint64_t)a2 + v45;
    v49 = sub_23361D634();
    v115 = *(_QWORD *)(v49 - 8);
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = a3;
    swift_bridgeObjectRetain();
    v50(v117, v118, v49);
    v119 = v49;
    v50(&v6[v51[11]], (uint64_t)a2 + v51[11], v49);
    v52 = a3[12];
    v53 = &v6[v52];
    v54 = (uint64_t)a2 + v52;
    v55 = *(_QWORD *)(v54 + 40);
    if (v55)
    {
      *v53 = *(_BYTE *)v54;
      *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
      *((_DWORD *)v53 + 6) = *(_DWORD *)(v54 + 24);
      *((_QWORD *)v53 + 4) = *(_QWORD *)(v54 + 32);
      *((_QWORD *)v53 + 5) = v55;
      v56 = *(_QWORD *)(v54 + 56);
      *((_QWORD *)v53 + 6) = *(_QWORD *)(v54 + 48);
      *((_QWORD *)v53 + 7) = v56;
      v57 = *(_QWORD *)(v54 + 72);
      *((_QWORD *)v53 + 8) = *(_QWORD *)(v54 + 64);
      *((_QWORD *)v53 + 9) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v58 = *(_OWORD *)(v54 + 48);
      *((_OWORD *)v53 + 2) = *(_OWORD *)(v54 + 32);
      *((_OWORD *)v53 + 3) = v58;
      *((_OWORD *)v53 + 4) = *(_OWORD *)(v54 + 64);
      v59 = *(_OWORD *)(v54 + 16);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v59;
    }
    v60 = a3[13];
    v61 = &v6[v60];
    v62 = (char *)a2 + v60;
    v63 = (int *)type metadata accessor for Order.ReturnInfo();
    v64 = *((_QWORD *)v63 - 1);
    v65 = v121;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v64 + 48))(v62, 1, v63))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v121(v61, (uint64_t)v62, v123);
      v67 = v63[5];
      v68 = &v61[v67];
      v69 = &v62[v67];
      v70 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v70;
      v71 = v63[6];
      v72 = &v61[v71];
      v73 = &v62[v71];
      swift_bridgeObjectRetain();
      if (v116(v73, 1, v123))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v121(v72, (uint64_t)v73, v123);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v72, 0, 1, v123);
      }
      v75 = v63[7];
      v76 = &v61[v75];
      v77 = &v62[v75];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(&v62[v75], 1, v119))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v50(v76, (uint64_t)v77, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v76, 0, 1, v119);
      }
      v61[v63[8]] = v62[v63[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v64 + 56))(v61, 0, 1, v63);
      v65 = v121;
      v51 = a3;
    }
    v79 = v51[15];
    *(_QWORD *)&v6[v51[14]] = *(char **)((char *)a2 + v51[14]);
    v80 = &v6[v79];
    v81 = (uint64_t)a2 + v79;
    swift_bridgeObjectRetain();
    v65(v80, v81, v123);
    v82 = v51[16];
    v83 = &v6[v82];
    v84 = (uint64_t)a2 + v82;
    v85 = *(_QWORD *)(v84 + 8);
    if (v85 == 1)
    {
      v86 = *(_OWORD *)(v84 + 48);
      *((_OWORD *)v83 + 2) = *(_OWORD *)(v84 + 32);
      *((_OWORD *)v83 + 3) = v86;
      *((_OWORD *)v83 + 4) = *(_OWORD *)(v84 + 64);
      v87 = *(_OWORD *)(v84 + 16);
      *(_OWORD *)v83 = *(_OWORD *)v84;
      *((_OWORD *)v83 + 1) = v87;
    }
    else
    {
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v88 = *(_QWORD *)(v84 + 24);
      *((_QWORD *)v83 + 2) = *(_QWORD *)(v84 + 16);
      *((_QWORD *)v83 + 3) = v88;
      v89 = *(_QWORD *)(v84 + 40);
      *((_QWORD *)v83 + 4) = *(_QWORD *)(v84 + 32);
      *((_QWORD *)v83 + 5) = v89;
      v90 = *(_QWORD *)(v84 + 56);
      *((_QWORD *)v83 + 6) = *(_QWORD *)(v84 + 48);
      *((_QWORD *)v83 + 7) = v90;
      v91 = *(_QWORD *)(v84 + 72);
      *((_QWORD *)v83 + 8) = *(_QWORD *)(v84 + 64);
      *((_QWORD *)v83 + 9) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v92 = v51[18];
    *(_QWORD *)&v6[v51[17]] = *(char **)((char *)a2 + v51[17]);
    *(_QWORD *)&v6[v92] = *(char **)((char *)a2 + v92);
    v93 = v51[20];
    *(_QWORD *)&v6[v51[19]] = *(char **)((char *)a2 + v51[19]);
    *(_QWORD *)&v6[v93] = *(char **)((char *)a2 + v93);
    v94 = v51[21];
    v95 = &v6[v94];
    v96 = (uint64_t)a2 + v94;
    v97 = *(uint64_t *)((char *)a2 + v94 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v97)
    {
      v98 = *(_QWORD *)(v96 + 8);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v98;
      v95[16] = *(_BYTE *)(v96 + 16);
      *((_QWORD *)v95 + 3) = *(_QWORD *)(v96 + 24);
      *((_QWORD *)v95 + 4) = v97;
      v99 = *(_QWORD *)(v96 + 48);
      *((_QWORD *)v95 + 5) = *(_QWORD *)(v96 + 40);
      *((_QWORD *)v95 + 6) = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v100 = *(_OWORD *)(v96 + 16);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_OWORD *)v95 + 1) = v100;
      *((_OWORD *)v95 + 2) = *(_OWORD *)(v96 + 32);
      *((_QWORD *)v95 + 6) = *(_QWORD *)(v96 + 48);
    }
    v101 = v51[22];
    v102 = &v6[v101];
    v103 = (char **)((char *)a2 + v101);
    v104 = type metadata accessor for Order.Provider(0);
    v105 = *(_QWORD *)(v104 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
    {
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      v107 = v103[1];
      *(_QWORD *)v102 = *v103;
      *((_QWORD *)v102 + 1) = v107;
      v108 = v103[3];
      *((_QWORD *)v102 + 2) = v103[2];
      *((_QWORD *)v102 + 3) = v108;
      v109 = v103[5];
      *((_QWORD *)v102 + 4) = v103[4];
      *((_QWORD *)v102 + 5) = v109;
      v110 = *(int *)(v104 + 28);
      v111 = &v102[v110];
      v112 = (char *)v103 + v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v111, (uint64_t)v112, v123);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
    }
  }
  return v6;
}

uint64_t destroy for Order(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Merchant();
  v5 = (char *)a1 + v4[8];
  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v5, v6);
  v8 = (char *)a1 + v4[9];
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v9(v8, 1, v6))
    v22(v8, v6);
  v10 = (char *)a1 + v4[10];
  if (!v9(v10, 1, v6))
    v22(v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (char *)a1 + a2[10];
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14((char *)a1 + a2[11], v12);
  if (*(id *)((char *)a1 + a2[12] + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = (char *)a1 + a2[13];
  v16 = type metadata accessor for Order.ReturnInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v22(v15, v6);
    swift_bridgeObjectRelease();
    v17 = &v15[*(int *)(v16 + 24)];
    if (!v9(v17, 1, v6))
      v22(v17, v6);
    v18 = &v15[*(int *)(v16 + 28)];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12))
      v14(v18, v12);
  }
  swift_bridgeObjectRelease();
  v22((char *)a1 + a2[15], v6);
  if (*(id *)((char *)a1 + a2[16] + 8) != (id)1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(id *)((char *)a1 + a2[21] + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v19 = (char *)a1 + a2[22];
  v20 = type metadata accessor for Order.Provider(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v22)(&v19[*(int *)(v20 + 28)], v6);
  }
  return result;
}

_QWORD *initializeWithCopy for Order(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, const void *, uint64_t);
  id v14;
  void (*v15)(char *, const void *, uint64_t);
  uint64_t v16;
  char *v17;
  const void *v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  const void *v119;
  void (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  uint64_t v122;

  v6 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v7 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v7;
  v8 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  a1[6] = *(_QWORD *)(a2 + 48);
  v9 = (int *)type metadata accessor for Merchant();
  v10 = v9[8];
  v119 = (const void *)(a2 + v10);
  v121 = (char *)a1 + v10;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, const void *, uint64_t))(v12 + 16);
  v14 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v13;
  v13(v121, v119, v11);
  v16 = v9[9];
  v17 = (char *)a1 + v16;
  v18 = (const void *)(a2 + v16);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v19(a2 + v16, 1, v11))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  v21 = v9[10];
  v22 = (char *)a1 + v21;
  v23 = (const void *)(a2 + v21);
  v115 = (unsigned int (*)(char *, uint64_t, uint64_t))v19;
  v120 = (void (*)(char *, uint64_t, uint64_t))v15;
  v122 = v11;
  v113 = v12;
  if (v19(a2 + v21, 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v15(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v9[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = v9[12];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = a3[5];
  v34 = a3[6];
  v35 = (_QWORD *)((char *)a1 + v33);
  v36 = (_QWORD *)(a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v36[3];
  v35[2] = v36[2];
  v35[3] = v38;
  v39 = (_QWORD *)((char *)a1 + v34);
  v40 = (_QWORD *)(a2 + v34);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *((_BYTE *)a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[9];
  v44 = a3[10];
  v45 = (_QWORD *)((char *)a1 + v43);
  v46 = (_QWORD *)(a2 + v43);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v116 = (char *)a1 + v44;
  v117 = a2 + v44;
  v48 = sub_23361D634();
  v114 = *(_QWORD *)(v48 - 8);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49(v116, v117, v48);
  v118 = v48;
  v49((char *)a1 + v50[11], a2 + v50[11], v48);
  v51 = a3[12];
  v52 = (char *)a1 + v51;
  v53 = (char *)(a2 + v51);
  v54 = *((_QWORD *)v53 + 5);
  if (v54)
  {
    *v52 = *v53;
    *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
    *((_DWORD *)v52 + 6) = *((_DWORD *)v53 + 6);
    *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    *((_QWORD *)v52 + 5) = v54;
    v55 = *((_QWORD *)v53 + 7);
    *((_QWORD *)v52 + 6) = *((_QWORD *)v53 + 6);
    *((_QWORD *)v52 + 7) = v55;
    v56 = *((_QWORD *)v53 + 9);
    *((_QWORD *)v52 + 8) = *((_QWORD *)v53 + 8);
    *((_QWORD *)v52 + 9) = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v57 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v57;
    *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
    v58 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v58;
  }
  v59 = a3[13];
  v60 = (char *)a1 + v59;
  v61 = (char *)(a2 + v59);
  v62 = (int *)type metadata accessor for Order.ReturnInfo();
  v63 = *((_QWORD *)v62 - 1);
  v64 = v120;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v120(v60, (uint64_t)v61, v122);
    v66 = v62[5];
    v67 = &v60[v66];
    v68 = &v61[v66];
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    v70 = v62[6];
    v71 = &v60[v70];
    v72 = &v61[v70];
    swift_bridgeObjectRetain();
    if (v115(v72, 1, v122))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v120(v71, (uint64_t)v72, v122);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v71, 0, 1, v122);
    }
    v74 = v62[7];
    v75 = &v60[v74];
    v76 = &v61[v74];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(&v61[v74], 1, v118))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      v49(v75, (uint64_t)v76, v118);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v75, 0, 1, v118);
    }
    v60[v62[8]] = v61[v62[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v63 + 56))(v60, 0, 1, v62);
    v64 = v120;
    v50 = a3;
  }
  v78 = v50[15];
  *(_QWORD *)((char *)a1 + v50[14]) = *(_QWORD *)(a2 + v50[14]);
  v79 = (char *)a1 + v78;
  v80 = a2 + v78;
  swift_bridgeObjectRetain();
  v64(v79, v80, v122);
  v81 = v50[16];
  v82 = (char *)a1 + v81;
  v83 = a2 + v81;
  v84 = *(_QWORD *)(v83 + 8);
  if (v84 == 1)
  {
    v85 = *(_OWORD *)(v83 + 48);
    *((_OWORD *)v82 + 2) = *(_OWORD *)(v83 + 32);
    *((_OWORD *)v82 + 3) = v85;
    *((_OWORD *)v82 + 4) = *(_OWORD *)(v83 + 64);
    v86 = *(_OWORD *)(v83 + 16);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v86;
  }
  else
  {
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v87 = *(_QWORD *)(v83 + 24);
    *((_QWORD *)v82 + 2) = *(_QWORD *)(v83 + 16);
    *((_QWORD *)v82 + 3) = v87;
    v88 = *(_QWORD *)(v83 + 40);
    *((_QWORD *)v82 + 4) = *(_QWORD *)(v83 + 32);
    *((_QWORD *)v82 + 5) = v88;
    v89 = *(_QWORD *)(v83 + 56);
    *((_QWORD *)v82 + 6) = *(_QWORD *)(v83 + 48);
    *((_QWORD *)v82 + 7) = v89;
    v90 = *(_QWORD *)(v83 + 72);
    *((_QWORD *)v82 + 8) = *(_QWORD *)(v83 + 64);
    *((_QWORD *)v82 + 9) = v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v91 = v50[18];
  *(_QWORD *)((char *)a1 + v50[17]) = *(_QWORD *)(a2 + v50[17]);
  *(_QWORD *)((char *)a1 + v91) = *(_QWORD *)(a2 + v91);
  v92 = v50[20];
  *(_QWORD *)((char *)a1 + v50[19]) = *(_QWORD *)(a2 + v50[19]);
  *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)(a2 + v92);
  v93 = v50[21];
  v94 = (char *)a1 + v93;
  v95 = a2 + v93;
  v96 = *(_QWORD *)(a2 + v93 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v96)
  {
    v97 = *(_QWORD *)(v95 + 8);
    *(_QWORD *)v94 = *(_QWORD *)v95;
    *((_QWORD *)v94 + 1) = v97;
    v94[16] = *(_BYTE *)(v95 + 16);
    *((_QWORD *)v94 + 3) = *(_QWORD *)(v95 + 24);
    *((_QWORD *)v94 + 4) = v96;
    v98 = *(_QWORD *)(v95 + 48);
    *((_QWORD *)v94 + 5) = *(_QWORD *)(v95 + 40);
    *((_QWORD *)v94 + 6) = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v99 = *(_OWORD *)(v95 + 16);
    *(_OWORD *)v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v99;
    *((_OWORD *)v94 + 2) = *(_OWORD *)(v95 + 32);
    *((_QWORD *)v94 + 6) = *(_QWORD *)(v95 + 48);
  }
  v100 = v50[22];
  v101 = (_QWORD *)((char *)a1 + v100);
  v102 = (_QWORD *)(a2 + v100);
  v103 = type metadata accessor for Order.Provider(0);
  v104 = *(_QWORD *)(v103 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    v106 = v102[1];
    *v101 = *v102;
    v101[1] = v106;
    v107 = v102[3];
    v101[2] = v102[2];
    v101[3] = v107;
    v108 = v102[5];
    v101[4] = v102[4];
    v101[5] = v108;
    v109 = *(int *)(v103 + 28);
    v110 = (char *)v101 + v109;
    v111 = (char *)v102 + v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(v110, (uint64_t)v111, v122);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
  }
  return a1;
}

uint64_t assignWithCopy for Order(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, int *);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  unsigned int v81;
  size_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  __int128 *v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(_QWORD *, uint64_t, uint64_t);
  int v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v124;
  char *v125;
  uint64_t (*v126)(void);
  int v127;
  int v128;
  size_t v129;
  char *v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  int v133;
  char *v134;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  unsigned int (*v137)(char *, uint64_t, uint64_t);
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for Merchant();
  v10 = v9[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D340();
  v14 = *(_QWORD *)(v13 - 8);
  v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
  v142(v11, v12, v13);
  v15 = v9[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v19 = v18(a1 + v15, 1, v13);
  v20 = v18((uint64_t)v17, 1, v13);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v16, v17, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v142((uint64_t)v16, (uint64_t)v17, v13);
LABEL_7:
  v22 = v9[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = v18(a1 + v22, 1, v13);
  v26 = v18((uint64_t)v24, 1, v13);
  v137 = (unsigned int (*)(char *, uint64_t, uint64_t))v18;
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v23, v24, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v23, v13);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  v142((uint64_t)v23, (uint64_t)v24, v13);
LABEL_13:
  v28 = v9[11];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = v9[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[5];
  v35 = (_QWORD *)(a1 + v34);
  v36 = a2 + v34;
  *v35 = *(_QWORD *)(a2 + v34);
  v35[1] = *(_QWORD *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[2] = *(_QWORD *)(v36 + 16);
  v35[3] = *(_QWORD *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[6];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v40 = a3[9];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = a3[10];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = sub_23361D634();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24);
  v48(v44, v45, v46);
  __dst = (void (*)(char *, char *, uint64_t))v48;
  v48(a1 + a3[11], a2 + a3[11], v46);
  v49 = a3[12];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = *(_QWORD *)(a1 + v49 + 40);
  v53 = *(_QWORD *)(a2 + v49 + 40);
  v140 = v14;
  v141 = v13;
  v139 = v47;
  if (v52)
  {
    if (v53)
    {
      *(_BYTE *)v50 = *(_BYTE *)v51;
      *(_DWORD *)(v50 + 8) = *(_DWORD *)(v51 + 8);
      *(_WORD *)(v50 + 12) = *(_WORD *)(v51 + 12);
      *(_WORD *)(v50 + 14) = *(_WORD *)(v51 + 14);
      *(_WORD *)(v50 + 16) = *(_WORD *)(v51 + 16);
      *(_WORD *)(v50 + 18) = *(_WORD *)(v51 + 18);
      *(_WORD *)(v50 + 20) = *(_WORD *)(v51 + 20);
      *(_WORD *)(v50 + 22) = *(_WORD *)(v51 + 22);
      *(_WORD *)(v50 + 24) = *(_WORD *)(v51 + 24);
      *(_WORD *)(v50 + 26) = *(_WORD *)(v51 + 26);
      *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
      *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333C1270(v50);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v55 = *(_OWORD *)(v51 + 64);
      v57 = *(_OWORD *)(v51 + 16);
      v56 = *(_OWORD *)(v51 + 32);
      *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
      *(_OWORD *)(v50 + 64) = v55;
      *(_OWORD *)(v50 + 16) = v57;
      *(_OWORD *)(v50 + 32) = v56;
    }
  }
  else if (v53)
  {
    *(_BYTE *)v50 = *(_BYTE *)v51;
    v54 = *(_OWORD *)(v51 + 8);
    *(_DWORD *)(v50 + 24) = *(_DWORD *)(v51 + 24);
    *(_OWORD *)(v50 + 8) = v54;
    *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
    *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
    *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
    *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
    *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
    *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
    v58 = *(_OWORD *)(v51 + 16);
    v59 = *(_OWORD *)(v51 + 32);
    v60 = *(_OWORD *)(v51 + 64);
    *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
    *(_OWORD *)(v50 + 64) = v60;
    *(_OWORD *)(v50 + 16) = v58;
    *(_OWORD *)(v50 + 32) = v59;
  }
  v61 = a3[13];
  v62 = (char *)(a1 + v61);
  v63 = (char *)(a2 + v61);
  v64 = (int *)type metadata accessor for Order.ReturnInfo();
  v65 = *((_QWORD *)v64 - 1);
  v66 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      v132 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
      v132(v62, v63, v141);
      v69 = v64[5];
      v70 = &v62[v69];
      v71 = &v63[v69];
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
      v72 = v64[6];
      __dsta = &v62[v72];
      v73 = &v63[v72];
      swift_bridgeObjectRetain();
      if (v137(v73, 1, v141))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dsta, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v132(__dsta, v73, v141);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(__dsta, 0, 1, v141);
      }
      v84 = v64[7];
      v138 = &v62[v84];
      v85 = &v63[v84];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(&v63[v84], 1, v46))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v138, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, v85, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v138, 0, 1, v46);
      }
      v62[v64[8]] = v63[v64[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_37;
    }
LABEL_28:
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_37:
    v87 = v141;
    goto LABEL_38;
  }
  if (v68)
  {
    sub_233168500((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
    goto LABEL_28;
  }
  v142((uint64_t)v62, (uint64_t)v63, v141);
  v76 = v64[5];
  v77 = &v62[v76];
  v78 = &v63[v76];
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v79 = v64[6];
  v80 = &v63[v79];
  v131 = &v62[v79];
  v133 = ((uint64_t (*)(void))v137)();
  v81 = v137(v80, 1, v141);
  if (v133)
  {
    if (v81)
    {
      v82 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v83 = v131;
LABEL_62:
      memcpy(v83, v80, v82);
      goto LABEL_65;
    }
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v131, v80, v141);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v131, 0, 1, v141);
  }
  else
  {
    if (v81)
    {
      (*(void (**)(char *, uint64_t))(v140 + 8))(v131, v141);
      v82 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v83 = v131;
      goto LABEL_62;
    }
    v142((uint64_t)v131, (uint64_t)v80, v141);
  }
LABEL_65:
  v124 = v64[7];
  v125 = &v63[v124];
  v126 = *(uint64_t (**)(void))(v139 + 48);
  v134 = &v62[v124];
  v127 = v126();
  v128 = ((uint64_t (*)(char *, uint64_t, uint64_t))v126)(v125, 1, v46);
  if (v127)
  {
    if (!v128)
    {
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v134, v125, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v134, 0, 1, v46);
      goto LABEL_73;
    }
    v129 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v130 = v134;
  }
  else
  {
    if (!v128)
    {
      __dst(v134, v125, v46);
      goto LABEL_73;
    }
    (*(void (**)(char *, uint64_t))(v139 + 8))(v134, v46);
    v129 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v130 = v134;
  }
  memcpy(v130, v125, v129);
LABEL_73:
  v87 = v141;
  v62[v64[8]] = v63[v64[8]];
LABEL_38:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v142(a1 + a3[15], a2 + a3[15], v87);
  v88 = a3[16];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = *(_QWORD *)(a1 + v88 + 8);
  v92 = *(_QWORD *)(a2 + v88 + 8);
  if (v91 == 1)
  {
    if (v92 == 1)
    {
      *(_OWORD *)v89 = *(_OWORD *)v90;
      v93 = *(_OWORD *)(v90 + 16);
      v94 = *(_OWORD *)(v90 + 32);
      v95 = *(_OWORD *)(v90 + 64);
      *(_OWORD *)(v89 + 48) = *(_OWORD *)(v90 + 48);
      *(_OWORD *)(v89 + 64) = v95;
      *(_OWORD *)(v89 + 16) = v93;
      *(_OWORD *)(v89 + 32) = v94;
    }
    else
    {
      *(_QWORD *)v89 = *(_QWORD *)v90;
      *(_QWORD *)(v89 + 8) = *(_QWORD *)(v90 + 8);
      *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
      *(_QWORD *)(v89 + 24) = *(_QWORD *)(v90 + 24);
      *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
      *(_QWORD *)(v89 + 40) = *(_QWORD *)(v90 + 40);
      *(_QWORD *)(v89 + 48) = *(_QWORD *)(v90 + 48);
      *(_QWORD *)(v89 + 56) = *(_QWORD *)(v90 + 56);
      *(_QWORD *)(v89 + 64) = *(_QWORD *)(v90 + 64);
      *(_QWORD *)(v89 + 72) = *(_QWORD *)(v90 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v92 == 1)
  {
    sub_2333C12A4(v89);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    v96 = *(_OWORD *)(v90 + 64);
    v98 = *(_OWORD *)(v90 + 16);
    v97 = *(_OWORD *)(v90 + 32);
    *(_OWORD *)(v89 + 48) = *(_OWORD *)(v90 + 48);
    *(_OWORD *)(v89 + 64) = v96;
    *(_OWORD *)(v89 + 16) = v98;
    *(_OWORD *)(v89 + 32) = v97;
  }
  else
  {
    *(_QWORD *)v89 = *(_QWORD *)v90;
    *(_QWORD *)(v89 + 8) = *(_QWORD *)(v90 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
    *(_QWORD *)(v89 + 24) = *(_QWORD *)(v90 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
    *(_QWORD *)(v89 + 40) = *(_QWORD *)(v90 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v89 + 48) = *(_QWORD *)(v90 + 48);
    *(_QWORD *)(v89 + 56) = *(_QWORD *)(v90 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v89 + 64) = *(_QWORD *)(v90 + 64);
    *(_QWORD *)(v89 + 72) = *(_QWORD *)(v90 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v99 = a3[21];
  v100 = a1 + v99;
  v101 = (__int128 *)(a2 + v99);
  v102 = *(_QWORD *)(a1 + v99 + 32);
  v103 = *(_QWORD *)(a2 + v99 + 32);
  if (v102)
  {
    if (v103)
    {
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *(_QWORD *)(v100 + 8) = *((_QWORD *)v101 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v100 + 16) = *((_BYTE *)v101 + 16);
      *(_QWORD *)(v100 + 24) = *((_QWORD *)v101 + 3);
      *(_QWORD *)(v100 + 32) = *((_QWORD *)v101 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 40) = *((_QWORD *)v101 + 5);
      *(_QWORD *)(v100 + 48) = *((_QWORD *)v101 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333C12D8(v100);
      v105 = v101[1];
      v104 = v101[2];
      v106 = *v101;
      *(_QWORD *)(v100 + 48) = *((_QWORD *)v101 + 6);
      *(_OWORD *)(v100 + 16) = v105;
      *(_OWORD *)(v100 + 32) = v104;
      *(_OWORD *)v100 = v106;
    }
  }
  else if (v103)
  {
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *(_QWORD *)(v100 + 8) = *((_QWORD *)v101 + 1);
    *(_BYTE *)(v100 + 16) = *((_BYTE *)v101 + 16);
    *(_QWORD *)(v100 + 24) = *((_QWORD *)v101 + 3);
    *(_QWORD *)(v100 + 32) = *((_QWORD *)v101 + 4);
    *(_QWORD *)(v100 + 40) = *((_QWORD *)v101 + 5);
    *(_QWORD *)(v100 + 48) = *((_QWORD *)v101 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v107 = *v101;
    v108 = v101[1];
    v109 = v101[2];
    *(_QWORD *)(v100 + 48) = *((_QWORD *)v101 + 6);
    *(_OWORD *)(v100 + 16) = v108;
    *(_OWORD *)(v100 + 32) = v109;
    *(_OWORD *)v100 = v107;
  }
  v110 = a3[22];
  v111 = (_QWORD *)(a1 + v110);
  v112 = (_QWORD *)(a2 + v110);
  v113 = type metadata accessor for Order.Provider(0);
  v114 = *(_QWORD *)(v113 - 8);
  v115 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v114 + 48);
  v116 = v115(v111, 1, v113);
  v117 = v115(v112, 1, v113);
  if (!v116)
  {
    if (!v117)
    {
      *v111 = *v112;
      v111[1] = v112[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v111[2] = v112[2];
      v111[3] = v112[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v111[4] = v112[4];
      v111[5] = v112[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v142((uint64_t)v111 + *(int *)(v113 + 28), (uint64_t)v112 + *(int *)(v113 + 28), v87);
      return a1;
    }
    sub_233168500((uint64_t)v111, type metadata accessor for Order.Provider);
    goto LABEL_57;
  }
  if (v117)
  {
LABEL_57:
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    return a1;
  }
  *v111 = *v112;
  v111[1] = v112[1];
  v111[2] = v112[2];
  v111[3] = v112[3];
  v111[4] = v112[4];
  v111[5] = v112[5];
  v118 = *(int *)(v113 + 28);
  v119 = (char *)v111 + v118;
  v120 = (char *)v112 + v118;
  v121 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v121(v119, v120, v87);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
  return a1;
}

uint64_t sub_2333C1270(uint64_t a1)
{
  destroy for RawOrderPayment();
  return a1;
}

uint64_t sub_2333C12A4(uint64_t a1)
{
  destroy for RawOrderCustomer();
  return a1;
}

uint64_t sub_2333C12D8(uint64_t a1)
{
  destroy for FinanceTrialProvider.RolloutIdentifiers();
  return a1;
}

uint64_t initializeWithTake for Order(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _OWORD *v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v73;
  uint64_t v74;
  char *__dst;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for Merchant();
  v7 = v6[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = v6[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v16(a2 + v13, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v14, (uint64_t)v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v18 = v6[10];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v79 = v10;
  v80 = v12;
  v76 = v11;
  v77 = (unsigned int (*)(char *, uint64_t, uint64_t))v16;
  if (v16(a2 + v18, 1, v10))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v19, (uint64_t)v20, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  v22 = a3[5];
  v23 = a3[6];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  v27 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23361D634();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  v33(v29, v30, v31);
  v33(a1 + a3[11], a2 + a3[11], v31);
  v34 = a3[12];
  v35 = a3[13];
  v36 = (_OWORD *)(a1 + v34);
  v37 = (_OWORD *)(a2 + v34);
  v38 = v37[3];
  v36[2] = v37[2];
  v36[3] = v38;
  v36[4] = v37[4];
  v39 = v37[1];
  *v36 = *v37;
  v36[1] = v39;
  v40 = (char *)(a1 + v35);
  v41 = (char *)(a2 + v35);
  v42 = (int *)type metadata accessor for Order.ReturnInfo();
  v43 = *((_QWORD *)v42 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    v45 = v79;
    v46 = v80;
  }
  else
  {
    v73 = v43;
    v74 = v32;
    v45 = v79;
    v80((uint64_t)v40, (uint64_t)v41, v79);
    *(_OWORD *)&v40[v42[5]] = *(_OWORD *)&v41[v42[5]];
    v47 = v42[6];
    __dst = &v40[v47];
    v48 = &v41[v47];
    if (v77(&v41[v47], 1, v79))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v80((uint64_t)__dst, (uint64_t)v48, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v79);
    }
    v50 = v42[7];
    v78 = &v40[v50];
    v51 = &v41[v50];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(&v41[v50], 1, v31))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v78, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v33((uint64_t)v78, (uint64_t)v51, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v31);
    }
    v40[v42[8]] = v41[v42[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v73 + 56))(v40, 0, 1, v42);
    v46 = v80;
  }
  v53 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v46(a1 + v53, a2 + v53, v45);
  v54 = a3[16];
  v55 = a3[17];
  v56 = (_OWORD *)(a1 + v54);
  v57 = (_OWORD *)(a2 + v54);
  v58 = v57[3];
  v56[2] = v57[2];
  v56[3] = v58;
  v56[4] = v57[4];
  v59 = v57[1];
  *v56 = *v57;
  v56[1] = v59;
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  v60 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);
  v61 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_OWORD *)(v63 + 16);
  *(_OWORD *)v62 = *(_OWORD *)v63;
  *(_OWORD *)(v62 + 16) = v64;
  *(_OWORD *)(v62 + 32) = *(_OWORD *)(v63 + 32);
  v65 = a3[22];
  v66 = (_OWORD *)(a2 + v65);
  v67 = (_OWORD *)(a1 + v65);
  *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
  v68 = type metadata accessor for Order.Provider(0);
  v69 = *(_QWORD *)(v68 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v69 + 48))(v66, 1, v68))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
    memcpy(v67, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    v71 = v66[1];
    *v67 = *v66;
    v67[1] = v71;
    v67[2] = v66[2];
    v46((uint64_t)v67 + *(int *)(v68 + 28), (uint64_t)v66 + *(int *)(v68 + 28), v45);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v67, 0, 1, v68);
  }
  return a1;
}

uint64_t assignWithTake for Order(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int *v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, int *);
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  size_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t, uint64_t);
  int v118;
  int v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t (*v128)(void);
  int v129;
  int v130;
  size_t v131;
  char *v132;
  char *v133;
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  unsigned int (*v138)(char *, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, char *, uint64_t);
  _BYTE *__src;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for Merchant();
  v11 = v10[8];
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  v142 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 40);
  v142(v12, v13, v14);
  v16 = v10[9];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v20 = v19(a1 + v16, 1, v14);
  v21 = v19((uint64_t)v18, 1, v14);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 32))(v17, v18, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v142((uint64_t)v17, v18, v14);
LABEL_7:
  v23 = v10[10];
  v24 = (void *)(a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = v19(a1 + v23, 1, v14);
  v27 = v19((uint64_t)v25, 1, v14);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 32))(v24, v25, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v24, v14);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v142((uint64_t)v24, v25, v14);
LABEL_13:
  v29 = v10[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = v10[12];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[5];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (char *)a2 + v39;
  v42 = *(_QWORD *)((char *)a2 + v39 + 8);
  *v40 = *(_QWORD *)((char *)a2 + v39);
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v43 = *((_QWORD *)v41 + 3);
  v40[2] = *((_QWORD *)v41 + 2);
  v40[3] = v43;
  swift_bridgeObjectRelease();
  v44 = a3[6];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_BYTE *)(a1 + v49) = *((_BYTE *)a2 + v49);
  v50 = a3[9];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  v55 = a3[10];
  v56 = a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = sub_23361D634();
  v139 = *(_QWORD *)(v58 - 8);
  v59 = *(void (**)(uint64_t, char *, uint64_t))(v139 + 40);
  v59(v56, v57, v58);
  v59(a1 + a3[11], (char *)a2 + a3[11], v58);
  v60 = a3[12];
  v61 = a1 + v60;
  v62 = (char *)a2 + v60;
  v140 = v15;
  v141 = v14;
  __dst = (void (*)(char *, char *, uint64_t))v59;
  v138 = (unsigned int (*)(char *, uint64_t, uint64_t))v19;
  if (*(_QWORD *)(a1 + v60 + 40))
  {
    v63 = *((_QWORD *)v62 + 5);
    if (v63)
    {
      *(_BYTE *)v61 = *v62;
      *(_DWORD *)(v61 + 8) = *((_DWORD *)v62 + 2);
      *(_OWORD *)(v61 + 12) = *(_OWORD *)(v62 + 12);
      *(_QWORD *)(v61 + 32) = *((_QWORD *)v62 + 4);
      *(_QWORD *)(v61 + 40) = v63;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v61 + 48) = *((_QWORD *)v62 + 6);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v61 + 56) = *((_QWORD *)v62 + 7);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v61 + 64) = *((_QWORD *)v62 + 8);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v61 + 72) = *((_QWORD *)v62 + 9);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_2333C1270(v61);
  }
  v64 = *((_OWORD *)v62 + 3);
  *(_OWORD *)(v61 + 32) = *((_OWORD *)v62 + 2);
  *(_OWORD *)(v61 + 48) = v64;
  *(_OWORD *)(v61 + 64) = *((_OWORD *)v62 + 4);
  v65 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v65;
LABEL_18:
  v66 = a3[13];
  v67 = (char *)(a1 + v66);
  v68 = (char *)a2 + v66;
  v69 = (int *)type metadata accessor for Order.ReturnInfo();
  v70 = *((_QWORD *)v69 - 1);
  v71 = *(uint64_t (**)(char *, uint64_t, int *))(v70 + 48);
  v72 = v71(v67, 1, v69);
  __src = v68;
  v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      v134 = *(void (**)(char *, char *, uint64_t))(v140 + 32);
      v134(v67, v68, v141);
      *(_OWORD *)&v67[v69[5]] = *(_OWORD *)&v68[v69[5]];
      v74 = v69[6];
      __dsta = &v67[v74];
      v75 = &v68[v74];
      if (v138(&v68[v74], 1, v141))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dsta, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v134(__dsta, v75, v141);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(__dsta, 0, 1, v141);
      }
      v91 = v69[7];
      v92 = &v67[v91];
      v93 = &v68[v91];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(&v68[v91], 1, v58))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v92, v93, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v92, 0, 1, v58);
      }
      v67[v69[8]] = v68[v69[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_35;
    }
LABEL_24:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
LABEL_35:
    v78 = v141;
    goto LABEL_36;
  }
  if (v73)
  {
    sub_233168500((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for Order.ReturnInfo);
    goto LABEL_24;
  }
  v78 = v141;
  v142((uint64_t)v67, v68, v141);
  v79 = v69[5];
  v80 = &v67[v79];
  v81 = &v68[v79];
  v83 = *(_QWORD *)v81;
  v82 = *((_QWORD *)v81 + 1);
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v84 = v69[6];
  v85 = &v68[v84];
  v133 = &v67[v84];
  v86 = ((uint64_t (*)(void))v138)();
  v87 = v138(v85, 1, v141);
  if (v86)
  {
    v88 = v139;
    if (v87)
    {
      v89 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v90 = v133;
LABEL_56:
      memcpy(v90, v85, v89);
      goto LABEL_59;
    }
    (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v133, v85, v141);
    v88 = v139;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v133, 0, 1, v141);
  }
  else
  {
    v88 = v139;
    if (v87)
    {
      (*(void (**)(char *, uint64_t))(v140 + 8))(v133, v141);
      v89 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
      v90 = v133;
      goto LABEL_56;
    }
    v142((uint64_t)v133, v85, v141);
  }
LABEL_59:
  v126 = v69[7];
  v127 = &__src[v126];
  v128 = *(uint64_t (**)(void))(v88 + 48);
  v135 = &v67[v126];
  v129 = v128();
  v130 = ((uint64_t (*)(char *, uint64_t, uint64_t))v128)(v127, 1, v58);
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v135, v127, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v135, 0, 1, v58);
      goto LABEL_67;
    }
    v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v132 = v135;
  }
  else
  {
    if (!v130)
    {
      __dst(v135, v127, v58);
      goto LABEL_67;
    }
    (*(void (**)(char *, uint64_t))(v139 + 8))(v135, v58);
    v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
    v132 = v135;
  }
  memcpy(v132, v127, v131);
LABEL_67:
  v67[v69[8]] = __src[v69[8]];
LABEL_36:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  v142(a1 + a3[15], (char *)a2 + a3[15], v78);
  v95 = a3[16];
  v96 = a1 + v95;
  v97 = (char *)a2 + v95;
  if (*(_QWORD *)(a1 + v95 + 8) == 1)
  {
LABEL_39:
    v99 = *((_OWORD *)v97 + 3);
    *(_OWORD *)(v96 + 32) = *((_OWORD *)v97 + 2);
    *(_OWORD *)(v96 + 48) = v99;
    *(_OWORD *)(v96 + 64) = *((_OWORD *)v97 + 4);
    v100 = *((_OWORD *)v97 + 1);
    *(_OWORD *)v96 = *(_OWORD *)v97;
    *(_OWORD *)(v96 + 16) = v100;
    goto LABEL_41;
  }
  v98 = *((_QWORD *)v97 + 1);
  if (v98 == 1)
  {
    sub_2333C12A4(v96);
    goto LABEL_39;
  }
  *(_QWORD *)v96 = *(_QWORD *)v97;
  *(_QWORD *)(v96 + 8) = v98;
  swift_bridgeObjectRelease();
  v101 = *((_QWORD *)v97 + 3);
  *(_QWORD *)(v96 + 16) = *((_QWORD *)v97 + 2);
  *(_QWORD *)(v96 + 24) = v101;
  swift_bridgeObjectRelease();
  v102 = *((_QWORD *)v97 + 5);
  *(_QWORD *)(v96 + 32) = *((_QWORD *)v97 + 4);
  *(_QWORD *)(v96 + 40) = v102;
  swift_bridgeObjectRelease();
  v103 = *((_QWORD *)v97 + 7);
  *(_QWORD *)(v96 + 48) = *((_QWORD *)v97 + 6);
  *(_QWORD *)(v96 + 56) = v103;
  swift_bridgeObjectRelease();
  v104 = *((_QWORD *)v97 + 9);
  *(_QWORD *)(v96 + 64) = *((_QWORD *)v97 + 8);
  *(_QWORD *)(v96 + 72) = v104;
  swift_bridgeObjectRelease();
LABEL_41:
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
  swift_bridgeObjectRelease();
  v105 = a3[21];
  v106 = a1 + v105;
  v107 = (char *)a2 + v105;
  if (*(_QWORD *)(a1 + v105 + 32))
  {
    if (*((_QWORD *)v107 + 4))
    {
      v108 = *((_QWORD *)v107 + 1);
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *(_QWORD *)(v106 + 8) = v108;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v106 + 16) = v107[16];
      v109 = *((_QWORD *)v107 + 4);
      *(_QWORD *)(v106 + 24) = *((_QWORD *)v107 + 3);
      *(_QWORD *)(v106 + 32) = v109;
      swift_bridgeObjectRelease();
      v110 = *((_QWORD *)v107 + 6);
      *(_QWORD *)(v106 + 40) = *((_QWORD *)v107 + 5);
      *(_QWORD *)(v106 + 48) = v110;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_2333C12D8(v106);
  }
  v111 = *((_OWORD *)v107 + 1);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  *(_OWORD *)(v106 + 16) = v111;
  *(_OWORD *)(v106 + 32) = *((_OWORD *)v107 + 2);
  *(_QWORD *)(v106 + 48) = *((_QWORD *)v107 + 6);
LABEL_46:
  v112 = a3[22];
  v113 = (char *)(a1 + v112);
  v114 = (char *)a2 + v112;
  v115 = type metadata accessor for Order.Provider(0);
  v116 = *(_QWORD *)(v115 - 8);
  v117 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48);
  v118 = v117(v113, 1, v115);
  v119 = v117(v114, 1, v115);
  if (!v118)
  {
    if (!v119)
    {
      v123 = *((_QWORD *)v114 + 1);
      *(_QWORD *)v113 = *(_QWORD *)v114;
      *((_QWORD *)v113 + 1) = v123;
      swift_bridgeObjectRelease();
      v124 = *((_QWORD *)v114 + 3);
      *((_QWORD *)v113 + 2) = *((_QWORD *)v114 + 2);
      *((_QWORD *)v113 + 3) = v124;
      swift_bridgeObjectRelease();
      v125 = *((_QWORD *)v114 + 5);
      *((_QWORD *)v113 + 4) = *((_QWORD *)v114 + 4);
      *((_QWORD *)v113 + 5) = v125;
      swift_bridgeObjectRelease();
      v142((uint64_t)&v113[*(int *)(v115 + 28)], &v114[*(int *)(v115 + 28)], v78);
      return a1;
    }
    sub_233168500((uint64_t)v113, type metadata accessor for Order.Provider);
    goto LABEL_51;
  }
  if (v119)
  {
LABEL_51:
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    return a1;
  }
  v120 = *((_OWORD *)v114 + 1);
  *(_OWORD *)v113 = *(_OWORD *)v114;
  *((_OWORD *)v113 + 1) = v120;
  *((_OWORD *)v113 + 2) = *((_OWORD *)v114 + 2);
  (*(void (**)(char *, char *, uint64_t))(v140 + 32))(&v113[*(int *)(v115 + 28)], &v114[*(int *)(v115 + 28)], v78);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
  return a1;
}

uint64_t getEnumTagSinglePayload for Order()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C2284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Merchant();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[10];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[13];
      }
      else
      {
        v17 = sub_23361D340();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[15];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[22];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Order()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C23B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = type metadata accessor for Merchant();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[10];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C798);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v17 = sub_23361D340();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[15];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C7A0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[22];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2333C24CC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for Merchant();
  if (v0 <= 0x3F)
  {
    sub_23361D634();
    if (v1 <= 0x3F)
    {
      sub_233176020(319, &qword_25604C998, (void (*)(uint64_t))type metadata accessor for Order.ReturnInfo);
      if (v2 <= 0x3F)
      {
        sub_23361D340();
        if (v3 <= 0x3F)
        {
          sub_233176020(319, qword_25604C9A0, (void (*)(uint64_t))type metadata accessor for Order.Provider);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RawOrderProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_23361D340();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for RawOrderProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for RawOrderProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_23361D340();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *assignWithCopy for RawOrderProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for RawOrderProvider(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for RawOrderProvider(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Order.Provider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C2994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Order.Provider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C2A1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2333C2A90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderChangeNotificationsValue()
{
  return &type metadata for OrderChangeNotificationsValue;
}

ValueMetadata *type metadata accessor for FullyQualifiedOrderIdentifier()
{
  return &type metadata for FullyQualifiedOrderIdentifier;
}

ValueMetadata *type metadata accessor for FullyQualifiedOrderIdentifier.CodingKeys()
{
  return &type metadata for FullyQualifiedOrderIdentifier.CodingKeys;
}

uint64_t _s10FinanceKit29OrderChangeNotificationsValueOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333C2B88 + 4 * byte_233641C2C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333C2BBC + 4 * byte_233641C27[v4]))();
}

uint64_t sub_2333C2BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C2BCCLL);
  return result;
}

uint64_t sub_2333C2BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C2BE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333C2BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderChangeNotificationsValue.CodingKeys()
{
  return &type metadata for OrderChangeNotificationsValue.CodingKeys;
}

ValueMetadata *type metadata accessor for OrderChangeNotificationsValue.EnabledCodingKeys()
{
  return &type metadata for OrderChangeNotificationsValue.EnabledCodingKeys;
}

ValueMetadata *type metadata accessor for OrderChangeNotificationsValue.DisabledIfAppInstalledCodingKeys()
{
  return &type metadata for OrderChangeNotificationsValue.DisabledIfAppInstalledCodingKeys;
}

uint64_t getEnumTagSinglePayload for Order.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Order.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_2333C2D04 + 4 * byte_233641C36[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_2333C2D38 + 4 * byte_233641C31[v4]))();
}

uint64_t sub_2333C2D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C2D48);
  return result;
}

uint64_t sub_2333C2D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C2D5CLL);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_2333C2D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Order.CodingKeys()
{
  return &type metadata for Order.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Order.Provider.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2333C2DD0 + 4 * byte_233641C40[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2333C2E04 + 4 * byte_233641C3B[v4]))();
}

uint64_t sub_2333C2E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C2E14);
  return result;
}

uint64_t sub_2333C2E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C2E28);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2333C2E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C2E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Order.Provider.CodingKeys()
{
  return &type metadata for Order.Provider.CodingKeys;
}

unint64_t sub_2333C2E54()
{
  unint64_t result;

  result = qword_25604CAB0;
  if (!qword_25604CAB0)
  {
    result = MEMORY[0x234934494](&unk_2336421C4, &type metadata for Order.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAB0);
  }
  return result;
}

unint64_t sub_2333C2E9C()
{
  unint64_t result;

  result = qword_25604CAB8;
  if (!qword_25604CAB8)
  {
    result = MEMORY[0x234934494](&unk_23364227C, &type metadata for Order.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAB8);
  }
  return result;
}

unint64_t sub_2333C2EE4()
{
  unint64_t result;

  result = qword_25604CAC0;
  if (!qword_25604CAC0)
  {
    result = MEMORY[0x234934494](&unk_2336423D4, &type metadata for OrderChangeNotificationsValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAC0);
  }
  return result;
}

unint64_t sub_2333C2F2C()
{
  unint64_t result;

  result = qword_25604CAC8;
  if (!qword_25604CAC8)
  {
    result = MEMORY[0x234934494](&unk_23364248C, &type metadata for FullyQualifiedOrderIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAC8);
  }
  return result;
}

unint64_t sub_2333C2F74()
{
  unint64_t result;

  result = qword_25604CAD0;
  if (!qword_25604CAD0)
  {
    result = MEMORY[0x234934494](&unk_2336423FC, &type metadata for FullyQualifiedOrderIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAD0);
  }
  return result;
}

unint64_t sub_2333C2FBC()
{
  unint64_t result;

  result = qword_25604CAD8;
  if (!qword_25604CAD8)
  {
    result = MEMORY[0x234934494](&unk_233642424, &type metadata for FullyQualifiedOrderIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAD8);
  }
  return result;
}

unint64_t sub_2333C3004()
{
  unint64_t result;

  result = qword_25604CAE0;
  if (!qword_25604CAE0)
  {
    result = MEMORY[0x234934494](&unk_2336422F4, &type metadata for OrderChangeNotificationsValue.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAE0);
  }
  return result;
}

unint64_t sub_2333C304C()
{
  unint64_t result;

  result = qword_25604CAE8;
  if (!qword_25604CAE8)
  {
    result = MEMORY[0x234934494](&unk_23364231C, &type metadata for OrderChangeNotificationsValue.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAE8);
  }
  return result;
}

unint64_t sub_2333C3094()
{
  unint64_t result;

  result = qword_25604CAF0;
  if (!qword_25604CAF0)
  {
    result = MEMORY[0x234934494](&unk_2336422A4, &type metadata for OrderChangeNotificationsValue.DisabledIfAppInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAF0);
  }
  return result;
}

unint64_t sub_2333C30DC()
{
  unint64_t result;

  result = qword_25604CAF8;
  if (!qword_25604CAF8)
  {
    result = MEMORY[0x234934494](&unk_2336422CC, &type metadata for OrderChangeNotificationsValue.DisabledIfAppInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CAF8);
  }
  return result;
}

unint64_t sub_2333C3124()
{
  unint64_t result;

  result = qword_25604CB00;
  if (!qword_25604CB00)
  {
    result = MEMORY[0x234934494](&unk_233642344, &type metadata for OrderChangeNotificationsValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB00);
  }
  return result;
}

unint64_t sub_2333C316C()
{
  unint64_t result;

  result = qword_25604CB08;
  if (!qword_25604CB08)
  {
    result = MEMORY[0x234934494](&unk_23364236C, &type metadata for OrderChangeNotificationsValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB08);
  }
  return result;
}

unint64_t sub_2333C31B4()
{
  unint64_t result;

  result = qword_25604CB10;
  if (!qword_25604CB10)
  {
    result = MEMORY[0x234934494](&unk_2336421EC, &type metadata for Order.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB10);
  }
  return result;
}

unint64_t sub_2333C31FC()
{
  unint64_t result;

  result = qword_25604CB18;
  if (!qword_25604CB18)
  {
    result = MEMORY[0x234934494](&unk_233642214, &type metadata for Order.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB18);
  }
  return result;
}

unint64_t sub_2333C3244()
{
  unint64_t result;

  result = qword_25604CB20;
  if (!qword_25604CB20)
  {
    result = MEMORY[0x234934494](&unk_233642134, &type metadata for Order.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB20);
  }
  return result;
}

unint64_t sub_2333C328C()
{
  unint64_t result;

  result = qword_25604CB28;
  if (!qword_25604CB28)
  {
    result = MEMORY[0x234934494](&unk_23364215C, &type metadata for Order.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB28);
  }
  return result;
}

uint64_t sub_2333C32D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000233675720 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000233675740 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2333C3484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E61686372656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023366D440 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265626D756ELL && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002336699F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233669A10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4464657461647075 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746E656D796170 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E496E7275746572 && a2 == 0xEA00000000006F66 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x736E7275746572 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656D6567616E616DLL && a2 == 0xED00004C5255746ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x72656D6F74737563 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6D657449656E696CLL && a2 == 0xE900000000000073 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6D6C6C69666C7566 && a2 == 0xEC00000073746E65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233669A90 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000233669AB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x65646F63726162 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6F7250726564726FLL && a2 == 0xED00007265646976)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t sub_2333C3C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233669B20)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2333C3D68(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000002336692F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656449726564726FLL && a2 == 0xEF7265696669746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t *sub_2333C3E78(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = a1[12];
  v13 = a1[11];
  v14 = a1[10];
  v5 = a1[13];
  v6 = a1[14];
  v7 = a1[15];
  v8 = a1[16];
  v10 = a1[17];
  v9 = a1[18];
  v11 = a1[19];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  a2(v14, v13, v4, v5, v6, v7, v8, v10, v9, v11);
  return a1;
}

void __swiftcall AuditTokenWrapper.init(_:)(FinanceKit::AuditTokenWrapper *__return_ptr retstr, audit_token_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)retstr->token.val = a2;
  *(_QWORD *)&retstr->token.val[2] = v2;
  *(_QWORD *)&retstr->token.val[4] = v3;
  *(_QWORD *)&retstr->token.val[6] = v4;
}

uint64_t AuditTokenWrapper.hash(into:)()
{
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  return sub_23361F380();
}

uint64_t AuditTokenWrapper.hashValue.getter()
{
  sub_23361F350();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  return sub_23361F3A4();
}

uint64_t sub_2333C409C()
{
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  return sub_23361F380();
}

uint64_t sub_2333C4128()
{
  sub_23361F350();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  return sub_23361F3A4();
}

BOOL _s10FinanceKit17AuditTokenWrapperV2eeoiySbAC_ACtFZ_0(int32x4_t *a1, int32x4_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*a1, *a2)), 0xFuLL))) & 1) != 0
    && a1[1].i32[0] == a2[1].i32[0]
    && a1[1].i32[1] == a2[1].i32[1]
    && a1[1].i32[2] == a2[1].i32[2])
  {
    return a1[1].i32[3] == a2[1].i32[3];
  }
  return result;
}

unint64_t sub_2333C4260()
{
  unint64_t result;

  result = qword_254246810[0];
  if (!qword_254246810[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuditTokenWrapper, &type metadata for AuditTokenWrapper);
    atomic_store(result, qword_254246810);
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditTokenWrapper()
{
  return &type metadata for AuditTokenWrapper;
}

FinanceKit::RawOrderPaymentTransaction::TransactionType_optional __swiftcall RawOrderPaymentTransaction.TransactionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::RawOrderPaymentTransaction::TransactionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static RawOrderPaymentTransaction.TransactionType.allCases.getter()
{
  return &unk_25046A318;
}

uint64_t RawOrderPaymentTransaction.TransactionType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E75666572;
  else
    return 0x6573616863727570;
}

uint64_t sub_2333C4358(char *a1, char *a2)
{
  return sub_233225D60(*a1, *a2);
}

uint64_t sub_2333C4364()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2333C43E0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333C4438()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawOrderPaymentTransaction::TransactionType_optional sub_2333C44B0(Swift::String *a1)
{
  return RawOrderPaymentTransaction.TransactionType.init(rawValue:)(*a1);
}

void sub_2333C44BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6573616863727570;
  if (*v1)
    v2 = 0x646E75666572;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2333C44F8()
{
  sub_2333C6CF0();
  return sub_23361E390();
}

uint64_t sub_2333C4554()
{
  sub_2333C6CF0();
  return sub_23361E354();
}

void sub_2333C45A0(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046A340;
}

void RawOrderPaymentTransaction.transactionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *RawOrderPaymentTransaction.transactionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.transactionType.modify())()
{
  return nullsub_1;
}

uint64_t static RawOrderPaymentTransaction.Status.validCases(for:)(_BYTE *a1)
{
  if (*a1)
    return sub_2333F10E0((uint64_t)&unk_25046A390);
  else
    return sub_2333F10E0((uint64_t)&unk_25046A368);
}

Swift::Bool __swiftcall RawOrderPaymentTransaction.Status.isValidCase(for:)(FinanceKit::RawOrderPaymentTransaction::TransactionType a1)
{
  char *v1;
  void *v2;
  char v3;
  uint64_t v4;
  char v5;

  if (*(_BYTE *)a1)
    v2 = &unk_25046A390;
  else
    v2 = &unk_25046A368;
  v3 = *v1;
  v4 = sub_2333F10E0((uint64_t)v2);
  v5 = sub_233267198(v3, v4);
  swift_bridgeObjectRelease();
  return v5 & 1;
}

FinanceKit::RawOrderPaymentTransaction::Status_optional __swiftcall RawOrderPaymentTransaction.Status.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawOrderPaymentTransaction::Status_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RawOrderPaymentTransaction.Status.allCases.getter()
{
  return &unk_25046A450;
}

uint64_t RawOrderPaymentTransaction.Status.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333C46E8 + 4 * byte_233642730[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_2333C46E8()
{
  return 0x6465766F72707061;
}

uint64_t sub_2333C4700()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_2333C4730()
{
  return 0x64656C696166;
}

void sub_2333C4744(char *a1)
{
  sub_233225E00(*a1);
}

void sub_2333C4750()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_2333C479C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_2333C4820()
{
  __asm { BR              X10 }
}

uint64_t sub_2333C485C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_2333C48CC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23361F350();
  __asm { BR              X9 }
}

uint64_t sub_2333C4914()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawOrderPaymentTransaction::Status_optional sub_2333C4998(Swift::String *a1)
{
  return RawOrderPaymentTransaction.Status.init(rawValue:)(*a1);
}

uint64_t sub_2333C49A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2333C49D4 + 4 * byte_233642744[*v0]))();
}

void sub_2333C49D4(_QWORD *a1@<X8>)
{
  *a1 = 0x6465766F72707061;
  a1[1] = 0xE800000000000000;
}

void sub_2333C49F0(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

void sub_2333C4A24(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_2333C4A3C()
{
  sub_2333C6CAC();
  return sub_23361E390();
}

uint64_t sub_2333C4A98()
{
  sub_2333C6CAC();
  return sub_23361E354();
}

void sub_2333C4AE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046A478;
}

void RawOrderPaymentTransaction.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *RawOrderPaymentTransaction.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.status.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.amount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 12);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 RawOrderPaymentTransaction.amount.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 8) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 12) = result;
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.amount.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.paymentMethod.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderPaymentTransaction.paymentMethod.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.paymentMethod.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.applePayTransactionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPaymentTransaction.applePayTransactionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.applePayTransactionIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawOrderPaymentTransaction() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawOrderPaymentTransaction.createdAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawOrderPaymentTransaction() + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawOrderPaymentTransaction.createdAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderPaymentTransaction();
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.receipt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawOrderPaymentTransaction() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPaymentTransaction.receipt.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawOrderPaymentTransaction() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderPaymentTransaction.receipt.modify())(_QWORD)
{
  type metadata accessor for RawOrderPaymentTransaction();
  return nullsub_1;
}

uint64_t RawOrderPaymentTransaction.init(transactionType:status:amount:paymentMethod:applePayTransactionIdentifier:createdAt:receipt:)@<X0>(char *a1@<X0>, char *a2@<X1>, int *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v12 = *a1;
  v13 = *a2;
  v14 = *a3;
  v15 = *((_QWORD *)a3 + 3);
  v16 = *((_QWORD *)a3 + 4);
  v18 = *a4;
  v17 = a4[1];
  v19 = type metadata accessor for RawOrderPaymentTransaction();
  v20 = (_QWORD *)(a9 + *(int *)(v19 + 40));
  *(_BYTE *)a9 = v12;
  *(_BYTE *)(a9 + 1) = v13;
  *(_DWORD *)(a9 + 8) = v14;
  *(_OWORD *)(a9 + 12) = *(_OWORD *)(a3 + 1);
  *(_QWORD *)(a9 + 32) = v15;
  *(_QWORD *)(a9 + 40) = v16;
  *(_QWORD *)(a9 + 48) = v18;
  *(_QWORD *)(a9 + 56) = v17;
  *(_QWORD *)(a9 + 64) = a5;
  *(_QWORD *)(a9 + 72) = a6;
  v21 = a9 + *(int *)(v19 + 36);
  v22 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a7, v22);
  *v20 = a8;
  v20[1] = a10;
  return result;
}

uint64_t sub_2333C4E88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333C4EC8 + 4 * byte_233642749[a1]))(0x746361736E617274, 0xEF657079546E6F69);
}

uint64_t sub_2333C4EC8()
{
  return 0x737574617473;
}

uint64_t sub_2333C4EDC()
{
  return 0x4D746E656D796170;
}

uint64_t sub_2333C4F00()
{
  return 0x746E756F6D61;
}

uint64_t sub_2333C4F14()
{
  return 0x4164657461657263;
}

unint64_t sub_2333C4F30()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2333C4F4C()
{
  return 0x74706965636572;
}

uint64_t sub_2333C4F64()
{
  return 0x7374706965636572;
}

uint64_t sub_2333C4F7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333C4FBC + 4 * byte_233642751[a1]))(0x746361736E617274, 0xEF657079546E6F69);
}

uint64_t sub_2333C4FBC()
{
  return 0x737574617473;
}

uint64_t sub_2333C4FD0()
{
  return 0x4D746E656D796170;
}

uint64_t sub_2333C4FF4()
{
  return 0x746E756F6D61;
}

uint64_t sub_2333C5008()
{
  return 0x4164657461657263;
}

unint64_t sub_2333C5024()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2333C5040()
{
  return 0x74706965636572;
}

uint64_t sub_2333C5058()
{
  return 0x7374706965636572;
}

void sub_2333C5070(char *a1)
{
  sub_233225F90(*a1);
}

void sub_2333C507C()
{
  char *v0;

  sub_23353F940(0, *v0);
}

void sub_2333C5088(uint64_t a1)
{
  char *v1;

  sub_23353E194(a1, *v1);
}

void sub_2333C5090(uint64_t a1)
{
  char *v1;

  sub_23353F940(a1, *v1);
}

uint64_t sub_2333C5098@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2333C6C64();
  *a1 = result;
  return result;
}

uint64_t sub_2333C50C4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2333C4E88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2333C50EC()
{
  unsigned __int8 *v0;

  return sub_2333C4F7C(*v0);
}

uint64_t sub_2333C50F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2333C6C64();
  *a1 = result;
  return result;
}

uint64_t sub_2333C5118()
{
  sub_2333C5F2C();
  return sub_23361F428();
}

uint64_t sub_2333C5140()
{
  sub_2333C5F2C();
  return sub_23361F434();
}

uint64_t RawOrderPaymentTransaction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _QWORD *v48;
  uint64_t *v49;
  _QWORD v50[5];
  char v51;
  char v52;

  v44 = a2;
  v45 = sub_23361D634();
  v3 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CB40);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawOrderPaymentTransaction();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v13 + 8) = 0;
  *((_QWORD *)v13 + 9) = 0;
  v14 = *(int *)(v11 + 40);
  v47 = v13;
  v48 = a1;
  v15 = &v13[v14];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v49 = (uint64_t *)v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C5F2C();
  v16 = v46;
  sub_23361F3EC();
  if (v16)
    goto LABEL_3;
  v41 = v5;
  v42 = v10;
  v43 = v3;
  v17 = v45;
  v46 = v7;
  v52 = 0;
  sub_2333C5F70();
  sub_23361F068();
  v19 = LOBYTE(v50[0]);
  v20 = (uint64_t)v47;
  *v47 = v50[0];
  v52 = 1;
  sub_2333C5FB4();
  sub_23361F068();
  v21 = v50[0];
  if (v19)
    v22 = &unk_25046A390;
  else
    v22 = &unk_25046A368;
  v23 = sub_2333F10E0((uint64_t)v22);
  v24 = v21;
  v25 = sub_233267198(v21, v23);
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    v52 = 1;
    v50[0] = 0;
    v50[1] = 0xE000000000000000;
    sub_23361ED98();
    sub_23361E27C();
    v51 = v24;
    sub_23361EEE8();
    sub_23361E27C();
    v51 = v19;
    sub_23361EEE8();
    sub_23361E27C();
    sub_23361EE10();
    swift_allocError();
    sub_2331B1A14(&qword_25604CB60, &qword_25604CB40, MEMORY[0x24BEE33F8]);
    sub_23361EDE0();
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v6);
LABEL_3:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  *(_BYTE *)(v20 + 1) = v24;
  v52 = 2;
  sub_2333C5FF8();
  v26 = v6;
  sub_23361F068();
  v27 = v50[1];
  *(_QWORD *)(v20 + 48) = v50[0];
  *(_QWORD *)(v20 + 56) = v27;
  LOBYTE(v50[0]) = 4;
  sub_2331EED8C(&qword_254244F00, MEMORY[0x24BDCE960]);
  v28 = v41;
  v29 = v9;
  sub_23361F068();
  v30 = v46;
  v40[1] = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v20 + *(int *)(v42 + 36), v28, v17);
  LOBYTE(v50[0]) = 6;
  v31 = sub_23361EFCC();
  v32 = v26;
  v33 = v49;
  *v49 = v31;
  v33[1] = v34;
  v52 = 3;
  v51 = 1;
  sub_2333C603C();
  sub_23361EFB4();
  v35 = v50[3];
  v36 = v50[4];
  *(_DWORD *)(v20 + 8) = v50[0];
  *(_OWORD *)(v20 + 12) = *(_OWORD *)((char *)v50 + 4);
  *(_QWORD *)(v20 + 32) = v35;
  *(_QWORD *)(v20 + 40) = v36;
  LOBYTE(v50[0]) = 5;
  v37 = sub_23361EFCC();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 64) = v37;
  *(_QWORD *)(v20 + 72) = v39;
  sub_233360CA0(v20, v44);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  return sub_2333C6080(v20);
}

uint64_t RawOrderPaymentTransaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CB78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C5F2C();
  sub_23361F410();
  LOBYTE(v13[0]) = *(_BYTE *)v3;
  v14 = 0;
  sub_2333C60BC();
  sub_23361F17C();
  if (!v2)
  {
    LOBYTE(v13[0]) = *(_BYTE *)(v3 + 1);
    v14 = 1;
    sub_2333C6100();
    sub_23361F17C();
    v9 = *(_QWORD *)(v3 + 56);
    v13[0] = *(_QWORD *)(v3 + 48);
    v13[1] = v9;
    v14 = 2;
    sub_2333C6144();
    sub_23361F17C();
    v10 = *(_QWORD *)(v3 + 32);
    v11 = *(_QWORD *)(v3 + 40);
    LODWORD(v13[0]) = *(_DWORD *)(v3 + 8);
    *(_OWORD *)((char *)v13 + 4) = *(_OWORD *)(v3 + 12);
    v13[3] = v10;
    v13[4] = v11;
    v14 = 3;
    sub_23317231C();
    sub_23361F17C();
    type metadata accessor for RawOrderPaymentTransaction();
    LOBYTE(v13[0]) = 4;
    sub_23361D634();
    sub_2331EED8C(&qword_254245180, MEMORY[0x24BDCE920]);
    sub_23361F17C();
    LOBYTE(v13[0]) = 5;
    sub_23361F0E0();
    LOBYTE(v13[0]) = 6;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2333C5A14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderPaymentTransaction.init(from:)(a1, a2);
}

uint64_t sub_2333C5A28(_QWORD *a1)
{
  return RawOrderPaymentTransaction.encode(to:)(a1);
}

FinanceKit::RawOrderPaymentTransaction::TransactionType __swiftcall RawOrderPaymentTransaction.TransactionType.init(_:)(FinanceKit::RawOrderPaymentTransaction::TransactionType result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

FinanceKit::RawOrderPaymentTransaction::Status __swiftcall RawOrderPaymentTransaction.Status.init(_:)(FinanceKit::RawOrderPaymentTransaction::Status result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

void RawOrderPaymentTransaction.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Swift::String v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v4 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_willAccessValueForKey_, v4);

  v5 = objc_msgSend(a1, sel_primitiveTransactionType);
  v6 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_didAccessValueForKey_, v6);

  v7 = objc_msgSend(v5, sel_shortValue);
  if (v7 > 1)
  {
    __break(1u);
  }
  else
  {
    *(_BYTE *)a2 = v7 != 0;
    ManagedOrderPaymentTransaction.status.getter(&v26);
    *(_BYTE *)(a2 + 1) = v26;
    ManagedOrderPaymentTransaction.amount.getter((uint64_t)&v26);
    v8 = v28;
    v9 = v29;
    *(_DWORD *)(a2 + 8) = v26;
    *(_OWORD *)(a2 + 12) = v27;
    *(_QWORD *)(a2 + 32) = v8;
    *(_QWORD *)(a2 + 40) = v9;
    v10 = objc_msgSend(a1, sel_paymentMethodDisplayName);
    v11 = sub_23361D6B8();
    v12 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v11);

    swift_bridgeObjectRelease();
    *(Swift::String *)(a2 + 48) = v12;
    v13 = objc_msgSend(a1, sel_applePayTransactionIdentifier);
    if (v13)
    {
      v14 = v13;
      v15 = sub_23361E150();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    *(_QWORD *)(a2 + 64) = v15;
    *(_QWORD *)(a2 + 72) = v17;
    v18 = objc_msgSend(a1, sel_createdAt);
    v19 = type metadata accessor for RawOrderPaymentTransaction();
    sub_23361D5EC();

    v20 = objc_msgSend(a1, sel_receiptName);
    if (v20)
    {
      v21 = v20;
      v22 = sub_23361E150();
      v24 = v23;

    }
    else
    {

      v22 = 0;
      v24 = 0;
    }
    v25 = (uint64_t *)(a2 + *(int *)(v19 + 40));
    *v25 = v22;
    v25[1] = v24;
  }
}

uint64_t _s10FinanceKit26RawOrderPaymentTransactionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_BYTE *)a1 == 0;
  if (*(_BYTE *)a1)
    v5 = 0x646E75666572;
  else
    v5 = 0x6573616863727570;
  if (v4)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (*(_BYTE *)a2)
    v7 = 0x646E75666572;
  else
    v7 = 0x6573616863727570;
  if (*(_BYTE *)a2)
    v8 = 0xE600000000000000;
  else
    v8 = 0xE800000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  sub_233225E00(*(_BYTE *)(a1 + 1));
  if ((v12 & 1) == 0)
    return 0;
  v13 = *(unsigned int *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(unsigned int *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 40);
  v32 = *(_QWORD *)(a2 + 32);
  v33 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a2 + 8);
  v19 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((MEMORY[0x234932E38](v18, v17, v13, v20, v19, v15) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v33 == v32 && v14 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v21 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
    || (v22 = sub_23361F224(), result = 0, (v22 & 1) != 0))
  {
    v23 = *(_QWORD *)(a1 + 72);
    v24 = *(_QWORD *)(a2 + 72);
    if (v23)
    {
      if (v24)
      {
        if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && v23 == v24
          || (v25 = sub_23361F224(), result = 0, (v25 & 1) != 0))
        {
LABEL_39:
          v26 = type metadata accessor for RawOrderPaymentTransaction();
          if ((sub_23361D5E0() & 1) != 0)
          {
            v27 = *(int *)(v26 + 40);
            v28 = (_QWORD *)(a1 + v27);
            v29 = *(_QWORD *)(a1 + v27 + 8);
            v30 = (_QWORD *)(a2 + v27);
            v31 = v30[1];
            if (v29)
            {
              if (v31 && (*v28 == *v30 && v29 == v31 || (sub_23361F224() & 1) != 0))
                return 1;
            }
            else if (!v31)
            {
              return 1;
            }
          }
          return 0;
        }
        return result;
      }
    }
    else if (!v24)
    {
      goto LABEL_39;
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RawOrderPaymentTransaction()
{
  uint64_t result;

  result = qword_25604CC20;
  if (!qword_25604CC20)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2333C5F2C()
{
  unint64_t result;

  result = qword_25604CB48;
  if (!qword_25604CB48)
  {
    result = MEMORY[0x234934494](&unk_233642C38, &type metadata for RawOrderPaymentTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CB48);
  }
  return result;
}

unint64_t sub_2333C5F70()
{
  unint64_t result;

  result = qword_25604CB50;
  if (!qword_25604CB50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.TransactionType, &type metadata for RawOrderPaymentTransaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25604CB50);
  }
  return result;
}

unint64_t sub_2333C5FB4()
{
  unint64_t result;

  result = qword_25604CB58;
  if (!qword_25604CB58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.Status, &type metadata for RawOrderPaymentTransaction.Status);
    atomic_store(result, (unint64_t *)&qword_25604CB58);
  }
  return result;
}

unint64_t sub_2333C5FF8()
{
  unint64_t result;

  result = qword_25604CB68;
  if (!qword_25604CB68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentMethod, &type metadata for RawOrderPaymentMethod);
    atomic_store(result, (unint64_t *)&qword_25604CB68);
  }
  return result;
}

unint64_t sub_2333C603C()
{
  unint64_t result;

  result = qword_25604CB70;
  if (!qword_25604CB70)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CurrencyAmount, &type metadata for CurrencyAmount);
    atomic_store(result, (unint64_t *)&qword_25604CB70);
  }
  return result;
}

uint64_t sub_2333C6080(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawOrderPaymentTransaction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2333C60BC()
{
  unint64_t result;

  result = qword_25604CB80;
  if (!qword_25604CB80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.TransactionType, &type metadata for RawOrderPaymentTransaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25604CB80);
  }
  return result;
}

unint64_t sub_2333C6100()
{
  unint64_t result;

  result = qword_25604CB88;
  if (!qword_25604CB88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.Status, &type metadata for RawOrderPaymentTransaction.Status);
    atomic_store(result, (unint64_t *)&qword_25604CB88);
  }
  return result;
}

unint64_t sub_2333C6144()
{
  unint64_t result;

  result = qword_25604CB90;
  if (!qword_25604CB90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentMethod, &type metadata for RawOrderPaymentMethod);
    atomic_store(result, (unint64_t *)&qword_25604CB90);
  }
  return result;
}

unint64_t sub_2333C618C()
{
  unint64_t result;

  result = qword_25604CB98;
  if (!qword_25604CB98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.TransactionType, &type metadata for RawOrderPaymentTransaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25604CB98);
  }
  return result;
}

uint64_t sub_2333C61D0()
{
  return sub_2331B1A14(&qword_25604CBA0, &qword_25604CBA8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2333C6200()
{
  unint64_t result;

  result = qword_25604CBB0;
  if (!qword_25604CBB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.Status, &type metadata for RawOrderPaymentTransaction.Status);
    atomic_store(result, (unint64_t *)&qword_25604CBB0);
  }
  return result;
}

uint64_t sub_2333C6244()
{
  return sub_2331B1A14(&qword_25604CBB8, &qword_25604CBC0, MEMORY[0x24BEE12E0]);
}

_QWORD *initializeBufferWithCopyOfBuffer for RawOrderPaymentTransaction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    v10 = *(int *)(a3 + 36);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    v13 = sub_23361D634();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 40);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawOrderPaymentTransaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderPaymentTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v12 = sub_23361D634();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 40);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawOrderPaymentTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RawOrderPaymentTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithTake for RawOrderPaymentTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 40);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderPaymentTransaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C6790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentTransaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333C6818(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2333C688C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentTransaction.TransactionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333C6974 + 4 * byte_23364275E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333C69A8 + 4 * byte_233642759[v4]))();
}

uint64_t sub_2333C69A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C69B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C69B8);
  return result;
}

uint64_t sub_2333C69C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C69CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333C69D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C69D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentTransaction.TransactionType()
{
  return &type metadata for RawOrderPaymentTransaction.TransactionType;
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentTransaction.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2333C6A40 + 4 * byte_233642768[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2333C6A74 + 4 * byte_233642763[v4]))();
}

uint64_t sub_2333C6A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C6A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C6A84);
  return result;
}

uint64_t sub_2333C6A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C6A98);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2333C6A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C6AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentTransaction.Status()
{
  return &type metadata for RawOrderPaymentTransaction.Status;
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentTransaction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2333C6B0C + 4 * byte_233642772[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2333C6B40 + 4 * byte_23364276D[v4]))();
}

uint64_t sub_2333C6B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C6B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C6B50);
  return result;
}

uint64_t sub_2333C6B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C6B64);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2333C6B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C6B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentTransaction.CodingKeys()
{
  return &type metadata for RawOrderPaymentTransaction.CodingKeys;
}

unint64_t sub_2333C6B90()
{
  unint64_t result;

  result = qword_25604CC70;
  if (!qword_25604CC70)
  {
    result = MEMORY[0x234934494](&unk_233642C10, &type metadata for RawOrderPaymentTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CC70);
  }
  return result;
}

unint64_t sub_2333C6BD8()
{
  unint64_t result;

  result = qword_25604CC78;
  if (!qword_25604CC78)
  {
    result = MEMORY[0x234934494](&unk_233642B48, &type metadata for RawOrderPaymentTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CC78);
  }
  return result;
}

unint64_t sub_2333C6C20()
{
  unint64_t result;

  result = qword_25604CC80;
  if (!qword_25604CC80)
  {
    result = MEMORY[0x234934494](&unk_233642B70, &type metadata for RawOrderPaymentTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CC80);
  }
  return result;
}

uint64_t sub_2333C6C64()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_2333C6CAC()
{
  unint64_t result;

  result = qword_25604CC88;
  if (!qword_25604CC88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.Status, &type metadata for RawOrderPaymentTransaction.Status);
    atomic_store(result, (unint64_t *)&qword_25604CC88);
  }
  return result;
}

unint64_t sub_2333C6CF0()
{
  unint64_t result;

  result = qword_25604CC90;
  if (!qword_25604CC90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderPaymentTransaction.TransactionType, &type metadata for RawOrderPaymentTransaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25604CC90);
  }
  return result;
}

uint64_t sub_2333C6D34(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_23361E63C();
  if (!v18)
    return sub_23361E420();
  v19 = v18;
  v25 = v15;
  v39 = sub_23361E03C();
  v32 = sub_23361EEAC();
  sub_23361EE64();
  v36 = v17;
  result = sub_23361E624();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_23361E684();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_23361EE94();
      sub_23361E654();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t static ExtensionServiceConfiguration.makeConnections<A>(extensionFinder:withBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v14;

  v7[6] = a5;
  v7[7] = a6;
  v7[4] = a3;
  v7[5] = a4;
  v14 = (_QWORD *)swift_task_alloc();
  v7[8] = v14;
  *v14 = v7;
  v14[1] = sub_2333C70B0;
  v14[7] = a6;
  v14[8] = v6;
  v14[5] = a4;
  v14[6] = a5;
  v14[3] = a2;
  v14[4] = a3;
  v14[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2333C70B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_2333C7124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_task_alloc();
  v10 = *(_OWORD *)(v0 + 48);
  v11 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = v11;
  *(_OWORD *)(v2 + 32) = v10;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042BD0);
  v5 = (char *)type metadata accessor for ClientToServiceXPCConnection(0, v11, *(_QWORD *)(v10 + 8), v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  v7 = sub_2333C79BC();
  v8 = sub_2333C6D34((void (*)(char *, char *))sub_2333C799C, v2, v3, v5, v6, v7, MEMORY[0x24BEE3F20], v0 + 24);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  else
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t static ExtensionServiceConfigurationError.== infix(_:_:)()
{
  return 1;
}

uint64_t ExtensionServiceConfigurationError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ExtensionServiceConfigurationError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t static ExtensionServiceConfiguration.makeConnection<A>(extensionFinder:withBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[22] = a6;
  v7[23] = v6;
  v7[20] = a4;
  v7[21] = a5;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch();
}

{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v9 = a3;
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  v11 = (*(uint64_t (**)(uint64_t))(a6 + 16))(v10);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + 16))
  {
    sub_233177068(v11 + 32, (uint64_t)v23);
  }
  else
  {
    v24 = 0;
    memset(v23, 0, sizeof(v23));
  }
  swift_bridgeObjectRelease();
  sub_2333C7A08((uint64_t)v23, (uint64_t)&v18);
  if (v19)
  {
    sub_23318B020(&v18, (uint64_t)v20);
    v12 = v21;
    v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    if (!v6)
    {
      v16 = (void *)v14;
      type metadata accessor for ClientToServiceXPCConnection(0, v9, *(_QWORD *)(a5 + 8), v15);
      sub_23323FAE8((uint64_t *)&v18);
      v9 = sub_2332D9B68(v16, (uint64_t)&v18);

    }
    sub_2333C7A50((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    sub_2333C7A50((uint64_t)&v18);
    sub_2333C7A90();
    swift_allocError();
    swift_willThrow();
    sub_2333C7A50((uint64_t)v23);
  }
  return v9;
}

uint64_t sub_2333C72DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = v0[22];
  v2 = (*(uint64_t (**)(_QWORD))(v0[21] + 16))(v0[19]);
  v4 = v3;
  v0[24] = v3;
  v7 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_2333C7370;
  return v7(v2, v4, v0[18], v0[20], v0[22]);
}

uint64_t sub_2333C7370(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2333C73D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[6];

  v1 = *(_QWORD *)(v0 + 208);
  if (*(_QWORD *)(v1 + 16))
  {
    sub_233177068(v1 + 32, v0 + 16);
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2333C7A08(v0 + 16, v0 + 96);
  if (*(_QWORD *)(v0 + 120))
  {
    sub_23318B020((__int128 *)(v0 + 96), v0 + 56);
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v2);
    v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
    type metadata accessor for ClientToServiceXPCConnection(0, *(_QWORD *)(v0 + 152), *(_QWORD *)(*(_QWORD *)(v0 + 168) + 8), v5);
    sub_23323FAE8(v8);
    v6 = sub_2332D9B68(v4, (uint64_t)v8);

    sub_2333C7A50(v0 + 16);
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  else
  {
    sub_2333C7A50(v0 + 96);
    sub_2333C7A90();
    swift_allocError();
    swift_willThrow();
    sub_2333C7A50(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t static ExtensionServiceConfiguration.getIdentities<A>(extensionFinder:withBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2333C7750()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = v0[7];
  v2 = (*(uint64_t (**)(_QWORD))(v0[6] + 16))(v0[4]);
  v4 = v3;
  v0[9] = v3;
  v7 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_2333C77E4;
  return v7(v2, v4, v0[3], v0[5], v0[7]);
}

uint64_t sub_2333C77E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2333C7848()
{
  uint64_t v0;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16))
  {
    swift_bridgeObjectRelease();
    sub_2333C7A90();
    swift_allocError();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2333C78CC(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16[5];

  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  if (v5)
  {
    *a4 = v5;
  }
  else
  {
    v14 = (void *)v12;
    type metadata accessor for ClientToServiceXPCConnection(0, a2, *(_QWORD *)(a3 + 8), v13);
    sub_23323FAE8(v16);
    v15 = sub_2332D9B68(v14, (uint64_t)v16);

    *a5 = v15;
  }
}

void sub_2333C799C(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_2333C78CC(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), a2, a3);
}

unint64_t sub_2333C79BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604CCA8;
  if (!qword_25604CCA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042BD0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25604CCA8);
  }
  return result;
}

uint64_t sub_2333C7A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333C7A50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2333C7A90()
{
  unint64_t result;

  result = qword_25604CCC0;
  if (!qword_25604CCC0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ExtensionServiceConfigurationError, &type metadata for ExtensionServiceConfigurationError);
    atomic_store(result, (unint64_t *)&qword_25604CCC0);
  }
  return result;
}

unint64_t sub_2333C7AD8()
{
  unint64_t result;

  result = qword_25604CCC8;
  if (!qword_25604CCC8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ExtensionServiceConfigurationError, &type metadata for ExtensionServiceConfigurationError);
    atomic_store(result, (unint64_t *)&qword_25604CCC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExtensionServiceConfigurationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333C7B5C + 4 * byte_233642C90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333C7B7C + 4 * byte_233642C95[v4]))();
}

_BYTE *sub_2333C7B5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333C7B7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333C7B84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333C7B8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333C7B94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333C7B9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionServiceConfigurationError()
{
  return &type metadata for ExtensionServiceConfigurationError;
}

uint64_t dispatch thunk of static ExtensionServiceConfiguration.extensionPointIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

BOOL static AuthorizationStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AuthorizationStatus.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_2333C7BFC()
{
  sub_2333C8070();
  return sub_23361F428();
}

uint64_t sub_2333C7C24()
{
  sub_2333C8070();
  return sub_23361F434();
}

uint64_t sub_2333C7C4C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465696E6564;
  if (*v0 != 1)
    v1 = 0x7A69726F68747561;
  if (*v0)
    return v1;
  else
    return 0x7265746544746F6ELL;
}

uint64_t sub_2333C7CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333C8D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333C7CD8()
{
  sub_2333C802C();
  return sub_23361F428();
}

uint64_t sub_2333C7D00()
{
  sub_2333C802C();
  return sub_23361F434();
}

uint64_t sub_2333C7D28()
{
  sub_2333C80B4();
  return sub_23361F428();
}

uint64_t sub_2333C7D50()
{
  sub_2333C80B4();
  return sub_23361F434();
}

uint64_t sub_2333C7D78()
{
  sub_2333C80F8();
  return sub_23361F428();
}

uint64_t sub_2333C7DA0()
{
  sub_2333C80F8();
  return sub_23361F434();
}

uint64_t AuthorizationStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCD0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCD8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCE0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CCE8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C802C();
  sub_23361F410();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2333C80B4();
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2333C8070();
      v16 = v21;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2333C80F8();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_2333C802C()
{
  unint64_t result;

  result = qword_25604CCF0;
  if (!qword_25604CCF0)
  {
    result = MEMORY[0x234934494](&unk_2336431C0, &type metadata for AuthorizationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CCF0);
  }
  return result;
}

unint64_t sub_2333C8070()
{
  unint64_t result;

  result = qword_25604CCF8;
  if (!qword_25604CCF8)
  {
    result = MEMORY[0x234934494](&unk_233643170, &type metadata for AuthorizationStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CCF8);
  }
  return result;
}

unint64_t sub_2333C80B4()
{
  unint64_t result;

  result = qword_25604CD00;
  if (!qword_25604CD00)
  {
    result = MEMORY[0x234934494](&unk_233643120, &type metadata for AuthorizationStatus.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CD00);
  }
  return result;
}

unint64_t sub_2333C80F8()
{
  unint64_t result;

  result = qword_25604CD08;
  if (!qword_25604CD08)
  {
    result = MEMORY[0x234934494](&unk_2336430D0, &type metadata for AuthorizationStatus.NotDeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CD08);
  }
  return result;
}

uint64_t AuthorizationStatus.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t AuthorizationStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD10);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD18);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD20);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD28);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C802C();
  v13 = v41;
  sub_23361F3EC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23361F098();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23361EE10();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v25 = &type metadata for AuthorizationStatus;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2333C80B4();
      v20 = v9;
      sub_23361EFA8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2333C8070();
      v28 = v15;
      sub_23361EFA8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2333C80F8();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_2333C85C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AuthorizationStatus.init(from:)(a1, a2);
}

uint64_t sub_2333C85D8(_QWORD *a1)
{
  return AuthorizationStatus.encode(to:)(a1);
}

void AuthorizationStatus.XPC.value.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___XPCAuthorizationStatus_value);
}

id AuthorizationStatus.XPC.__allocating_init(value:)(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR___XPCAuthorizationStatus_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AuthorizationStatus.XPC.init(value:)(_BYTE *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___XPCAuthorizationStatus_value] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static AuthorizationStatus.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id AuthorizationStatus.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316A9F8(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id AuthorizationStatus.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316A9F8(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id AuthorizationStatus.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AuthorizationStatus.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AuthorizationStatus.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2333C88B8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___XPCAuthorizationStatus_value);
}

id sub_2333C88CC(char *a1)
{
  objc_class *v1;
  char v2;
  _BYTE *v3;
  objc_super v5;

  v2 = *a1;
  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR___XPCAuthorizationStatus_value] = v2;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AuthorizationStatus.xpcValue.getter()
{
  char *v0;
  char v1;
  objc_class *v2;
  _BYTE *v3;
  objc_super v5;

  v1 = *v0;
  v2 = (objc_class *)type metadata accessor for AuthorizationStatus.XPC();
  v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR___XPCAuthorizationStatus_value] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for AuthorizationStatus.XPC()
{
  return objc_opt_self();
}

unint64_t sub_2333C898C()
{
  unint64_t result;

  result = qword_25604CD40;
  if (!qword_25604CD40)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuthorizationStatus, &type metadata for AuthorizationStatus);
    atomic_store(result, (unint64_t *)&qword_25604CD40);
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthorizationStatus()
{
  return &type metadata for AuthorizationStatus;
}

uint64_t method lookup function for AuthorizationStatus.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AuthorizationStatus.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t _s10FinanceKit19AuthorizationStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2333C8A44 + 4 * byte_233642DA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2333C8A78 + 4 * asc_233642DA0[v4]))();
}

uint64_t sub_2333C8A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C8A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333C8A88);
  return result;
}

uint64_t sub_2333C8A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333C8A9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2333C8AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333C8AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthorizationStatus.CodingKeys()
{
  return &type metadata for AuthorizationStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthorizationStatus.NotDeterminedCodingKeys()
{
  return &type metadata for AuthorizationStatus.NotDeterminedCodingKeys;
}

ValueMetadata *type metadata accessor for AuthorizationStatus.DeniedCodingKeys()
{
  return &type metadata for AuthorizationStatus.DeniedCodingKeys;
}

ValueMetadata *type metadata accessor for AuthorizationStatus.AuthorizedCodingKeys()
{
  return &type metadata for AuthorizationStatus.AuthorizedCodingKeys;
}

unint64_t sub_2333C8AF8()
{
  unint64_t result;

  result = qword_25604CD90;
  if (!qword_25604CD90)
  {
    result = MEMORY[0x234934494](&unk_2336430A8, &type metadata for AuthorizationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CD90);
  }
  return result;
}

unint64_t sub_2333C8B40()
{
  unint64_t result;

  result = qword_25604CD98;
  if (!qword_25604CD98)
  {
    result = MEMORY[0x234934494](&unk_233642FC8, &type metadata for AuthorizationStatus.NotDeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CD98);
  }
  return result;
}

unint64_t sub_2333C8B88()
{
  unint64_t result;

  result = qword_25604CDA0;
  if (!qword_25604CDA0)
  {
    result = MEMORY[0x234934494](&unk_233642FF0, &type metadata for AuthorizationStatus.NotDeterminedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDA0);
  }
  return result;
}

unint64_t sub_2333C8BD0()
{
  unint64_t result;

  result = qword_25604CDA8;
  if (!qword_25604CDA8)
  {
    result = MEMORY[0x234934494](&unk_233642F78, &type metadata for AuthorizationStatus.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDA8);
  }
  return result;
}

unint64_t sub_2333C8C18()
{
  unint64_t result;

  result = qword_25604CDB0;
  if (!qword_25604CDB0)
  {
    result = MEMORY[0x234934494](&unk_233642FA0, &type metadata for AuthorizationStatus.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDB0);
  }
  return result;
}

unint64_t sub_2333C8C60()
{
  unint64_t result;

  result = qword_25604CDB8;
  if (!qword_25604CDB8)
  {
    result = MEMORY[0x234934494](&unk_233642F28, &type metadata for AuthorizationStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDB8);
  }
  return result;
}

unint64_t sub_2333C8CA8()
{
  unint64_t result;

  result = qword_25604CDC0;
  if (!qword_25604CDC0)
  {
    result = MEMORY[0x234934494](&unk_233642F50, &type metadata for AuthorizationStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDC0);
  }
  return result;
}

unint64_t sub_2333C8CF0()
{
  unint64_t result;

  result = qword_25604CDC8;
  if (!qword_25604CDC8)
  {
    result = MEMORY[0x234934494](&unk_233643018, &type metadata for AuthorizationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDC8);
  }
  return result;
}

unint64_t sub_2333C8D38()
{
  unint64_t result;

  result = qword_25604CDD0;
  if (!qword_25604CDD0)
  {
    result = MEMORY[0x234934494](&unk_233643040, &type metadata for AuthorizationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604CDD0);
  }
  return result;
}

uint64_t sub_2333C8D7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746544746F6ELL && a2 == 0xED000064656E696DLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465696E6564 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FinanceStore.reindexSpotlight()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = type metadata accessor for FinanceStore.Message();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333C8F54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_256044370 + dword_256044370);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2333C8FC8;
  return v3(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2333C8FC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void FinanceXPCListener<>.init(connectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t))(a3 + 16))(v4, *(_QWORD *)(v3 + 80), a3);
  __asm { BR              X10 }
}

id sub_2333C90C8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7[15];

  v2 = objc_allocWithZone(MEMORY[0x24BDD1998]);
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithMachServiceName_, v3);

  sub_23323FAE8(v7);
  v5 = sub_23341FA64(v4, (uint64_t)v7, v1, v0);

  swift_release();
  return v5;
}

void static MachServiceConfiguration.makeConnection()(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  (*(void (**)(_QWORD *__return_ptr))(a2 + 16))(v2);
  __asm { BR              X10 }
}

uint64_t sub_2333C9218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11[13];

  type metadata accessor for ClientToServiceXPCConnection(0, v4, *(_QWORD *)(v5 + 8), a4);
  v6 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v7 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 0);

  sub_23323FAE8(v11);
  v9 = sub_2332D9B68(v8, (uint64_t)v11);

  return v9;
}

uint64_t dispatch thunk of static MachServiceConfiguration.machService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Order.Application.storeIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Order.Application.storeIdentifier.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Order.Application.storeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Order.Application.launchURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Order.Application() + 20);
  return sub_233199624(v3, a1);
}

uint64_t type metadata accessor for Order.Application()
{
  uint64_t result;

  result = qword_25604CE58;
  if (!qword_25604CE58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Order.Application.launchURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Order.Application() + 20);
  return sub_2331AAFB8(a1, v3);
}

uint64_t (*Order.Application.launchURL.modify())(_QWORD)
{
  type metadata accessor for Order.Application();
  return nullsub_1;
}

uint64_t Order.Application.customProductPageIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Order.Application() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Application.customProductPageIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Order.Application() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Order.Application.customProductPageIdentifier.modify())(_QWORD)
{
  type metadata accessor for Order.Application();
  return nullsub_1;
}

uint64_t sub_2333C94A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x525568636E75616CLL;
  if (*v0 != 1)
    v1 = 0xD00000000000001BLL;
  if (*v0)
    return v1;
  else
    return 0x65644965726F7473;
}

uint64_t sub_2333C9518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333CA7A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333C953C()
{
  sub_2333C9DD0();
  return sub_23361F428();
}

uint64_t sub_2333C9564()
{
  sub_2333C9DD0();
  return sub_23361F434();
}

uint64_t Order.Application.init(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = type metadata accessor for Order.Application();
  v5 = (uint64_t)a2 + *(int *)(v4 + 20);
  v6 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)((char *)a2 + *(int *)(v4 + 24));
  *v7 = 0;
  v7[1] = 0;
  *a2 = *a1;
  v8 = type metadata accessor for RawOrderApplication();
  sub_2331AAFB8((uint64_t)a1 + *(int *)(v8 + 20), v5);
  v9 = (_QWORD *)((char *)a1 + *(int *)(v8 + 24));
  v10 = *v9;
  v11 = v9[1];
  result = swift_bridgeObjectRelease();
  *v7 = v10;
  v7[1] = v11;
  return result;
}

uint64_t Order.Application.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CDE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C9DD0();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F164();
  if (!v1)
  {
    type metadata accessor for Order.Application();
    v8[14] = 1;
    sub_23361D340();
    sub_2333A3430((unint64_t *)&unk_256042310, MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    v8[13] = 2;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.Application.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  char v33;
  char v34;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CDF8);
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.Application();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  v12 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t *)((char *)v10 + *(int *)(v7 + 24));
  *v13 = 0;
  v13[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333C9DD0();
  v29 = v6;
  v14 = (uint64_t)v31;
  sub_23361F3EC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_233168608(v11, &qword_254248700);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v13;
    v31 = a1;
    v16 = v27;
    v15 = (uint64_t)v28;
    v34 = 0;
    v17 = v29;
    v18 = v30;
    *v10 = sub_23361F050();
    v33 = 1;
    sub_2333A3430(&qword_256042340, MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_2331AAFB8(v15, v11);
    v32 = 2;
    v19 = sub_23361EFCC();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    v22 = v25;
    swift_bridgeObjectRelease();
    *v22 = v19;
    v22[1] = v21;
    sub_2333C9E14((uint64_t)v10, v26);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    return sub_2333C9E58((uint64_t)v10);
  }
}

uint64_t sub_2333C9A60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.Application.init(from:)(a1, a2);
}

uint64_t sub_2333C9A74(_QWORD *a1)
{
  return Order.Application.encode(to:)(a1);
}

uint64_t _s10FinanceKit5OrderV11ApplicationV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (*a1 != *a2)
    return 0;
  v20 = type metadata accessor for Order.Application();
  v21 = a1;
  v22 = v20;
  v23 = *(int *)(v20 + 20);
  v35 = v21;
  sub_233199624((uint64_t)v21 + v23, (uint64_t)v19);
  v36 = v22;
  v37 = a2;
  sub_233199624((uint64_t)a2 + *(int *)(v22 + 20), (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_233199624((uint64_t)v19, (uint64_t)v10);
  sub_233199624((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_233199624((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      sub_2333A3430(&qword_256045950, MEMORY[0x24BDCDB00]);
      v26 = sub_23361E108();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      sub_233168608((uint64_t)v17, &qword_254248700);
      sub_233168608((uint64_t)v19, &qword_254248700);
      v27(v14, v4);
      sub_233168608((uint64_t)v10, &qword_254248700);
      if ((v26 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_233168608((uint64_t)v17, &qword_254248700);
    sub_233168608((uint64_t)v19, &qword_254248700);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_233168608((uint64_t)v10, &qword_256045948);
    return 0;
  }
  sub_233168608((uint64_t)v17, &qword_254248700);
  sub_233168608((uint64_t)v19, &qword_254248700);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_7;
  sub_233168608((uint64_t)v10, &qword_254248700);
LABEL_9:
  v28 = *(int *)(v36 + 24);
  v29 = (_QWORD *)((char *)v35 + v28);
  v30 = *(_QWORD *)((char *)v35 + v28 + 8);
  v31 = (_QWORD *)((char *)v37 + v28);
  v32 = v31[1];
  if (v30)
  {
    if (v32 && (*v29 == *v31 && v30 == v32 || (sub_23361F224() & 1) != 0))
      return 1;
  }
  else if (!v32)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_2333C9DD0()
{
  unint64_t result;

  result = qword_25604CDF0;
  if (!qword_25604CDF0)
  {
    result = MEMORY[0x234934494](&unk_2336433C4, &_s11ApplicationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604CDF0);
  }
  return result;
}

uint64_t sub_2333C9E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.Application();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333C9E58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Order.Application();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for RawOrderApplication(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23361D340();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawOrderApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RawOrderApplication(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RawOrderApplication(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for RawOrderApplication(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for RawOrderApplication(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11ApplicationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333CA460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s11ApplicationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333CA500(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_2333CA584()
{
  unint64_t v0;

  sub_233233038();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s11ApplicationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2333CA650 + 4 * byte_233643245[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2333CA684 + 4 * asc_233643240[v4]))();
}

uint64_t sub_2333CA684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333CA68C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333CA694);
  return result;
}

uint64_t sub_2333CA6A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333CA6A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2333CA6AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333CA6B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11ApplicationV10CodingKeysOMa()
{
  return &_s11ApplicationV10CodingKeysON;
}

unint64_t sub_2333CA6D4()
{
  unint64_t result;

  result = qword_25604CE98;
  if (!qword_25604CE98)
  {
    result = MEMORY[0x234934494](&unk_23364339C, &_s11ApplicationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604CE98);
  }
  return result;
}

unint64_t sub_2333CA71C()
{
  unint64_t result;

  result = qword_25604CEA0;
  if (!qword_25604CEA0)
  {
    result = MEMORY[0x234934494](&unk_23364330C, &_s11ApplicationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604CEA0);
  }
  return result;
}

unint64_t sub_2333CA764()
{
  unint64_t result;

  result = qword_25604CEA8;
  if (!qword_25604CEA8)
  {
    result = MEMORY[0x234934494](&unk_233643334, &_s11ApplicationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604CEA8);
  }
  return result;
}

uint64_t sub_2333CA7A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65644965726F7473 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x525568636E75616CLL && a2 == 0xE90000000000004CLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000233671F00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t OrderBundle.localizedString(forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v3 = v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v4 = v2 + 4;
  v5 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_2331E06B8(v4, v3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_2331E08D8, &v7);
  os_unfair_lock_unlock(v5);
  return v7;
}

uint64_t *static OrderBundle.open(_:workingDirectory:validator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2333CB238(a1, a2, a3, a4);
}

void OrderBundle.closeAfter<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  ContentPackageReader.closeAfter<A>(_:)(a1, a2, a3);
}

uint64_t OrderBundle.reader.getter()
{
  return swift_retain();
}

uint64_t OrderBundle.manifestHash.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_manifestHash;
  v4 = sub_23361DE5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OrderBundle.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2333CB6BC(v1 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content, a1);
}

uint64_t static OrderBundle.maximumCompressedSize.getter()
{
  return 6291456;
}

uint64_t static OrderBundle.maximumTotalSize.getter()
{
  return 5242880;
}

uint64_t *sub_2333CAA68(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;

  v39 = a2;
  v37 = *v2;
  v5 = sub_23361DE5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361CA40();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v2[2] = a1;
  swift_retain();
  ContentPackageReader.data(forResource:withExtension:)(0x726564726FLL, 0xE500000000000000, 1852797802, 0xE400000000000000);
  if (v3)
  {
    swift_release();
    v16 = v38;
    v17 = v39;
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v31 = v8;
    v32 = v6;
    v33 = v5;
    v34 = a1;
    v18 = v14;
    v19 = v15;
    sub_23361CA70();
    swift_allocObject();
    v20 = sub_23361CA64();
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDCB1D8], v10);
    sub_23361CA4C();
    sub_233167C58(&qword_25604CF80, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderContent, (uint64_t)&protocol conformance descriptor for RawOrderContent);
    v21 = (uint64_t)v35;
    sub_23361CA58();
    v36 = v19;
    ContentPackageReader.data(forResource:withExtension:)(0x74736566696E616DLL, 0xE800000000000000, 1852797802, 0xE400000000000000);
    v23 = v22;
    v25 = v24;
    swift_allocObject();
    sub_23361CA64();
    sub_23328B9E0();
    sub_23361CA58();
    swift_release();
    sub_23316BEA4(v23, v25);
    v27 = (uint64_t)v31;
    ContentPackageManifest.canonicalHash.getter((uint64_t)v31);
    swift_bridgeObjectRelease();
    v37 = v20;
    v16 = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))((uint64_t)v38 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_manifestHash, v27, v33);
    sub_2333CB6BC(v21, (uint64_t)v16 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content);
    v17 = v39;
    v28 = v39[3];
    v29 = v39[4];
    __swift_project_boxed_opaque_existential_1(v39, v28);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v29 + 8))(v16, v28, v29);
    swift_release();
    sub_23316BEA4(v18, v36);
    swift_release();
    sub_2333CB700(v21);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return v16;
}

uint64_t *static OrderBundle.open(_:validator:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *result;
  uint64_t v10;
  _QWORD v12[5];

  v5 = sub_23361D340();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  type metadata accessor for ContentPackageReader();
  swift_allocObject();
  result = (uint64_t *)ContentPackageReader.init(bundleURL:isBundleOwner:)((uint64_t)v7, 0);
  if (!v2)
  {
    v10 = (uint64_t)result;
    sub_233177068(a2, (uint64_t)v12);
    swift_allocObject();
    return sub_2333CAA68(v10, v12);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OrderBundle.close()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  id *v3;
  os_unfair_lock_s *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v3 = (id *)&v2[4];
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_2333E8FAC(v3, v1);
  os_unfair_lock_unlock(v4);
}

uint64_t OrderBundle.closeAfterAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2333CAFDC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_2333CB038;
  return ContentPackageReader.closeAfterAsync<A>(_:)(*(_QWORD *)(v0 + 16), *(int **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2333CB038()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t static OrderBundle.== infix(_:_:)()
{
  sub_23361DE5C();
  sub_233167C58(&qword_25604CEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62E8]);
  return sub_23361E00C() & 1;
}

uint64_t OrderBundle.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_manifestHash;
  v2 = sub_23361DE5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2333CB700(v0 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content);
  return v0;
}

uint64_t OrderBundle.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_manifestHash;
  v2 = sub_23361DE5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2333CB700(v0 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content);
  return swift_deallocClassInstance();
}

uint64_t sub_2333CB1C0()
{
  sub_23361DE5C();
  sub_233167C58(&qword_25604CEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62E8]);
  return sub_23361E00C() & 1;
}

uint64_t *sub_2333CB238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD v23[6];
  uint64_t v24;
  _QWORD v25[6];

  v24 = a4;
  v25[5] = *MEMORY[0x24BDAC8D0];
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v23 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v23 - v16;
  type metadata accessor for ContentPackageUnarchiver();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233643420;
  v19 = a3;
  v20 = (uint64_t *)inited;
  ContentPackageUnarchiver.unarchive(_:workingDirectory:)(a1, a2, v19, (uint64_t)v17);
  if (v4)
  {
    swift_release();
  }
  else
  {
    v23[5] = v12;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v17, v8);
    type metadata accessor for ContentPackageReader();
    swift_allocObject();
    v21 = ContentPackageReader.init(bundleURL:isBundleOwner:)((uint64_t)v15, 1);
    sub_233177068(v24, (uint64_t)v25);
    type metadata accessor for OrderBundle();
    swift_allocObject();
    v20 = sub_2333CAA68(v21, v25);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  }
  return v20;
}

uint64_t sub_2333CB6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawOrderContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333CB700(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawOrderContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2333CB73C()
{
  return type metadata accessor for OrderBundle();
}

uint64_t type metadata accessor for OrderBundle()
{
  uint64_t result;

  result = qword_25604CEE8;
  if (!qword_25604CEE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333CB780()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361DE5C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RawECommerceOrderContent(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OrderBundle()
{
  return swift_lookUpClassMethod();
}

id sub_2333CB824()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  if (qword_254247048 != -1)
    swift_once();
  v0 = *((_QWORD *)off_254247040 + 2);
  v1 = (objc_class *)type metadata accessor for BankConnectSpotlightTransactionsProvider();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit40BankConnectSpotlightTransactionsProvider_store] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_2333CB93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2333CB954()
{
  uint64_t *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0[3] + OBJC_IVAR____TtC10FinanceKit40BankConnectSpotlightTransactionsProvider_store) + 16), sel_newBackgroundContext);
  v0[4] = (uint64_t)v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_2333CB9CC;
  return sub_2333CBD7C(v0[2], (uint64_t)v1);
}

uint64_t sub_2333CB9CC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333CBA28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_2333CBB8C(uint64_t a1, const void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;

  v3[2] = a3;
  v6 = sub_23361D340();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v3[5] = swift_task_alloc();
  v3[6] = _Block_copy(a2);
  sub_23361D2D4();
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_2333CBC20()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0[2] + OBJC_IVAR____TtC10FinanceKit40BankConnectSpotlightTransactionsProvider_store) + 16), sel_newBackgroundContext);
  v0[7] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_2333CBC9C;
  return sub_2333CBD7C(v0[5], (uint64_t)v1);
}

uint64_t sub_2333CBC9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333CBCF8()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = *(void **)(v0 + 72);
  v2 = *(void (***)(_QWORD, _QWORD))(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v6 = *(void **)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  ((void (**)(_QWORD, void *))v2)[2](v2, v1);
  _Block_release(v2);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333CBD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_23361E96C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = sub_23361D340();
  v3[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 + 64);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333CBE0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[12];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[7];
  v14 = v0[8];
  v13 = v0[6];
  v6 = v0[3];
  v5 = (void *)v0[4];
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  v0[13] = v9;
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v14, *MEMORY[0x24BDBB370], v13);
  v10 = v5;
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFE0);
  *v11 = v0;
  v11[1] = sub_2333CBF58;
  return sub_23361E990();
}

uint64_t sub_2333CBF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_2333CBFD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

void sub_2333CC018(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  unint64_t v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  _QWORD *inited;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  int v71;
  uint8_t *v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  uint8_t *v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;

  v5 = (uint64_t)v4;
  v83 = a4;
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = (void *)MEMORY[0x23493465C](a1 + 16);
  if (!v13)
  {
    v44 = 0;
    goto LABEL_26;
  }
  v82 = v13;
  v14 = objc_msgSend(a2, sel_persistentStoreCoordinator);
  if (v14)
  {
    v15 = v14;
    v16 = v4;
    v17 = (void *)sub_23361D268();
    v18 = objc_msgSend(v15, sel_managedObjectIDForURIRepresentation_, v17);

    v5 = (uint64_t)v4;
    if (v18)
    {
      v19 = sub_2333CCD70(v18);
      type metadata accessor for ManagedInternalTransaction();
      v20 = sub_23361E984();
      if (v4)
      {

        if (qword_256041CA0 != -1)
          swift_once();
        v21 = sub_23361DB80();
        __swift_project_value_buffer(v21, (uint64_t)qword_2560495B0);
        v22 = v18;
        v23 = v4;
        v24 = v22;
        v25 = v4;
        v26 = sub_23361DB68();
        v27 = sub_23361E768();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = swift_slowAlloc();
          v80 = (_QWORD *)swift_slowAlloc();
          v81 = swift_slowAlloc();
          v85 = v81;
          *(_DWORD *)v28 = 136315394;
          v29 = objc_msgSend(v24, sel_debugDescription);
          v30 = sub_23361E150();
          v32 = v31;

          v84 = sub_233164DCC(v30, v32, &v85);
          sub_23361EBC4();

          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 12) = 2112;
          v33 = v4;
          v34 = _swift_stdlib_bridgeErrorToNSError();
          v84 = v34;
          sub_23361EBC4();
          v35 = v80;
          *v80 = v34;

          _os_log_impl(&dword_233151000, v26, v27, "Failed to fetch transaction for %s with error: %@", (uint8_t *)v28, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
          swift_arrayDestroy();
          MEMORY[0x234934590](v35, -1, -1);
          v36 = v81;
          swift_arrayDestroy();
          MEMORY[0x234934590](v36, -1, -1);
          MEMORY[0x234934590](v28, -1, -1);

        }
        else
        {

        }
        v44 = 0;
        goto LABEL_26;
      }
      v45 = v20;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        v67 = sub_23361EF30();
        swift_bridgeObjectRelease();
        if (v67)
          goto LABEL_18;
      }
      else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_18:
        if ((v45 & 0xC000000000000001) != 0)
        {
          v46 = (id)MEMORY[0x234933120](0, v45);
        }
        else
        {
          if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_42;
          }
          v46 = *(id *)(v45 + 32);
        }
        v16 = v46;
        swift_bridgeObjectRelease();
        v47 = objc_msgSend(v16, sel_applePayPrimaryAccountIdentifier);
        if (v47)
        {
          v48 = v47;
          sub_23361E150();

          if (qword_256041D40 == -1)
          {
LABEL_23:
            v49 = off_256054E98;
            type metadata accessor for ManagedTransactionExporter();
            inited = (_QWORD *)swift_initStackObject();
            inited[5] = type metadata accessor for BankConnectService();
            inited[6] = &protocol witness table for BankConnectService;
            inited[2] = v49;
            swift_retain();
            v51 = sub_2331BED58(v16, 1);
            swift_setDeallocating();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
            v52 = objc_allocWithZone((Class)FKBankConnectSpotlightTransactionsProviderResponse);
            v53 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            v44 = objc_msgSend(v52, sel_initWithTransaction_primaryAccountIdentifier_, v51, v53);

            goto LABEL_26;
          }
LABEL_42:
          swift_once();
          goto LABEL_23;
        }
        if (qword_256041CA0 != -1)
          swift_once();
        v54 = sub_23361DB80();
        __swift_project_value_buffer(v54, (uint64_t)qword_2560495B0);
        v55 = v18;
        v56 = sub_23361DB68();
        v57 = sub_23361E768();
        v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          v59 = swift_slowAlloc();
          LODWORD(v80) = v58;
          v60 = (uint8_t *)v59;
          v81 = swift_slowAlloc();
          v85 = v81;
          v79 = v60;
          *(_DWORD *)v60 = 136315138;
          v78[1] = v60 + 4;
          v61 = objc_msgSend(v55, sel_debugDescription);
          v62 = sub_23361E150();
          v64 = v63;

          v84 = sub_233164DCC(v62, v64, &v85);
          sub_23361EBC4();

          swift_bridgeObjectRelease();
          v65 = v79;
          _os_log_impl(&dword_233151000, v56, (os_log_type_t)v80, "Not found an associated primary account identifier for a transaction with\nobjectID %s", v79, 0xCu);
          v66 = v81;
          swift_arrayDestroy();
          MEMORY[0x234934590](v66, -1, -1);
          MEMORY[0x234934590](v65, -1, -1);

LABEL_37:
          v44 = 0;
          goto LABEL_26;
        }

        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      if (qword_256041CA0 != -1)
        swift_once();
      v68 = sub_23361DB80();
      __swift_project_value_buffer(v68, (uint64_t)qword_2560495B0);
      v55 = v18;
      v69 = sub_23361DB68();
      v70 = sub_23361E768();
      v71 = v70;
      if (os_log_type_enabled(v69, v70))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v81 = swift_slowAlloc();
        v85 = v81;
        LODWORD(v80) = v71;
        *(_DWORD *)v72 = 136315138;
        v79 = v72 + 4;
        v73 = objc_msgSend(v55, sel_debugDescription);
        v74 = sub_23361E150();
        v76 = v75;

        v84 = sub_233164DCC(v74, v76, &v85);
        sub_23361EBC4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v69, (os_log_type_t)v80, "Failed to create transaction object from objectID %s", v72, 0xCu);
        v77 = v81;
        swift_arrayDestroy();
        MEMORY[0x234934590](v77, -1, -1);
        MEMORY[0x234934590](v72, -1, -1);

        goto LABEL_37;
      }

LABEL_39:
      v44 = 0;
      goto LABEL_26;
    }
  }
  v81 = v5;
  if (qword_256041CA0 != -1)
    swift_once();
  v37 = sub_23361DB80();
  __swift_project_value_buffer(v37, (uint64_t)qword_2560495B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  v38 = sub_23361DB68();
  v39 = sub_23361E768();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v85 = v41;
    *(_DWORD *)v40 = 136315138;
    v80 = v40 + 4;
    v42 = sub_23361D220();
    v84 = sub_233164DCC(v42, v43, &v85);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_233151000, v38, v39, "Could not create object ID for %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v41, -1, -1);
    MEMORY[0x234934590](v40, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  v44 = 0;
LABEL_26:
  *v83 = v44;
}

id BankConnectSpotlightTransactionsProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectSpotlightTransactionsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectSpotlightTransactionsProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectSpotlightTransactionsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BankConnectSpotlightTransactionsProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectSpotlightTransactionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static BankConnectSpotlightTransactionsProvider.makeProvider()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BankConnectSpotlightTransactionsProvider.transaction(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318B35C;
  return v7(a1);
}

uint64_t sub_2333CCBDC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_2333CCC10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2331676FC;
  return ((uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_25604CFD0 + dword_25604CFD0))(v2, v3, v4);
}

uint64_t sub_2333CCC84()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2333CCCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23361D340();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_2333CCD24(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23361D340() - 8) + 80);
  sub_2333CC018(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + ((v3 + 32) & ~v3), a1);
}

id sub_2333CCD70(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  type metadata accessor for ManagedInternalTransaction();
  v10.receiver = (id)swift_getObjCClassFromMetadata();
  v10.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v2 = objc_msgSendSuper2(&v10, sel_fetchRequest);
  v3 = (void *)sub_23361E3D8();
  objc_msgSend(v2, sel_setRelationshipKeyPathsForPrefetching_, v3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  *(_QWORD *)(v5 + 56) = sub_233168668(0, (unint64_t *)&qword_2560466E8);
  *(_QWORD *)(v5 + 64) = sub_2333CCF64();
  *(_QWORD *)(v5 + 32) = a1;
  v6 = a1;
  *(_QWORD *)(v4 + 32) = sub_23361E6B4();
  *(_QWORD *)(v4 + 40) = sub_23361E6B4();
  sub_23361E408();
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);

  objc_msgSend(v2, sel_setPredicate_, v8);
  return v2;
}

unint64_t sub_2333CCF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604CFE8;
  if (!qword_25604CFE8)
  {
    v1 = sub_233168668(255, (unint64_t *)&qword_2560466E8);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_25604CFE8);
  }
  return result;
}

uint64_t ContentPackageArchiver.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ContentPackageArchiver.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ContentPackageArchiver.archiveBundle(at:)@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  id v27;
  id v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  int v43;
  void (*v44)(char *, uint64_t);
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;

  v52 = a1;
  v51 = sub_23361D6A0();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v2 = (char *)v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D340();
  v50 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v45 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v45 - v13;
  v15 = sub_23361DD84();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v48 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v53 = (char *)v45 - v19;
  sub_23361D214();
  v20 = v15;
  sub_23361DCA0();
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v21(v14, 1, v20) == 1)
  {
    sub_233168608((uint64_t)v14, &qword_256044348);
    type metadata accessor for ContentPackageArchivingError();
    sub_2333CD6DC();
    swift_allocError();
    v23 = v22;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 3, v24);
    return swift_willThrow();
  }
  else
  {
    v45[0] = *(_QWORD *)(v16 + 32);
    ((void (*)(char *, char *, uint64_t))v45[0])(v53, v14, v20);
    v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v46 = v20;
    v27 = v26;
    v28 = objc_msgSend(v26, sel_temporaryDirectory);

    sub_23361D2D4();
    sub_23361D694();
    sub_23361D64C();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v2, v51);
    sub_23361D28C();
    swift_bridgeObjectRelease();
    v29 = *(void (**)(char *, uint64_t))(v50 + 8);
    v29(v6, v3);
    v30 = v52;
    sub_23361D298();
    v29(v8, v3);
    sub_23361D214();
    v31 = v46;
    sub_23361DCA0();
    if (v21(v12, 1, v31) == 1)
    {
      sub_233168608((uint64_t)v12, &qword_256044348);
      type metadata accessor for ContentPackageArchivingError();
      sub_2333CD6DC();
      swift_allocError();
      v33 = v32;
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 3, 3, v34);
      swift_willThrow();
      v29(v30, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v53, v31);
    }
    else
    {
      v51 = v16;
      v35 = v53;
      v36 = v48;
      ((void (*)(char *, char *, uint64_t))v45[0])(v48, v12, v31);
      type metadata accessor for ArchiveDiskReader();
      swift_allocObject();
      v37 = v47;
      v38 = sub_2331D8378();
      if (v37)
      {
        v39 = v46;
        v40 = v36;
        v44 = *(void (**)(char *, uint64_t))(v51 + 8);
        v44(v40, v46);
        v29(v30, v3);
      }
      else
      {
        v50 = v38;
        MEMORY[0x24BDAC7A8](v38);
        v45[-2] = 0x20400000002;
        LODWORD(v45[-1]) = 16777600;
        v42 = v36;
        v41 = sub_23361DCB8();
        MEMORY[0x24BDAC7A8](v41);
        v45[-4] = v50;
        v45[-3] = v35;
        LODWORD(v45[-2]) = v43;
        v45[-1] = v45[1];
        sub_23361DC7C();
        swift_release();
        v44 = *(void (**)(char *, uint64_t))(v51 + 8);
        v39 = v46;
        v44(v42, v46);
      }
      return ((uint64_t (*)(char *, uint64_t))v44)(v35, v39);
    }
  }
}

uint64_t ContentPackageArchiver.archiveBundle(at:to:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  type metadata accessor for ArchiveDiskReader();
  swift_allocObject();
  result = sub_2331D8378();
  if (!v0)
  {
    MEMORY[0x24BDAC7A8](result);
    v2 = sub_23361DCB8();
    MEMORY[0x24BDAC7A8](v2);
    sub_23361DC7C();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ContentPackageArchivingError()
{
  uint64_t result;

  result = qword_25604D070;
  if (!qword_25604D070)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2333CD6DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604CFF0;
  if (!qword_25604CFF0)
  {
    v1 = type metadata accessor for ContentPackageArchivingError();
    result = MEMORY[0x234934494](&protocol conformance descriptor for ContentPackageArchivingError, v1);
    atomic_store(result, (unint64_t *)&qword_25604CFF0);
  }
  return result;
}

uint64_t sub_2333CD724(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = sub_2331D8568();
  if (!v2)
  {
    type metadata accessor for ArchiveMemoryWriter();
    swift_allocObject();
    v6 = sub_2331DEFD4();
    sub_2333CE3F8(a1, v6, a2);
    swift_release();
    return sub_2331D8668();
  }
  return result;
}

uint64_t sub_2333CD80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a4;
  v7 = sub_23361DD84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  v14 = archive_entry_filetype();
  result = sub_23361DC4C();
  if (v14 != (unsigned __int16)result)
  {
    v16 = archive_entry_filetype();
    result = sub_23361DC58();
    if (v16 != (unsigned __int16)result)
    {
      result = archive_entry_sourcepath();
      if (result)
      {
        sub_23361DD00();
        v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
        MEMORY[0x24BDAC7A8](v17);
        *(&v20 - 2) = 0x20000000000000;
        *((_DWORD *)&v20 - 2) = 16842752;
        v18 = sub_23361DCB8();
        if (!v4)
        {
          MEMORY[0x24BDAC7A8](v18);
          *((_DWORD *)&v20 - 8) = v19;
          *(&v20 - 3) = a2;
          *(&v20 - 2) = a3;
          *(&v20 - 1) = v21;
          sub_23361DC7C();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
    }
  }
  return result;
}

uint64_t sub_2333CD9EC()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  int v3;
  char v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_23361DC94();
  if (!v0)
  {
    v3 = result;
    if ((v2 & 1) != 0)
    {
LABEL_8:
      sub_2333CEAC4();
      swift_willThrowTypedImpl();
      result = swift_allocError();
      *v5 = v3;
    }
    else if (result >= 1)
    {
      while ((archive_write_data() & 0x8000000000000000) == 0)
      {
        result = sub_23361DC94();
        v3 = result;
        if ((v4 & 1) != 0)
          goto LABEL_8;
        if (result <= 0)
          return result;
      }
      sub_2331D778C();
      v6 = swift_allocError();
      v8 = v7;
      v9 = archive_errno();
      result = archive_error_string();
      if (result)
      {
        v10 = sub_23361E288();
        *(_DWORD *)v8 = v9;
        *(_QWORD *)(v8 + 8) = v10;
        *(_QWORD *)(v8 + 16) = v11;
        sub_2331DEB68();
        swift_allocError();
        *(_QWORD *)v12 = v6;
        *(_QWORD *)(v12 + 8) = 0xD000000000000014;
        *(_QWORD *)(v12 + 16) = 0x8000000233675950;
        *(_BYTE *)(v12 + 24) = 1;
        return swift_willThrow();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t ContentPackageArchiver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ContentPackageArchiver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2333CDBBC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;
  int v3;
  _DWORD *v4;

  result = sub_23361DC88();
  v3 = result;
  if ((result & 0x100000000) != 0)
  {
    sub_2333CEAC4();
    swift_willThrowTypedImpl();
    result = swift_allocError();
    *v4 = v3;
  }
  else
  {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2333CDC40@<X0>(_DWORD *a1@<X8>)
{
  return sub_2333CEA74(a1);
}

uint64_t sub_2333CDC54()
{
  uint64_t v0;

  return sub_2333CD724(*(char **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentPackageArchivingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23361DD84();
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v11((uint64_t *)((char *)a1 + *(int *)(v7 + 48)), (uint64_t *)((char *)a2 + *(int *)(v7 + 48)), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for ContentPackageArchivingError(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23361DD84();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(v2 + 48), v4);
  }
  return result;
}

char *initializeWithCopy for ContentPackageArchivingError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361DD84();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v9(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithCopy for ContentPackageArchivingError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23361DD84();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
      v15(a1, a2, v14);
      v15(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v14);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_25604CFF8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361DD84();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  v12(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *initializeWithTake for ContentPackageArchivingError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361DD84();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v9(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithTake for ContentPackageArchivingError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23361DD84();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
      v15(a1, a2, v14);
      v15(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v14);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_25604CFF8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361DD84();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  v12(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentPackageArchivingError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333CE224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContentPackageArchivingError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333CE280(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2333CE2D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_2333CE314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_2333CE358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361DD84();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ContentPackageArchiver()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContentPackageArchiver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentPackageArchiver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_2333CE3F8(char *a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSUInteger v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  int v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;

  v74 = a3;
  v71 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v70 = (uint64_t)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)v62 - v8;
  v9 = sub_23361DD84();
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v62 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v62 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v62 - v19;
  v21 = NSPageSize();
  v22 = swift_slowAlloc();
  v23 = sub_2331D7CA8();
  if (v3)
    return MEMORY[0x234934590](v22, -1, -1);
  v25 = v23;
  v68 = v18;
  v63 = v12;
  v75 = a1;
  v65 = v22 + v21;
  v66 = v15;
  v62[1] = MEMORY[0x24BEE4AE0] + 8;
  v27 = v72;
  v26 = v73;
  v28 = (uint64_t)v64;
  v69 = v20;
  v67 = v22;
  while (1)
  {
    if (!v25)
      return MEMORY[0x234934590](v22, -1, -1);
    archive_read_disk_descend();
    if (!archive_entry_pathname_utf8())
      goto LABEL_4;
    v29 = v68;
    sub_23361DD00();
    v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v30(v20, v29, v26);
    if ((sub_23361DD0C() & 1) != 0)
    {
      v31 = archive_entry_filetype();
      if (v31 != (unsigned __int16)sub_23361DC4C())
      {
        type metadata accessor for ContentPackageArchivingError();
        sub_2333CD6DC();
        swift_allocError();
        v60 = v59;
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 2, 3, v61);
        swift_willThrow();
        swift_release();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v73);
        v22 = v67;
        return MEMORY[0x234934590](v22, -1, -1);
      }
    }
    v32 = v20;
    v33 = v66;
    v34 = v67;
    v35 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v26 = v73;
    v35(v66, v32, v73);
    if ((sub_23361DCC4() & 1) == 0)
    {
      type metadata accessor for ContentPackageArchivingError();
      sub_2333CD6DC();
      swift_allocError();
      v41 = v40;
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604CFF8);
      v75 = &v41[*(int *)(v42 + 48)];
      v35(v41, v33, v26);
      v35(v75, v74, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 3, v42);
      swift_willThrow();
      v43 = *(void (**)(char *, uint64_t))(v27 + 8);
      v43(v33, v26);
      v43(v69, v26);
      swift_release();
      v22 = v34;
      return MEMORY[0x234934590](v22, -1, -1);
    }
    v30((char *)v28, v33, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
    v36 = v70;
    sub_2331D5368(v28, v70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v36, 1, v26) == 1)
    {
      sub_233168608(v36, &qword_256044348);
      archive_entry_set_pathname_utf8();
      sub_233168608(v28, &qword_256044348);
    }
    else
    {
      v37 = v63;
      v30(v63, (char *)v36, v26);
      sub_23361DCB8();
      sub_233168608(v28, &qword_256044348);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
    }
    v22 = v34;
    v38 = v71;
    v39 = archive_write_header();
    v27 = v72;
    v20 = v69;
    if (v39)
      break;
    sub_2333CD80C(v25, v22, v65, v38);
    if (archive_write_finish_entry())
    {
      sub_2331D778C();
      v51 = swift_allocError();
      v53 = v52;
      v54 = archive_errno();
      result = archive_error_string();
      if (result)
      {
        v55 = sub_23361E288();
        *(_DWORD *)v53 = v54;
        *(_QWORD *)(v53 + 8) = v55;
        *(_QWORD *)(v53 + 16) = v56;
        sub_2331DEB68();
        swift_allocError();
        *(_QWORD *)v57 = v51;
        *(_QWORD *)(v57 + 8) = 0xD000000000000016;
        *(_QWORD *)(v57 + 16) = 0x800000023366C490;
        *(_BYTE *)(v57 + 24) = 1;
        swift_willThrow();
        v58 = v69;
        sub_2331DECE8();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v58, v26);
        goto LABEL_23;
      }
      goto LABEL_26;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v26);
LABEL_4:
    swift_release();
    v25 = sub_2331D7CA8();
  }
  sub_2331D778C();
  v44 = swift_allocError();
  v46 = v45;
  v47 = archive_errno();
  result = archive_error_string();
  if (result)
  {
    v48 = sub_23361E288();
    *(_DWORD *)v46 = v47;
    *(_QWORD *)(v46 + 8) = v48;
    *(_QWORD *)(v46 + 16) = v49;
    sub_2331DEB68();
    swift_allocError();
    *(_QWORD *)v50 = v44;
    *(_QWORD *)(v50 + 8) = 0xD00000000000001CLL;
    *(_QWORD *)(v50 + 16) = 0x800000023366C4B0;
    *(_BYTE *)(v50 + 24) = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v69, v26);
LABEL_23:
    swift_release();
    return MEMORY[0x234934590](v22, -1, -1);
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2333CEA5C()
{
  return sub_2331D5308();
}

uint64_t sub_2333CEA74@<X0>(_DWORD *a1@<X8>)
{
  return sub_2333CDBBC(a1);
}

uint64_t sub_2333CEAA4()
{
  return sub_2333CD9EC();
}

unint64_t sub_2333CEAC4()
{
  unint64_t result;

  result = qword_25604D118;
  if (!qword_25604D118)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE6000], MEMORY[0x24BEE5FF8]);
    atomic_store(result, (unint64_t *)&qword_25604D118);
  }
  return result;
}

uint64_t sub_2333CEB08()
{
  return sub_2333CDC54();
}

uint64_t TaskQueueDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 16) && *(_BYTE *)(v1 + 16) != 1)
  {
    sub_23361F35C();
    return sub_233243554(a1, v3);
  }
  else
  {
    sub_23361F35C();
    return sub_23361E0A8();
  }
}

uint64_t TaskQueueDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23361F350();
  sub_23361F35C();
  if (v2 > 1)
    sub_233243554((uint64_t)v4, v1);
  else
    sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333CEC30()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23361F350();
  sub_23361F35C();
  if (v2 > 1)
    sub_233243554((uint64_t)v4, v1);
  else
    sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333CECC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 16) && *(_BYTE *)(v1 + 16) != 1)
  {
    sub_23361F35C();
    return sub_233243554(a1, v3);
  }
  else
  {
    sub_23361F35C();
    return sub_23361E0A8();
  }
}

uint64_t sub_2333CED40()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23361F350();
  sub_23361F35C();
  if (v2 > 1)
    sub_233243554((uint64_t)v4, v1);
  else
    sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t BankConnectTaskQueueProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  return v0;
}

uint64_t BankConnectTaskQueueProvider.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  return v0;
}

uint64_t sub_2333CEE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 112);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  sub_2331E58D8(v2, v3, v4);
  swift_bridgeObjectRetain();
  v7 = sub_2331E3EF4(v2, v3, v4);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_2331E58F8(v2, v3, v4);
LABEL_5:
    type metadata accessor for BankConnectTaskQueue();
    v9 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_BYTE *)(v9 + 112) = 0;
    *(_QWORD *)(v9 + 120) = MEMORY[0x24BEE4AF8];
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_2331E58F8(v2, v3, v4);
LABEL_6:
  swift_beginAccess();
  sub_2331E58D8(v2, v3, v4);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v5;
  *v5 = 0x8000000000000000;
  sub_23328E360(v9, v2, v3, v4, isUniquelyReferenced_nonNull_native);
  *v5 = v12;
  swift_bridgeObjectRelease();
  sub_2331E58F8(v2, v3, v4);
  swift_endAccess();
  return v9;
}

uint64_t BankConnectTaskQueue.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
  return v0;
}

uint64_t BankConnectTaskQueueProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BankConnectTaskQueueProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2333CF048(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_2333CF060()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2333CEE3C(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t BankConnectTaskQueue.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_BYTE *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
  return v0;
}

uint64_t sub_2333CF0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2333CF0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  char *v8;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = sub_2333D00DC();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_OWORD *)(v4 + 32) = v5;
  v8 = (char *)&dword_25604D128 + dword_25604D128;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_2333CF188;
  return ((uint64_t (*)(_QWORD, uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, _QWORD))v8)(*(_QWORD *)(v0 + 16), v1, v3, sub_2333D0120, v4, *(_QWORD *)(v0 + 40));
}

uint64_t sub_2333CF188()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2333CF1D8(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[2] = a4;
  v5[3] = a5;
  v5[4] = *(_QWORD *)(a5 - 8);
  v5[5] = swift_task_alloc();
  v7 = swift_task_alloc();
  v5[6] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_2333CF274;
  return v10(v7);
}

uint64_t sub_2333CF274()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333CF2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(*(_QWORD *)(*(_QWORD *)(v5 + 64) + 40), v1, v3);
  swift_continuation_resume();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333CF364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_23361E474();
  }
  return swift_task_switch();
}

uint64_t sub_2333CF3CC()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_2333CF428;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_2333CF428()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return (*(uint64_t (**)(void))(*v0 + 8))();
}

uint64_t sub_2333CF468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2333CF488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  char *v8;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = sub_2333D00DC();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_OWORD *)(v4 + 32) = v5;
  v8 = (char *)&dword_25604D138 + dword_25604D138;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_2333CF534;
  return ((uint64_t (*)(_QWORD, uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, _QWORD))v8)(*(_QWORD *)(v0 + 16), v1, v3, sub_2333D0168, v4, *(_QWORD *)(v0 + 40));
}

uint64_t sub_2333CF534()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2333CF5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a5;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  v19 = (_QWORD *)(a2 + 120);
  swift_beginAccess();
  v20 = *(_QWORD **)(a2 + 120);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 120) = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v20 = sub_2334A4978(0, v20[2] + 1, 1, v20);
    *v19 = v20;
  }
  v23 = v20[2];
  v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    v20 = sub_2334A4978((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
    *v19 = v20;
  }
  v20[2] = v23 + 1;
  v24 = &v20[2 * v23];
  v24[4] = a7;
  v24[5] = v18;
  result = swift_endAccess();
  if ((*(_BYTE *)(a2 + 112) & 1) == 0)
  {
    *(_BYTE *)(a2 + 112) = 1;
    v26 = sub_23361E534();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 1, 1, v26);
    v27 = sub_2333D00DC();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = a2;
    v28[3] = v27;
    v28[4] = a2;
    swift_retain_n();
    sub_2333B205C((uint64_t)v17, a9, (uint64_t)v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_2333CF778(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[3] = a4;
  v5[4] = a5;
  v5[5] = *(_QWORD *)(a5 - 8);
  v5[6] = swift_task_alloc();
  v7 = swift_task_alloc();
  v5[7] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v5[8] = v8;
  *v8 = v5;
  v8[1] = sub_2333CF814;
  return v10(v7);
}

uint64_t sub_2333CF814()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333CF878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 32))(*(_QWORD *)(*(_QWORD *)(v5 + 64) + 40), v1, v3);
  swift_continuation_throwingResume();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333CF910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2, v0 + 16, v1);
  swift_continuation_throwingResumeWithError();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333CF9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_23361E474();
  }
  return swift_task_switch();
}

uint64_t sub_2333CFA14()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_2333CFA70;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_2333CFA70()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2333CFAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch();
}

uint64_t sub_2333CFADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int *v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v1 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 64);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 120) + 16))
  {
    swift_beginAccess();
    v3 = *(_QWORD **)(v2 + 120);
    v4 = v3[2];
    if (v4)
    {
      v5 = (int *)v3[4];
      *(_QWORD *)(v0 + 72) = v3[5];
      swift_retain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v4 - 1) > v3[3] >> 1)
        v3 = sub_2334A4978(isUniquelyReferenced_nonNull_native, v4, 1, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604D268);
      swift_arrayDestroy();
      v7 = v3[2];
      if (v7)
      {
        v8 = *(_QWORD *)(v0 + 64);
        memmove(v3 + 4, v3 + 6, 16 * v7 - 16);
        v3[2] = v7 - 1;
        *(_QWORD *)(v8 + 120) = v3;
        swift_endAccess();
        v11 = (uint64_t (*)(void))((char *)v5 + *v5);
        v9 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 80) = v9;
        *v9 = v0;
        v9[1] = sub_2333CFCB0;
        return v11();
      }
    }
    else
    {
      __break(1u);
    }
    return sub_23361EF6C();
  }
  else
  {
    *(_BYTE *)(v2 + 112) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2333CFCB0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2333CFD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int *v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v1 + 120);
  v2 = v1 + 120;
  if (*(_QWORD *)(v3 + 16))
  {
    swift_beginAccess();
    v4 = *(_QWORD **)v2;
    v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    if (v5)
    {
      v6 = (int *)v4[4];
      *(_QWORD *)(v0 + 72) = v4[5];
      swift_retain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v5 - 1) > v4[3] >> 1)
        v4 = sub_2334A4978(isUniquelyReferenced_nonNull_native, v5, 1, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604D268);
      swift_arrayDestroy();
      v8 = v4[2];
      if (v8)
      {
        v9 = *(_QWORD *)(v0 + 64);
        memmove(v4 + 4, v4 + 6, 16 * v8 - 16);
        v4[2] = v8 - 1;
        *(_QWORD *)(v9 + 120) = v4;
        swift_endAccess();
        v12 = (uint64_t (*)(void))((char *)v6 + *v6);
        v10 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 80) = v10;
        *v10 = v0;
        v10[1] = sub_2333CFCB0;
        return v12();
      }
    }
    else
    {
      __break(1u);
    }
    return sub_23361EF6C();
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 64) + 112) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t BankConnectTaskQueue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BankConnectTaskQueue.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t BankConnectTaskQueue.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t _s10FinanceKit19TaskQueueDescriptorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v2 == v5 && v3 == v6)
          v9 = 1;
        else
          v9 = sub_23361F224();
        LOBYTE(v4) = 1;
        sub_2331E58D8(v5, v6, 1u);
        sub_2331E58D8(v2, v3, 1u);
        LOBYTE(v7) = 1;
        goto LABEL_22;
      }
    }
    else if (v7 == 2)
    {
      LOBYTE(v4) = 2;
      sub_2331E58D8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 2u);
      sub_2331E58D8(v2, v3, 2u);
      v9 = sub_2333E36C8(v2, v5);
      goto LABEL_22;
    }
LABEL_17:
    sub_2331E58D8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_2331E58D8(v2, v3, v4);
    v9 = 0;
    goto LABEL_22;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_17;
  if (v2 == v5 && v3 == v6)
    v9 = 1;
  else
    v9 = sub_23361F224();
  sub_2331E58D8(v5, v6, 0);
  sub_2331E58D8(v2, v3, 0);
  LOBYTE(v4) = 0;
  LOBYTE(v7) = 0;
LABEL_22:
  sub_2331E58F8(v2, v3, v4);
  sub_2331E58F8(v5, v6, v7);
  return v9 & 1;
}

uint64_t type metadata accessor for BankConnectTaskQueue()
{
  return objc_opt_self();
}

unint64_t sub_2333D00DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560478A0;
  if (!qword_2560478A0)
  {
    v1 = type metadata accessor for BankConnectTaskQueue();
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectTaskQueue, v1);
    atomic_store(result, (unint64_t *)&qword_2560478A0);
  }
  return result;
}

uint64_t sub_2333D0120(uint64_t a1)
{
  uint64_t *v1;

  return sub_2333CF5A8(a1, v1[3], v1[4], v1[5], v1[2], (uint64_t)&unk_2504827C0, (uint64_t)&unk_25604D288, (uint64_t)&unk_2504827E8, (uint64_t)&unk_25604D290);
}

uint64_t sub_2333D0168(uint64_t a1)
{
  uint64_t *v1;

  return sub_2333CF5A8(a1, v1[3], v1[4], v1[5], v1[2], (uint64_t)&unk_250482770, (uint64_t)&unk_25604D278, (uint64_t)&unk_250482798, (uint64_t)&unk_256047990);
}

unint64_t sub_2333D01B4()
{
  unint64_t result;

  result = qword_25604D140;
  if (!qword_25604D140)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TaskQueueDescriptor, &type metadata for TaskQueueDescriptor);
    atomic_store(result, (unint64_t *)&qword_25604D140);
  }
  return result;
}

uint64_t dispatch thunk of BankConnectTaskQueueProviding.taskQueue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318B35C;
  return v9(a1, a2, a3);
}

uint64_t destroy for TaskQueueDescriptor(uint64_t a1)
{
  return sub_2331E58F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FinanceKit19TaskQueueDescriptorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2331E58D8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TaskQueueDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2331E58D8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2331E58F8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TaskQueueDescriptor(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2331E58F8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TaskQueueDescriptor()
{
  return &type metadata for TaskQueueDescriptor;
}

uint64_t type metadata accessor for BankConnectTaskQueueProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectTaskQueueProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectTaskQueueProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of BankConnectTaskQueueProvider.taskQueue(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t method lookup function for BankConnectTaskQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectTaskQueue.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BankConnectTaskQueue.addTask<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 160)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 160));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23318C26C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectTaskQueue.addThrowingTask<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 168)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 168));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_2331676FC;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_2333D04E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2333D0504(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = (int *)v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2331676FC;
  return sub_2333CF778(a1, v5, v7, v6, v4);
}

uint64_t sub_2333D0580(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = (int *)v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23318C26C;
  return sub_2333CF1D8(a1, v5, v7, v6, v4);
}

uint64_t sub_2333D05FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318C26C;
  v3[8] = v2;
  return swift_task_switch();
}

uint64_t RawBankConnectData.OfflineLabPermissionBody.init(hasPermission:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t RawBankConnectData.OfflineLabPermissionBody.hasPermission.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t RawBankConnectData.OfflineLabPermissionBody.hasPermission.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*RawBankConnectData.OfflineLabPermissionBody.hasPermission.modify())()
{
  return nullsub_1;
}

uint64_t sub_2333D0690()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333D06E4()
{
  return sub_23361E0A8();
}

uint64_t sub_2333D0700()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333D0750@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2333D07A0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000020;
  a1[1] = 0x8000000233669640;
}

unint64_t sub_2333D07C0()
{
  return 0xD000000000000020;
}

uint64_t sub_2333D07DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2333D0830()
{
  sub_2333D0980();
  return sub_23361F428();
}

uint64_t sub_2333D0858()
{
  sub_2333D0980();
  return sub_23361F434();
}

BOOL static RawBankConnectData.OfflineLabPermissionBody.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RawBankConnectData.OfflineLabPermissionBody.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D298);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D0980();
  sub_23361F410();
  sub_23361F14C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2333D0980()
{
  unint64_t result;

  result = qword_25604D2A0;
  if (!qword_25604D2A0)
  {
    result = MEMORY[0x234934494](&unk_233643DA0, &_s24OfflineLabPermissionBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D2A0);
  }
  return result;
}

uint64_t RawBankConnectData.OfflineLabPermissionBody.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D2A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D0980();
  sub_23361F3EC();
  if (!v2)
  {
    v9 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2333D0ACC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RawBankConnectData.OfflineLabPermissionBody.init(from:)(a1, a2);
}

uint64_t sub_2333D0AE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D298);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D0980();
  sub_23361F410();
  sub_23361F14C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

__n128 RawBankConnectData.OfflineLabItem.Transaction.init(institutionId:transaction:mapsClassification:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 result;
  __n128 v16;
  __int128 v17;
  __int128 v18;

  v17 = a4[1];
  v18 = *a4;
  v16 = (__n128)a4[2];
  v9 = *((_QWORD *)a4 + 6);
  v10 = *((_QWORD *)a4 + 7);
  v11 = (int *)type metadata accessor for RawBankConnectData.OfflineLabItem.Transaction(0);
  v12 = (_QWORD *)(a5 + v11[7]);
  *v12 = 0xD000000000000018;
  v12[1] = 0x8000000233675A00;
  v13 = (_QWORD *)(a5 + v11[6]);
  *v13 = a1;
  v13[1] = a2;
  sub_233168580(a3, a5, type metadata accessor for RawBankConnectData.Transaction);
  v14 = a5 + v11[5];
  *(_OWORD *)v14 = v18;
  *(_OWORD *)(v14 + 16) = v17;
  result = v16;
  *(__n128 *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 48) = v9;
  *(_QWORD *)(v14 + 56) = v10;
  return result;
}

uint64_t type metadata accessor for RawBankConnectData.OfflineLabItem.Transaction(uint64_t a1)
{
  return sub_233177414(a1, qword_25604D378);
}

uint64_t sub_2333D0CAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333D0CE4 + 4 * byte_233643710[*v0]))(0x746361736E617274, 0xEB000000006E6F69);
}

unint64_t sub_2333D0CE4()
{
  return 0xD000000000000012;
}

uint64_t sub_2333D0D00()
{
  return 0x7475746974736E69;
}

uint64_t sub_2333D0D24()
{
  return 1701869940;
}

uint64_t sub_2333D0D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333DA820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333D0D58()
{
  sub_2333D0F80();
  return sub_23361F428();
}

uint64_t sub_2333D0D80()
{
  sub_2333D0F80();
  return sub_23361F434();
}

uint64_t RawBankConnectData.OfflineLabItem.Transaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[16];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D2B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D0F80();
  sub_23361F410();
  LOBYTE(v14) = 0;
  type metadata accessor for RawBankConnectData.Transaction(0);
  sub_233167C58(&qword_25604D2C0, type metadata accessor for RawBankConnectData.Transaction, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Transaction);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for RawBankConnectData.OfflineLabItem.Transaction(0) + 20));
    v10 = v9[1];
    v14 = *v9;
    v15 = v10;
    v11 = v9[3];
    v16 = v9[2];
    v17 = v11;
    v13[15] = 1;
    sub_2333D0FC4();
    sub_23361F110();
    LOBYTE(v14) = 2;
    sub_23361F140();
    LOBYTE(v14) = 3;
    sub_23361F140();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2333D0F80()
{
  unint64_t result;

  result = qword_25604D2B8;
  if (!qword_25604D2B8)
  {
    result = MEMORY[0x234934494](&unk_233643D50, &_s14OfflineLabItemO11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D2B8);
  }
  return result;
}

unint64_t sub_2333D0FC4()
{
  unint64_t result;

  result = qword_25604D2C8;
  if (!qword_25604D2C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.OfflineLabItem.MapsClassification, &type metadata for RawBankConnectData.OfflineLabItem.MapsClassification);
    atomic_store(result, (unint64_t *)&qword_25604D2C8);
  }
  return result;
}

uint64_t sub_2333D1008(_QWORD *a1)
{
  return RawBankConnectData.OfflineLabItem.Transaction.encode(to:)(a1);
}

uint64_t RawBankConnectData.OfflineLabItem.Account.init(institutionId:account:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = type metadata accessor for RawBankConnectData.OfflineLabItem.Account(0);
  v9 = (_QWORD *)((char *)a4 + *(int *)(v8 + 24));
  *v9 = 0xD000000000000014;
  v9[1] = 0x8000000233675A20;
  *a4 = a1;
  a4[1] = a2;
  return sub_233168580(a3, (uint64_t)a4 + *(int *)(v8 + 20), type metadata accessor for RawBankConnectData.Account);
}

uint64_t type metadata accessor for RawBankConnectData.OfflineLabItem.Account(uint64_t a1)
{
  return sub_233177414(a1, qword_25604D410);
}

uint64_t sub_2333D10A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E756F636361;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 0x7475746974736E69;
}

uint64_t sub_2333D1108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333DA9FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333D112C()
{
  sub_2333D1304();
  return sub_23361F428();
}

uint64_t sub_2333D1154()
{
  sub_2333D1304();
  return sub_23361F434();
}

uint64_t RawBankConnectData.OfflineLabItem.Account.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D2D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D1304();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F140();
  if (!v1)
  {
    type metadata accessor for RawBankConnectData.OfflineLabItem.Account(0);
    v8[14] = 1;
    type metadata accessor for RawBankConnectData.Account(0);
    sub_233167C58(&qword_25604D2E0, type metadata accessor for RawBankConnectData.Account, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Account);
    sub_23361F17C();
    v8[13] = 2;
    sub_23361F140();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2333D1304()
{
  unint64_t result;

  result = qword_25604D2D8;
  if (!qword_25604D2D8)
  {
    result = MEMORY[0x234934494](&unk_233643D00, &_s14OfflineLabItemO7AccountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D2D8);
  }
  return result;
}

uint64_t RawBankConnectData.OfflineLabItem.Account.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v21 = a2;
  v3 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D2E8);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RawBankConnectData.OfflineLabItem.Account(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t *)((char *)v12 + *(int *)(v10 + 24));
  *v13 = 0xD000000000000014;
  v13[1] = 0x8000000233675A20;
  v24 = a1;
  v25 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D1304();
  v23 = v8;
  v14 = v26;
  sub_23361F3EC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
    *v12 = sub_23361F02C();
    v12[1] = v15;
    v28 = 1;
    sub_233167C58(&qword_25604D2F0, type metadata accessor for RawBankConnectData.Account, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Account);
    sub_23361F068();
    sub_233168580((uint64_t)v5, (uint64_t)v12 + *(int *)(v9 + 20), type metadata accessor for RawBankConnectData.Account);
    v27 = 2;
    v16 = sub_23361F02C();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v22);
    v19 = v25;
    swift_bridgeObjectRelease();
    *v19 = v16;
    v19[1] = v18;
    sub_2333D1620((uint64_t)v12, v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    return sub_233168500((uint64_t)v12, type metadata accessor for RawBankConnectData.OfflineLabItem.Account);
  }
}

uint64_t sub_2333D1620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.OfflineLabItem.Account(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333D1664(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D4B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333DAED4();
  sub_23361F410();
  v14 = 0;
  sub_23361F140();
  if (!v5)
  {
    v13 = 1;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2333D178C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.OfflineLabItem.Account.init(from:)(a1, a2);
}

uint64_t sub_2333D17A0(_QWORD *a1)
{
  return RawBankConnectData.OfflineLabItem.Account.encode(to:)(a1);
}

uint64_t sub_2333D17B4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 1684632941;
}

uint64_t sub_2333D17EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333DAB64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333D1810()
{
  sub_2333DAED4();
  return sub_23361F428();
}

uint64_t sub_2333D1838()
{
  sub_2333DAED4();
  return sub_23361F434();
}

uint64_t sub_2333D1860@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2333DAC40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2333D188C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2333D1664(a1, *v1, v1[1], v1[2], v1[3]);
}

void RawBankConnectData.OfflineLabItem.MapsClassification.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v4 = objc_msgSend(a1, sel_merchantObject);
  v5 = v4;
  if (!v4
    || (objc_msgSend(v4, sel_muid),
        v5,
        v6 = objc_msgSend(a1, sel_merchantObject),
        (v5 = v6) == 0))
  {
    v7 = 0;
    v11 = 0;
LABEL_7:
    v9 = 0;
    goto LABEL_8;
  }
  v7 = objc_msgSend(v6, sel_mapsCategoryIdentifier);

  if (!v7)
  {
    v11 = 0;
    v5 = 0;
    goto LABEL_7;
  }
  v5 = (void *)sub_23361E150();
  v9 = v8;

  v7 = (id)sub_23361F1D0();
  v11 = v10;
LABEL_8:
  v12 = objc_msgSend(a1, sel_brandObject);
  v13 = v12;
  if (!v12
    || (objc_msgSend(v12, sel_muid),
        v13,
        v14 = objc_msgSend(a1, sel_brandObject),
        (v13 = v14) == 0))
  {

    v18 = 0;
    v15 = 0;
LABEL_14:
    v17 = 0;
    goto LABEL_15;
  }
  v15 = objc_msgSend(v14, sel_mapsCategoryIdentifier);

  if (!v15)
  {

    v18 = 0;
    v13 = 0;
    goto LABEL_14;
  }
  v13 = (void *)sub_23361E150();
  v17 = v16;

  v18 = sub_23361F1D0();
  v15 = v19;

LABEL_15:
  *a2 = v7;
  a2[1] = v11;
  a2[2] = v5;
  a2[3] = v9;
  a2[4] = v18;
  a2[5] = v15;
  a2[6] = v13;
  a2[7] = v17;
}

uint64_t sub_2333D1A9C()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E617262;
  else
    return 0x746E61686372656DLL;
}

uint64_t sub_2333D1AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333DADEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333D1AF8()
{
  sub_2333D1CC8();
  return sub_23361F428();
}

uint64_t sub_2333D1B20()
{
  sub_2333D1CC8();
  return sub_23361F434();
}

uint64_t RawBankConnectData.OfflineLabItem.MapsClassification.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D2F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v9 = *((_QWORD *)v1 + 4);
  v15 = *((_QWORD *)v1 + 5);
  v16 = v9;
  v10 = *((_QWORD *)v1 + 6);
  v13 = *((_QWORD *)v1 + 7);
  v14 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D1CC8();
  sub_23361F410();
  v19 = v17;
  v20 = v8;
  v21 = v7;
  v22 = 0;
  sub_2333D1D0C();
  v11 = v18;
  sub_23361F110();
  if (!v11)
  {
    *(_QWORD *)&v19 = v16;
    *((_QWORD *)&v19 + 1) = v15;
    v20 = v14;
    v21 = v13;
    v22 = 1;
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2333D1CC8()
{
  unint64_t result;

  result = qword_25604D300;
  if (!qword_25604D300)
  {
    result = MEMORY[0x234934494](&unk_233643CB0, &_s14OfflineLabItemO18MapsClassificationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D300);
  }
  return result;
}

unint64_t sub_2333D1D0C()
{
  unint64_t result;

  result = qword_25604D308;
  if (!qword_25604D308)
  {
    result = MEMORY[0x234934494](&unk_233643C88, &_s14OfflineLabItemO25MapsClassificationDetailsVN);
    atomic_store(result, (unint64_t *)&qword_25604D308);
  }
  return result;
}

uint64_t RawBankConnectData.OfflineLabItem.MapsClassification.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D310);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333D1CC8();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = 0;
  sub_2333D1FB0();
  sub_23361EFFC();
  v9 = v27;
  v30 = 1;
  v24 = v28;
  v25 = v26;
  v23 = v29;
  sub_2332DCF40(v26, v27);
  sub_23361EFFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v26;
  v21 = v27;
  v22 = v26;
  v19 = v29;
  v20 = v28;
  v11 = v24;
  v12 = v25;
  v13 = v23;
  sub_2332DCF40(v25, v9);
  v14 = v10;
  v15 = v21;
  v16 = v19;
  sub_2332DCF40(v14, v21);
  sub_2332DCF70(v12, v9);
  *a2 = v12;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = v22;
  a2[5] = v15;
  a2[6] = v20;
  a2[7] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_2332DCF70(v12, v9);
  return sub_2332DCF70(v22, v21);
}

unint64_t sub_2333D1FB0()
{
  unint64_t result;

  result = qword_25604D318;
  if (!qword_25604D318)
  {
    result = MEMORY[0x234934494](&unk_233643C60, &_s14OfflineLabItemO25MapsClassificationDetailsVN);
    atomic_store(result, (unint64_t *)&qword_25604D318);
  }
  return result;
}

uint64_t sub_2333D1FF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.OfflineLabItem.MapsClassification.init(from:)(a1, a2);
}

uint64_t sub_2333D2008(_QWORD *a1)
{
  return RawBankConnectData.OfflineLabItem.MapsClassification.encode(to:)(a1);
}

uint64_t _s24OfflineLabPermissionBodyVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333D2068 + 4 * byte_233643719[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333D209C + 4 * byte_233643714[v4]))();
}

uint64_t sub_2333D209C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333D20A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333D20ACLL);
  return result;
}

uint64_t sub_2333D20B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333D20C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333D20C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333D20CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.OfflineLabPermissionBody()
{
  return &type metadata for RawBankConnectData.OfflineLabPermissionBody;
}

ValueMetadata *type metadata accessor for RawBankConnectData.OfflineLabItem()
{
  return &type metadata for RawBankConnectData.OfflineLabItem;
}

char *_s14OfflineLabItemO11TransactionVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  _QWORD *v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
    v8 = v7[6];
    v9 = &v4[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(&v4[v7[7]], (uint64_t)a2 + v7[7], v11);
    }
    else
    {
      v16 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v16(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      v16(&v4[v7[7]], (char *)a2 + v7[7], v11);
    }
    v17 = v7[8];
    v18 = &v4[v17];
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v7[9];
    v22 = &v4[v21];
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    v4[v7[10]] = *((_BYTE *)a2 + v7[10]);
    v25 = v7[11];
    v26 = &v4[v25];
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *(_QWORD *)v26 = *v27;
    *((_QWORD *)v26 + 1) = v28;
    v4[v7[12]] = *((_BYTE *)a2 + v7[12]);
    v4[v7[13]] = *((_BYTE *)a2 + v7[13]);
    v29 = v7[14];
    v30 = &v4[v29];
    v31 = (uint64_t)a2 + v29;
    *((_DWORD *)v30 + 4) = *(_DWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_QWORD *)(v30 + 37) = *(_QWORD *)(v31 + 37);
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v32 = *(_QWORD *)(v31 + 56);
    *((_QWORD *)v30 + 6) = *(_QWORD *)(v31 + 48);
    *((_QWORD *)v30 + 7) = v32;
    v33 = *(_QWORD *)(v31 + 72);
    *((_QWORD *)v30 + 8) = *(_QWORD *)(v31 + 64);
    *((_QWORD *)v30 + 9) = v33;
    v34 = v7[15];
    v35 = &v4[v34];
    v36 = (uint64_t)a2 + v34;
    v37 = *(uint64_t *)((char *)a2 + v34 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_DWORD *)v35 + 4) = *(_DWORD *)(v36 + 16);
      *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
      *(_QWORD *)(v35 + 37) = *(_QWORD *)(v36 + 37);
      *((_QWORD *)v35 + 6) = *(_QWORD *)(v36 + 48);
      *((_QWORD *)v35 + 7) = v37;
      v38 = *(_QWORD *)(v36 + 72);
      *((_QWORD *)v35 + 8) = *(_QWORD *)(v36 + 64);
      *((_QWORD *)v35 + 9) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = *(_OWORD *)(v36 + 48);
      *((_OWORD *)v35 + 2) = *(_OWORD *)(v36 + 32);
      *((_OWORD *)v35 + 3) = v39;
      *((_OWORD *)v35 + 4) = *(_OWORD *)(v36 + 64);
      v40 = *(_OWORD *)(v36 + 16);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v40;
    }
    v41 = v7[16];
    v42 = &v4[v41];
    v43 = (uint64_t)a2 + v41;
    v44 = *(uint64_t *)((char *)a2 + v41 + 8);
    if (v44 == 1)
    {
      v45 = *(_OWORD *)(v43 + 112);
      *((_OWORD *)v42 + 6) = *(_OWORD *)(v43 + 96);
      *((_OWORD *)v42 + 7) = v45;
      v46 = *(_OWORD *)(v43 + 144);
      *((_OWORD *)v42 + 8) = *(_OWORD *)(v43 + 128);
      *((_OWORD *)v42 + 9) = v46;
      v47 = *(_OWORD *)(v43 + 48);
      *((_OWORD *)v42 + 2) = *(_OWORD *)(v43 + 32);
      *((_OWORD *)v42 + 3) = v47;
      v48 = *(_OWORD *)(v43 + 80);
      *((_OWORD *)v42 + 4) = *(_OWORD *)(v43 + 64);
      *((_OWORD *)v42 + 5) = v48;
      v49 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v49;
    }
    else
    {
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v50 = *(_QWORD *)(v43 + 24);
      *((_QWORD *)v42 + 2) = *(_QWORD *)(v43 + 16);
      *((_QWORD *)v42 + 3) = v50;
      v51 = *(_QWORD *)(v43 + 40);
      *((_QWORD *)v42 + 4) = *(_QWORD *)(v43 + 32);
      *((_QWORD *)v42 + 5) = v51;
      v52 = *(_QWORD *)(v43 + 56);
      *((_QWORD *)v42 + 6) = *(_QWORD *)(v43 + 48);
      *((_QWORD *)v42 + 7) = v52;
      v53 = *(_QWORD *)(v43 + 72);
      *((_QWORD *)v42 + 8) = *(_QWORD *)(v43 + 64);
      *((_QWORD *)v42 + 9) = v53;
      v54 = *(_QWORD *)(v43 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 == 1)
      {
        v55 = *(_OWORD *)(v43 + 128);
        *((_OWORD *)v42 + 7) = *(_OWORD *)(v43 + 112);
        *((_OWORD *)v42 + 8) = v55;
        *((_OWORD *)v42 + 9) = *(_OWORD *)(v43 + 144);
        v56 = *(_OWORD *)(v43 + 96);
        *((_OWORD *)v42 + 5) = *(_OWORD *)(v43 + 80);
        *((_OWORD *)v42 + 6) = v56;
      }
      else
      {
        *((_QWORD *)v42 + 10) = *(_QWORD *)(v43 + 80);
        *((_QWORD *)v42 + 11) = v54;
        v57 = *(_QWORD *)(v43 + 104);
        *((_QWORD *)v42 + 12) = *(_QWORD *)(v43 + 96);
        *((_QWORD *)v42 + 13) = v57;
        v58 = *(_QWORD *)(v43 + 120);
        *((_QWORD *)v42 + 14) = *(_QWORD *)(v43 + 112);
        *((_QWORD *)v42 + 15) = v58;
        v59 = *(_QWORD *)(v43 + 136);
        *((_QWORD *)v42 + 16) = *(_QWORD *)(v43 + 128);
        *((_QWORD *)v42 + 17) = v59;
        v60 = *(_QWORD *)(v43 + 152);
        *((_QWORD *)v42 + 18) = *(_QWORD *)(v43 + 144);
        *((_QWORD *)v42 + 19) = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v61 = v7[17];
    v62 = &v4[v61];
    v63 = (char *)a2 + v61;
    v64 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v65 = *((_QWORD *)v64 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v65 + 48))(v63, 1, v64))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v127 = v65;
      v67 = sub_23361D340();
      v68 = *(_QWORD *)(v67 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      v128 = v68;
      if (v69(v63, 1, v67))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v62, v63, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v62, 0, 1, v67);
      }
      v71 = v64[5];
      v72 = &v62[v71];
      v73 = &v63[v71];
      if (v69(&v63[v71], 1, v67))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v72, v73, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v72, 0, 1, v67);
      }
      v75 = v64[6];
      v76 = &v62[v75];
      v77 = &v63[v75];
      if (v69(&v63[v75], 1, v67))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v76, v77, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v76, 0, 1, v67);
      }
      v79 = v64[7];
      v80 = &v62[v79];
      v81 = &v63[v79];
      if (v69(&v63[v79], 1, v67))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v80, v81, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v80, 0, 1, v67);
      }
      v83 = v64[8];
      v84 = &v62[v83];
      v85 = &v63[v83];
      if (v69(v85, 1, v67))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v84, v85, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v84, 0, 1, v67);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v127 + 56))(v62, 0, 1, v64);
    }
    v87 = v7[18];
    v88 = &v4[v87];
    v89 = (uint64_t *)((char *)a2 + v87);
    v90 = v89[1];
    *(_QWORD *)v88 = *v89;
    *((_QWORD *)v88 + 1) = v90;
    v91 = v7[19];
    v92 = &v4[v91];
    v93 = (uint64_t *)((char *)a2 + v91);
    v94 = v93[1];
    *(_QWORD *)v92 = *v93;
    *((_QWORD *)v92 + 1) = v94;
    v95 = v7[20];
    v96 = &v4[v95];
    v97 = (uint64_t *)((char *)a2 + v95);
    v98 = *(uint64_t *)((char *)a2 + v95 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v98)
    {
      *(_QWORD *)v96 = *v97;
      *((_QWORD *)v96 + 1) = v98;
      v99 = v97[3];
      *((_QWORD *)v96 + 2) = v97[2];
      *((_QWORD *)v96 + 3) = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v100 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v100;
    }
    v101 = v7[21];
    v102 = &v4[v101];
    v103 = (uint64_t *)((char *)a2 + v101);
    v104 = v103[1];
    if (v104)
    {
      *(_QWORD *)v102 = *v103;
      *((_QWORD *)v102 + 1) = v104;
      v105 = v103[3];
      *((_QWORD *)v102 + 2) = v103[2];
      *((_QWORD *)v102 + 3) = v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v106 = *((_OWORD *)v103 + 1);
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_OWORD *)v102 + 1) = v106;
    }
    v107 = a3[5];
    v108 = &v4[v107];
    v109 = (uint64_t)a2 + v107;
    v110 = *(uint64_t *)((char *)a2 + v107 + 8);
    if (v110)
    {
      if (v110 == 1)
      {
        v111 = *(_OWORD *)(v109 + 16);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v111;
        v112 = *(_OWORD *)(v109 + 48);
        *((_OWORD *)v108 + 2) = *(_OWORD *)(v109 + 32);
        *((_OWORD *)v108 + 3) = v112;
LABEL_45:
        v118 = a3[6];
        v119 = a3[7];
        v120 = &v4[v118];
        v121 = (uint64_t *)((char *)a2 + v118);
        v122 = v121[1];
        *(_QWORD *)v120 = *v121;
        *((_QWORD *)v120 + 1) = v122;
        v123 = &v4[v119];
        v124 = (uint64_t *)((char *)a2 + v119);
        v125 = v124[1];
        *(_QWORD *)v123 = *v124;
        *((_QWORD *)v123 + 1) = v125;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return v4;
      }
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v116 = *(_QWORD *)(v109 + 24);
      *((_QWORD *)v108 + 2) = *(_QWORD *)(v109 + 16);
      *((_QWORD *)v108 + 3) = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v114 = *(_QWORD *)(v109 + 40);
      if (!v114)
      {
LABEL_44:
        v117 = *(_OWORD *)(v109 + 48);
        *((_OWORD *)v108 + 2) = *(_OWORD *)(v109 + 32);
        *((_OWORD *)v108 + 3) = v117;
        goto LABEL_45;
      }
    }
    else
    {
      v113 = *(_OWORD *)(v109 + 16);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v113;
      v114 = *(_QWORD *)(v109 + 40);
      if (!v114)
        goto LABEL_44;
    }
    *((_QWORD *)v108 + 4) = *(_QWORD *)(v109 + 32);
    *((_QWORD *)v108 + 5) = v114;
    v115 = *(_QWORD *)(v109 + 56);
    *((_QWORD *)v108 + 6) = *(_QWORD *)(v109 + 48);
    *((_QWORD *)v108 + 7) = v115;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  v15 = *a2;
  *(_QWORD *)v4 = *a2;
  v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t _s14OfflineLabItemO11TransactionVwxx(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v5 = a1 + v4[6];
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  if (!v8)
    v9(v5, v6);
  v9(a1 + v4[7], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v4[15] + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = a1 + v4[16];
  if (*(_QWORD *)(v10 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v10 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v11 = a1 + v4[17];
  v12 = (int *)type metadata accessor for RawBankConnectData.Actions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
  {
    v13 = sub_23361D340();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v16 = v11 + v12[5];
    if (!v15(v16, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
    v17 = v11 + v12[6];
    if (!v15(v17, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
    v18 = v11 + v12[7];
    if (!v15(v18, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v13);
    v19 = v11 + v12[8];
    if (!v15(v19, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v4[20] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + v4[21] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = a1 + *(int *)(a2 + 20);
  v21 = *(_QWORD *)(v20 + 8);
  if (v21)
  {
    if (v21 == 1)
      goto LABEL_28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v20 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14OfflineLabItemO11TransactionVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v7 = v6[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1 + v6[7], a2 + v6[7], v10);
  }
  else
  {
    v14 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
    v14(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    v14((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v10);
  }
  v15 = v6[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v6[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v23 = v6[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v27 = v6[14];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_DWORD *)(v28 + 16) = *(_DWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 37) = *(_QWORD *)(v29 + 37);
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
  v30 = *(_QWORD *)(v29 + 56);
  *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
  *(_QWORD *)(v28 + 56) = v30;
  v31 = *(_QWORD *)(v29 + 72);
  *(_QWORD *)(v28 + 64) = *(_QWORD *)(v29 + 64);
  *(_QWORD *)(v28 + 72) = v31;
  v32 = v6[15];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a2 + v32 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35)
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_DWORD *)(v33 + 16) = *(_DWORD *)(v34 + 16);
    *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
    *(_QWORD *)(v33 + 37) = *(_QWORD *)(v34 + 37);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 56) = v35;
    v36 = *(_QWORD *)(v34 + 72);
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
    *(_QWORD *)(v33 + 72) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v37;
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    v38 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v38;
  }
  v39 = v6[16];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  if (v42 == 1)
  {
    v43 = *(_OWORD *)(v41 + 112);
    *(_OWORD *)(v40 + 96) = *(_OWORD *)(v41 + 96);
    *(_OWORD *)(v40 + 112) = v43;
    v44 = *(_OWORD *)(v41 + 144);
    *(_OWORD *)(v40 + 128) = *(_OWORD *)(v41 + 128);
    *(_OWORD *)(v40 + 144) = v44;
    v45 = *(_OWORD *)(v41 + 48);
    *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
    *(_OWORD *)(v40 + 48) = v45;
    v46 = *(_OWORD *)(v41 + 80);
    *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
    *(_OWORD *)(v40 + 80) = v46;
    v47 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v47;
  }
  else
  {
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *(_QWORD *)(v40 + 8) = v42;
    v48 = *(_QWORD *)(v41 + 24);
    *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
    *(_QWORD *)(v40 + 24) = v48;
    v49 = *(_QWORD *)(v41 + 40);
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
    *(_QWORD *)(v40 + 40) = v49;
    v50 = *(_QWORD *)(v41 + 56);
    *(_QWORD *)(v40 + 48) = *(_QWORD *)(v41 + 48);
    *(_QWORD *)(v40 + 56) = v50;
    v51 = *(_QWORD *)(v41 + 72);
    *(_QWORD *)(v40 + 64) = *(_QWORD *)(v41 + 64);
    *(_QWORD *)(v40 + 72) = v51;
    v52 = *(_QWORD *)(v41 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52 == 1)
    {
      v53 = *(_OWORD *)(v41 + 128);
      *(_OWORD *)(v40 + 112) = *(_OWORD *)(v41 + 112);
      *(_OWORD *)(v40 + 128) = v53;
      *(_OWORD *)(v40 + 144) = *(_OWORD *)(v41 + 144);
      v54 = *(_OWORD *)(v41 + 96);
      *(_OWORD *)(v40 + 80) = *(_OWORD *)(v41 + 80);
      *(_OWORD *)(v40 + 96) = v54;
    }
    else
    {
      *(_QWORD *)(v40 + 80) = *(_QWORD *)(v41 + 80);
      *(_QWORD *)(v40 + 88) = v52;
      v55 = *(_QWORD *)(v41 + 104);
      *(_QWORD *)(v40 + 96) = *(_QWORD *)(v41 + 96);
      *(_QWORD *)(v40 + 104) = v55;
      v56 = *(_QWORD *)(v41 + 120);
      *(_QWORD *)(v40 + 112) = *(_QWORD *)(v41 + 112);
      *(_QWORD *)(v40 + 120) = v56;
      v57 = *(_QWORD *)(v41 + 136);
      *(_QWORD *)(v40 + 128) = *(_QWORD *)(v41 + 128);
      *(_QWORD *)(v40 + 136) = v57;
      v58 = *(_QWORD *)(v41 + 152);
      *(_QWORD *)(v40 + 144) = *(_QWORD *)(v41 + 144);
      *(_QWORD *)(v40 + 152) = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v59 = v6[17];
  v60 = (char *)(a1 + v59);
  v61 = (char *)(a2 + v59);
  v62 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v63 = *((_QWORD *)v62 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v125 = v63;
    v65 = sub_23361D340();
    v66 = *(_QWORD *)(v65 - 8);
    v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    v126 = v66;
    if (v67(v61, 1, v65))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v60, v61, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v60, 0, 1, v65);
    }
    v69 = v62[5];
    v70 = &v60[v69];
    v71 = &v61[v69];
    if (v67(&v61[v69], 1, v65))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v70, v71, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v70, 0, 1, v65);
    }
    v73 = v62[6];
    v74 = &v60[v73];
    v75 = &v61[v73];
    if (v67(&v61[v73], 1, v65))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v74, v75, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v74, 0, 1, v65);
    }
    v77 = v62[7];
    v78 = &v60[v77];
    v79 = &v61[v77];
    if (v67(&v61[v77], 1, v65))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v78, v79, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v78, 0, 1, v65);
    }
    v81 = v62[8];
    v82 = &v60[v81];
    v83 = &v61[v81];
    if (v67(v83, 1, v65))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v82, v83, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v82, 0, 1, v65);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v60, 0, 1, v62);
  }
  v85 = v6[18];
  v86 = (_QWORD *)(a1 + v85);
  v87 = (_QWORD *)(a2 + v85);
  v88 = v87[1];
  *v86 = *v87;
  v86[1] = v88;
  v89 = v6[19];
  v90 = (_QWORD *)(a1 + v89);
  v91 = (_QWORD *)(a2 + v89);
  v92 = v91[1];
  *v90 = *v91;
  v90[1] = v92;
  v93 = v6[20];
  v94 = (_QWORD *)(a1 + v93);
  v95 = (_QWORD *)(a2 + v93);
  v96 = *(_QWORD *)(a2 + v93 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v96)
  {
    *v94 = *v95;
    v94[1] = v96;
    v97 = v95[3];
    v94[2] = v95[2];
    v94[3] = v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v98 = *((_OWORD *)v95 + 1);
    *(_OWORD *)v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v98;
  }
  v99 = v6[21];
  v100 = (_QWORD *)(a1 + v99);
  v101 = (_QWORD *)(a2 + v99);
  v102 = v101[1];
  if (v102)
  {
    *v100 = *v101;
    v100[1] = v102;
    v103 = v101[3];
    v100[2] = v101[2];
    v100[3] = v103;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v104 = *((_OWORD *)v101 + 1);
    *(_OWORD *)v100 = *(_OWORD *)v101;
    *((_OWORD *)v100 + 1) = v104;
  }
  v105 = a3[5];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = *(_QWORD *)(a2 + v105 + 8);
  if (!v108)
  {
    v111 = *(_OWORD *)(v107 + 16);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *(_OWORD *)(v106 + 16) = v111;
    v112 = *(_QWORD *)(v107 + 40);
    if (!v112)
    {
LABEL_42:
      v115 = *(_OWORD *)(v107 + 48);
      *(_OWORD *)(v106 + 32) = *(_OWORD *)(v107 + 32);
      *(_OWORD *)(v106 + 48) = v115;
      goto LABEL_43;
    }
LABEL_40:
    *(_QWORD *)(v106 + 32) = *(_QWORD *)(v107 + 32);
    *(_QWORD *)(v106 + 40) = v112;
    v113 = *(_QWORD *)(v107 + 56);
    *(_QWORD *)(v106 + 48) = *(_QWORD *)(v107 + 48);
    *(_QWORD *)(v106 + 56) = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
  if (v108 != 1)
  {
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *(_QWORD *)(v106 + 8) = v108;
    v114 = *(_QWORD *)(v107 + 24);
    *(_QWORD *)(v106 + 16) = *(_QWORD *)(v107 + 16);
    *(_QWORD *)(v106 + 24) = v114;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112 = *(_QWORD *)(v107 + 40);
    if (!v112)
      goto LABEL_42;
    goto LABEL_40;
  }
  v109 = *(_OWORD *)(v107 + 16);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  *(_OWORD *)(v106 + 16) = v109;
  v110 = *(_OWORD *)(v107 + 48);
  *(_OWORD *)(v106 + 32) = *(_OWORD *)(v107 + 32);
  *(_OWORD *)(v106 + 48) = v110;
LABEL_43:
  v116 = a3[6];
  v117 = a3[7];
  v118 = (_QWORD *)(a1 + v116);
  v119 = (_QWORD *)(a2 + v116);
  v120 = v119[1];
  *v118 = *v119;
  v118[1] = v120;
  v121 = (_QWORD *)(a1 + v117);
  v122 = (_QWORD *)(a2 + v117);
  v123 = v122[1];
  *v121 = *v122;
  v121[1] = v123;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14OfflineLabItemO11TransactionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD *v66;
  _OWORD *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int *v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, int *);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  size_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t (*v90)(void);
  int v91;
  int v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  __int128 *v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  int v147;
  int v148;
  size_t v149;
  char *v150;
  __int128 v151;
  _OWORD *v152;
  _OWORD *v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v164;
  char *v165;
  int v166;
  int v167;
  size_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  int v172;
  int v173;
  size_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  int v179;
  int v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int (*v186)(char *, uint64_t, uint64_t);
  uint64_t (*v187)(void);
  int *v188;
  int *v189;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v7 = v6[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(a1 + v6[7], a2 + v6[7], v10);
  v16 = v6[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v6[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v22 = v6[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v25 = v6[14];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)(a2 + v25);
  *(_WORD *)(v26 + 4) = *(_WORD *)(a2 + v25 + 4);
  *(_WORD *)(v26 + 6) = *(_WORD *)(a2 + v25 + 6);
  *(_WORD *)(v26 + 8) = *(_WORD *)(a2 + v25 + 8);
  *(_WORD *)(v26 + 10) = *(_WORD *)(a2 + v25 + 10);
  *(_WORD *)(v26 + 12) = *(_WORD *)(a2 + v25 + 12);
  *(_WORD *)(v26 + 14) = *(_WORD *)(a2 + v25 + 14);
  *(_WORD *)(v26 + 16) = *(_WORD *)(a2 + v25 + 16);
  *(_WORD *)(v26 + 18) = *(_WORD *)(a2 + v25 + 18);
  v28 = *(_OWORD *)(a2 + v25 + 24);
  *(_QWORD *)(v26 + 37) = *(_QWORD *)(a2 + v25 + 37);
  *(_OWORD *)(v26 + 24) = v28;
  *(_QWORD *)(v26 + 48) = *(_QWORD *)(a2 + v25 + 48);
  *(_QWORD *)(v26 + 56) = *(_QWORD *)(a2 + v25 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 64) = *(_QWORD *)(v27 + 64);
  *(_QWORD *)(v26 + 72) = *(_QWORD *)(v27 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v6[15];
  v30 = a1 + v29;
  v31 = (__int128 *)(a2 + v29);
  v32 = *(_QWORD *)(a1 + v29 + 56);
  v33 = *(_QWORD *)(a2 + v29 + 56);
  if (v32)
  {
    if (v33)
    {
      *(_DWORD *)v30 = *(_DWORD *)v31;
      *(_WORD *)(v30 + 4) = *((_WORD *)v31 + 2);
      *(_WORD *)(v30 + 6) = *((_WORD *)v31 + 3);
      *(_WORD *)(v30 + 8) = *((_WORD *)v31 + 4);
      *(_WORD *)(v30 + 10) = *((_WORD *)v31 + 5);
      *(_WORD *)(v30 + 12) = *((_WORD *)v31 + 6);
      *(_WORD *)(v30 + 14) = *((_WORD *)v31 + 7);
      *(_WORD *)(v30 + 16) = *((_WORD *)v31 + 8);
      *(_WORD *)(v30 + 18) = *((_WORD *)v31 + 9);
      v34 = *(__int128 *)((char *)v31 + 24);
      *(_QWORD *)(v30 + 37) = *(_QWORD *)((char *)v31 + 37);
      *(_OWORD *)(v30 + 24) = v34;
      *(_QWORD *)(v30 + 48) = *((_QWORD *)v31 + 6);
      *(_QWORD *)(v30 + 56) = *((_QWORD *)v31 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v30 + 64) = *((_QWORD *)v31 + 8);
      *(_QWORD *)(v30 + 72) = *((_QWORD *)v31 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333D46C8(v30);
      *(_OWORD *)v30 = *v31;
      v37 = v31[4];
      v39 = v31[1];
      v38 = v31[2];
      *(_OWORD *)(v30 + 48) = v31[3];
      *(_OWORD *)(v30 + 64) = v37;
      *(_OWORD *)(v30 + 16) = v39;
      *(_OWORD *)(v30 + 32) = v38;
    }
  }
  else if (v33)
  {
    v35 = *v31;
    *(_DWORD *)(v30 + 16) = *((_DWORD *)v31 + 4);
    *(_OWORD *)v30 = v35;
    v36 = *(__int128 *)((char *)v31 + 24);
    *(_QWORD *)(v30 + 37) = *(_QWORD *)((char *)v31 + 37);
    *(_OWORD *)(v30 + 24) = v36;
    *(_QWORD *)(v30 + 48) = *((_QWORD *)v31 + 6);
    *(_QWORD *)(v30 + 56) = *((_QWORD *)v31 + 7);
    *(_QWORD *)(v30 + 64) = *((_QWORD *)v31 + 8);
    *(_QWORD *)(v30 + 72) = *((_QWORD *)v31 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v30 = *v31;
    v40 = v31[1];
    v41 = v31[2];
    v42 = v31[4];
    *(_OWORD *)(v30 + 48) = v31[3];
    *(_OWORD *)(v30 + 64) = v42;
    *(_OWORD *)(v30 + 16) = v40;
    *(_OWORD *)(v30 + 32) = v41;
  }
  v43 = v6[16];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a1 + v43 + 8);
  v47 = *(_QWORD *)(a2 + v43 + 8);
  if (v46 == 1)
  {
    if (v47 == 1)
    {
      v48 = *(_OWORD *)(v45 + 16);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *(_OWORD *)(v44 + 16) = v48;
      v49 = *(_OWORD *)(v45 + 32);
      v50 = *(_OWORD *)(v45 + 48);
      v51 = *(_OWORD *)(v45 + 80);
      *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
      *(_OWORD *)(v44 + 80) = v51;
      *(_OWORD *)(v44 + 32) = v49;
      *(_OWORD *)(v44 + 48) = v50;
      v52 = *(_OWORD *)(v45 + 96);
      v53 = *(_OWORD *)(v45 + 112);
      v54 = *(_OWORD *)(v45 + 144);
      *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
      *(_OWORD *)(v44 + 144) = v54;
      *(_OWORD *)(v44 + 96) = v52;
      *(_OWORD *)(v44 + 112) = v53;
    }
    else
    {
      v188 = a3;
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
      *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
      *(_QWORD *)(v44 + 24) = *(_QWORD *)(v45 + 24);
      *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
      *(_QWORD *)(v44 + 40) = *(_QWORD *)(v45 + 40);
      *(_QWORD *)(v44 + 48) = *(_QWORD *)(v45 + 48);
      *(_QWORD *)(v44 + 56) = *(_QWORD *)(v45 + 56);
      *(_QWORD *)(v44 + 64) = *(_QWORD *)(v45 + 64);
      *(_QWORD *)(v44 + 72) = *(_QWORD *)(v45 + 72);
      v62 = *(_QWORD *)(v45 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v62 == 1)
      {
        *(_OWORD *)(v44 + 80) = *(_OWORD *)(v45 + 80);
        v63 = *(_OWORD *)(v45 + 96);
        v64 = *(_OWORD *)(v45 + 112);
        v65 = *(_OWORD *)(v45 + 144);
        *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
        *(_OWORD *)(v44 + 144) = v65;
        *(_OWORD *)(v44 + 96) = v63;
        *(_OWORD *)(v44 + 112) = v64;
      }
      else
      {
        *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
        *(_QWORD *)(v44 + 88) = *(_QWORD *)(v45 + 88);
        *(_QWORD *)(v44 + 96) = *(_QWORD *)(v45 + 96);
        *(_QWORD *)(v44 + 104) = *(_QWORD *)(v45 + 104);
        *(_QWORD *)(v44 + 112) = *(_QWORD *)(v45 + 112);
        *(_QWORD *)(v44 + 120) = *(_QWORD *)(v45 + 120);
        *(_QWORD *)(v44 + 128) = *(_QWORD *)(v45 + 128);
        *(_QWORD *)(v44 + 136) = *(_QWORD *)(v45 + 136);
        *(_QWORD *)(v44 + 144) = *(_QWORD *)(v45 + 144);
        *(_QWORD *)(v44 + 152) = *(_QWORD *)(v45 + 152);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      a3 = v188;
    }
  }
  else if (v47 == 1)
  {
    sub_2333D4730(v44);
    v55 = *(_OWORD *)(v45 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *(_OWORD *)(v44 + 16) = v55;
    v56 = *(_OWORD *)(v45 + 80);
    v58 = *(_OWORD *)(v45 + 32);
    v57 = *(_OWORD *)(v45 + 48);
    *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
    *(_OWORD *)(v44 + 80) = v56;
    *(_OWORD *)(v44 + 32) = v58;
    *(_OWORD *)(v44 + 48) = v57;
    v59 = *(_OWORD *)(v45 + 144);
    v61 = *(_OWORD *)(v45 + 96);
    v60 = *(_OWORD *)(v45 + 112);
    *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
    *(_OWORD *)(v44 + 144) = v59;
    *(_OWORD *)(v44 + 96) = v61;
    *(_OWORD *)(v44 + 112) = v60;
  }
  else
  {
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
    *(_QWORD *)(v44 + 24) = *(_QWORD *)(v45 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
    *(_QWORD *)(v44 + 40) = *(_QWORD *)(v45 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v44 + 48) = *(_QWORD *)(v45 + 48);
    *(_QWORD *)(v44 + 56) = *(_QWORD *)(v45 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v44 + 64) = *(_QWORD *)(v45 + 64);
    *(_QWORD *)(v44 + 72) = *(_QWORD *)(v45 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v66 = (_OWORD *)(v44 + 80);
    v67 = (_OWORD *)(v45 + 80);
    v68 = *(_QWORD *)(v45 + 88);
    if (*(_QWORD *)(v44 + 88) == 1)
    {
      if (v68 == 1)
      {
        *v66 = *v67;
        v69 = *(_OWORD *)(v45 + 96);
        v70 = *(_OWORD *)(v45 + 112);
        v71 = *(_OWORD *)(v45 + 144);
        *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
        *(_OWORD *)(v44 + 144) = v71;
        *(_OWORD *)(v44 + 96) = v69;
        *(_OWORD *)(v44 + 112) = v70;
      }
      else
      {
        *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
        *(_QWORD *)(v44 + 88) = *(_QWORD *)(v45 + 88);
        *(_QWORD *)(v44 + 96) = *(_QWORD *)(v45 + 96);
        *(_QWORD *)(v44 + 104) = *(_QWORD *)(v45 + 104);
        *(_QWORD *)(v44 + 112) = *(_QWORD *)(v45 + 112);
        *(_QWORD *)(v44 + 120) = *(_QWORD *)(v45 + 120);
        *(_QWORD *)(v44 + 128) = *(_QWORD *)(v45 + 128);
        *(_QWORD *)(v44 + 136) = *(_QWORD *)(v45 + 136);
        *(_QWORD *)(v44 + 144) = *(_QWORD *)(v45 + 144);
        *(_QWORD *)(v44 + 152) = *(_QWORD *)(v45 + 152);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v68 == 1)
    {
      sub_2333D46FC(v44 + 80);
      *v66 = *v67;
      v72 = *(_OWORD *)(v45 + 144);
      v74 = *(_OWORD *)(v45 + 96);
      v73 = *(_OWORD *)(v45 + 112);
      *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
      *(_OWORD *)(v44 + 144) = v72;
      *(_OWORD *)(v44 + 96) = v74;
      *(_OWORD *)(v44 + 112) = v73;
    }
    else
    {
      *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
      *(_QWORD *)(v44 + 88) = *(_QWORD *)(v45 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + 96) = *(_QWORD *)(v45 + 96);
      *(_QWORD *)(v44 + 104) = *(_QWORD *)(v45 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + 112) = *(_QWORD *)(v45 + 112);
      *(_QWORD *)(v44 + 120) = *(_QWORD *)(v45 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + 128) = *(_QWORD *)(v45 + 128);
      *(_QWORD *)(v44 + 136) = *(_QWORD *)(v45 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + 144) = *(_QWORD *)(v45 + 144);
      *(_QWORD *)(v44 + 152) = *(_QWORD *)(v45 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  v75 = v6[17];
  v76 = (char *)(a1 + v75);
  v77 = (char *)(a2 + v75);
  v78 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v79 = *((_QWORD *)v78 - 1);
  v80 = *(uint64_t (**)(char *, uint64_t, int *))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (v82)
    {
      sub_233168500((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      goto LABEL_37;
    }
    v89 = sub_23361D340();
    v185 = *(_QWORD *)(v89 - 8);
    v90 = *(uint64_t (**)(void))(v185 + 48);
    v91 = ((uint64_t (*)(char *, uint64_t, uint64_t))v90)(v76, 1, v89);
    v187 = v90;
    v92 = ((uint64_t (*)(char *, uint64_t, uint64_t))v90)(v77, 1, v89);
    if (v91)
    {
      if (!v92)
      {
        (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v76, v77, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v76, 0, 1, v89);
        goto LABEL_89;
      }
    }
    else
    {
      if (!v92)
      {
        (*(void (**)(char *, char *, uint64_t))(v185 + 24))(v76, v77, v89);
LABEL_89:
        v144 = v89;
        v145 = v78[5];
        v146 = &v77[v145];
        v181 = &v76[v145];
        v147 = v90();
        v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v146, 1, v144);
        if (v147)
        {
          if (v148)
          {
            v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v150 = v181;
LABEL_94:
            memcpy(v150, v146, v149);
            goto LABEL_107;
          }
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v181, v146, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v181, 0, 1, v144);
        }
        else
        {
          if (v148)
          {
            (*(void (**)(char *, uint64_t))(v185 + 8))(v181, v144);
            v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v150 = v181;
            goto LABEL_94;
          }
          (*(void (**)(char *, char *, uint64_t))(v185 + 24))(v181, v146, v144);
        }
LABEL_107:
        v164 = v78[6];
        v165 = &v77[v164];
        v182 = &v76[v164];
        v166 = v187();
        v167 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v165, 1, v144);
        if (v166)
        {
          if (v167)
          {
            v168 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v169 = v182;
LABEL_112:
            memcpy(v169, v165, v168);
            goto LABEL_115;
          }
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v182, v165, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v182, 0, 1, v144);
        }
        else
        {
          if (v167)
          {
            (*(void (**)(char *, uint64_t))(v185 + 8))(v182, v144);
            v168 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v169 = v182;
            goto LABEL_112;
          }
          (*(void (**)(char *, char *, uint64_t))(v185 + 24))(v182, v165, v144);
        }
LABEL_115:
        v170 = v78[7];
        v171 = &v77[v170];
        v183 = &v76[v170];
        v172 = v187();
        v173 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v171, 1, v144);
        if (v172)
        {
          if (!v173)
          {
            (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v183, v171, v144);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v183, 0, 1, v144);
            goto LABEL_123;
          }
          v174 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v175 = v183;
        }
        else
        {
          if (!v173)
          {
            (*(void (**)(char *, char *, uint64_t))(v185 + 24))(v183, v171, v144);
            goto LABEL_123;
          }
          (*(void (**)(char *, uint64_t))(v185 + 8))(v183, v144);
          v174 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v175 = v183;
        }
        memcpy(v175, v171, v174);
LABEL_123:
        v176 = v78[8];
        v177 = &v76[v176];
        v178 = &v77[v176];
        v179 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v177, 1, v144);
        v180 = ((uint64_t (*)(char *, uint64_t, uint64_t))v187)(v178, 1, v144);
        if (v179)
        {
          if (!v180)
          {
            (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v177, v178, v144);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v177, 0, 1, v144);
            goto LABEL_56;
          }
        }
        else
        {
          if (!v180)
          {
            (*(void (**)(char *, char *, uint64_t))(v185 + 24))(v177, v178, v144);
            goto LABEL_56;
          }
          (*(void (**)(char *, uint64_t))(v185 + 8))(v177, v144);
        }
        v86 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v87 = v177;
        v88 = v178;
LABEL_38:
        memcpy(v87, v88, v86);
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v185 + 8))(v76, v89);
    }
    v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    goto LABEL_89;
  }
  if (v82)
  {
LABEL_37:
    v86 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0) - 8) + 64);
    v87 = v76;
    v88 = v77;
    goto LABEL_38;
  }
  v83 = sub_23361D340();
  v84 = *(_QWORD *)(v83 - 8);
  v186 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
  v184 = v84;
  v189 = a3;
  if (v186(v77, 1, v83))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v76, v77, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v76, 0, 1, v83);
  }
  v93 = v78[5];
  v94 = &v76[v93];
  v95 = &v77[v93];
  if (v186(&v77[v93], 1, v83))
  {
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v94, v95, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v94, 0, 1, v83);
  }
  v97 = v78[6];
  v98 = &v76[v97];
  v99 = &v77[v97];
  if (v186(&v77[v97], 1, v83))
  {
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v98, v99, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v98, 0, 1, v83);
  }
  v101 = v78[7];
  v102 = &v76[v101];
  v103 = &v77[v101];
  if (v186(&v77[v101], 1, v83))
  {
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v102, v103, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v102, 0, 1, v83);
  }
  v105 = v78[8];
  v106 = &v76[v105];
  v107 = &v77[v105];
  a3 = v189;
  if (v186(v107, 1, v83))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v106, v107, v83);
    a3 = v189;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v106, 0, 1, v83);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v79 + 56))(v76, 0, 1, v78);
LABEL_56:
  v109 = v6[18];
  v110 = (_QWORD *)(a1 + v109);
  v111 = (_QWORD *)(a2 + v109);
  *v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v112 = v6[19];
  v113 = (_QWORD *)(a1 + v112);
  v114 = (_QWORD *)(a2 + v112);
  *v113 = *v114;
  v113[1] = v114[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v115 = v6[20];
  v116 = (_QWORD *)(a1 + v115);
  v117 = (_QWORD *)(a2 + v115);
  v118 = *(_QWORD *)(a1 + v115 + 8);
  v119 = *(_QWORD *)(a2 + v115 + 8);
  if (v118)
  {
    if (v119)
    {
      *v116 = *v117;
      v116[1] = v117[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v116[2] = v117[2];
      v116[3] = v117[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333D4764((uint64_t)v116);
      v120 = *((_OWORD *)v117 + 1);
      *(_OWORD *)v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v120;
    }
  }
  else if (v119)
  {
    *v116 = *v117;
    v116[1] = v117[1];
    v116[2] = v117[2];
    v116[3] = v117[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v121 = *((_OWORD *)v117 + 1);
    *(_OWORD *)v116 = *(_OWORD *)v117;
    *((_OWORD *)v116 + 1) = v121;
  }
  v122 = v6[21];
  v123 = (_QWORD *)(a1 + v122);
  v124 = (_QWORD *)(a2 + v122);
  v125 = *(_QWORD *)(a1 + v122 + 8);
  v126 = *(_QWORD *)(a2 + v122 + 8);
  if (v125)
  {
    if (v126)
    {
      *v123 = *v124;
      v123[1] = v124[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v123[2] = v124[2];
      v123[3] = v124[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333D4798((uint64_t)v123);
      v127 = *((_OWORD *)v124 + 1);
      *(_OWORD *)v123 = *(_OWORD *)v124;
      *((_OWORD *)v123 + 1) = v127;
    }
  }
  else if (v126)
  {
    *v123 = *v124;
    v123[1] = v124[1];
    v123[2] = v124[2];
    v123[3] = v124[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v128 = *((_OWORD *)v124 + 1);
    *(_OWORD *)v123 = *(_OWORD *)v124;
    *((_OWORD *)v123 + 1) = v128;
  }
  v129 = a3[5];
  v130 = a1 + v129;
  v131 = (__int128 *)(a2 + v129);
  v132 = *(_QWORD *)(a1 + v129 + 8);
  v133 = *(_QWORD *)(a2 + v129 + 8);
  if (v132 == 1)
  {
    if (v133 == 1)
    {
      v134 = *v131;
      v135 = v131[1];
      v136 = v131[3];
      *(_OWORD *)(v130 + 32) = v131[2];
      *(_OWORD *)(v130 + 48) = v136;
      *(_OWORD *)v130 = v134;
      *(_OWORD *)(v130 + 16) = v135;
      goto LABEL_103;
    }
    if (v133)
    {
      *(_QWORD *)v130 = *(_QWORD *)v131;
      *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
      *(_QWORD *)(v130 + 16) = *((_QWORD *)v131 + 2);
      *(_QWORD *)(v130 + 24) = *((_QWORD *)v131 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!*((_QWORD *)v131 + 5))
        goto LABEL_82;
    }
    else
    {
      v140 = v131[1];
      *(_OWORD *)v130 = *v131;
      *(_OWORD *)(v130 + 16) = v140;
      if (!*((_QWORD *)v131 + 5))
      {
LABEL_82:
        v141 = v131[3];
        *(_OWORD *)(v130 + 32) = v131[2];
        *(_OWORD *)(v130 + 48) = v141;
        goto LABEL_103;
      }
    }
LABEL_100:
    *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
    *(_QWORD *)(v130 + 40) = *((_QWORD *)v131 + 5);
    *(_QWORD *)(v130 + 48) = *((_QWORD *)v131 + 6);
    *(_QWORD *)(v130 + 56) = *((_QWORD *)v131 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_103;
  }
  if (v133 == 1)
  {
    sub_2333D47CC(v130);
    v137 = v131[3];
    v139 = *v131;
    v138 = v131[1];
    *(_OWORD *)(v130 + 32) = v131[2];
    *(_OWORD *)(v130 + 48) = v137;
    *(_OWORD *)v130 = v139;
    *(_OWORD *)(v130 + 16) = v138;
    goto LABEL_103;
  }
  if (v132)
  {
    if (v133)
    {
      *(_QWORD *)v130 = *(_QWORD *)v131;
      *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v130 + 16) = *((_QWORD *)v131 + 2);
      *(_QWORD *)(v130 + 24) = *((_QWORD *)v131 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2332DD550(v130);
      v142 = v131[1];
      *(_OWORD *)v130 = *v131;
      *(_OWORD *)(v130 + 16) = v142;
    }
  }
  else if (v133)
  {
    *(_QWORD *)v130 = *(_QWORD *)v131;
    *(_QWORD *)(v130 + 8) = *((_QWORD *)v131 + 1);
    *(_QWORD *)(v130 + 16) = *((_QWORD *)v131 + 2);
    *(_QWORD *)(v130 + 24) = *((_QWORD *)v131 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v151 = v131[1];
    *(_OWORD *)v130 = *v131;
    *(_OWORD *)(v130 + 16) = v151;
  }
  v152 = (_OWORD *)(v130 + 32);
  v153 = v131 + 2;
  v154 = *((_QWORD *)v131 + 5);
  if (!*(_QWORD *)(v130 + 40))
  {
    if (!v154)
    {
      v156 = v131[3];
      *v152 = *v153;
      *(_OWORD *)(v130 + 48) = v156;
      goto LABEL_103;
    }
    goto LABEL_100;
  }
  if (v154)
  {
    *(_QWORD *)(v130 + 32) = *((_QWORD *)v131 + 4);
    *(_QWORD *)(v130 + 40) = *((_QWORD *)v131 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v130 + 48) = *((_QWORD *)v131 + 6);
    *(_QWORD *)(v130 + 56) = *((_QWORD *)v131 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2332DD550(v130 + 32);
    v155 = v131[3];
    *v152 = *v153;
    *(_OWORD *)(v130 + 48) = v155;
  }
LABEL_103:
  v157 = a3[6];
  v158 = (_QWORD *)(a1 + v157);
  v159 = (_QWORD *)(a2 + v157);
  *v158 = *v159;
  v158[1] = v159[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v160 = a3[7];
  v161 = (_QWORD *)(a1 + v160);
  v162 = (_QWORD *)(a2 + v160);
  *v161 = *v162;
  v161[1] = v162[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2333D46C8(uint64_t a1)
{
  destroy for RawBankConnectData.MonetaryAmount();
  return a1;
}

uint64_t sub_2333D46FC(uint64_t a1)
{
  destroy for RawOrderCustomer();
  return a1;
}

uint64_t sub_2333D4730(uint64_t a1)
{
  _s11TransactionV19MerchantInformationVwxx(a1);
  return a1;
}

uint64_t sub_2333D4764(uint64_t a1)
{
  destroy for ContentPackageError.Context();
  return a1;
}

uint64_t sub_2333D4798(uint64_t a1)
{
  destroy for ContentPackageError.Context();
  return a1;
}

uint64_t sub_2333D47CC(uint64_t a1)
{
  _s14OfflineLabItemO18MapsClassificationVwxx(a1);
  return a1;
}

uint64_t _s14OfflineLabItemO11TransactionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  _OWORD *v66;
  _OWORD *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  __int128 v73;
  __int128 v74;
  uint64_t v76;
  int *v77;
  uint64_t v78;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v7 = v6[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a1 + v6[7], a2 + v6[7], v10);
  }
  else
  {
    v13 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
    v13(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    v13((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v10);
  }
  *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
  *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v14 = v6[14];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = v16[4];
  v18 = v16[2];
  v15[3] = v16[3];
  v15[4] = v17;
  v19 = v16[1];
  *v15 = *v16;
  v15[1] = v19;
  v15[2] = v18;
  v20 = v6[15];
  v21 = (_OWORD *)(a1 + v20);
  v22 = (_OWORD *)(a2 + v20);
  v23 = v22[3];
  v21[2] = v22[2];
  v21[3] = v23;
  v21[4] = v22[4];
  v24 = v22[1];
  *v21 = *v22;
  v21[1] = v24;
  v25 = v6[16];
  v26 = (_OWORD *)(a1 + v25);
  v27 = (_OWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = v27[5];
  v26[4] = v27[4];
  v26[5] = v29;
  v30 = v27[3];
  v26[2] = v27[2];
  v26[3] = v30;
  v31 = v27[9];
  v26[8] = v27[8];
  v26[9] = v31;
  v32 = v27[7];
  v26[6] = v27[6];
  v26[7] = v32;
  v33 = v6[17];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v37 = *((_QWORD *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v76 = v37;
    v39 = sub_23361D340();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    v77 = a3;
    v78 = v40;
    if (v41(v35, 1, v39))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v34, v35, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
    }
    v43 = v36[5];
    v44 = &v34[v43];
    v45 = &v35[v43];
    if (v41(&v35[v43], 1, v39))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v44, v45, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v44, 0, 1, v39);
    }
    v47 = v36[6];
    v48 = &v34[v47];
    v49 = &v35[v47];
    if (v41(&v35[v47], 1, v39))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v48, v49, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v48, 0, 1, v39);
    }
    v51 = v36[7];
    v52 = &v34[v51];
    v53 = &v35[v51];
    if (v41(&v35[v51], 1, v39))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      v55 = v78;
    }
    else
    {
      v56 = v53;
      v55 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v52, v56, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v52, 0, 1, v39);
    }
    v57 = v36[8];
    v58 = &v34[v57];
    v59 = &v35[v57];
    if (v41(v59, 1, v39))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v58, v59, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v39);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v76 + 56))(v34, 0, 1, v36);
    a3 = v77;
  }
  *(_OWORD *)(a1 + v6[18]) = *(_OWORD *)(a2 + v6[18]);
  *(_OWORD *)(a1 + v6[19]) = *(_OWORD *)(a2 + v6[19]);
  v61 = v6[20];
  v62 = (_OWORD *)(a1 + v61);
  v63 = (_OWORD *)(a2 + v61);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = v6[21];
  v66 = (_OWORD *)(a1 + v65);
  v67 = (_OWORD *)(a2 + v65);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  v69 = a3[5];
  v70 = a3[6];
  v71 = (_OWORD *)(a1 + v69);
  v72 = (_OWORD *)(a2 + v69);
  v73 = v72[1];
  *v71 = *v72;
  v71[1] = v73;
  v74 = v72[3];
  v71[2] = v72[2];
  v71[3] = v74;
  *(_OWORD *)(a1 + v70) = *(_OWORD *)(a2 + v70);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t _s14OfflineLabItemO11TransactionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int *v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, int *);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t (*v75)(void);
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  int v147;
  int v148;
  size_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  int v153;
  int v154;
  size_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  int v159;
  int v160;
  size_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  int v166;
  int v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  unsigned int (*v174)(char *, uint64_t, uint64_t);
  uint64_t (*v175)(void);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (int *)type metadata accessor for RawBankConnectData.Transaction(0);
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1 + v7[7], a2 + v7[7], v11);
  v17 = v7[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v7[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
  v27 = v7[11];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[12]) = *(_BYTE *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v32 = v7[14];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_DWORD *)v33 = *(_DWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 4) = *(_OWORD *)(a2 + v32 + 4);
  *(_QWORD *)(v33 + 37) = *(_QWORD *)(a2 + v32 + 37);
  *(_OWORD *)(v33 + 24) = *(_OWORD *)(a2 + v32 + 24);
  v35 = *(_QWORD *)(a2 + v32 + 56);
  *(_QWORD *)(v33 + 48) = *(_QWORD *)(a2 + v32 + 48);
  *(_QWORD *)(v33 + 56) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v34 + 72);
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
  *(_QWORD *)(v33 + 72) = v36;
  swift_bridgeObjectRelease();
  v37 = v7[15];
  v38 = a1 + v37;
  v39 = a2 + v37;
  if (*(_QWORD *)(a1 + v37 + 56))
  {
    v40 = *(_QWORD *)(v39 + 56);
    if (v40)
    {
      *(_DWORD *)v38 = *(_DWORD *)v39;
      *(_OWORD *)(v38 + 4) = *(_OWORD *)(v39 + 4);
      *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 37) = *(_QWORD *)(v39 + 37);
      *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      *(_QWORD *)(v38 + 56) = v40;
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
      *(_QWORD *)(v38 + 72) = v41;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_2333D46C8(v38);
  }
  v42 = *(_OWORD *)(v39 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_OWORD *)(v38 + 48) = v42;
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
  v43 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v43;
LABEL_12:
  v44 = v7[16];
  v45 = a1 + v44;
  v46 = a2 + v44;
  if (*(_QWORD *)(a1 + v44 + 8) == 1)
  {
LABEL_15:
    v48 = *(_OWORD *)(v46 + 112);
    *(_OWORD *)(v45 + 96) = *(_OWORD *)(v46 + 96);
    *(_OWORD *)(v45 + 112) = v48;
    v49 = *(_OWORD *)(v46 + 144);
    *(_OWORD *)(v45 + 128) = *(_OWORD *)(v46 + 128);
    *(_OWORD *)(v45 + 144) = v49;
    v50 = *(_OWORD *)(v46 + 48);
    *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
    *(_OWORD *)(v45 + 48) = v50;
    v51 = *(_OWORD *)(v46 + 80);
    *(_OWORD *)(v45 + 64) = *(_OWORD *)(v46 + 64);
    *(_OWORD *)(v45 + 80) = v51;
    v52 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v52;
    goto LABEL_16;
  }
  v47 = *(_QWORD *)(v46 + 8);
  if (v47 == 1)
  {
    sub_2333D4730(v45);
    goto LABEL_15;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  v67 = *(_QWORD *)(v46 + 24);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
  *(_QWORD *)(v45 + 24) = v67;
  swift_bridgeObjectRelease();
  v68 = *(_QWORD *)(v46 + 40);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_QWORD *)(v45 + 40) = v68;
  swift_bridgeObjectRelease();
  v69 = *(_QWORD *)(v46 + 56);
  *(_QWORD *)(v45 + 48) = *(_QWORD *)(v46 + 48);
  *(_QWORD *)(v45 + 56) = v69;
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v46 + 72);
  *(_QWORD *)(v45 + 64) = *(_QWORD *)(v46 + 64);
  *(_QWORD *)(v45 + 72) = v70;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v45 + 88) == 1)
    goto LABEL_27;
  v71 = *(_QWORD *)(v46 + 88);
  if (v71 == 1)
  {
    sub_2333D46FC(v45 + 80);
LABEL_27:
    v72 = *(_OWORD *)(v46 + 128);
    *(_OWORD *)(v45 + 112) = *(_OWORD *)(v46 + 112);
    *(_OWORD *)(v45 + 128) = v72;
    *(_OWORD *)(v45 + 144) = *(_OWORD *)(v46 + 144);
    v73 = *(_OWORD *)(v46 + 96);
    *(_OWORD *)(v45 + 80) = *(_OWORD *)(v46 + 80);
    *(_OWORD *)(v45 + 96) = v73;
    goto LABEL_16;
  }
  *(_QWORD *)(v45 + 80) = *(_QWORD *)(v46 + 80);
  *(_QWORD *)(v45 + 88) = v71;
  swift_bridgeObjectRelease();
  v135 = *(_QWORD *)(v46 + 104);
  *(_QWORD *)(v45 + 96) = *(_QWORD *)(v46 + 96);
  *(_QWORD *)(v45 + 104) = v135;
  swift_bridgeObjectRelease();
  v136 = *(_QWORD *)(v46 + 120);
  *(_QWORD *)(v45 + 112) = *(_QWORD *)(v46 + 112);
  *(_QWORD *)(v45 + 120) = v136;
  swift_bridgeObjectRelease();
  v137 = *(_QWORD *)(v46 + 136);
  *(_QWORD *)(v45 + 128) = *(_QWORD *)(v46 + 128);
  *(_QWORD *)(v45 + 136) = v137;
  swift_bridgeObjectRelease();
  v138 = *(_QWORD *)(v46 + 152);
  *(_QWORD *)(v45 + 144) = *(_QWORD *)(v46 + 144);
  *(_QWORD *)(v45 + 152) = v138;
  swift_bridgeObjectRelease();
LABEL_16:
  v53 = v7[17];
  v54 = (char *)(a1 + v53);
  v55 = (char *)(a2 + v53);
  v56 = (int *)type metadata accessor for RawBankConnectData.Actions();
  v57 = *((_QWORD *)v56 - 1);
  v58 = *(uint64_t (**)(char *, uint64_t, int *))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_233168500((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.Actions);
      goto LABEL_22;
    }
    v74 = sub_23361D340();
    v172 = *(_QWORD *)(v74 - 8);
    v75 = *(uint64_t (**)(void))(v172 + 48);
    v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v54, 1, v74);
    v175 = v75;
    v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v75)(v55, 1, v74);
    if (v76)
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v54, v55, v74);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v54, 0, 1, v74);
        goto LABEL_75;
      }
    }
    else
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v54, v55, v74);
LABEL_75:
        v144 = v74;
        v145 = v56[5];
        v146 = &v55[v145];
        v168 = &v54[v145];
        v147 = v75();
        v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v146, 1, v144);
        if (v147)
        {
          if (v148)
          {
            v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v150 = v168;
LABEL_80:
            memcpy(v150, v146, v149);
            goto LABEL_84;
          }
          (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v168, v146, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v168, 0, 1, v144);
        }
        else
        {
          if (v148)
          {
            (*(void (**)(char *, uint64_t))(v172 + 8))(v168, v144);
            v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v150 = v168;
            goto LABEL_80;
          }
          (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v168, v146, v144);
        }
LABEL_84:
        v151 = v56[6];
        v152 = &v55[v151];
        v169 = &v54[v151];
        v153 = v175();
        v154 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v152, 1, v144);
        if (v153)
        {
          if (v154)
          {
            v155 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v156 = v169;
LABEL_89:
            memcpy(v156, v152, v155);
            goto LABEL_92;
          }
          (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v169, v152, v144);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v144);
        }
        else
        {
          if (v154)
          {
            (*(void (**)(char *, uint64_t))(v172 + 8))(v169, v144);
            v155 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v156 = v169;
            goto LABEL_89;
          }
          (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v169, v152, v144);
        }
LABEL_92:
        v157 = v56[7];
        v158 = &v55[v157];
        v170 = &v54[v157];
        v159 = v175();
        v160 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v158, 1, v144);
        if (v159)
        {
          if (!v160)
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v170, v158, v144);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v170, 0, 1, v144);
            goto LABEL_100;
          }
          v161 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v162 = v170;
        }
        else
        {
          if (!v160)
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v170, v158, v144);
            goto LABEL_100;
          }
          (*(void (**)(char *, uint64_t))(v172 + 8))(v170, v144);
          v161 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v162 = v170;
        }
        memcpy(v162, v158, v161);
LABEL_100:
        v163 = v56[8];
        v164 = &v54[v163];
        v165 = &v55[v163];
        v166 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v164, 1, v144);
        v167 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v165, 1, v144);
        if (v166)
        {
          if (!v167)
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v164, v165, v144);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v164, 0, 1, v144);
            goto LABEL_46;
          }
        }
        else
        {
          if (!v167)
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v164, v165, v144);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v172 + 8))(v164, v144);
        }
        v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v65 = v164;
        v66 = v165;
LABEL_23:
        memcpy(v65, v66, v64);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v54, v74);
    }
    v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    goto LABEL_75;
  }
  if (v60)
  {
LABEL_22:
    v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0) - 8) + 64);
    v65 = v54;
    v66 = v55;
    goto LABEL_23;
  }
  v61 = sub_23361D340();
  v62 = *(_QWORD *)(v61 - 8);
  v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v171 = v62;
  v173 = a3;
  if (v174(v55, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v54, v55, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
  }
  v78 = v56[5];
  v79 = &v54[v78];
  v80 = &v55[v78];
  if (v174(&v55[v78], 1, v61))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v79, v80, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v79, 0, 1, v61);
  }
  v82 = v56[6];
  v83 = &v54[v82];
  v84 = &v55[v82];
  if (v174(&v55[v82], 1, v61))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v83, v84, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v83, 0, 1, v61);
  }
  v86 = v56[7];
  v87 = &v54[v86];
  v88 = &v55[v86];
  if (v174(&v55[v86], 1, v61))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v87, v88, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v87, 0, 1, v61);
  }
  v90 = v56[8];
  v91 = &v54[v90];
  v92 = &v55[v90];
  a3 = v173;
  if (v174(v92, 1, v61))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v91, v92, v61);
    a3 = v173;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v91, 0, 1, v61);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
LABEL_46:
  v94 = v7[18];
  v95 = (_QWORD *)(a1 + v94);
  v96 = (uint64_t *)(a2 + v94);
  v98 = *v96;
  v97 = v96[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = v7[19];
  v100 = (_QWORD *)(a1 + v99);
  v101 = (uint64_t *)(a2 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = v7[20];
  v105 = (_QWORD *)(a1 + v104);
  v106 = (_QWORD *)(a2 + v104);
  if (*(_QWORD *)(a1 + v104 + 8))
  {
    v107 = v106[1];
    if (v107)
    {
      *v105 = *v106;
      v105[1] = v107;
      swift_bridgeObjectRelease();
      v108 = v106[3];
      v105[2] = v106[2];
      v105[3] = v108;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_2333D4764((uint64_t)v105);
  }
  v109 = *((_OWORD *)v106 + 1);
  *(_OWORD *)v105 = *(_OWORD *)v106;
  *((_OWORD *)v105 + 1) = v109;
LABEL_51:
  v110 = v7[21];
  v111 = (_QWORD *)(a1 + v110);
  v112 = (_QWORD *)(a2 + v110);
  if (*(_QWORD *)(a1 + v110 + 8))
  {
    v113 = v112[1];
    if (v113)
    {
      *v111 = *v112;
      v111[1] = v113;
      swift_bridgeObjectRelease();
      v114 = v112[3];
      v111[2] = v112[2];
      v111[3] = v114;
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    sub_2333D4798((uint64_t)v111);
  }
  v115 = *((_OWORD *)v112 + 1);
  *(_OWORD *)v111 = *(_OWORD *)v112;
  *((_OWORD *)v111 + 1) = v115;
LABEL_56:
  v116 = a3[5];
  v117 = (_QWORD *)(a1 + v116);
  v118 = (_QWORD *)(a2 + v116);
  v119 = *(_QWORD *)(a1 + v116 + 8);
  if (v119 != 1)
  {
    v120 = v118[1];
    if (v120 == 1)
    {
      sub_2333D47CC((uint64_t)v117);
      goto LABEL_59;
    }
    if (v119)
    {
      if (v120)
      {
        *v117 = *v118;
        v117[1] = v120;
        swift_bridgeObjectRelease();
        v134 = v118[3];
        v117[2] = v118[2];
        v117[3] = v134;
        swift_bridgeObjectRelease();
        goto LABEL_67;
      }
      sub_2332DD550((uint64_t)v117);
    }
    v139 = *((_OWORD *)v118 + 1);
    *(_OWORD *)v117 = *(_OWORD *)v118;
    *((_OWORD *)v117 + 1) = v139;
LABEL_67:
    if (v117[5])
    {
      v140 = v118[5];
      if (v140)
      {
        v117[4] = v118[4];
        v117[5] = v140;
        swift_bridgeObjectRelease();
        v141 = v118[7];
        v117[6] = v118[6];
        v117[7] = v141;
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
      sub_2332DD550((uint64_t)(v117 + 4));
    }
    v142 = *((_OWORD *)v118 + 3);
    *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
    *((_OWORD *)v117 + 3) = v142;
    goto LABEL_60;
  }
LABEL_59:
  v121 = *((_OWORD *)v118 + 1);
  *(_OWORD *)v117 = *(_OWORD *)v118;
  *((_OWORD *)v117 + 1) = v121;
  v122 = *((_OWORD *)v118 + 3);
  *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
  *((_OWORD *)v117 + 3) = v122;
LABEL_60:
  v123 = a3[6];
  v124 = (_QWORD *)(a1 + v123);
  v125 = (uint64_t *)(a2 + v123);
  v127 = *v125;
  v126 = v125[1];
  *v124 = v127;
  v124[1] = v126;
  swift_bridgeObjectRelease();
  v128 = a3[7];
  v129 = (_QWORD *)(a1 + v128);
  v130 = (uint64_t *)(a2 + v128);
  v132 = *v130;
  v131 = v130[1];
  *v129 = v132;
  v129[1] = v131;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14OfflineLabItemO11TransactionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333D5A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for RawBankConnectData.Transaction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s14OfflineLabItemO11TransactionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333D5AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for RawBankConnectData.Transaction(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2333D5B24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RawBankConnectData.Transaction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s14OfflineLabItemO7AccountVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  int *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  unsigned int (*v156)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v157)(_QWORD, _QWORD, _QWORD);
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    type metadata accessor for RawBankConnectData.Account(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v12 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v12;
    v168 = a2;
    v169 = a1;
    v167 = a3;
    v166 = v9;
    if (EnumCaseMultiPayload == 1)
    {
      v13 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v13;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      v14 = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v14;
      v9[64] = v10[64];
      v15 = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = v15;
      v164 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
      v16 = *(int *)(v164 + 40);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v160 = *(_QWORD *)(v19 - 8);
      v20 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v160 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_DWORD *)v17 + 4) = *((_DWORD *)v18 + 4);
        *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
        *(_QWORD *)(v17 + 37) = *(_QWORD *)(v18 + 37);
        v33 = *((_QWORD *)v18 + 7);
        *((_QWORD *)v17 + 6) = *((_QWORD *)v18 + 6);
        *((_QWORD *)v17 + 7) = v33;
        v156 = v20;
        v34 = *((_QWORD *)v18 + 9);
        *((_QWORD *)v17 + 8) = *((_QWORD *)v18 + 8);
        *((_QWORD *)v17 + 9) = v34;
        v35 = *(int *)(v19 + 20);
        v36 = &v17[v35];
        v37 = &v18[v35];
        v38 = sub_23361D634();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v20 = v156;
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v17, 0, 1, v19);
      }
      v40 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v41 = &v17[v40];
      v42 = &v18[v40];
      v43 = v20(v42, 1, v19);
      v44 = (int *)v164;
      v45 = v166;
      if (v43)
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_DWORD *)v41 + 4) = *((_DWORD *)v42 + 4);
        *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
        *(_QWORD *)(v41 + 37) = *(_QWORD *)(v42 + 37);
        v58 = *((_QWORD *)v42 + 7);
        *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
        *((_QWORD *)v41 + 7) = v58;
        v59 = *((_QWORD *)v42 + 9);
        *((_QWORD *)v41 + 8) = *((_QWORD *)v42 + 8);
        *((_QWORD *)v41 + 9) = v59;
        v60 = *(int *)(v19 + 20);
        v158 = &v41[v60];
        v61 = &v42[v60];
        v62 = sub_23361D634();
        v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v44 = (int *)v164;
        swift_bridgeObjectRetain();
        v63(v158, v61, v62);
        v41[*(int *)(v19 + 24)] = v42[*(int *)(v19 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v41, 0, 1, v19);
      }
      v64 = v44[11];
      v65 = &v166[v64];
      v66 = &v10[v64];
      v67 = *((_QWORD *)v66 + 7);
      if (v67)
      {
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_DWORD *)v65 + 4) = *((_DWORD *)v66 + 4);
        *(_OWORD *)(v65 + 24) = *(_OWORD *)(v66 + 24);
        *(_QWORD *)(v65 + 37) = *(_QWORD *)(v66 + 37);
        *((_QWORD *)v65 + 6) = *((_QWORD *)v66 + 6);
        *((_QWORD *)v65 + 7) = v67;
        v68 = *((_QWORD *)v66 + 9);
        *((_QWORD *)v65 + 8) = *((_QWORD *)v66 + 8);
        *((_QWORD *)v65 + 9) = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v82 = *((_OWORD *)v66 + 3);
        *((_OWORD *)v65 + 2) = *((_OWORD *)v66 + 2);
        *((_OWORD *)v65 + 3) = v82;
        *((_OWORD *)v65 + 4) = *((_OWORD *)v66 + 4);
        v83 = *((_OWORD *)v66 + 1);
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_OWORD *)v65 + 1) = v83;
      }
      v84 = v44[12];
      v85 = &v166[v84];
      v86 = &v10[v84];
      v87 = *((_QWORD *)v86 + 7);
      if (v87)
      {
        *(_OWORD *)v85 = *(_OWORD *)v86;
        *((_DWORD *)v85 + 4) = *((_DWORD *)v86 + 4);
        *(_OWORD *)(v85 + 24) = *(_OWORD *)(v86 + 24);
        *(_QWORD *)(v85 + 37) = *(_QWORD *)(v86 + 37);
        *((_QWORD *)v85 + 6) = *((_QWORD *)v86 + 6);
        *((_QWORD *)v85 + 7) = v87;
        v88 = *((_QWORD *)v86 + 9);
        *((_QWORD *)v85 + 8) = *((_QWORD *)v86 + 8);
        *((_QWORD *)v85 + 9) = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v93 = *((_OWORD *)v86 + 3);
        *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
        *((_OWORD *)v85 + 3) = v93;
        *((_OWORD *)v85 + 4) = *((_OWORD *)v86 + 4);
        v94 = *((_OWORD *)v86 + 1);
        *(_OWORD *)v85 = *(_OWORD *)v86;
        *((_OWORD *)v85 + 1) = v94;
      }
      v95 = v44[13];
      v96 = &v166[v95];
      v97 = &v10[v95];
      v98 = sub_23361D634();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v96, v97, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      v101 = v44[14];
      v102 = &v166[v101];
      v103 = &v10[v101];
      v104 = *((_QWORD *)v103 + 7);
      if (v104)
      {
        *(_OWORD *)v102 = *(_OWORD *)v103;
        *((_DWORD *)v102 + 4) = *((_DWORD *)v103 + 4);
        *(_OWORD *)(v102 + 24) = *(_OWORD *)(v103 + 24);
        *(_QWORD *)(v102 + 37) = *(_QWORD *)(v103 + 37);
        *((_QWORD *)v102 + 6) = *((_QWORD *)v103 + 6);
        *((_QWORD *)v102 + 7) = v104;
        v105 = *((_QWORD *)v103 + 9);
        *((_QWORD *)v102 + 8) = *((_QWORD *)v103 + 8);
        *((_QWORD *)v102 + 9) = v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v106 = *((_OWORD *)v103 + 3);
        *((_OWORD *)v102 + 2) = *((_OWORD *)v103 + 2);
        *((_OWORD *)v102 + 3) = v106;
        *((_OWORD *)v102 + 4) = *((_OWORD *)v103 + 4);
        v107 = *((_OWORD *)v103 + 1);
        *(_OWORD *)v102 = *(_OWORD *)v103;
        *((_OWORD *)v102 + 1) = v107;
      }
      v108 = v44[15];
      v109 = &v166[v108];
      v110 = &v10[v108];
      v111 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v112 = *((_QWORD *)v111 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v112 + 48))(v110, 1, v111))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        v163 = v112;
        v114 = sub_23361D340();
        v115 = *(_QWORD *)(v114 - 8);
        v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
        if (v116(v110, 1, v114))
        {
          v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v109, v110, v114);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v109, 0, 1, v114);
        }
        v122 = v111[5];
        v123 = &v109[v122];
        v124 = &v110[v122];
        if (v116(&v110[v122], 1, v114))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v123, v124, v114);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v123, 0, 1, v114);
        }
        v130 = v111[6];
        v131 = &v109[v130];
        v132 = &v110[v130];
        if (v116(&v110[v130], 1, v114))
        {
          v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v131, v132, v114);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v131, 0, 1, v114);
        }
        v138 = v111[7];
        v139 = &v109[v138];
        v140 = &v110[v138];
        if (v116(&v110[v138], 1, v114))
        {
          v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v139, v140, v114);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v139, 0, 1, v114);
        }
        v146 = v111[8];
        v147 = &v109[v146];
        v148 = &v110[v146];
        if (v116(&v110[v146], 1, v114))
        {
          v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v147, v148, v114);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v147, 0, 1, v114);
        }
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v163 + 56))(v109, 0, 1, v111);
        v44 = (int *)v164;
      }
      v150 = v44 + 16;
    }
    else
    {
      v24 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v24;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      v25 = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v25;
      v9[64] = v10[64];
      v26 = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = v26;
      v165 = type metadata accessor for RawBankConnectData.AssetAccount(0);
      v27 = *(int *)(v165 + 40);
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v161 = *(_QWORD *)(v30 - 8);
      v31 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v161 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v29, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
        *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
        *(_QWORD *)(v28 + 37) = *(_QWORD *)(v29 + 37);
        v47 = *((_QWORD *)v29 + 7);
        *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
        *((_QWORD *)v28 + 7) = v47;
        v157 = v31;
        v48 = *((_QWORD *)v29 + 9);
        *((_QWORD *)v28 + 8) = *((_QWORD *)v29 + 8);
        *((_QWORD *)v28 + 9) = v48;
        v49 = *(int *)(v30 + 20);
        v50 = &v28[v49];
        v51 = &v29[v49];
        v52 = sub_23361D634();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v31 = v157;
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        v28[*(int *)(v30 + 24)] = v29[*(int *)(v30 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v28, 0, 1, v30);
      }
      v54 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v55 = &v28[v54];
      v56 = &v29[v54];
      v45 = v166;
      if (v31(v56, 1, v30))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_DWORD *)v55 + 4) = *((_DWORD *)v56 + 4);
        *(_OWORD *)(v55 + 24) = *(_OWORD *)(v56 + 24);
        *(_QWORD *)(v55 + 37) = *(_QWORD *)(v56 + 37);
        v69 = *((_QWORD *)v56 + 7);
        *((_QWORD *)v55 + 6) = *((_QWORD *)v56 + 6);
        *((_QWORD *)v55 + 7) = v69;
        v70 = *((_QWORD *)v56 + 9);
        *((_QWORD *)v55 + 8) = *((_QWORD *)v56 + 8);
        *((_QWORD *)v55 + 9) = v70;
        v71 = *(int *)(v30 + 20);
        v159 = &v55[v71];
        v72 = &v56[v71];
        v73 = sub_23361D634();
        v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v74(v159, v72, v73);
        v55[*(int *)(v30 + 24)] = v56[*(int *)(v30 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v55, 0, 1, v30);
      }
      v75 = v165;
      v76 = *(int *)(v165 + 44);
      v77 = &v166[v76];
      v78 = &v10[v76];
      v79 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v80 = *((_QWORD *)v79 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v78, 1, v79))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        v162 = v80;
        v89 = sub_23361D340();
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
        if (v91(v78, 1, v89))
        {
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v77, v78, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v77, 0, 1, v89);
        }
        v118 = v79[5];
        v119 = &v77[v118];
        v120 = &v78[v118];
        if (v91(&v78[v118], 1, v89))
        {
          v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v119, v120, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v119, 0, 1, v89);
        }
        v126 = v79[6];
        v127 = &v77[v126];
        v128 = &v78[v126];
        if (v91(&v78[v126], 1, v89))
        {
          v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v127, v128, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v127, 0, 1, v89);
        }
        v134 = v79[7];
        v135 = &v77[v134];
        v136 = &v78[v134];
        if (v91(&v78[v134], 1, v89))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v135, v136, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v135, 0, 1, v89);
        }
        v142 = v79[8];
        v143 = &v77[v142];
        v144 = &v78[v142];
        if (v91(&v78[v142], 1, v89))
        {
          v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v143, v144, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v143, 0, 1, v89);
        }
        v75 = v165;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v162 + 56))(v77, 0, 1, v79);
      }
      v150 = (int *)(v75 + 48);
    }
    v23 = v169;
    v45[*v150] = v10[*v150];
    swift_storeEnumTagMultiPayload();
    v151 = *(int *)(v167 + 24);
    v152 = (_QWORD *)((char *)v169 + v151);
    v153 = (_QWORD *)((char *)v168 + v151);
    v154 = v153[1];
    *v152 = *v153;
    v152[1] = v154;
    swift_bridgeObjectRetain();
  }
  return v23;
}

uint64_t _s14OfflineLabItemO7AccountVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for RawBankConnectData.Account(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (int *)type metadata accessor for RawBankConnectData.LiabilityAccount(0);
    v7 = v4 + v6[10];
    v8 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    if (!v9(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v7 + *(int *)(v8 + 20);
      v11 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
    v12 = v7 + *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    if (!v9(v12, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v12 + *(int *)(v8 + 20);
      v14 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    }
    if (*(_QWORD *)(v4 + v6[11] + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v4 + v6[12] + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v15 = v4 + v6[13];
    v16 = sub_23361D634();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    if (*(_QWORD *)(v4 + v6[14] + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = v6[15];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = type metadata accessor for RawBankConnectData.AssetAccount(0);
    v20 = v4 + *(int *)(v19 + 40);
    v21 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
    if (!v22(v20, 1, v21))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v20 + *(int *)(v21 + 20);
      v24 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    }
    v25 = v20 + *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    if (!v22(v25, 1, v21))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v25 + *(int *)(v21 + 20);
      v27 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    }
    v18 = *(int *)(v19 + 44);
  }
  v28 = v4 + v18;
  v29 = (int *)type metadata accessor for RawBankConnectData.Actions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v29 - 1) + 48))(v28, 1, v29))
  {
    v30 = sub_23361D340();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (!v32(v28, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v28, v30);
    v33 = v28 + v29[5];
    if (!v32(v33, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
    v34 = v28 + v29[6];
    if (!v32(v34, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v30);
    v35 = v28 + v29[7];
    if (!v32(v35, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v30);
    v36 = v28 + v29[8];
    if (!v32(v36, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v30);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *_s14OfflineLabItemO7AccountVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  unsigned int v40;
  int *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  unsigned int (*v153)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v154)(_QWORD, _QWORD, _QWORD);
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  type metadata accessor for RawBankConnectData.Account(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v11 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *((_QWORD *)v8 + 1) = v11;
  v165 = a2;
  v166 = a1;
  v164 = a3;
  v163 = v8;
  if (EnumCaseMultiPayload == 1)
  {
    v12 = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 3) = v12;
    *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
    v8[40] = v9[40];
    v13 = *((_QWORD *)v9 + 7);
    *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
    *((_QWORD *)v8 + 7) = v13;
    v8[64] = v9[64];
    v14 = *((_QWORD *)v9 + 10);
    *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
    *((_QWORD *)v8 + 10) = v14;
    v161 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
    v15 = *(int *)(v161 + 40);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v157 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v157 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
      *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
      *(_QWORD *)(v16 + 37) = *(_QWORD *)(v17 + 37);
      v30 = *((_QWORD *)v17 + 7);
      *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
      *((_QWORD *)v16 + 7) = v30;
      v153 = v19;
      v31 = *((_QWORD *)v17 + 9);
      *((_QWORD *)v16 + 8) = *((_QWORD *)v17 + 8);
      *((_QWORD *)v16 + 9) = v31;
      v32 = *(int *)(v18 + 20);
      v33 = &v16[v32];
      v34 = &v17[v32];
      v35 = sub_23361D634();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      v19 = v153;
      swift_bridgeObjectRetain();
      v36(v33, v34, v35);
      v16[*(int *)(v18 + 24)] = v17[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v16, 0, 1, v18);
    }
    v37 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    v38 = &v16[v37];
    v39 = &v17[v37];
    v40 = v19(v39, 1, v18);
    v41 = (int *)v161;
    v42 = v163;
    if (v40)
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_DWORD *)v38 + 4) = *((_DWORD *)v39 + 4);
      *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 37) = *(_QWORD *)(v39 + 37);
      v55 = *((_QWORD *)v39 + 7);
      *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
      *((_QWORD *)v38 + 7) = v55;
      v56 = *((_QWORD *)v39 + 9);
      *((_QWORD *)v38 + 8) = *((_QWORD *)v39 + 8);
      *((_QWORD *)v38 + 9) = v56;
      v57 = *(int *)(v18 + 20);
      v155 = &v38[v57];
      v58 = &v39[v57];
      v59 = sub_23361D634();
      v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v41 = (int *)v161;
      swift_bridgeObjectRetain();
      v60(v155, v58, v59);
      v38[*(int *)(v18 + 24)] = v39[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v38, 0, 1, v18);
    }
    v61 = v41[11];
    v62 = &v163[v61];
    v63 = &v9[v61];
    v64 = *((_QWORD *)v63 + 7);
    if (v64)
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
      *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
      *(_QWORD *)(v62 + 37) = *(_QWORD *)(v63 + 37);
      *((_QWORD *)v62 + 6) = *((_QWORD *)v63 + 6);
      *((_QWORD *)v62 + 7) = v64;
      v65 = *((_QWORD *)v63 + 9);
      *((_QWORD *)v62 + 8) = *((_QWORD *)v63 + 8);
      *((_QWORD *)v62 + 9) = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v79 = *((_OWORD *)v63 + 3);
      *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
      *((_OWORD *)v62 + 3) = v79;
      *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
      v80 = *((_OWORD *)v63 + 1);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v80;
    }
    v81 = v41[12];
    v82 = &v163[v81];
    v83 = &v9[v81];
    v84 = *((_QWORD *)v83 + 7);
    if (v84)
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_DWORD *)v82 + 4) = *((_DWORD *)v83 + 4);
      *(_OWORD *)(v82 + 24) = *(_OWORD *)(v83 + 24);
      *(_QWORD *)(v82 + 37) = *(_QWORD *)(v83 + 37);
      *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
      *((_QWORD *)v82 + 7) = v84;
      v85 = *((_QWORD *)v83 + 9);
      *((_QWORD *)v82 + 8) = *((_QWORD *)v83 + 8);
      *((_QWORD *)v82 + 9) = v85;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v90 = *((_OWORD *)v83 + 3);
      *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
      *((_OWORD *)v82 + 3) = v90;
      *((_OWORD *)v82 + 4) = *((_OWORD *)v83 + 4);
      v91 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v91;
    }
    v92 = v41[13];
    v93 = &v163[v92];
    v94 = &v9[v92];
    v95 = sub_23361D634();
    v96 = *(_QWORD *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    v98 = v41[14];
    v99 = &v163[v98];
    v100 = &v9[v98];
    v101 = *((_QWORD *)v100 + 7);
    if (v101)
    {
      *(_OWORD *)v99 = *(_OWORD *)v100;
      *((_DWORD *)v99 + 4) = *((_DWORD *)v100 + 4);
      *(_OWORD *)(v99 + 24) = *(_OWORD *)(v100 + 24);
      *(_QWORD *)(v99 + 37) = *(_QWORD *)(v100 + 37);
      *((_QWORD *)v99 + 6) = *((_QWORD *)v100 + 6);
      *((_QWORD *)v99 + 7) = v101;
      v102 = *((_QWORD *)v100 + 9);
      *((_QWORD *)v99 + 8) = *((_QWORD *)v100 + 8);
      *((_QWORD *)v99 + 9) = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v103 = *((_OWORD *)v100 + 3);
      *((_OWORD *)v99 + 2) = *((_OWORD *)v100 + 2);
      *((_OWORD *)v99 + 3) = v103;
      *((_OWORD *)v99 + 4) = *((_OWORD *)v100 + 4);
      v104 = *((_OWORD *)v100 + 1);
      *(_OWORD *)v99 = *(_OWORD *)v100;
      *((_OWORD *)v99 + 1) = v104;
    }
    v105 = v41[15];
    v106 = &v163[v105];
    v107 = &v9[v105];
    v108 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v109 = *((_QWORD *)v108 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v109 + 48))(v107, 1, v108))
    {
      v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    }
    else
    {
      v160 = v109;
      v111 = sub_23361D340();
      v112 = *(_QWORD *)(v111 - 8);
      v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
      if (v113(v107, 1, v111))
      {
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v106, v107, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v106, 0, 1, v111);
      }
      v119 = v108[5];
      v120 = &v106[v119];
      v121 = &v107[v119];
      if (v113(&v107[v119], 1, v111))
      {
        v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v120, v121, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v120, 0, 1, v111);
      }
      v127 = v108[6];
      v128 = &v106[v127];
      v129 = &v107[v127];
      if (v113(&v107[v127], 1, v111))
      {
        v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v128, v129, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v128, 0, 1, v111);
      }
      v135 = v108[7];
      v136 = &v106[v135];
      v137 = &v107[v135];
      if (v113(&v107[v135], 1, v111))
      {
        v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v136, v137, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v136, 0, 1, v111);
      }
      v143 = v108[8];
      v144 = &v106[v143];
      v145 = &v107[v143];
      if (v113(&v107[v143], 1, v111))
      {
        v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v144, v145, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v144, 0, 1, v111);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v160 + 56))(v106, 0, 1, v108);
      v41 = (int *)v161;
    }
    v147 = v41 + 16;
  }
  else
  {
    v21 = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 3) = v21;
    *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
    v8[40] = v9[40];
    v22 = *((_QWORD *)v9 + 7);
    *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
    *((_QWORD *)v8 + 7) = v22;
    v8[64] = v9[64];
    v23 = *((_QWORD *)v9 + 10);
    *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
    *((_QWORD *)v8 + 10) = v23;
    v162 = type metadata accessor for RawBankConnectData.AssetAccount(0);
    v24 = *(int *)(v162 + 40);
    v25 = &v8[v24];
    v26 = &v9[v24];
    v27 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v158 = *(_QWORD *)(v27 - 8);
    v28 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v158 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
      *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
      *(_QWORD *)(v25 + 37) = *(_QWORD *)(v26 + 37);
      v44 = *((_QWORD *)v26 + 7);
      *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
      *((_QWORD *)v25 + 7) = v44;
      v154 = v28;
      v45 = *((_QWORD *)v26 + 9);
      *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
      *((_QWORD *)v25 + 9) = v45;
      v46 = *(int *)(v27 + 20);
      v47 = &v25[v46];
      v48 = &v26[v46];
      v49 = sub_23361D634();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v28 = v154;
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      v25[*(int *)(v27 + 24)] = v26[*(int *)(v27 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v25, 0, 1, v27);
    }
    v51 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    v52 = &v25[v51];
    v53 = &v26[v51];
    v42 = v163;
    if (v28(v53, 1, v27))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
      *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
      *(_QWORD *)(v52 + 37) = *(_QWORD *)(v53 + 37);
      v66 = *((_QWORD *)v53 + 7);
      *((_QWORD *)v52 + 6) = *((_QWORD *)v53 + 6);
      *((_QWORD *)v52 + 7) = v66;
      v67 = *((_QWORD *)v53 + 9);
      *((_QWORD *)v52 + 8) = *((_QWORD *)v53 + 8);
      *((_QWORD *)v52 + 9) = v67;
      v68 = *(int *)(v27 + 20);
      v156 = &v52[v68];
      v69 = &v53[v68];
      v70 = sub_23361D634();
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v156, v69, v70);
      v52[*(int *)(v27 + 24)] = v53[*(int *)(v27 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v52, 0, 1, v27);
    }
    v72 = v162;
    v73 = *(int *)(v162 + 44);
    v74 = &v163[v73];
    v75 = &v9[v73];
    v76 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v77 = *((_QWORD *)v76 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v77 + 48))(v75, 1, v76))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v159 = v77;
      v86 = sub_23361D340();
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
      if (v88(v75, 1, v86))
      {
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v74, v75, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v74, 0, 1, v86);
      }
      v115 = v76[5];
      v116 = &v74[v115];
      v117 = &v75[v115];
      if (v88(&v75[v115], 1, v86))
      {
        v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v116, v117, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v116, 0, 1, v86);
      }
      v123 = v76[6];
      v124 = &v74[v123];
      v125 = &v75[v123];
      if (v88(&v75[v123], 1, v86))
      {
        v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v124, v125, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v124, 0, 1, v86);
      }
      v131 = v76[7];
      v132 = &v74[v131];
      v133 = &v75[v131];
      if (v88(&v75[v131], 1, v86))
      {
        v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v132, v133, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v132, 0, 1, v86);
      }
      v139 = v76[8];
      v140 = &v74[v139];
      v141 = &v75[v139];
      if (v88(&v75[v139], 1, v86))
      {
        v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v140, v141, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v140, 0, 1, v86);
      }
      v72 = v162;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v159 + 56))(v74, 0, 1, v76);
    }
    v147 = (int *)(v72 + 48);
  }
  v42[*v147] = v9[*v147];
  swift_storeEnumTagMultiPayload();
  v148 = *(int *)(v164 + 24);
  v149 = (_QWORD *)((char *)v166 + v148);
  v150 = (_QWORD *)((char *)v165 + v148);
  v151 = v150[1];
  *v149 = *v150;
  v149[1] = v151;
  swift_bridgeObjectRetain();
  return v166;
}

_QWORD *_s14OfflineLabItemO7AccountVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  __int128 *v31;
  unsigned int v32;
  int *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v5 != v4)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)v5 + v6;
    v8 = (char *)v4 + v6;
    sub_233168500((uint64_t)v5 + v6, type metadata accessor for RawBankConnectData.Account);
    type metadata accessor for RawBankConnectData.Account(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
    v157 = v4;
    v158 = v5;
    v156 = a3;
    v155 = v8;
    if (EnumCaseMultiPayload == 1)
    {
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      v7[40] = v8[40];
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
      v7[64] = v8[64];
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
      v153 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
      v10 = *(int *)(v153 + 40);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v149 = *(_QWORD *)(v13 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v22 = *(_OWORD *)v12;
        *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
        *(_OWORD *)v11 = v22;
        v23 = *(_OWORD *)(v12 + 24);
        *(_QWORD *)(v11 + 37) = *(_QWORD *)(v12 + 37);
        *(_OWORD *)(v11 + 24) = v23;
        *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
        *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
        *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
        *((_QWORD *)v11 + 9) = *((_QWORD *)v12 + 9);
        v24 = *(int *)(v13 + 20);
        v25 = &v11[v24];
        v26 = &v12[v24];
        v27 = sub_23361D634();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        v11[*(int *)(v13 + 24)] = v12[*(int *)(v13 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v11, 0, 1, v13);
      }
      v29 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v30 = &v11[v29];
      v31 = (__int128 *)&v12[v29];
      v32 = v14((char *)v31, 1, v13);
      v33 = (int *)v153;
      v34 = v155;
      if (v32)
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v47 = *v31;
        *((_DWORD *)v30 + 4) = *((_DWORD *)v31 + 4);
        *(_OWORD *)v30 = v47;
        v48 = *(__int128 *)((char *)v31 + 24);
        *(_QWORD *)(v30 + 37) = *(_QWORD *)((char *)v31 + 37);
        *(_OWORD *)(v30 + 24) = v48;
        *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
        *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
        *((_QWORD *)v30 + 8) = *((_QWORD *)v31 + 8);
        *((_QWORD *)v30 + 9) = *((_QWORD *)v31 + 9);
        v49 = *(int *)(v13 + 20);
        v147 = &v30[v49];
        v50 = (char *)v31 + v49;
        v51 = sub_23361D634();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v33 = (int *)v153;
        swift_bridgeObjectRetain();
        v52(v147, v50, v51);
        v30[*(int *)(v13 + 24)] = *((_BYTE *)v31 + *(int *)(v13 + 24));
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v30, 0, 1, v13);
      }
      v53 = v33[11];
      v54 = &v7[v53];
      v55 = &v155[v53];
      if (*((_QWORD *)v55 + 7))
      {
        v56 = *(_OWORD *)v55;
        *((_DWORD *)v54 + 4) = *((_DWORD *)v55 + 4);
        *(_OWORD *)v54 = v56;
        v57 = *(_OWORD *)(v55 + 24);
        *(_QWORD *)(v54 + 37) = *(_QWORD *)(v55 + 37);
        *(_OWORD *)(v54 + 24) = v57;
        *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
        *((_QWORD *)v54 + 7) = *((_QWORD *)v55 + 7);
        *((_QWORD *)v54 + 8) = *((_QWORD *)v55 + 8);
        *((_QWORD *)v54 + 9) = *((_QWORD *)v55 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v54 = *(_OWORD *)v55;
        v71 = *((_OWORD *)v55 + 1);
        v72 = *((_OWORD *)v55 + 2);
        v73 = *((_OWORD *)v55 + 4);
        *((_OWORD *)v54 + 3) = *((_OWORD *)v55 + 3);
        *((_OWORD *)v54 + 4) = v73;
        *((_OWORD *)v54 + 1) = v71;
        *((_OWORD *)v54 + 2) = v72;
      }
      v74 = v33[12];
      v75 = &v7[v74];
      v76 = &v155[v74];
      if (*((_QWORD *)v76 + 7))
      {
        v77 = *(_OWORD *)v76;
        *((_DWORD *)v75 + 4) = *((_DWORD *)v76 + 4);
        *(_OWORD *)v75 = v77;
        v78 = *(_OWORD *)(v76 + 24);
        *(_QWORD *)(v75 + 37) = *(_QWORD *)(v76 + 37);
        *(_OWORD *)(v75 + 24) = v78;
        *((_QWORD *)v75 + 6) = *((_QWORD *)v76 + 6);
        *((_QWORD *)v75 + 7) = *((_QWORD *)v76 + 7);
        *((_QWORD *)v75 + 8) = *((_QWORD *)v76 + 8);
        *((_QWORD *)v75 + 9) = *((_QWORD *)v76 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v75 = *(_OWORD *)v76;
        v83 = *((_OWORD *)v76 + 1);
        v84 = *((_OWORD *)v76 + 2);
        v85 = *((_OWORD *)v76 + 4);
        *((_OWORD *)v75 + 3) = *((_OWORD *)v76 + 3);
        *((_OWORD *)v75 + 4) = v85;
        *((_OWORD *)v75 + 1) = v83;
        *((_OWORD *)v75 + 2) = v84;
      }
      v86 = v33[13];
      v87 = &v7[v86];
      v88 = &v155[v86];
      v89 = sub_23361D634();
      v90 = *(_QWORD *)(v89 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      v92 = v33[14];
      v93 = &v7[v92];
      v94 = &v155[v92];
      if (*((_QWORD *)v94 + 7))
      {
        v95 = *(_OWORD *)v94;
        *((_DWORD *)v93 + 4) = *((_DWORD *)v94 + 4);
        *(_OWORD *)v93 = v95;
        v96 = *(_OWORD *)(v94 + 24);
        *(_QWORD *)(v93 + 37) = *(_QWORD *)(v94 + 37);
        *(_OWORD *)(v93 + 24) = v96;
        *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
        *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
        *((_QWORD *)v93 + 8) = *((_QWORD *)v94 + 8);
        *((_QWORD *)v93 + 9) = *((_QWORD *)v94 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v93 = *(_OWORD *)v94;
        v97 = *((_OWORD *)v94 + 1);
        v98 = *((_OWORD *)v94 + 2);
        v99 = *((_OWORD *)v94 + 4);
        *((_OWORD *)v93 + 3) = *((_OWORD *)v94 + 3);
        *((_OWORD *)v93 + 4) = v99;
        *((_OWORD *)v93 + 1) = v97;
        *((_OWORD *)v93 + 2) = v98;
      }
      v100 = v33[15];
      v101 = &v7[v100];
      v102 = &v155[v100];
      v103 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v104 = *((_QWORD *)v103 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v104 + 48))(v102, 1, v103))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v152 = v104;
        v106 = sub_23361D340();
        v107 = *(_QWORD *)(v106 - 8);
        v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
        if (v108(v102, 1, v106))
        {
          v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v101, v102, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v101, 0, 1, v106);
        }
        v114 = v103[5];
        v115 = &v101[v114];
        v116 = &v102[v114];
        if (v108(&v102[v114], 1, v106))
        {
          v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v115, v116, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v115, 0, 1, v106);
        }
        v122 = v103[6];
        v123 = &v101[v122];
        v124 = &v102[v122];
        if (v108(&v102[v122], 1, v106))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v123, v124, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v123, 0, 1, v106);
        }
        v130 = v103[7];
        v131 = &v101[v130];
        v132 = &v102[v130];
        if (v108(&v102[v130], 1, v106))
        {
          v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v131, v132, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v131, 0, 1, v106);
        }
        v138 = v103[8];
        v139 = &v101[v138];
        v140 = &v102[v138];
        if (v108(&v102[v138], 1, v106))
        {
          v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v139, v140, v106);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v139, 0, 1, v106);
        }
        v33 = (int *)v153;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v152 + 56))(v101, 0, 1, v103);
      }
      v142 = v33 + 16;
    }
    else
    {
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      v7[40] = v8[40];
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
      v7[64] = v8[64];
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
      v154 = type metadata accessor for RawBankConnectData.AssetAccount(0);
      v16 = *(int *)(v154 + 40);
      v17 = &v7[v16];
      v18 = &v8[v16];
      v19 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v150 = *(_QWORD *)(v19 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v36 = *(_OWORD *)v18;
        *((_DWORD *)v17 + 4) = *((_DWORD *)v18 + 4);
        *(_OWORD *)v17 = v36;
        v37 = *(_OWORD *)(v18 + 24);
        *(_QWORD *)(v17 + 37) = *(_QWORD *)(v18 + 37);
        *(_OWORD *)(v17 + 24) = v37;
        *((_QWORD *)v17 + 6) = *((_QWORD *)v18 + 6);
        *((_QWORD *)v17 + 7) = *((_QWORD *)v18 + 7);
        *((_QWORD *)v17 + 8) = *((_QWORD *)v18 + 8);
        *((_QWORD *)v17 + 9) = *((_QWORD *)v18 + 9);
        v38 = *(int *)(v19 + 20);
        v39 = &v17[v38];
        v40 = &v18[v38];
        v41 = sub_23361D634();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v17, 0, 1, v19);
      }
      v43 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v44 = &v17[v43];
      v45 = (__int128 *)&v18[v43];
      v34 = v155;
      if (v20((char *)v45, 1, v19))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v58 = *v45;
        *((_DWORD *)v44 + 4) = *((_DWORD *)v45 + 4);
        *(_OWORD *)v44 = v58;
        v59 = *(__int128 *)((char *)v45 + 24);
        *(_QWORD *)(v44 + 37) = *(_QWORD *)((char *)v45 + 37);
        *(_OWORD *)(v44 + 24) = v59;
        *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
        *((_QWORD *)v44 + 7) = *((_QWORD *)v45 + 7);
        *((_QWORD *)v44 + 8) = *((_QWORD *)v45 + 8);
        *((_QWORD *)v44 + 9) = *((_QWORD *)v45 + 9);
        v60 = *(int *)(v19 + 20);
        v148 = &v44[v60];
        v61 = (char *)v45 + v60;
        v62 = sub_23361D634();
        v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63(v148, v61, v62);
        v44[*(int *)(v19 + 24)] = *((_BYTE *)v45 + *(int *)(v19 + 24));
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v44, 0, 1, v19);
      }
      v64 = v154;
      v65 = *(int *)(v154 + 44);
      v66 = &v7[v65];
      v67 = &v155[v65];
      v68 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v69 = *((_QWORD *)v68 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v69 + 48))(v67, 1, v68))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        v151 = v69;
        v79 = sub_23361D340();
        v80 = *(_QWORD *)(v79 - 8);
        v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
        if (v81(v67, 1, v79))
        {
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v66, v67, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v66, 0, 1, v79);
        }
        v110 = v68[5];
        v111 = &v66[v110];
        v112 = &v67[v110];
        if (v81(&v67[v110], 1, v79))
        {
          v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v111, v112, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v111, 0, 1, v79);
        }
        v118 = v68[6];
        v119 = &v66[v118];
        v120 = &v67[v118];
        if (v81(&v67[v118], 1, v79))
        {
          v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v119, v120, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v119, 0, 1, v79);
        }
        v126 = v68[7];
        v127 = &v66[v126];
        v128 = &v67[v126];
        if (v81(&v67[v126], 1, v79))
        {
          v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v127, v128, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v127, 0, 1, v79);
        }
        v134 = v68[8];
        v135 = &v66[v134];
        v136 = &v67[v134];
        if (v81(&v67[v134], 1, v79))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v135, v136, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v135, 0, 1, v79);
        }
        v64 = v154;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v151 + 56))(v66, 0, 1, v68);
      }
      v142 = (int *)(v64 + 48);
    }
    v4 = v157;
    v5 = v158;
    a3 = v156;
    v7[*v142] = v34[*v142];
    swift_storeEnumTagMultiPayload();
  }
  v143 = *(int *)(a3 + 24);
  v144 = (_QWORD *)((char *)v5 + v143);
  v145 = (_QWORD *)((char *)v4 + v143);
  *v144 = *v145;
  v144[1] = v145[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *_s14OfflineLabItemO7AccountVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  int *v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _OWORD *v139;
  _OWORD *v140;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  type metadata accessor for RawBankConnectData.Account(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)v7 = *(_OWORD *)v8;
  v139 = a2;
  v140 = a1;
  v138 = a3;
  if (EnumCaseMultiPayload == 1)
  {
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    v7[40] = v8[40];
    *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
    v7[64] = v8[64];
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    v10 = (int *)type metadata accessor for RawBankConnectData.LiabilityAccount(0);
    v11 = v10[10];
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v26 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v26;
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      v27 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v27;
      v28 = *(int *)(v14 + 20);
      v29 = &v12[v28];
      v30 = &v13[v28];
      v31 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v12[*(int *)(v14 + 24)] = v13[*(int *)(v14 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v32 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    v33 = &v12[v32];
    v34 = &v13[v32];
    if (v16(v34, 1, v14))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v46 = *((_OWORD *)v34 + 3);
      *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 3) = v46;
      *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
      v47 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v47;
      v48 = *(int *)(v14 + 20);
      v49 = &v33[v48];
      v50 = &v34[v48];
      v51 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      v33[*(int *)(v14 + 24)] = v34[*(int *)(v14 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v33, 0, 1, v14);
    }
    v52 = v10[11];
    v53 = &v7[v52];
    v54 = &v8[v52];
    v55 = *((_OWORD *)v54 + 3);
    *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 3) = v55;
    *((_OWORD *)v53 + 4) = *((_OWORD *)v54 + 4);
    v56 = *((_OWORD *)v54 + 1);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *((_OWORD *)v53 + 1) = v56;
    v57 = v10[12];
    v58 = &v7[v57];
    v59 = &v8[v57];
    v60 = *((_OWORD *)v59 + 3);
    *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
    *((_OWORD *)v58 + 3) = v60;
    *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
    v61 = *((_OWORD *)v59 + 1);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v61;
    v62 = v10[13];
    v63 = &v7[v62];
    v64 = &v8[v62];
    v65 = sub_23361D634();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    v81 = v10[14];
    v82 = &v7[v81];
    v83 = &v8[v81];
    v84 = *((_OWORD *)v83 + 3);
    *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
    *((_OWORD *)v82 + 3) = v84;
    *((_OWORD *)v82 + 4) = *((_OWORD *)v83 + 4);
    v85 = *((_OWORD *)v83 + 1);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v85;
    v86 = v10[15];
    v87 = &v7[v86];
    v88 = &v8[v86];
    v89 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v90 = *((_QWORD *)v89 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v90 + 48))(v88, 1, v89))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      v134 = v90;
      v96 = sub_23361D340();
      v97 = *(_QWORD *)(v96 - 8);
      v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
      v137 = v97;
      if (v98(v88, 1, v96))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v87, v88, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v87, 0, 1, v96);
      }
      v104 = v89[5];
      v105 = &v87[v104];
      v106 = &v88[v104];
      if (v98(&v88[v104], 1, v96))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v105, v106, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v105, 0, 1, v96);
      }
      v112 = v89[6];
      v113 = &v87[v112];
      v114 = &v88[v112];
      if (v98(&v88[v112], 1, v96))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v113, v114, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v113, 0, 1, v96);
      }
      v120 = v89[7];
      v121 = &v87[v120];
      v122 = &v88[v120];
      if (v98(&v88[v120], 1, v96))
      {
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v121, v122, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v121, 0, 1, v96);
      }
      v128 = v89[8];
      v129 = &v87[v128];
      v130 = &v88[v128];
      if (v98(&v88[v128], 1, v96))
      {
        v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v129, v130, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v129, 0, 1, v96);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v134 + 56))(v87, 0, 1, v89);
    }
    v132 = v10 + 16;
  }
  else
  {
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    v7[40] = v8[40];
    *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
    v7[64] = v8[64];
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    v18 = type metadata accessor for RawBankConnectData.AssetAccount(0);
    v19 = *(int *)(v18 + 40);
    v20 = &v7[v19];
    v21 = &v8[v19];
    v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v36 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v36;
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      v37 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v37;
      v38 = *(int *)(v22 + 20);
      v39 = &v20[v38];
      v40 = &v21[v38];
      v41 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      v20[*(int *)(v22 + 24)] = v21[*(int *)(v22 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v42 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
    v43 = &v20[v42];
    v44 = &v21[v42];
    if (v24(v44, 1, v22))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v68 = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 3) = v68;
      *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
      v69 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v69;
      v70 = *(int *)(v22 + 20);
      v71 = &v43[v70];
      v72 = &v44[v70];
      v73 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
      v43[*(int *)(v22 + 24)] = v44[*(int *)(v22 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v43, 0, 1, v22);
    }
    v74 = v18;
    v75 = *(int *)(v18 + 44);
    v76 = &v7[v75];
    v77 = &v8[v75];
    v78 = (int *)type metadata accessor for RawBankConnectData.Actions();
    v79 = *((_QWORD *)v78 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v77, 1, v78))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      v92 = sub_23361D340();
      v93 = *(_QWORD *)(v92 - 8);
      v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
      v135 = v79;
      v136 = v93;
      if (v94(v77, 1, v92))
      {
        v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v76, v77, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v76, 0, 1, v92);
      }
      v100 = v78[5];
      v101 = &v76[v100];
      v102 = &v77[v100];
      if (v94(&v77[v100], 1, v92))
      {
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v101, v102, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v101, 0, 1, v92);
      }
      v108 = v78[6];
      v109 = &v76[v108];
      v110 = &v77[v108];
      if (v94(&v77[v108], 1, v92))
      {
        v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v109, v110, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v109, 0, 1, v92);
      }
      v116 = v78[7];
      v117 = &v76[v116];
      v118 = &v77[v116];
      if (v94(&v77[v116], 1, v92))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v117, v118, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v117, 0, 1, v92);
      }
      v124 = v78[8];
      v125 = &v76[v124];
      v126 = &v77[v124];
      if (v94(&v77[v124], 1, v92))
      {
        v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v125, v126, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v125, 0, 1, v92);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v135 + 56))(v76, 0, 1, v78);
    }
    v132 = (int *)(v74 + 48);
  }
  v7[*v132] = v8[*v132];
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)((char *)v140 + *(int *)(v138 + 24)) = *(_OWORD *)((char *)v139 + *(int *)(v138 + 24));
  return v140;
}

_QWORD *_s14OfflineLabItemO7AccountVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  char *v146;
  int *v147;
  uint64_t v148;
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  uint64_t v150;
  _QWORD *v151;

  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != v4)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)v4 + v7;
    sub_233168500((uint64_t)a1 + v7, type metadata accessor for RawBankConnectData.Account);
    type metadata accessor for RawBankConnectData.Account(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v150 = a3;
    v151 = v4;
    if (EnumCaseMultiPayload == 1)
    {
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      v8[40] = v9[40];
      *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
      v8[64] = v9[64];
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      v147 = (int *)type metadata accessor for RawBankConnectData.LiabilityAccount(0);
      v11 = v147[10];
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      if (v16(v13, 1, v14))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v26 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v26;
        *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
        v27 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v27;
        v28 = *(int *)(v14 + 20);
        v29 = &v12[v28];
        v30 = &v13[v28];
        v31 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        v12[*(int *)(v14 + 24)] = v13[*(int *)(v14 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v32 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v33 = &v12[v32];
      v34 = &v13[v32];
      if (v16(v34, 1, v14))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v48 = *((_OWORD *)v34 + 3);
        *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
        *((_OWORD *)v33 + 3) = v48;
        *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
        v49 = *((_OWORD *)v34 + 1);
        *(_OWORD *)v33 = *(_OWORD *)v34;
        *((_OWORD *)v33 + 1) = v49;
        v50 = *(int *)(v14 + 20);
        v51 = &v33[v50];
        v52 = &v34[v50];
        v53 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        v33[*(int *)(v14 + 24)] = v34[*(int *)(v14 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v33, 0, 1, v14);
      }
      v54 = v147[11];
      v55 = &v8[v54];
      v56 = &v9[v54];
      v57 = *((_OWORD *)v56 + 3);
      *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
      *((_OWORD *)v55 + 3) = v57;
      *((_OWORD *)v55 + 4) = *((_OWORD *)v56 + 4);
      v58 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v58;
      v59 = v147[12];
      v60 = &v8[v59];
      v61 = &v9[v59];
      v62 = *((_OWORD *)v61 + 3);
      *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
      *((_OWORD *)v60 + 3) = v62;
      *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
      v63 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v63;
      v64 = v147[13];
      v65 = &v8[v64];
      v66 = &v9[v64];
      v67 = sub_23361D634();
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v4 = v151;
      v84 = v147[14];
      v85 = &v8[v84];
      v86 = &v9[v84];
      v87 = *((_OWORD *)v86 + 3);
      *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
      *((_OWORD *)v85 + 3) = v87;
      *((_OWORD *)v85 + 4) = *((_OWORD *)v86 + 4);
      v88 = *((_OWORD *)v86 + 1);
      *(_OWORD *)v85 = *(_OWORD *)v86;
      *((_OWORD *)v85 + 1) = v88;
      v89 = v147[15];
      v90 = &v8[v89];
      v91 = &v9[v89];
      v92 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v93 = *((_QWORD *)v92 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v93 + 48))(v91, 1, v92))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        v141 = v93;
        v98 = sub_23361D340();
        v99 = *(_QWORD *)(v98 - 8);
        v144 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
        v143 = v99;
        if (v144(v91, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v90, v91, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v90, 0, 1, v98);
        }
        v105 = v92[5];
        v146 = v90;
        v106 = &v90[v105];
        v107 = &v91[v105];
        if (v144(&v91[v105], 1, v98))
        {
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v106, v107, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v106, 0, 1, v98);
        }
        v113 = v92[6];
        v114 = &v146[v113];
        v115 = &v91[v113];
        if (v144(&v91[v113], 1, v98))
        {
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v114, v115, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v114, 0, 1, v98);
        }
        v121 = v92[7];
        v122 = &v146[v121];
        v123 = &v91[v121];
        if (v144(&v91[v121], 1, v98))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v122, v123, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v122, 0, 1, v98);
        }
        v129 = v92[8];
        v130 = &v146[v129];
        v131 = &v91[v129];
        if (v144(&v91[v129], 1, v98))
        {
          v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v130, v131, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v130, 0, 1, v98);
        }
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v141 + 56))(v146, 0, 1, v92);
      }
      v133 = v147 + 16;
    }
    else
    {
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      v8[40] = v9[40];
      *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
      v8[64] = v9[64];
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      v18 = type metadata accessor for RawBankConnectData.AssetAccount(0);
      v19 = *(int *)(v18 + 40);
      v20 = &v8[v19];
      v21 = &v9[v19];
      v22 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v21, 1, v22))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v36 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v36;
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        v37 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v37;
        v38 = *(int *)(v22 + 20);
        v148 = v23;
        v39 = v18;
        v40 = &v20[v38];
        v41 = &v21[v38];
        v42 = sub_23361D634();
        v43 = v40;
        v18 = v39;
        v23 = v148;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v43, v41, v42);
        v20[*(int *)(v22 + 24)] = v21[*(int *)(v22 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v20, 0, 1, v22);
      }
      v44 = *(int *)(type metadata accessor for RawBankConnectData.AccountBalances(0) + 20);
      v45 = &v20[v44];
      v46 = &v21[v44];
      if (v24(v46, 1, v22))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v70 = *((_OWORD *)v46 + 3);
        *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
        *((_OWORD *)v45 + 3) = v70;
        *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
        v71 = *((_OWORD *)v46 + 1);
        *(_OWORD *)v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v71;
        v72 = *(int *)(v22 + 20);
        v73 = v18;
        v74 = &v45[v72];
        v75 = &v46[v72];
        v76 = sub_23361D634();
        v77 = v74;
        v18 = v73;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v77, v75, v76);
        v45[*(int *)(v22 + 24)] = v46[*(int *)(v22 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v45, 0, 1, v22);
      }
      v4 = v151;
      v78 = *(int *)(v18 + 44);
      v79 = &v8[v78];
      v80 = &v9[v78];
      v81 = (int *)type metadata accessor for RawBankConnectData.Actions();
      v82 = *((_QWORD *)v81 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v82 + 48))(v80, 1, v81))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v140 = v82;
        v95 = sub_23361D340();
        v96 = *(_QWORD *)(v95 - 8);
        v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
        v145 = v96;
        v142 = v18;
        if (v149(v80, 1, v95))
        {
          v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v79, v80, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v79, 0, 1, v95);
        }
        v101 = v81[5];
        v102 = &v79[v101];
        v103 = &v80[v101];
        if (v149(&v80[v101], 1, v95))
        {
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v102, v103, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v102, 0, 1, v95);
        }
        v109 = v81[6];
        v110 = &v79[v109];
        v111 = &v80[v109];
        if (v149(&v80[v109], 1, v95))
        {
          v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v110, v111, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v110, 0, 1, v95);
        }
        v117 = v81[7];
        v118 = &v79[v117];
        v119 = &v80[v117];
        if (v149(&v80[v117], 1, v95))
        {
          v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v118, v119, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v118, 0, 1, v95);
        }
        v125 = v81[8];
        v126 = &v79[v125];
        v127 = &v80[v125];
        if (v149(&v80[v125], 1, v95))
        {
          v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v126, v127, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v126, 0, 1, v95);
        }
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v140 + 56))(v79, 0, 1, v81);
        v18 = v142;
      }
      v133 = (int *)(v18 + 48);
    }
    a3 = v150;
    v8[*v133] = v9[*v133];
    swift_storeEnumTagMultiPayload();
  }
  v134 = *(int *)(a3 + 24);
  v135 = (_QWORD *)((char *)a1 + v134);
  v136 = (_QWORD *)((char *)v4 + v134);
  v138 = *v136;
  v137 = v136[1];
  *v135 = v138;
  v135[1] = v137;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14OfflineLabItemO7AccountVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333D9D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for RawBankConnectData.Account(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s14OfflineLabItemO7AccountVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333D9D88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for RawBankConnectData.Account(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2333D9DFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RawBankConnectData.Account(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14OfflineLabItemO18MapsClassificationVwxx(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14OfflineLabItemO18MapsClassificationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    v6 = *(_QWORD *)(a2 + 40);
    if (v6)
      goto LABEL_3;
LABEL_5:
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = *(_QWORD *)(a2 + 40);
  if (!v6)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14OfflineLabItemO18MapsClassificationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2332DD550((uint64_t)a1);
      v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  v7 = a1 + 4;
  v8 = a2 + 4;
  v9 = a2[5];
  if (a1[5])
  {
    if (v9)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2332DD550((uint64_t)(a1 + 4));
      v10 = *((_OWORD *)a2 + 3);
      *v7 = *v8;
      *((_OWORD *)a1 + 3) = v10;
    }
  }
  else if (v9)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *((_OWORD *)a2 + 3);
    *v7 = *v8;
    *((_OWORD *)a1 + 3) = v11;
  }
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14OfflineLabItemO18MapsClassificationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2332DD550(a1);
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_6:
  if (!*(_QWORD *)(a1 + 40))
  {
LABEL_10:
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 40);
  if (!v7)
  {
    sub_2332DD550(a1 + 32);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14OfflineLabItemO18MapsClassificationVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s14OfflineLabItemO18MapsClassificationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.OfflineLabItem.MapsClassification()
{
  return &type metadata for RawBankConnectData.OfflineLabItem.MapsClassification;
}

ValueMetadata *_s14OfflineLabItemO25MapsClassificationDetailsVMa()
{
  return &_s14OfflineLabItemO25MapsClassificationDetailsVN;
}

ValueMetadata *_s14OfflineLabItemO18MapsClassificationV10CodingKeysOMa()
{
  return &_s14OfflineLabItemO18MapsClassificationV10CodingKeysON;
}

uint64_t _s14OfflineLabItemO7AccountV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2333DA2D8 + 4 * byte_233643723[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2333DA30C + 4 * byte_23364371E[v4]))();
}

uint64_t sub_2333DA30C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DA314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333DA31CLL);
  return result;
}

uint64_t sub_2333DA328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333DA330);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2333DA334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DA33C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14OfflineLabItemO7AccountV10CodingKeysOMa()
{
  return &_s14OfflineLabItemO7AccountV10CodingKeysON;
}

uint64_t _s14OfflineLabItemO11TransactionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2333DA3A4 + 4 * byte_23364372D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2333DA3D8 + 4 * byte_233643728[v4]))();
}

uint64_t sub_2333DA3D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DA3E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333DA3E8);
  return result;
}

uint64_t sub_2333DA3F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333DA3FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2333DA400(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DA408(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14OfflineLabItemO11TransactionV10CodingKeysOMa()
{
  return &_s14OfflineLabItemO11TransactionV10CodingKeysON;
}

uint64_t _s24OfflineLabPermissionBodyV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333DA464 + 4 * byte_233643732[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333DA484 + 4 * byte_233643737[v4]))();
}

_BYTE *sub_2333DA464(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333DA484(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333DA48C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333DA494(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333DA49C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333DA4A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s24OfflineLabPermissionBodyV10CodingKeysOMa()
{
  return &_s24OfflineLabPermissionBodyV10CodingKeysON;
}

unint64_t sub_2333DA4C4()
{
  unint64_t result;

  result = qword_25604D450;
  if (!qword_25604D450)
  {
    result = MEMORY[0x234934494](&unk_233643A10, &_s24OfflineLabPermissionBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D450);
  }
  return result;
}

unint64_t sub_2333DA50C()
{
  unint64_t result;

  result = qword_25604D458;
  if (!qword_25604D458)
  {
    result = MEMORY[0x234934494](&unk_233643AC8, &_s14OfflineLabItemO11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D458);
  }
  return result;
}

unint64_t sub_2333DA554()
{
  unint64_t result;

  result = qword_25604D460;
  if (!qword_25604D460)
  {
    result = MEMORY[0x234934494](&unk_233643B80, &_s14OfflineLabItemO7AccountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D460);
  }
  return result;
}

unint64_t sub_2333DA59C()
{
  unint64_t result;

  result = qword_25604D468;
  if (!qword_25604D468)
  {
    result = MEMORY[0x234934494](&unk_233643C38, &_s14OfflineLabItemO18MapsClassificationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D468);
  }
  return result;
}

unint64_t sub_2333DA5E4()
{
  unint64_t result;

  result = qword_25604D470;
  if (!qword_25604D470)
  {
    result = MEMORY[0x234934494](&unk_233643BA8, &_s14OfflineLabItemO18MapsClassificationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D470);
  }
  return result;
}

unint64_t sub_2333DA62C()
{
  unint64_t result;

  result = qword_25604D478;
  if (!qword_25604D478)
  {
    result = MEMORY[0x234934494](&unk_233643BD0, &_s14OfflineLabItemO18MapsClassificationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D478);
  }
  return result;
}

unint64_t sub_2333DA674()
{
  unint64_t result;

  result = qword_25604D480;
  if (!qword_25604D480)
  {
    result = MEMORY[0x234934494](&unk_233643AF0, &_s14OfflineLabItemO7AccountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D480);
  }
  return result;
}

unint64_t sub_2333DA6BC()
{
  unint64_t result;

  result = qword_25604D488;
  if (!qword_25604D488)
  {
    result = MEMORY[0x234934494](&unk_233643B18, &_s14OfflineLabItemO7AccountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D488);
  }
  return result;
}

unint64_t sub_2333DA704()
{
  unint64_t result;

  result = qword_25604D490;
  if (!qword_25604D490)
  {
    result = MEMORY[0x234934494](&unk_233643A38, &_s14OfflineLabItemO11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D490);
  }
  return result;
}

unint64_t sub_2333DA74C()
{
  unint64_t result;

  result = qword_25604D498;
  if (!qword_25604D498)
  {
    result = MEMORY[0x234934494](&unk_233643A60, &_s14OfflineLabItemO11TransactionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D498);
  }
  return result;
}

unint64_t sub_2333DA794()
{
  unint64_t result;

  result = qword_25604D4A0;
  if (!qword_25604D4A0)
  {
    result = MEMORY[0x234934494](&unk_233643948, &_s24OfflineLabPermissionBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4A0);
  }
  return result;
}

unint64_t sub_2333DA7DC()
{
  unint64_t result;

  result = qword_25604D4A8;
  if (!qword_25604D4A8)
  {
    result = MEMORY[0x234934494](&unk_233643970, &_s24OfflineLabPermissionBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4A8);
  }
  return result;
}

uint64_t sub_2333DA820(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746361736E617274 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233675A40 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xED000064496E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2333DA9FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7475746974736E69 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2333DAB64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233673DC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2333DAC40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D4C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333DAED4();
  sub_23361F3EC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_23361F02C();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_23361F02C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2333DADEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E61686372656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E617262 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2333DAED4()
{
  unint64_t result;

  result = qword_25604D4B8;
  if (!qword_25604D4B8)
  {
    result = MEMORY[0x234934494](&unk_233643EA8, &_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4B8);
  }
  return result;
}

uint64_t _s14OfflineLabItemO18MapsClassificationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333DAF64 + 4 * byte_233643741[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333DAF98 + 4 * byte_23364373C[v4]))();
}

uint64_t sub_2333DAF98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DAFA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333DAFA8);
  return result;
}

uint64_t sub_2333DAFB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333DAFBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333DAFC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333DAFC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysOMa()
{
  return &_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysON;
}

unint64_t sub_2333DAFE8()
{
  unint64_t result;

  result = qword_25604D4C8;
  if (!qword_25604D4C8)
  {
    result = MEMORY[0x234934494](&unk_233643E80, &_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4C8);
  }
  return result;
}

unint64_t sub_2333DB030()
{
  unint64_t result;

  result = qword_25604D4D0;
  if (!qword_25604D4D0)
  {
    result = MEMORY[0x234934494](&unk_233643DF0, &_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4D0);
  }
  return result;
}

unint64_t sub_2333DB078()
{
  unint64_t result;

  result = qword_25604D4D8;
  if (!qword_25604D4D8)
  {
    result = MEMORY[0x234934494](&unk_233643E18, &_s14OfflineLabItemO25MapsClassificationDetailsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604D4D8);
  }
  return result;
}

uint64_t ContentPackageHashesEnumerator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

void ContentPackageHashesEnumerator.enumerateHashes(loadFilesInChunks:filesPredicate:body:)(int a1, uint64_t (*a2)(char *), uint64_t a3, void (*a4)(char *, id, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t inited;
  void *v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, id, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t (*v75)(char *);
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;

  v7 = v6;
  v73 = a5;
  v72 = a4;
  v76 = a3;
  v75 = a2;
  v81 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  MEMORY[0x24BDAC7A8](v8);
  v77 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_23361DD84();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v74 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23361CE00();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v84 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_23361D340();
  v89 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v83 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23361D1CC();
  v13 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v17 = v5 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042F58);
  v18 = swift_allocObject();
  v91 = xmmword_233627000;
  *(_OWORD *)(v18 + 16) = xmmword_233627000;
  v19 = (void *)*MEMORY[0x24BDBCC60];
  v20 = (void *)*MEMORY[0x24BDBCCA0];
  *(_QWORD *)(v18 + 32) = *MEMORY[0x24BDBCC60];
  *(_QWORD *)(v18 + 40) = v20;
  v21 = (void *)*MEMORY[0x24BDBCC48];
  *(_QWORD *)(v18 + 48) = *MEMORY[0x24BDBCC48];
  v90 = v19;
  v22 = v20;
  v23 = v21;
  v24 = (void *)sub_23361E744();

  swift_bridgeObjectRelease();
  if (!v24)
  {
    v47 = sub_23361D310();
    v49 = v48;
    sub_23319B4F0();
    swift_allocError();
    *v50 = 0xD000000000000015;
    v50[1] = 0x8000000233675A60;
    v50[2] = v47;
    v50[3] = v49;
    swift_willThrow();
    return;
  }
  v71 = v17;
  v82 = v13;
  v78 = v24;
  sub_23361E6E4();
  sub_23361D1C0();
  v25 = v15;
  if (!v95)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v15, v85);

    return;
  }
  v70 = 0;
  v86 = MEMORY[0x24BEE4AD8] + 8;
  v81 &= 1u;
  v26 = v83;
  v27 = v84;
  while (1)
  {
    sub_2331683D0(&v94, &v93);
    swift_dynamicCast();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v91;
    v29 = v90;
    *(_QWORD *)(inited + 32) = v90;
    *(_QWORD *)(inited + 40) = v22;
    *(_QWORD *)(inited + 48) = v23;
    v30 = v29;
    v31 = v22;
    v32 = v23;
    sub_2333EFA00(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    sub_23361D244();
    v33 = v26;
    if (v7)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v15, v85);

      swift_bridgeObjectRelease();
      v51 = *(void (**)(char *, uint64_t))(v89 + 8);
      v52 = v26;
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    v34 = sub_23361CDD0();
    if (v34 != 2 && (v34 & 1) == 0)
      break;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v27, v88);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v26, v96);
LABEL_8:
    sub_23361D1C0();
    if (!v95)
      goto LABEL_20;
  }
  v35 = sub_23361CDDC();
  if (v35 == 2 || (v35 & 1) != 0)
  {
    v53 = v26;
    v54 = sub_23361D310();
    v56 = v55;
    sub_23319B4F0();
    swift_allocError();
    *v57 = 0xD000000000000018;
    v57[1] = 0x8000000233675A80;
    v57[2] = v54;
    v57[3] = v56;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v27, v88);
    goto LABEL_29;
  }
  v36 = sub_23361CDF4();
  v37 = v82;
  if ((v38 & 1) != 0)
  {
    v53 = v26;
    v58 = sub_23361D310();
    v60 = v59;
    sub_23319B4F0();
    swift_allocError();
    *v61 = 0xD000000000000017;
    v61[1] = 0x8000000233675AA0;
    v61[2] = v58;
    v61[3] = v60;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v88);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v85);
    goto LABEL_30;
  }
  if (!__OFADD__(v70, v36))
  {
    v39 = v77;
    if (v70 + v36 > 5242880)
    {
      v53 = v26;
      v62 = objc_msgSend((id)objc_opt_self(), sel_stringFromByteCount_countStyle_, 5242880, 3);
      sub_23361E150();

      *(_QWORD *)&v93 = 0;
      *((_QWORD *)&v93 + 1) = 0xE000000000000000;
      sub_23361ED98();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v93 = 0xD00000000000001BLL;
      *((_QWORD *)&v93 + 1) = 0x8000000233675AE0;
      sub_23361E27C();
      swift_bridgeObjectRelease();
      v63 = v93;
      v64 = sub_23361D310();
      v66 = v65;
      sub_23319B4F0();
      swift_allocError();
      *(_OWORD *)v67 = v63;
    }
    else
    {
      v70 += v36;
      URL.filePath(relativeTo:resolveSymlinks:)(v71, 1, v77);
      v40 = v79;
      v41 = v80;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v39, 1, v80) != 1)
      {
        v42 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
        v43 = v74;
        v42(v74, v39, v41);
        if ((v75(v43) & 1) != 0)
        {
          v44 = sub_2333DBD70(v33, v81);
          v45 = v96;
          v72(v43, v44, v46);
          v7 = 0;
          swift_bridgeObjectRelease();
        }
        else
        {
          v45 = v96;
        }
        (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v80);
        v27 = v84;
        (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v88);
        v26 = v83;
        (*(void (**)(char *, uint64_t))(v89 + 8))(v83, v45);
        goto LABEL_8;
      }
      sub_233168608(v39, &qword_256044348);
      v53 = v33;
      v64 = sub_23361D310();
      v66 = v68;
      sub_23319B4F0();
      swift_allocError();
      *(_QWORD *)v67 = 0xD00000000000001FLL;
      *(_QWORD *)(v67 + 8) = 0x8000000233675AC0;
    }
    *(_QWORD *)(v67 + 16) = v64;
    *(_QWORD *)(v67 + 24) = v66;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v88);
LABEL_29:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v25, v85);
LABEL_30:
    v51 = *(void (**)(char *, uint64_t))(v89 + 8);
    v52 = v53;
LABEL_23:
    v51(v52, v96);
    return;
  }
  __break(1u);
}

uint64_t ContentPackageHashesEnumerator.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContentPackageHashesEnumerator.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

id ContentPackageHashesEnumerator.sha256Hash(forResourceAt:loadFileInChunks:)(void *a1, char a2)
{
  return sub_2333DBD70(a1, a2);
}

id sub_2333DBBC8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_23361D268();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_23361D340();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_23361D1B4();

    swift_willThrow();
    v9 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t ContentPackageHashesEnumerator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ContentPackageHashesEnumerator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id sub_2333DBD70(id a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  unint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  unsigned __int8 v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v35;
  _QWORD v36[2];
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23361DE5C();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361E030();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361E024();
  if ((a2 & 1) != 0)
  {
    v16 = sub_2333DCBA4();
    (*(void (**)(char *, id, uint64_t))(v8 + 16))(v10, a1, v7);
    a1 = (id)v16;
    v17 = sub_2333DBBC8((uint64_t)v10);
    if (!v2)
    {
      v18 = v17;
      v42 = v14;
      v37 = v12;
      v19 = (void *)MEMORY[0x234933C3C]();
      sub_23361E6FC();
      v38 = v18;
      v36[1] = v11;
      if (v20 >> 60 != 15)
        __asm { BR              X9 }
      objc_autoreleasePoolPop(v19);
      v45 = 0;
      v31 = objc_msgSend(v18, sel_closeAndReturnError_, &v45);
      a1 = v45;
      if ((v31 & 1) != 0)
      {
        v32 = v45;

        v33 = v37;
        v34 = v42;
        v24 = v40;
        v23 = v41;
        v25 = v39;
        sub_23361E018();
        v46 = v23;
        v47 = sub_233167C58(&qword_256044208, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62D8]);
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
        (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 16))(boxed_opaque_existential_0, v25, v23);
        __swift_project_boxed_opaque_existential_1(&v45, v46);
        sub_23361CDAC();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
        v27 = v43;
        v28 = v44;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
        sub_2331D32A4(v27, v28);
        a1 = v29;
        sub_23316BEA4(v27, v28);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v11);
        return a1;
      }
      v35 = v45;
      sub_23361D1B4();

      swift_willThrow();
      v12 = v37;
      v14 = v42;
    }
  }
  else
  {
    v21 = (void *)MEMORY[0x234933C3C](v15);
    sub_23361D358();
    if (!v2)
      __asm { BR              X10 }
    objc_autoreleasePoolPop(v21);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return a1;
}

uint64_t _s10FinanceKit30ContentPackageHashesEnumeratorC29fileShouldBePresentInManifestySb6System8FilePathVFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t);
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = sub_23361DD60();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v38 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D590);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v39 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v44 = (uint64_t)&v37 - v10;
  v11 = sub_23361DD84();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE60D8];
  v13 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v37 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v37 - v20;
  sub_23361DCF4();
  sub_233167C58(&qword_25604D5A0, v12, MEMORY[0x24BEE60F0]);
  LOBYTE(v12) = sub_23361E108();
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v21, v11);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v23(v19, a1, v11);
  if ((v12 & 1) != 0)
  {
    v22(v19, v11);
    v23(v16, a1, v11);
  }
  else
  {
    sub_23361DCF4();
    v24 = sub_23361E108();
    v22(v21, v11);
    v22(v19, v11);
    v23(v16, a1, v11);
    if ((v24 & 1) == 0)
    {
      v27 = v44;
      sub_23361DCE8();
      sub_23361DD30();
      v28 = v41;
      v29 = v43;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v9, 0, 1, v43);
      v30 = v42;
      v31 = v42 + *(int *)(v40 + 48);
      sub_2333DCB5C(v27, v42);
      sub_2333DCB5C((uint64_t)v9, v31);
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (v32(v30, 1, v29) == 1)
      {
        sub_233168608((uint64_t)v9, &qword_25604D598);
        sub_233168608(v27, &qword_25604D598);
        v22(v16, v11);
        if (v32(v31, 1, v29) == 1)
        {
          sub_233168608(v30, &qword_25604D598);
          goto LABEL_5;
        }
      }
      else
      {
        v33 = v28;
        v34 = v39;
        sub_2333DCB5C(v30, v39);
        if (v32(v31, 1, v29) != 1)
        {
          v35 = v38;
          (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v38, v31, v29);
          sub_233167C58(&qword_25604D5A8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE60A0], MEMORY[0x24BEE60B0]);
          LODWORD(v40) = sub_23361E108();
          v36 = *(void (**)(char *, uint64_t))(v33 + 8);
          v36(v35, v29);
          sub_233168608((uint64_t)v9, &qword_25604D598);
          sub_233168608(v44, &qword_25604D598);
          v22(v16, v11);
          v36((char *)v34, v29);
          sub_233168608(v30, &qword_25604D598);
          v25 = v40 ^ 1;
          return v25 & 1;
        }
        sub_233168608((uint64_t)v9, &qword_25604D598);
        sub_233168608(v44, &qword_25604D598);
        v22(v16, v11);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v29);
      }
      sub_233168608(v30, &qword_25604D590);
      v25 = 1;
      return v25 & 1;
    }
  }
  v22(v16, v11);
LABEL_5:
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_2333DCA98()
{
  return type metadata accessor for ContentPackageHashesEnumerator();
}

uint64_t type metadata accessor for ContentPackageHashesEnumerator()
{
  uint64_t result;

  result = qword_25604D508;
  if (!qword_25604D508)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333DCADC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContentPackageHashesEnumerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentPackageHashesEnumerator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2333DCB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2333DCBA4()
{
  unint64_t result;

  result = qword_25604D5B0;
  if (!qword_25604D5B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25604D5B0);
  }
  return result;
}

id ManagedTransaction.searchableItemAttributeSet(configuration:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint8_t *v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  id v68;
  void (*v69)(unint64_t, char *, uint64_t);
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  id v102;
  id v103;
  void *v104;
  void *v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  NSObject *v110;
  void *v111;
  uint64_t v112;
  os_log_type_t v113;
  _BOOL4 v114;
  uint8_t *v115;
  id v116;
  void *v117;
  id v118;
  void *v119;
  uint64_t v121;
  uint8_t *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  _OWORD v161[2];
  uint64_t v162[4];

  v2 = v1;
  v148 = a1;
  v3 = sub_23361D49C();
  v157 = *(_QWORD *)(v3 - 8);
  v158 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v156 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D484();
  v155 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v154 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D4C0();
  v152 = *(_QWORD *)(v7 - 8);
  v153 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v151 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v9);
  v149 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_23361D8A4();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v147 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_23361D868();
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v143 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_23361D73C();
  v135 = *(_QWORD *)(v137 - 8);
  MEMORY[0x24BDAC7A8](v137);
  v140 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v14);
  v138 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v16);
  v133 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v130);
  v131 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_23361D508();
  v134 = *(_QWORD *)(v150 - 8);
  v19 = MEMORY[0x24BDAC7A8](v150);
  v132 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v136 = (char *)&v121 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v139 = (char *)&v121 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v144 = (char *)&v121 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v26);
  v129 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_23361D634();
  v28 = *(_QWORD *)(v159 - 8);
  v29 = MEMORY[0x24BDAC7A8](v159);
  v127 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v128 = (char *)&v121 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v121 - v33;
  v35 = sub_23361D340();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v121 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (void *)sub_23361E12C();
  v40 = objc_msgSend(v2, sel_valueForKeyPath_, v39);

  if (v40)
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v161, 0, sizeof(v161));
  }
  sub_23319F578((uint64_t)v161, (uint64_t)v162);
  if (!v162[3])
  {
    sub_233168608((uint64_t)v162, &qword_254245020);
    return 0;
  }
  type metadata accessor for ManagedInternalTransaction();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v124 = v5;
  v41 = v160;
  v42 = objc_allocWithZone(MEMORY[0x24BDC2480]);
  v43 = (void *)sub_23361E12C();
  v44 = objc_msgSend(v42, sel_initWithItemContentType_, v43);

  v45 = objc_msgSend(v2, sel_objectID);
  v46 = objc_msgSend(v45, sel_URIRepresentation);

  sub_23361D2D4();
  sub_23361D238();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  v47 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setIdentifier_, v47);

  v48 = v2;
  sub_23354B3AC();

  v49 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setDisplayName_, v49);

  v125 = v41;
  if (objc_msgSend(v41, sel_sourceValue) != 1)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v50 = sub_23361DB80();
    __swift_project_value_buffer(v50, (uint64_t)qword_2560495B0);
    v51 = v48;
    v52 = sub_23361DB68();
    v53 = sub_23361E75C();
    v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      LODWORD(v126) = v54;
      v55 = (uint8_t *)swift_slowAlloc();
      v123 = swift_slowAlloc();
      v162[0] = v123;
      v122 = v55;
      *(_DWORD *)v55 = 136315138;
      v56 = v48;
      v57 = objc_msgSend(v51, sel_debugDescription, v55 + 4);
      v58 = sub_23361E150();
      v60 = v59;

      v48 = v56;
      *(_QWORD *)&v161[0] = sub_233164DCC(v58, v60, v162);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      v61 = v122;
      _os_log_impl(&dword_233151000, v52, (os_log_type_t)v126, "Transaction %s is not bank connect, hiding from Spotlight", v122, 0xCu);
      v62 = v123;
      swift_arrayDestroy();
      MEMORY[0x234934590](v62, -1, -1);
      MEMORY[0x234934590](v61, -1, -1);

    }
    else
    {

    }
    sub_233271454();
    v63 = (void *)sub_23361E9F0();
    objc_msgSend(v44, sel_setDisableSearchInSpotlight_, v63);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256047530);
  v64 = *(_QWORD *)(v28 + 72);
  v65 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_233623D60;
  v67 = v48;
  v68 = objc_msgSend(v48, sel_transactionDate);
  sub_23361D5EC();

  v69 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 32);
  v70 = v159;
  v69(v66 + v65, v34, v159);
  v126 = v67;
  v71 = objc_msgSend(v67, sel_postedDate);
  if (!v71)
  {
    v73 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v129, 1, 1, v70);
    v74 = v70;
    goto LABEL_21;
  }
  v72 = v71;
  sub_23361D5EC();

  v73 = (uint64_t)v129;
  v69((unint64_t)v129, v34, v70);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v73, 0, 1, v70);
  v74 = v70;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v73, 1, v70) == 1)
  {
LABEL_21:
    sub_233168608(v73, (uint64_t *)&unk_254247DA0);
    goto LABEL_22;
  }
  v75 = v73;
  v76 = v128;
  v69((unint64_t)v128, (char *)v75, v70);
  v77 = v127;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v127, v76, v74);
  v79 = *(_QWORD *)(v66 + 16);
  v78 = *(_QWORD *)(v66 + 24);
  if (v79 >= v78 >> 1)
    v66 = sub_2334A4964(v78 > 1, v79 + 1, 1, v66);
  *(_QWORD *)(v66 + 16) = v79 + 1;
  v74 = v159;
  v69(v66 + v65 + v79 * v64, v77, v159);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v128, v74);
LABEL_22:
  v80 = v74;
  v81 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setImportantDates_, v81);

  v82 = objc_msgSend(v126, sel_transactionDate);
  sub_23361D5EC();

  v83 = (void *)sub_23361D5B0();
  v129 = *(char **)(v28 + 8);
  ((void (*)(char *, uint64_t))v129)(v34, v80);
  objc_msgSend(v44, sel_setAddedDate_, v83);

  v84 = ManagedInternalTransaction.displayLocation.getter();
  if (v84)
  {
    v85 = v84;
    objc_msgSend(v84, sel_coordinate);
    v86 = (void *)sub_23361E594();
    objc_msgSend(v44, sel_setLatitude_, v86);

    objc_msgSend(v85, sel_coordinate);
    v87 = (void *)sub_23361E594();
    objc_msgSend(v44, sel_setLongitude_, v87);

    objc_msgSend(v85, sel_altitude);
    v88 = (void *)sub_23361E594();
    objc_msgSend(v44, sel_setAltitude_, v88);

  }
  v89 = v131;
  sub_23332DC20(v148, v131);
  v90 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v133, 1, 1, v90);
  v91 = sub_23361D424();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v138, 1, 1, v91);
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v140, v89, v137);
  v92 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v143, v89 + *(int *)(v130 + 20), v142);
  (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v147, v89 + *(int *)(v92 + 24), v146);
  sub_23361D1FC();
  v93 = v132;
  sub_23361D454();
  sub_2333DDC40(v89);
  v94 = v151;
  sub_23361D4A8();
  v95 = v136;
  sub_23361D46C();
  (*(void (**)(char *, uint64_t))(v152 + 8))(v94, v153);
  v96 = *(void (**)(char *, uint64_t))(v134 + 8);
  v97 = v150;
  v96(v93, v150);
  v98 = v154;
  sub_23361D478();
  v99 = v139;
  sub_23361D448();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v98, v124);
  v96(v95, v97);
  v100 = v156;
  sub_23361D490();
  v101 = v144;
  sub_23361D460();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v100, v158);
  v96(v99, v97);
  v102 = v126;
  v103 = objc_msgSend(v126, sel_transactionDate);
  sub_23361D5EC();

  sub_23361D4F0();
  ((void (*)(char *, uint64_t))v129)(v34, v159);
  v96(v101, v97);
  v104 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setContentDescription_, v104);

  if (qword_256041CF0 != -1)
    swift_once();
  v105 = (void *)qword_2560CD3C8;
  if (qword_256041CF8 == -1)
  {
    if (!qword_2560CD3C8)
    {
LABEL_31:
      if (qword_256041CA0 != -1)
        swift_once();
      v112 = sub_23361DB80();
      __swift_project_value_buffer(v112, (uint64_t)qword_2560495B0);
      v110 = sub_23361DB68();
      v113 = sub_23361E768();
      v114 = os_log_type_enabled(v110, v113);
      v111 = v125;
      if (v114)
      {
        v115 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v115 = 0;
        _os_log_impl(&dword_233151000, v110, v113, "Failed to create amount and currencyCode CSCustomAttributeKeys", v115, 2u);
        MEMORY[0x234934590](v115, -1, -1);
      }
      goto LABEL_35;
    }
  }
  else
  {
    swift_once();
    if (!v105)
      goto LABEL_31;
  }
  v106 = (void *)qword_2560CD3D0;
  if (!qword_2560CD3D0)
    goto LABEL_31;
  v107 = v105;
  v108 = v106;
  v109 = objc_msgSend(v102, sel_amount);
  objc_msgSend(v44, sel_setValue_forCustomKey_, v109, v107);

  v110 = objc_msgSend(v102, sel_currency);
  objc_msgSend(v44, sel_setValue_forCustomKey_, v110, v108);

  v111 = v125;
LABEL_35:

  v116 = objc_msgSend(v102, sel_managedObjectContext);
  if (v116)
  {
    v117 = v116;
    objc_msgSend(v116, sel_refreshObject_mergeChanges_, v102, 0);

  }
  v118 = objc_msgSend(v102, sel_managedObjectContext);
  if (v118)
  {
    v119 = v118;
    objc_msgSend(v118, sel_refreshObject_mergeChanges_, v111, 0);

  }
  return v44;
}

uint64_t sub_2333DDC40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatterConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2333DDC80(uint64_t a1)
{
  sub_2333DDCC8(a1, 0xD00000000000001ALL, 0x8000000233675BB0, &qword_2560CD3C8);
}

void sub_2333DDCA4(uint64_t a1)
{
  sub_2333DDCC8(a1, 0xD000000000000020, 0x8000000233675B80, &qword_2560CD3D0);
}

void sub_2333DDCC8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;
  id v7;

  v5 = objc_allocWithZone(MEMORY[0x24BDC23C0]);
  v6 = (void *)sub_23361E12C();
  v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 1, 1, 0, 0);

  *a4 = v7;
}

uint64_t SelectAccountsUIXPCService.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_allocObject();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5C0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2333DDF7C((uint64_t)v2, v5 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v5 + 16));
  sub_2333DDFC0((uint64_t)v2);
  *(_QWORD *)(v3 + 16) = v5;
  return v3;
}

uint64_t SelectAccountsUIXPCService.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5C0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2333DDF7C((uint64_t)v3, v5 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v5 + 16));
  sub_2333DDFC0((uint64_t)v3);
  *(_QWORD *)(v0 + 16) = v5;
  return v0;
}

uint64_t type metadata accessor for SelectAccountsUIXPCService.ContinuationState()
{
  uint64_t result;

  result = qword_25604D708;
  if (!qword_25604D708)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333DDF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333DDFC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void SelectAccountsUIXPCService.listenForResponse(continuation:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_2333DE074(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2333DE074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2333DDFC0(a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, v4);
}

uint64_t sub_2333DE0F0(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  _QWORD v17[2];

  v8 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333DEF74(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11))
  {
    sub_2333DDFC0((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if ((a4 & 1) != 0)
    {
      v17[0] = a2;
      v15 = a2;
      sub_23361E480();
    }
    else
    {
      v17[0] = a2;
      v17[1] = a3;
      sub_23316BFE0((uint64_t)a2);
      sub_23361E48C();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, 2, 2, v11);
}

uint64_t SelectAccountsUIXPCService.updated(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v2 = *(void **)(a1 + OBJC_IVAR___XPCAccountSelectionResult_value);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___XPCAccountSelectionResult_value + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  sub_23316BFE0((uint64_t)v2);
  os_unfair_lock_lock(v6);
  sub_2333DE0F0(v5, v2, v3, 0);
  os_unfair_lock_unlock(v6);
  return sub_23316C050((uint64_t)v2);
}

Swift::Void __swiftcall SelectAccountsUIXPCService.failed(with:)(NSError *with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  NSError *v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  v6 = with;
  os_unfair_lock_lock(v5);
  sub_2333DE0F0(v4, with, 0, 1);
  os_unfair_lock_unlock(v5);

}

void _s10FinanceKit26SelectAccountsUIXPCServiceC9cancelledyyF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_2333DE0F0(v2, 0, 0, 0);
  os_unfair_lock_unlock(v3);
}

void SelectAccountsUIXPCService.invalidated(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  id v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  v6 = a1;
  os_unfair_lock_lock(v5);
  sub_2333DE0F0(v4, a1, 0, 1);
  os_unfair_lock_unlock(v5);

}

uint64_t SelectAccountsUIXPCService.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t SelectAccountsUIXPCService.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2333DE710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_2333DEF58(v2);
  os_unfair_lock_unlock(v3);
}

void sub_2333DE790(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  id v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  v6 = a1;
  os_unfair_lock_lock(v5);
  sub_2333DEF58(v4);
  os_unfair_lock_unlock(v5);

}

void sub_2333DE824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_2333DEF40(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t type metadata accessor for SelectAccountsUIXPCService()
{
  return objc_opt_self();
}

uint64_t method lookup function for SelectAccountsUIXPCService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SelectAccountsUIXPCService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t *sub_2333DE8D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_2333DE9A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_2333DEA0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_2333DEAB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_2333DEBA8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_2333DEC50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_2333DED44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333DED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_2333DEDA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333DEDAC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2333DEE04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_2333DEE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D5B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

void sub_2333DEE84()
{
  unint64_t v0;

  sub_2333DEED8();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_2333DEED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25604D718)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246B30);
    v0 = sub_23361E498();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25604D718);
  }
}

uint64_t sub_2333DEF40(uint64_t a1)
{
  uint64_t v1;

  return sub_2333DE074(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2333DEF58(uint64_t a1)
{
  uint64_t v1;

  return sub_2333DE0F0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_2333DEF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelectAccountsUIXPCService.ContinuationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RelativeDayFormatter.format(_:now:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = sub_2333DF100(v0, (void (*)(void))sub_2333DF0F8);
  v2 = (void *)sub_23361D5B0();
  v3 = objc_msgSend(v1, sel_stringFromDate_, v2);

  v4 = sub_23361E150();
  return v4;
}

void sub_2333DF050(void *a1)
{
  void *v2;
  id v3;

  objc_msgSend(a1, sel_setDateStyle_, 1);
  objc_msgSend(a1, sel_setDoesRelativeDateFormatting_, 1);
  type metadata accessor for FormatterConfiguration();
  v2 = (void *)sub_23361D7CC();
  objc_msgSend(a1, sel_setCalendar_, v2);

  v3 = (id)sub_23361D6C4();
  objc_msgSend(a1, sel_setLocale_, v3);

}

void sub_2333DF0F8(void *a1)
{
  sub_2333DF050(a1);
}

id sub_2333DF100(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v4 = type metadata accessor for RelativeDayFormatter();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333DFBB4(a1, (uint64_t)v6);
  v7 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604D810);
  v8 = objc_allocWithZone(v7);
  sub_2333DFBB4((uint64_t)v6, (uint64_t)v8 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x60));
  v13.receiver = v8;
  v13.super_class = v7;
  v9 = objc_msgSendSuper2(&v13, sel_init);
  sub_2333DFB78((uint64_t)v6);
  if (qword_256041D00 != -1)
    swift_once();
  v10 = (void *)qword_25604D720;
  v11 = objc_msgSend((id)qword_25604D720, sel_objectForKey_, v9);
  if (!v11)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    a2();
    objc_msgSend(v10, sel_setObject_forKey_, v11, v9);
  }

  return v11;
}

uint64_t RelativeDayFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static RelativeDayFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_2333DF3CC()
{
  sub_2333DFAF8();
  return sub_23361F428();
}

uint64_t sub_2333DF3F4()
{
  sub_2333DFAF8();
  return sub_23361F434();
}

uint64_t RelativeDayFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D728);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333DFAF8();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RelativeDayFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t RelativeDayFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D738);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RelativeDayFormatter();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333DFAF8();
  sub_23361F3EC();
  if (!v2)
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_2331C7090(v15, (uint64_t)v11);
    sub_2333DFBB4((uint64_t)v11, v13);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2333DFB78((uint64_t)v11);
}

void sub_2333DF814(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_2333DF100(v1, (void (*)(void))sub_2333DFEEC);
  v4 = (void *)sub_23361D5B0();
  v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  v6 = sub_23361E150();
  v8 = v7;

  *a1 = v6;
  a1[1] = v8;
}

uint64_t sub_2333DF8AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];
  uint64_t v15;

  v3 = sub_23361D634();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23361D5F8();
  v15 = v1;
  v7 = sub_2333DF100(v1, (void (*)(void))sub_2333DFEEC);
  v8 = (void *)sub_23361D5B0();
  v9 = objc_msgSend(v7, sel_stringFromDate_, v8);

  v10 = sub_23361E150();
  v12 = v11;

  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t sub_2333DF9A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RelativeDayFormatter.init(from:)(a1, a2);
}

uint64_t sub_2333DF9B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D728);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333DFAF8();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_2333DFAC8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
  qword_25604D720 = (uint64_t)result;
  return result;
}

unint64_t sub_2333DFAF8()
{
  unint64_t result;

  result = qword_25604D730;
  if (!qword_25604D730)
  {
    result = MEMORY[0x234934494](&unk_2336441C8, &type metadata for RelativeDayFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D730);
  }
  return result;
}

uint64_t type metadata accessor for RelativeDayFormatter()
{
  uint64_t result;

  result = qword_25604D7C0;
  if (!qword_25604D7C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333DFB78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RelativeDayFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2333DFBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelativeDayFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333DFBF8(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604D740, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDayFormatter, (uint64_t)&protocol conformance descriptor for RelativeDayFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2333DFC34()
{
  return sub_233167C58(&qword_25604D748, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDayFormatter, (uint64_t)&protocol conformance descriptor for RelativeDayFormatter);
}

uint64_t sub_2333DFC60()
{
  return sub_233167C58(&qword_25604D750, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDayFormatter, (uint64_t)&protocol conformance descriptor for RelativeDayFormatter);
}

uint64_t sub_2333DFC8C()
{
  return sub_233167C58(&qword_25604D758, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDayFormatter, (uint64_t)&protocol conformance descriptor for RelativeDayFormatter);
}

uint64_t sub_2333DFCB8()
{
  return sub_233167C58(&qword_25604D760, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDayFormatter, (uint64_t)&protocol conformance descriptor for RelativeDayFormatter);
}

uint64_t getEnumTagSinglePayload for RelativeDayFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333DFCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RelativeDayFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333DFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RelativeDayFormatter.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333DFDB8 + 4 * asc_233643FB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333DFDD8 + 4 * byte_233643FB5[v4]))();
}

_BYTE *sub_2333DFDB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333DFDD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333DFDE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333DFDE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333DFDF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333DFDF8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RelativeDayFormatter.CodingKeys()
{
  return &type metadata for RelativeDayFormatter.CodingKeys;
}

unint64_t sub_2333DFE18()
{
  unint64_t result;

  result = qword_25604D7F8;
  if (!qword_25604D7F8)
  {
    result = MEMORY[0x234934494](&unk_2336441A0, &type metadata for RelativeDayFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D7F8);
  }
  return result;
}

unint64_t sub_2333DFE60()
{
  unint64_t result;

  result = qword_25604D800;
  if (!qword_25604D800)
  {
    result = MEMORY[0x234934494](&unk_233644110, &type metadata for RelativeDayFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D800);
  }
  return result;
}

unint64_t sub_2333DFEA8()
{
  unint64_t result;

  result = qword_25604D808;
  if (!qword_25604D808)
  {
    result = MEMORY[0x234934494](&unk_233644138, &type metadata for RelativeDayFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D808);
  }
  return result;
}

void ContentPackageReader.imageUrl(named:preferredScale:localization:preferUnlocalized:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_23319A344(v3, v2, (uint64_t (*)(_QWORD))sub_23328C1F0);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_2333DFF80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v27 = a4;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23361DD6C();
  v18 = sub_23361DD60();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  v29 = a7;
  v28 = a8;
  if (v20 == 1)
  {
    sub_233168608((uint64_t)v17, &qword_25604D598);
    v21 = v27;
LABEL_4:
    swift_bridgeObjectRelease();
    v24 = (void *)0xE300000000000000;
    v22 = 6778480;
    goto LABEL_5;
  }
  v22 = sub_23361DD54();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v21 = v27;
  if (!v24)
    goto LABEL_4;
LABEL_5:
  v25 = sub_2333E09C8(a1, a2, v21);
  ContentPackageReader.fileUrl(possibleNames:ext:bundle:localization:preferUnlocalized:)(v25, v22, v24, a3, a5, a6, v29 & 1, v28);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2333E00FC(void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>)
{
  id v15;
  uint64_t v16;

  if (a1)
  {
    v15 = a1;
    sub_2333DFF80(a2, a3, v15, a4, a5, a6, a7 & 1, a8);

  }
  else
  {
    v16 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a8, 1, 1, v16);
  }
}

void ContentPackageReader.imageUrls(named:preferredScale:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_23319A344(v3, v2, (uint64_t (*)(_QWORD))sub_2333E09AC);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_2333E0248@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t result;
  void (*v78)(char *, char *, uint64_t);
  _QWORD v79[2];
  _QWORD *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  _QWORD *v98;

  v92 = a2;
  v93 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  MEMORY[0x24BDAC7A8](v10);
  v91 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v83 = (char *)v79 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v89 = (uint64_t)v79 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v79 - v19;
  v21 = sub_23361D340();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v82 = (char *)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v88 = (char *)v79 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v79 - v27;
  if (!a1)
  {
    *a6 = sub_23315FA70(MEMORY[0x24BEE4AF8]);
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v29 = a1;
  v97 = a3;
  sub_2333DFF80(a3, a4, v29, v93, 0, 0, 1, (uint64_t)v20);
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v30 = v21;
  if (v87(v20, 1, v21) != 1)
  {

    swift_bridgeObjectRelease();
    v78 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v78(v28, v20, v21);
    v78((char *)a6, v28, v21);
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v90 = v22;
  v80 = a6;
  sub_233168608((uint64_t)v20, &qword_254248700);
  v31 = objc_msgSend(v29, sel_localizations);
  v32 = sub_23361E3F0();

  v33 = *(_QWORD *)(v32 + 16);
  v79[1] = v32;
  if (!v33)
  {
    v84 = MEMORY[0x24BEE4B00];
LABEL_34:

    swift_bridgeObjectRelease();
    *v80 = v84;
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v84 = MEMORY[0x24BEE4B00];
  v34 = (uint64_t *)(v32 + 40);
  v35 = (uint64_t)v91;
  v94 = a4;
  v95 = v30;
  v96 = v29;
  while (1)
  {
    v36 = *(v34 - 1);
    v37 = *v34;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_23361DD6C();
    v38 = sub_23361DD60();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38) == 1)
    {
      sub_233168608(v35, &qword_25604D598);
    }
    else
    {
      v40 = sub_23361DD54();
      v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v38);
      if (v42)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v42 = (void *)0xE300000000000000;
    v40 = 6778480;
LABEL_11:
    v43 = sub_2333E09C8(v97, v94, v93);
    v44 = v89;
    ContentPackageReader.fileUrl(possibleNames:ext:bundle:localization:preferUnlocalized:)(v43, v40, v42, v96, v36, v37, 0, v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = v95;
    v46 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v87;
    if (v87((char *)v44, 1, v95) != 1)
      break;
    swift_bridgeObjectRelease();
    sub_233168608(v44, &qword_254248700);
    v29 = v96;
    v35 = (uint64_t)v91;
LABEL_6:
    v34 += 2;
    if (!--v33)
      goto LABEL_34;
  }
  v85 = v33;
  v86 = v36;
  v47 = v90;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 32);
  v49 = v88;
  v48(v88, v44, v45);
  v50 = (uint64_t)v83;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v83, v49, v45);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v51(v50, 0, 1, v45);
  if (v46(v50, 1, v45) == 1)
  {
    sub_233168608(v50, &qword_254248700);
    v52 = v84;
    swift_bridgeObjectRetain();
    v53 = sub_2331E3D18(v86, v37);
    v55 = v54;
    swift_bridgeObjectRelease();
    if ((v55 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v98 = (_QWORD *)v52;
      v57 = (uint64_t)v81;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23327DD3C();
        v52 = (uint64_t)v98;
      }
      swift_bridgeObjectRelease();
      v58 = v95;
      v48((char *)v57, *(_QWORD *)(v52 + 56) + *(_QWORD *)(v90 + 72) * v53, v95);
      v84 = v52;
      sub_23328DC04(v53, v52);
      swift_bridgeObjectRelease();
      v59 = 0;
      v35 = (uint64_t)v91;
    }
    else
    {
      v59 = 1;
      v35 = (uint64_t)v91;
      v57 = (uint64_t)v81;
      v58 = v95;
    }
    v51(v57, v59, 1, v58);
    swift_bridgeObjectRelease();
    sub_233168608(v57, &qword_254248700);
    v29 = v96;
    v71 = v90;
LABEL_30:
    v33 = v85;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v88, v58);
    goto LABEL_6;
  }
  v48(v82, v50, v45);
  v60 = (_QWORD *)v84;
  v61 = swift_isUniquelyReferenced_nonNull_native();
  v98 = v60;
  v62 = v86;
  v64 = sub_2331E3D18(v86, v37);
  v65 = v60[2];
  v66 = (v63 & 1) == 0;
  v67 = v65 + v66;
  if (!__OFADD__(v65, v66))
  {
    v68 = v63;
    if (v60[3] >= v67)
    {
      if ((v61 & 1) == 0)
        sub_23327DD3C();
    }
    else
    {
      sub_23327987C(v67, v61);
      v69 = sub_2331E3D18(v62, v37);
      if ((v68 & 1) != (v70 & 1))
        goto LABEL_38;
      v64 = v69;
    }
    v72 = v98;
    if ((v68 & 1) != 0)
    {
      v71 = v90;
      v58 = v95;
      (*(void (**)(unint64_t, char *, uint64_t))(v90 + 40))(v98[7] + *(_QWORD *)(v90 + 72) * v64, v82, v95);
    }
    else
    {
      v98[(v64 >> 6) + 8] |= 1 << v64;
      v73 = (uint64_t *)(v72[6] + 16 * v64);
      *v73 = v62;
      v73[1] = v37;
      v71 = v90;
      v48((char *)(v72[7] + *(_QWORD *)(v90 + 72) * v64), (uint64_t)v82, v95);
      v74 = v72[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (v75)
        goto LABEL_37;
      v72[2] = v76;
      swift_bridgeObjectRetain();
      v58 = v95;
    }
    v84 = (uint64_t)v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v91;
    v29 = v96;
    goto LABEL_30;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_23361F2B4();
  __break(1u);
  return result;
}

uint64_t sub_2333E09AC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2333E0248(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_2333E09C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361DD60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23361DD6C();
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_233168608((uint64_t)v8, &qword_25604D598);
    if (qword_254246760 != -1)
LABEL_23:
      swift_once();
    v13 = sub_23361DB80();
    __swift_project_value_buffer(v13, (uint64_t)qword_254246748);
    swift_bridgeObjectRetain_n();
    v14 = sub_23361DB68();
    v15 = sub_23361E768();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v37 = v17;
      *(_DWORD *)v16 = 136315138;
      swift_bridgeObjectRetain();
      v39 = sub_233164DCC(a1, a2, &v37);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v14, v15, "Could not construct image path from %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v17, -1, -1);
      MEMORY[0x234934590](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, unint64_t))(v10 + 32))(v12, v8, v9);
    v18 = (int64_t)v12;
    a2 = sub_23361DD3C();
    a1 = v19;
    v20 = 3;
    if (a3 < 3)
      v20 = a3;
    v21 = v20 & ~(v20 >> 63);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_233623D60;
    if (qword_256041C18 != -1)
      swift_once();
    v23 = (unint64_t)off_256048220;
    if (v21 >= *((_QWORD *)off_256048220 + 2))
    {
      __break(1u);
LABEL_25:
      v22 = (uint64_t)sub_2334A4AA4((_QWORD *)(v23 > 1), v18, 1, (_QWORD *)v22);
    }
    else
    {
      v34 = v12;
      v35 = v10;
      v36 = v9;
      v37 = a2;
      v38 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      v24 = 0;
      v25 = v38;
      *(_QWORD *)(v22 + 32) = v37;
      *(_QWORD *)(v22 + 40) = v25;
      v26 = 40;
      do
      {
        if (v21 != v24)
        {
          if (v24 >= *((_QWORD *)off_256048220 + 2))
          {
            __break(1u);
            goto LABEL_23;
          }
          v37 = a2;
          v38 = a1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23361E27C();
          swift_bridgeObjectRelease();
          v28 = v37;
          v29 = v38;
          v31 = *(_QWORD *)(v22 + 16);
          v30 = *(_QWORD *)(v22 + 24);
          if (v31 >= v30 >> 1)
            v22 = (uint64_t)sub_2334A4AA4((_QWORD *)(v30 > 1), v31 + 1, 1, (_QWORD *)v22);
          *(_QWORD *)(v22 + 16) = v31 + 1;
          v27 = v22 + 16 * v31;
          *(_QWORD *)(v27 + 32) = v28;
          *(_QWORD *)(v27 + 40) = v29;
        }
        ++v24;
        v26 += 16;
      }
      while (v24 != 4);
      v9 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      v18 = v9 + 1;
      v12 = v34;
      v10 = v35;
      if (v9 >= v23 >> 1)
        goto LABEL_25;
    }
    *(_QWORD *)(v22 + 16) = v18;
    v32 = v22 + 16 * v9;
    *(_QWORD *)(v32 + 32) = a2;
    *(_QWORD *)(v32 + 40) = a1;
    (*(void (**)(char *, unint64_t))(v10 + 8))(v12, v36);
  }
  return v22;
}

uint64_t dispatch thunk of static LongRunningFetchableManagedObject.entityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static KeyPathMappableManagedObject.comparablePredicates.getter()
{
  return 0;
}

uint64_t dispatch thunk of static KeyPathMappable.managedObjectType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static KeyPathMappableManagedObject.mappedKeyPaths.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static KeyPathMappableManagedObject.comparablePredicates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t AccountPaymentInformation.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) && *(_BYTE *)(v0 + 32) != 1)
  {
    sub_23361F35C();
  }
  else
  {
    sub_23361F35C();
    sub_23361E0A8();
  }
  return sub_23361E0A8();
}

uint64_t sub_2333E0ED0()
{
  sub_2333E26F4();
  return sub_23361F428();
}

uint64_t sub_2333E0EF8()
{
  sub_2333E26F4();
  return sub_23361F434();
}

uint64_t sub_2333E0F20()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1851876211;
  if (*v0 != 1)
    v1 = 1851875945;
  if (*v0)
    return v1;
  else
    return 6841185;
}

uint64_t sub_2333E0F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333E27BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333E0F8C()
{
  sub_2333E2628();
  return sub_23361F428();
}

uint64_t sub_2333E0FB4()
{
  sub_2333E2628();
  return sub_23361F434();
}

uint64_t sub_2333E0FDC()
{
  sub_2333E266C();
  return sub_23361F428();
}

uint64_t sub_2333E1004()
{
  sub_2333E266C();
  return sub_23361F434();
}

uint64_t sub_2333E102C()
{
  sub_2333E26B0();
  return sub_23361F428();
}

uint64_t sub_2333E1054()
{
  sub_2333E26B0();
  return sub_23361F434();
}

uint64_t AccountPaymentInformation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D818);
  v21 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D820);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v23 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D828);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D830);
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *v1;
  v10 = v1[2];
  v20[1] = v1[3];
  v20[2] = v10;
  v11 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E2628();
  sub_23361F410();
  if (!v11)
  {
    v34 = 0;
    sub_2333E26F4();
    v15 = v22;
    sub_23361F0C8();
    v33 = 0;
    v16 = v31;
    v17 = v24;
    sub_23361F140();
    if (!v16)
    {
      v32 = 1;
      sub_23361F140();
    }
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    goto LABEL_10;
  }
  v12 = v31;
  if (v11 != 1)
  {
    v38 = 2;
    sub_2333E266C();
    v15 = v25;
    sub_23361F0C8();
    v17 = v27;
    sub_23361F140();
    v18 = *(void (**)(char *, uint64_t))(v21 + 8);
LABEL_10:
    v18(v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  }
  v37 = 1;
  sub_2333E26B0();
  v13 = v23;
  sub_23361F0C8();
  v36 = 0;
  v14 = v28;
  sub_23361F140();
  if (!v12)
  {
    v35 = 1;
    sub_23361F140();
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v7);
}

uint64_t AccountPaymentInformation.hashValue.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_23361F350();
  sub_23361F35C();
  if (v1 <= 1)
    sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t AccountPaymentInformation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;

  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D858);
  v4 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v59 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v63 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D860);
  v7 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  v61 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D868);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D870);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2333E2628();
  v18 = v65;
  sub_23361F3EC();
  if (!v18)
  {
    v55 = v9;
    v56 = v10;
    v19 = v62;
    v20 = v63;
    v65 = v14;
    v21 = v16;
    v22 = sub_23361F098();
    v23 = (char *)v22;
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      v24 = *(unsigned __int8 *)(v22 + 32);
      if (*(_BYTE *)(v22 + 32))
      {
        v54 = *(unsigned __int8 *)(v22 + 32);
        if (v24 == 1)
        {
          v71 = 1;
          sub_2333E26B0();
          v25 = v19;
          v26 = v21;
          sub_23361EFA8();
          v70 = 0;
          v27 = v60;
          v28 = sub_23361F02C();
          v40 = v39;
          v53 = v28;
          v63 = v23;
          v69 = 1;
          v41 = sub_23361F02C();
          v42 = v65;
          v47 = v41;
          v49 = v48;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v27);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v13);
        }
        else
        {
          v72 = 2;
          sub_2333E266C();
          v36 = v20;
          sub_23361EFA8();
          v37 = v58;
          v38 = sub_23361F02C();
          v40 = v46;
          v53 = v38;
          (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v37);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v13);
          v47 = 0;
          v49 = 0;
        }
      }
      else
      {
        v68 = 0;
        sub_2333E26F4();
        v33 = v12;
        v34 = v21;
        sub_23361EFA8();
        v67 = 0;
        v35 = v55;
        v53 = sub_23361F02C();
        v62 = v43;
        v63 = v23;
        v54 = v24;
        v66 = 1;
        v44 = sub_23361F02C();
        v45 = v65;
        v47 = v44;
        v49 = v50;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v13);
        v40 = v62;
      }
      v51 = v57;
      *v57 = v53;
      v51[1] = (uint64_t)v40;
      v51[2] = v47;
      v51[3] = v49;
      *((_BYTE *)v51 + 32) = v54;
    }
    else
    {
      v29 = sub_23361EE10();
      swift_allocError();
      v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
      *v31 = &type metadata for AccountPaymentInformation;
      sub_23361EFC0();
      sub_23361EDEC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v13);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
}

uint64_t sub_2333E1A40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AccountPaymentInformation.init(from:)(a1, a2);
}

uint64_t sub_2333E1A54(_QWORD *a1)
{
  return AccountPaymentInformation.encode(to:)(a1);
}

uint64_t sub_2333E1A6C()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_23361F350();
  sub_23361F35C();
  if (v1 <= 1)
    sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333E1B1C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) && *(_BYTE *)(v0 + 32) != 1)
  {
    sub_23361F35C();
  }
  else
  {
    sub_23361F35C();
    sub_23361E0A8();
  }
  return sub_23361E0A8();
}

uint64_t sub_2333E1BAC()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_23361F350();
  sub_23361F35C();
  if (v1 <= 1)
    sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

id AccountPaymentInformation.fkPaymentInformation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 32))
  {
    if (*(_BYTE *)(v0 + 32) != 1)
    {
      v11 = objc_allocWithZone((Class)FKAccountPaymentInformation);
      swift_bridgeObjectRetain();
      v7 = (void *)sub_23361E12C();
      sub_2333E2738(v2, v1, v4, v3, 2u);
      v10 = objc_msgSend(v11, sel_initWithIBAN_, v7);
      goto LABEL_7;
    }
    v5 = objc_allocWithZone((Class)FKAccountPaymentInformation);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v5, sel_initWithAccountNumber_sortCode_, v6, v7);
  }
  else
  {
    v9 = objc_allocWithZone((Class)FKAccountPaymentInformation);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v9, sel_initWithAccountNumber_routingNumber_, v6, v7);
  }
  v10 = v8;

LABEL_7:
  return v10;
}

uint64_t static AccountPaymentInformation.open(combined:using:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v6 = sub_23361CA40();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23361DF04();
  v8 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v11 = sub_23361DB80();
  v41 = __swift_project_value_buffer(v11, (uint64_t)qword_2560495B0);
  v12 = sub_23361DB68();
  v13 = sub_23361E750();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_233151000, v12, v13, "Decrypting account payment information.", v14, 2u);
    v3 = v2;
    MEMORY[0x234934590](v14, -1, -1);
  }

  sub_2331D1374(a1, a2);
  sub_23357D188(a1, a2);
  if (v3)
  {
    v15 = v3;
    v16 = v3;
    v17 = sub_23361DB68();
    v18 = sub_23361E768();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v3;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v43 = v22;
      sub_23361EBC4();
      *v20 = v22;

      _os_log_impl(&dword_233151000, v17, v18, "Failed decrypting account payment information. Error: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v20, -1, -1);
      MEMORY[0x234934590](v19, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  else
  {
    v24 = sub_23361DEC8();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v40);
    sub_2331D1374(v24, v26);
    sub_2331D1374(v24, v26);
    sub_2331D1374(v24, v26);
    v27 = sub_23361DB68();
    v28 = sub_23361E750();
    if (os_log_type_enabled(v27, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v43 = v41;
      *(_DWORD *)v30 = 136315138;
      v40 = (uint64_t)(v30 + 4);
      sub_2331D1374(v24, v26);
      v31 = sub_23361D364();
      v33 = v32;
      sub_23316BEA4(v24, v26);
      v42 = sub_233164DCC(v31, v33, &v43);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_23316BEA4(v24, v26);
      sub_23316BEA4(v24, v26);
      _os_log_impl(&dword_233151000, v27, v28, "Decrypted account payment information. Decoding [AccountPaymentInformation] from %s.", v30, 0xCu);
      v34 = v41;
      swift_arrayDestroy();
      MEMORY[0x234934590](v34, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);
    }
    else
    {
      sub_23316BEA4(v24, v26);
      sub_23316BEA4(v24, v26);
    }

    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    if (qword_256041BF0 != -1)
      swift_once();
    v35 = v39;
    v36 = __swift_project_value_buffer(v39, (uint64_t)qword_2560458E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v36, v35);
    sub_23361CA4C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604D878);
    sub_2333E3568(&qword_25604D880, (uint64_t (*)(void))sub_2333E2778, MEMORY[0x24BEE12D0]);
    sub_23361CA58();
    sub_23316BEA4(v24, v26);
    sub_23316BEA4(v24, v26);
    swift_release();
    return v43;
  }
}

uint64_t static AccountPaymentInformation.seal(_:using:)(uint64_t a1)
{
  return sub_2333E28DC(a1);
}

uint64_t _s10FinanceKit25AccountPaymentInformationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v23;
  char v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  LODWORD(v11) = *(unsigned __int8 *)(a2 + 32);
  v12 = *(_QWORD *)a1;
  v13 = v3;
  if (*(_BYTE *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if ((_DWORD)v11 == 1)
      {
        v14 = v2 == v7 && v3 == v8;
        if (v14 || (v15 = *(_QWORD *)a2, v16 = sub_23361F224(), v7 = v15, (v16 & 1) != 0))
        {
          if (v4 == v9 && v5 == v10)
          {
            v17 = v4;
            v18 = v5;
            LOBYTE(v11) = 1;
            LOBYTE(v6) = 1;
LABEL_35:
            v35 = 1;
            goto LABEL_38;
          }
          v17 = v4;
          v18 = v5;
          v28 = v9;
          v29 = v7;
          v30 = sub_23361F224();
          v7 = v29;
          v9 = v28;
          v35 = v30;
        }
        else
        {
          v17 = v4;
          v18 = v5;
          v35 = 0;
        }
        LOBYTE(v11) = 1;
        LOBYTE(v6) = 1;
        goto LABEL_38;
      }
      goto LABEL_29;
    }
    if ((_DWORD)v11 == 2)
    {
      v17 = *(_QWORD *)(a1 + 16);
      v18 = *(_QWORD *)(a1 + 24);
      if (v2 == v7 && v3 == v8)
      {
        v35 = 1;
      }
      else
      {
        v26 = *(_QWORD *)a2;
        v27 = sub_23361F224();
        v7 = v26;
        v35 = v27;
      }
      LOBYTE(v11) = 2;
      LOBYTE(v6) = 2;
      goto LABEL_38;
    }
LABEL_29:
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(a1 + 24);
LABEL_30:
    v35 = 0;
    goto LABEL_38;
  }
  if (*(_BYTE *)(a2 + 32))
    goto LABEL_29;
  if (v2 != v7 || v3 != v8)
  {
    v20 = *(_QWORD *)a2;
    v21 = sub_23361F224();
    v7 = v20;
    if ((v21 & 1) == 0)
    {
      v17 = v4;
      v18 = v5;
      LOBYTE(v11) = 0;
      LOBYTE(v6) = 0;
      goto LABEL_30;
    }
  }
  if (v4 == v9 && v5 == v10)
  {
    v17 = v4;
    v18 = v5;
    LOBYTE(v11) = 0;
    LOBYTE(v6) = 0;
    goto LABEL_35;
  }
  v17 = v4;
  v18 = v5;
  v11 = v9;
  v23 = v7;
  v24 = sub_23361F224();
  v7 = v23;
  v9 = v11;
  v35 = v24;
  LOBYTE(v11) = 0;
  LOBYTE(v6) = 0;
LABEL_38:
  v31 = v8;
  v32 = v8;
  v33 = v7;
  sub_2333E2E44(v7, v31, v9, v10, v11);
  sub_2333E2E44(v12, v13, v17, v18, v6);
  sub_2333E2738(v12, v13, v17, v18, v6);
  sub_2333E2738(v33, v32, v9, v10, v11);
  return v35 & 1;
}

unint64_t sub_2333E2628()
{
  unint64_t result;

  result = qword_25604D838;
  if (!qword_25604D838)
  {
    result = MEMORY[0x234934494](&unk_233644790, &type metadata for AccountPaymentInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D838);
  }
  return result;
}

unint64_t sub_2333E266C()
{
  unint64_t result;

  result = qword_25604D840;
  if (!qword_25604D840)
  {
    result = MEMORY[0x234934494](&unk_233644740, &type metadata for AccountPaymentInformation.IbanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D840);
  }
  return result;
}

unint64_t sub_2333E26B0()
{
  unint64_t result;

  result = qword_25604D848;
  if (!qword_25604D848)
  {
    result = MEMORY[0x234934494](&unk_2336446F0, &type metadata for AccountPaymentInformation.ScanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D848);
  }
  return result;
}

unint64_t sub_2333E26F4()
{
  unint64_t result;

  result = qword_25604D850;
  if (!qword_25604D850)
  {
    result = MEMORY[0x234934494](&unk_2336446A0, &type metadata for AccountPaymentInformation.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D850);
  }
  return result;
}

uint64_t sub_2333E2738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a5 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2333E2778()
{
  unint64_t result;

  result = qword_25604D888;
  if (!qword_25604D888)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountPaymentInformation, &type metadata for AccountPaymentInformation);
    atomic_store(result, (unint64_t *)&qword_25604D888);
  }
  return result;
}

uint64_t sub_2333E27BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6841185 && a2 == 0xE300000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1851876211 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851875945 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2333E28DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D8F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361DF04();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361CAC4();
  v39 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v12 = sub_23361DB80();
  v36 = __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
  v13 = sub_23361DB68();
  v14 = sub_23361E750();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v33 = v9;
    v16 = v7;
    v17 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_233151000, v13, v14, "Encoding account payment information.", v15, 2u);
    v18 = v17;
    v7 = v16;
    v2 = v1;
    v9 = v33;
    MEMORY[0x234934590](v18, -1, -1);
  }

  sub_23361CB00();
  swift_allocObject();
  v19 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v9, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v11, v20, v9);
  sub_23361CADC();
  v37 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D878);
  sub_2333E3568(&qword_25604D900, (uint64_t (*)(void))sub_2333E35D0, MEMORY[0x24BEE12A0]);
  v21 = v2;
  v22 = sub_23361CAE8();
  v24 = v23;
  swift_release();
  if (v21)
    return v19;
  v25 = sub_23361DB68();
  v26 = sub_23361E750();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_233151000, v25, v26, "Encrypting account payment information.", v27, 2u);
    MEMORY[0x234934590](v27, -1, -1);
  }

  v37 = v22;
  v38 = v24;
  v28 = sub_23361DEE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v6, 1, 1, v28);
  sub_2332640A8();
  v29 = v35;
  sub_23361DED4();
  sub_2333E3614((uint64_t)v6);
  v19 = sub_23361DEEC();
  v31 = v30;
  result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v7);
  if (v31 >> 60 != 15)
  {
    sub_23316BEA4(v22, v24);
    return v19;
  }
  __break(1u);
  return result;
}

unint64_t sub_2333E2E00()
{
  unint64_t result;

  result = qword_25604D890;
  if (!qword_25604D890)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountPaymentInformation, &type metadata for AccountPaymentInformation);
    atomic_store(result, (unint64_t *)&qword_25604D890);
  }
  return result;
}

uint64_t sub_2333E2E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (a5 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for AccountPaymentInformation(uint64_t a1)
{
  return sub_2333E2738(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for AccountPaymentInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2333E2E44(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AccountPaymentInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2333E2E44(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2333E2738(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AccountPaymentInformation(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_2333E2738(v4, v6, v5, v7, v9);
  return a1;
}

ValueMetadata *type metadata accessor for AccountPaymentInformation()
{
  return &type metadata for AccountPaymentInformation;
}

uint64_t storeEnumTagSinglePayload for AccountPaymentInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2333E300C + 4 * byte_233644285[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2333E3040 + 4 * asc_233644280[v4]))();
}

uint64_t sub_2333E3040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E3048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333E3050);
  return result;
}

uint64_t sub_2333E305C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333E3064);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2333E3068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E3070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountPaymentInformation.CodingKeys()
{
  return &type metadata for AccountPaymentInformation.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountPaymentInformation.AchCodingKeys()
{
  return &type metadata for AccountPaymentInformation.AchCodingKeys;
}

uint64_t _s10FinanceKit25AccountPaymentInformationO13AchCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333E30EC + 4 * byte_23364428F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333E3120 + 4 * byte_23364428A[v4]))();
}

uint64_t sub_2333E3120(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E3128(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333E3130);
  return result;
}

uint64_t sub_2333E313C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333E3144);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333E3148(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E3150(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountPaymentInformation.ScanCodingKeys()
{
  return &type metadata for AccountPaymentInformation.ScanCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccountPaymentInformation.IbanCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333E31AC + 4 * byte_233644294[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333E31CC + 4 * byte_233644299[v4]))();
}

_BYTE *sub_2333E31AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333E31CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333E31D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333E31DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333E31E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333E31EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccountPaymentInformation.IbanCodingKeys()
{
  return &type metadata for AccountPaymentInformation.IbanCodingKeys;
}

unint64_t sub_2333E320C()
{
  unint64_t result;

  result = qword_25604D898;
  if (!qword_25604D898)
  {
    result = MEMORY[0x234934494](&unk_233644450, &type metadata for AccountPaymentInformation.IbanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D898);
  }
  return result;
}

unint64_t sub_2333E3254()
{
  unint64_t result;

  result = qword_25604D8A0;
  if (!qword_25604D8A0)
  {
    result = MEMORY[0x234934494](&unk_233644508, &type metadata for AccountPaymentInformation.ScanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8A0);
  }
  return result;
}

unint64_t sub_2333E329C()
{
  unint64_t result;

  result = qword_25604D8A8;
  if (!qword_25604D8A8)
  {
    result = MEMORY[0x234934494](&unk_2336445C0, &type metadata for AccountPaymentInformation.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8A8);
  }
  return result;
}

unint64_t sub_2333E32E4()
{
  unint64_t result;

  result = qword_25604D8B0;
  if (!qword_25604D8B0)
  {
    result = MEMORY[0x234934494](&unk_233644678, &type metadata for AccountPaymentInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8B0);
  }
  return result;
}

unint64_t sub_2333E332C()
{
  unint64_t result;

  result = qword_25604D8B8;
  if (!qword_25604D8B8)
  {
    result = MEMORY[0x234934494](&unk_233644530, &type metadata for AccountPaymentInformation.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8B8);
  }
  return result;
}

unint64_t sub_2333E3374()
{
  unint64_t result;

  result = qword_25604D8C0;
  if (!qword_25604D8C0)
  {
    result = MEMORY[0x234934494](&unk_233644558, &type metadata for AccountPaymentInformation.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8C0);
  }
  return result;
}

unint64_t sub_2333E33BC()
{
  unint64_t result;

  result = qword_25604D8C8;
  if (!qword_25604D8C8)
  {
    result = MEMORY[0x234934494](&unk_233644478, &type metadata for AccountPaymentInformation.ScanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8C8);
  }
  return result;
}

unint64_t sub_2333E3404()
{
  unint64_t result;

  result = qword_25604D8D0;
  if (!qword_25604D8D0)
  {
    result = MEMORY[0x234934494](&unk_2336444A0, &type metadata for AccountPaymentInformation.ScanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8D0);
  }
  return result;
}

unint64_t sub_2333E344C()
{
  unint64_t result;

  result = qword_25604D8D8;
  if (!qword_25604D8D8)
  {
    result = MEMORY[0x234934494](&unk_2336443C0, &type metadata for AccountPaymentInformation.IbanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8D8);
  }
  return result;
}

unint64_t sub_2333E3494()
{
  unint64_t result;

  result = qword_25604D8E0;
  if (!qword_25604D8E0)
  {
    result = MEMORY[0x234934494](&unk_2336443E8, &type metadata for AccountPaymentInformation.IbanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8E0);
  }
  return result;
}

unint64_t sub_2333E34DC()
{
  unint64_t result;

  result = qword_25604D8E8;
  if (!qword_25604D8E8)
  {
    result = MEMORY[0x234934494](&unk_2336445E8, &type metadata for AccountPaymentInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8E8);
  }
  return result;
}

unint64_t sub_2333E3524()
{
  unint64_t result;

  result = qword_25604D8F0;
  if (!qword_25604D8F0)
  {
    result = MEMORY[0x234934494](&unk_233644610, &type metadata for AccountPaymentInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D8F0);
  }
  return result;
}

uint64_t sub_2333E3568(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604D878);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2333E35D0()
{
  unint64_t result;

  result = qword_25604D908;
  if (!qword_25604D908)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountPaymentInformation, &type metadata for AccountPaymentInformation);
    atomic_store(result, (unint64_t *)&qword_25604D908);
  }
  return result;
}

uint64_t sub_2333E3614(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D8F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AccountStartDate.init(selectedDate:sinceOpeningSelected:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_2331B05C8(a1, a3);
  result = type metadata accessor for AccountStartDate();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for AccountStartDate()
{
  uint64_t result;

  result = qword_25604DAB0;
  if (!qword_25604DAB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333E36C8(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_23361F350();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    v18 = sub_23361F3A4();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_23361F224() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_23361F224() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_2333E394C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  result = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v14 = 0;
    v15 = *(_QWORD *)(a1 + 56);
    v34 = a1;
    v35 = a1 + 56;
    v16 = 1 << *(_BYTE *)(a1 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v15;
    v36 = (unint64_t)(v16 + 63) >> 6;
    v39 = a2 + 56;
    v33 = v13;
    if (!v18)
      goto LABEL_8;
LABEL_7:
    v38 = (v18 - 1) & v18;
    for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v14 << 6))
    {
      v23 = *(_QWORD *)(v5 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v24(v13, *(_QWORD *)(a1 + 48) + v23 * i, v4);
      v25 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
        return v25;
      v37 = v14;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v40, v13, v4);
      sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v26 = sub_23361E084();
      v27 = -1 << *(_BYTE *)(a2 + 32);
      v28 = v26 & ~v27;
      if (((*(_QWORD *)(v39 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
        break;
      v29 = a2;
      v30 = ~v27;
      while (1)
      {
        v24(v8, *(_QWORD *)(v29 + 48) + v28 * v23, v4);
        sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v31 = sub_23361E108();
        v32 = *(void (**)(char *, uint64_t))(v5 + 8);
        v32(v8, v4);
        if ((v31 & 1) != 0)
          break;
        v28 = (v28 + 1) & v30;
        if (((*(_QWORD *)(v39 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
          goto LABEL_32;
      }
      result = ((uint64_t (*)(char *, uint64_t))v32)(v40, v4);
      a2 = v29;
      v13 = v33;
      a1 = v34;
      v14 = v37;
      v18 = v38;
      if (v38)
        goto LABEL_7;
LABEL_8:
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return result;
      }
      if (v20 >= v36)
        goto LABEL_35;
      v21 = *(_QWORD *)(v35 + 8 * v20);
      ++v14;
      if (!v21)
      {
        v14 = v20 + 1;
        if (v20 + 1 >= v36)
          goto LABEL_35;
        v21 = *(_QWORD *)(v35 + 8 * v14);
        if (!v21)
        {
          v14 = v20 + 2;
          if (v20 + 2 >= v36)
            goto LABEL_35;
          v21 = *(_QWORD *)(v35 + 8 * v14);
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v36)
            {
LABEL_35:
              v25 = 1;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
              return v25;
            }
            v21 = *(_QWORD *)(v35 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v14 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_37;
                if (v14 >= v36)
                  goto LABEL_35;
                v21 = *(_QWORD *)(v35 + 8 * v14);
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v14 = v22;
          }
        }
      }
LABEL_21:
      v38 = (v21 - 1) & v21;
    }
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
LABEL_32:
    v32(v40, v4);
  }
  return 0;
}

uint64_t sub_2333E3D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;

  v4 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char **)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char **)((char *)&v32 - v9);
  result = MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v32 - v13;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v35 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v36 = (unint64_t)(v17 + 63) >> 6;
  v20 = a2 + 56;
  v33 = v12;
  v34 = a1;
  v32 = v14;
  if (!v19)
    goto LABEL_9;
LABEL_7:
  v37 = (v19 - 1) & v19;
  v38 = v15;
  for (i = __clz(__rbit64(v19)) | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v12 + 72);
    sub_2331684BC(*(_QWORD *)(a1 + 48) + v26 * i, (uint64_t)v14, type metadata accessor for MapsSuggestionsOrderPickup);
    sub_23330B538((uint64_t)v14, (uint64_t)v10);
    sub_23361F350();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    v27 = sub_23361F3A4();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v20 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
LABEL_29:
      sub_233168500((uint64_t)v10, type metadata accessor for MapsSuggestionsOrderPickup);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      sub_2331684BC(*(_QWORD *)(a2 + 48) + v29 * v26, (uint64_t)v7, type metadata accessor for MapsSuggestionsOrderPickup);
      v31 = _s10FinanceKit26MapsSuggestionsOrderPickupV2eeoiySbAC_ACtFZ_0(v7, v10);
      sub_233168500((uint64_t)v7, type metadata accessor for MapsSuggestionsOrderPickup);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v20 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
        goto LABEL_29;
    }
    result = sub_233168500((uint64_t)v10, type metadata accessor for MapsSuggestionsOrderPickup);
    v12 = v33;
    a1 = v34;
    v14 = v32;
    v19 = v37;
    v15 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v22 >= v36)
      return 1;
    v23 = *(_QWORD *)(v35 + 8 * v22);
    v24 = v15 + 1;
    if (!v23)
    {
      v24 = v15 + 2;
      if (v15 + 2 >= v36)
        return 1;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (!v23)
      {
        v24 = v15 + 3;
        if (v15 + 3 >= v36)
          return 1;
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          v24 = v15 + 4;
          if (v15 + 4 >= v36)
            return 1;
          v23 = *(_QWORD *)(v35 + 8 * v24);
          if (!v23)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v23 - 1) & v23;
    v38 = v24;
  }
  v25 = v15 + 5;
  if (v15 + 5 >= v36)
    return 1;
  v23 = *(_QWORD *)(v35 + 8 * v25);
  if (v23)
  {
    v24 = v15 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v36)
      return 1;
    v23 = *(_QWORD *)(v35 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t AccountStartDate.selectedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23319F164(v1, a1);
}

uint64_t AccountStartDate.sinceOpeningSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccountStartDate() + 20));
}

uint64_t sub_2333E40C0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x64657463656C6573;
}

uint64_t sub_2333E4108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333E6A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333E412C()
{
  sub_2333E5A8C();
  return sub_23361F428();
}

uint64_t sub_2333E4154()
{
  sub_2333E5A8C();
  return sub_23361F434();
}

uint64_t AccountStartDate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D918);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E5A8C();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F110();
  if (!v1)
  {
    type metadata accessor for AccountStartDate();
    v8[14] = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AccountStartDate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t started;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v19 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604D930);
  v6 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for AccountStartDate();
  MEMORY[0x24BDAC7A8](started);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E5A8C();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v12 = v6;
  v13 = (uint64_t)v11;
  v14 = v19;
  sub_23361D634();
  v23 = 0;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v15 = v20;
  sub_23361EFFC();
  sub_2331B05C8(v21, v13);
  v22 = 1;
  v16 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v15);
  *(_BYTE *)(v13 + *(int *)(started + 20)) = v16 & 1;
  sub_2331684BC(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for AccountStartDate);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v13, (uint64_t (*)(_QWORD))type metadata accessor for AccountStartDate);
}

uint64_t sub_2333E452C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountStartDate.init(from:)(a1, a2);
}

uint64_t sub_2333E4540(_QWORD *a1)
{
  return AccountStartDate.encode(to:)(a1);
}

uint64_t AccountSelectionValues.sharedAccountIDStartingDates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AccountSelectionValues.removedAccountIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AccountSelectionValues.init(sharedAccountIDStartingDates:removedAccountIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL AccountSelectionValues.isEmpty.getter()
{
  _QWORD *v0;

  return !*(_QWORD *)(*v0 + 16) && *(_QWORD *)(v0[1] + 16) == 0;
}

uint64_t static AccountSelectionValues.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_233193E54(*a1, *a2) & 1) != 0)
    return sub_2333E394C(v2, v3);
  else
    return 0;
}

unint64_t sub_2333E45DC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_2333E461C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333E6B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333E4640()
{
  sub_2333E5AD0();
  return sub_23361F428();
}

uint64_t sub_2333E4668()
{
  sub_2333E5AD0();
  return sub_23361F434();
}

uint64_t AccountSelectionValues.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D940);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E5AD0();
  sub_23361F410();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D950);
  sub_2333E5B14();
  sub_23361F17C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
    sub_2333E5C4C(&qword_25604D978, &qword_25604D960, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AccountSelectionValues.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D980);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E5AD0();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D950);
  v13 = 0;
  sub_2333E5BB0();
  sub_23361F068();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
  v13 = 1;
  sub_2333E5C4C(&qword_25604D9A0, &qword_256042350, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333E4A08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_233193E54(*a1, *a2) & 1) != 0)
    return sub_2333E394C(v2, v3);
  else
    return 0;
}

uint64_t sub_2333E4A50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AccountSelectionValues.init(from:)(a1, a2);
}

uint64_t sub_2333E4A64(_QWORD *a1)
{
  return AccountSelectionValues.encode(to:)(a1);
}

BOOL AccountSelectionResult.isEmpty.getter()
{
  _QWORD *v0;

  return *v0 && !*(_QWORD *)(*v0 + 16) && *(_QWORD *)(v0[1] + 16) == 0;
}

uint64_t sub_2333E4AA8()
{
  sub_2333E5D9C();
  return sub_23361F428();
}

uint64_t sub_2333E4AD0()
{
  sub_2333E5D9C();
  return sub_23361F434();
}

uint64_t sub_2333E4AF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756C6176;
  else
    return 0x656C6C65636E6163;
}

uint64_t sub_2333E4B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2333E6C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333E4B58()
{
  sub_2333E5CD0();
  return sub_23361F428();
}

uint64_t sub_2333E4B80()
{
  sub_2333E5CD0();
  return sub_23361F434();
}

uint64_t sub_2333E4BA8()
{
  sub_2333E5D14();
  return sub_23361F428();
}

uint64_t sub_2333E4BD0()
{
  sub_2333E5D14();
  return sub_23361F434();
}

uint64_t AccountSelectionResult.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D9A8);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D9B0);
  v15 = *(_QWORD *)(v6 - 8);
  v16 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D9B8);
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v17 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333E5CD0();
  sub_23361F410();
  if (v12)
  {
    LOBYTE(v21) = 1;
    sub_2333E5D14();
    sub_23361F0C8();
    v21 = v12;
    v22 = v17;
    sub_2333E5D58();
    v13 = v19;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v13);
  }
  else
  {
    LOBYTE(v21) = 0;
    sub_2333E5D9C();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v9);
}

uint64_t AccountSelectionResult.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  char *v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D9E0);
  v4 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  v30 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D9E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604D9F0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2333E5CD0();
  v15 = v35;
  sub_23361F3EC();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v28 = v6;
  v17 = v32;
  v35 = v11;
  v18 = sub_23361F098();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v21 = sub_23361EE10();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v23 = &type metadata for AccountSelectionResult;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
LABEL_7:
    v24 = (uint64_t)v33;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v34) = 1;
    sub_2333E5D14();
    v20 = v10;
    sub_23361EFA8();
    sub_2333E5DE0();
    v26 = v29;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v20);
    v27 = v34;
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_2333E5D9C();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    v27 = 0uLL;
  }
  v24 = (uint64_t)v33;
  *v31 = v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_2333E51E0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AccountSelectionResult.init(from:)(a1, a2);
}

uint64_t sub_2333E51F4(_QWORD *a1)
{
  return AccountSelectionResult.encode(to:)(a1);
}

uint64_t AccountSelectionResult.XPC.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___XPCAccountSelectionResult_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___XPCAccountSelectionResult_value + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_23316BFE0(v2);
}

id AccountSelectionResult.XPC.__allocating_init(value:)(_OWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_OWORD *)&v3[OBJC_IVAR___XPCAccountSelectionResult_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AccountSelectionResult.XPC.init(value:)(_OWORD *a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_OWORD *)&v1[OBJC_IVAR___XPCAccountSelectionResult_value] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static AccountSelectionResult.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id AccountSelectionResult.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316AB68(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id AccountSelectionResult.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316AB68(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id AccountSelectionResult.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccountSelectionResult.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountSelectionResult.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2333E54EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___XPCAccountSelectionResult_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___XPCAccountSelectionResult_value + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_23316BFE0(v2);
}

id sub_2333E5504(_OWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_OWORD *)&v3[OBJC_IVAR___XPCAccountSelectionResult_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AccountSelectionResult.xpcValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t *v5;
  objc_super v7;

  v1 = *v0;
  v2 = v0[1];
  v3 = (objc_class *)type metadata accessor for AccountSelectionResult.XPC();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = (uint64_t *)&v4[OBJC_IVAR___XPCAccountSelectionResult_value];
  *v5 = v1;
  v5[1] = v2;
  sub_23316BFE0(v1);
  v7.receiver = v4;
  v7.super_class = v3;
  return objc_msgSendSuper2(&v7, sel_init);
}

id static SelectAccountsUIXPCConfiguration.serviceInterface.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4AB0);
}

id sub_2333E5600()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4AB0);
}

BOOL _s10FinanceKit22AccountSelectionResultO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if (*a1)
  {
    if (v5)
    {
      sub_23316BFE0(*a2);
      sub_23316BFE0(v3);
      sub_23316BFE0(v5);
      sub_23316BFE0(v3);
      if ((sub_233193E54(v3, v5) & 1) != 0)
      {
        v6 = sub_2333E394C(v2, v4);
        sub_23316C050(v3);
        sub_23316C050(v5);
        sub_23316C050(v5);
        sub_23316C050(v3);
        return (v6 & 1) != 0;
      }
      sub_23316C050(v3);
      sub_23316C050(v5);
      sub_23316C050(v5);
      v8 = v3;
LABEL_9:
      sub_23316C050(v8);
      return 0;
    }
LABEL_7:
    sub_23316BFE0(*a2);
    sub_23316BFE0(v3);
    sub_23316C050(v3);
    v8 = v5;
    goto LABEL_9;
  }
  if (v5)
    goto LABEL_7;
  sub_23316C050(0);
  sub_23316C050(0);
  return 1;
}

uint64_t _s10FinanceKit16AccountStartDateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t started;
  char v25;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v27 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  sub_23319F164(a1, (uint64_t)&v27 - v18);
  v28 = a2;
  sub_23319F164(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23319F164((uint64_t)v19, (uint64_t)v10);
  sub_23319F164((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) != 1)
  {
    sub_23319F164((uint64_t)v10, (uint64_t)v14);
    if (v21(v20, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v22 = sub_23361E108();
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
      v23(v14, v4);
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v25 = 0;
      return v25 & 1;
    }
    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_233168608((uint64_t)v10, &qword_256042DA0);
    goto LABEL_9;
  }
  sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
  if (v21(v20, 1, v4) != 1)
    goto LABEL_6;
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
LABEL_8:
  started = type metadata accessor for AccountStartDate();
  v25 = *(_BYTE *)(a1 + *(int *)(started + 20)) ^ *(_BYTE *)(v28 + *(int *)(started + 20)) ^ 1;
  return v25 & 1;
}

unint64_t sub_2333E5A8C()
{
  unint64_t result;

  result = qword_25604D920;
  if (!qword_25604D920)
  {
    result = MEMORY[0x234934494](&unk_233644F14, &type metadata for AccountStartDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D920);
  }
  return result;
}

unint64_t sub_2333E5AD0()
{
  unint64_t result;

  result = qword_25604D948;
  if (!qword_25604D948)
  {
    result = MEMORY[0x234934494](&unk_233644EC4, &type metadata for AccountSelectionValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D948);
  }
  return result;
}

unint64_t sub_2333E5B14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25604D958;
  if (!qword_25604D958)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604D950);
    v2[0] = sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_233167C58(&qword_25604D968, (uint64_t (*)(uint64_t))type metadata accessor for AccountStartDate, (uint64_t)&protocol conformance descriptor for AccountStartDate);
    result = MEMORY[0x234934494](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25604D958);
  }
  return result;
}

unint64_t sub_2333E5BB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25604D988;
  if (!qword_25604D988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604D950);
    v2[0] = sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_233167C58(&qword_25604D998, (uint64_t (*)(uint64_t))type metadata accessor for AccountStartDate, (uint64_t)&protocol conformance descriptor for AccountStartDate);
    result = MEMORY[0x234934494](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25604D988);
  }
  return result;
}

uint64_t sub_2333E5C4C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604D970);
    v10 = sub_233167C58(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2333E5CD0()
{
  unint64_t result;

  result = qword_25604D9C0;
  if (!qword_25604D9C0)
  {
    result = MEMORY[0x234934494](&unk_233644E74, &type metadata for AccountSelectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D9C0);
  }
  return result;
}

unint64_t sub_2333E5D14()
{
  unint64_t result;

  result = qword_25604D9C8;
  if (!qword_25604D9C8)
  {
    result = MEMORY[0x234934494](&unk_233644E24, &type metadata for AccountSelectionResult.ValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D9C8);
  }
  return result;
}

unint64_t sub_2333E5D58()
{
  unint64_t result;

  result = qword_25604D9D0;
  if (!qword_25604D9D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountSelectionValues, &type metadata for AccountSelectionValues);
    atomic_store(result, (unint64_t *)&qword_25604D9D0);
  }
  return result;
}

unint64_t sub_2333E5D9C()
{
  unint64_t result;

  result = qword_25604D9D8;
  if (!qword_25604D9D8)
  {
    result = MEMORY[0x234934494](&unk_233644DD4, &type metadata for AccountSelectionResult.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604D9D8);
  }
  return result;
}

unint64_t sub_2333E5DE0()
{
  unint64_t result;

  result = qword_25604DA00;
  if (!qword_25604DA00)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountSelectionValues, &type metadata for AccountSelectionValues);
    atomic_store(result, (unint64_t *)&qword_25604DA00);
  }
  return result;
}

uint64_t type metadata accessor for AccountSelectionResult.XPC()
{
  return objc_opt_self();
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountStartDate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for AccountStartDate(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AccountStartDate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for AccountStartDate(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for AccountStartDate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for AccountStartDate(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStartDate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333E6328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccountStartDate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333E63C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

void sub_2333E6440()
{
  unint64_t v0;

  sub_2331FE95C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for AccountSelectionValues()
{
  return &type metadata for AccountSelectionValues;
}

ValueMetadata *type metadata accessor for AccountSelectionResult()
{
  return &type metadata for AccountSelectionResult;
}

uint64_t method lookup function for AccountSelectionResult.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountSelectionResult.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for SelectAccountsUIXPCConfiguration()
{
  return &type metadata for SelectAccountsUIXPCConfiguration;
}

ValueMetadata *type metadata accessor for AccountSelectionResult.CodingKeys()
{
  return &type metadata for AccountSelectionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountSelectionResult.CancelledCodingKeys()
{
  return &type metadata for AccountSelectionResult.CancelledCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccountSelectionResult.ValuesCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333E6558 + 4 * byte_2336447E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333E6578 + 4 * byte_2336447E5[v4]))();
}

_BYTE *sub_2333E6558(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333E6578(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333E6580(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333E6588(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333E6590(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333E6598(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccountSelectionResult.ValuesCodingKeys()
{
  return &type metadata for AccountSelectionResult.ValuesCodingKeys;
}

ValueMetadata *type metadata accessor for AccountSelectionValues.CodingKeys()
{
  return &type metadata for AccountSelectionValues.CodingKeys;
}

uint64_t _s10FinanceKit22AccountSelectionResultO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333E6610 + 4 * byte_2336447EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333E6644 + 4 * byte_2336447EA[v4]))();
}

uint64_t sub_2333E6644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E664C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333E6654);
  return result;
}

uint64_t sub_2333E6660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333E6668);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333E666C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333E6674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountStartDate.CodingKeys()
{
  return &type metadata for AccountStartDate.CodingKeys;
}

unint64_t sub_2333E6694()
{
  unint64_t result;

  result = qword_25604DB18;
  if (!qword_25604DB18)
  {
    result = MEMORY[0x234934494](&unk_233644B34, &type metadata for AccountStartDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB18);
  }
  return result;
}

unint64_t sub_2333E66DC()
{
  unint64_t result;

  result = qword_25604DB20;
  if (!qword_25604DB20)
  {
    result = MEMORY[0x234934494](&unk_233644BEC, &type metadata for AccountSelectionValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB20);
  }
  return result;
}

unint64_t sub_2333E6724()
{
  unint64_t result;

  result = qword_25604DB28;
  if (!qword_25604DB28)
  {
    result = MEMORY[0x234934494](&unk_233644CA4, &type metadata for AccountSelectionResult.ValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB28);
  }
  return result;
}

unint64_t sub_2333E676C()
{
  unint64_t result;

  result = qword_25604DB30;
  if (!qword_25604DB30)
  {
    result = MEMORY[0x234934494](&unk_233644DAC, &type metadata for AccountSelectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB30);
  }
  return result;
}

unint64_t sub_2333E67B4()
{
  unint64_t result;

  result = qword_25604DB38;
  if (!qword_25604DB38)
  {
    result = MEMORY[0x234934494](&unk_233644CCC, &type metadata for AccountSelectionResult.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB38);
  }
  return result;
}

unint64_t sub_2333E67FC()
{
  unint64_t result;

  result = qword_25604DB40;
  if (!qword_25604DB40)
  {
    result = MEMORY[0x234934494](&unk_233644CF4, &type metadata for AccountSelectionResult.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB40);
  }
  return result;
}

unint64_t sub_2333E6844()
{
  unint64_t result;

  result = qword_25604DB48;
  if (!qword_25604DB48)
  {
    result = MEMORY[0x234934494](&unk_233644C14, &type metadata for AccountSelectionResult.ValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB48);
  }
  return result;
}

unint64_t sub_2333E688C()
{
  unint64_t result;

  result = qword_25604DB50;
  if (!qword_25604DB50)
  {
    result = MEMORY[0x234934494](&unk_233644C3C, &type metadata for AccountSelectionResult.ValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB50);
  }
  return result;
}

unint64_t sub_2333E68D4()
{
  unint64_t result;

  result = qword_25604DB58;
  if (!qword_25604DB58)
  {
    result = MEMORY[0x234934494](&unk_233644D1C, &type metadata for AccountSelectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB58);
  }
  return result;
}

unint64_t sub_2333E691C()
{
  unint64_t result;

  result = qword_25604DB60;
  if (!qword_25604DB60)
  {
    result = MEMORY[0x234934494](&unk_233644D44, &type metadata for AccountSelectionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB60);
  }
  return result;
}

unint64_t sub_2333E6964()
{
  unint64_t result;

  result = qword_25604DB68;
  if (!qword_25604DB68)
  {
    result = MEMORY[0x234934494](&unk_233644B5C, &type metadata for AccountSelectionValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB68);
  }
  return result;
}

unint64_t sub_2333E69AC()
{
  unint64_t result;

  result = qword_25604DB70;
  if (!qword_25604DB70)
  {
    result = MEMORY[0x234934494](&unk_233644B84, &type metadata for AccountSelectionValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB70);
  }
  return result;
}

unint64_t sub_2333E69F4()
{
  unint64_t result;

  result = qword_25604DB78;
  if (!qword_25604DB78)
  {
    result = MEMORY[0x234934494](&unk_233644AA4, &type metadata for AccountStartDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB78);
  }
  return result;
}

unint64_t sub_2333E6A3C()
{
  unint64_t result;

  result = qword_25604DB80;
  if (!qword_25604DB80)
  {
    result = MEMORY[0x234934494](&unk_233644ACC, &type metadata for AccountStartDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604DB80);
  }
  return result;
}

uint64_t sub_2333E6A80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657463656C6573 && a2 == 0xEC00000065746144;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233675C40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2333E6B84(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000233675C60 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233675C80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2333E6C70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ManagedOrderReturnInfo.displayCountdown.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_willAccessValueForKey_, v1);

  v2 = objc_msgSend(v0, sel_primitiveDisplayCountdown);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v0, sel_didAccessValueForKey_, v3);

  if (!v2)
    return 2;
  v4 = objc_msgSend(v2, sel_BOOLValue);

  return (uint64_t)v4;
}

void sub_2333E6E30(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_returnPolicyURL);
  sub_23361D2D4();

}

void sub_2333E6E7C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_returnPolicyDescription);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2333E6EE0(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setReturnPolicyDescription_);

}

id ManagedOrderReturnInfo.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturnInfo.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturnInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ManagedOrderReturnInfo.displayCountdown.setter(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = v1;
  if (a1 == 2)
  {
    v3 = 0;
  }
  else
  {
    sub_233271454();
    v3 = (void *)sub_23361E9F0();
  }
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v2, sel_willChangeValueForKey_, v4);

  objc_msgSend(v2, sel_setPrimitiveDisplayCountdown_, v3);
  v5 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_didChangeValueForKey_, v5);

}

void (*ManagedOrderReturnInfo.displayCountdown.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ManagedOrderReturnInfo.displayCountdown.getter();
  return sub_2333E7190;
}

void sub_2333E7190(uint64_t a1)
{
  ManagedOrderReturnInfo.displayCountdown.setter(*(_BYTE *)(a1 + 8));
}

id static ManagedOrderReturnInfo.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedOrderReturnInfo;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedOrderReturnInfo.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

id ManagedOrderReturnInfo.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  id v3;

  v3 = sub_2333E72F0(a1, (uint64_t)a2);

  return v3;
}

id sub_2333E72F0(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  int *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v12 = (void *)sub_23361D268();
  objc_msgSend(v11, sel_setReturnPolicyURL_, v12);

  v13 = (int *)type metadata accessor for RawOrderReturnInfo();
  if (*(_QWORD *)(a1 + v13[5] + 8))
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v11, sel_setReturnPolicyDescription_, v14);

  sub_2331686A0(a1 + v13[6], (uint64_t)v10, &qword_254248700);
  v15 = sub_23361D340();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) != 1)
  {
    v17 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  }
  objc_msgSend(v11, sel_setReturnManagementURL_, v17);

  sub_2331686A0(a1 + v13[7], (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  v18 = sub_23361D634();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18) != 1)
  {
    v20 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
  }
  objc_msgSend(v11, sel_setReturnDeadline_, v20);

  ManagedOrderReturnInfo.displayCountdown.setter(*(_BYTE *)(a1 + v13[8]));
  sub_233203FEC(a1);
  return v11;
}

char *keypath_get_selector_returnPolicyURL()
{
  return sel_returnPolicyURL;
}

void sub_2333E7568(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D268();
  objc_msgSend(v2, sel_setReturnPolicyURL_, v3);

}

char *keypath_get_selector_returnPolicyDescription()
{
  return sel_returnPolicyDescription;
}

uint64_t sub_2333E75C4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_returnManagementURL, (void (*)(void))MEMORY[0x24BDCD9C0], MEMORY[0x24BDCDAC0], a2);
}

void sub_2333E75F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, &qword_254248700, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCD8D0], (SEL *)&selRef_setReturnManagementURL_);
}

char *keypath_get_selector_returnDeadline()
{
  return sel_returnDeadline;
}

uint64_t sub_2333E7630@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_returnDeadline, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_2333E765C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setReturnDeadline_);
}

uint64_t sub_2333E7690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ManagedOrderReturnInfo.displayCountdown.getter();
  *a1 = result;
  return result;
}

void sub_2333E76B8(char *a1)
{
  ManagedOrderReturnInfo.displayCountdown.setter(*a1);
}

uint64_t type metadata accessor for ManagedOrderReturnInfo()
{
  return objc_opt_self();
}

uint64_t ContentPackageReader.manifest()(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  ContentPackageReader.data(forResource:withExtension:)(0x74736566696E616DLL, 0xE800000000000000, 1852797802, 0xE400000000000000);
  v4 = v3;
  if (!v1)
  {
    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    sub_23328B9E0();
    sub_23361CA58();
    swift_release();
    *a1 = v6;
  }
  return v4;
}

void ContentPackageReader.data(forResource:withExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  _QWORD *v14;
  unint64_t v15;

  v10 = *(os_unfair_lock_s **)(v4 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v11 = v4 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v12 = v10 + 4;
  v13 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_23319A0E0(v12, v11, (uint64_t (*)(_QWORD))sub_2333E8890);
  os_unfair_lock_unlock(v13);
  if (!v5 && v15 >> 60 == 15)
  {
    sub_2333E88AC();
    swift_allocError();
    *v14 = a1;
    v14[1] = a2;
    v14[2] = a3;
    v14[3] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

uint64_t ContentPackageReader.__allocating_init(bundleURL:isBundleOwner:)(uint64_t a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ContentPackageReader.init(bundleURL:isBundleOwner:)(a1, a2);
  return v4;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ContentPackageReader.close()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = (id *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2333E8FAC(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2333E799C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  id *v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  id *v17;
  os_unfair_lock_s *v18;
  _QWORD v20[2];

  v7 = type metadata accessor for OrderMessagesPreviewMetadata.OrderPreview();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  sub_233289B88(a2, (uint64_t)v10);
  if (v3)
  {
    v13 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v14 = (id *)&v13[4];
    v15 = v13 + 6;
    os_unfair_lock_lock(v13 + 6);
    sub_2333E8FAC(v14, a1);
    os_unfair_lock_unlock(v15);
    swift_willThrow();
  }
  else
  {
    sub_2333E978C((uint64_t)v10, (uint64_t)v12);
    v16 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v17 = (id *)&v16[4];
    v18 = v16 + 6;
    os_unfair_lock_lock(v16 + 6);
    sub_2333E8FAC(v17, a1);
    os_unfair_lock_unlock(v18);
    sub_2333E978C((uint64_t)v12, a3);
  }
  return swift_release();
}

void sub_2333E7B08(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, int a5@<W5>, void *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  os_unfair_lock_s *v12;
  id *v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  id *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v26[6];
  unsigned int v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  int v30;
  __int16 v31;
  char v32;

  v31 = a5 & 0x101;
  v32 = BYTE2(a5) & 1;
  sub_233350E78(a2, a3, a4, (unsigned __int8 *)&v31, a6, (uint64_t)v26);
  if (v7)
  {
    v12 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v13 = (id *)&v12[4];
    v14 = v12 + 6;
    os_unfair_lock_lock(v12 + 6);
    sub_2333E8FAC(v13, a1);
    os_unfair_lock_unlock(v14);
    swift_willThrow();
    swift_release();
  }
  else
  {
    v18 = v26[0];
    v19 = v26[1];
    v20 = v26[2];
    v21 = v26[3];
    v24 = v26[5];
    v22 = v26[4];
    v23 = v27 | ((unint64_t)v28 << 32);
    v30 = v29;
    v15 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v16 = (id *)&v15[4];
    v17 = v15 + 6;
    os_unfair_lock_lock(v15 + 6);
    sub_2333E8FAC(v16, a1);
    os_unfair_lock_unlock(v17);
    swift_release();
    *(_QWORD *)a7 = v18;
    *(_QWORD *)(a7 + 8) = v19;
    *(_QWORD *)(a7 + 16) = v20;
    *(_QWORD *)(a7 + 24) = v21;
    *(_QWORD *)(a7 + 32) = v22;
    *(_QWORD *)(a7 + 40) = v24;
    *(_DWORD *)(a7 + 48) = v23;
    *(_BYTE *)(a7 + 52) = BYTE4(v23);
    *(_BYTE *)(a7 + 53) = v30;
  }
  swift_release();
  sub_23316BEA4(a3, a4);

}

void sub_2333E7CF8(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, int a6@<W6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  os_unfair_lock_s *v13;
  id *v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  id *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v28[6];
  unsigned int v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  int v32;
  __int16 v33;
  char v34;

  v33 = a6 & 0x101;
  v34 = BYTE2(a6) & 1;
  sub_2333519A0(a2, a3, a4, a5, (unsigned __int8 *)&v33, (unint64_t)a7, v28);
  if (v8)
  {
    v13 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v14 = (id *)&v13[4];
    v15 = v13 + 6;
    os_unfair_lock_lock(v13 + 6);
    sub_2333E8FAC(v14, a1);
    os_unfair_lock_unlock(v15);
    swift_willThrow();
    swift_release();

    swift_release();
  }
  else
  {
    v19 = v28[0];
    v20 = v28[1];
    v21 = v28[2];
    v22 = v28[3];
    v25 = v28[5];
    v23 = v28[4];
    v24 = v29 | ((unint64_t)v30 << 32);
    v32 = v31;
    v16 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v17 = (id *)&v16[4];
    v18 = v16 + 6;
    os_unfair_lock_lock(v16 + 6);
    sub_2333E8FAC(v17, a1);
    os_unfair_lock_unlock(v18);
    swift_release();
    *(_QWORD *)a8 = v19;
    *(_QWORD *)(a8 + 8) = v20;
    *(_QWORD *)(a8 + 16) = v21;
    *(_QWORD *)(a8 + 24) = v22;
    *(_QWORD *)(a8 + 32) = v23;
    *(_QWORD *)(a8 + 40) = v25;
    *(_DWORD *)(a8 + 48) = v24;
    *(_BYTE *)(a8 + 52) = BYTE4(v24);
    *(_BYTE *)(a8 + 53) = v32;
    swift_release();

  }
  sub_23316BEA4(a4, a5);

}

void ContentPackageReader.closeAfter<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  id *v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  id *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;

  v5 = v3;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = (void (*)(void))MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9();
  if (v4)
  {
    v12 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v13 = (id *)&v12[4];
    v14 = v12 + 6;
    os_unfair_lock_lock(v12 + 6);
    sub_2333E8FAC(v13, v5);
    os_unfair_lock_unlock(v14);
    swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v11, a2);
    v15 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v16 = (id *)&v15[4];
    v17 = v15 + 6;
    os_unfair_lock_lock(v15 + 6);
    sub_2333E8FAC(v16, v5);
    os_unfair_lock_unlock(v17);
  }
}

uint64_t ContentPackageReader.closeAfterAsync<A>(_:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[3] = a4;
  v5[4] = v4;
  v5[2] = a1;
  v5[5] = *(_QWORD *)(a4 - 8);
  v7 = swift_task_alloc();
  v5[6] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_2333E80C0;
  return v10(v7);
}

uint64_t sub_2333E80C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2333E8124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  id *v4;
  os_unfair_lock_s *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24));
  v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v4 = (id *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_2333E8FAC(v4, v2);
  os_unfair_lock_unlock(v5);
  if (v1)
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333E81D8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  id *v3;
  os_unfair_lock_s *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v3 = (id *)&v2[4];
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_2333E8FAC(v3, v1);
  os_unfair_lock_unlock(v4);
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ContentPackageReader.localizedString(forKey:table:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v6;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2331E06B8(v3, v2, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_2331E08D8, &v6);
  os_unfair_lock_unlock(v4);
  return v6;
}

uint64_t ContentPackageReaderError.errorDescription.getter()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return 0x6920656C646E7542;
  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    sub_23361E27C();
    sub_23361E27C();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0xD000000000000010;
}

uint64_t ContentPackageReader.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContentPackageReader.init(bundleURL:isBundleOwner:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;

  v3 = v2;
  v6 = objc_allocWithZone(MEMORY[0x24BDD1488]);
  v7 = (void *)sub_23361D268();
  v8 = objc_msgSend(v6, sel_initWithURL_, v7);

  if (v8)
  {
    v9 = v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v10 = sub_23361D340();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_isBundleOwner) = a2 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604DBB8);
    v12 = swift_allocObject();
    *(_DWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 16) = v8;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock) = v12;
  }
  else
  {
    sub_2333E88AC();
    swift_allocError();
    *v13 = 0u;
    v13[1] = 0u;
    swift_willThrow();
    v14 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
    swift_deallocPartialClassInstance();
  }
  return v3;
}

void ContentPackageReader.dataIfPresent(forResource:withExtension:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_23319A0E0(v3, v2, (uint64_t (*)(_QWORD))sub_2333E980C);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_2333E8658@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v27 = a2;
  v28 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_10:
    result = sub_2331A046C((uint64_t)v11);
    v22 = 0;
    v23 = 0xF000000000000000;
LABEL_11:
    v24 = v28;
    *v28 = v22;
    v24[1] = v23;
    return result;
  }
  v16 = (void *)sub_23361E12C();
  if (a3)
    v17 = (void *)sub_23361E12C();
  else
    v17 = 0;
  v18 = objc_msgSend(a1, sel_URLForResource_withExtension_, v16, v17, v27);

  if (v18)
  {
    sub_23361D2D4();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  v20 = v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, v19, 1, v12);
  sub_2331A04AC((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    goto LABEL_10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v25 = sub_23361D358();
  if (!v20)
  {
    v22 = v25;
    v23 = v26;
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_11;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_2333E8890@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2333E8658(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

unint64_t sub_2333E88AC()
{
  unint64_t result;

  result = qword_25604DBA0;
  if (!qword_25604DBA0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ContentPackageReaderError, &type metadata for ContentPackageReaderError);
    atomic_store(result, (unint64_t *)&qword_25604DBA0);
  }
  return result;
}

Swift::Bool __swiftcall ContentPackageReader.hasData(forResource:withExtension:)(Swift::String forResource, Swift::String_optional withExtension)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  Swift::Bool v8;

  v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v4 = v2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v5 = v3 + 4;
  v6 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_2333EC2D8(v5, v4, (void (*)(uint64_t *__return_ptr, _QWORD))sub_2333E9354, &v8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_2333E8974@<X0>(void *a1@<X0>, void *a2@<X4>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  _QWORD v18[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - v10;
  if (!a1)
  {
    v15 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
LABEL_9:
    v16 = 0;
    goto LABEL_10;
  }
  v12 = (void *)sub_23361E12C();
  if (a2)
    a2 = (void *)sub_23361E12C();
  v13 = objc_msgSend(a1, sel_URLForResource_withExtension_, v12, a2);

  if (v13)
  {
    sub_23361D2D4();

    v14 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  }
  else
  {
    v14 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_2331A04AC((uint64_t)v9, (uint64_t)v11);
  sub_23361D340();
  v16 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14) == 1)
    goto LABEL_9;
LABEL_10:
  result = sub_2331A046C((uint64_t)v11);
  *a3 = v16;
  return result;
}

void ContentPackageReader.signature()()
{
  ContentPackageReader.data(forResource:withExtension:)(0x727574616E676973, 0xE900000000000065, 0, 0);
}

void sub_2333E8B78(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  objc_class *v50;
  char *v51;
  char *v52;
  char *v53;
  id v54;
  objc_class *v55;
  char *v56;
  char *v57;
  uint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  objc_super v64;
  objc_super v65;
  _QWORD *v66;

  if (!a1)
  {
    swift_bridgeObjectRetain();
    v49 = sub_23315F950(MEMORY[0x24BEE4AF8]);
    v50 = (objc_class *)type metadata accessor for LocalizedString();
    v51 = (char *)objc_allocWithZone(v50);
    v52 = &v51[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key];
    *(_QWORD *)v52 = a2;
    *((_QWORD *)v52 + 1) = a3;
    *(_QWORD *)&v51[OBJC_IVAR____TtC10FinanceKit15LocalizedString_localizedStrings] = v49;
    v53 = &v51[OBJC_IVAR____TtC10FinanceKit15LocalizedString_developmentLocalization];
    *(_QWORD *)v53 = 0;
    *((_QWORD *)v53 + 1) = 0;
    v65.receiver = v51;
    v65.super_class = v50;
    v54 = objc_msgSendSuper2(&v65, sel_init);
LABEL_23:
    *a6 = v54;
    return;
  }
  v11 = a1;
  v12 = objc_msgSend(v11, sel_localizations);
  v13 = sub_23361E3F0();

  v14 = v11;
  swift_bridgeObjectRetain();
  v15 = sub_2331E30AC(v13, v14, a4, a5);
  swift_bridgeObjectRelease();
  v62 = v14;

  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = (_QWORD *)sub_23315F950(MEMORY[0x24BEE4AF8]);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v62, sel_developmentLocalization);
    if (v44)
    {
      v45 = v44;
      v46 = sub_23361E150();
      v48 = v47;

    }
    else
    {
      v46 = 0;
      v48 = 0;
    }
    v55 = (objc_class *)type metadata accessor for LocalizedString();
    v56 = (char *)objc_allocWithZone(v55);
    v57 = &v56[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key];
    *(_QWORD *)v57 = a2;
    *((_QWORD *)v57 + 1) = a3;
    *(_QWORD *)&v56[OBJC_IVAR____TtC10FinanceKit15LocalizedString_localizedStrings] = v17;
    v58 = (uint64_t *)&v56[OBJC_IVAR____TtC10FinanceKit15LocalizedString_developmentLocalization];
    *v58 = v46;
    v58[1] = v48;
    v64.receiver = v56;
    v64.super_class = v55;
    swift_bridgeObjectRetain();
    v54 = objc_msgSendSuper2(&v64, sel_init);

    goto LABEL_23;
  }
  v59 = a6;
  swift_bridgeObjectRetain();
  v19 = (uint64_t *)(v16 + 40);
  v60 = a2;
  v61 = a3;
  while (1)
  {
    v63 = v18;
    v21 = *(v19 - 1);
    v22 = *v19;
    swift_bridgeObjectRetain_n();
    v23 = (void *)sub_23361E12C();
    v24 = (void *)sub_23361E12C();
    v25 = (void *)sub_23361E12C();
    v26 = objc_msgSend(v62, sel_localizedStringForKey_value_table_localization_, v23, 0, v24, v25);

    v27 = sub_23361E150();
    v29 = v28;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66 = v17;
    v32 = sub_2331E3D18(v21, v22);
    v33 = v17[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v17[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v17 = v66;
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_23327DB84();
        v17 = v66;
        if ((v36 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_233279558(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_2331E3D18(v21, v22);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_26;
      v32 = v37;
      v17 = v66;
      if ((v36 & 1) != 0)
      {
LABEL_4:
        v20 = (uint64_t *)(v17[7] + 16 * v32);
        swift_bridgeObjectRelease();
        *v20 = v27;
        v20[1] = v29;
        goto LABEL_5;
      }
    }
    v17[(v32 >> 6) + 8] |= 1 << v32;
    v39 = (uint64_t *)(v17[6] + 16 * v32);
    *v39 = v21;
    v39[1] = v22;
    v40 = (uint64_t *)(v17[7] + 16 * v32);
    *v40 = v27;
    v40[1] = v29;
    v41 = v17[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_25;
    v17[2] = v43;
    swift_bridgeObjectRetain();
LABEL_5:
    v19 += 2;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    --v18;
    a2 = v60;
    a3 = v61;
    if (v63 == 1)
    {
      swift_bridgeObjectRelease();
      a6 = v59;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_23361F2B4();
  __break(1u);
}

void sub_2333E8FAC(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _QWORD v21[2];
  void *v22;
  uint64_t v23;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);

  *a1 = 0;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_isBundleOwner) == 1)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v9 = a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v10 = (void *)sub_23361D268();
    v24[0] = 0;
    v11 = objc_msgSend(v8, sel_removeItemAtURL_error_, v10, v24);

    if (v11)
    {
      v12 = v24[0];

    }
    else
    {
      v13 = v24[0];
      sub_23361D1B4();

      swift_willThrow();
      if (qword_254246760 != -1)
        swift_once();
      v14 = sub_23361DB80();
      __swift_project_value_buffer(v14, (uint64_t)qword_254246748);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
      v15 = sub_23361DB68();
      v16 = sub_23361E768();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v22 = (void *)swift_slowAlloc();
        v24[0] = v22;
        *(_DWORD *)v17 = 136315138;
        v21[1] = v17 + 4;
        sub_2333E9744();
        v18 = sub_23361F1D0();
        v23 = sub_233164DCC(v18, v19, (uint64_t *)v24);
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        _os_log_impl(&dword_233151000, v15, v16, "Failed to remove bundle at %s", v17, 0xCu);
        v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x234934590](v20, -1, -1);
        MEMORY[0x234934590](v17, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }

      swift_willThrow();
    }
  }
}

uint64_t ContentPackageReader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t ContentPackageReader.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2333E9354@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_2333E8974(a1, *(void **)(v2 + 40), a2);
}

unint64_t destroy for ContentPackageReaderError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ContentPackageReaderError(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ContentPackageReaderError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentPackageReaderError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentPackageReaderError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContentPackageReaderError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_2333E960C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2333E9624(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentPackageReaderError()
{
  return &type metadata for ContentPackageReaderError;
}

uint64_t sub_2333E9658()
{
  return type metadata accessor for ContentPackageReader();
}

uint64_t type metadata accessor for ContentPackageReader()
{
  uint64_t result;

  result = qword_25604DBE8;
  if (!qword_25604DBE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333E969C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContentPackageReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentPackageReader.__allocating_init(bundleURL:isBundleOwner:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_2333E9744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042F10;
  if (!qword_256042F10)
  {
    v1 = sub_23361D340();
    result = MEMORY[0x234934494](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_256042F10);
  }
  return result;
}

uint64_t sub_2333E978C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OrderMessagesPreviewMetadata.OrderPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333E97D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OrderMessagesPreviewMetadata.OrderPreview();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2333E980C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2333E8890(a1, a2);
}

uint64_t BankConnectAuthorizationSession.AuthSource.clientState.getter(unsigned __int16 a1)
{
  uint64_t result;
  char v2;
  _BYTE v3[7];

  if ((a1 & 0x8000) != 0 || a1 >= 0x100u)
  {
    result = sub_23361EF18();
    __break(1u);
  }
  else
  {
    v2 = a1;
    return sub_2335E4B98(&v2, v3);
  }
  return result;
}

void BankConnectAuthorizationSession.AuthSource.init(with:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2333E9924()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  int v3;

  sub_23316BEA4(v0, v1);
  if ((v1 & 0xFF000000000000) == 0x1000000000000
    && ((v2 = v0, !(_BYTE)v0) || v0 == 1))
  {
    v3 = 0;
  }
  else
  {
    v2 = 0;
    v3 = 1;
  }
  return v2 | (v3 << 16);
}

uint64_t sub_2333E9AA4(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2335E4B98(__src, &__src[a2]);
  sub_23361CC74();
  swift_allocObject();
  sub_23361CC2C();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_23361D388();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

void sub_2333E9B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  id v26;

  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    sub_23324F034();
    sub_2333EA430();
    sub_23361E60C();
    v3 = v21;
    v20 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v20 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v19 = (unint64_t)(v4 + 64) >> 6;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_23361ED08())
  {
    sub_23324F034();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v26;
    swift_unknownObjectRelease();
    v12 = v5;
    v13 = v6;
    while (v11)
    {
      v26 = v11;
      v17 = sub_2333E9F10(&v26);

      if (v2 || (v17 & 1) != 0)
        break;
      v5 = v12;
      v6 = v13;
      if (v3 < 0)
        goto LABEL_8;
LABEL_11:
      if (v6)
      {
        v13 = (v6 - 1) & v6;
        v14 = __clz(__rbit64(v6)) | (v5 << 6);
        v12 = v5;
      }
      else
      {
        v12 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return;
        }
        if (v12 >= v19)
          break;
        v15 = *(_QWORD *)(v20 + 8 * v12);
        if (!v15)
        {
          v16 = v5 + 2;
          if (v5 + 2 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
            goto LABEL_22;
          v16 = v5 + 3;
          if (v5 + 3 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
            goto LABEL_22;
          v16 = v5 + 4;
          if (v5 + 4 >= v19)
            break;
          v15 = *(_QWORD *)(v20 + 8 * v16);
          if (v15)
          {
LABEL_22:
            v12 = v16;
          }
          else
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v19)
              break;
            v15 = *(_QWORD *)(v20 + 8 * v12);
            if (!v15)
            {
              v18 = v5 + 6;
              while (v19 != v18)
              {
                v15 = *(_QWORD *)(v20 + 8 * v18++);
                if (v15)
                {
                  v12 = v18 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v13 = (v15 - 1) & v15;
        v14 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    }
  }
  sub_2331961F0();
}

uint64_t sub_2333E9E38()
{
  uint64_t v0;

  sub_233291C90(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransactionChangesObserver()
{
  return objc_opt_self();
}

uint64_t sub_2333E9F10(id *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *a1;
  v2 = objc_msgSend(*a1, sel_entity);
  v3 = objc_msgSend(v2, sel_name);

  if (v3)
  {
    v4 = sub_23361E150();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  type metadata accessor for ManagedInternalTransaction();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  v8 = sub_23361E150();
  v10 = v9;

  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v4 == v8 && v6 == v10)
    goto LABEL_16;
  v11 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_10:
    v13 = objc_msgSend(v1, sel_entity);
    v14 = objc_msgSend(v13, sel_name);

    if (v14)
    {
      v15 = sub_23361E150();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    type metadata accessor for ManagedTransaction();
    v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
    v19 = sub_23361E150();
    v21 = v20;

    if (!v17)
    {
      v12 = 0;
LABEL_20:
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
    if (v15 != v19 || v17 != v21)
    {
      v12 = sub_23361F224();
      goto LABEL_19;
    }
LABEL_16:
    v12 = 1;
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_2333EA120(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;

  v1 = objc_msgSend(a1, sel_userInfo);
  if (!v1)
    return v1 & 1;
  v2 = sub_23361E06C();

  *(_QWORD *)&v23 = sub_23361E150();
  *((_QWORD *)&v23 + 1) = v3;
  sub_23361ED50();
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_2331E3EC4((uint64_t)v22), (v5 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_23316831C((uint64_t)v22);
  if (*((_QWORD *)&v24 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256049D00);
    if (swift_dynamicCast())
      v6 = v21;
    else
      v6 = 0;
  }
  else
  {
    sub_23319F5C0((uint64_t)&v23);
    v6 = 0;
  }
  *(_QWORD *)&v23 = sub_23361E150();
  *((_QWORD *)&v23 + 1) = v7;
  sub_23361ED50();
  if (*(_QWORD *)(v2 + 16) && (v8 = sub_2331E3EC4((uint64_t)v22), (v9 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_23316831C((uint64_t)v22);
  if (*((_QWORD *)&v24 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256049D00);
    if (swift_dynamicCast())
      v10 = v21;
    else
      v10 = 0;
  }
  else
  {
    sub_23319F5C0((uint64_t)&v23);
    v10 = 0;
  }
  *(_QWORD *)&v23 = sub_23361E150();
  *((_QWORD *)&v23 + 1) = v11;
  sub_23361ED50();
  if (*(_QWORD *)(v2 + 16) && (v12 = sub_2331E3EC4((uint64_t)v22), (v13 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v2 + 56) + 32 * v12, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C((uint64_t)v22);
  if (*((_QWORD *)&v24 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256049D00);
    if (swift_dynamicCast())
      v14 = v21;
    else
      v14 = 0;
    if (v6)
    {
LABEL_29:
      sub_2333E9B50(v6);
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        LOBYTE(v1) = 1;
        return v1 & 1;
      }
    }
  }
  else
  {
    sub_23319F5C0((uint64_t)&v23);
    v14 = 0;
    if (v6)
      goto LABEL_29;
  }
  if (v10)
  {
    sub_2333E9B50(v10);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_34;
  }
  if (v14)
  {
    sub_2333E9B50(v14);
    LOBYTE(v1) = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v1) = 0;
  }
  return v1 & 1;
}

unint64_t sub_2333EA430()
{
  unint64_t result;
  unint64_t v1;

  result = qword_25604DD48;
  if (!qword_25604DD48)
  {
    v1 = sub_23324F034();
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25604DD48);
  }
  return result;
}

uint64_t static ContentPackageSignatureValidationError.Context.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23361F224();
}

uint64_t ContentPackageSignatureValidationError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ContentPackageSignatureValidationError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23361F224();
}

uint64_t ContentPackageSignatureValidator.init(signature:manifest:policy:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ContentPackageSignatureValidator.validateSignature()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __SecTrust *v4;
  __SecTrust *v5;
  _BOOL4 v6;
  CFErrorRef v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  SecTrustResultType v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  unint64_t *v24;
  unint64_t v25;
  const char *v26;
  uint64_t v27;
  __CFError *v28;
  CFStringRef v29;
  __CFString *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint32_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  unint64_t v55;
  SecTrustResultType result[2];
  CFErrorRef error;
  _OWORD v58[2];
  uint64_t v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_OWORD *)(v0 + 16);
  v58[0] = *(_OWORD *)v0;
  v58[1] = v3;
  v59 = v2;
  v4 = (__SecTrust *)sub_2333EACA0();
  if (!v1)
  {
    v5 = v4;
    error = 0;
    v6 = SecTrustEvaluateWithError(v4, &error);
    v7 = error;
    if (v6)
    {
      result[0] = kSecTrustResultInvalid;
      if (!SecTrustGetTrustResult(v5, result))
      {
        v19 = result[0];
        switch(result[0])
        {
          case kSecTrustResultInvalid:
          case kSecTrustResultOtherError:
            if (qword_254246760 != -1)
              swift_once();
            v20 = sub_23361DB80();
            __swift_project_value_buffer(v20, (uint64_t)qword_254246748);
            v21 = sub_23361DB68();
            v22 = sub_23361E768();
            if (os_log_type_enabled(v21, v22))
            {
              v23 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v23 = 67109120;
              LODWORD(v58[0]) = v19;
              sub_23361EBC4();
              _os_log_impl(&dword_233151000, v21, v22, "Unreachable trust evaluation. Result: %u", v23, 8u);
              MEMORY[0x234934590](v23, -1, -1);
            }

            sub_2333EAE74();
            swift_allocError();
            v25 = 0xD000000000000030;
            v26 = "The order cannot be read because it isn't valid.";
            goto LABEL_44;
          case kSecTrustResultProceed:
          case kSecTrustResultUnspecified:

            return;
          default:
            v47 = SecTrustCopyFailureDescription();
            if (v47)
            {
              v48 = (void *)v47;
              v49 = sub_23361E150();
              v51 = v50;

            }
            else
            {
              v49 = 0;
              v51 = 0xE000000000000000;
            }
            if (qword_254246760 != -1)
              swift_once();
            v52 = sub_23361DB80();
            __swift_project_value_buffer(v52, (uint64_t)qword_254246748);
            swift_bridgeObjectRetain();
            v38 = sub_23361DB68();
            v53 = sub_23361E768();
            if (!os_log_type_enabled(v38, v53))
              goto LABEL_42;
            v40 = swift_slowAlloc();
            v41 = swift_slowAlloc();
            *(_QWORD *)&v58[0] = v41;
            *(_DWORD *)v40 = 67109378;
            sub_23361EBC4();
            *(_WORD *)(v40 + 8) = 2080;
            swift_bridgeObjectRetain();
            sub_233164DCC(v49, v51, (uint64_t *)v58);
            sub_23361EBC4();
            swift_bridgeObjectRelease_n();
            v42 = "Certificate not trusted. Result: %u Description: %s";
            v43 = v38;
            v44 = v53;
            v45 = (uint8_t *)v40;
            v46 = 18;
            goto LABEL_33;
        }
      }
      v8 = SecTrustCopyFailureDescription();
      if (v8)
      {
        v9 = (void *)v8;
        v10 = sub_23361E150();
        v12 = v11;

      }
      else
      {
        v10 = 0;
        v12 = 0xE000000000000000;
      }
      if (qword_254246760 != -1)
        swift_once();
      v37 = sub_23361DB80();
      __swift_project_value_buffer(v37, (uint64_t)qword_254246748);
      swift_bridgeObjectRetain();
      v38 = sub_23361DB68();
      v39 = sub_23361E768();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v41 = swift_slowAlloc();
        *(_QWORD *)&v58[0] = v41;
        *(_DWORD *)v40 = 136315138;
        swift_bridgeObjectRetain();
        sub_233164DCC(v10, v12, (uint64_t *)v58);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        v42 = "Failed to get trust result. Description: %s";
        v43 = v38;
        v44 = v39;
        v45 = (uint8_t *)v40;
        v46 = 12;
LABEL_33:
        _os_log_impl(&dword_233151000, v43, v44, v42, v45, v46);
        swift_arrayDestroy();
        MEMORY[0x234934590](v41, -1, -1);
        MEMORY[0x234934590](v40, -1, -1);

      }
      else
      {
LABEL_42:

        swift_bridgeObjectRelease_n();
      }
      sub_2333EAE74();
      swift_allocError();
      v25 = 0xD000000000000088;
      v26 = "The orderTypeIdentifier or teamIdentifier provided may not match your certificate, or the certificate trust "
            "chain could not be verified.";
LABEL_44:
      *v24 = v25;
      v24[1] = (unint64_t)(v26 - 32) | 0x8000000000000000;
      swift_willThrow();

LABEL_45:
      return;
    }
    v13 = SecTrustCopyFailureDescription();
    if (v13)
    {
      v14 = (void *)v13;
      v15 = sub_23361E150();
      v17 = v16;

      v18 = v15 & 0xFFFFFFFFFFFFLL;
      v54 = v15;
      v55 = v17;
      if (!v7)
        goto LABEL_23;
    }
    else
    {
      v18 = 0;
      v17 = 0xE000000000000000;
      v54 = 0;
      v55 = 0xE000000000000000;
      if (!v7)
      {
LABEL_23:
        if (qword_254246760 != -1)
          swift_once();
        v31 = sub_23361DB80();
        __swift_project_value_buffer(v31, (uint64_t)qword_254246748);
        v32 = sub_23361DB68();
        v33 = sub_23361E768();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc();
          v35 = swift_slowAlloc();
          *(_QWORD *)result = v35;
          *(_DWORD *)v34 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_233164DCC(v54, v55, (uint64_t *)result);
          sub_23361EBC4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_233151000, v32, v33, "Failed to evaluate trust. Description: %s", v34, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x234934590](v35, -1, -1);
          MEMORY[0x234934590](v34, -1, -1);
        }

        sub_2333EAE74();
        swift_allocError();
        *v36 = 0xD000000000000088;
        v36[1] = 0x8000000233675E00;
        swift_willThrow();

        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    if ((v17 & 0x2000000000000000) != 0)
      v27 = HIBYTE(v17) & 0xF;
    else
      v27 = v18;
    v28 = v7;
    if (v27)
      sub_23361E27C();
    v29 = CFErrorCopyDescription(v28);
    if (!v29)
    {
      __break(1u);
      JUMPOUT(0x2333EAC80);
    }
    v30 = (__CFString *)v29;
    sub_23361E150();

    sub_23361E27C();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
}

uint64_t sub_2333EACA0()
{
  void *v0;
  void *v1;
  _QWORD *v2;

  v0 = (void *)sub_23361D3AC();
  v1 = (void *)sub_23361D3AC();
  SecCMSVerifySignedData();

  sub_2333EAE74();
  swift_allocError();
  *v2 = 0xD00000000000002ELL;
  v2[1] = 0x8000000233675ED0;
  swift_willThrow();

  return 0;
}

unint64_t sub_2333EAE74()
{
  unint64_t result;

  result = qword_25604DD50;
  if (!qword_25604DD50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ContentPackageSignatureValidationError, &type metadata for ContentPackageSignatureValidationError);
    atomic_store(result, (unint64_t *)&qword_25604DD50);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentPackageSignatureValidationError()
{
  return &type metadata for ContentPackageSignatureValidationError;
}

ValueMetadata *type metadata accessor for ContentPackageSignatureValidationError.Context()
{
  return &type metadata for ContentPackageSignatureValidationError.Context;
}

void destroy for ContentPackageSignatureValidator(uint64_t a1)
{
  sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_23316BEA4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));

}

uint64_t *initializeWithCopy for ContentPackageSignatureValidator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = a2[1];
  sub_2331D1374(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  sub_2331D1374(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  v8 = (void *)a2[4];
  a1[4] = (uint64_t)v8;
  v9 = v8;
  return a1;
}

uint64_t *assignWithCopy for ContentPackageSignatureValidator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v4 = *a2;
  v5 = a2[1];
  sub_2331D1374(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23316BEA4(v6, v7);
  v8 = a2[2];
  v9 = a2[3];
  sub_2331D1374(v8, v9);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_23316BEA4(v10, v11);
  v12 = (void *)a2[4];
  v13 = (void *)a1[4];
  a1[4] = (uint64_t)v12;
  v14 = v12;

  return a1;
}

uint64_t *assignWithTake for ContentPackageSignatureValidator(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23316BEA4(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_23316BEA4(v6, v7);
  v8 = (void *)a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for ContentPackageSignatureValidator()
{
  return &type metadata for ContentPackageSignatureValidator;
}

id ManagedOrderPaymentTransaction.__allocating_init(_:bundle:context:)(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  os_unfair_lock_s *v26;
  void *v27;
  int v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v5 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a3);
  v6 = *a1;
  v7 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  v8 = v5;
  v9 = objc_msgSend(v7, sel_initWithShort_, v6);
  v10 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_willChangeValueForKey_, v10);

  objc_msgSend(v8, sel_setPrimitiveTransactionType_, v9);
  v11 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_didChangeValueForKey_, v11);

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, a1[1]);
  v13 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_willChangeValueForKey_, v13);

  objc_msgSend(v8, sel_setPrimitiveStatus_, v12);
  v14 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_didChangeValueForKey_, v14);

  v15 = (void *)OrderBundle.localizedString(forKey:)();
  objc_msgSend(v8, sel_setPaymentMethodDisplayName_, v15);

  v17 = *((_QWORD *)a1 + 4);
  v16 = *((_QWORD *)a1 + 5);
  v31 = *((_DWORD *)a1 + 2);
  v32 = *(_OWORD *)(a1 + 12);
  v33 = v17;
  v34 = v16;
  swift_bridgeObjectRetain();
  ManagedOrderPaymentTransaction.amount.setter(&v31);
  if (*((_QWORD *)a1 + 9))
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v8, sel_setApplePayTransactionIdentifier_, v18, a2);

  v19 = type metadata accessor for RawOrderPaymentTransaction();
  v20 = (void *)sub_23361D5B0();
  objc_msgSend(v8, sel_setCreatedAt_, v20);

  if (*(_QWORD *)&a1[*(int *)(v19 + 40) + 8])
  {
    MEMORY[0x24BDAC7A8](v21);
    v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v24 = v22 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v25 = (_QWORD *)(v23 + 16);
    v26 = (os_unfair_lock_s *)(v23 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v26);
    LOBYTE(v24) = sub_23319A5C4(v25, v24, (void (*)(uint64_t *__return_ptr, _QWORD))sub_2333E9354);
    os_unfair_lock_unlock(v26);
    v27 = 0;
    if ((v24 & 1) != 0)
      v27 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v8, sel_setReceiptName_, v27);

  swift_release();
  sub_2333C6080((uint64_t)a1);
  return v8;
}

void ManagedOrderPaymentTransaction.transactionType.getter(BOOL *a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willAccessValueForKey_, v3);

  v4 = objc_msgSend(v1, sel_primitiveTransactionType);
  v5 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didAccessValueForKey_, v5);

  v6 = objc_msgSend(v4, sel_shortValue);
  if (v6 > 1)
    __break(1u);
  else
    *a1 = v6 != 0;
}

void ManagedOrderPaymentTransaction.status.getter(_BYTE *a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willAccessValueForKey_, v3);

  v4 = objc_msgSend(v1, sel_primitiveStatus);
  v5 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didAccessValueForKey_, v5);

  v6 = objc_msgSend(v4, sel_shortValue);
  if (v6 > 4)
    __break(1u);
  else
    *a1 = v6;
}

__n128 ManagedOrderPaymentTransaction.amount.getter@<Q0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  int v12;
  __n128 result;
  __n128 v14;
  int v15;
  __n128 v16;

  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willAccessValueForKey_, v3);

  v4 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willAccessValueForKey_, v4);

  v5 = objc_msgSend(v1, sel_primitiveAmount);
  v6 = objc_msgSend(v1, sel_primitiveCurrencyCode);
  v7 = sub_23361E150();
  v9 = v8;

  v10 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didAccessValueForKey_, v10);

  v11 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didAccessValueForKey_, v11);

  objc_msgSend(v5, sel_decimalValue);
  v12 = v15;
  v14 = v16;

  *(_DWORD *)a1 = v12;
  result = v14;
  *(__n128 *)(a1 + 4) = v14;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v9;
  return result;
}

FinanceKit::ManagedOrderPaymentTransaction::TransactionType_optional __swiftcall ManagedOrderPaymentTransaction.TransactionType.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (FinanceKit::ManagedOrderPaymentTransaction::TransactionType_optional)rawValue;
}

uint64_t ManagedOrderPaymentTransaction.TransactionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_2333EB724(unsigned __int8 *a1, void **a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *a2;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v2, sel_willChangeValueForKey_, v4);

  objc_msgSend(v2, sel_setPrimitiveTransactionType_, v3);
  v5 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_didChangeValueForKey_, v5);

}

void ManagedOrderPaymentTransaction.transactionType.setter(unsigned __int8 *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  objc_msgSend(v1, sel_setPrimitiveTransactionType_, v2);
  v4 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

void ManagedOrderPaymentTransaction.transactionType.modify(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  unsigned int v8;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit30ManagedOrderPaymentTransaction_transactionTypeKey];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit30ManagedOrderPaymentTransaction_transactionTypeKey + 8];
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willAccessValueForKey_, v5);

  v6 = objc_msgSend(v1, sel_primitiveTransactionType);
  v7 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didAccessValueForKey_, v7);

  v8 = objc_msgSend(v6, sel_shortValue);
  if (v8 > 1)
    __break(1u);
  else
    *(_BYTE *)(a1 + 24) = v8 != 0;
}

void sub_2333EB9AC(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)a1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *(unsigned __int8 *)(a1 + 24));
  v2 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v2);

  objc_msgSend(v1, sel_setPrimitiveTransactionType_, v4);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v3);

}

FinanceKit::ManagedOrderPaymentTransaction::Status_optional __swiftcall ManagedOrderPaymentTransaction.Status.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((unsigned __int16)rawValue >= 5u)
    v2 = 5;
  *v1 = v2;
  return (FinanceKit::ManagedOrderPaymentTransaction::Status_optional)rawValue;
}

uint64_t ManagedOrderPaymentTransaction.Status.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::ManagedOrderPaymentTransaction::Status_optional sub_2333EBA88(Swift::Int16 *a1)
{
  return ManagedOrderPaymentTransaction.Status.init(rawValue:)(*a1);
}

void sub_2333EBA90(unsigned __int8 *a1, void **a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *a2;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v4 = (void *)sub_23361E12C();
  objc_msgSend(v2, sel_willChangeValueForKey_, v4);

  objc_msgSend(v2, sel_setPrimitiveStatus_, v3);
  v5 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_didChangeValueForKey_, v5);

}

void ManagedOrderPaymentTransaction.status.setter(unsigned __int8 *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  objc_msgSend(v1, sel_setPrimitiveStatus_, v2);
  v4 = (id)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

void (*ManagedOrderPaymentTransaction.status.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedOrderPaymentTransaction.status.getter((_BYTE *)(a1 + 8));
  return sub_2333EBC60;
}

void sub_2333EBC60(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)a1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *(unsigned __int8 *)(a1 + 8));
  v2 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v2);

  objc_msgSend(v1, sel_setPrimitiveStatus_, v4);
  v3 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v3);

}

double sub_2333EBD28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  double v6[2];
  uint64_t v7;
  uint64_t v8;

  ManagedOrderPaymentTransaction.amount.getter((uint64_t)&v5);
  v2 = v7;
  v3 = v8;
  *(_DWORD *)a1 = v5;
  result = v6[0];
  *(_OWORD *)(a1 + 4) = *(_OWORD *)v6;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  return result;
}

void sub_2333EBD70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 24);
  v1 = *(_QWORD *)(a1 + 32);
  v3 = *(_DWORD *)a1;
  v4 = *(_OWORD *)(a1 + 4);
  v5 = v2;
  v6 = v1;
  swift_bridgeObjectRetain();
  ManagedOrderPaymentTransaction.amount.setter(&v3);
}

void ManagedOrderPaymentTransaction.amount.setter(int *a1)
{
  void *v1;
  int v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  __int128 v12;

  v3 = *a1;
  v4 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  v11 = v3;
  v12 = *(_OWORD *)(a1 + 1);
  v5 = objc_msgSend(v4, sel_initWithDecimal_, &v11);
  v6 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v6);

  v7 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v7);

  objc_msgSend(v1, sel_setPrimitiveAmount_, v5);
  v8 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setPrimitiveCurrencyCode_, v8);

  v9 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v9);

  v10 = (void *)sub_23361E12C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v10);

}

void (*ManagedOrderPaymentTransaction.amount.modify(_QWORD *a1))(int **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  ManagedOrderPaymentTransaction.amount.getter((uint64_t)v3);
  return sub_2333EBF80;
}

void sub_2333EBF80(int **a1, char a2)
{
  int *v2;
  int v3;
  __int16 v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;
  __int16 v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *a1;
  v3 = **a1;
  v4 = *((_WORD *)*a1 + 2);
  v5 = *((_WORD *)*a1 + 3);
  v6 = *((_WORD *)*a1 + 4);
  v7 = *((_WORD *)*a1 + 5);
  v8 = *((_WORD *)*a1 + 6);
  v9 = *((_WORD *)*a1 + 7);
  v10 = *((_WORD *)*a1 + 8);
  v11 = *((_WORD *)*a1 + 9);
  v13 = *((_QWORD *)*a1 + 3);
  v12 = *((_QWORD *)*a1 + 4);
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v11;
  v23 = v13;
  v24 = v12;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    ManagedOrderPaymentTransaction.amount.setter(&v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    ManagedOrderPaymentTransaction.amount.setter(&v14);
  }
  free(v2);
}

void sub_2333EC048(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_createdAt);
  sub_23361D5EC();

}

id ManagedOrderPaymentTransaction.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderPaymentTransaction.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderPaymentTransaction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2333EC2D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, _QWORD)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_23319A5C4(a1, a2, a3);
  if (!v4)
    *a4 = result & 1;
  return result;
}

unint64_t sub_2333EC308()
{
  unint64_t result;

  result = qword_25604DD78;
  if (!qword_25604DD78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderPaymentTransaction.TransactionType, &type metadata for ManagedOrderPaymentTransaction.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25604DD78);
  }
  return result;
}

unint64_t sub_2333EC350()
{
  unint64_t result;

  result = qword_25604DD80;
  if (!qword_25604DD80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderPaymentTransaction.Status, &type metadata for ManagedOrderPaymentTransaction.Status);
    atomic_store(result, (unint64_t *)&qword_25604DD80);
  }
  return result;
}

void sub_2333EC394(_BYTE *a1@<X8>)
{
  BOOL v2;

  ManagedOrderPaymentTransaction.transactionType.getter(&v2);
  *a1 = v2;
}

void sub_2333EC3D0(_BYTE *a1@<X8>)
{
  char v2;

  ManagedOrderPaymentTransaction.status.getter(&v2);
  *a1 = v2;
}

char *keypath_get_selector_receiptName()
{
  return sel_receiptName;
}

void sub_2333EC420(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_receiptName, a2);
}

void sub_2333EC43C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setReceiptName_);
}

void sub_2333EC458(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_applePayTransactionIdentifier, a2);
}

void sub_2333EC474(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setApplePayTransactionIdentifier_);
}

char *keypath_get_selector_paymentMethodDisplayName()
{
  return sel_paymentMethodDisplayName;
}

id sub_2333EC49C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_paymentMethodDisplayName);
  *a2 = result;
  return result;
}

id sub_2333EC4D4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPaymentMethodDisplayName_, *a1);
}

char *keypath_get_selector_createdAt()
{
  return sel_createdAt;
}

void sub_2333EC4F8(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setCreatedAt_, v3);

}

id sub_2333EC540@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_positionIndex);
  *a2 = (_WORD)result;
  return result;
}

id sub_2333EC570(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPositionIndex_, *a1);
}

uint64_t type metadata accessor for ManagedOrderPaymentTransaction()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ManagedOrderPaymentTransaction.TransactionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2333EC5F0 + 4 * byte_233645275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2333EC624 + 4 * asc_233645270[v4]))();
}

uint64_t sub_2333EC624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333EC62C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333EC634);
  return result;
}

uint64_t sub_2333EC640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333EC648);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2333EC64C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333EC654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderPaymentTransaction.TransactionType()
{
  return &type metadata for ManagedOrderPaymentTransaction.TransactionType;
}

uint64_t storeEnumTagSinglePayload for ManagedOrderPaymentTransaction.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2333EC6BC + 4 * byte_23364527F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2333EC6F0 + 4 * byte_23364527A[v4]))();
}

uint64_t sub_2333EC6F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333EC6F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333EC700);
  return result;
}

uint64_t sub_2333EC70C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333EC714);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2333EC718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333EC720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderPaymentTransaction.Status()
{
  return &type metadata for ManagedOrderPaymentTransaction.Status;
}

uint64_t DiscreteRetryStrategy.earliestRetryDate(afterAttempts:lastAttemptDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (!v5)
  {
LABEL_7:
    v10 = sub_23361D634();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a2;
    v13 = 1;
    return v11(v12, v13, 1, v10);
  }
  v6 = *(_QWORD *)(v4 + 32);
  v7 = v4 + 40;
  if (v6 < result)
  {
    while (--v5)
    {
      v8 = *(_QWORD *)(v7 + 8);
      v9 = __OFADD__(v6, v8);
      v6 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      v7 += 16;
      if (v6 >= result)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  sub_23361D544();
  v10 = sub_23361D634();
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v12 = a2;
  v13 = 0;
  return v11(v12, v13, 1, v10);
}

uint64_t DiscreteRetryStrategy.plan.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiscreteRetryStrategy.plan.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DiscreteRetryStrategy.plan.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for DiscreteRetryStrategy()
{
  return &type metadata for DiscreteRetryStrategy;
}

id ImageProcessingXPCService.listener.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a1);
  v10 = objc_msgSend((id)objc_opt_self(), sel_serviceListener);
  type metadata accessor for XPCEntitlementChecker();
  v11 = swift_allocObject();
  v12 = sub_233166A64(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542468A0);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v11 + 16) = v13;
  v14 = sub_2333ECB18(v10, v11, (uint64_t)sub_2333ECAEC, v9);

  swift_release();
  return v14;
}

uint64_t sub_2333EC984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21[2];
  uint64_t v22[5];

  v7 = *(_QWORD *)(a4 + 8);
  v22[3] = a3;
  v22[4] = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a2, a3);
  sub_233177068((uint64_t)v22, (uint64_t)v21);
  sub_2332D69A8((uint64_t)v17);
  LOBYTE(a2) = v17[0];
  v9 = v17[1];
  v10 = v17[2];
  v11 = v18;
  v12 = v19;
  v13 = v20;
  type metadata accessor for ImageProcessingXPCServiceModel();
  v14 = swift_allocObject();
  sub_23318B020(v21, v14 + 16);
  *(_BYTE *)(v14 + 56) = a2;
  *(_BYTE *)(v14 + 57) = v9;
  *(_BYTE *)(v14 + 58) = v10;
  *(_QWORD *)(v14 + 64) = v11;
  *(_QWORD *)(v14 + 72) = v12;
  *(_BYTE *)(v14 + 80) = v13;
  v15 = *(void **)(a1 + 16);
  objc_msgSend(v15, sel_setExportedObject_, v14);
  swift_release();
  objc_msgSend(v15, sel_resume);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
}

uint64_t sub_2333ECA94()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_2333ECAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_2333EC984(a1, v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

id sub_2333ECB18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  objc_super v16;
  _QWORD v17[5];

  v17[3] = type metadata accessor for XPCEntitlementChecker();
  v17[4] = &protocol witness table for XPCEntitlementChecker;
  v17[0] = a2;
  v8 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604DD88);
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[qword_25604F3A0] = a1;
  v10 = &v9[qword_25604F3A8];
  v11 = v9;
  v12 = a1;
  sub_233177068((uint64_t)v17, (uint64_t)v10);
  v13 = &v11[qword_25604F3B0];
  *(_QWORD *)v13 = a3;
  *((_QWORD *)v13 + 1) = a4;
  swift_retain();

  v16.receiver = v11;
  v16.super_class = v8;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v12, sel_setDelegate_, v14);
  objc_msgSend(v12, sel_resume);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return v14;
}

uint64_t dispatch thunk of ImageProcessingXPCServiceProviding.backgroundColor(forImageWithData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ImageProcessingXPCServiceProviding.renderThumbnail(with:size:scale:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t MapsInsightsService.__allocating_init(connection:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  objc_msgSend(*(id *)(a1 + 16), sel_resume);
  return v2;
}

uint64_t MapsInsightsService.init(connection:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  objc_msgSend(*(id *)(a1 + 16), sel_resume);
  return v1;
}

uint64_t MapsInsightsService.__allocating_init(extensionFinder:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2333ECCD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 16);
  v3 = v1[3];
  v2 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_2333ECD58;
  return static ExtensionServiceConfiguration.makeConnection<A>(extensionFinder:withBundleIdentifiers:)((uint64_t)v4, 0, (uint64_t)&type metadata for MapsInsightsServiceConfiguration, v3, (uint64_t)&protocol witness table for MapsInsightsServiceConfiguration, v2);
}

uint64_t sub_2333ECD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 32) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_2333ECDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  type metadata accessor for MapsInsightsService();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  objc_msgSend(*(id *)(v1 + 16), sel_resume);
  __swift_destroy_boxed_opaque_existential_0(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_2333ECE3C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for MapsInsightsService()
{
  return objc_opt_self();
}

uint64_t MapsInsightsService.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t MapsInsightsService.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for MapsInsightsService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapsInsightsService.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t BankConnectPassKitTransactionsDataSourceProvider.makePassKitTransactionsDataSource()@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init);
  v3 = type metadata accessor for BankConnectPassKitTransactionsDataSource();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for BankConnectPassKitTransactionsDataSource;
  *a1 = result;
  return result;
}

uint64_t sub_2333ECF54@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init);
  v3 = type metadata accessor for BankConnectPassKitTransactionsDataSource();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for BankConnectPassKitTransactionsDataSource;
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsDataSourceProviding.makePassKitTransactionsDataSource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for BankConnectPassKitTransactionsDataSourceProvider()
{
  return &type metadata for BankConnectPassKitTransactionsDataSourceProvider;
}

unint64_t static ManagedConsent.existingConsent(withConsentID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v7 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id ManagedConsent.__allocating_init(_:managedInstitution:context:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  id v8;
  void *v9;
  void *v10;

  v4 = v3;
  v8 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  v9 = (void *)sub_23361D658();
  objc_msgSend(v8, sel_setId_, v9);

  type metadata accessor for BankConnectConsent();
  v10 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setConsentID_, v10);

  objc_msgSend(v8, sel_setInstitutionObject_, a2);
  _s10FinanceKit14ManagedConsentC6update_4withyAC_AA011BankConnectD0VtFZ_0(v8, a1);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  return v8;
}

void ManagedConsent.grantedAccounts.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_accountObjects);
  type metadata accessor for ManagedInternalAccount();
  sub_233167C58((unint64_t *)&qword_256042D70, (uint64_t (*)(uint64_t))type metadata accessor for ManagedInternalAccount, MEMORY[0x24BEE5BD8]);
  sub_23361E5D0();

  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_23361EF30())
      sub_2333F0D68(MEMORY[0x24BEE4AF8], &qword_25604DE78, (void (*)(_QWORD))type metadata accessor for ManagedInternalAccount);
  }
}

void ManagedConsent.institution.getter(uint64_t a1@<X8>)
{
  void *v1;

  Institution.init(_:)(objc_msgSend(v1, sel_institutionObject), a1);
}

uint64_t static ManagedConsent.existingConsents(forInstitutionID:in:)(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  objc_super v9;

  v9.receiver = (id)swift_getObjCClassFromMetadata();
  v9.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v4 = objc_msgSendSuper2(&v9, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 64) = sub_2331683F0();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  v6 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v6);

  v7 = sub_23361E984();
  return v7;
}

id ManagedConsent.__allocating_init(_:consentStatus:managedInstitution:context:)(uint64_t a1, unsigned __int8 *a2, void *a3, void *a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v32;
  unsigned int v33;
  void *v34;
  id v35;

  v5 = v4;
  v34 = a3;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361D6A0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *a2;
  v19 = objc_allocWithZone(v5);
  v35 = a4;
  v20 = objc_msgSend(v19, sel_initWithContext_, a4);
  sub_23361D694();
  v21 = (void *)sub_23361D658();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  objc_msgSend(v20, sel_setId_, v21);

  v22 = (void *)sub_23361E12C();
  objc_msgSend(v20, sel_setConsentID_, v22);

  v23 = type metadata accessor for RawBankConnectData.Consent(0);
  v24 = (void *)sub_23361D5B0();
  objc_msgSend(v20, sel_setAuthorizedAt_, v24);

  v25 = (void *)sub_23361D5B0();
  objc_msgSend(v20, sel_setAuthorizedUntil_, v25);

  v26 = objc_msgSend(v20, sel_backgroundRefreshLastConfirmedAt);
  if (v26)
  {
    v27 = v32;
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v27, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9) == 1)
    {
      v26 = 0;
    }
    else
    {
      v26 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
    v27 = v32;
  }
  objc_msgSend(v20, sel_setBackgroundRefreshLastConfirmedAt_, v26);

  objc_msgSend(v20, sel_setRefreshSequenceNumber_, *(_QWORD *)(a1 + *(int *)(v23 + 28)));
  v28 = (void *)sub_23361E12C();
  objc_msgSend(v20, sel_setConsentToken_, v28);

  objc_msgSend(v20, sel_setConsentStatusValue_, v33);
  sub_23361D5F8();
  v29 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
  objc_msgSend(v20, sel_setLastUpdatedAt_, v29);

  v30 = v34;
  objc_msgSend(v20, sel_setInstitutionObject_, v34);

  sub_233168500(a1, type metadata accessor for RawBankConnectData.Consent);
  return v20;
}

unint64_t static ManagedConsent.existingConsent(withID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  objc_super v11;

  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v4 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23361D658();
  *(_QWORD *)(v5 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v5 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id static ManagedConsent.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

unint64_t static ManagedConsent.existingConsent(grantingAccessTo:in:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v11 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v6 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  v12 = v11;
  v13 = v4;
  v14 = v5;
  v7 = _s10FinanceKit14ManagedConsentC012predicateForD016grantingAccessToSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_tFZ_0((uint64_t *)&v12);
  objc_msgSend(v6, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedConsent.predicateForConsent(withInstitutionID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

id ManagedConsent.consentStatus.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setConsentStatusValue_, *a1);
}

id ManagedConsent.consentStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  char v5;

  v2 = v1;
  result = objc_msgSend(v2, sel_consentStatusValue);
  if (!(_DWORD)result)
  {
    v5 = 0;
LABEL_4:
    *a1 = v5;
    return result;
  }
  v5 = (char)result;
  if ((unsigned __int16)result == 1)
    goto LABEL_4;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_consentStatusValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = (id)sub_23361EF24();
  __break(1u);
  return result;
}

id ManagedConsent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedConsent.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedConsent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id (*ManagedConsent.consentStatus.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedConsent.consentStatus.getter((_BYTE *)(a1 + 8));
  return sub_2333A474C;
}

void ManagedConsent.setAccountRelationship(_:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v1, sel_mutableSetValueForKeyPath_, v3);

  objc_msgSend(v4, sel_addObject_, a1);
}

uint64_t static ManagedConsent.predicateToExcludeAppleData()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D50;
  v1 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  v2 = sub_2331683F0();
  *(_QWORD *)(v0 + 32) = 0x49746E65736E6F63;
  *(_QWORD *)(v0 + 40) = 0xE900000000000044;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = 0xD000000000000019;
  *(_QWORD *)(v0 + 80) = 0x800000023366AA20;
  return sub_23361E6B4();
}

id static ManagedConsent.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedConsent.predicateForConsent(withID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

uint64_t static ManagedConsent.predicateForConsent(withConsentID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

uint64_t static ManagedConsent.existingConsents(forInstitutionObjectID:in:)(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = (id)swift_getObjCClassFromMetadata();
  v8.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v2 = objc_msgSendSuper2(&v8, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  *(_QWORD *)(v3 + 56) = sub_233168668(0, (unint64_t *)&qword_2560466E8);
  *(_QWORD *)(v3 + 64) = sub_233385240((unint64_t *)&qword_25604CFE8, (unint64_t *)&qword_2560466E8);
  *(_QWORD *)(v3 + 32) = a1;
  v4 = a1;
  v5 = (void *)sub_23361E6B4();
  objc_msgSend(v2, sel_setPredicate_, v5);

  v6 = sub_23361E984();
  return v6;
}

uint64_t static ManagedConsent.linkedFPANIDs(forConsentID:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  BOOL v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  _BYTE v42[32];
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  objc_super v46;
  uint64_t v47;

  v39 = a3;
  v5 = sub_23361D1CC();
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46.receiver = (id)swift_getObjCClassFromMetadata();
  v46.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v8 = objc_msgSendSuper2(&v46, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_2331683F0();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_23361E6B4();
  objc_msgSend(v8, sel_setPredicate_, v10);

  objc_msgSend(v8, sel_setReturnsObjectsAsFaults_, 0);
  v11 = (void *)sub_23361E3D8();
  objc_msgSend(v8, sel_setRelationshipKeyPathsForPrefetching_, v11);

  v12 = v40;
  v13 = sub_23361E984();
  v32 = v12;
  if (v12)
  {

  }
  else
  {
    v31 = v8;
    v47 = MEMORY[0x24BEE4AF8];
    v14 = v13;
    if (v13 >> 62)
      goto LABEL_30;
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_5:
    if (v15)
    {
      v16 = 0;
      v36 = v14 & 0xC000000000000001;
      v34 = v14;
      v33 = (_QWORD *)(v14 + 32);
      v35 = v15;
      while (1)
      {
        if (v36)
        {
          v18 = (id)MEMORY[0x234933120](v16, v34);
          v19 = __OFADD__(v16, 1);
          v20 = v16 + 1;
          if (v19)
            goto LABEL_29;
        }
        else
        {
          v18 = (id)v33[v16];
          v19 = __OFADD__(v16, 1);
          v20 = v16 + 1;
          if (v19)
          {
LABEL_29:
            __break(1u);
LABEL_30:
            swift_bridgeObjectRetain();
            v15 = sub_23361EF30();
            goto LABEL_5;
          }
        }
        v39 = v18;
        v40 = v20;
        v21 = objc_msgSend(v18, sel_accountObjects, v31, v32);
        sub_23361E9B4();
        v38 = v21;

        sub_233167C58((unint64_t *)&qword_256049B58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
        sub_23361EBB8();
        if (v45)
        {
          v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
          do
          {
            sub_2331683D0(&v44, v43);
            sub_233168350((uint64_t)v43, (uint64_t)v42);
            type metadata accessor for ManagedInternalAccount();
            if (swift_dynamicCast()
              && (v22 = v41,
                  v23 = objc_msgSend(v41, sel_externalAccountId),
                  v22,
                  v23))
            {
              v24 = sub_23361E150();
              v26 = v25;

              __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v17 = sub_2334A4AA4(0, v17[2] + 1, 1, v17);
              v28 = v17[2];
              v27 = v17[3];
              if (v28 >= v27 >> 1)
                v17 = sub_2334A4AA4((_QWORD *)(v27 > 1), v28 + 1, 1, v17);
              v17[2] = v28 + 1;
              v29 = &v17[2 * v28];
              v29[4] = v24;
              v29[5] = v26;
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
            }
            sub_23361EBB8();
          }
          while (v45);
        }
        else
        {
          v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v5);

        v14 = (unint64_t)&v47;
        sub_233189424((uint64_t)v17);
        v16 = v40;
        if (v40 == v35)
        {

          swift_bridgeObjectRelease();
          v5 = v47;
          goto LABEL_27;
        }
      }
    }

    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
LABEL_27:
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t static ManagedConsent.entityName.getter()
{
  return 0x746E65736E6F43;
}

void sub_2333EE83C()
{
  qword_25604DE38 = MEMORY[0x24BEE4B00];
}

uint64_t static ManagedConsent.mappedKeyPaths.getter()
{
  if (qword_256041D08 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2333EE890()
{
  return 0x746E65736E6F43;
}

uint64_t sub_2333EE8A8()
{
  if (qword_256041D08 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_2333EE8E8()
{
  off_25604DE40 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t static ManagedConsent.attributeNamesByKeyPath.getter()
{
  if (qword_256041D10 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ManagedConsent.attributeNamesByKeyPath.setter(void *a1)
{
  if (qword_256041D10 != -1)
    swift_once();
  swift_beginAccess();
  off_25604DE40 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ManagedConsent.attributeNamesByKeyPath.modify())()
{
  if (qword_256041D10 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2333EEA48()
{
  if (qword_256041D10 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ManagedConsent.BackgroundRefreshInfo.authorizationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ManagedConsent.BackgroundRefreshInfo.authorizationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.authorizationDate.modify())()
{
  return nullsub_1;
}

uint64_t ManagedConsent.BackgroundRefreshInfo.lastConfirmationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 20);
  return sub_23319F164(v3, a1);
}

uint64_t ManagedConsent.BackgroundRefreshInfo.lastConfirmationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 20);
  return sub_23318C8A8(a1, v3);
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.lastConfirmationDate.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationSequenceNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 24));
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationSequenceNumber.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.confirmationSequenceNumber.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationNotificationSequenceNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 28));
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationNotificationSequenceNumber.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.confirmationNotificationSequenceNumber.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

uint64_t ManagedConsent.BackgroundRefreshInfo.maximumNumberOfRefreshes.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 32));
}

uint64_t ManagedConsent.BackgroundRefreshInfo.maximumNumberOfRefreshes.setter(__int16 a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  *(_WORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.maximumNumberOfRefreshes.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

double ManagedConsent.BackgroundRefreshInfo.confirmationWindow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 36));
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationWindow.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.confirmationWindow.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

double ManagedConsent.BackgroundRefreshInfo.confirmationExpiryWindow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ManagedConsent.BackgroundRefreshInfo() + 40));
}

uint64_t ManagedConsent.BackgroundRefreshInfo.confirmationExpiryWindow.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ManagedConsent.BackgroundRefreshInfo.confirmationExpiryWindow.modify())(_QWORD)
{
  type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return nullsub_1;
}

uint64_t ManagedConsent.BackgroundRefreshInfo.earliestNotificationDate.getter()
{
  uint64_t v0;
  uint64_t refreshed;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  refreshed = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  MEMORY[0x24BDAC7A8](refreshed);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(v0 + *(int *)(refreshed + 20), (uint64_t)v6);
  sub_2333F0058(v0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v3, v7);
    sub_233168500((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsent.BackgroundRefreshInfo);
    sub_2331D0F20((uint64_t)v6);
  }
  else
  {
    sub_233168500((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ManagedConsent.BackgroundRefreshInfo);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  sub_23361D544();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL ManagedConsent.BackgroundRefreshInfo.isEligibleForNotification.getter()
{
  uint64_t v0;
  uint64_t refreshed;

  refreshed = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  return *(_QWORD *)(v0 + *(int *)(refreshed + 28)) != *(_QWORD *)(v0 + *(int *)(refreshed + 24));
}

void ManagedConsent.backgroundRefreshInfo.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *refreshed;
  id v30;
  id v31;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v2, sel_institutionObject);
  v12 = objc_msgSend(v11, sel_maximumNumberOfBackgroundRefreshes);

  if (v12 >= 1
    && (v13 = objc_msgSend(v2, sel_institutionObject),
        v14 = objc_msgSend(v13, sel_backgroundRefreshConfirmationWindow),
        v13,
        v14))
  {
    v31 = v14;
    v15 = objc_msgSend(v2, sel_institutionObject);
    v16 = objc_msgSend(v15, sel_backgroundRefreshConfirmationExpiryWindow);

    if (v16)
    {
      v17 = v16;
      v30 = objc_msgSend(v2, sel_backgroundRefreshConfirmationSequenceNumber);
      v18 = objc_msgSend(v2, sel_backgroundRefreshConfirmationNotificationSequenceNumber);
      v19 = objc_msgSend(v2, sel_authorizedAt);
      sub_23361D5EC();

      v20 = objc_msgSend(v2, sel_backgroundRefreshLastConfirmedAt);
      if (v20)
      {
        v21 = v20;
        sub_23361D5EC();

        v22 = 0;
      }
      else
      {
        v22 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v22, 1, v7);
      objc_msgSend(v31, sel_doubleValue);
      v26 = v25;
      objc_msgSend(v17, sel_doubleValue);
      v28 = v27;

      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, v7);
      refreshed = (int *)type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
      sub_2331B05C8((uint64_t)v6, a1 + refreshed[5]);
      *(_QWORD *)(a1 + refreshed[6]) = v30;
      *(_QWORD *)(a1 + refreshed[7]) = v18;
      *(_WORD *)(a1 + refreshed[8]) = v12;
      *(_QWORD *)(a1 + refreshed[9]) = v26;
      *(_QWORD *)(a1 + refreshed[10]) = v28;
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)refreshed - 1) + 56))(a1, 0, 1, refreshed);
    }
    else
    {
      v24 = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);

    }
  }
  else
  {
    v23 = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
}

uint64_t sub_2333EF31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254244F20);
    v3 = sub_23361ED80();
    v4 = 0;
    v5 = v3 + 56;
    v19 = v1;
    v20 = a1 + 32;
    while (1)
    {
      v6 = *(char *)(v20 + v4);
      sub_23361F350();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      result = sub_23361F3A4();
      v8 = -1 << *(_BYTE *)(v3 + 32);
      v9 = result & ~v8;
      v10 = v9 >> 6;
      v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
      v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        v13 = ~v8;
        v14 = *(_QWORD *)&aP_1[8 * v6];
        while (*(_QWORD *)&aP_1[8 * *(char *)(*(_QWORD *)(v3 + 48) + v9)] != v14)
        {
          v15 = sub_23361F224();
          result = swift_bridgeObjectRelease_n();
          if ((v15 & 1) != 0)
            goto LABEL_4;
          v9 = (v9 + 1) & v13;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            goto LABEL_10;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_10:
        *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
        *(_BYTE *)(*(_QWORD *)(v3 + 48) + v9) = v6;
        v16 = *(_QWORD *)(v3 + 16);
        v17 = __OFADD__(v16, 1);
        v18 = v16 + 1;
        if (v17)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v18;
      }
LABEL_4:
      if (++v4 == v19)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2333EF4B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23361D850();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE58);
    v10 = sub_23361ED80();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_233167C58(&qword_25604DE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_23361E084();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_233167C58(&qword_25604DE68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_23361E108();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

void _s10FinanceKit14ManagedConsentC6update_4withyAC_AA011BankConnectD0VtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  char v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_consentID);
  v8 = sub_23361E150();
  v10 = v9;

  v11 = (int *)type metadata accessor for BankConnectConsent();
  v12 = (_QWORD *)(a2 + v11[5]);
  if (v8 == *v12 && v10 == v12[1])
    v14 = 1;
  else
    v14 = sub_23361F224();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a1, sel_refreshSequenceNumber);
  v16 = v11[9];
  if ((uint64_t)v15 < *(_QWORD *)(a2 + v16))
    objc_msgSend(a1, sel_setConsentTokenIdentifiedAsOutdatedAt_, 0);
  v17 = (void *)sub_23361D658();
  objc_msgSend(a1, sel_setId_, v17);

  v18 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setConsentID_, v18);

  v19 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setAuthorizedAt_, v19);

  v20 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setAuthorizedUntil_, v20);

  sub_23319F164(a2 + v11[8], (uint64_t)v6);
  v21 = sub_23361D634();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v21) != 1)
  {
    v23 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  }
  objc_msgSend(a1, sel_setBackgroundRefreshLastConfirmedAt_, v23);

  objc_msgSend(a1, sel_setRefreshSequenceNumber_, *(_QWORD *)(a2 + v16));
  v24 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setConsentToken_, v24);

  objc_msgSend(a1, sel_setConsentStatusValue_, *(unsigned __int8 *)(a2 + v11[11]));
  v25 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setLastUpdatedAt_, v25);

  if ((v14 & 1) == 0)
    objc_msgSend(a1, sel_setNotificationSubscriptionObject_, 0);
}

void sub_2333EF9EC(unint64_t a1)
{
  sub_2333F0D68(a1, &qword_25604DE78, (void (*)(_QWORD))type metadata accessor for ManagedInternalAccount);
}

uint64_t sub_2333EFA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE70);
    v3 = sub_23361ED80();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_23361E150();
      sub_23361F350();
      v7 = v6;
      sub_23361E0A8();
      v8 = sub_23361F3A4();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_23361E150();
        v17 = v16;
        if (v15 == sub_23361E150() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_23361F224();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_23361E150();
          v24 = v23;
          if (v22 == sub_23361E150() && v24 == v25)
            goto LABEL_3;
          v27 = sub_23361F224();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void _s10FinanceKit14ManagedConsentC6update_4with13consentStatus13lastUpdatedAtyAC_AA18RawBankConnectDataO0D0VAA0mndH0O10Foundation4DateVtFZ_0(void *a1, _QWORD *a2, unsigned __int8 *a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v5 = *a3;
  v6 = objc_msgSend(a1, sel_consentID);
  v7 = sub_23361E150();
  v9 = v8;

  if (v7 == *a2 && v9 == a2[1])
    v11 = 1;
  else
    v11 = sub_23361F224();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a1, sel_refreshSequenceNumber);
  v13 = *(_QWORD *)((char *)a2 + *(int *)(type metadata accessor for RawBankConnectData.Consent(0) + 28));
  if ((uint64_t)v12 < v13)
    objc_msgSend(a1, sel_setConsentTokenIdentifiedAsOutdatedAt_, 0);
  v14 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setConsentID_, v14);

  v15 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setAuthorizedAt_, v15);

  v16 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setAuthorizedUntil_, v16);

  v17 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setBackgroundRefreshLastConfirmedAt_, v17);

  objc_msgSend(a1, sel_setRefreshSequenceNumber_, v13);
  v18 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setConsentToken_, v18);

  objc_msgSend(a1, sel_setConsentStatusValue_, v5);
  v19 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setLastUpdatedAt_, v19);

  if ((v11 & 1) == 0)
    objc_msgSend(a1, sel_setNotificationSubscriptionObject_, 0);
}

id _s10FinanceKit14ManagedConsentC012predicateForD016grantingAccessToSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v8 = sub_2331683F0();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = sub_23361E6B4();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_QWORD *)(v9 + 32) = v2;
  *(_QWORD *)(v9 + 40) = v1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 40) = sub_23361E6B4();
  sub_23361E408();
  v10 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  return v11;
}

uint64_t type metadata accessor for ManagedConsent.BackgroundRefreshInfo()
{
  uint64_t result;

  result = qword_254244E38;
  if (!qword_254244E38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333F0058(uint64_t a1, uint64_t a2)
{
  uint64_t refreshed;

  refreshed = type metadata accessor for ManagedConsent.BackgroundRefreshInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(refreshed - 8) + 16))(a2, a1, refreshed);
  return a2;
}

void sub_2333F009C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_id, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_2333F00C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setId_);
}

void sub_2333F00D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_consentID, a2);
}

void sub_2333F00F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setConsentID_);
}

void sub_2333F00FC(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_authorizedAt, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_2333F0120(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setAuthorizedAt_);
}

void sub_2333F0134(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_authorizedUntil, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_2333F0158(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setAuthorizedUntil_);
}

id sub_2333F016C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_refreshSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2333F019C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRefreshSequenceNumber_, *a1);
}

void sub_2333F01B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_consentToken, a2);
}

void sub_2333F01CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setConsentToken_);
}

id sub_2333F01D8@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_consentStatusValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2333F0208(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentStatusValue_, *a1);
}

void sub_2333F021C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_lastUpdatedAt, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_2333F0240(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setLastUpdatedAt_);
}

uint64_t sub_2333F0254@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_backgroundRefreshLastConfirmedAt, a2);
}

void sub_2333F0270(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setBackgroundRefreshLastConfirmedAt_);
}

char *keypath_get_selector_backgroundRefreshConfirmationSequenceNumber()
{
  return sel_backgroundRefreshConfirmationSequenceNumber;
}

id sub_2333F0298@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_backgroundRefreshConfirmationSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2333F02C8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBackgroundRefreshConfirmationSequenceNumber_, *a1);
}

char *keypath_get_selector_backgroundRefreshConfirmationNotificationSequenceNumber()
{
  return sel_backgroundRefreshConfirmationNotificationSequenceNumber;
}

id sub_2333F02E8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_backgroundRefreshConfirmationNotificationSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2333F0318(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBackgroundRefreshConfirmationNotificationSequenceNumber_, *a1);
}

char *keypath_get_selector_backgroundRefreshConfirmationPromptDismissalSequenceNumber()
{
  return sel_backgroundRefreshConfirmationPromptDismissalSequenceNumber;
}

id sub_2333F0338@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_backgroundRefreshConfirmationPromptDismissalSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2333F0368(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBackgroundRefreshConfirmationPromptDismissalSequenceNumber_, *a1);
}

char *keypath_get_selector_consentTokenIdentifiedAsOutdatedAt()
{
  return sel_consentTokenIdentifiedAsOutdatedAt;
}

uint64_t sub_2333F0388@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_consentTokenIdentifiedAsOutdatedAt, a2);
}

void sub_2333F03A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setConsentTokenIdentifiedAsOutdatedAt_);
}

char *keypath_get_selector_institutionObject()
{
  return sel_institutionObject;
}

char *keypath_get_selector_accountObjects()
{
  return sel_accountObjects;
}

id sub_2333F03E0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountObjects);
  *a2 = result;
  return result;
}

id sub_2333F0418(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountObjects_, *a1);
}

void sub_2333F042C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_institutionID, a2);
}

void sub_2333F0448(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setInstitutionID_);
}

char *keypath_get_selector_notificationSubscriptionObject()
{
  return sel_notificationSubscriptionObject;
}

id sub_2333F0460@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_notificationSubscriptionObject);
  *a2 = result;
  return result;
}

id sub_2333F0498(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNotificationSubscriptionObject_, *a1);
}

id sub_2333F04AC@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedConsent.consentStatus.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_2333F04E4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setConsentStatusValue_, *a1);
}

uint64_t type metadata accessor for ManagedConsent()
{
  return objc_opt_self();
}

char *initializeBufferWithCopyOfBuffer for ManagedConsent.BackgroundRefreshInfo(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
    *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
    v16 = a3[9];
    *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
    *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  }
  return a1;
}

uint64_t destroy for ManagedConsent.BackgroundRefreshInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for ManagedConsent.BackgroundRefreshInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *assignWithCopy for ManagedConsent.BackgroundRefreshInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *initializeWithTake for ManagedConsent.BackgroundRefreshInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *assignWithTake for ManagedConsent.BackgroundRefreshInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  v16 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v17 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedConsent.BackgroundRefreshInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333F0BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ManagedConsent.BackgroundRefreshInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333F0C30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2333F0CB0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D634();
  if (v0 <= 0x3F)
  {
    sub_2331FE95C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2333F0D54(unint64_t a1)
{
  sub_2333F0D68(a1, &qword_256049F48, (void (*)(_QWORD))type metadata accessor for ManagedOrderShippingFulfillment);
}

void sub_2333F0D68(unint64_t a1, uint64_t *a2, void (*a3)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_23361ED80();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x24BEE4B08];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x234933120](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_23361EA08();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        a3(0);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_23361EA14();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_23361EA14();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_23361EA08();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      a3(0);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_23361EA14();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_23361EA14();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_2333F10CC(unint64_t a1)
{
  sub_2333F0D68(a1, &qword_256049F50, (void (*)(_QWORD))type metadata accessor for ManagedOrderPickupFulfillment);
}

uint64_t sub_2333F10E0(uint64_t a1)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE48);
    sub_23361ED80();
    v2 = *(unsigned __int8 *)(a1 + 32);
    sub_23361F350();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_2333F1454(unint64_t a1)
{
  sub_2333F0D68(a1, &qword_256049F98, (void (*)(_QWORD))type metadata accessor for ManagedInternalTransaction);
}

void sub_2333F1468(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256049F38);
      v3 = sub_23361ED80();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x234933120](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_23361EA08();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_233168668(0, (unint64_t *)&qword_2560466E8);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_23361EA14();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_23361EA14();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_23361EA08();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_233168668(0, (unint64_t *)&qword_2560466E8);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_23361EA14();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_23361EA14();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_2333F17C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604DE50);
    v3 = sub_23361ED80();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_23361F350();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      result = sub_23361F3A4();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_23361F224(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_23361F224();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t HTTPRequest.addingAppleClientInfo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = (__int128 *)MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v8[5];
  v35 = v8[4];
  v36 = v11;
  v12 = v8[7];
  v37 = v8[6];
  v38 = v12;
  v13 = v8[1];
  v31 = *v8;
  v32 = v13;
  v14 = v8[3];
  v33 = v8[2];
  v34 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v15, a2);
  v27 = v35;
  v28 = v36;
  v29 = v37;
  v30 = v38;
  v23 = v31;
  v24 = v32;
  v25 = v33;
  v26 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v10, a2);
  v17 = (_OWORD *)(a4 + *(int *)(type metadata accessor for HTTPRequestWithAppleClientInfo(0, a2, a3, v16) + 36));
  v18 = v28;
  v17[4] = v27;
  v17[5] = v18;
  v19 = v30;
  v17[6] = v29;
  v17[7] = v19;
  v20 = v24;
  *v17 = v23;
  v17[1] = v20;
  v21 = v26;
  v17[2] = v25;
  v17[3] = v21;
  return sub_2333F225C((uint64_t)&v31);
}

uint64_t HTTPRequest.addingApplePayClientInfo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v9 = type metadata accessor for ApplePayHTTPClientInfo();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v4, a2);
  sub_2333F232C(a1, (uint64_t)v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v15, a2);
  v17 = type metadata accessor for HTTPRequestWithApplePayClientInfo(0, a2, a3, v16);
  return sub_2332F3EB8((uint64_t)v12, a4 + *(int *)(v17 + 36));
}

uint64_t HTTPRequest.addingAppleWebServiceSessionID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v4, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  return sub_2333F2ABC((uint64_t)v15, (uint64_t)v13, a2, a3, a4);
}

uint64_t AppleHTTPClientInfo.productType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.productType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.productType.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.productName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.productName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.productName.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.productVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.productVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.productVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.buildVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.buildVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.buildVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.frameworkBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.frameworkBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.frameworkBundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.frameworkBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.frameworkBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.frameworkBundleVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.mainBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.mainBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.mainBundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t AppleHTTPClientInfo.mainBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleHTTPClientInfo.mainBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*AppleHTTPClientInfo.mainBundleVersion.modify())()
{
  return nullsub_1;
}

void __swiftcall AppleHTTPClientInfo.init(productType:productName:productVersion:buildVersion:frameworkBundleIdentifier:frameworkBundleVersion:mainBundleIdentifier:mainBundleVersion:)(FinanceKit::AppleHTTPClientInfo *__return_ptr retstr, Swift::String productType, Swift::String productName, Swift::String productVersion, Swift::String buildVersion, Swift::String frameworkBundleIdentifier, Swift::String frameworkBundleVersion, Swift::String mainBundleIdentifier, Swift::String mainBundleVersion)
{
  retstr->productType = productType;
  retstr->productName = productName;
  retstr->productVersion = productVersion;
  retstr->buildVersion = buildVersion;
  retstr->frameworkBundleIdentifier = frameworkBundleIdentifier;
  retstr->frameworkBundleVersion = frameworkBundleVersion;
  retstr->mainBundleIdentifier = mainBundleIdentifier;
  retstr->mainBundleVersion = mainBundleVersion;
}

void static HTTPHeaderField.Name.appleClientInfo.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002336762A0;
}

uint64_t static HTTPHeaderField.appleClientInfo(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = sub_23361E27C();
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002336762A0;
  a1[2] = 60;
  a1[3] = 0xE100000000000000;
  return result;
}

uint64_t sub_2333F225C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for ApplePayHTTPClientInfo()
{
  uint64_t result;

  result = qword_25604DED8;
  if (!qword_25604DED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333F232C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplePayHTTPClientInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_2333F2370(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
  if (!v1)
  {
    static HTTPHeaderField.appleClientInfo(_:)(v11);
    v3 = v11[0];
    v4 = v11[1];
    v5 = v11[2];
    v6 = v11[3];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2334A4BB0(0, v2[2] + 1, 1, v2);
    v8 = v2[2];
    v7 = v2[3];
    if (v8 >= v7 >> 1)
      v2 = sub_2334A4BB0((_QWORD *)(v7 > 1), v8 + 1, 1, v2);
    v2[2] = v8 + 1;
    v9 = &v2[4 * v8];
    v9[4] = v3;
    v9[5] = v4;
    v9[6] = v5;
    v9[7] = v6;
  }
  return v2;
}

_QWORD *sub_2333F2474(uint64_t a1)
{
  return sub_2333F2370(a1);
}

uint64_t ApplePayHTTPClientInfo.hardwarePlatform.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayHTTPClientInfo.hardwarePlatform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ApplePayHTTPClientInfo.hardwarePlatform.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayHTTPClientInfo.isInternalBuild.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ApplePayHTTPClientInfo.isInternalBuild.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ApplePayHTTPClientInfo.isInternalBuild.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayHTTPClientInfo.currentRegion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayHTTPClientInfo() + 24);
  return sub_2333F2B34(v3, a1);
}

uint64_t ApplePayHTTPClientInfo.currentRegion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayHTTPClientInfo() + 24);
  return sub_2332F088C(a1, v3);
}

uint64_t (*ApplePayHTTPClientInfo.currentRegion.modify())(_QWORD)
{
  type metadata accessor for ApplePayHTTPClientInfo();
  return nullsub_1;
}

uint64_t ApplePayHTTPClientInfo.init(hardwarePlatform:isInternalBuild:currentRegion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  v10 = a5 + *(int *)(type metadata accessor for ApplePayHTTPClientInfo() + 24);
  v11 = sub_23361D6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  return sub_2332F088C(a4, v10);
}

void static HTTPHeaderField.Name.appleSoCType.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000233671340;
}

void static HTTPHeaderField.Name.appleInternalInstall.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000233671320;
}

void static HTTPHeaderField.Name.appleDeviceRegion.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000233671300;
}

uint64_t static HTTPHeaderField.appleSoCType(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0xD000000000000010;
  a3[1] = 0x8000000233671340;
  a3[2] = a1;
  a3[3] = a2;
  return swift_bridgeObjectRetain();
}

void static HTTPHeaderField.appleInternalInstall()(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000233671320;
  a1[2] = 1702195828;
  a1[3] = 0xE400000000000000;
}

uint64_t static HTTPHeaderField.appleDeviceRegion(_:)@<X0>(_QWORD *a1@<X8>)
{
  return sub_2333F2A80(MEMORY[0x24BDCECF0], 0xD000000000000015, 0x8000000233671300, a1);
}

_QWORD *sub_2333F26FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D6F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
  if (!v2)
  {
    v3 = (_QWORD *)v12;
    v34 = v11;
    v13 = (uint64_t *)(v1 + *(int *)(a1 + 36));
    v14 = v13[1];
    if (v14)
    {
      v15 = *v13;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v3 = sub_2334A4BB0(0, v3[2] + 1, 1, v3);
      v18 = v3[2];
      v17 = v3[3];
      if (v18 >= v17 >> 1)
        v3 = sub_2334A4BB0((_QWORD *)(v17 > 1), v18 + 1, 1, v3);
      v3[2] = v18 + 1;
      v19 = &v3[4 * v18];
      v19[4] = 0xD000000000000010;
      v19[5] = 0x8000000233671340;
      v19[6] = v33;
      v19[7] = v14;
    }
    if (*((_BYTE *)v13 + 16) == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_2334A4BB0(0, v3[2] + 1, 1, v3);
      v21 = v3[2];
      v20 = v3[3];
      if (v21 >= v20 >> 1)
        v3 = sub_2334A4BB0((_QWORD *)(v20 > 1), v21 + 1, 1, v3);
      v3[2] = v21 + 1;
      v22 = &v3[4 * v21];
      v22[4] = 0xD000000000000018;
      v22[5] = 0x8000000233671320;
      v22[6] = 1702195828;
      v22[7] = 0xE400000000000000;
    }
    v23 = type metadata accessor for ApplePayHTTPClientInfo();
    sub_2333F2B34((uint64_t)v13 + *(int *)(v23 + 24), (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_2333F5144((uint64_t)v7);
    }
    else
    {
      v24 = v34;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v7, v8);
      v25 = sub_23361D6E8();
      v27 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_2334A4BB0(0, v3[2] + 1, 1, v3);
      v29 = v3[2];
      v28 = v3[3];
      if (v29 >= v28 >> 1)
        v3 = sub_2334A4BB0((_QWORD *)(v28 > 1), v29 + 1, 1, v3);
      v3[2] = v29 + 1;
      v30 = &v3[4 * v29];
      v30[4] = 0xD000000000000015;
      v30[5] = 0x8000000233671300;
      v30[6] = v25;
      v30[7] = v27;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
    }
  }
  return v3;
}

_QWORD *sub_2333F2A28(uint64_t a1)
{
  return sub_2333F26FC(a1);
}

void static HTTPHeaderField.Name.appleWebServiceSession.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000002336712E0;
}

uint64_t static HTTPHeaderField.appleWebServiceSession(id:)@<X0>(_QWORD *a1@<X8>)
{
  return sub_2333F2A80(MEMORY[0x24BDCE9B0], 0xD00000000000001BLL, 0x80000002336712E0, a1);
}

uint64_t sub_2333F2A80@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v8;

  result = a1();
  *a4 = a2;
  a4[1] = a3;
  a4[2] = result;
  a4[3] = v8;
  return result;
}

uint64_t sub_2333F2ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for HTTPRequestWithAppleWebServiceSessionID(0, a3, a4, v9) + 36);
  v11 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
}

uint64_t sub_2333F2B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for AppleHTTPClientInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppleHTTPClientInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppleHTTPClientInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

_QWORD *assignWithTake for AppleHTTPClientInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleHTTPClientInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleHTTPClientInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleHTTPClientInfo()
{
  return &type metadata for AppleHTTPClientInfo;
}

_QWORD *initializeBufferWithCopyOfBuffer for ApplePayHTTPClientInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_23361D6F4();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for ApplePayHTTPClientInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23361D6F4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for ApplePayHTTPClientInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_23361D6F4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for ApplePayHTTPClientInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D6F4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ApplePayHTTPClientInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_23361D6F4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ApplePayHTTPClientInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D6F4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplePayHTTPClientInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333F34A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ApplePayHTTPClientInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2333F353C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_2333F35B4()
{
  unint64_t v0;

  sub_2332F4A0C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_UNKNOWN **sub_2333F3630()
{
  return &off_250484098;
}

_UNKNOWN **sub_2333F363C()
{
  return &off_250484060;
}

_UNKNOWN **sub_2333F3648()
{
  return &off_250484028;
}

uint64_t sub_2333F3654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2333F3A2C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t sub_2333F3660(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_2333F37F8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23361D6A0() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for HTTPRequestWithAppleWebServiceSessionID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HTTPRequestWithAppleWebServiceSessionID);
}

uint64_t sub_2333F3A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2333F3A2C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for ApplePayHTTPClientInfo);
}

uint64_t sub_2333F3A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;

  result = swift_checkMetadataState();
  if (v6 <= 0x3F)
  {
    result = a4(319);
    if (v7 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2333F3AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_23361D6F4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | 7;
  v12 = (v10 | 7) + v7;
  v13 = v10 + 17;
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v15 = v11 | *(_DWORD *)(v6 + 80);
  if (v15 != 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v10 + 17) & ~v10) + v14 + (v12 & ~(v10 | 7)) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    v28 = v8;
    v19 = ~v11;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = ((unint64_t)a1 + v12) & v19;
    v22 = ((unint64_t)a2 + v12) & v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 0x10);
    v23 = (void *)((v13 + v21) & v20);
    v24 = (const void *)((v13 + v22) & v20);
    v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v25(v24, 1, v28))
    {
      memcpy(v23, v24, v14);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v23, v24, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v23, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_2333F3C44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23361D6F4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = (v7 + ((v4 + a1 + (v7 | 7)) & ~(v7 | 7)) + 17) & ~v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t sub_2333F3CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  size_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23361D6F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (v10 + a1) & ~(v9 | 7);
  v12 = (v10 + a2) & ~(v9 | 7);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 0x10);
  v13 = (void *)((v9 + 17 + v11) & ~v9);
  v14 = (const void *)((v9 + 17 + v12) & ~v9);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v15(v14, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v16 = *(_QWORD *)(v8 + 64);
    else
      v16 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v13, v14, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_2333F3DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23361D6F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (v10 + a1) & ~(v9 | 7);
  v12 = (v10 + a2) & ~(v9 | 7);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = (void *)((v9 + 17 + v11) & ~v9);
  v14 = (void *)((v9 + 17 + v12) & ~v9);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v9) = v15(v13, 1, v7);
  v16 = v15(v14, 1, v7);
  if ((_DWORD)v9)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v13, v14, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v13, v14, v17);
  return a1;
}

uint64_t sub_2333F3F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23361D6F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (v10 + a1) & ~(v9 | 7);
  v12 = (v10 + a2) & ~(v9 | 7);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 0x10);
  v13 = (void *)((v9 + 17 + v11) & ~v9);
  v14 = (const void *)((v9 + 17 + v12) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v13, v14, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_2333F4058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23361D6F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (v10 + a1) & ~(v9 | 7);
  v12 = (v10 + a2) & ~(v9 | 7);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  v13 = (void *)((v9 + 17 + v11) & ~v9);
  v14 = (void *)((v9 + 17 + v12) & ~v9);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v9) = v15(v13, 1, v7);
  v16 = v15(v14, 1, v7);
  if ((_DWORD)v9)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v13, v14, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v13, v14, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v13, v14, v17);
  return a1;
}

uint64_t sub_2333F41B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v22;
  int v23;
  int v24;
  unint64_t v25;
  unsigned int v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_23361D6F4() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v9)
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = v14 | 7;
  v16 = (v14 | 7) + *(_QWORD *)(v6 + 64);
  v17 = v14 + 17;
  if (a2 <= v12)
    goto LABEL_33;
  v18 = v13 + (v17 & ~v14) + (v16 & ~v15);
  v19 = 8 * v18;
  if (v18 <= 3)
  {
    v22 = ((a2 - v12 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      v20 = *(_DWORD *)(a1 + v18);
      if (!v20)
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v22 > 0xFF)
    {
      v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v22 < 2)
    {
LABEL_33:
      if (v7 >= v11)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      if (v10 > 0x7FFFFFFE)
      {
        v26 = (*(uint64_t (**)(uint64_t))(v8 + 48))((v17 + ((v16 + a1) & ~v15)) & ~v14);
        if (v26 >= 2)
          return v26 - 1;
        else
          return 0;
      }
      else
      {
        v25 = *(_QWORD *)(((v16 + a1) & ~v15) + 8);
        if (v25 >= 0xFFFFFFFF)
          LODWORD(v25) = -1;
        if ((v25 + 1) >= 2)
          return v25;
        else
          return 0;
      }
    }
  }
  v20 = *(unsigned __int8 *)(a1 + v18);
  if (!*(_BYTE *)(a1 + v18))
    goto LABEL_33;
LABEL_24:
  v23 = (v20 - 1) << v19;
  if (v18 > 3)
    v23 = 0;
  if ((_DWORD)v18)
  {
    if (v18 <= 3)
      v24 = v18;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  return v12 + v23 + 1;
}

void sub_2333F43B8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(sub_23361D6F4() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  if (v13 <= v8)
    v14 = v8;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(v10 + 80);
  if (v11)
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  v17 = (((v15 | 7) + *(_QWORD *)(v7 + 64)) & ~(v15 | 7)) + ((v15 + 17) & ~v15) + v16;
  if (a3 > v14)
  {
    if (v17 > 3)
    {
      v9 = 1u;
      if (v14 >= a2)
        goto LABEL_16;
LABEL_22:
      v19 = ~v14 + a2;
      if (v17 < 4)
      {
        if ((_DWORD)v17)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, (((v15 | 7) + *(_QWORD *)(v7 + 64)) & ~(v15 | 7)) + ((v15 + 17) & ~v15) + v16);
          if ((_DWORD)v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if ((_DWORD)v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, (((v15 | 7) + *(_QWORD *)(v7 + 64)) & ~(v15 | 7)) + ((v15 + 17) & ~v15) + v16);
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v9 = 4u;
      if (v14 < a2)
        goto LABEL_22;
LABEL_16:
      __asm { BR              X0 }
    }
    if (v18 >= 0x100)
      v9 = 2;
    else
      v9 = v18 > 1;
  }
  if (v14 < a2)
    goto LABEL_22;
  goto LABEL_16;
}

void sub_2333F470C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2333F4664);
}

void sub_2333F471C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2333F4664);
}

void sub_2333F4724()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2333F4664);
}

uint64_t type metadata accessor for HTTPRequestWithApplePayClientInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HTTPRequestWithApplePayClientInfo);
}

uint64_t sub_2333F473C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2333F47B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 128 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v10[3] = v11[3];
    v10[4] = v11[4];
    v10[5] = v11[5];
    v10[6] = v11[6];
    v10[7] = v11[7];
    v10[8] = v11[8];
    v10[9] = v11[9];
    v10[10] = v11[10];
    v10[11] = v11[11];
    v10[12] = v11[12];
    v10[13] = v11[13];
    v10[14] = v11[14];
    v10[15] = v11[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2333F4924(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333F499C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v7[6] = v8[6];
  v7[7] = v8[7];
  v7[8] = v8[8];
  v7[9] = v8[9];
  v7[10] = v8[10];
  v7[11] = v8[11];
  v7[12] = v8[12];
  v7[13] = v8[13];
  v7[14] = v8[14];
  v7[15] = v8[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2333F4ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[8] = v8[8];
  v7[9] = v8[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[10] = v8[10];
  v7[11] = v8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[12] = v8[12];
  v7[13] = v8[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[14] = v8[14];
  v7[15] = v8[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2333F4C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (__int128 *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[3];
  v11 = *v8;
  v10 = v8[1];
  v7[2] = v8[2];
  v7[3] = v9;
  *v7 = v11;
  v7[1] = v10;
  v12 = v8[7];
  v14 = v8[4];
  v13 = v8[5];
  v7[6] = v8[6];
  v7[7] = v12;
  v7[4] = v14;
  v7[5] = v13;
  return a1;
}

uint64_t sub_2333F4C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRelease();
  v7[8] = v8[8];
  v7[9] = v8[9];
  swift_bridgeObjectRelease();
  v7[10] = v8[10];
  v7[11] = v8[11];
  swift_bridgeObjectRelease();
  v7[12] = v8[12];
  v7[13] = v8[13];
  swift_bridgeObjectRelease();
  v7[14] = v8[14];
  v7[15] = v8[15];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2333F4D98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 128) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2333F4E14 + 4 * byte_2336456C4[v10]))();
  }
}

void sub_2333F4E98(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFF80)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFF80)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 128);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_2333F4F8C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2333F5028);
}

void sub_2333F4F94(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2333F4F9CLL);
  JUMPOUT(0x2333F5028);
}

void sub_2333F4FE0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2333F5028);
}

void sub_2333F4FE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2333F5028);
}

uint64_t sub_2333F4FF0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x2333F4FFCLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x2333F5028);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for HTTPRequestWithAppleClientInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HTTPRequestWithAppleClientInfo);
}

_QWORD *sub_2333F504C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
  if (!v1)
  {
    v3 = sub_23361D64C();
    v5 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2334A4BB0(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_2334A4BB0((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[4 * v7];
    v8[4] = 0xD00000000000001BLL;
    v8[5] = 0x80000002336712E0;
    v8[6] = v3;
    v8[7] = v5;
  }
  return v2;
}

_QWORD *sub_2333F5130(uint64_t a1)
{
  return sub_2333F504C(a1);
}

uint64_t sub_2333F5144(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256049790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id ManagedOrderContent.orderData.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_orderData);
}

void ManagedOrderContent.updatedDate.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend(v1, sel_updatedDate);
  sub_23361D5EC();

}

id ManagedOrderContent.schemaVersion.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_schemaVersion);
}

void ManagedOrderContent.priorityInfo.getter(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256049CF8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v8 = (_QWORD *)sub_2331A6FB8(v7);
  swift_bridgeObjectRelease();
  v16 = v8;
  v9 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v10 = sub_2331A70F4(v9);
  swift_bridgeObjectRelease();
  sub_2331896C8(v10);
  sub_2331A8628(&v16);
  v11 = v16;
  v12 = v6;
  v13 = sub_23330354C((uint64_t)v11, v12);
  swift_bridgeObjectRelease();

  sub_2333008A8(v13, (uint64_t)v5);
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for Order.PriorityInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14) == 1)
  {
    Order.PriorityInfo.init(orderWithNoFulfillments:)(v12, a1);
    sub_2333F5400((uint64_t)v5);
  }
  else
  {
    sub_2333F5440((uint64_t)v5, a1);
  }

}

uint64_t ManagedOrderContent.isActive.getter()
{
  id *v0;
  id v1;
  char v2;

  v1 = *v0;
  v2 = ManagedECommerceOrderContent.isActive.getter();

  return v2 & 1;
}

void ManagedOrderContent.archiveDate.getter(uint64_t a1@<X8>)
{
  id *v1;
  id v3;

  v3 = *v1;
  ManagedECommerceOrderContent.archiveDate.getter(a1);

}

uint64_t sub_2333F5400(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256049CF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2333F5440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.PriorityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void **initializeBufferWithCopyOfBuffer for ManagedOrderContent(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for ManagedOrderContent(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for ManagedOrderContent(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedOrderContent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedOrderContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderContent()
{
  return &type metadata for ManagedOrderContent;
}

uint64_t ContentPackageUnarchiver.__allocating_init(maximumCompressedSize:maximumTotalSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ContentPackageUnarchiver.unarchive(_:workingDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v22 = a1;
  v23 = a2;
  v25 = a4;
  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D6A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D694();
  sub_23361D64C();
  v15 = *(void (**)(char *, uint64_t))(v12 + 8);
  v16 = v25;
  v15(v14, v11);
  sub_23361D28C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  sub_23361DCA0();
  v17 = sub_23361DD84();
  v18 = *(_QWORD *)(v17 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v20 = v24;
    ContentPackageUnarchiver.unarchive(_:to:)(v22, v23);
    if (v20)
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  }
  return result;
}

void ContentPackageUnarchivingError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23361DD84();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for ContentPackageUnarchivingError();
  MEMORY[0x24BDAC7A8](v2);
  sub_2333F60C0(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_2333F587C + dword_2333F5C24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2333F588C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = *v0;
  v3 = v0[1];
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_stringFromByteCount_countStyle_, v2, 3);
  sub_23361E150();

  v6 = objc_msgSend(v4, sel_stringFromByteCount_countStyle_, v3, 3);
  sub_23361E150();

  *(_QWORD *)(v1 - 80) = 0;
  *(_QWORD *)(v1 - 72) = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 80) = 0x2061746144;
  *(_QWORD *)(v1 - 72) = 0xE500000000000000;
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 80);
}

uint64_t ContentPackageUnarchiver.init(maximumCompressedSize:maximumTotalSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

void ContentPackageUnarchiver.unarchive(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_23361DD84();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_2333F5CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (*(_QWORD *)(v4 + 16) < (uint64_t)BYTE6(v3))
  {
    type metadata accessor for ContentPackageUnarchivingError();
    sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
    swift_allocError();
    __asm { BR              X11 }
  }
  *(_QWORD *)(v6 - 112) = v0;
  type metadata accessor for ArchiveMemoryReader();
  swift_allocObject();
  result = sub_2331D8074();
  if (!v1)
  {
    sub_2333F7080(v5);
    sub_2333F6104();
    MEMORY[0x24BDAC7A8](v8);
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for ContentPackageUnarchivingError()
{
  uint64_t result;

  result = qword_25604E190;
  if (!qword_25604E190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2333F60C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentPackageUnarchivingError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2333F6104()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;

  sub_23361DD18();
  v0 = sub_23361E1F8();
  swift_bridgeObjectRelease();
  v1 = realpath_DARWIN_EXTSN((const char *)(v0 + 32), 0);
  swift_release();
  if (v1)
  {
    sub_23361DD00();
    free(v1);
  }
  else
  {
    type metadata accessor for ContentPackageUnarchivingError();
    sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
    v2 = (void *)swift_allocError();
    v4 = v3;
    v5 = MEMORY[0x234931FA4]();
    if (strerror(v5))
    {
      *v4 = sub_23361E288();
      v4[1] = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {

      __break(1u);
    }
  }
}

uint64_t sub_2333F6200(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _BYTE *, uint64_t);
  int v42;
  int v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE *v54;
  _BYTE *v55;
  void (*v56)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  int data_block;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_BYTE *, uint64_t);
  _WORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_BYTE *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void (*v87)(_BYTE *, uint64_t);
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  void (*v94)(_BYTE *, uint64_t);
  _BYTE *v95;
  _QWORD *v96;
  _BYTE v97[12];
  int v98;
  uint64_t v99;
  void (*v100)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v121 = a3;
  v110 = a4;
  v111 = a5;
  v119 = a2;
  v127 = *MEMORY[0x24BDAC8D0];
  v114 = sub_23361DCDC();
  MEMORY[0x24BDAC7A8](v114);
  v113 = &v97[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  MEMORY[0x24BDAC7A8](v6);
  v112 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D598);
  MEMORY[0x24BDAC7A8](v8);
  v115 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23361DD60();
  v11 = *(_QWORD *)(v10 - 8);
  v117 = v10;
  v118 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v116 = &v97[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_23361DD84();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v97[-v19];
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = &v97[-v22];
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = &v97[-v25];
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = &v97[-v28];
  MEMORY[0x24BDAC7A8](v27);
  v31 = &v97[-v30];
  v32 = v120;
  result = sub_2331D826C();
  if (v32)
    return result;
  v109 = v13;
  v119 = v29;
  v105 = v20;
  v104 = v17;
  v106 = v23;
  v107 = v14;
  v108 = v26;
  v120 = v31;
  type metadata accessor for ArchiveDiskWriter();
  swift_allocObject();
  v34 = sub_2331DEDBC();
  v35 = sub_2331D7CA8();
  v101 = 0;
  v102 = v34;
  while (2)
  {
    v36 = v107;
    v37 = (uint64_t)v115;
    v38 = v118;
    v39 = v119;
    v40 = v109;
    while (1)
    {
      if (!v35)
        return swift_release();
      v121 = v35;
      if (!archive_entry_pathname_utf8())
      {
        type metadata accessor for ContentPackageUnarchivingError();
        sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_release();
        return swift_release();
      }
      sub_23361DD00();
      v41 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32);
      v41(v120, v39, v40);
      v42 = archive_entry_filetype();
      if (v42 != (unsigned __int16)sub_23361DC64())
      {
        v43 = archive_entry_filetype();
        if (v43 != (unsigned __int16)sub_23361DC4C())
        {
          type metadata accessor for ContentPackageUnarchivingError();
          sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
          swift_allocError();
          *v70 = archive_entry_filetype();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          swift_release();
          swift_release();
          return (*(uint64_t (**)(_BYTE *, uint64_t))(v36 + 8))(v120, v109);
        }
      }
      if (!archive_entry_size_is_set())
        goto LABEL_5;
      v103 = archive_entry_size();
      if (v103 < 1)
        goto LABEL_5;
      v44 = v120;
      sub_23361DCE8();
      v45 = v117;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v117) == 1)
        break;
      v46 = v36;
      v47 = v116;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 32))(v116, v37, v45);
      v125 = sub_23361DD48();
      v126 = v48;
      v122 = 0x726F74535F53442ELL;
      v123 = 0xE900000000000065;
      sub_2331685C4();
      v49 = sub_23361EBF4();
      v50 = v47;
      v36 = v46;
      v38 = v118;
      v39 = v119;
      (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v50, v45);
      swift_bridgeObjectRelease();
      if (v49)
      {
        v44 = v120;
        goto LABEL_16;
      }
LABEL_5:
      v40 = v109;
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v120, v109);
      swift_release();
      v35 = sub_2331D7CA8();
    }
    sub_233168608(v37, &qword_25604D598);
LABEL_16:
    v51 = *(_QWORD *)(v121 + 16);
    LODWORD(v99) = archive_entry_filetype();
    v98 = sub_23361DC4C();
    v52 = v109;
    v100 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 16);
    v100(v105, v44, v109);
    sub_23361DCD0();
    v53 = sub_23361DD24();
    v54 = v104;
    if ((v53 & 1) != 0 && (_DWORD)v99 != (unsigned __int16)v98)
    {
      type metadata accessor for ContentPackageUnarchivingError();
      sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
      swift_allocError();
      v92 = v106;
      v100(v93, v106, v52);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v94 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
      v94(v92, v52);
      v94(v120, v52);
      swift_release();
      return swift_release();
    }
    v55 = v108;
    v41(v108, v106, v52);
    v99 = v51;
    v56 = v100;
    v100(v105, v111, v52);
    v56(v54, v55, v52);
    sub_23361DCAC();
    sub_233167C58(&qword_25604E270, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6028], MEMORY[0x24BEE6030]);
    v57 = (uint64_t)v112;
    sub_23361DD78();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v57, 0, 1, v52);
    sub_2331D51CC(v57);
    archive_entry_perm();
    archive_entry_filetype();
    sub_23361DC4C();
    archive_entry_set_perm();
    sub_2331DEC10();
    v58 = 0;
    v59 = v108;
    v60 = v110;
LABEL_19:
    v124 = 0;
    v125 = 0;
    v122 = 0;
    data_block = archive_read_data_block();
    if (data_block)
    {
      v66 = v109;
      if (data_block == 1)
      {
        if (v58 == v103)
        {
          v67 = v101 + v103;
          if (__OFADD__(v101, v103))
            goto LABEL_46;
          v68 = *(_QWORD *)(v60 + 24);
          if (v68 >= v67)
          {
            sub_2331DECE8();
            v101 = v67;
            swift_release();
            v69 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
            v69(v59, v66);
            v69(v120, v66);
            v35 = sub_2331D7CA8();
            continue;
          }
          type metadata accessor for ContentPackageUnarchivingError();
          sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
          swift_allocError();
          *v96 = v68;
        }
        else
        {
          type metadata accessor for ContentPackageUnarchivingError();
          sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
          swift_allocError();
          v100(v95, v59, v66);
        }
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_release();
        swift_release();
        v87 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
        v87(v59, v66);
        v90 = v120;
        v91 = v66;
        return ((uint64_t (*)(_BYTE *, uint64_t))v87)(v90, v91);
      }
      sub_2331D778C();
      v71 = swift_allocError();
      v73 = v72;
      v74 = archive_errno();
      result = archive_error_string();
      if (result)
      {
        v75 = sub_23361E288();
        *(_DWORD *)v73 = v74;
        *(_QWORD *)(v73 + 8) = v75;
        *(_QWORD *)(v73 + 16) = v76;
        sub_2331D797C();
        swift_allocError();
        *(_QWORD *)v77 = v71;
        *(_QWORD *)(v77 + 8) = 0xD000000000000019;
        *(_QWORD *)(v77 + 16) = 0x8000000233676470;
        *(_BYTE *)(v77 + 24) = 1;
        swift_willThrow();
        swift_release();
        swift_release();
        v78 = *(void (**)(_BYTE *, uint64_t))(v107 + 8);
        v78(v59, v66);
        return ((uint64_t (*)(_BYTE *, uint64_t))v78)(v120, v66);
      }
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    break;
  }
  v62 = v124;
  if (v125)
    v63 = v122;
  else
    v63 = 0;
  if ((archive_write_data_block() & 0x8000000000000000) == 0)
  {
    v64 = __OFADD__(v62, v63);
    v58 = v62 + v63;
    if (!v64)
    {
      v65 = *(_QWORD *)(v60 + 24);
      v59 = v108;
      if (v65 < v58)
      {
        type metadata accessor for ContentPackageUnarchivingError();
        sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
        swift_allocError();
        *v86 = v65;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_release();
        swift_release();
        v87 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
        v88 = v59;
        goto LABEL_39;
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_46:
    __break(1u);
  }
  sub_2331D778C();
  v79 = swift_allocError();
  v81 = v80;
  v82 = archive_errno();
  result = archive_error_string();
  if (!result)
    goto LABEL_48;
  v83 = sub_23361E288();
  *(_DWORD *)v81 = v82;
  *(_QWORD *)(v81 + 8) = v83;
  *(_QWORD *)(v81 + 16) = v84;
  sub_2331DEB68();
  swift_allocError();
  *(_QWORD *)v85 = v79;
  *(_QWORD *)(v85 + 8) = 0xD00000000000001ALL;
  *(_QWORD *)(v85 + 16) = 0x8000000233676490;
  *(_BYTE *)(v85 + 24) = 1;
  swift_willThrow();
  swift_release();
  swift_release();
  v87 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
  v88 = v108;
LABEL_39:
  v89 = v109;
  v87(v88, v109);
  v90 = v120;
  v91 = v89;
  return ((uint64_t (*)(_BYTE *, uint64_t))v87)(v90, v91);
}

uint64_t sub_2333F6E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v28 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D22C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361DD84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v15 = sub_23361E258();
  if (v16)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v26[1] = v15;
    v17(v11, a2, v8);
    v18 = sub_23361D340();
    v27 = a1;
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = v7;
    v22 = v28;
    v26[0] = v8;
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v23(v21, 1, 1, v18);
    sub_23361D334();
    (*(void (**)(uint64_t, _QWORD))(v9 + 8))(a2, v26[0]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v23)(v22, 0, 1, v19);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v25 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v28, 1, 1, v25);
  }
}

uint64_t ContentPackageUnarchiver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ContentPackageUnarchiver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_2333F7080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t inited;
  void *v21;
  id v22;
  __int16 v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  id v42[11];

  v42[10] = *(id *)MEMORY[0x24BDAC8D0];
  v40 = sub_23361D22C();
  v2 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361DD84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v38 = a1;
  v39 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v8, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCD7A0], v40);
  sub_2333F6E6C((uint64_t)v8, (uint64_t)v4, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_233168608((uint64_t)v11, &qword_254248700);
    type metadata accessor for ContentPackageUnarchivingError();
    sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
    swift_allocError();
    v15(v16, v38, v5);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  v17 = v39;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v39, v11, v12);
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = (void *)sub_23361D268();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604E278);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v21 = (void *)*MEMORY[0x24BDD0CC8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD0CC8];
  v22 = v21;
  v23 = sub_23361DC70();
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE4478];
  *(_WORD *)(inited + 40) = v23;
  sub_233160334(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_233167C58(&qword_2560422D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_233624A94);
  v24 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v42[0] = 0;
  LODWORD(inited) = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 0, v24, v42);

  if ((_DWORD)inited)
  {
    v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26 = v42[0];
    v25(v17, v12);
    return;
  }
  v27 = v42[0];
  v28 = (void *)sub_23361D1B4();

  swift_willThrow();
  v42[0] = v28;
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  sub_2333F7DE8();
  if (!swift_dynamicCast())
    goto LABEL_13;

  v30 = v41;
  v31 = objc_msgSend(v41, sel_domain);
  v32 = sub_23361E150();
  v34 = v33;

  if (v32 == sub_23361E150() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v36 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
  {
LABEL_10:
    if (objc_msgSend(v30, sel_code) == (id)516)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);

      return;
    }
  }
  swift_willThrow();
LABEL_13:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);

}

uint64_t sub_2333F7554(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_2333F6200(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE **)(v2 + 32));
}

uint64_t sub_2333F7570()
{
  return sub_233167C58(&qword_25604E118, (uint64_t (*)(uint64_t))type metadata accessor for ContentPackageUnarchivingError, (uint64_t)&protocol conformance descriptor for ContentPackageUnarchivingError);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentPackageUnarchivingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 5u:
      case 6u:
        v7 = sub_23361DD84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ContentPackageUnarchivingError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
    case 3:
    case 5:
    case 6:
      v3 = sub_23361DD84();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for ContentPackageUnarchivingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 5u:
    case 6u:
      v7 = sub_23361DD84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_5;
    case 4u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for ContentPackageUnarchivingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2333F7A60((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 5u:
      case 6u:
        v6 = sub_23361DD84();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_6;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2333F7A60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentPackageUnarchivingError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ContentPackageUnarchivingError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 5u:
    case 6u:
      v6 = sub_23361DD84();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for ContentPackageUnarchivingError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2333F7A60((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 5u:
      case 6u:
        v6 = sub_23361DD84();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2333F7D1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361DD84();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ContentPackageUnarchiver()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContentPackageUnarchiver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentPackageUnarchiver.__allocating_init(maximumCompressedSize:maximumTotalSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_2333F7DE8()
{
  unint64_t result;

  result = qword_2560472E8;
  if (!qword_2560472E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2560472E8);
  }
  return result;
}

id ManagedOrderReturnLabel.__allocating_init(name:url:localizationName:context:)(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t inited;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a4;
  v42 = a6;
  v10 = sub_23361CE00();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23361D340();
  v18 = *(_QWORD *)(v17 - 8);
  v43 = v17;
  v44 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_23361D358();
  v34 = v16;
  v35 = v11;
  v36 = v10;
  v37 = v20;
  v38 = v19;
  v39 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042F58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v22 = (void *)*MEMORY[0x24BDBCBE8];
  v41 = a3;
  *(_QWORD *)(inited + 32) = v22;
  v23 = v22;
  sub_2333EFA00(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_23361D244();
  swift_bridgeObjectRelease();
  v24 = (uint64_t)v34;
  sub_23361CDE8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  v25 = sub_23361DACC();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_23319CC30(v24);
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v27 = sub_23361DA84();
    v28 = v29;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  v30 = v41;
  v31 = ManagedOrderReturnLabel.__allocating_init(data:name:mimeType:localizationName:context:)(v38, v37, a1, a2, v27, v28, v40, v39, v42);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v43);
  return v31;
}

id ManagedOrderReturnLabel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturnLabel.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReturnLabel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedOrderReturnLabel.__allocating_init(data:name:mimeType:localizationName:context:)(uint64_t a1, unint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8, void *a9)
{
  objc_class *v9;
  objc_class *v10;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v10 = v9;
  v15 = objc_msgSend(objc_allocWithZone(v10), sel_initWithContext_, a9);
  v16 = (void *)sub_23361D3AC();
  objc_msgSend(v15, sel_setData_, v16);

  v17 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setName_, v17);

  if (a6)
  {
    v18 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v15, sel_setMimeType_, v18);

  if (a8)
  {
    v19 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v15, sel_setLocalizationName_, v19);

  sub_23316BEA4(a1, a2);
  return v15;
}

void sub_2333F8524(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D3AC();
  objc_msgSend(v2, sel_setData_, v3);

}

uint64_t type metadata accessor for ManagedOrderReturnLabel()
{
  return objc_opt_self();
}

uint64_t BankConnectAutoBugCaptureReporter.ValidationIssueType.rawValue.getter()
{
  return 0x69746164696C6176;
}

uint64_t BankConnectAutoBugCaptureReporter.ValidationIssueType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2333F8624()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333F8680()
{
  return sub_23361E0A8();
}

uint64_t sub_2333F86A4()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2333F86FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2333F874C(_QWORD *a1@<X8>)
{
  *a1 = 0x69746164696C6176;
  a1[1] = 0xEF726F7272456E6FLL;
}

uint64_t sub_2333F8774()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *v0;
  sub_2333F9AA8(1);
  swift_bridgeObjectRelease();
  sub_2333F9B30();
  v2 = sub_23361EBE8();
  swift_bridgeObjectRelease();
  v3 = 0x65736E6F70736572;
  v4 = 0xEF64696C61766E49;
  if (v1 != 1)
  {
    v3 = 0x61766E4961746164;
    v4 = 0xEB0000000064696CLL;
  }
  if (v1)
    v5 = v3;
  else
    v5 = 0xD000000000000015;
  if (v1)
    v6 = v4;
  else
    v6 = 0x8000000233669680;
  sub_2333F9B74(1uLL, v5, v6);
  swift_bridgeObjectRelease();
  sub_2333F9C10();
  swift_bridgeObjectRetain();
  sub_23361E264();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t BankConnectAutoBugCaptureReporter.WebServiceIssueType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65736E6F70736572;
  if (*v0 != 1)
    v1 = 0x61766E4961746164;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

FinanceKit::BankConnectAutoBugCaptureReporter::WebServiceIssueType_optional __swiftcall BankConnectAutoBugCaptureReporter.WebServiceIssueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::BankConnectAutoBugCaptureReporter::WebServiceIssueType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2333F89FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_233225A78(*a1, *a2);
}

uint64_t sub_2333F8A08()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2333F8AC0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2333F8B54()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::BankConnectAutoBugCaptureReporter::WebServiceIssueType_optional sub_2333F8C08(Swift::String *a1)
{
  return BankConnectAutoBugCaptureReporter.WebServiceIssueType.init(rawValue:)(*a1);
}

void sub_2333F8C14(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;

  v2 = *v1;
  v3 = 0x8000000233669680;
  v4 = 0xEF64696C61766E49;
  v5 = 0x65736E6F70736572;
  if (v2 != 1)
  {
    v5 = 0x61766E4961746164;
    v4 = 0xEB0000000064696CLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0xD000000000000015;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_2333F8C8C()
{
  __asm { BR              X9 }
}

uint64_t sub_2333F8CE4()
{
  int v0;
  uint64_t v1;

  sub_2333F9AA8(1);
  swift_bridgeObjectRelease();
  sub_2333F9B30();
  sub_23361EBE8();
  v1 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)sub_2333F8DF4 + 4 * byte_233645AAB[v0]))(v1);
}

uint64_t sub_2333F8DF4()
{
  uint64_t v0;
  uint64_t v1;

  sub_2333F9B74(1uLL, v0, 0x80000002336696E0);
  swift_bridgeObjectRelease();
  sub_2333F9C10();
  swift_bridgeObjectRetain();
  sub_23361E264();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2333F8F50 + 4 * byte_233645AB6[*v0]))(0xD000000000000012, 0x80000002336696C0);
}

FinanceKit::BankConnectAutoBugCaptureReporter::ConsentMirroringIssueType_optional __swiftcall BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::BankConnectAutoBugCaptureReporter::ConsentMirroringIssueType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2333F9048(char *a1)
{
  sub_233225880(*a1);
}

uint64_t sub_2333F9054()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23361F350();
  sub_23353E09C((uint64_t)v3, v1);
  return sub_23361F3A4();
}

void sub_2333F9098(uint64_t a1)
{
  char *v1;

  sub_23353E09C(a1, *v1);
}

uint64_t sub_2333F90A0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23361F350();
  sub_23353E09C((uint64_t)v3, v1);
  return sub_23361F3A4();
}

FinanceKit::BankConnectAutoBugCaptureReporter::ConsentMirroringIssueType_optional sub_2333F90E0(Swift::String *a1)
{
  return BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType.init(rawValue:)(*a1);
}

uint64_t sub_2333F90EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2333F9110()
{
  __asm { BR              X9 }
}

uint64_t sub_2333F9164()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  sub_2333F9AA8(1);
  swift_bridgeObjectRelease();
  sub_2333F9B30();
  sub_23361EBE8();
  v2 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)sub_2333F9230 + 4 * byte_233645AC7[v1]))(v2, v0 + 8);
}

uint64_t sub_2333F9230()
{
  uint64_t v0;

  sub_2333F9B74(1uLL, 0xD000000000000017, 0x80000002336698C0);
  swift_bridgeObjectRelease();
  sub_2333F9C10();
  swift_bridgeObjectRetain();
  sub_23361E264();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2333F9344 + 4 * byte_233645ACD[*v0]))(0xD00000000000001FLL, 0x80000002336698A0);
}

unint64_t sub_2333F9344()
{
  return 0xD000000000000017;
}

FinanceKit::BankConnectAutoBugCaptureReporter::AccountMatchMirroringIssueType_optional __swiftcall BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::BankConnectAutoBugCaptureReporter::AccountMatchMirroringIssueType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2333F93F4(char *a1)
{
  sub_233225714(*a1);
}

void sub_2333F9400()
{
  char *v0;

  sub_23353DE84(*v0);
}

void sub_2333F9408(uint64_t a1)
{
  char *v1;

  sub_23353DFE8(a1, *v1);
}

void sub_2333F9410(uint64_t a1)
{
  char *v1;

  sub_23353FA74(a1, *v1);
}

FinanceKit::BankConnectAutoBugCaptureReporter::AccountMatchMirroringIssueType_optional sub_2333F9418(Swift::String *a1)
{
  return BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType.init(rawValue:)(*a1);
}

uint64_t sub_2333F9424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t BankConnectAutoBugCaptureReporter.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)FKAutoBugCaptureReporter), sel_init);
  return v0;
}

uint64_t BankConnectAutoBugCaptureReporter.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)FKAutoBugCaptureReporter), sel_init);
  return v0;
}

void BankConnectAutoBugCaptureReporter.reportValidationIssue(_:error:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  sub_2333F9AA8(1);
  sub_2333F9B30();
  v2 = sub_23361EBE8();
  v4 = v3;
  swift_bridgeObjectRelease();
  v14 = v4;
  v15 = sub_2333F9B74(1uLL, 0x69746164696C6176, 0xEF726F7272456E6FLL);
  v16 = v5;
  v17 = v6;
  v18 = v7;
  sub_2333F9C10();
  swift_bridgeObjectRetain();
  sub_23361E264();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2333F9C54();
  v8 = *(void **)(v1 + 16);
  v9 = (void *)sub_23361E12C();
  v10 = (void *)sub_23361E12C();
  v11 = (void *)sub_23361E12C();
  v12 = (void *)sub_23361E12C();
  v13 = (void *)sub_23361E054();
  objc_msgSend(v8, sel_reportIssueWithDomain_type_subtype_subtypeContext_payload_, v9, v10, v11, v12, v13, v2, v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void BankConnectAutoBugCaptureReporter.reportWebServiceIssue(_:error:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  sub_2333F8774();
  sub_2333F9C54();
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = (void *)sub_23361E12C();
  v6 = (id)sub_23361E054();
  objc_msgSend(v1, sel_reportIssueWithDomain_type_subtype_subtypeContext_payload_, v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void BankConnectAutoBugCaptureReporter.reportConsentMirroringIssue(_:error:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  sub_2333F8C8C();
  sub_2333F9C54();
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = (void *)sub_23361E12C();
  v6 = (id)sub_23361E054();
  objc_msgSend(v1, sel_reportIssueWithDomain_type_subtype_subtypeContext_payload_, v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void BankConnectAutoBugCaptureReporter.reportAccountMatchMirroringIssue(_:error:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  sub_2333F9110();
  sub_2333F9C54();
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = (void *)sub_23361E12C();
  v6 = (id)sub_23361E054();
  objc_msgSend(v1, sel_reportIssueWithDomain_type_subtype_subtypeContext_payload_, v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t BankConnectAutoBugCaptureReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BankConnectAutoBugCaptureReporter.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_2333F9AA8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23361E24C();
    return sub_23361E30C();
  }
  return result;
}

unint64_t sub_2333F9B30()
{
  unint64_t result;

  result = qword_25604E280;
  if (!qword_25604E280)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25604E280);
  }
  return result;
}

unint64_t sub_2333F9B74(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_23361E24C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_23361E30C();
  }
  __break(1u);
  return result;
}

unint64_t sub_2333F9C10()
{
  unint64_t result;

  result = qword_25604E288;
  if (!qword_25604E288)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25604E288);
  }
  return result;
}

unint64_t sub_2333F9C54()
{
  uint64_t inited;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542465E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233627000;
  *(_QWORD *)(inited + 32) = 0x6D6F44726F727265;
  *(_QWORD *)(inited + 40) = 0xEB000000006E6961;
  v1 = (void *)sub_23361D1A8();
  v2 = objc_msgSend(v1, sel_domain);

  v3 = sub_23361E150();
  v5 = v4;

  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = 0x646F43726F727265;
  *(_QWORD *)(inited + 72) = 0xE900000000000065;
  v6 = (void *)sub_23361D1A8();
  objc_msgSend(v6, sel_code);

  *(_QWORD *)(inited + 80) = sub_23361F1D0();
  *(_QWORD *)(inited + 88) = v7;
  *(_QWORD *)(inited + 96) = 0xD000000000000010;
  *(_QWORD *)(inited + 104) = 0x8000000233676580;
  v8 = (void *)sub_23361D1A8();
  v9 = objc_msgSend(v8, sel_localizedDescription);

  v10 = sub_23361E150();
  v12 = v11;

  *(_QWORD *)(inited + 112) = v10;
  *(_QWORD *)(inited + 120) = v12;
  return sub_23315F950(inited);
}

unint64_t sub_2333F9DD0()
{
  unint64_t result;

  result = qword_25604E290;
  if (!qword_25604E290)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAutoBugCaptureReporter.ValidationIssueType, &type metadata for BankConnectAutoBugCaptureReporter.ValidationIssueType);
    atomic_store(result, (unint64_t *)&qword_25604E290);
  }
  return result;
}

unint64_t sub_2333F9E18()
{
  unint64_t result;

  result = qword_25604E298;
  if (!qword_25604E298)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAutoBugCaptureReporter.WebServiceIssueType, &type metadata for BankConnectAutoBugCaptureReporter.WebServiceIssueType);
    atomic_store(result, (unint64_t *)&qword_25604E298);
  }
  return result;
}

unint64_t sub_2333F9E60()
{
  unint64_t result;

  result = qword_25604E2A0;
  if (!qword_25604E2A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType, &type metadata for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType);
    atomic_store(result, (unint64_t *)&qword_25604E2A0);
  }
  return result;
}

unint64_t sub_2333F9EA8()
{
  unint64_t result;

  result = qword_25604E2A8;
  if (!qword_25604E2A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType, &type metadata for BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType);
    atomic_store(result, (unint64_t *)&qword_25604E2A8);
  }
  return result;
}

uint64_t type metadata accessor for BankConnectAutoBugCaptureReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectAutoBugCaptureReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectAutoBugCaptureReporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for BankConnectAutoBugCaptureReporter.ValidationIssueType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2333F9F60 + 4 * byte_233645AD3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2333F9F80 + 4 * byte_233645AD8[v4]))();
}

_BYTE *sub_2333F9F60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2333F9F80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333F9F88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333F9F90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2333F9F98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2333F9FA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAutoBugCaptureReporter.ValidationIssueType()
{
  return &type metadata for BankConnectAutoBugCaptureReporter.ValidationIssueType;
}

uint64_t storeEnumTagSinglePayload for BankConnectAutoBugCaptureReporter.WebServiceIssueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2333FA008 + 4 * byte_233645AE2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2333FA03C + 4 * byte_233645ADD[v4]))();
}

uint64_t sub_2333FA03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333FA04CLL);
  return result;
}

uint64_t sub_2333FA058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333FA060);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2333FA064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAutoBugCaptureReporter.WebServiceIssueType()
{
  return &type metadata for BankConnectAutoBugCaptureReporter.WebServiceIssueType;
}

uint64_t getEnumTagSinglePayload for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2333FA164 + 4 * byte_233645AEC[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2333FA198 + 4 * byte_233645AE7[v4]))();
}

uint64_t sub_2333FA198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA1A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333FA1A8);
  return result;
}

uint64_t sub_2333FA1B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333FA1BCLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2333FA1C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA1C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType()
{
  return &type metadata for BankConnectAutoBugCaptureReporter.ConsentMirroringIssueType;
}

uint64_t storeEnumTagSinglePayload for BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2333FA230 + 4 * byte_233645AF6[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2333FA264 + 4 * byte_233645AF1[v4]))();
}

uint64_t sub_2333FA264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA26C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2333FA274);
  return result;
}

uint64_t sub_2333FA280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2333FA288);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2333FA28C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2333FA294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType()
{
  return &type metadata for BankConnectAutoBugCaptureReporter.AccountMatchMirroringIssueType;
}

uint64_t OrderBundleValidator.init(walletPreferences:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t OrderBundleValidationError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v2;
}

void OrderBundleValidator.validate(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *OrderBundleSigner;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50[7];

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v45 - v10;
  v13 = *v1;
  v12 = v1[1];
  v14 = *(_QWORD *)(a1 + 16);
  sub_2333CB6BC(a1 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content, (uint64_t)&v45 - v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12) & 1) != 0)
  {
    if (qword_254246760 != -1)
      swift_once();
    v15 = sub_23361DB80();
    __swift_project_value_buffer(v15, (uint64_t)qword_254246748);
    swift_retain_n();
    v16 = sub_23361DB68();
    v17 = sub_23361E750();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v18 = 136315138;
      v50[0] = v19;
      v48 = v18 + 4;
      sub_23361D340();
      sub_2333E9744();
      v20 = sub_23361F1D0();
      v50[6] = sub_233164DCC(v20, v21, v50);
      sub_23361EBC4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v16, v17, "Skipping validation of order at %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v19, -1, -1);
      MEMORY[0x234934590](v18, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    goto LABEL_11;
  }
  v22 = v49;
  ContentPackageReader.data(forResource:withExtension:)(0x74736566696E616DLL, 0xE800000000000000, 1852797802, 0xE400000000000000);
  v49 = v22;
  if (v22)
  {
LABEL_11:
    sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderContent);
    return;
  }
  v25 = v23;
  v26 = v24;
  v27 = v14;
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  sub_23328B9E0();
  v28 = v49;
  sub_23361CA58();
  v49 = v28;
  if (v28)
  {
    sub_23316BEA4(v25, v26);
    swift_release();
    goto LABEL_11;
  }
  swift_release();
  v29 = v49;
  v30 = v50[0];
  ContentPackageReader.data(forResource:withExtension:)(0x727574616E676973, 0xE900000000000065, 0, 0);
  v49 = v29;
  if (v29)
  {
    sub_23316BEA4(v25, v26);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v46 = v30;
  v47 = v31;
  v48 = (uint8_t *)v32;
  v33 = v27;
  sub_2333CB6BC((uint64_t)v11, (uint64_t)v9);
  sub_23328BA24((uint64_t)v9, (uint64_t)v5);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
  v34 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  OrderBundleSigner = (void *)SecPolicyCreateOrderBundleSigner();

  if (!OrderBundleSigner)
  {
    swift_bridgeObjectRelease();
    v40 = sub_23361D304();
    v42 = v41;
    sub_2333FA8F0();
    v43 = swift_allocError();
    *v44 = 0xD000000000000039;
    v44[1] = 0x80000002336765A0;
    v44[2] = v40;
    v44[3] = v42;
    v49 = v43;
    swift_willThrow();
    sub_23316BEA4(v25, v26);
    sub_23316BEA4(v47, (unint64_t)v48);
    goto LABEL_11;
  }
  v37 = v47;
  v36 = (unint64_t)v48;
  v50[0] = v47;
  v50[1] = (uint64_t)v48;
  v50[2] = v25;
  v50[3] = v26;
  v50[4] = (uint64_t)OrderBundleSigner;
  v38 = OrderBundleSigner;
  sub_2331D1374(v37, v36);
  sub_2331D1374(v25, v26);
  ContentPackageSignatureValidator.validateSignature()();
  v49 = v39;
  if (v39)
  {
    sub_23316BEA4(v37, v36);
    sub_23316BEA4(v25, v26);
    swift_bridgeObjectRelease();

    sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderContent);
    sub_23316BEA4(v37, v36);
    sub_23316BEA4(v25, v26);

  }
  else
  {
    v50[0] = v46;
    ContentPackageManifestValidator.validate(_:using:)((uint64_t)v50, v33);
    sub_23316BEA4(v37, v36);
    sub_23316BEA4(v25, v26);

    sub_23316BEA4(v37, v36);
    sub_23316BEA4(v25, v26);

    sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderContent);
    swift_bridgeObjectRelease();
  }
}

void sub_2333FA8DC(uint64_t a1)
{
  OrderBundleValidator.validate(_:)(a1);
}

unint64_t sub_2333FA8F0()
{
  unint64_t result;

  result = qword_25604E350;
  if (!qword_25604E350)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderBundleValidationError, &type metadata for OrderBundleValidationError);
    atomic_store(result, &qword_25604E350);
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderBundleValidationError()
{
  return &type metadata for OrderBundleValidationError;
}

ValueMetadata *type metadata accessor for OrderBundleValidationError.Context()
{
  return &type metadata for OrderBundleValidationError.Context;
}

uint64_t dispatch thunk of OrderBundleValidating.validate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for OrderBundleValidator()
{
  return &type metadata for OrderBundleValidator;
}

uint64_t sub_2333FA980(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_primaryAccountIdentifier);
  v11 = sub_23361E150();
  v13 = v12;

  v14 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = v3;
  v15[8] = v11;
  v15[9] = v13;
  v16 = a1;
  swift_retain();
  v17 = v3;
  sub_2333B205C((uint64_t)v9, (uint64_t)&unk_25604E360, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_2333FAA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[6] = a8;
  v8[7] = v11;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  v9 = type metadata accessor for Institution(0);
  v8[8] = v9;
  v8[9] = *(_QWORD *)(v9 - 8);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  v8[12] = type metadata accessor for BankConnectService.Message();
  v8[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  v8[14] = swift_task_alloc();
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2333FAB6C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  if (qword_256041D40 != -1)
    swift_once();
  v1 = (void *)v0[3];
  *(_QWORD *)v0[13] = v1;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043050 + dword_256043050);
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[16] = v3;
  *v3 = v0;
  v3[1] = sub_2333FAC28;
  return v5(v0[15], v0[13]);
}

uint64_t sub_2333FAC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  return swift_task_switch();
}

uint64_t sub_2333FACA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_2333FB3BC(*(_QWORD *)(v0 + 120), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    sub_233293878(*(_QWORD *)(v0 + 112), v6);
    sub_2333FB444();
    sub_23318C604(v6, v5);
    v4 = FKInstitution.init(_:)(v5);
    sub_233168500(v6, type metadata accessor for Institution);
  }
  v7 = *(_QWORD *)(v0 + 120);
  (*(void (**)(id))(v0 + 32))(v4);

  sub_2333FB404(v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333FAD98()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E768();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 56);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 48);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_233164DCC(v6, v5, &v11);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v2, v3, "Failed to match institution with a pass: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 136);
  (*(void (**)(_QWORD))(v0 + 32))(0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2333FAF94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23318C26C;
  return sub_2333FAA98(a1, v4, v5, v6, v7, v8, v9, v10);
}

id BankConnectInstitutionMatcher.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BankConnectInstitutionMatcher.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectInstitutionMatcher();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BankConnectInstitutionMatcher()
{
  return objc_opt_self();
}

id BankConnectInstitutionMatcher.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectInstitutionMatcher();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BankConnectInstitutionMatcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectInstitutionMatcher.institution(for:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t sub_2333FB2B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2333FB31C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2331676FC;
  return sub_2333FAA98(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2333FB3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2333FB404(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2333FB444()
{
  unint64_t result;

  result = qword_25604C778;
  if (!qword_25604C778)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25604C778);
  }
  return result;
}

uint64_t OrderBundleWriter.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL;
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OrderBundleWriter.__allocating_init(bundleURL:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  OrderBundleWriter.init(bundleURL:)(a1);
  return v2;
}

_QWORD *OrderBundleWriter.init(bundleURL:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[48];
  uint64_t v24;

  v3 = v1;
  v24 = *v1;
  v5 = sub_23361CE00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042F58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  v10 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC60];
  v11 = (void *)*MEMORY[0x24BDBCCA0];
  *(_QWORD *)(inited + 40) = *MEMORY[0x24BDBCCA0];
  v12 = v10;
  v13 = v11;
  sub_2333EFA00(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_23361D244();
  if (v2)
  {
    v14 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((sub_23361CDD0() & 1) != 0)
    {
      v16 = sub_23361CDDC();
      if (v16 != 2 && (v16 & 1) == 0)
      {
        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
        v21 = (uint64_t)v3 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL;
        v22 = sub_23361D340();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a1, v22);
        return v3;
      }
      sub_2333FC23C();
      swift_allocError();
      *v18 = xmmword_23363ADC0;
    }
    else
    {
      sub_2333FC23C();
      swift_allocError();
      *v15 = 0;
      v15[1] = 0;
    }
    swift_willThrow();
    v19 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t OrderBundleWriter.manifestURL.getter()
{
  return sub_23361D28C();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OrderBundleWriter.updateManifest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25[16];
  unint64_t *v26;
  unint64_t v27;

  v24 = sub_23361CAA0();
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - v8;
  v10 = v0 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v19 - v8, v0 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL, v3);
  type metadata accessor for ContentPackageHashesEnumerator();
  v11 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL, v9, v3);
  v27 = sub_23315F950(MEMORY[0x24BEE4AF8]);
  v26 = &v27;
  ContentPackageHashesEnumerator.enumerateHashes(loadFilesInChunks:filesPredicate:body:)(0, (uint64_t (*)(char *))j___s10FinanceKit30ContentPackageHashesEnumeratorC29fileShouldBePresentInManifestySb6System8FilePathVFZ_0, 0, (void (*)(char *, id, uint64_t))sub_2333FC280, (uint64_t)v25);
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = v10;
    v22 = v7;
    swift_setDeallocating();
    v20 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v20(v11 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL, v3);
    swift_deallocClassInstance();
    v12 = v27;
    sub_23361CB00();
    swift_allocObject();
    sub_23361CAF4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604E3A0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_233627000;
    sub_23361CA88();
    sub_23361CA94();
    sub_23361CA7C();
    v27 = v13;
    sub_233167C58(&qword_25604E3A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604E3B0);
    sub_2333FC298();
    sub_23361EC6C();
    sub_23361CAAC();
    v27 = v12;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
    sub_2333FC2E4();
    v14 = sub_23361CAE8();
    v16 = v15;
    v17 = (void (*)(char *, uint64_t))v20;
    swift_bridgeObjectRelease();
    v18 = v22;
    sub_23361D28C();
    sub_23361D3DC();
    v17(v18, v3);
    sub_23316BEA4(v14, v16);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

FinanceKit::ContentPackageManifest __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OrderBundleWriter.generateManifest(loadFilesInChunks:)(Swift::Bool loadFilesInChunks)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  FinanceKit::ContentPackageManifest result;
  _BYTE v12[16];
  unint64_t *v13;
  unint64_t v14;

  v4 = loadFilesInChunks;
  v5 = v1;
  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL, v6);
  type metadata accessor for ContentPackageHashesEnumerator();
  v10 = swift_allocObject();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v10 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL, v9, v6);
  v14 = sub_23315F950(MEMORY[0x24BEE4AF8]);
  v13 = &v14;
  ContentPackageHashesEnumerator.enumerateHashes(loadFilesInChunks:filesPredicate:body:)(v4, (uint64_t (*)(char *))j___s10FinanceKit30ContentPackageHashesEnumeratorC29fileShouldBePresentInManifestySb6System8FilePathVFZ_0, 0, (void (*)(char *, id, uint64_t))sub_2333FC5E8, (uint64_t)v12);
  if (v3)
  {
    swift_release();
    return (FinanceKit::ContentPackageManifest)swift_bridgeObjectRelease();
  }
  else
  {
    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL, v6);
    result.hashesByFileName._rawValue = (void *)swift_deallocClassInstance();
    *v5 = v14;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> OrderBundleWriter.writeManifest(_:)(FinanceKit::ContentPackageManifest a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_23361D340();
  v15 = *(_QWORD *)(v2 - 8);
  v16 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361CAA0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = *(_QWORD *)a1.hashesByFileName._rawValue;
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604E3A0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233627000;
  sub_23361CA88();
  sub_23361CA94();
  sub_23361CA7C();
  v18 = v7;
  sub_233167C58(&qword_25604E3A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604E3B0);
  sub_2333FC298();
  sub_23361EC6C();
  sub_23361CAAC();
  v18 = v6;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
  sub_2333FC2E4();
  v8 = v17;
  v9 = sub_23361CAE8();
  if (v8)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v9;
    v12 = v10;
    v14 = v15;
    v13 = v16;
    swift_bridgeObjectRelease();
    sub_23361D28C();
    sub_23361D3DC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
    sub_23316BEA4(v11, v12);
    swift_release();
  }
}

uint64_t sub_2333FBF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v7 = sub_23361DD18();
  v9 = v8;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *a4;
  *a4 = 0x8000000000000000;
  sub_23328EDF8(a2, a3, v7, v9, isUniquelyReferenced_nonNull_native);
  *a4 = v12;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t OrderBundleWriter.writeOrder(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];

  v1 = sub_23361CAC4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D28C();
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB358], v1);
  sub_23361CADC();
  type metadata accessor for RawOrderContent();
  sub_233167C58(&qword_25604E3C0, (uint64_t (*)(uint64_t))type metadata accessor for RawOrderContent, (uint64_t)&protocol conformance descriptor for RawOrderContent);
  v9 = sub_23361CAE8();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v11 = v9;
    v12 = v10;
    sub_23361D3DC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_23316BEA4(v11, v12);
  }
  return swift_release();
}

uint64_t OrderBundleWriter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t OrderBundleWriter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit17OrderBundleWriter_bundleURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_2333FC23C()
{
  unint64_t result;

  result = qword_25604E398;
  if (!qword_25604E398)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderBundleWriterError, &type metadata for OrderBundleWriterError);
    atomic_store(result, (unint64_t *)&qword_25604E398);
  }
  return result;
}

uint64_t sub_2333FC280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2333FBF34(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

unint64_t sub_2333FC298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604E3B8;
  if (!qword_25604E3B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604E3B0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25604E3B8);
  }
  return result;
}

unint64_t sub_2333FC2E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256043200;
  if (!qword_256043200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256048E80);
    v2[0] = MEMORY[0x24BEE0D08];
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x234934494](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256043200);
  }
  return result;
}

unint64_t destroy for OrderBundleWriterError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s10FinanceKit22OrderBundleWriterErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for OrderBundleWriterError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OrderBundleWriterError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderBundleWriterError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OrderBundleWriterError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

_QWORD *sub_2333FC550(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderBundleWriterError()
{
  return &type metadata for OrderBundleWriterError;
}

uint64_t sub_2333FC580()
{
  return type metadata accessor for OrderBundleWriter();
}

uint64_t type metadata accessor for OrderBundleWriter()
{
  uint64_t result;

  result = qword_25604E3F0;
  if (!qword_25604E3F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for OrderBundleWriter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OrderBundleWriter.__allocating_init(bundleURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2333FC5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2333FC280(a1, a2, a3);
}

uint64_t sub_2333FC5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 == 1)
    return MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v4 = Array<A>.pickupFulfillments.getter(*(_QWORD *)(v0 + 8));
    v5 = sub_2333FC7D0(v4);
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_5:
      v6 = Array<A>.pickupFulfillments.getter(v3);
      sub_2333FC7D0(v6);
      v7 = swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v5 = sub_233160598(MEMORY[0x24BEE4AF8]);
    if (v3)
      goto LABEL_5;
  }
  v7 = sub_233160598(MEMORY[0x24BEE4AF8]);
LABEL_8:
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23334FD0C(v5, (uint64_t (*)(uint64_t, uint64_t, char *))sub_2333FD30C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v10 = sub_2331605A4(MEMORY[0x24BEE4AF8]);
    if (v3)
      goto LABEL_10;
LABEL_12:
    v12 = sub_2331605A4(MEMORY[0x24BEE4AF8]);
    goto LABEL_13;
  }
  v9 = Array<A>.shippingFulfillments.getter(v1);
  v10 = sub_2333FC9E4(v9);
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_12;
LABEL_10:
  v11 = Array<A>.shippingFulfillments.getter(v3);
  sub_2333FC9E4(v11);
  v12 = swift_bridgeObjectRelease();
LABEL_13:
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23334FD0C(v10, (uint64_t (*)(uint64_t, uint64_t, char *))sub_2333FD318);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233189424(v13);
  return v8;
}

uint64_t sub_2333FC7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = type metadata accessor for RawOrderPickupFulfillment();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273F10(0, v5, 0);
    v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v7 = *(_QWORD *)(v2 + 72);
    v8 = v21;
    v19 = v7;
    do
    {
      sub_2331684BC(v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v9 = &v4[*(int *)(v20 + 60)];
      v10 = *(_QWORD *)v9;
      v11 = *((_QWORD *)v9 + 1);
      v12 = v4[8];
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273F10(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_233273F10(v13 > 1, v14 + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v11;
      *(_BYTE *)(v15 + 48) = v12;
      v6 += v7;
      --v5;
    }
    while (v5);
  }
  else if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
    v16 = MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042190);
  v16 = sub_23361EF60();
LABEL_11:
  v21 = v16;
  v17 = swift_bridgeObjectRetain();
  sub_2333FCF70(v17, 1, &v21, (unint64_t)sub_23327EE44, (void (*)(uint64_t, uint64_t))sub_23327B568);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2333FC9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = type metadata accessor for RawOrderShippingFulfillment();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273F3C(0, v5, 0);
    v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v7 = *(_QWORD *)(v2 + 72);
    v8 = v21;
    v19 = v7;
    do
    {
      sub_2331684BC(v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v9 = &v4[*(int *)(v20 + 64)];
      v10 = *(_QWORD *)v9;
      v11 = *((_QWORD *)v9 + 1);
      v12 = v4[40];
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273F3C(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_233273F3C(v13 > 1, v14 + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v11;
      *(_BYTE *)(v15 + 48) = v12;
      v6 += v7;
      --v5;
    }
    while (v5);
  }
  else if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
    v16 = MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042188);
  v16 = sub_23361EF60();
LABEL_11:
  v21 = v16;
  v17 = swift_bridgeObjectRetain();
  sub_2333FCF70(v17, 1, &v21, (unint64_t)sub_23327EE50, (void (*)(uint64_t, uint64_t))sub_23327B574);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2333FCBF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = type metadata accessor for RawOrderReturn();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273F68(0, v5, 0);
    v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v7 = *(_QWORD *)(v2 + 72);
    v8 = v21;
    v19 = v7;
    do
    {
      sub_2331684BC(v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      v9 = &v4[*(int *)(v20 + 64)];
      v10 = *(_QWORD *)v9;
      v11 = *((_QWORD *)v9 + 1);
      v12 = v4[8];
      swift_bridgeObjectRetain();
      sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273F68(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_233273F68(v13 > 1, v14 + 1, 1);
        v7 = v19;
        v8 = v21;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v11;
      *(_BYTE *)(v15 + 48) = v12;
      v6 += v7;
      --v5;
    }
    while (v5);
  }
  else if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
    v16 = MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042198);
  v16 = sub_23361EF60();
LABEL_11:
  v21 = v16;
  v17 = swift_bridgeObjectRetain();
  sub_2333FCF70(v17, 1, &v21, (unint64_t)sub_23327EE5C, (void (*)(uint64_t, uint64_t))sub_23327B580);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2333FCE0C(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  return sub_2333FCE24(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_2332264F0);
}

uint64_t sub_2333FCE18(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  return sub_2333FCE24(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_233226984);
}

uint64_t sub_2333FCE24(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t result;

  v7 = *a3;
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_7:
    if (!(_DWORD)v7)
      return 0;
LABEL_8:
    swift_bridgeObjectRetain();
    return a1;
  }
  swift_bridgeObjectRetain();
  v10 = sub_2331E3D18(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 56) + v10);
  swift_bridgeObjectRelease();
  v13 = a5(v12, v7);
  result = 0;
  if ((v13 & 1) == 0 && (_DWORD)v7)
    goto LABEL_8;
  return result;
}

uint64_t sub_2333FCEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  char v8;
  char v9;
  char v10;

  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v7 = sub_2331E3D18(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v9 = *(_BYTE *)(*(_QWORD *)(a4 + 56) + v7);
  swift_bridgeObjectRelease();
  sub_233226D2C(v9);
  if ((v10 & 1) == 0)
  {
LABEL_6:
    swift_bridgeObjectRetain();
    return a1;
  }
  return 0;
}

void sub_2333FCF70(uint64_t a1, char a2, _QWORD *a3, unint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _BOOL8 v17;
  BOOL v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  void *v22;
  id v23;
  char v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_23;
  v10 = *(_BYTE *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_23;
  v13 = (_QWORD *)*a3;
  v14 = sub_2331E3D18(v12, v11);
  v16 = v13[2];
  v17 = (v15 & 1) == 0;
  v18 = __OFADD__(v16, v17);
  v19 = v16 + v17;
  if (v18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  LOBYTE(v20) = v15;
  if (v13[3] < v19)
  {
    a5(v19, a2 & 1);
    v14 = sub_2331E3D18(v12, v11);
    if ((v20 & 1) == (v21 & 1))
      goto LABEL_8;
LABEL_6:
    v14 = sub_23361F2B4();
    __break(1u);
  }
  if ((a2 & 1) != 0)
  {
LABEL_8:
    if ((v20 & 1) != 0)
      goto LABEL_9;
    goto LABEL_12;
  }
  v24 = v10;
  v25 = v14;
  ((void (*)(void))a4)();
  v14 = v25;
  v10 = v24;
  if ((v20 & 1) != 0)
  {
LABEL_9:
    v22 = (void *)swift_allocError();
    swift_willThrow();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  v26 = (_QWORD *)*a3;
  *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
  v27 = (uint64_t *)(v26[6] + 16 * v14);
  *v27 = v12;
  v27[1] = v11;
  *(_BYTE *)(v26[7] + v14) = v10;
  v28 = v26[2];
  v18 = __OFADD__(v28, 1);
  v29 = v28 + 1;
  if (v18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_23361ED98();
    sub_23361E27C();
    sub_23361EEE8();
    sub_23361E27C();
    sub_23361EF24();
    __break(1u);
    return;
  }
  v26[2] = v29;
  if (v9 != 1)
  {
    v20 = (_BYTE *)(a1 + 72);
    a4 = 1;
    while (a4 < *(_QWORD *)(a1 + 16))
    {
      v10 = *v20;
      v12 = *((_QWORD *)v20 - 2);
      v11 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain();
      if (!v11)
        goto LABEL_23;
      v30 = (_QWORD *)*a3;
      v31 = sub_2331E3D18(v12, v11);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v18 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v18)
        goto LABEL_25;
      a2 = v32;
      if (v30[3] < v35)
      {
        a5(v35, 1);
        v31 = sub_2331E3D18(v12, v11);
        if ((a2 & 1) != (v36 & 1))
          goto LABEL_6;
      }
      if ((a2 & 1) != 0)
        goto LABEL_9;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v38 = (uint64_t *)(v37[6] + 16 * v31);
      *v38 = v12;
      v38[1] = v11;
      *(_BYTE *)(v37[7] + v31) = v10;
      v39 = v37[2];
      v18 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v18)
        goto LABEL_26;
      ++a4;
      v37[2] = v40;
      v20 += 24;
      if (v9 == a4)
        goto LABEL_23;
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_2333FD30C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;

  return sub_23334F578(a1, a2, *a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_2333FD318(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;

  return sub_23334F56C(a1, a2, *a3, *(_QWORD *)(v3 + 16));
}

unint64_t MapsTransactionInsight.init(_:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  void *v28;
  unint64_t result;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - v16;
  v18 = (int *)type metadata accessor for MapsTransactionInsight(0);
  v19 = (uint64_t)&a2[v18[6]];
  v20 = type metadata accessor for MapsMerchant();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v38 = v19;
  v37(v19, 1, 1, v20);
  v21 = (uint64_t)&a2[v18[7]];
  v22 = type metadata accessor for MapsBrand();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v40 = v22;
  v41 = v21;
  v39 = v23;
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1);
  v24 = a1;
  v25 = objc_msgSend(a1, sel_updatedAt);
  if (v25)
  {
    v26 = v25;
    sub_23361D5EC();

    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v10, v15, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v27(v17, v10, v11);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_23361D5F8();
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
LABEL_6:
  v28 = v24;
  v27(a2, v17, v11);
  result = (unint64_t)objc_msgSend(v24, sel_fallbackCategory);
  if (result >> 15)
  {
    __break(1u);
  }
  else
  {
    *(_WORD *)&a2[v18[5]] = result;
    v30 = objc_msgSend(v24, sel_merchant);
    if (v30)
    {
      v31 = v30;
      v32 = v42;
      sub_2331EAD98(v31, v42);
      v37(v32, 0, 1, v20);

    }
    else
    {
      v32 = v42;
      v37(v42, 1, 1, v20);
    }
    v33 = (uint64_t)v43;
    sub_233170B8C(v32, v38, (uint64_t *)&unk_2560559E0);
    v34 = objc_msgSend(v28, sel_brand);
    if (v34)
    {
      v35 = v34;
      sub_2332AF9D8(v35, v33);
      v39(v33, 0, 1, v40);

    }
    else
    {
      v39(v33, 1, 1, v40);
    }

    return sub_233170B8C(v33, v41, &qword_25604E480);
  }
  return result;
}

uint64_t type metadata accessor for MapsTransactionInsight(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_25604E560);
}

uint64_t MapsTransactionInsight.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MapsTransactionInsight.updatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MapsTransactionInsight.updatedAt.modify())()
{
  return nullsub_1;
}

uint64_t MapsTransactionInsight.fallbackCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MapsTransactionInsight(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MapsTransactionInsight.fallbackCategory.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MapsTransactionInsight(0);
  *(_WORD *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*MapsTransactionInsight.fallbackCategory.modify())(_QWORD)
{
  type metadata accessor for MapsTransactionInsight(0);
  return nullsub_1;
}

uint64_t MapsTransactionInsight.merchant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsTransactionInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_2560559E0);
}

uint64_t MapsTransactionInsight.merchant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsTransactionInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_2560559E0);
}

uint64_t (*MapsTransactionInsight.merchant.modify())(_QWORD)
{
  type metadata accessor for MapsTransactionInsight(0);
  return nullsub_1;
}

uint64_t MapsTransactionInsight.brand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsTransactionInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 28), a1, &qword_25604E480);
}

uint64_t MapsTransactionInsight.brand.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsTransactionInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 28), &qword_25604E480);
}

uint64_t (*MapsTransactionInsight.brand.modify())(_QWORD)
{
  type metadata accessor for MapsTransactionInsight(0);
  return nullsub_1;
}

uint64_t MapsTransactionInsight.init(updatedAt:fallbackCategory:merchant:brand:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *a2;
  v10 = (int *)type metadata accessor for MapsTransactionInsight(0);
  v11 = a5 + v10[6];
  v12 = type metadata accessor for MapsMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a5 + v10[7];
  v14 = type metadata accessor for MapsBrand();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  *(_WORD *)(a5 + v10[5]) = v9;
  sub_233170B8C(a3, v11, (uint64_t *)&unk_2560559E0);
  return sub_233170B8C(a4, v13, &qword_25604E480);
}

uint64_t sub_2333FDA28()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2333FDA5C + 4 * byte_233646110[*v0]))(0x4164657461647075, 0xE900000000000074);
}

unint64_t sub_2333FDA5C()
{
  return 0xD000000000000010;
}

uint64_t sub_2333FDA78()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_2333FDA90()
{
  return 0x646E617262;
}

uint64_t sub_2333FDAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233402DE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2333FDAC8()
{
  sub_2333FEC68();
  return sub_23361F428();
}

uint64_t sub_2333FDAF0()
{
  sub_2333FEC68();
  return sub_23361F434();
}

uint64_t MapsTransactionInsight.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[12];
  __int16 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E488);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333FEC68();
  sub_23361F410();
  v12 = 0;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F17C();
  if (!v2)
  {
    v11 = *(_WORD *)(v3 + *(int *)(type metadata accessor for MapsTransactionInsight(0) + 20));
    v10[11] = 1;
    sub_2333FECAC();
    sub_23361F17C();
    v10[10] = 2;
    type metadata accessor for MapsMerchant();
    sub_233167C58(&qword_25604E4A8, (uint64_t (*)(uint64_t))type metadata accessor for MapsMerchant, (uint64_t)&protocol conformance descriptor for MapsMerchant);
    sub_23361F110();
    v10[9] = 3;
    type metadata accessor for MapsBrand();
    sub_233167C58(&qword_25604E4B0, (uint64_t (*)(uint64_t))type metadata accessor for MapsBrand, (uint64_t)&protocol conformance descriptor for MapsBrand);
    sub_23361F110();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MapsTransactionInsight.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char v42;
  __int16 v43;
  char v44;
  char v45;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23361D634();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604E4B8);
  v31 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MapsTransactionInsight(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 24)];
  v15 = type metadata accessor for MapsMerchant();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v39 = v14;
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)&v13[*(int *)(v10 + 28)];
  v18 = type metadata accessor for MapsBrand();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v38 = v17;
  v19(v17, 1, 1, v18);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2333FEC68();
  v36 = v9;
  v20 = (uint64_t)v40;
  sub_23361F3EC();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v25 = v38;
    sub_233168608(v39, (uint64_t *)&unk_2560559E0);
    return sub_233168608(v25, &qword_25604E480);
  }
  else
  {
    v28[0] = v18;
    v28[1] = v15;
    v22 = v32;
    v21 = (uint64_t)v33;
    v23 = v31;
    v40 = a1;
    v45 = 0;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v24 = v34;
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v13, v35, v24);
    v44 = 1;
    sub_2333FECF0();
    sub_23361F068();
    *(_WORD *)&v13[*(int *)(v10 + 20)] = v43;
    v42 = 2;
    sub_233167C58((unint64_t *)&unk_25604E4D0, (uint64_t (*)(uint64_t))type metadata accessor for MapsMerchant, (uint64_t)&protocol conformance descriptor for MapsMerchant);
    sub_23361EFFC();
    sub_233170B8C(v21, v39, (uint64_t *)&unk_2560559E0);
    v41 = 3;
    sub_233167C58((unint64_t *)&unk_256055AB0, (uint64_t (*)(uint64_t))type metadata accessor for MapsBrand, (uint64_t)&protocol conformance descriptor for MapsBrand);
    v26 = (uint64_t)v30;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v37);
    sub_233170B8C(v26, v38, &qword_25604E480);
    sub_2333FED34((uint64_t)v13, v29);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    return sub_233168500((uint64_t)v13, type metadata accessor for MapsTransactionInsight);
  }
}

uint64_t sub_2333FE1A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MapsTransactionInsight.init(from:)(a1, a2);
}

uint64_t sub_2333FE1B4(_QWORD *a1)
{
  return MapsTransactionInsight.encode(to:)(a1);
}

uint64_t MapsTransactionInsight.XPC.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2333FED34(v1 + OBJC_IVAR___XPCMapsTransactionInsight_value, a1);
}

id MapsTransactionInsight.XPC.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2333FED34(a1, (uint64_t)v3 + OBJC_IVAR___XPCMapsTransactionInsight_value);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for MapsTransactionInsight);
  return v4;
}

id MapsTransactionInsight.XPC.init(value:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_2333FED34(a1, (uint64_t)v1 + OBJC_IVAR___XPCMapsTransactionInsight_value);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for MapsTransactionInsight);
  return v4;
}

uint64_t static MapsTransactionInsight.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id MapsTransactionInsight.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316ACE0(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id MapsTransactionInsight.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316ACE0(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id MapsTransactionInsight.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MapsTransactionInsight.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MapsTransactionInsight.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2333FE54C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2333FED34(v1 + OBJC_IVAR___XPCMapsTransactionInsight_value, a1);
}

id sub_2333FE560(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2333FED34(a1, (uint64_t)v3 + OBJC_IVAR___XPCMapsTransactionInsight_value);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for MapsTransactionInsight);
  return v4;
}

id MapsTransactionInsight.xpcValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = type metadata accessor for MapsTransactionInsight(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333FED34(v0, (uint64_t)v3);
  v4 = (objc_class *)type metadata accessor for MapsTransactionInsight.XPC(0);
  v5 = objc_allocWithZone(v4);
  sub_2333FED34((uint64_t)v3, (uint64_t)v5 + OBJC_IVAR___XPCMapsTransactionInsight_value);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_233168500((uint64_t)v3, type metadata accessor for MapsTransactionInsight);
  return v6;
}

BOOL _s10FinanceKit22MapsTransactionInsightV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for MapsBrand();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E600);
  MEMORY[0x24BDAC7A8](v55);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v48 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v48 - v13;
  v14 = type metadata accessor for MapsMerchant();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E608);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v59 = (uint64_t)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v48 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v48 - v26;
  if ((sub_23361D5E0() & 1) == 0)
    return 0;
  v51 = v4;
  v28 = type metadata accessor for MapsTransactionInsight(0);
  if (*(unsigned __int16 *)(a1 + *(int *)(v28 + 20)) != *(unsigned __int16 *)(a2 + *(int *)(v28 + 20)))
    return 0;
  v29 = v28;
  v50 = v7;
  sub_2331686A0(a1 + *(int *)(v28 + 24), (uint64_t)v27, (uint64_t *)&unk_2560559E0);
  v30 = *(int *)(v29 + 24);
  v49 = a2;
  sub_2331686A0(a2 + v30, (uint64_t)v25, (uint64_t *)&unk_2560559E0);
  v31 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2331686A0((uint64_t)v27, (uint64_t)v19, (uint64_t *)&unk_2560559E0);
  sub_2331686A0((uint64_t)v25, v31, (uint64_t *)&unk_2560559E0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v19, 1, v14) != 1)
  {
    v33 = v59;
    sub_2331686A0((uint64_t)v19, v59, (uint64_t *)&unk_2560559E0);
    if (v32(v31, 1, v14) != 1)
    {
      v36 = v54;
      sub_233168580(v31, v54, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      v37 = static MapsMerchant.== infix(_:_:)(v33, v36);
      sub_233168500(v36, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      sub_233168608((uint64_t)v25, (uint64_t *)&unk_2560559E0);
      sub_233168608((uint64_t)v27, (uint64_t *)&unk_2560559E0);
      sub_233168500(v33, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      sub_233168608((uint64_t)v19, (uint64_t *)&unk_2560559E0);
      if ((v37 & 1) == 0)
        return 0;
      goto LABEL_10;
    }
    sub_233168608((uint64_t)v25, (uint64_t *)&unk_2560559E0);
    sub_233168608((uint64_t)v27, (uint64_t *)&unk_2560559E0);
    sub_233168500(v33, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
LABEL_8:
    v34 = &qword_25604E608;
    v35 = (uint64_t)v19;
LABEL_16:
    sub_233168608(v35, v34);
    return 0;
  }
  sub_233168608((uint64_t)v25, (uint64_t *)&unk_2560559E0);
  sub_233168608((uint64_t)v27, (uint64_t *)&unk_2560559E0);
  if (v32(v31, 1, v14) != 1)
    goto LABEL_8;
  sub_233168608((uint64_t)v19, (uint64_t *)&unk_2560559E0);
LABEL_10:
  v38 = v58;
  sub_2331686A0(a1 + *(int *)(v29 + 28), v58, &qword_25604E480);
  v39 = v57;
  sub_2331686A0(v49 + *(int *)(v29 + 28), v57, &qword_25604E480);
  v40 = (uint64_t)v50;
  v41 = (uint64_t)&v50[*(int *)(v55 + 48)];
  sub_2331686A0(v38, (uint64_t)v50, &qword_25604E480);
  sub_2331686A0(v39, v41, &qword_25604E480);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v43 = v51;
  if (v42(v40, 1, v51) == 1)
  {
    sub_233168608(v39, &qword_25604E480);
    sub_233168608(v38, &qword_25604E480);
    if (v42(v41, 1, v43) == 1)
    {
      sub_233168608(v40, &qword_25604E480);
      return 1;
    }
    goto LABEL_15;
  }
  v44 = v53;
  sub_2331686A0(v40, v53, &qword_25604E480);
  if (v42(v41, 1, v43) == 1)
  {
    sub_233168608(v39, &qword_25604E480);
    sub_233168608(v38, &qword_25604E480);
    sub_233168500(v44, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
LABEL_15:
    v34 = &qword_25604E600;
    v35 = v40;
    goto LABEL_16;
  }
  v46 = v52;
  sub_233168580(v41, v52, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  v47 = static MapsBrand.== infix(_:_:)(v44, v46);
  sub_233168500(v46, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  sub_233168608(v39, &qword_25604E480);
  sub_233168608(v38, &qword_25604E480);
  sub_233168500(v44, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  sub_233168608(v40, &qword_25604E480);
  return (v47 & 1) != 0;
}

unint64_t sub_2333FEC68()
{
  unint64_t result;

  result = qword_25604E490;
  if (!qword_25604E490)
  {
    result = MEMORY[0x234934494](&unk_2336462C4, &type metadata for MapsTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604E490);
  }
  return result;
}

unint64_t sub_2333FECAC()
{
  unint64_t result;

  result = qword_25604E4A0;
  if (!qword_25604E4A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MapsWalletCategory, &type metadata for MapsWalletCategory);
    atomic_store(result, (unint64_t *)&qword_25604E4A0);
  }
  return result;
}

unint64_t sub_2333FECF0()
{
  unint64_t result;

  result = qword_25604E4C8;
  if (!qword_25604E4C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for MapsWalletCategory, &type metadata for MapsWalletCategory);
    atomic_store(result, (unint64_t *)&qword_25604E4C8);
  }
  return result;
}

uint64_t sub_2333FED34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapsTransactionInsight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MapsTransactionInsight.XPC(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_25604E5D8);
}

_QWORD *initializeBufferWithCopyOfBuffer for MapsTransactionInsight(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, void *);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void *v62;
  void (*v63)(_QWORD *, _QWORD, uint64_t, int *);
  id v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *__dst;
  _QWORD *v115;
  void *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  void (*v121)(_QWORD *, _QWORD *, uint64_t);
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(char *, uint64_t, void *);
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16);
    v9(a1, v3, v7);
    v10 = a3[6];
    *(_WORD *)((char *)a1 + a3[5]) = *(_WORD *)((char *)v3 + a3[5]);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)v3 + v10);
    v13 = (int *)type metadata accessor for MapsMerchant();
    v14 = *((_QWORD *)v13 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v115 = v3;
      v118 = v14;
      v121 = v9;
      v123 = v7;
      v127 = v8;
      *v11 = *v12;
      *((_DWORD *)v11 + 2) = *((_DWORD *)v12 + 2);
      *((_BYTE *)v11 + 12) = *((_BYTE *)v12 + 12);
      v17 = v12[3];
      v11[2] = v12[2];
      v11[3] = v17;
      v18 = v12[5];
      v11[4] = v12[4];
      v11[5] = v18;
      v19 = v13[8];
      __dst = (char *)v11 + v19;
      v20 = (char *)v12 + v19;
      v21 = sub_23361D340();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, void *))(v22 + 48);
      v24 = (void *)v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v125 = v23;
      if (v23(v20, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v22 + 16))(__dst, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v22 + 56))(__dst, 0, 1, v24);
      }
      v26 = v13[9];
      v27 = (char *)v11 + v26;
      v28 = (char *)v12 + v26;
      v3 = v115;
      v120 = a1;
      v116 = v24;
      if (v125((char *)v12 + v26, 1, v24))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v22 + 16))(v27, v28, v24);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v22 + 56))(v27, 0, 1, v24);
      }
      v30 = v13[10];
      v31 = (_QWORD *)((char *)v11 + v30);
      v32 = (_QWORD *)((char *)v12 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = v13[11];
      v35 = (char *)v11 + v34;
      v36 = (char *)v12 + v34;
      v35[2] = v36[2];
      *(_WORD *)v35 = *(_WORD *)v36;
      v37 = v13[12];
      v38 = (_QWORD *)((char *)v11 + v37);
      v39 = (_QWORD *)((char *)v12 + v37);
      v40 = v39[1];
      *v38 = *v39;
      v38[1] = v40;
      v41 = v13[13];
      v42 = (char *)v11 + v41;
      v43 = (_QWORD *)((char *)v12 + v41);
      v44 = *(_QWORD *)((char *)v12 + v41 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 >> 60 == 15)
      {
        *(_OWORD *)v42 = *(_OWORD *)v43;
      }
      else
      {
        v45 = *v43;
        sub_2331D1374(*v43, v44);
        *(_QWORD *)v42 = v45;
        *((_QWORD *)v42 + 1) = v44;
      }
      v46 = v13[14];
      v47 = (char *)v11 + v46;
      v48 = (char *)v12 + v46;
      v7 = v123;
      if (v125((char *)v12 + v46, 1, v116))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v22 + 16))(v47, v48, v116);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v22 + 56))(v47, 0, 1, v116);
      }
      v50 = v13[15];
      v51 = (char *)v11 + v50;
      v52 = (char *)v12 + v50;
      v8 = v127;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))((char *)v12 + v50, 1, v123))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v9 = v121;
      }
      else
      {
        v54 = v52;
        v9 = v121;
        v121(v51, v54, v123);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v51, 0, 1, v123);
      }
      *((_BYTE *)v11 + v13[16]) = *((_BYTE *)v12 + v13[16]);
      v55 = v13[17];
      v56 = (char *)v11 + v55;
      v57 = (char *)v12 + v55;
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      v58 = v13[18];
      v59 = (char *)v11 + v58;
      v60 = (char *)v12 + v58;
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v59[8] = v60[8];
      v61 = v13[19];
      v62 = *(void **)((char *)v12 + v61);
      *(_QWORD *)((char *)v11 + v61) = v62;
      v63 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v118 + 56);
      v64 = v62;
      v63(v11, 0, 1, v13);
      a1 = v120;
    }
    v65 = a3[7];
    v66 = (_QWORD *)((char *)a1 + v65);
    v67 = (_QWORD *)((char *)v3 + v65);
    v68 = (int *)type metadata accessor for MapsBrand();
    v69 = *((_QWORD *)v68 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v69 + 48))(v67, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v122 = (void (*)(char *, char *, uint64_t))v9;
      v124 = v7;
      v128 = v8;
      *v66 = *v67;
      *((_DWORD *)v66 + 2) = *((_DWORD *)v67 + 2);
      *((_BYTE *)v66 + 12) = *((_BYTE *)v67 + 12);
      v71 = v67[3];
      v66[2] = v67[2];
      v66[3] = v71;
      v72 = v67[5];
      v66[4] = v67[4];
      v66[5] = v72;
      v73 = v68[8];
      v117 = (char *)v66 + v73;
      v119 = v69;
      v74 = (char *)v67 + v73;
      v75 = sub_23361D340();
      v76 = *(_QWORD *)(v75 - 8);
      v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v126 = v77;
      if (v77(v74, 1, v75))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v117, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v117, v74, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v117, 0, 1, v75);
      }
      v79 = v75;
      v80 = v68[9];
      v81 = (char *)v66 + v80;
      v82 = (char *)v67 + v80;
      v83 = a1;
      if (v126((char *)v67 + v80, 1, v79))
      {
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v81, v82, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v81, 0, 1, v79);
      }
      v85 = v68[10];
      v86 = (_QWORD *)((char *)v66 + v85);
      v87 = (_QWORD *)((char *)v67 + v85);
      v88 = v87[1];
      *v86 = *v87;
      v86[1] = v88;
      v89 = v68[11];
      v90 = (char *)v66 + v89;
      v91 = (char *)v67 + v89;
      v90[2] = v91[2];
      *(_WORD *)v90 = *(_WORD *)v91;
      v92 = v68[12];
      v93 = (_QWORD *)((char *)v66 + v92);
      v94 = (_QWORD *)((char *)v67 + v92);
      v95 = v94[1];
      *v93 = *v94;
      v93[1] = v95;
      v96 = v68[13];
      v97 = (char *)v66 + v96;
      v98 = (_QWORD *)((char *)v67 + v96);
      v99 = *(_QWORD *)((char *)v67 + v96 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v99 >> 60 == 15)
      {
        *(_OWORD *)v97 = *(_OWORD *)v98;
      }
      else
      {
        v100 = *v98;
        sub_2331D1374(*v98, v99);
        *(_QWORD *)v97 = v100;
        *((_QWORD *)v97 + 1) = v99;
      }
      a1 = v83;
      v101 = v68[14];
      v102 = (char *)v66 + v101;
      v103 = (char *)v67 + v101;
      if (v126((char *)v67 + v101, 1, v79))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v102, v103, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v102, 0, 1, v79);
      }
      v105 = v68[15];
      v106 = (char *)v66 + v105;
      v107 = (char *)v67 + v105;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))((char *)v67 + v105, 1, v124))
      {
        v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        v122(v106, v107, v124);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v106, 0, 1, v124);
      }
      v109 = v68[16];
      v110 = (char *)v66 + v109;
      v111 = (char *)v67 + v109;
      if (v126(v111, 1, v79))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v110, v111, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v110, 0, 1, v79);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56))(v66, 0, 1, v68);
    }
  }
  return a1;
}

uint64_t destroy for MapsTransactionInsight(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = (int *)type metadata accessor for MapsMerchant();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    v31 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v7 + v8[8];
    v10 = sub_23361D340();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v12(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v13 = v7 + v8[9];
    if (!v12(v13, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = (uint64_t *)(v7 + v8[13]);
    v15 = v14[1];
    if (v15 >> 60 != 15)
      sub_23316BEA4(*v14, v15);
    v16 = v7 + v8[14];
    if (!v12(v16, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
    v17 = v7 + v8[15];
    v6 = v31;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4))
      v31(v17, v4);

  }
  v18 = a1 + *(int *)(a2 + 28);
  v19 = (int *)type metadata accessor for MapsBrand();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v18 + v19[8];
    v22 = sub_23361D340();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v25 = v18 + v19[9];
    if (!v24(v25, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = (uint64_t *)(v18 + v19[13]);
    v27 = v26[1];
    if (v27 >> 60 != 15)
      sub_23316BEA4(*v26, v27);
    v28 = v18 + v19[14];
    if (!v24(v28, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
    v29 = v18 + v19[15];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v4))
      v6(v29, v4);
    v30 = v18 + v19[16];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v30, 1, v22);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v30, v22);
  }
  return result;
}

uint64_t initializeWithCopy for MapsTransactionInsight(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void (*v61)(_QWORD *, _QWORD, uint64_t, int *);
  id v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for MapsMerchant();
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v114 = a3;
    v116 = v8;
    v122 = v13;
    v123 = v7;
    v118 = v6;
    v120 = a1;
    *v10 = *v11;
    *((_DWORD *)v10 + 2) = *((_DWORD *)v11 + 2);
    *((_BYTE *)v10 + 12) = *((_BYTE *)v11 + 12);
    v15 = v11[3];
    v10[2] = v11[2];
    v10[3] = v15;
    v16 = v11[5];
    v10[4] = v11[4];
    v10[5] = v16;
    v17 = v12[8];
    __dst = (char *)v10 + v17;
    v18 = (char *)v11 + v17;
    v19 = sub_23361D340();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    v22 = v21;
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v24 = v12[9];
    v25 = (char *)v10 + v24;
    v26 = (char *)v11 + v24;
    v111 = v20;
    v112 = v22;
    if (v22((char *)v11 + v24, 1, v19))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v26, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);
    }
    v28 = v12[10];
    v29 = (_QWORD *)((char *)v10 + v28);
    v30 = (_QWORD *)((char *)v11 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v12[11];
    v33 = (char *)v10 + v32;
    v34 = (char *)v11 + v32;
    v33[2] = v34[2];
    *(_WORD *)v33 = *(_WORD *)v34;
    v35 = v12[12];
    v36 = (_QWORD *)((char *)v10 + v35);
    v37 = (_QWORD *)((char *)v11 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = v12[13];
    v40 = (char *)v10 + v39;
    v41 = (_QWORD *)((char *)v11 + v39);
    v42 = *(_QWORD *)((char *)v11 + v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = v114;
    if (v42 >> 60 == 15)
    {
      *(_OWORD *)v40 = *(_OWORD *)v41;
    }
    else
    {
      v43 = *v41;
      sub_2331D1374(*v41, v42);
      *(_QWORD *)v40 = v43;
      *((_QWORD *)v40 + 1) = v42;
    }
    v6 = v118;
    v44 = v12[14];
    v45 = (char *)v10 + v44;
    v46 = (char *)v11 + v44;
    if (v112((char *)v11 + v44, 1, v19))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v45, v46, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v45, 0, 1, v19);
    }
    v48 = v12[15];
    v49 = (char *)v10 + v48;
    v50 = (char *)v11 + v48;
    v7 = v123;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))((char *)v11 + v48, 1, v118))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      v8 = v116;
    }
    else
    {
      v52 = v50;
      v8 = v116;
      v116((uint64_t)v49, (uint64_t)v52, v118);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v49, 0, 1, v118);
    }
    *((_BYTE *)v10 + v12[16]) = *((_BYTE *)v11 + v12[16]);
    v53 = v12[17];
    v54 = (char *)v10 + v53;
    v55 = (char *)v11 + v53;
    *(_QWORD *)v54 = *(_QWORD *)v55;
    v54[8] = v55[8];
    v56 = v12[18];
    v57 = (char *)v10 + v56;
    v58 = (char *)v11 + v56;
    *(_QWORD *)v57 = *(_QWORD *)v58;
    v57[8] = v58[8];
    v59 = v12[19];
    v60 = *(void **)((char *)v11 + v59);
    *(_QWORD *)((char *)v10 + v59) = v60;
    v61 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v122 + 56);
    v62 = v60;
    v61(v10, 0, 1, v12);
    a1 = v120;
  }
  v63 = a3[7];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  v66 = (int *)type metadata accessor for MapsBrand();
  v67 = *((_QWORD *)v66 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v67 + 48))(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v115 = v67;
    v117 = (void (*)(char *, char *, uint64_t))v8;
    v124 = v7;
    v119 = v6;
    v121 = a1;
    *v64 = *v65;
    *((_DWORD *)v64 + 2) = *((_DWORD *)v65 + 2);
    *((_BYTE *)v64 + 12) = *((_BYTE *)v65 + 12);
    v69 = v65[3];
    v64[2] = v65[2];
    v64[3] = v69;
    v70 = v65[5];
    v64[4] = v65[4];
    v64[5] = v70;
    v71 = v66[8];
    v72 = (char *)v64 + v71;
    v73 = (char *)v65 + v71;
    v74 = sub_23361D340();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76(v73, 1, v74))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v78 = v66[9];
    v79 = (char *)v64 + v78;
    v80 = (char *)v65 + v78;
    if (v76((char *)v65 + v78, 1, v74))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v79, v80, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
    }
    v82 = v66[10];
    v83 = (_QWORD *)((char *)v64 + v82);
    v84 = (_QWORD *)((char *)v65 + v82);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    v86 = v66[11];
    v87 = (char *)v64 + v86;
    v88 = (char *)v65 + v86;
    v87[2] = v88[2];
    *(_WORD *)v87 = *(_WORD *)v88;
    v89 = v66[12];
    v90 = (_QWORD *)((char *)v64 + v89);
    v91 = (_QWORD *)((char *)v65 + v89);
    v92 = v91[1];
    *v90 = *v91;
    v90[1] = v92;
    v93 = v66[13];
    v94 = (char *)v64 + v93;
    v95 = (_QWORD *)((char *)v65 + v93);
    v96 = *(_QWORD *)((char *)v65 + v93 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v96 >> 60 == 15)
    {
      *(_OWORD *)v94 = *(_OWORD *)v95;
    }
    else
    {
      v97 = *v95;
      sub_2331D1374(*v95, v96);
      *(_QWORD *)v94 = v97;
      *((_QWORD *)v94 + 1) = v96;
    }
    a1 = v121;
    v98 = v66[14];
    v99 = (char *)v64 + v98;
    v100 = (char *)v65 + v98;
    if (v76((char *)v65 + v98, 1, v74))
    {
      v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v99, v100, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
    }
    v102 = v66[15];
    v103 = (char *)v64 + v102;
    v104 = (char *)v65 + v102;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))((char *)v65 + v102, 1, v119))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v117(v103, v104, v119);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v103, 0, 1, v119);
    }
    v106 = v66[16];
    v107 = (char *)v64 + v106;
    v108 = (char *)v65 + v106;
    if (v76(v108, 1, v74))
    {
      v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v107, v108, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v107, 0, 1, v74);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v115 + 56))(v64, 0, 1, v66);
  }
  return a1;
}

uint64_t assignWithCopy for MapsTransactionInsight(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int16 *v42;
  __int16 v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *);
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  __int16 *v84;
  __int16 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  const void *v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, int *);
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(const void *, uint64_t, uint64_t);
  uint64_t v137;
  size_t v138;
  void *v139;
  const void *v140;
  int v141;
  uint64_t v142;
  void *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(void *, uint64_t, uint64_t);
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  const void *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  __int16 *v160;
  __int16 v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  const void *v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  const void *v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  const void *v180;
  uint64_t v181;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  void *v186;
  int v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  __int16 *v195;
  __int16 v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t *v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  void *v209;
  void *v210;
  int v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  const void *v216;
  uint64_t (*v217)(uint64_t, uint64_t, uint64_t);
  int v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  void *v223;
  int v224;
  int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int *v229;
  int *v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;

  v6 = sub_23361D634();
  v237 = *(_QWORD *)(v6 - 8);
  v238 = v6;
  v232 = *(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 24);
  v232(a1, a2, v6);
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = (int *)type metadata accessor for MapsMerchant();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_233168500(v8, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      goto LABEL_7;
    }
    v230 = a3;
    v234 = a1;
    *(_QWORD *)v8 = *(_QWORD *)v9;
    v24 = *(_DWORD *)(v9 + 8);
    *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
    *(_DWORD *)(v8 + 8) = v24;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = v10[8];
    v26 = (void *)(v8 + v25);
    v27 = (void *)(v9 + v25);
    v28 = sub_23361D340();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
    v31 = v30(v26, 1, v28);
    v32 = v30(v27, 1, v28);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
LABEL_28:
        v73 = v10[9];
        v74 = (void *)(v8 + v73);
        v75 = (void *)(v9 + v73);
        v76 = v30((void *)(v8 + v73), 1, v28);
        v77 = v30(v75, 1, v28);
        if (v76)
        {
          if (!v77)
          {
            (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v74, v75, v28);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v74, 0, 1, v28);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v77)
          {
            (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v74, v75, v28);
LABEL_34:
            v79 = v10[10];
            v80 = (_QWORD *)(v8 + v79);
            v81 = (_QWORD *)(v9 + v79);
            *v80 = *v81;
            v80[1] = v81[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v82 = v10[11];
            v83 = v8 + v82;
            v84 = (__int16 *)(v9 + v82);
            v85 = *v84;
            *(_BYTE *)(v83 + 2) = *((_BYTE *)v84 + 2);
            *(_WORD *)v83 = v85;
            v86 = v10[12];
            v87 = (_QWORD *)(v8 + v86);
            v88 = (_QWORD *)(v9 + v86);
            *v87 = *v88;
            v87[1] = v88[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v89 = v10[13];
            v90 = (uint64_t *)(v8 + v89);
            v91 = (uint64_t *)(v9 + v89);
            v92 = *(_QWORD *)(v9 + v89 + 8);
            if (*(_QWORD *)(v8 + v89 + 8) >> 60 == 15)
            {
              if (v92 >> 60 != 15)
              {
                v93 = *v91;
                sub_2331D1374(v93, v92);
                *v90 = v93;
                v90[1] = v92;
                goto LABEL_41;
              }
            }
            else
            {
              if (v92 >> 60 != 15)
              {
                v94 = *v91;
                sub_2331D1374(v94, v92);
                v95 = *v90;
                v96 = v90[1];
                *v90 = v94;
                v90[1] = v92;
                sub_23316BEA4(v95, v96);
LABEL_41:
                v97 = v10[14];
                v98 = (void *)(v8 + v97);
                v99 = (void *)(v9 + v97);
                v100 = v30((void *)(v8 + v97), 1, v28);
                v101 = v30(v99, 1, v28);
                if (v100)
                {
                  if (!v101)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v98, v99, v28);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v98, 0, 1, v28);
                    goto LABEL_47;
                  }
                }
                else
                {
                  if (!v101)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v98, v99, v28);
LABEL_47:
                    v103 = v10[15];
                    v104 = (void *)(v8 + v103);
                    v105 = (const void *)(v9 + v103);
                    v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v237 + 48);
                    v107 = v106(v8 + v103, 1, v238);
                    v108 = v106((uint64_t)v105, 1, v238);
                    a1 = v234;
                    if (v107)
                    {
                      if (!v108)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v104, v105, v238);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v104, 0, 1, v238);
LABEL_53:
                        a3 = v230;
                        *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
                        v110 = v10[17];
                        v111 = v8 + v110;
                        v112 = (uint64_t *)(v9 + v110);
                        v113 = *v112;
                        *(_BYTE *)(v111 + 8) = *((_BYTE *)v112 + 8);
                        *(_QWORD *)v111 = v113;
                        v114 = v10[18];
                        v115 = v8 + v114;
                        v116 = (uint64_t *)(v9 + v114);
                        v117 = *v116;
                        *(_BYTE *)(v115 + 8) = *((_BYTE *)v116 + 8);
                        *(_QWORD *)v115 = v117;
                        v118 = v10[19];
                        v119 = *(void **)(v8 + v118);
                        v120 = *(void **)(v9 + v118);
                        *(_QWORD *)(v8 + v118) = v120;
                        v121 = v120;

                        goto LABEL_54;
                      }
                    }
                    else
                    {
                      if (!v108)
                      {
                        v232((uint64_t)v104, (uint64_t)v105, v238);
                        goto LABEL_53;
                      }
                      (*(void (**)(void *, uint64_t))(v237 + 8))(v104, v238);
                    }
                    v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
                    goto LABEL_53;
                  }
                  (*(void (**)(void *, uint64_t))(v29 + 8))(v98, v28);
                }
                v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
                goto LABEL_47;
              }
              sub_2331EC9CC((uint64_t)v90);
            }
            *(_OWORD *)v90 = *(_OWORD *)v91;
            goto LABEL_41;
          }
          (*(void (**)(void *, uint64_t))(v29 + 8))(v74, v28);
        }
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    }
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_28;
  }
  if (v14)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_54;
  }
  v227 = v11;
  v228 = a2;
  v229 = a3;
  v233 = a1;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v15 = *(_DWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
  *(_DWORD *)(v8 + 8) = v15;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v16 = v10[8];
  v17 = (void *)(v8 + v16);
  v18 = (const void *)(v9 + v16);
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v33 = v10[9];
  v34 = (void *)(v8 + v33);
  v35 = (const void *)(v9 + v33);
  v226 = v20;
  if (v21((const void *)(v9 + v33), 1, v19))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v34, v35, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
  }
  v37 = v10[10];
  v38 = (_QWORD *)(v8 + v37);
  v39 = (_QWORD *)(v9 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  v40 = v10[11];
  v41 = v8 + v40;
  v42 = (__int16 *)(v9 + v40);
  v43 = *v42;
  *(_BYTE *)(v41 + 2) = *((_BYTE *)v42 + 2);
  *(_WORD *)v41 = v43;
  v44 = v10[12];
  v45 = (_QWORD *)(v8 + v44);
  v46 = (_QWORD *)(v9 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  v47 = v10[13];
  v48 = v8 + v47;
  v49 = (uint64_t *)(v9 + v47);
  v50 = *(_QWORD *)(v9 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2 = v228;
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  else
  {
    v51 = *v49;
    sub_2331D1374(*v49, v50);
    *(_QWORD *)v48 = v51;
    *(_QWORD *)(v48 + 8) = v50;
  }
  v52 = v10[14];
  v53 = (void *)(v8 + v52);
  v54 = (const void *)(v9 + v52);
  if (v21((const void *)(v9 + v52), 1, v19))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v226 + 16))(v53, v54, v19);
    a2 = v228;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v226 + 56))(v53, 0, 1, v19);
  }
  v56 = v10[15];
  v57 = (void *)(v8 + v56);
  v58 = (const void *)(v9 + v56);
  a1 = v233;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v9 + v56, 1, v238))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v57, v58, v238);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v57, 0, 1, v238);
  }
  a3 = v229;
  *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
  v60 = v10[17];
  v61 = v8 + v60;
  v62 = (uint64_t *)(v9 + v60);
  v63 = *v62;
  *(_BYTE *)(v61 + 8) = *((_BYTE *)v62 + 8);
  *(_QWORD *)v61 = v63;
  v64 = v10[18];
  v65 = v8 + v64;
  v66 = (uint64_t *)(v9 + v64);
  v67 = *v66;
  *(_BYTE *)(v65 + 8) = *((_BYTE *)v66 + 8);
  *(_QWORD *)v65 = v67;
  v68 = v10[19];
  v69 = *(void **)(v9 + v68);
  *(_QWORD *)(v8 + v68) = v69;
  v70 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v227 + 56);
  v71 = v69;
  v70(v8, 0, 1, v10);
LABEL_54:
  v122 = a3[7];
  v123 = a1 + v122;
  v124 = a2 + v122;
  v125 = (int *)type metadata accessor for MapsBrand();
  v126 = *((_QWORD *)v125 - 1);
  v127 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v126 + 48);
  v128 = v127(v123, 1, v125);
  v129 = v127(v124, 1, v125);
  if (!v128)
  {
    if (v129)
    {
      sub_233168500(v123, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      goto LABEL_60;
    }
    v236 = a1;
    *(_QWORD *)v123 = *(_QWORD *)v124;
    v141 = *(_DWORD *)(v124 + 8);
    *(_BYTE *)(v123 + 12) = *(_BYTE *)(v124 + 12);
    *(_DWORD *)(v123 + 8) = v141;
    *(_QWORD *)(v123 + 16) = *(_QWORD *)(v124 + 16);
    *(_QWORD *)(v123 + 24) = *(_QWORD *)(v124 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v123 + 32) = *(_QWORD *)(v124 + 32);
    *(_QWORD *)(v123 + 40) = *(_QWORD *)(v124 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v142 = v125[8];
    v143 = (void *)(v123 + v142);
    v144 = (void *)(v124 + v142);
    v145 = sub_23361D340();
    v146 = *(_QWORD *)(v145 - 8);
    v147 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v146 + 48);
    v148 = v147(v143, 1, v145);
    v149 = v147(v144, 1, v145);
    if (v148)
    {
      v150 = v237;
      if (!v149)
      {
        (*(void (**)(void *, void *, uint64_t))(v146 + 16))(v143, v144, v145);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        goto LABEL_86;
      }
    }
    else
    {
      v150 = v237;
      if (!v149)
      {
        (*(void (**)(void *, void *, uint64_t))(v146 + 24))(v143, v144, v145);
LABEL_86:
        v184 = v125[9];
        v185 = (void *)(v123 + v184);
        v186 = (void *)(v124 + v184);
        v187 = v147((void *)(v123 + v184), 1, v145);
        v188 = v147(v186, 1, v145);
        if (v187)
        {
          if (!v188)
          {
            (*(void (**)(void *, void *, uint64_t))(v146 + 16))(v185, v186, v145);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v185, 0, 1, v145);
            goto LABEL_92;
          }
        }
        else
        {
          if (!v188)
          {
            (*(void (**)(void *, void *, uint64_t))(v146 + 24))(v185, v186, v145);
LABEL_92:
            v190 = v125[10];
            v191 = (_QWORD *)(v123 + v190);
            v192 = (_QWORD *)(v124 + v190);
            *v191 = *v192;
            v191[1] = v192[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v193 = v125[11];
            v194 = v123 + v193;
            v195 = (__int16 *)(v124 + v193);
            v196 = *v195;
            *(_BYTE *)(v194 + 2) = *((_BYTE *)v195 + 2);
            *(_WORD *)v194 = v196;
            v197 = v125[12];
            v198 = (_QWORD *)(v123 + v197);
            v199 = (_QWORD *)(v124 + v197);
            *v198 = *v199;
            v198[1] = v199[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v200 = v125[13];
            v201 = (uint64_t *)(v123 + v200);
            v202 = (uint64_t *)(v124 + v200);
            v203 = *(_QWORD *)(v124 + v200 + 8);
            if (*(_QWORD *)(v123 + v200 + 8) >> 60 == 15)
            {
              if (v203 >> 60 != 15)
              {
                v204 = *v202;
                sub_2331D1374(v204, v203);
                *v201 = v204;
                v201[1] = v203;
                goto LABEL_99;
              }
            }
            else
            {
              if (v203 >> 60 != 15)
              {
                v205 = *v202;
                sub_2331D1374(v205, v203);
                v206 = *v201;
                v207 = v201[1];
                *v201 = v205;
                v201[1] = v203;
                sub_23316BEA4(v206, v207);
LABEL_99:
                v208 = v125[14];
                v209 = (void *)(v123 + v208);
                v210 = (void *)(v124 + v208);
                v211 = v147((void *)(v123 + v208), 1, v145);
                v212 = v147(v210, 1, v145);
                if (v211)
                {
                  if (!v212)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v146 + 16))(v209, v210, v145);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v209, 0, 1, v145);
                    goto LABEL_105;
                  }
                }
                else
                {
                  if (!v212)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v146 + 24))(v209, v210, v145);
LABEL_105:
                    v214 = v125[15];
                    v215 = (void *)(v123 + v214);
                    v216 = (const void *)(v124 + v214);
                    v217 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
                    v218 = v217(v123 + v214, 1, v238);
                    v219 = v217((uint64_t)v216, 1, v238);
                    if (v218)
                    {
                      if (!v219)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v215, v216, v238);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v215, 0, 1, v238);
LABEL_111:
                        v221 = v125[16];
                        v222 = (void *)(v123 + v221);
                        v223 = (void *)(v124 + v221);
                        v224 = v147((void *)(v123 + v221), 1, v145);
                        v225 = v147(v223, 1, v145);
                        if (v224)
                        {
                          a1 = v236;
                          if (!v225)
                          {
                            (*(void (**)(void *, void *, uint64_t))(v146 + 16))(v222, v223, v145);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v222, 0, 1, v145);
                            return a1;
                          }
                        }
                        else
                        {
                          a1 = v236;
                          if (!v225)
                          {
                            (*(void (**)(void *, void *, uint64_t))(v146 + 24))(v222, v223, v145);
                            return a1;
                          }
                          (*(void (**)(void *, uint64_t))(v146 + 8))(v222, v145);
                        }
                        v138 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700)
                                                     - 8)
                                         + 64);
                        v139 = v222;
                        v140 = v223;
                        goto LABEL_61;
                      }
                    }
                    else
                    {
                      if (!v219)
                      {
                        v232((uint64_t)v215, (uint64_t)v216, v238);
                        goto LABEL_111;
                      }
                      (*(void (**)(void *, uint64_t))(v237 + 8))(v215, v238);
                    }
                    v220 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
                    goto LABEL_111;
                  }
                  (*(void (**)(void *, uint64_t))(v146 + 8))(v209, v145);
                }
                v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
                goto LABEL_105;
              }
              sub_2331EC9CC((uint64_t)v201);
            }
            *(_OWORD *)v201 = *(_OWORD *)v202;
            goto LABEL_99;
          }
          (*(void (**)(void *, uint64_t))(v146 + 8))(v185, v145);
        }
        v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        goto LABEL_92;
      }
      (*(void (**)(void *, uint64_t))(v146 + 8))(v143, v145);
    }
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
    goto LABEL_86;
  }
  if (v129)
  {
LABEL_60:
    v138 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604E480) - 8) + 64);
    v139 = (void *)v123;
    v140 = (const void *)v124;
LABEL_61:
    memcpy(v139, v140, v138);
    return a1;
  }
  v231 = v126;
  v235 = a1;
  *(_QWORD *)v123 = *(_QWORD *)v124;
  v130 = *(_DWORD *)(v124 + 8);
  *(_BYTE *)(v123 + 12) = *(_BYTE *)(v124 + 12);
  *(_DWORD *)(v123 + 8) = v130;
  *(_QWORD *)(v123 + 16) = *(_QWORD *)(v124 + 16);
  *(_QWORD *)(v123 + 24) = *(_QWORD *)(v124 + 24);
  *(_QWORD *)(v123 + 32) = *(_QWORD *)(v124 + 32);
  *(_QWORD *)(v123 + 40) = *(_QWORD *)(v124 + 40);
  v131 = v125[8];
  v132 = (void *)(v123 + v131);
  v133 = (const void *)(v124 + v131);
  v134 = sub_23361D340();
  v135 = *(_QWORD *)(v134 - 8);
  v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v136(v133, 1, v134))
  {
    v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v132, v133, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
  }
  v151 = v125[9];
  v152 = (void *)(v123 + v151);
  v153 = (const void *)(v124 + v151);
  if (v136((const void *)(v124 + v151), 1, v134))
  {
    v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v152, v153, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v152, 0, 1, v134);
  }
  v155 = v125[10];
  v156 = (_QWORD *)(v123 + v155);
  v157 = (_QWORD *)(v124 + v155);
  *v156 = *v157;
  v156[1] = v157[1];
  v158 = v125[11];
  v159 = v123 + v158;
  v160 = (__int16 *)(v124 + v158);
  v161 = *v160;
  *(_BYTE *)(v159 + 2) = *((_BYTE *)v160 + 2);
  *(_WORD *)v159 = v161;
  v162 = v125[12];
  v163 = (_QWORD *)(v123 + v162);
  v164 = (_QWORD *)(v124 + v162);
  *v163 = *v164;
  v163[1] = v164[1];
  v165 = v125[13];
  v166 = v123 + v165;
  v167 = (uint64_t *)(v124 + v165);
  v168 = *(_QWORD *)(v124 + v165 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v168 >> 60 == 15)
  {
    *(_OWORD *)v166 = *(_OWORD *)v167;
  }
  else
  {
    v169 = *v167;
    sub_2331D1374(*v167, v168);
    *(_QWORD *)v166 = v169;
    *(_QWORD *)(v166 + 8) = v168;
  }
  v170 = v125[14];
  v171 = (void *)(v123 + v170);
  v172 = (const void *)(v124 + v170);
  if (v136((const void *)(v124 + v170), 1, v134))
  {
    v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v171, v172, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v171, 0, 1, v134);
  }
  v174 = v125[15];
  v175 = (void *)(v123 + v174);
  v176 = (const void *)(v124 + v174);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v124 + v174, 1, v238))
  {
    v177 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v175, v176, v238);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v175, 0, 1, v238);
  }
  v178 = v125[16];
  v179 = (void *)(v123 + v178);
  v180 = (const void *)(v124 + v178);
  if (v136(v180, 1, v134))
  {
    v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v179, v180, v134);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v179, 0, 1, v134);
  }
  a1 = v235;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v231 + 56))(v123, 0, 1, v125);
  return a1;
}

uint64_t initializeWithTake for MapsTransactionInsight(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for MapsMerchant();
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v79 = v13;
    v81 = v6;
    v85 = v8;
    v86 = v7;
    v83 = a1;
    *v10 = *v11;
    *((_DWORD *)v10 + 2) = *((_DWORD *)v11 + 2);
    *((_BYTE *)v10 + 12) = *((_BYTE *)v11 + 12);
    v15 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v15;
    v16 = v12[8];
    v17 = (char *)v10 + v16;
    v18 = (char *)v11 + v16;
    v19 = sub_23361D340();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v23 = v12[9];
    v24 = (char *)v10 + v23;
    v25 = (char *)v11 + v23;
    if (v21((char *)v11 + v23, 1, v19))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v25, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    }
    *(_OWORD *)((char *)v10 + v12[10]) = *(_OWORD *)((char *)v11 + v12[10]);
    v27 = v12[11];
    v28 = (char *)v10 + v27;
    v29 = (char *)v11 + v27;
    v28[2] = v29[2];
    *(_WORD *)v28 = *(_WORD *)v29;
    *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
    *(_OWORD *)((char *)v10 + v12[13]) = *(_OWORD *)((char *)v11 + v12[13]);
    v30 = v12[14];
    v31 = (char *)v10 + v30;
    v32 = (char *)v11 + v30;
    if (v21((char *)v11 + v30, 1, v19))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v31, v32, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
    }
    v6 = v81;
    a1 = v83;
    v34 = v12[15];
    v35 = (char *)v10 + v34;
    v36 = (char *)v11 + v34;
    v7 = v86;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))((char *)v11 + v34, 1, v81))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v8 = v85;
    }
    else
    {
      v38 = v36;
      v8 = v85;
      v85((uint64_t)v35, (uint64_t)v38, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v81);
    }
    *((_BYTE *)v10 + v12[16]) = *((_BYTE *)v11 + v12[16]);
    v39 = v12[17];
    v40 = (char *)v10 + v39;
    v41 = (char *)v11 + v39;
    *(_QWORD *)v40 = *(_QWORD *)v41;
    v40[8] = v41[8];
    v42 = v12[18];
    v43 = (char *)v10 + v42;
    v44 = (char *)v11 + v42;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    *(_QWORD *)((char *)v10 + v12[19]) = *(_QWORD *)((char *)v11 + v12[19]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v79 + 56))(v10, 0, 1, v12);
  }
  v45 = a3[7];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  v48 = (int *)type metadata accessor for MapsBrand();
  v49 = *((_QWORD *)v48 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v80 = v49;
    v87 = v7;
    *v46 = *v47;
    *((_DWORD *)v46 + 2) = *((_DWORD *)v47 + 2);
    *((_BYTE *)v46 + 12) = *((_BYTE *)v47 + 12);
    v51 = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 1) = *((_OWORD *)v47 + 1);
    *((_OWORD *)v46 + 2) = v51;
    v52 = v48[8];
    v53 = (char *)v46 + v52;
    v54 = (char *)v47 + v52;
    v55 = sub_23361D340();
    v56 = *(_QWORD *)(v55 - 8);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
    v84 = v56;
    if (v82(v54, 1, v55))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    v58 = v48[9];
    v59 = (char *)v46 + v58;
    v60 = (char *)v47 + v58;
    v61 = v82;
    if (v82((char *)v47 + v58, 1, v55))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v59, v60, v55);
      v61 = v82;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v59, 0, 1, v55);
    }
    *(_OWORD *)((char *)v46 + v48[10]) = *(_OWORD *)((char *)v47 + v48[10]);
    v63 = v48[11];
    v64 = (char *)v46 + v63;
    v65 = (char *)v47 + v63;
    v64[2] = v65[2];
    *(_WORD *)v64 = *(_WORD *)v65;
    *(_OWORD *)((char *)v46 + v48[12]) = *(_OWORD *)((char *)v47 + v48[12]);
    *(_OWORD *)((char *)v46 + v48[13]) = *(_OWORD *)((char *)v47 + v48[13]);
    v66 = v48[14];
    v67 = (char *)v46 + v66;
    v68 = (char *)v47 + v66;
    if (v61((char *)v47 + v66, 1, v55))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v67, v68, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v67, 0, 1, v55);
    }
    v70 = v48[15];
    v71 = (char *)v46 + v70;
    v72 = (char *)v47 + v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))((char *)v47 + v70, 1, v6))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v8((uint64_t)v71, (uint64_t)v72, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v71, 0, 1, v6);
    }
    v74 = v48[16];
    v75 = (char *)v46 + v74;
    v76 = (char *)v47 + v74;
    if (v61(v76, 1, v55))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v75, v76, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v75, 0, 1, v55);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v80 + 56))(v46, 0, 1, v48);
  }
  return a1;
}

uint64_t assignWithTake for MapsTransactionInsight(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  int v59;
  int v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t (*v86)(const void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const void *v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, int *);
  int v111;
  int v112;
  __int128 v113;
  uint64_t v114;
  void *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(const void *, uint64_t, uint64_t);
  uint64_t v120;
  size_t v121;
  void *v122;
  const void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(void *, uint64_t, uint64_t);
  int v132;
  int v133;
  uint64_t v134;
  void *v135;
  const void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const void *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  const void *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  const void *v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  int v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  void *v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  const void *v188;
  uint64_t (*v189)(uint64_t, uint64_t, uint64_t);
  int v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  void *v195;
  int v196;
  int v197;
  int *v198;
  int *v199;
  void (*v200)(uint64_t, uint64_t, uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v6 = sub_23361D634();
  v205 = *(_QWORD *)(v6 - 8);
  v206 = v6;
  v200 = *(void (**)(uint64_t, uint64_t, uint64_t))(v205 + 40);
  v200(a1, a2, v6);
  v7 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = (int *)type metadata accessor for MapsMerchant();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_233168500(v8, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      goto LABEL_7;
    }
    v199 = a3;
    v203 = a1;
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
    *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
    v24 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v24;
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = v25;
    swift_bridgeObjectRelease();
    v26 = v10[8];
    v27 = (void *)(v8 + v26);
    v28 = (void *)(v9 + v26);
    v29 = sub_23361D340();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_25:
        v56 = v10[9];
        v57 = (void *)(v8 + v56);
        v58 = (void *)(v9 + v56);
        v59 = v31((void *)(v8 + v56), 1, v29);
        v60 = v31(v58, 1, v29);
        if (v59)
        {
          v61 = v31;
          if (v60)
          {
            v62 = v30;
LABEL_30:
            v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v57, v58, v29);
          v62 = v30;
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v57, 0, 1, v29);
        }
        else
        {
          v61 = v31;
          v62 = v30;
          if (v60)
          {
            (*(void (**)(void *, uint64_t))(v30 + 8))(v57, v29);
            goto LABEL_30;
          }
          (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v57, v58, v29);
        }
LABEL_34:
        v64 = v10[10];
        v65 = (_QWORD *)(v8 + v64);
        v66 = (uint64_t *)(v9 + v64);
        v68 = *v66;
        v67 = v66[1];
        *v65 = v68;
        v65[1] = v67;
        swift_bridgeObjectRelease();
        v69 = v10[11];
        v70 = v8 + v69;
        v71 = v9 + v69;
        *(_WORD *)v70 = *(_WORD *)v71;
        *(_BYTE *)(v70 + 2) = *(_BYTE *)(v71 + 2);
        v72 = v10[12];
        v73 = (_QWORD *)(v8 + v72);
        v74 = (uint64_t *)(v9 + v72);
        v76 = *v74;
        v75 = v74[1];
        *v73 = v76;
        v73[1] = v75;
        swift_bridgeObjectRelease();
        v77 = v10[13];
        v78 = (uint64_t *)(v8 + v77);
        v79 = (uint64_t *)(v9 + v77);
        v80 = *(_QWORD *)(v8 + v77 + 8);
        if (v80 >> 60 != 15)
        {
          v81 = v79[1];
          if (v81 >> 60 != 15)
          {
            v82 = *v78;
            *v78 = *v79;
            v78[1] = v81;
            sub_23316BEA4(v82, v80);
LABEL_39:
            v83 = v10[14];
            v84 = (void *)(v8 + v83);
            v85 = (const void *)(v9 + v83);
            v86 = (uint64_t (*)(const void *, uint64_t, uint64_t))v61;
            v87 = v61((void *)(v8 + v83), 1, v29);
            v88 = v86(v85, 1, v29);
            if (v87)
            {
              if (!v88)
              {
                (*(void (**)(void *, const void *, uint64_t))(v62 + 32))(v84, v85, v29);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v84, 0, 1, v29);
                goto LABEL_45;
              }
            }
            else
            {
              if (!v88)
              {
                (*(void (**)(void *, const void *, uint64_t))(v62 + 40))(v84, v85, v29);
LABEL_45:
                v90 = v10[15];
                v91 = (void *)(v8 + v90);
                v92 = (const void *)(v9 + v90);
                v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
                v94 = v93(v8 + v90, 1, v206);
                v95 = v93((uint64_t)v92, 1, v206);
                a1 = v203;
                if (v94)
                {
                  a3 = v199;
                  if (!v95)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v91, v92, v206);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v91, 0, 1, v206);
LABEL_51:
                    *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
                    v97 = v10[17];
                    v98 = v8 + v97;
                    v99 = v9 + v97;
                    *(_QWORD *)v98 = *(_QWORD *)v99;
                    *(_BYTE *)(v98 + 8) = *(_BYTE *)(v99 + 8);
                    v100 = v10[18];
                    v101 = v8 + v100;
                    v102 = v9 + v100;
                    *(_QWORD *)v101 = *(_QWORD *)v102;
                    *(_BYTE *)(v101 + 8) = *(_BYTE *)(v102 + 8);
                    v103 = v10[19];
                    v104 = *(void **)(v8 + v103);
                    *(_QWORD *)(v8 + v103) = *(_QWORD *)(v9 + v103);

                    goto LABEL_52;
                  }
                }
                else
                {
                  a3 = v199;
                  if (!v95)
                  {
                    v200((uint64_t)v91, (uint64_t)v92, v206);
                    goto LABEL_51;
                  }
                  (*(void (**)(void *, uint64_t))(v205 + 8))(v91, v206);
                }
                v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
                goto LABEL_51;
              }
              (*(void (**)(void *, uint64_t))(v62 + 8))(v84, v29);
            }
            v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
            goto LABEL_45;
          }
          sub_2331EC9CC((uint64_t)v78);
        }
        *(_OWORD *)v78 = *(_OWORD *)v79;
        goto LABEL_39;
      }
      (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
    }
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_25;
  }
  if (v14)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_52;
  }
  v198 = a3;
  v202 = a1;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
  v15 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v8 + 32) = v15;
  v16 = v10[8];
  v17 = (void *)(v8 + v16);
  v18 = (const void *)(v9 + v16);
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v34 = v10[9];
  v35 = (void *)(v8 + v34);
  v36 = (const void *)(v9 + v34);
  if (v21((const void *)(v9 + v34), 1, v19))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v35, v36, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, v19);
  }
  *(_OWORD *)(v8 + v10[10]) = *(_OWORD *)(v9 + v10[10]);
  v38 = v10[11];
  v39 = v8 + v38;
  v40 = v9 + v38;
  *(_BYTE *)(v39 + 2) = *(_BYTE *)(v40 + 2);
  *(_WORD *)v39 = *(_WORD *)v40;
  *(_OWORD *)(v8 + v10[12]) = *(_OWORD *)(v9 + v10[12]);
  *(_OWORD *)(v8 + v10[13]) = *(_OWORD *)(v9 + v10[13]);
  v41 = v10[14];
  v42 = (void *)(v8 + v41);
  v43 = (const void *)(v9 + v41);
  if (v21((const void *)(v9 + v41), 1, v19))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v42, v43, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v42, 0, 1, v19);
  }
  v45 = v10[15];
  v46 = (void *)(v8 + v45);
  v47 = (const void *)(v9 + v45);
  a1 = v202;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v9 + v45, 1, v206))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v46, v47, v206);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v46, 0, 1, v206);
  }
  a3 = v198;
  *(_BYTE *)(v8 + v10[16]) = *(_BYTE *)(v9 + v10[16]);
  v49 = v10[17];
  v50 = v8 + v49;
  v51 = v9 + v49;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  v52 = v10[18];
  v53 = v8 + v52;
  v54 = v9 + v52;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  *(_QWORD *)(v8 + v10[19]) = *(_QWORD *)(v9 + v10[19]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_52:
  v105 = a3[7];
  v106 = a1 + v105;
  v107 = a2 + v105;
  v108 = (int *)type metadata accessor for MapsBrand();
  v109 = *((_QWORD *)v108 - 1);
  v110 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v109 + 48);
  v111 = v110(v106, 1, v108);
  v112 = v110(v107, 1, v108);
  if (!v111)
  {
    if (v112)
    {
      sub_233168500(v106, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      goto LABEL_58;
    }
    v204 = a1;
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *(_DWORD *)(v106 + 8) = *(_DWORD *)(v107 + 8);
    *(_BYTE *)(v106 + 12) = *(_BYTE *)(v107 + 12);
    v124 = *(_QWORD *)(v107 + 24);
    *(_QWORD *)(v106 + 16) = *(_QWORD *)(v107 + 16);
    *(_QWORD *)(v106 + 24) = v124;
    swift_bridgeObjectRelease();
    v125 = *(_QWORD *)(v107 + 40);
    *(_QWORD *)(v106 + 32) = *(_QWORD *)(v107 + 32);
    *(_QWORD *)(v106 + 40) = v125;
    swift_bridgeObjectRelease();
    v126 = v108[8];
    v127 = (void *)(v106 + v126);
    v128 = (void *)(v107 + v126);
    v129 = sub_23361D340();
    v130 = *(_QWORD *)(v129 - 8);
    v131 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v130 + 48);
    v132 = v131(v127, 1, v129);
    v133 = v131(v128, 1, v129);
    if (v132)
    {
      if (!v133)
      {
        (*(void (**)(void *, void *, uint64_t))(v130 + 32))(v127, v128, v129);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
        goto LABEL_81;
      }
    }
    else
    {
      if (!v133)
      {
        (*(void (**)(void *, void *, uint64_t))(v130 + 40))(v127, v128, v129);
LABEL_81:
        v155 = v108[9];
        v156 = (void *)(v106 + v155);
        v157 = (void *)(v107 + v155);
        v158 = v131((void *)(v106 + v155), 1, v129);
        v159 = v131(v157, 1, v129);
        if (v158)
        {
          if (!v159)
          {
            (*(void (**)(void *, void *, uint64_t))(v130 + 32))(v156, v157, v129);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v156, 0, 1, v129);
            goto LABEL_87;
          }
        }
        else
        {
          if (!v159)
          {
            (*(void (**)(void *, void *, uint64_t))(v130 + 40))(v156, v157, v129);
LABEL_87:
            v161 = v108[10];
            v162 = (_QWORD *)(v106 + v161);
            v163 = (uint64_t *)(v107 + v161);
            v165 = *v163;
            v164 = v163[1];
            *v162 = v165;
            v162[1] = v164;
            swift_bridgeObjectRelease();
            v166 = v108[11];
            v167 = v106 + v166;
            v168 = v107 + v166;
            *(_WORD *)v167 = *(_WORD *)v168;
            *(_BYTE *)(v167 + 2) = *(_BYTE *)(v168 + 2);
            v169 = v108[12];
            v170 = (_QWORD *)(v106 + v169);
            v171 = (uint64_t *)(v107 + v169);
            v173 = *v171;
            v172 = v171[1];
            *v170 = v173;
            v170[1] = v172;
            swift_bridgeObjectRelease();
            v174 = v108[13];
            v175 = (uint64_t *)(v106 + v174);
            v176 = (uint64_t *)(v107 + v174);
            v177 = *(_QWORD *)(v106 + v174 + 8);
            if (v177 >> 60 != 15)
            {
              v178 = v176[1];
              if (v178 >> 60 != 15)
              {
                v179 = *v175;
                *v175 = *v176;
                v175[1] = v178;
                sub_23316BEA4(v179, v177);
LABEL_92:
                v180 = v108[14];
                v181 = (void *)(v106 + v180);
                v182 = (void *)(v107 + v180);
                v183 = v131((void *)(v106 + v180), 1, v129);
                v184 = v131(v182, 1, v129);
                if (v183)
                {
                  if (!v184)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v130 + 32))(v181, v182, v129);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v181, 0, 1, v129);
                    goto LABEL_98;
                  }
                }
                else
                {
                  if (!v184)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v130 + 40))(v181, v182, v129);
LABEL_98:
                    v186 = v108[15];
                    v187 = (void *)(v106 + v186);
                    v188 = (const void *)(v107 + v186);
                    v189 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
                    v190 = v189(v106 + v186, 1, v206);
                    v191 = v189((uint64_t)v188, 1, v206);
                    if (v190)
                    {
                      if (!v191)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v187, v188, v206);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v187, 0, 1, v206);
LABEL_104:
                        v193 = v108[16];
                        v194 = (void *)(v106 + v193);
                        v195 = (void *)(v107 + v193);
                        v196 = v131((void *)(v106 + v193), 1, v129);
                        v197 = v131(v195, 1, v129);
                        if (v196)
                        {
                          a1 = v204;
                          if (!v197)
                          {
                            (*(void (**)(void *, void *, uint64_t))(v130 + 32))(v194, v195, v129);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v194, 0, 1, v129);
                            return a1;
                          }
                        }
                        else
                        {
                          a1 = v204;
                          if (!v197)
                          {
                            (*(void (**)(void *, void *, uint64_t))(v130 + 40))(v194, v195, v129);
                            return a1;
                          }
                          (*(void (**)(void *, uint64_t))(v130 + 8))(v194, v129);
                        }
                        v121 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700)
                                                     - 8)
                                         + 64);
                        v122 = v194;
                        v123 = v195;
                        goto LABEL_59;
                      }
                    }
                    else
                    {
                      if (!v191)
                      {
                        v200((uint64_t)v187, (uint64_t)v188, v206);
                        goto LABEL_104;
                      }
                      (*(void (**)(void *, uint64_t))(v205 + 8))(v187, v206);
                    }
                    v192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
                    goto LABEL_104;
                  }
                  (*(void (**)(void *, uint64_t))(v130 + 8))(v181, v129);
                }
                v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
                goto LABEL_98;
              }
              sub_2331EC9CC((uint64_t)v175);
            }
            *(_OWORD *)v175 = *(_OWORD *)v176;
            goto LABEL_92;
          }
          (*(void (**)(void *, uint64_t))(v130 + 8))(v156, v129);
        }
        v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
        goto LABEL_87;
      }
      (*(void (**)(void *, uint64_t))(v130 + 8))(v127, v129);
    }
    v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    goto LABEL_81;
  }
  if (v112)
  {
LABEL_58:
    v121 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604E480) - 8) + 64);
    v122 = (void *)v106;
    v123 = (const void *)v107;
LABEL_59:
    memcpy(v122, v123, v121);
    return a1;
  }
  *(_QWORD *)v106 = *(_QWORD *)v107;
  *(_DWORD *)(v106 + 8) = *(_DWORD *)(v107 + 8);
  *(_BYTE *)(v106 + 12) = *(_BYTE *)(v107 + 12);
  v113 = *(_OWORD *)(v107 + 32);
  *(_OWORD *)(v106 + 16) = *(_OWORD *)(v107 + 16);
  *(_OWORD *)(v106 + 32) = v113;
  v114 = v108[8];
  v115 = (void *)(v106 + v114);
  v116 = (const void *)(v107 + v114);
  v117 = sub_23361D340();
  v118 = *(_QWORD *)(v117 - 8);
  v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v118 + 48);
  if (v119(v116, 1, v117))
  {
    v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v118 + 32))(v115, v116, v117);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
  }
  v134 = v108[9];
  v135 = (void *)(v106 + v134);
  v136 = (const void *)(v107 + v134);
  if (v119((const void *)(v107 + v134), 1, v117))
  {
    v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v118 + 32))(v135, v136, v117);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v135, 0, 1, v117);
  }
  *(_OWORD *)(v106 + v108[10]) = *(_OWORD *)(v107 + v108[10]);
  v138 = v108[11];
  v139 = v106 + v138;
  v140 = v107 + v138;
  *(_BYTE *)(v139 + 2) = *(_BYTE *)(v140 + 2);
  *(_WORD *)v139 = *(_WORD *)v140;
  *(_OWORD *)(v106 + v108[12]) = *(_OWORD *)(v107 + v108[12]);
  *(_OWORD *)(v106 + v108[13]) = *(_OWORD *)(v107 + v108[13]);
  v141 = v108[14];
  v142 = (void *)(v106 + v141);
  v143 = (const void *)(v107 + v141);
  v201 = v118;
  if (v119((const void *)(v107 + v141), 1, v117))
  {
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v118 + 32))(v142, v143, v117);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v142, 0, 1, v117);
  }
  v145 = v108[15];
  v146 = (void *)(v106 + v145);
  v147 = (const void *)(v107 + v145);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v107 + v145, 1, v206))
  {
    v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v146, v147, v206);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v146, 0, 1, v206);
  }
  v149 = v108[16];
  v150 = (void *)(v106 + v149);
  v151 = (const void *)(v107 + v149);
  if (v119(v151, 1, v117))
  {
    v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v201 + 32))(v150, v151, v117);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v150, 0, 1, v117);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v109 + 56))(v106, 0, 1, v108);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsTransactionInsight()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233402998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 28);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MapsTransactionInsight()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233402A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 28);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233402AEC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23361D634();
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_25604E570, (void (*)(uint64_t))type metadata accessor for MapsMerchant);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, qword_256055C30, (void (*)(uint64_t))type metadata accessor for MapsBrand);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_233402BB8()
{
  return type metadata accessor for MapsTransactionInsight.XPC(0);
}

uint64_t sub_233402BC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MapsTransactionInsight(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MapsTransactionInsight.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapsTransactionInsight.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for MapsTransactionInsight.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233402C8C + 4 * byte_233646119[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233402CC0 + 4 * byte_233646114[v4]))();
}

uint64_t sub_233402CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233402CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233402CD0);
  return result;
}

uint64_t sub_233402CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233402CE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233402CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233402CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsTransactionInsight.CodingKeys()
{
  return &type metadata for MapsTransactionInsight.CodingKeys;
}

unint64_t sub_233402D10()
{
  unint64_t result;

  result = qword_25604E5E8;
  if (!qword_25604E5E8)
  {
    result = MEMORY[0x234934494](&unk_23364629C, &type metadata for MapsTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604E5E8);
  }
  return result;
}

unint64_t sub_233402D58()
{
  unint64_t result;

  result = qword_25604E5F0;
  if (!qword_25604E5F0)
  {
    result = MEMORY[0x234934494](&unk_23364620C, &type metadata for MapsTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604E5F0);
  }
  return result;
}

unint64_t sub_233402DA0()
{
  unint64_t result;

  result = qword_25604E5F8;
  if (!qword_25604E5F8)
  {
    result = MEMORY[0x234934494](&unk_233646234, &type metadata for MapsTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604E5F8);
  }
  return result;
}

uint64_t sub_233402DE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4164657461647075 && a2 == 0xE900000000000074;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002336766D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E617262 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233402F98(unint64_t a1, uint64_t a2, SEL *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v4 = v3;
  if (a1 >> 62)
    goto LABEL_15;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x24BEE4AF8];
    if (!v6)
      return v7;
    v20 = MEMORY[0x24BEE4AF8];
    result = sub_23327399C(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v18 = v4;
    v9 = 0;
    v7 = v20;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x234933120](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, *a3, v18);
      v13 = sub_23361E150();
      v15 = v14;

      v4 = *(_QWORD *)(v20 + 16);
      v16 = *(_QWORD *)(v20 + 24);
      if (v4 >= v16 >> 1)
        sub_23327399C(v16 > 1, v4 + 1, 1);
      ++v9;
      *(_QWORD *)(v20 + 16) = v4 + 1;
      v17 = v20 + 16 * v4;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v15;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_233403110()
{
  uint64_t v0;

  return sub_233404BF0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_233403120()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_233403138()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t);
  id v17[2];

  v1 = *(_QWORD **)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v1[2] + 16), sel_newBackgroundContext);
  *(_QWORD *)(v0 + 32) = v2;
  v3 = v1[6];
  v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v17, v3, v4);
  v5 = v17[0];
  v6 = objc_msgSend(v17[0], sel_passesOfType_, 1);
  sub_233168668(0, &qword_256042B88);
  v7 = sub_23361E3F0();

  v8 = sub_233547E54(v7);
  *(_QWORD *)(v0 + 40) = v8;
  swift_bridgeObjectRelease();

  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v2;
  sub_23361E960();
  swift_task_dealloc();
  *(_BYTE *)(v0 + 68) = *(_BYTE *)(v0 + 64);
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v2;
  sub_23361E960();
  v11 = *(_QWORD **)(v0 + 24);
  swift_task_dealloc();
  *(_BYTE *)(v0 + 69) = *(_BYTE *)(v0 + 65);
  v12 = v11[11];
  v13 = v11[12];
  __swift_project_boxed_opaque_existential_1(v11 + 8, v12);
  v16 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v13 + 8) + *(_QWORD *)(v13 + 8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v14;
  *v14 = v0;
  v14[1] = sub_2334034E0;
  return v16(v12, v13);
}

uint64_t sub_2334034E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23340354C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  char v15;
  int v17;
  void *v18;
  void *v19;

  v1 = *(void **)(v0 + 56);
  *(int8x16_t *)(swift_task_alloc() + 16) = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
  sub_23361E960();
  v2 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (qword_256041CA0 != -1)
      swift_once();
    v6 = sub_23361DB80();
    __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
    v7 = v1;
    v8 = v1;
    v9 = sub_23361DB68();
    v10 = sub_23361E768();
    if (os_log_type_enabled(v9, v10))
    {
      v19 = *(void **)(v0 + 32);
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v1;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 16) = v14;
      sub_23361EBC4();
      *v12 = v14;

      _os_log_impl(&dword_233151000, v9, v10, "Failed to refresh Bank Connect institution cache: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v12, -1, -1);
      MEMORY[0x234934590](v11, -1, -1);

    }
    else
    {

    }
    v15 = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc();
    v4 = *(unsigned __int8 *)(v0 + 66);
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v3;
    sub_23361E960();
    v17 = *(unsigned __int8 *)(v0 + 68);
    v18 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    if (v4 == v17)
      v15 = *(_BYTE *)(v0 + 67) ^ *(_BYTE *)(v0 + 69);
    else
      v15 = 1;
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v15 & 1);
}

uint64_t sub_233403800()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v12;

  v1 = *(void **)(v0 + 56);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v12 = *(void **)(v0 + 32);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to refresh Bank Connect institution cache: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_2334039DC()
{
  return sub_233403A04();
}

uint64_t sub_2334039F0()
{
  return sub_233403A04();
}

uint64_t sub_233403A04()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  id v8;

  v1 = objc_msgSend(*(id *)(v0[2] + 16), sel_newBackgroundContext);
  v2 = v0[6];
  v3 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v2);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v8, v2, v3);
  v4 = v8;
  v5 = objc_msgSend(v8, sel_passesOfType_, 1);
  sub_233168668(0, &qword_256042B88);
  v6 = sub_23361E3F0();

  sub_233547E54(v6);
  swift_bridgeObjectRelease();
  sub_23361E960();

  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_233403CB4@<X0>(unint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[8];

  type metadata accessor for ManagedInternalAccount();
  v5 = sub_233402F98(a1, (uint64_t)v9, (SEL *)&selRef_primaryAccountIdentifier);
  v6 = static ManagedInternalAccount.existingAccounts(withExternalAccountIDs:in:)(v5);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_23361EF30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    result = swift_bridgeObjectRelease();
    *a2 = v8 != 0;
  }
  return result;
}

uint64_t sub_233403D88@<X0>(unint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  unsigned __int8 *i;
  char v20[8];

  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_233402F98(a1, (uint64_t)v20, (SEL *)&selRef_serialNumber);
  sub_23361D5F8();
  v10 = sub_2331E9AD4(v9);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    if (v12 >> 62)
      goto LABEL_14;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (i = a2; v13; i = a2)
    {
      v14 = 4;
      while (1)
      {
        v15 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x234933120](v14 - 4, v12)
            : *(id *)(v12 + 8 * v14);
        v16 = v15;
        a2 = (unsigned __int8 *)(v14 - 3);
        if (__OFADD__(v14 - 4, 1))
          break;
        v17 = objc_msgSend(v15, sel_linkable);

        if ((v17 & 1) == 0)
        {
          ++v14;
          if (a2 != (unsigned __int8 *)v13)
            continue;
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v13 = sub_23361EF30();
    }
    v17 = 0;
LABEL_16:
    result = swift_bridgeObjectRelease_n();
    *i = v17;
  }
  return result;
}

uint64_t sub_233403F54()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_233403F88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318B35C;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_233403FE8()
{
  return sub_2334039DC() & 1;
}

uint64_t sub_23340400C()
{
  return sub_2334039F0() & 1;
}

id sub_233404030()
{
  id v1;

  if (qword_254246F70 != -1)
    swift_once();
  v1 = (id)qword_254246F68;
  qword_25604E640 = sub_233168668(0, (unint64_t *)&qword_254247660);
  unk_25604E648 = &protocol witness table for NSUserDefaults;
  qword_25604E628 = (uint64_t)v1;
  word_25604E620 = 0;
  qword_25604E610 = 0xD000000000000024;
  *(_QWORD *)algn_25604E618 = 0x8000000233676800;
  qword_25604E650 = (uint64_t)&type metadata for DeviceInfo;
  unk_25604E658 = &protocol witness table for DeviceInfo;
  return v1;
}

id BankConnectEvaluationManagerWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BankConnectEvaluationManagerWrapper.init()()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  objc_super v18;
  __int128 v19;
  ValueMetadata *v20;
  _UNKNOWN **v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = qword_256041D18;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  sub_2331DDF7C((uint64_t)&qword_25604E610, (uint64_t)&v19);
  v4 = sub_2331704B8();
  sub_2332ACC28((uint64_t)&v19);
  if ((v4 & 1) != 0)
  {
    if (qword_254247048 != -1)
      swift_once();
    v5 = *((_QWORD *)off_254247040 + 2);
    v20 = &type metadata for BankConnectPaymentPassDataSourceProvider;
    v21 = &protocol witness table for BankConnectPaymentPassDataSourceProvider;
    v6 = qword_256041D40;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v7 = off_256054E98;
    v16 = type metadata accessor for BankConnectService();
    v17 = &protocol witness table for BankConnectService;
    *(_QWORD *)&v15 = v7;
    v8 = type metadata accessor for BankConnectEvaluationManager();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v5;
    sub_23318B020(&v19, v9 + 24);
    sub_23318B020(&v15, v9 + 64);
    v10 = (uint64_t *)&v3[OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager];
    v10[3] = v8;
    v10[4] = (uint64_t)&off_250484930;
    *v10 = v9;
    swift_retain();
  }
  else
  {
    v11 = type metadata accessor for DefaultBankConnectEvaluationManager();
    v12 = swift_allocObject();
    v13 = (uint64_t *)&v3[OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager];
    v13[3] = v11;
    v13[4] = (uint64_t)&off_250484950;
    *v13 = v12;
  }

  v18.receiver = v3;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t type metadata accessor for DefaultBankConnectEvaluationManager()
{
  return objc_opt_self();
}

uint64_t BankConnectEvaluationManagerWrapper.reevaluateEligibility()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23340432C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_2334043B0;
  return v6(v2, v3);
}

uint64_t sub_2334043B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233404514(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_23340455C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_2334045E0;
  return v6(v2, v3);
}

uint64_t sub_2334045E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233404634()
{
  uint64_t v0;
  void (**v1)(_QWORD);

  v1 = *(void (***)(_QWORD))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectEvaluationManagerWrapper.reevaluateEligibilityAndReturnShouldReloadDiscoveryItems()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_233404690()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_233404714;
  return v6(v2, v3);
}

uint64_t sub_233404714(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_233404880(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2334048C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_23340494C;
  return v6(v2, v3);
}

uint64_t sub_23340494C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2334049A8()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(_QWORD, _QWORD);

  v1 = *(unsigned __int8 *)(v0 + 40);
  v2 = *(void (***)(_QWORD, _QWORD))(v0 + 24);

  v2[2](v2, v1);
  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Bool __swiftcall BankConnectEvaluationManagerWrapper.hasAnyEligibleBankConnectCard()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) & 1;
}

Swift::Bool __swiftcall BankConnectEvaluationManagerWrapper.hasAnyConnectedCardWithBankConnect()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit35BankConnectEvaluationManagerWrapper_manager), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

id BankConnectEvaluationManagerWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BankConnectEvaluationManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BankConnectEvaluationManagerWrapper()
{
  return objc_opt_self();
}

uint64_t sub_233404BF0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_233404C04()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23318C26C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25604E790 + dword_25604E790))(v2, v3);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_233404CA0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2331676FC;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25604E7A0 + dword_25604E7A0))(v2, v3);
}

uint64_t sub_233404D08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23318C26C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2560589A8 + dword_2560589A8))(v2, v3, v4);
}

uint64_t sub_233404D84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_233403CB4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_233404D9C@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  return sub_233403D88(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_233404DB4@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_233404D9C(a1);
}

uint64_t sub_233404DC8@<X0>(BOOL *a1@<X8>)
{
  return sub_233404D84(a1);
}

uint64_t BankConnectService.loadAccount(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for BankConnectService.Message();
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233404E3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[7];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043048 + dword_256043048);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BA8CC;
  return v5(v0[2], v0[7]);
}

uint64_t BankConnectService.loadAccount(for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = type metadata accessor for BankConnectService.Message();
  v5 = swift_task_alloc();
  v6 = *a2;
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v3 + 72) = a2[3];
  return swift_task_switch();
}

uint64_t sub_233404F44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[8];
  v2 = v0[9];
  v3 = v0[7];
  v4 = (_QWORD *)v0[5];
  *v4 = v0[6];
  v4[1] = v3;
  v4[2] = v1;
  v4[3] = v2;
  swift_storeEnumTagMultiPayload();
  v7 = (char *)&dword_256043048 + dword_256043048;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_233404FEC;
  return ((uint64_t (*)(_QWORD, _QWORD))v7)(v0[2], v0[5]);
}

uint64_t sub_233404FEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_233405078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  v4[5] = type metadata accessor for BankConnectService.Message();
  v5 = swift_task_alloc();
  v6 = *v3;
  v4[6] = v5;
  v4[7] = v6;
  return swift_task_switch();
}

uint64_t sub_2334050DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[6];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043048 + dword_256043048);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BAE4C;
  return v5(v0[2], v0[6]);
}

uint64_t sub_233405170(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = type metadata accessor for BankConnectService.Message();
  v5 = swift_task_alloc();
  v6 = *v2;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)a2;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 24);
  return swift_task_switch();
}

uint64_t sub_2334051EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[8];
  v2 = v0[9];
  v3 = v0[7];
  v4 = (_QWORD *)v0[4];
  *v4 = v0[6];
  v4[1] = v3;
  v4[2] = v1;
  v4[3] = v2;
  swift_storeEnumTagMultiPayload();
  v7 = (char *)&dword_256043048 + dword_256043048;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_233405294;
  return ((uint64_t (*)(_QWORD, _QWORD))v7)(v0[2], v0[4]);
}

uint64_t sub_233405294()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_233405320()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of BankConnectAccountUpdating.loadAccount(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318C26C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of BankConnectAccountUpdating.loadAccount(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return v11(a1, a2, a3, a4);
}

uint64_t BankConnectService.insertOrUpdateInstitution(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for BankConnectService.Message();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334054CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[13];
  v2 = v0[10];
  v0[14] = *(_QWORD *)(v0[11] + 16);
  sub_23318C604(v2, v1);
  swift_storeEnumTagMultiPayload();
  return swift_task_switch();
}

uint64_t sub_233405528(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.insertOrUpdateInstitution(_:)(a1);
}

uint64_t dispatch thunk of BankConnectInstitutionUpdating.insertOrUpdateInstitution(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

id static ManagedTransaction.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedTransaction;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t static ManagedTransaction.predicateForTransactions(forAccountID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_2331B372C();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

uint64_t CoreAnalyticsProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CoreAnalyticsProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t static CoreAnalyticsProvider.shared.getter()
{
  return swift_initStaticObject();
}

id sub_233405718(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_23331CE10();
    v4 = (void *)sub_23361E054();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t CoreAnalyticsProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreAnalyticsProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

