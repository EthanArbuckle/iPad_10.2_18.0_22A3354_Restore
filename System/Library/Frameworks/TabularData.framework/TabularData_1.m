uint64_t sub_215089A4C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038EBC(0, v1, 0);
    v2 = v9;
    v4 = a1 + 56;
    do
    {
      sub_215088CC4();
      v9 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038EBC((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 32;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2150459B0(&v8, v2 + 40 * v6 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

char *sub_215089B6C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char *v61;

  v3 = v2;
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  v7 = *(char **)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 57);
  v14 = *(_BYTE *)(a1 + 58);
  v15 = *(_BYTE *)(a1 + 59);
  v16 = *(_BYTE *)(a1 + 60);
  v18 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  if ((a2 & 1) != 0 && v19 >= 1)
  {
    v49 = (char *)MEMORY[0x24BEE4AF8];
    v50 = v6;
    v51 = v7;
    v52 = v9;
    v53 = v8;
    v54 = v10;
    v55 = v11;
    v56 = v12;
    v57 = v13;
    v58 = v14;
    v59 = v15;
    v60 = v16;
    v61 = (char *)MEMORY[0x24BEE4AF8];
    v32 = v5;
    LOBYTE(v33) = v6;
    v34 = v7;
    v35 = v9;
    v36 = v8;
    v37 = v10;
    v38 = v11;
    v39 = v12;
    v40 = v13;
    v41 = v14;
    v42 = v15;
    v43 = v16;
    v44 = v18;
    v45 = v17;
    v46 = v19;
    v47 = v20;
    v48 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21505CD60(0, &v32, &v49, 0, (uint64_t *)&v61);
    v22 = v61;
    if (!v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    goto LABEL_7;
  }
  v22 = (char *)MEMORY[0x24BEE4AF8];
  if (v19 >= 1)
  {
    v49 = (char *)MEMORY[0x24BEE4AF8];
    v50 = v6;
    v51 = v7;
    v52 = v9;
    v53 = v8;
    v54 = v10;
    v55 = v11;
    v56 = v12;
    v57 = v13;
    v58 = v14;
    v59 = v15;
    v60 = v16;
    v61 = (char *)MEMORY[0x24BEE4AF8];
    v32 = v5;
    LOBYTE(v33) = v6;
    v34 = v7;
    v35 = v9;
    v36 = v8;
    v37 = v10;
    v38 = v11;
    v39 = v12;
    v40 = v13;
    v41 = v14;
    v42 = v15;
    v43 = v16;
    v44 = v18;
    v45 = v17;
    v46 = v19;
    v47 = v20;
    v48 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21505CD60(0, &v32, &v49, 0, (uint64_t *)&v61);
    if (v3)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v22 = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    v23 = (uint64_t)v61;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 16);
    swift_bridgeObjectRelease();
    v22 = (char *)MEMORY[0x24BEE4AF8];
    if (v24)
    {
      v49 = (char *)MEMORY[0x24BEE4AF8];
      sub_215038BC8(0, v24, 0);
      v25 = 0;
      v22 = v49;
      do
      {
        v32 = 0x206E6D756C6F43;
        v33 = 0xE700000000000000;
        v61 = (char *)v25;
        sub_2151303B8();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        v27 = v32;
        v26 = v33;
        v49 = v22;
        v29 = *((_QWORD *)v22 + 2);
        v28 = *((_QWORD *)v22 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_215038BC8((char *)(v28 > 1), v29 + 1, 1);
          v22 = v49;
        }
        ++v25;
        *((_QWORD *)v22 + 2) = v29 + 1;
        v30 = &v22[16 * v29];
        *((_QWORD *)v30 + 4) = v27;
        *((_QWORD *)v30 + 5) = v26;
      }
      while (v24 != v25);
    }
  }
  return v22;
}

uint64_t sub_215089F08(_QWORD *a1, _QWORD *a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;

  if (!a2)
  {
    v20 = a1[2];
    swift_bridgeObjectRetain();
    v5 = sub_215087D6C(0, v20, (uint64_t)a1);
    swift_bridgeObjectRelease();
    return v5;
  }
  v4 = a2[2];
  swift_bridgeObjectRetain();
  v5 = (uint64_t)sub_21502EDF0(0, v4, 0, MEMORY[0x24BEE4AF8]);
  v27 = v4;
  if (!v4)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    return v5;
  }
  v6 = a2[4];
  v26 = a2 + 4;
  v7 = a2[5];
  v25 = a1[2];
  if (!v25)
  {
    swift_bridgeObjectRetain();
    goto LABEL_30;
  }
  v8 = a1[4];
  v9 = a1[5];
  v23 = a1 + 9;
  v24 = a1;
  for (i = 1; ; ++i)
  {
    swift_bridgeObjectRetain();
    if (v8 == v6 && v9 == v7 || (sub_21513043C() & 1) != 0)
    {
      v11 = 0;
      goto LABEL_9;
    }
    if (v25 == 1)
      goto LABEL_30;
    if ((v24[6] != v6 || v24[7] != v7) && (sub_21513043C() & 1) == 0)
      break;
    v11 = 1;
LABEL_9:
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
      v5 = (uint64_t)sub_21502EDF0((char *)(v12 > 1), v13 + 1, 1, (char *)v5);
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 32 * v13;
    *(_QWORD *)(v14 + 32) = v6;
    *(_QWORD *)(v14 + 40) = v7;
    *(_QWORD *)(v14 + 48) = v11;
    *(_BYTE *)(v14 + 56) = 7;
    if (i == v27)
      goto LABEL_27;
    v15 = &v26[2 * i];
    v6 = *v15;
    v7 = v15[1];
  }
  v16 = v23;
  v17 = 2;
  while (1)
  {
    v11 = v17;
    if (v25 == v17)
      break;
    if (*(v16 - 1) != v6 || *v16 != v7)
    {
      v19 = sub_21513043C();
      v17 = v11 + 1;
      v16 += 2;
      if ((v19 & 1) == 0)
        continue;
    }
    goto LABEL_9;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2150602A0();
  swift_allocError();
  *(_QWORD *)v21 = v6;
  *(_QWORD *)(v21 + 8) = v7;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 32) = 0x1000000000000000;
  *(_BYTE *)(v21 + 40) = 1;
  swift_willThrow();
  return v5;
}

uint64_t sub_21508A19C(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a5 & 1;
  if ((a3 & 1) != 0)
    return a5 & 1;
  v7 = result + v6;
  if (__OFADD__(result, v6))
  {
    __break(1u);
  }
  else
  {
    v8 = __OFADD__(a2, v6);
    v9 = a2 + v6;
    if (!v8)
    {
      if (v9 >= a4)
        v10 = a4;
      else
        v10 = v9;
      if (v10 < v7)
      {
        sub_2150602A0();
        swift_allocError();
        *(_QWORD *)v11 = v7;
        *(_QWORD *)(v11 + 8) = a4;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v11 + 24) = 0;
        *(_QWORD *)(v11 + 32) = 0x2000000000000000;
        *(_BYTE *)(v11 + 40) = 1;
        swift_willThrow();
      }
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21508A24C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21508A2BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21508A30C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21508A35C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21508A3D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21508A470()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21508A59C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 304);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t initializeWithCopy for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVColumnDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVColumnDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVColumnDescriptor()
{
  return &type metadata for CSVColumnDescriptor;
}

_QWORD *sub_21508A7D4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_21508A7E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_21508A7F4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_21508A808@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21508A81C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_21508A84C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_21508A878@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_21508A89C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_21508A8B0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_21508A8C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_21508A8D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21508A8EC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_21508A900(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_21508A914(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_21508A928()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_21508A938()
{
  return sub_215130100();
}

_QWORD *sub_21508A950(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_21508A964@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_21508A974(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_21508A980(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21508A994@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_21508AE3C(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_21508A9D0()
{
  sub_2151305A4();
  sub_2151305C8();
  return sub_2151305EC();
}

uint64_t sub_21508AA14()
{
  return sub_2151305C8();
}

uint64_t sub_21508AA3C()
{
  sub_2151305A4();
  sub_2151305C8();
  return sub_2151305EC();
}

uint64_t sub_21508AA7C@<X0>(unsigned __int16 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_21508AAB0(*a1);
  *a2 = result;
  return result;
}

void sub_21508AAA4(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_21508AAB0(uint64_t result)
{
  if ((unsigned __int16)result >= 0xAu)
    return 10;
  else
    return (unsigned __int16)result;
}

uint64_t getEnumTagSinglePayload for BlockInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF7 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 247);
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4 = v3 >= 0xA;
  v5 = v3 - 10;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 247;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = a2 + 9;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockInfo()
{
  return &type metadata for BlockInfo;
}

uint64_t getEnumTagSinglePayload for BlockInfo.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockInfo.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_21508AC44 + 4 * byte_215137B79[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_21508AC78 + 4 * asc_215137B74[v4]))();
}

uint64_t sub_21508AC78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21508AC80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21508AC88);
  return result;
}

uint64_t sub_21508AC94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21508AC9CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_21508ACA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21508ACA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockInfo.ContentType()
{
  return &type metadata for BlockInfo.ContentType;
}

ValueMetadata *type metadata accessor for BlockInfo.Flags()
{
  return &type metadata for BlockInfo.Flags;
}

unint64_t sub_21508ACD8()
{
  unint64_t result;

  result = qword_254DA81B8;
  if (!qword_254DA81B8)
  {
    result = MEMORY[0x2199DC4C4](&unk_215137BCC, &type metadata for BlockInfo.Flags);
    atomic_store(result, (unint64_t *)&qword_254DA81B8);
  }
  return result;
}

unint64_t sub_21508AD20()
{
  unint64_t result;

  result = qword_254DA81C0;
  if (!qword_254DA81C0)
  {
    result = MEMORY[0x2199DC4C4](&unk_215137B9C, &type metadata for BlockInfo.Flags);
    atomic_store(result, (unint64_t *)&qword_254DA81C0);
  }
  return result;
}

unint64_t sub_21508AD68()
{
  unint64_t result;

  result = qword_254DA81C8;
  if (!qword_254DA81C8)
  {
    result = MEMORY[0x2199DC4C4](&unk_215137BF4, &type metadata for BlockInfo.Flags);
    atomic_store(result, (unint64_t *)&qword_254DA81C8);
  }
  return result;
}

unint64_t sub_21508ADB0()
{
  unint64_t result;

  result = qword_254DA81D0;
  if (!qword_254DA81D0)
  {
    result = MEMORY[0x2199DC4C4](&unk_215137C2C, &type metadata for BlockInfo.Flags);
    atomic_store(result, (unint64_t *)&qword_254DA81D0);
  }
  return result;
}

unint64_t sub_21508ADF8()
{
  unint64_t result;

  result = qword_254DA81D8;
  if (!qword_254DA81D8)
  {
    result = MEMORY[0x2199DC4C4](&unk_215137DA4, &type metadata for BlockInfo.ContentType);
    atomic_store(result, (unint64_t *)&qword_254DA81D8);
  }
  return result;
}

uint64_t sub_21508AE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_21508AE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
    return 0;
  sub_21501EE90(*(_QWORD *)v0 + 32, (uint64_t)v5);
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 48))(v1);
  result = sub_21501EA34((uint64_t)v5);
  if ((v3 & 0x8000000000000000) == 0)
    return 0;
  __break(1u);
  return result;
}

uint64_t DataFrame.base.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21508AF3C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_21508B144(a1, a2, *v3, v3[1], v3[2], a3);
}

uint64_t sub_21508AF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t result;

  if (a1 == a2)
    v4 = 0;
  else
    v4 = a1;
  if (a1 == a2)
    v5 = 0;
  else
    v5 = a2;
  v6 = 2 * (a1 == a2);
  v7 = *v3;
  v8 = v3[1];
  v9 = v3[2];
  v10 = v3[3];
  v11 = v3[4];
  v12 = *((_BYTE *)v3 + 40);
  sub_2150437A8(v10, v11, v12);
  sub_2150437A8(v10, v11, v12);
  sub_21501EF2C(v10, v11, v12);
  sub_2150437A8(v4, v5, v6);
  sub_21508C7D4(v10, v11, v12);
  sub_21501EF2C(v10, v11, v12);
  sub_21501EF2C(v4, v5, v6);
  v13 = v6;
  if (v6 != 1)
    goto LABEL_10;
  v14 = *(_QWORD *)(v4 + 16);
  sub_21501EF2C(v4, v5, 1);
  if (v14)
  {
    do
    {
      sub_2151302EC();
      __break(1u);
LABEL_10:
      ;
    }
    while (v13 != 2);
  }
  sub_2150437A8(v10, v11, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v10, v11, v12);
  sub_21501EF2C(v10, v11, v12);
  v15 = sub_21502CB8C((char *)v4, v5, v6, v10, v11, v12);
  v17 = v16;
  v19 = v18;
  result = sub_21501EF2C(v4, v5, v6);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = v17;
  *(_BYTE *)(a3 + 40) = v19;
  return result;
}

uint64_t sub_21508B144@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  BOOL v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v10 = a1 == (char *)a2;
  if (a1 == (char *)a2)
    v11 = 0;
  else
    v11 = a1;
  if (a1 == (char *)a2)
    v12 = 0;
  else
    v12 = a2;
  v33 = *(_QWORD *)(a3 + 16);
  if (v33)
  {
    sub_21501EE90(a3 + 32, (uint64_t)&v35);
    v13 = v38;
    v14 = v39;
    __swift_project_boxed_opaque_existential_1(&v35, v38);
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v16(v13, v15);
    result = sub_21501EA34((uint64_t)&v35);
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17)
    {
      v19 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v17 = 0;
  v19 = 2;
LABEL_13:
  v20 = 2 * v10;
  sub_2150437A8(0, v17, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v17, v19);
  v35 = v11;
  v36 = v12;
  v37 = 2 * v10;
  sub_2150437A8((uint64_t)v11, v12, 2 * v10);
  sub_21508C7D4(0, v17, v19);
  sub_21501EF2C(0, v17, v19);
  sub_21501EF2C((uint64_t)v11, v12, 2 * v10);
  if (v37 == 1)
  {
    v21 = *((_QWORD *)v35 + 2);
    sub_21501EF2C((uint64_t)v35, v36, 1);
    if (!v21)
      goto LABEL_15;
LABEL_20:
    sub_2151302EC();
    __break(1u);
    goto LABEL_21;
  }
  if (v37 != 2)
    goto LABEL_20;
LABEL_15:
  if (!v33)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_22;
  }
  v34 = v11;
  sub_21501EE90(a3 + 32, (uint64_t)&v35);
  v22 = v38;
  v23 = v39;
  __swift_project_boxed_opaque_existential_1(&v35, v38);
  v24 = *(_QWORD *)(v23 + 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v26 = v25(v22, v24);
  result = sub_21501EA34((uint64_t)&v35);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v11 = v34;
    if (v26)
    {
      v27 = 0;
LABEL_23:
      sub_2150437A8(0, v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(0, v26, v27);
      v28 = sub_21502CB8C(v11, v12, v20, 0, v26, v27);
      v30 = v29;
      v32 = v31;
      result = sub_21501EF2C((uint64_t)v11, v12, v20);
      *(_QWORD *)a6 = a3;
      *(_QWORD *)(a6 + 8) = a4;
      *(_QWORD *)(a6 + 16) = a5;
      *(_QWORD *)(a6 + 24) = v28;
      *(_QWORD *)(a6 + 32) = v30;
      *(_BYTE *)(a6 + 40) = v32;
      return result;
    }
LABEL_22:
    v26 = 0;
    v27 = 2;
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

double DataFrameProtocol.subscript.getter@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double result;
  void (*v24)(uint64_t *__return_ptr, uint64_t, uint64_t);
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  if (a1 == (char *)a2)
    v6 = 0;
  else
    v6 = a1;
  if (a1 == (char *)a2)
    v7 = 0;
  else
    v7 = a2;
  v8 = 2 * (a1 == (char *)a2);
  v24 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32);
  v24(&v29, a3, a4);
  v9 = v30;
  v10 = v31;
  v11 = v32;
  sub_2150437A8(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v9, v10, v11);
  *(_QWORD *)&v27 = v6;
  *((_QWORD *)&v27 + 1) = v7;
  LOBYTE(v28) = v8;
  sub_2150437A8((uint64_t)v6, v7, v8);
  sub_21508C7D4(v9, v10, v11);
  sub_21501EF2C(v9, v10, v11);
  sub_21501EF2C((uint64_t)v6, v7, v8);
  v12 = v8;
  if (v8 != 1)
    goto LABEL_10;
  v13 = *(_QWORD *)(v27 + 16);
  sub_21501EF2C(v27, *((uint64_t *)&v27 + 1), 1);
  if (v13)
  {
    do
    {
      sub_2151302EC();
      __break(1u);
LABEL_10:
      ;
    }
    while (v12 != 2);
  }
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v27, a3, a4);
  v14 = v28;
  v24(&v29, a3, a4);
  v15 = v30;
  v16 = v31;
  v17 = v32;
  sub_2150437A8(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v15, v16, v17);
  v18 = sub_21502CB8C(v6, v7, v8, v15, v16, v17);
  v20 = v19;
  v22 = v21;
  sub_21501EF2C((uint64_t)v6, v7, v8);
  result = *(double *)&v27;
  *(_OWORD *)a5 = v27;
  *(_QWORD *)(a5 + 16) = v14;
  *(_QWORD *)(a5 + 24) = v18;
  *(_QWORD *)(a5 + 32) = v20;
  *(_BYTE *)(a5 + 40) = v22;
  return result;
}

uint64_t sub_21508B6C8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];

  v3 = a1[1];
  v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  sub_21508D0BC((uint64_t)&v5, a2, a3);
  return sub_215045244((uint64_t)&v5);
}

uint64_t DataFrameProtocol.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  char **v28;
  char *v29;
  char **v30;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, Swift::Int, uint64_t *, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  uint64_t (*v46)(_BYTE *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v55;
  void (*v58)(_BYTE *, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[32];
  char v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  char v71;

  v60 = *a1;
  v47 = a1[2];
  v48 = a1[1];
  v51 = a1[3];
  v49 = a1[4];
  v50 = *((unsigned __int8 *)a1 + 40);
  v5 = a2 == a3;
  if (a2 == a3)
    v6 = 0;
  else
    v6 = a2;
  if (a2 == a3)
    v7 = 0;
  else
    v7 = a3;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 32))(v68, a4, a5);
  v8 = v69;
  v9 = v70;
  v10 = v71;
  sub_2150437A8(v69, v70, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v8, v9, v10);
  v61 = v6;
  v62 = v7;
  v63 = 2 * v5;
  sub_2150437A8(v6, v7, 2 * v5);
  sub_21508C7D4(v8, v9, v10);
  sub_21501EF2C(v8, v9, v10);
  sub_21501EF2C(v6, v7, 2 * v5);
  if ((2 * v5) == 1)
  {
    v11 = *(_QWORD *)(v61 + 16);
    sub_21501EF2C(v61, v62, 1);
    if (v11)
      goto LABEL_55;
  }
  else if ((2 * v5) != 2)
  {
    goto LABEL_55;
  }
  v12 = v51;
  v13 = v50;
  v15 = v48;
  v14 = v49;
  v16 = v47;
  if (__OFSUB__(a3, a2))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v17 = sub_2150EBD1C(v51, v49, v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v51, v49, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v51, v49, v50);
  if (a3 - a2 != v17)
  {
LABEL_55:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  v18 = v51;
  if (v50)
  {
    if (v50 == 1 && *(_QWORD *)(v51 + 16))
    {
      v18 = *(_QWORD *)(v51 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_21508C520(v51, v49, v50);
      if ((v20 & 1) != 0)
      {
        sub_2150437A8(v51, v49, v50);
        v18 = 0;
      }
      else
      {
        v18 = v19;
        sub_2150437A8(v51, v49, v50);
      }
    }
  }
  sub_21508C520(v51, v49, v50);
  if ((v22 & 1) != 0)
    v23 = 0;
  else
    v23 = v21;
  v55 = v23;
  v67 = 0;
  if (a2 == a3)
    goto LABEL_27;
  if (a3 < a2)
    goto LABEL_53;
  if (a2 >= a3)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v18 != v23)
  {
    v46 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a5 + 48);
    v25 = *(_QWORD *)(v60 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = a2;
    while (1)
    {
      v68[0] = v60;
      v68[1] = v15;
      v68[2] = v16;
      v69 = v12;
      v70 = v14;
      v71 = v13;
      v26 = DataFrame.Rows.index(after:)(v18);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_2150437A8(v12, v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v12, v14, v13);
      v27 = v46(v66, a4, a5);
      v29 = *v28;
      if (v25 != *((_QWORD *)*v28 + 2))
        goto LABEL_55;
      v58 = (void (*)(_BYTE *, _QWORD))v27;
      if (v25)
      {
        if (v25 <= *(_QWORD *)(v60 + 16))
        {
          v30 = v28;
          v52 = v26;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v30 = v29;
          v32 = v18;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v29 = sub_21501E4D4((uint64_t)v29);
          v33 = 0;
          v34 = 0;
          *v30 = v29;
          while (1)
          {
            sub_21501EE90(v60 + v33 + 32, (uint64_t)v68);
            v35 = swift_isUniquelyReferenced_nonNull_native();
            *v30 = v29;
            if ((v35 & 1) == 0)
            {
              v29 = sub_21501E4D4((uint64_t)v29);
              *v30 = v29;
            }
            if (v34 >= *((_QWORD *)v29 + 2))
              break;
            ++v34;
            v36 = v69;
            v37 = v70;
            v38 = v25;
            v39 = __swift_project_boxed_opaque_existential_1(v68, v69);
            v64 = v36;
            v65 = *(_QWORD *)(v37 + 8);
            v40 = __swift_allocate_boxed_opaque_existential_1(&v61);
            (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v40, v39, v36);
            v41 = *(_QWORD *)&v29[v33 + 56];
            v42 = *(_QWORD *)&v29[v33 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29[v33 + 32], v41);
            v43 = *(void (**)(uint64_t, Swift::Int, uint64_t *, uint64_t, uint64_t))(v42 + 72);
            v44 = v42;
            v25 = v38;
            v43(v59, v32, &v61, v41, v44);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v61);
            sub_21501EA34((uint64_t)v68);
            v29 = *v30;
            v33 += 40;
            if (v38 == v34)
            {
              v16 = v47;
              swift_bridgeObjectRelease();
              v15 = v48;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v45 = v67;
              v12 = v51;
              v26 = v52;
              v13 = v50;
              v14 = v49;
              goto LABEL_42;
            }
          }
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        __break(1u);
        goto LABEL_52;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = 0;
LABEL_42:
      v58(v66, 0);
      if ((v45 & 1) != 0 || v59 + 1 == a3)
        goto LABEL_28;
      if (v59 + 1 < a2)
        goto LABEL_49;
      if (v59 == a3 - 1)
        goto LABEL_50;
      ++v59;
      v18 = v26;
      if (v26 == v55)
        goto LABEL_28;
    }
  }
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v12, v14, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21501EF2C(v12, v14, v13);
}

void (*sub_21508BDB4(_QWORD *a1, char *a2, uint64_t a3))(char **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0xA8uLL);
  *a1 = v7;
  v7[19] = a3;
  v7[20] = v3;
  v7[18] = a2;
  sub_21508B144(a2, a3, *v3, v3[1], v3[2], (uint64_t)(v7 + 12));
  return sub_21508BE1C;
}

void sub_21508BE1C(char **a1, char a2)
{
  char *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *a1 + 96;
  v4 = *((_QWORD *)*a1 + 19);
  v5 = *((_QWORD *)*a1 + 18);
  v6 = *((_OWORD *)*a1 + 7);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)v2 = *v3;
    *((_OWORD *)v2 + 1) = v6;
    *(_OWORD *)(v2 + 25) = *(_OWORD *)((char *)v3 + 25);
    sub_2150451E0((uint64_t)v2);
    sub_21508D0BC((uint64_t)v2, v5, v4);
    sub_215045244((uint64_t)v2);
    v7 = *((_QWORD *)v2 + 15);
    v8 = *((_QWORD *)v2 + 16);
    v9 = v2[136];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v7, v8, v9);
  }
  else
  {
    *((_OWORD *)v2 + 3) = *v3;
    *((_OWORD *)v2 + 4) = v6;
    *(_OWORD *)(v2 + 73) = *(_OWORD *)((char *)v3 + 25);
    sub_21508D0BC((uint64_t)(v2 + 48), v5, v4);
    sub_215045244((uint64_t)(v2 + 48));
  }
  free(v2);
}

void (*DataFrameProtocol.subscript.modify(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = malloc(0x58uLL);
  *a1 = v11;
  v11[9] = a5;
  v11[10] = v5;
  v11[7] = a3;
  v11[8] = a4;
  v11[6] = a2;
  DataFrameProtocol.subscript.getter(a2, a3, a4, a5, (uint64_t)v11);
  return sub_21508BF74;
}

void sub_21508BF74(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16[5];
  char v17;

  v2 = *a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v4 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = *((_BYTE *)*a1 + 40);
  v8 = (*a1)[9];
  v10 = (*a1)[7];
  v9 = (*a1)[8];
  v11 = (*a1)[6];
  v16[0] = **a1;
  v16[1] = v3;
  v16[2] = v5;
  v16[3] = v4;
  v16[4] = v6;
  v17 = v7;
  if ((a2 & 1) != 0)
  {
    v12 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v4, v6, v7);
    DataFrameProtocol.subscript.setter(v16, v11, v10, v9, v12);
    v13 = v2[3];
    v14 = v2[4];
    v15 = *((_BYTE *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v13, v14, v15);
  }
  else
  {
    DataFrameProtocol.subscript.setter(v16, v11, v10, v9, v8);
  }
  free(v2);
}

uint64_t sub_21508C090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 40);
  v7 = v4;
  if (*(_BYTE *)(v1 + 40))
  {
    if (v6 == 1 && *(_QWORD *)(v4 + 16))
    {
      v7 = *(_QWORD *)(v4 + 32);
    }
    else
    {
      sub_21508C520(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
      if ((v9 & 1) != 0)
        v7 = 0;
      else
        v7 = v8;
    }
  }
  *(_QWORD *)(a1 + 48) = v7;
  sub_21508C520(v4, v5, v6);
  if ((v11 & 1) != 0)
    v12 = 0;
  else
    v12 = v10;
  *(_QWORD *)(a1 + 56) = v12;
  return sub_2150451E0(v1);
}

uint64_t sub_21508C138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(unsigned __int8 *)(v1 + 40);
  if (!*(_BYTE *)(v1 + 40))
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_QWORD *)(a1 + 56) = v4;
    v10 = 1;
    goto LABEL_9;
  }
  if (v5 == 1 && *(_QWORD *)(v4 + 16))
  {
    v6 = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(a1 + 48) = 0;
    *(_QWORD *)(a1 + 56) = v6;
LABEL_7:
    v10 = *(_QWORD *)(v4 + 16);
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v9 = *(_QWORD *)(v7 + 16);
  if (!v9)
    goto LABEL_12;
  v10 = 0;
  v11 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v11;
  if (v5 != 2)
    goto LABEL_7;
LABEL_9:
  v12 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v14;
    return sub_215053BA4(v1);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21508C224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 40))
  {
    if (*(_BYTE *)(v1 + 40) == 1 && *(_QWORD *)(v4 + 16))
    {
      v6 = (uint64_t *)(v4 + 32);
    }
    else
    {
      result = swift_beginAccess();
      v8 = *(_QWORD *)(v5 + 16);
      if (!v8)
        goto LABEL_11;
      v6 = (uint64_t *)(v8 + 8);
    }
    v4 = *v6;
  }
  *(_QWORD *)(a1 + 48) = v4;
  result = swift_beginAccess();
  v9 = *(_QWORD *)(v5 + 16);
  if (v9)
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v9 + 8);
    return sub_215053BA4(v1);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

BOOL sub_21508C2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 40);
  v4 = v1;
  if (v3)
  {
    if (v3 == 1 && *(_QWORD *)(v1 + 16))
    {
      v4 = *(_QWORD *)(v1 + 32);
    }
    else
    {
      sub_21508C520(v1, v2, v3);
      if ((v6 & 1) != 0)
        v4 = 0;
      else
        v4 = v5;
    }
  }
  sub_21508C520(v1, v2, v3);
  if ((v8 & 1) != 0)
    v9 = 0;
  else
    v9 = v7;
  return v4 == v9;
}

uint64_t sub_21508C360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21508AF48(a1, a2, a3);
}

uint64_t sub_21508C398(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];

  v3 = a1[1];
  v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  sub_21508D810((uint64_t)&v5, a2, a3);
  return sub_215045244((uint64_t)&v5);
}

void (*sub_21508C3D0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  _OWORD *v3;
  char *v7;
  __int128 v8;

  v7 = (char *)malloc(0xD8uLL);
  *a1 = v7;
  *((_QWORD *)v7 + 25) = a3;
  *((_QWORD *)v7 + 26) = v3;
  *((_QWORD *)v7 + 24) = a2;
  v8 = v3[1];
  *(_OWORD *)v7 = *v3;
  *((_OWORD *)v7 + 1) = v8;
  *(_OWORD *)(v7 + 25) = *(_OWORD *)((char *)v3 + 25);
  sub_21508AF48(a2, a3, (uint64_t)(v7 + 144));
  return sub_21508C448;
}

void sub_21508C448(uint64_t *a1, char a2)
{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = (_OWORD *)(*a1 + 144);
  v4 = *(_QWORD *)(*a1 + 200);
  v5 = *(_QWORD *)(*a1 + 192);
  v6 = *(_OWORD *)(*a1 + 160);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)(v2 + 48) = *v3;
    *(_OWORD *)(v2 + 64) = v6;
    *(_OWORD *)(v2 + 73) = *(_OWORD *)((char *)v3 + 25);
    sub_2150451E0(v2 + 48);
    sub_21508D810(v2 + 48, v5, v4);
    sub_215045244(v2 + 48);
    v7 = *(_QWORD *)(v2 + 168);
    v8 = *(_QWORD *)(v2 + 176);
    v9 = *(_BYTE *)(v2 + 184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v7, v8, v9);
  }
  else
  {
    *(_OWORD *)(v2 + 96) = *v3;
    *(_OWORD *)(v2 + 112) = v6;
    *(_OWORD *)(v2 + 121) = *(_OWORD *)((char *)v3 + 25);
    sub_21508D810(v2 + 96, v5, v4);
    sub_215045244(v2 + 96);
  }
  free((void *)v2);
}

uint64_t sub_21508C520(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  if (a3)
  {
    if (a3 == 1 && (v3 = *(_QWORD *)(result + 16)) != 0)
      return *(_QWORD *)(result + 16 * v3 + 16);
    else
      return 0;
  }
  return result;
}

unint64_t sub_21508C560(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (result != a2)
  {
    v3 = v2;
    v5 = result;
    v6 = *(_QWORD *)v3;
    v7 = *(_QWORD *)(v3 + 8);
    v8 = *(unsigned __int8 *)(v3 + 16);
    if (!*(_BYTE *)(v3 + 16) || v8 == 1 && *(_QWORD *)(v6 + 16))
    {
      result = sub_21508C520(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
      if ((v10 & 1) != 0)
      {
LABEL_64:
        __break(1u);
        return result;
      }
      if (v9 <= v5)
        return result;
      v11 = v6;
      if (v8)
      {
        if (!*(_QWORD *)(v6 + 16))
        {
          __break(1u);
          goto LABEL_48;
        }
        v11 = *(_QWORD *)(v6 + 32);
      }
      if (v11 > a2)
        return result;
      result = sub_215075960(v5, a2, v6, v7, v8);
      if (result == v12)
        return result;
      if (v8)
      {
        if ((result & 0x8000000000000000) != 0)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v13 = *(_QWORD *)(v6 + 16);
        if (result >= v13)
        {
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        v14 = v12 - 1;
        if (!__OFSUB__(v12, 1))
        {
          if ((v14 & 0x8000000000000000) == 0)
          {
            if (v14 < v13)
            {
              v15 = *(_QWORD *)(v6 + 32 + 16 * v14 + 8);
              if (*(_QWORD *)(v6 + 32 + 16 * result) < v5)
              {
                v16 = *(_QWORD *)(v6 + 16);
                if (v15 > a2)
                {
                  if (result >= v16)
                  {
LABEL_58:
                    __break(1u);
                    goto LABEL_59;
                  }
                  v17 = v6 + 32;
                  v6 = *(_QWORD *)(v6 + 32 + 16 * result);
                  if (v6 > v5)
                  {
LABEL_59:
                    __break(1u);
                    goto LABEL_60;
                  }
                  if (v14 >= v16)
                  {
LABEL_60:
                    __break(1u);
                    goto LABEL_61;
                  }
                  v7 = *(_QWORD *)(v17 + 16 * v14 + 8);
                  goto LABEL_31;
                }
                if (result >= v16)
                {
LABEL_62:
                  __break(1u);
                  goto LABEL_63;
                }
                v6 = *(_QWORD *)(v6 + 16 * result + 32);
LABEL_41:
                if (v6 > v5)
                {
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
                v18 = v6;
                v19 = v5;
                return sub_215075CDC(result, v12, v18, v19);
              }
              if (v15 > a2)
              {
                if (v14 >= *(_QWORD *)(v6 + 16))
                {
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
                v7 = *(_QWORD *)(v6 + 16 * v14 + 40);
                goto LABEL_37;
              }
              result = sub_215043350(result, v12);
              *(_QWORD *)v3 = v6;
              *(_QWORD *)(v3 + 8) = 0;
              v20 = 1;
              goto LABEL_46;
            }
            goto LABEL_52;
          }
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
      }
      else
      {
        if (result)
        {
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (!__OFSUB__(v12, 1))
        {
          if (v12 == 1)
          {
            if (v6 < v5)
            {
              if (v7 > a2)
              {
                if (v6 > v5)
                {
LABEL_63:
                  __break(1u);
                  goto LABEL_64;
                }
LABEL_31:
                if (v7 >= a2)
                  return sub_215075B4C(result, v12, v6, v5, a2, v7);
                goto LABEL_55;
              }
              goto LABEL_41;
            }
            if (v7 > a2)
            {
LABEL_37:
              if (v7 < a2)
              {
LABEL_56:
                __break(1u);
                goto LABEL_57;
              }
              v18 = a2;
              v19 = v7;
              return sub_215075CDC(result, v12, v18, v19);
            }
            *(_QWORD *)v3 = 0;
            *(_QWORD *)(v3 + 8) = 0;
            v20 = 2;
LABEL_46:
            *(_BYTE *)(v3 + 16) = v20;
            return result;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
  }
  return result;
}

uint64_t sub_21508C7D4(uint64_t result, uint64_t a2, char a3)
{
  _QWORD *v4;
  uint64_t *v5;
  unint64_t v6;

  v4 = (_QWORD *)result;
  if (!a3)
    return sub_21508C560(result, a2);
  if (a3 == 1 && *(_QWORD *)(result + 16))
  {
    result = sub_2150437A8(result, a2, 1);
    if (v4[2])
    {
      result = sub_21508C560(v4[4], v4[5]);
      if (v4[2] == 1)
        return sub_21501EF2C((uint64_t)v4, a2, 1);
      v5 = v4 + 7;
      v6 = 1;
      while (v6 < v4[2])
      {
        ++v6;
        result = sub_21508C560(*(v5 - 1), *v5);
        v5 += 2;
        if (v6 == v4[2])
          return sub_21501EF2C((uint64_t)v4, a2, 1);
      }
    }
    __break(1u);
  }
  return result;
}

void (*sub_21508C8C0(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5))(_QWORD *a1)
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = DataFrameProtocol.subscript.modify(v10, a2, a3, a4, a5);
  return sub_215029390;
}

uint64_t DataFrameProtocol.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD v25[3];
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v9 + 24))(&v30, v6);
  v10 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (v11)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 32))(v26, a1, a2);
    v25[1] = v26[1];
    v25[2] = v26[0];
    v12 = v27;
    v13 = v28;
    v14 = v29;
    v15 = v27;
    if (v29)
    {
      if (v29 == 1 && *(_QWORD *)(v27 + 16))
      {
        v15 = *(_QWORD *)(v27 + 32);
      }
      else
      {
        sub_21508C520(v27, v28, v29);
        if ((v18 & 1) != 0)
          v15 = 0;
        else
          v15 = v17;
      }
    }
    sub_21508C520(v12, v13, v14);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v12, v13, v14);
    if ((v22 & 1) != 0)
      v23 = 0;
    else
      v23 = v20;
    v16 = v15 == v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return 1;
  }
  return v16;
}

double sub_21508CACC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  char v10;

  DataFrameProtocol.subscript.getter(*(char **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), (uint64_t)&v7);
  v4 = v8;
  v5 = v10;
  *(_OWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = v4;
  result = *(double *)&v9;
  *(_OWORD *)(a3 + 24) = v9;
  *(_BYTE *)(a3 + 40) = v5;
  return result;
}

uint64_t sub_21508CB28(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14[5];
  char v15;

  v4 = *(uint64_t *)((char *)a3 + a4 - 16);
  v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  v6 = *a3;
  v7 = a3[1];
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  v14[0] = *(_QWORD *)a1;
  v14[1] = v8;
  v14[2] = v9;
  v14[3] = v10;
  v14[4] = v11;
  v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v10, v11, v12);
  return DataFrameProtocol.subscript.setter(v14, v6, v7, v4, v5);
}

uint64_t DataFrameProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v10, a2, a4);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  if (v13 && (v13 != 1 || !*(_QWORD *)(v11 + 16)))
    sub_21508C520(v11, v12, v13);
  sub_21508C520(v6, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D70);
  sub_21508D070();
  sub_21512FC98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v6, v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 72))(v14, v15, a2, a4);
}

double sub_21508CD30@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  double result;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  char v8;

  DataFrameProtocol.subscript.getter(a1, *(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(a2 + a1 - 24), *(_QWORD *)(a2 + a1 - 16));
  *(_OWORD *)a3 = v5;
  *(_QWORD *)(a3 + 16) = v6;
  result = *(double *)&v7;
  *(_OWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 40) = v8;
  return result;
}

uint64_t sub_21508CD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a4 + a3 - 32);
  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = *(_QWORD *)(a4 + a3 - 16);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)&v14 = *(_QWORD *)a1;
  *((_QWORD *)&v14 + 1) = v8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v10, v11, v12);
  return sub_21508E0F8(&v14, a3, v5, v6, v7);
}

uint64_t DataFrameProtocol.subscript.setter(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_21508E0F8(a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a2, a4);
}

void (*DataFrameProtocol.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(__int128 **a1, char a2)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t v14;

  v13 = malloc(0x68uLL);
  *a1 = v13;
  v13[8] = a5;
  v13[9] = a6;
  v13[6] = a3;
  v13[7] = a4;
  v14 = *(_QWORD *)(a4 - 8);
  v13[10] = v6;
  v13[11] = v14;
  v13[12] = malloc(*(_QWORD *)(v14 + 64));
  (*(void (**)(void))(v14 + 16))();
  DataFrameProtocol.subscript.getter(a2, a3, a4, a5);
  return sub_21508CF34;
}

void sub_21508CF34(__int128 **a1, char a2)
{
  __int128 *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v2 = *a1;
  v4 = *((_QWORD *)*a1 + 11);
  v3 = (void *)*((_QWORD *)*a1 + 12);
  v5 = *((_QWORD *)*a1 + 7);
  v6 = *((_QWORD *)*a1 + 8);
  v7 = *((_QWORD *)*a1 + 6);
  if ((a2 & 1) != 0)
  {
    v8 = *((_QWORD *)v2 + 1);
    v9 = *((_QWORD *)v2 + 2);
    v10 = *((_QWORD *)v2 + 3);
    v15 = *((_QWORD *)*a1 + 11);
    *(_QWORD *)&v16 = *(_QWORD *)v2;
    v11 = *((_QWORD *)v2 + 4);
    *((_QWORD *)&v16 + 1) = v8;
    v17 = v9;
    v18 = v10;
    v19 = v11;
    v20 = *((_BYTE *)v2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v10, v11, v20);
    sub_21508E0F8(&v16, (uint64_t)v3, v7, v5, v6);
    (*(void (**)(void *, uint64_t))(v15 + 8))(v3, v5);
    v12 = *((_QWORD *)v2 + 3);
    v13 = *((_QWORD *)v2 + 4);
    v14 = *((_BYTE *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v12, v13, v14);
  }
  else
  {
    sub_21508E0F8(*a1, (uint64_t)v3, v7, v5, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  free(v3);
  free(v2);
}

unint64_t sub_21508D070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA81E0;
  if (!qword_254DA81E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7D70);
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0670], v1);
    atomic_store(result, (unint64_t *)&qword_254DA81E0);
  }
  return result;
}

uint64_t sub_21508D0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char **v3;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  Swift::Int v60;
  char v61;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[5];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;

  v5 = a2 == a3;
  if (a2 == a3)
    v6 = 0;
  else
    v6 = a2;
  if (a2 == a3)
    v7 = 0;
  else
    v7 = a3;
  v8 = *v3;
  v9 = v3[1];
  v65 = v3[2];
  if (!*((_QWORD *)*v3 + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_12:
    v14 = 0;
    v15 = 2;
    goto LABEL_13;
  }
  sub_21501EE90((uint64_t)(v8 + 32), (uint64_t)&v71);
  v10 = v74;
  v11 = v75;
  __swift_project_boxed_opaque_existential_1(&v71, v74);
  v12 = *(_QWORD *)(v11 + 8);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v13(v10, v12);
  sub_21501EA34((uint64_t)&v71);
  if (v14 < 0)
    goto LABEL_60;
  if (!v14)
    goto LABEL_12;
  v15 = 0;
LABEL_13:
  sub_2150437A8(0, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v14, v15);
  v71 = v6;
  v72 = v7;
  LOBYTE(v73) = 2 * v5;
  sub_2150437A8(v6, v7, 2 * v5);
  sub_21508C7D4(0, v14, v15);
  sub_21501EF2C(0, v14, v15);
  sub_21501EF2C(v6, v7, 2 * v5);
  v64 = v9;
  if (v73 == 1)
  {
    v16 = *(_QWORD *)(v71 + 16);
    sub_21501EF2C(v71, v72, 1);
    v18 = a3;
    v17 = a2;
    if (v16)
      goto LABEL_64;
  }
  else
  {
    v18 = a3;
    v17 = a2;
    if (v73 != 2)
      goto LABEL_64;
  }
  if (__OFSUB__(v18, v17))
    goto LABEL_61;
  v20 = *(_QWORD *)a1;
  v19 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 32);
  v24 = *(unsigned __int8 *)(a1 + 40);
  v25 = *(_BYTE *)(a1 + 40);
  v26 = v18 - v17;
  v27 = sub_2150EBD1C(v22, v23, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v22, v23, v24);
  v66 = v21;
  swift_bridgeObjectRelease();
  v67 = v19;
  swift_bridgeObjectRelease();
  v68 = v20;
  swift_bridgeObjectRelease();
  v59 = v23;
  sub_21501EF2C(v22, v23, v24);
  if (v26 != v27)
    goto LABEL_64;
  v28 = v22;
  if (v24)
  {
    if (v24 == 1 && *(_QWORD *)(v22 + 16))
    {
      v28 = *(_QWORD *)(v22 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_21508C520(v22, v23, v24);
      if ((v30 & 1) != 0)
      {
        sub_2150437A8(v22, v23, v24);
        v28 = 0;
      }
      else
      {
        v28 = v29;
        sub_2150437A8(v22, v23, v24);
      }
    }
  }
  sub_21508C520(v22, v23, v24);
  if ((v32 & 1) != 0)
    v33 = 0;
  else
    v33 = v31;
  v57 = v33;
  v77 = 0;
  v58 = v24;
  if (a2 != v18)
  {
    if (v18 < a2)
      goto LABEL_62;
    if (a2 >= v18)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      result = sub_2151302EC();
      __break(1u);
      return result;
    }
    if (v28 != v33)
    {
      v69 = *(_QWORD *)(v20 + 16);
      v53 = v18 - 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = a2;
      v56 = v22;
      while (1)
      {
        v71 = v68;
        v72 = v67;
        v73 = v66;
        v74 = v22;
        v75 = v59;
        v76 = v58;
        v60 = DataFrame.Rows.index(after:)(v28);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_2150437A8(v22, v59, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21501EF2C(v22, v59, v58);
        if (*((_QWORD *)v8 + 2))
        {
          sub_21501EE90((uint64_t)(v8 + 32), (uint64_t)&v71);
          v37 = v74;
          v36 = v75;
          __swift_project_boxed_opaque_existential_1(&v71, v74);
          v38 = *(_QWORD *)(v36 + 8);
          v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v40 = v39(v37, v38);
          sub_21501EA34((uint64_t)&v71);
          if (v40 < 0)
            goto LABEL_57;
          v41 = v64;
          v22 = v56;
          if (v40)
          {
            v42 = 0;
            goto LABEL_42;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          v41 = v64;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v40 = 0;
        v42 = 2;
LABEL_42:
        v44 = a3;
        v43 = a2;
        if (v69 != *((_QWORD *)v8 + 2))
          goto LABEL_64;
        v61 = v42;
        if (v69)
        {
          v54 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_21501E4D4((uint64_t)v8);
          v45 = 0;
          v46 = 0;
          while (1)
          {
            sub_21501EE90(v68 + 32 + v45, (uint64_t)&v71);
            if (v46 >= *((_QWORD *)v8 + 2))
              break;
            ++v46;
            v48 = v74;
            v47 = v75;
            v49 = __swift_project_boxed_opaque_existential_1(&v71, v74);
            v70[3] = v48;
            v70[4] = *(_QWORD *)(v47 + 8);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v70);
            (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(boxed_opaque_existential_1, v49, v48);
            v51 = *(_QWORD *)&v8[v45 + 56];
            v52 = *(_QWORD *)&v8[v45 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v8[v45 + 32], v51);
            (*(void (**)(uint64_t, Swift::Int, uint64_t *, uint64_t, uint64_t))(v52 + 72))(v35, v28, v70, v51, v52);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
            sub_21501EA34((uint64_t)&v71);
            v45 += 40;
            if (v69 == v46)
            {
              v44 = a3;
              v43 = a2;
              v41 = v64;
              v22 = v56;
              v40 = v54;
              goto LABEL_50;
            }
          }
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21501EF2C(0, v40, v61);
        *v55 = v8;
        v55[1] = v41;
        v55[2] = v65;
        if ((v77 & 1) != 0 || v35 + 1 == v44)
          goto LABEL_34;
        if (v35 + 1 < v43)
          goto LABEL_58;
        if (v35 == v53)
          goto LABEL_59;
        ++v35;
        v28 = v60;
        if (v60 == v57)
          goto LABEL_34;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_34:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21501EF2C(v22, v59, v58);
}

uint64_t sub_21508D810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;

  v5 = a2 == a3;
  if (a2 == a3)
    v6 = 0;
  else
    v6 = a2;
  if (a2 == a3)
    v7 = 0;
  else
    v7 = a3;
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v10 = *(_BYTE *)(v3 + 40);
  sub_2150437A8(v8, v9, v10);
  sub_2150437A8(v8, v9, v10);
  sub_21501EF2C(v8, v9, v10);
  v95 = v6;
  v96 = v7;
  LOBYTE(v97) = 2 * v5;
  sub_2150437A8(v6, v7, 2 * v5);
  sub_21508C7D4(v8, v9, v10);
  sub_21501EF2C(v8, v9, v10);
  sub_21501EF2C(v6, v7, 2 * v5);
  if ((2 * v5) == 1)
  {
    v11 = *(_QWORD *)(v95 + 16);
    sub_21501EF2C(v95, v96, 1);
    if (v11)
      goto LABEL_74;
  }
  else if ((2 * v5) != 2)
  {
    goto LABEL_74;
  }
  if (__OFSUB__(a3, a2))
    goto LABEL_69;
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(unsigned __int8 *)(a1 + 40);
  v18 = sub_2150EBD1C(v15, v16, *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v15, v16, v17);
  v78 = v14;
  swift_bridgeObjectRelease();
  v79 = v13;
  swift_bridgeObjectRelease();
  v80 = v12;
  swift_bridgeObjectRelease();
  v77 = v16;
  sub_21501EF2C(v15, v16, v17);
  if (a3 - a2 != v18)
  {
    while (1)
    {
LABEL_74:
      sub_2151302EC();
      __break(1u);
    }
  }
  v19 = v15;
  if (v17)
  {
    if (v17 == 1 && *(_QWORD *)(v15 + 16))
    {
      v15 = *(_QWORD *)(v15 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_21508C520(v15, v16, v17);
      if ((v21 & 1) != 0)
      {
        sub_2150437A8(v15, v16, v17);
        v15 = 0;
      }
      else
      {
        v15 = v20;
        sub_2150437A8(v19, v16, v17);
      }
    }
  }
  v71 = v19;
  v70 = v17;
  sub_21508C520(v19, v16, v17);
  if ((v23 & 1) != 0)
    v24 = 0;
  else
    v24 = v22;
  v101 = 0;
  v25 = a3;
  if (a2 == a3)
    goto LABEL_27;
  if (a3 < a2)
    goto LABEL_72;
  if (a2 >= a3)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v15 != v24)
  {
    v67 = v24;
    v27 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = a2;
    v68 = v27;
    while (1)
    {
      v29 = v25;
      v89 = v28;
      v95 = v80;
      v96 = v79;
      v97 = v78;
      v98 = v71;
      v99 = v16;
      v100 = v70;
      v69 = DataFrame.Rows.index(after:)(v15);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_2150437A8(v71, v16, v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v71, v16, v70);
      v30 = v85;
      v31 = *(char **)v85;
      if (v68 != *(_QWORD *)(*(_QWORD *)v85 + 16))
        goto LABEL_74;
      v32 = *(_QWORD *)(v85 + 24);
      v33 = *(_QWORD *)(v85 + 32);
      v34 = *(_BYTE *)(v85 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73 = v33;
      v74 = v32;
      v72 = v34;
      sub_2150437A8(v32, v33, v34);
      if (v68)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_21501E4D4((uint64_t)v31);
        v35 = 0;
        v36 = 0;
        do
        {
          sub_21501EE90(v80 + 32 + v35, (uint64_t)&v95);
          if (v36 >= *((_QWORD *)v31 + 2))
            goto LABEL_66;
          ++v36;
          v37 = v31;
          v38 = &v31[v35];
          v39 = (uint64_t)(v38 + 32);
          v40 = v98;
          v41 = v99;
          v42 = __swift_project_boxed_opaque_existential_1(&v95, v98);
          v93 = v40;
          v94 = *(_QWORD *)(v41 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v92);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(boxed_opaque_existential_1, v42, v40);
          v44 = *((_QWORD *)v38 + 7);
          v45 = *((_QWORD *)v38 + 8);
          v31 = v37;
          __swift_mutable_project_boxed_opaque_existential_1(v39, v44);
          (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v45 + 72))(v89, v15, v92, v44, v45);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v92);
          sub_21501EA34((uint64_t)&v95);
          v35 += 40;
        }
        while (v68 != v36);
        v30 = v85;
        v25 = a3;
      }
      else
      {
        v25 = v29;
      }
      v46 = a2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = sub_2150EBC3C(v74, v73, v72);
      v84 = *(_QWORD *)(v47 + 16);
      v81 = v31;
      if (!v84)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      v48 = 0;
      v49 = v30;
      v50 = *((_QWORD *)v31 + 2);
      v83 = v47 + 32;
      v91 = v31 + 32;
      v51 = *(char **)v49;
      v90 = *(_QWORD *)(v49 + 8);
      v82 = *(_QWORD *)(v49 + 16);
LABEL_42:
      v52 = *(_QWORD *)(v83 + 8 * v48);
      if (!*((_QWORD *)v51 + 2))
        break;
      sub_21501EE90((uint64_t)(v51 + 32), (uint64_t)&v95);
      v53 = v98;
      v54 = v99;
      __swift_project_boxed_opaque_existential_1(&v95, v98);
      v55 = *(_QWORD *)(v54 + 8);
      v56 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57 = v56(v53, v55);
      sub_21501EA34((uint64_t)&v95);
      if (v57 < 0)
        goto LABEL_67;
      if (!v57)
        goto LABEL_47;
      v58 = 0;
LABEL_48:
      if (v50 != *((_QWORD *)v51 + 2))
        goto LABEL_74;
      if (!v50)
        goto LABEL_41;
      if (v50 > *((_QWORD *)v31 + 2))
        goto LABEL_68;
      v86 = v58;
      v88 = v48;
      v87 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v51 = sub_21501E4D4((uint64_t)v51);
      v59 = 0;
      v60 = 0;
      do
      {
        sub_21501EE90((uint64_t)&v91[v59], (uint64_t)&v95);
        if (v60 >= *((_QWORD *)v51 + 2))
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        ++v60;
        v62 = v98;
        v61 = v99;
        v63 = __swift_project_boxed_opaque_existential_1(&v95, v98);
        v93 = v62;
        v94 = *(_QWORD *)(v61 + 8);
        v64 = __swift_allocate_boxed_opaque_existential_1(v92);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v64, v63, v62);
        v65 = *(_QWORD *)&v51[v59 + 56];
        v66 = *(_QWORD *)&v51[v59 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v51[v59 + 32], v65);
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v66 + 72))(v52, v52, v92, v65, v66);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v92);
        sub_21501EA34((uint64_t)&v95);
        v59 += 40;
      }
      while (v50 != v60);
      v31 = v81;
      v57 = v87;
      v48 = v88;
      v58 = v86;
LABEL_41:
      ++v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(0, v57, v58);
      *(_QWORD *)v85 = v51;
      *(_QWORD *)(v85 + 8) = v90;
      *(_QWORD *)(v85 + 16) = v82;
      if (v48 != v84)
        goto LABEL_42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = a2;
      v25 = a3;
LABEL_59:
      sub_21501EF2C(v74, v73, v72);
      v16 = v77;
      if ((v101 & 1) != 0 || v89 + 1 == v25)
        goto LABEL_28;
      if (v89 + 1 < v46)
        goto LABEL_70;
      if (v89 == a3 - 1)
        goto LABEL_71;
      v28 = v89 + 1;
      v15 = v69;
      if (v69 == v67)
        goto LABEL_28;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_47:
    v57 = 0;
    v58 = 2;
    goto LABEL_48;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21501EF2C(v71, v16, v70);
}

uint64_t sub_21508E0F8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 32))(&v25, a3, a5);
  v8 = v27;
  v9 = v28;
  v19 = v25;
  v20 = v26;
  v21 = v27;
  v10 = v27;
  v22 = v28;
  if (v28)
  {
    if (v28 == 1 && *(_QWORD *)(v27 + 16))
    {
      v10 = *(_QWORD *)(v27 + 32);
    }
    else
    {
      sub_21508C520(v27, *((uint64_t *)&v27 + 1), v28);
      if ((v12 & 1) != 0)
        v10 = 0;
      else
        v10 = v11;
    }
  }
  v23 = v10;
  sub_21508C520(v8, *((uint64_t *)&v8 + 1), v9);
  if ((v14 & 1) != 0)
    v15 = 0;
  else
    v15 = v13;
  v24 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D70);
  sub_21508D070();
  sub_21512FC98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v8, *((uint64_t *)&v8 + 1), v9);
  v16 = *((_QWORD *)a1 + 2);
  v17 = *((_BYTE *)a1 + 40);
  v19 = *a1;
  v20 = v16;
  v21 = *(__int128 *)((char *)a1 + 24);
  v22 = v17;
  return (*(uint64_t (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 80))(&v19, v29, v30, a3, a5);
}

uint64_t sub_21508E278()
{
  return 16;
}

__n128 sub_21508E284(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21508E298()
{
  return 32;
}

__n128 sub_21508E2A4(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of DataFrameProtocol.base.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DataFrameProtocol.columns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DataFrameProtocol.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

__n128 AnyCategoricalSummary.init<A>(_:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;

  v8 = *a1;
  v5 = a1[1].n128_u64[0];
  v6 = sub_215130298();
  swift_bridgeObjectRelease();
  result = v8;
  *a3 = v8;
  a3[1].n128_u64[0] = v5;
  a3[1].n128_u64[1] = v6;
  a3[2].n128_u64[0] = a2;
  return result;
}

__n128 AnyCategoricalSummary.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = sub_21508E4A4(a1[1].n128_i64[1]);
  swift_bridgeObjectRelease();
  result = v6;
  *a2 = v6;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u64[0] = MEMORY[0x24BEE23D0];
  return result;
}

uint64_t AnyCategoricalSummary.someCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AnyCategoricalSummary.someCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.someCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.noneCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AnyCategoricalSummary.noneCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.noneCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.totalCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  result = *v0 + v1;
  if (__OFADD__(*v0, v1))
    __break(1u);
  return result;
}

uint64_t AnyCategoricalSummary.uniqueCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AnyCategoricalSummary.uniqueCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.uniqueCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.mode.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnyCategoricalSummary.mode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*AnyCategoricalSummary.mode.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.modeType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t AnyCategoricalSummary.modeType.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.modeType.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t sub_21508E4A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_2150462B0(v4, (uint64_t)&v8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v9, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508E5C8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v2 = v9;
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      sub_21501F068(*(v4 - 1), *v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 2;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508E6EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v2 = sub_21512F740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast();
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_215038D88((char *)(v11 > 1), v12 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_21504678C(&v15, (_OWORD *)(v7 + 32 * v12 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_21508E860(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508E984(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508EAA4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508EBC4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508ECE4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508EE04(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038D88(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      v4 += 8;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038D88(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038D88((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_21504678C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508EF20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA76B0);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_215038F48(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_21504670C(v11, (uint64_t)v4, &qword_254DA76B0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038F48(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v17;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_215038F48(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_21508FBD8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21508F0D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_215038F80(0, v1, 0);
    v2 = v17;
    v4 = (char *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      sub_215046224(*((_QWORD *)v4 - 4), *((_QWORD *)v4 - 3));
      sub_2150437A8(v5, v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA76A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8210);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038F80(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_215038F80((_QWORD *)(v8 > 1), v9 + 1, 1);
        v2 = v17;
      }
      v4 += 40;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 40 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      *(_QWORD *)(v10 + 48) = v14;
      *(_QWORD *)(v10 + 56) = v15;
      *(_BYTE *)(v10 + 64) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508F23C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_215038FB8(0, v1, 0);
    v2 = v16;
    v4 = (char *)(a1 + 56);
    do
    {
      v5 = *v4;
      v10 = *((_QWORD *)v4 - 2);
      v11 = *((_QWORD *)v4 - 1);
      sub_2150437A8(v10, v11, *v4);
      sub_2150437A8(v10, v11, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7688);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8208);
      swift_dynamicCast();
      sub_21501EF2C(v10, v11, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038FB8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v16;
      }
      v7 = *(_QWORD *)(v2 + 16);
      v6 = *(_QWORD *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_215038FB8((_QWORD *)(v6 > 1), v7 + 1, 1);
        v2 = v16;
      }
      *(_QWORD *)(v2 + 16) = v7 + 1;
      v8 = v2 + 32 * v7;
      *(_BYTE *)(v8 + 32) = v12;
      v4 += 32;
      *(_QWORD *)(v8 + 40) = v13;
      *(_QWORD *)(v8 + 48) = v14;
      *(_BYTE *)(v8 + 56) = v15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508F3B8(uint64_t a1)
{
  return sub_21508F72C(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_215038FF0, &qword_254DA7670, &qword_254DA8200);
}

uint64_t sub_21508F3D4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_215039028(0, v1, 0);
    v2 = v17;
    v4 = (char *)(a1 + 56);
    do
    {
      v5 = *v4;
      v10 = *((_QWORD *)v4 - 2);
      v11 = *((_QWORD *)v4 - 1);
      sub_2150437A8(v10, v11, *v4);
      sub_2150437A8(v10, v11, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7658);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA81F8);
      swift_dynamicCast();
      sub_21501EF2C(v10, v11, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215039028(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v7 = *(_QWORD *)(v2 + 16);
      v6 = *(_QWORD *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_215039028((_QWORD *)(v6 > 1), v7 + 1, 1);
        v2 = v17;
      }
      *(_QWORD *)(v2 + 16) = v7 + 1;
      v8 = v2 + 32 * v7;
      *(_DWORD *)(v8 + 32) = v12;
      v4 += 32;
      *(_BYTE *)(v8 + 36) = v13;
      *(_QWORD *)(v8 + 40) = v14;
      *(_QWORD *)(v8 + 48) = v15;
      *(_BYTE *)(v8 + 56) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508F568(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_215039060(0, v1, 0);
    v2 = v17;
    v4 = (char *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      swift_bridgeObjectRetain();
      sub_2150437A8(v5, v6, v7);
      swift_bridgeObjectRetain();
      sub_2150437A8(v5, v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7640);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA81F0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v5, v6, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215039060(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_215039060((_QWORD *)(v8 > 1), v9 + 1, 1);
        v2 = v17;
      }
      v4 += 40;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 40 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      *(_QWORD *)(v10 + 48) = v14;
      *(_QWORD *)(v10 + 56) = v15;
      *(_BYTE *)(v10 + 64) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21508F710(uint64_t a1)
{
  return sub_21508F72C(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_215039098, &qword_254DA7628, &qword_254DA81E8);
}

uint64_t sub_21508F72C(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v23 = MEMORY[0x24BEE4AF8];
    a2(0, v4, 0);
    v5 = v23;
    v7 = (char *)(a1 + 64);
    do
    {
      v8 = *v7;
      v16 = *((_QWORD *)v7 - 2);
      v17 = *((_QWORD *)v7 - 1);
      sub_2150437A8(v16, v17, *v7);
      sub_2150437A8(v16, v17, v8);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      __swift_instantiateConcreteTypeFromMangledName(a4);
      swift_dynamicCast();
      sub_21501EF2C(v16, v17, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v23;
      }
      v10 = *(_QWORD *)(v5 + 16);
      v9 = *(_QWORD *)(v5 + 24);
      if (v10 >= v9 >> 1)
      {
        a2(v9 > 1, v10 + 1, 1);
        v5 = v23;
      }
      *(_QWORD *)(v5 + 16) = v10 + 1;
      v11 = v5 + 40 * v10;
      *(_QWORD *)(v11 + 32) = v18;
      v7 += 40;
      *(_BYTE *)(v11 + 40) = v19;
      *(_QWORD *)(v11 + 48) = v20;
      *(_QWORD *)(v11 + 56) = v21;
      *(_BYTE *)(v11 + 64) = v22;
      --v4;
    }
    while (v4);
  }
  return v5;
}

BOOL _s11TabularData21AnyCategoricalSummaryV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _BYTE v12[24];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2])
    return 0;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a1[4];
  v22 = a1[3];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8220);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
  }
  v19 = v4;
  swift_bridgeObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
  }
  sub_21504670C((uint64_t)v20, (uint64_t)v12, &qword_254DA75E8);
  sub_21504670C((uint64_t)v17, (uint64_t)&v14, &qword_254DA75E8);
  if (v13)
  {
    sub_21504670C((uint64_t)v12, (uint64_t)v11, &qword_254DA75E8);
    if (*((_QWORD *)&v15 + 1))
    {
      v9[0] = v14;
      v9[1] = v15;
      v10 = v16;
      v7 = MEMORY[0x2199DBC90](v11, v9);
      sub_215046238((uint64_t)v9);
      sub_215046238((uint64_t)v11);
      sub_215046750((uint64_t)v12, &qword_254DA75E8);
      sub_215046750((uint64_t)v17, &qword_254DA75E8);
      sub_215046750((uint64_t)v20, &qword_254DA75E8);
      if ((v7 & 1) == 0)
        return 0;
      return v6 == v5;
    }
    sub_215046238((uint64_t)v11);
  }
  else if (!*((_QWORD *)&v15 + 1))
  {
    sub_215046750((uint64_t)v12, &qword_254DA75E8);
    sub_215046750((uint64_t)v17, &qword_254DA75E8);
    sub_215046750((uint64_t)v20, &qword_254DA75E8);
    return v6 == v5;
  }
  sub_215046750((uint64_t)v12, &qword_254DA75F0);
  sub_215046750((uint64_t)v17, &qword_254DA75E8);
  sub_215046750((uint64_t)v20, &qword_254DA75E8);
  return 0;
}

uint64_t destroy for AnyCategoricalSummary()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyCategoricalSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnyCategoricalSummary(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for AnyCategoricalSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AnyCategoricalSummary()
{
  return &type metadata for AnyCategoricalSummary;
}

uint64_t sub_21508FBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Column.decoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata2;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  __int128 v99;
  unint64_t v100;
  uint64_t v101;
  __int128 v102;
  unint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  unint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;

  v89 = a6;
  v88 = a5;
  v87 = a4;
  v114 = a3;
  v86 = a1;
  v77 = a7;
  v76 = sub_2151301D8();
  v74 = *(_QWORD *)(v76 - 8);
  v10 = MEMORY[0x24BDAC7A8](v76);
  v72 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v69 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v75 = (char *)&v69 - v14;
  v85 = sub_215130064();
  v84 = *(_QWORD *)(v85 - 8);
  v15 = MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v69 - v16;
  v91 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v82 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 16);
  v19 = sub_215130064();
  v20 = *(_QWORD *)(v19 - 8);
  v78 = v19;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v69 - v22;
  v93 = v18;
  v92 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v90 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v26 = sub_215130064();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t *)((char *)&v69 - v27);
  v29 = v7[1];
  v31 = v7[2];
  v109 = *v7;
  v30 = v109;
  v110 = v29;
  v111 = v31;
  swift_bridgeObjectRetain();
  v32 = Column.count.getter(a2);
  Column.init(name:capacity:)(v30, v29, v32, v114, &v112);
  *(_QWORD *)&v106 = v30;
  *((_QWORD *)&v106 + 1) = v29;
  v107 = v31;
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, a2);
  sub_21512FE30();
  v105 = v99;
  v70 = v30;
  *(_QWORD *)&v102 = v30;
  v33 = v78;
  v71 = v29;
  *((_QWORD *)&v102 + 1) = v29;
  v103 = v31;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
  v97 = sub_2150903B0();
  v98 = a2;
  v35 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, a2);
  v36 = v97;
  sub_215130490();
  v102 = v106;
  v103 = v107;
  v104 = v108;
  v95 = v34;
  *(_QWORD *)&v99 = v34;
  *((_QWORD *)&v99 + 1) = v98;
  v100 = v36;
  v94 = v35;
  v101 = v35;
  sub_2151301A8();
  sub_215130184();
  v81 = TupleTypeMetadata2;
  v80 = v28;
  v37 = v92;
  v38 = v93;
  while (1)
  {
    while (1)
    {
      *(_QWORD *)&v106 = v95;
      *((_QWORD *)&v106 + 1) = v98;
      v107 = v97;
      *(_QWORD *)&v108 = v94;
      sub_21513019C();
      sub_215130190();
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v28, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        result = swift_bridgeObjectRelease();
        v58 = v77;
        *v77 = v112;
        *(_OWORD *)(v58 + 1) = v113;
        return result;
      }
      v45 = v114;
      v46 = *v28;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, (char *)v28 + *(int *)(TupleTypeMetadata2 + 48), v33);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v23, 1, v38) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v33);
      v39 = (uint64_t)v83;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v83, 1, 1, v45);
      v42 = type metadata accessor for Column(0, v45, v40, v41);
      Column.append(_:)(v39, v42, v43, v44);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v39, v85);
    }
    v79 = v46;
    v47 = v20;
    v48 = v33;
    v49 = v90;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v90, v23, v38);
    v50 = (uint64_t)v82;
    v51 = v96;
    sub_21512F800();
    v96 = v51;
    if (v51)
      break;
    v54 = v114;
    v55 = type metadata accessor for Column(0, v114, v52, v53);
    Column.append(_:)(v50, v55);
    v56 = v54;
    v28 = v80;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v50, v56);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v38);
    v33 = v48;
    v20 = v47;
    TupleTypeMetadata2 = v81;
  }
  v59 = v96;
  *(_QWORD *)&v106 = v96;
  MEMORY[0x2199DC41C](v96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
  v60 = v75;
  v61 = v76;
  if (swift_dynamicCast())
  {
    MEMORY[0x2199DC410](v59);
    v62 = v74;
    v63 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v64 = v73;
    v63(v73, v60, v61);
    v65 = v72;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v72, v64, v61);
    v66 = type metadata accessor for ColumnDecodingError();
    sub_215090458();
    swift_allocError();
    v67 = v71;
    *v68 = v70;
    v68[1] = v67;
    v68[2] = v79;
    v63((char *)v68 + *(int *)(v66 + 24), v65, v61);
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
  }
  (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v93);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x2199DC410](v106);
}

unint64_t sub_2150903B0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254DA7F28;
  if (!qword_254DA7F28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7F20);
    v2 = sub_21504386C();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE1BB8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254DA7F28);
  }
  return result;
}

uint64_t type metadata accessor for ColumnDecodingError()
{
  uint64_t result;

  result = qword_254DA8298;
  if (!qword_254DA8298)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_215090458()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA8228;
  if (!qword_254DA8228)
  {
    v1 = type metadata accessor for ColumnDecodingError();
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnDecodingError, v1);
    atomic_store(result, (unint64_t *)&qword_254DA8228);
  }
  return result;
}

uint64_t ColumnDecodingError.init(columnName:rowIndex:decodingError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  v7 = sub_2151301D8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

uint64_t AnyColumn.decoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v7 = v6;
  v13 = v6[3];
  v14 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v13);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 80))(v13);
  if (v15 == swift_getAssociatedTypeWitness())
  {
    sub_21504C608((uint64_t)v7, (uint64_t)v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
    v18 = type metadata accessor for Column(0, v15, v16, v17);
    swift_dynamicCast();
    v19 = v35;
    Column.decoded<A, B>(_:using:)(a1, v18, a2, a3, a4, a5, &v29);
    swift_release();
    result = swift_bridgeObjectRelease();
    if (!v19)
    {
      v32[0] = v29;
      v32[1] = v30;
      v32[2] = v31;
      v23 = type metadata accessor for Column(0, a2, v21, v22);
      Column.eraseToAnyColumn()(v23, v24, v25, a6);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21501EE90((uint64_t)v7, (uint64_t)v32);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v27 = v33;
    v26 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 8) + 80))(v27);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumn.decode<A, B>(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[40];
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29;

  v7 = v6;
  v13 = v6[3];
  v12 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v13);
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 80))(v13);
  if (v14 == swift_getAssociatedTypeWitness())
  {
    sub_21504C608((uint64_t)v7, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
    v17 = type metadata accessor for Column(0, v14, v15, v16);
    swift_dynamicCast();
    v27 = type metadata accessor for Column(0, a3, v18, v19);
    v28 = &off_24D2A4440;
    v20 = v29;
    Column.decoded<A, B>(_:using:)(a2, v17, a3, a4, a5, a6, &v26);
    swift_release();
    swift_bridgeObjectRelease();
    if (v20)
    {
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v26);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
      return sub_2150459B0(&v26, (uint64_t)v7);
    }
  }
  else
  {
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v23 = v7[3];
    v22 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v23);
    (*(void (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 80))(v23);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.decode<A, B>(_:inColumn:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;

  v9 = v8;
  v15 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_21501F2BC(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_21501E4D4(v15);
  v15 = result;
  if ((v16 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v16 < *(_QWORD *)(v15 + 16))
  {
    result = AnyColumn.decode<A, B>(_:using:)(result, a4, a5, a6, a7, a8);
    *v9 = v15;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DataFrame.decode<A, B>(_:inColumn:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  v8 = v7;
  v12 = *a2;
  v13 = a2[1];
  v14 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_21501F2BC(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v15 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_21501E4D4(v14);
  v14 = result;
  if ((v15 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v15 < *(_QWORD *)(v14 + 16))
  {
    result = AnyColumn.decode<A, B>(_:using:)(result, a3, a4, a5, a6, a7);
    *v8 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ColumnDecodingError.columnName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ColumnDecodingError.columnName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ColumnDecodingError.columnName.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t ColumnDecodingError.rowIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ColumnDecodingError.rowIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ColumnDecodingError.rowIndex.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t ColumnDecodingError.decodingError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  v4 = sub_2151301D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ColumnDecodingError.decodingError.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  v4 = sub_2151301D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ColumnDecodingError.decodingError.modify())(_QWORD)
{
  type metadata accessor for ColumnDecodingError();
  return nullsub_5;
}

uint64_t ColumnDecodingError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = sub_2151301D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2151301CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColumnDecodingError();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v9 + 24), v1);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v10 == *MEMORY[0x24BEE26D0] || v10 == *MEMORY[0x24BEE26E0])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    v11 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254DA8230) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  }
  else if (v10 == *MEMORY[0x24BEE26C8])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8238);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v14 + 48)], v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    if (v10 != *MEMORY[0x24BEE26D8])
    {
      v17 = 0;
      v18 = 0xE000000000000000;
      sub_215130178();
      sub_21512FB90();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      v16 = *(_QWORD *)(v0 + 16);
      sub_2151303B8();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      sub_2151302A4();
      v12 = v17;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v12;
    }
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v17 = 0x6D756C6F63206E49;
  v18 = 0xEB0000000027206ELL;
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v16 = *(_QWORD *)(v0 + 16);
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151301C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_21512FB90();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t *initializeBufferWithCopyOfBuffer for ColumnDecodingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2151301D8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ColumnDecodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2151301D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ColumnDecodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2151301D8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ColumnDecodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2151301D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ColumnDecodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2151301D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ColumnDecodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2151301D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnDecodingError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_215091418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2151301D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ColumnDecodingError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2150914A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2151301D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_215091514()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2151301D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of GroupSummaries.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GroupSummaries.description(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2150915A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_2150915D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_21509162C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2150916A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t sub_2150916F4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21509173C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for _GroupSummaries()
{
  JUMPOUT(0x2199DC470);
}

uint64_t sub_215091790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51[2];
  __int128 v52;

  v4 = v3;
  v6 = *v3;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_70;
  v8 = *(_QWORD *)(v7 + 8);
  v9 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  if (!v10)
  {
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v11 = *(_QWORD *)(v10 + 8);
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
    goto LABEL_65;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12)
        sub_21509B4D0(v12, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
LABEL_15:
      v18 = *(_QWORD **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18)
        goto LABEL_67;
      v19 = 0;
      while (1)
      {
        v22 = v18[1];
        if (v19 == v22)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v22)
          goto LABEL_74;
        v23 = *((unsigned __int8 *)v18 + (v19 >> 3) + 64) & (1 << (v19 & 7));
        if (v23)
        {
          v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
          if (v24 < 0)
            v24 = *v18 + 14;
          v25 = v24 >> 3;
          v27 = v25 - 1;
          v26 = v25 < 1;
          v28 = v25 + 62;
          if (!v26)
            v28 = v27;
          v29 = *(_QWORD *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFC0));
        }
        else
        {
          v29 = 0;
        }
        v30 = *v4;
        swift_beginAccess();
        v31 = *(uint64_t **)(v30 + 16);
        if (!v31)
          goto LABEL_68;
        v32 = *v31;
        v33 = v31[1];
        if (v33 >= *v31)
        {
          v44 = __OFADD__(v33, 1);
          v46 = v33 + 1;
          if (v44)
            goto LABEL_59;
          if (v32 < v46)
          {
            if (v32 + 0x4000000000000000 < 0)
              goto LABEL_63;
            if (2 * v32 <= v46)
              v32 = v46;
            else
              v32 *= 2;
          }
          sub_2150975F0((uint64_t)v31, v32, v51);
          v47 = *(_QWORD *)(v30 + 16);
          if (!v47)
            goto LABEL_69;
          if ((*(_QWORD *)(v47 + 8) & 0x8000000000000000) != 0)
            goto LABEL_61;
          MEMORY[0x2199DC578]();
          v20 = (_QWORD *)v51[0];
          v21 = v51[1];
          *(_QWORD *)(v30 + 16) = v51[0];
          *(_QWORD *)(v30 + 24) = v21;
          sub_2150989DC(v29, v23 == 0, v20);
        }
        else
        {
          if (v23)
          {
            v34 = v32 + 7;
            if (__OFADD__(v32, 7))
              goto LABEL_62;
            v35 = v31 + 8;
            if (v34 < 0)
              v34 = v32 + 14;
            v36 = v34 >> 3;
            v37 = v36 - 1;
            v26 = v36 < 1;
            v38 = v36 + 62;
            if (!v26)
              v38 = v37;
            *(uint64_t *)((char *)&v35[v33 + 8] + (v38 & 0xFFFFFFFFFFFFC0)) = v29;
            v39 = v31[1];
            v40 = v39 + 7;
            if (v39 >= 0)
              v40 = v31[1];
            v41 = v39 - (v40 & 0xFFFFFFFFFFFFFFF8);
            if (v41 >= 0)
              v42 = 1 << v41;
            else
              v42 = 0;
            *((_BYTE *)v35 + (v40 >> 3)) |= v42;
            v43 = v31[1];
            v44 = __OFADD__(v43, 1);
            v45 = v43 + 1;
            if (v44)
              goto LABEL_60;
          }
          else
          {
            v48 = v31[2];
            v44 = __OFADD__(v48, 1);
            v49 = v48 + 1;
            if (v44)
              goto LABEL_64;
            v31[2] = v49;
            v44 = __OFADD__(v33, 1);
            v45 = v33 + 1;
            if (v44)
              goto LABEL_60;
          }
          v31[1] = v45;
        }
        v18 = (_QWORD *)*v9;
        ++v19;
        if (!*v9)
          goto LABEL_67;
      }
    }
    goto LABEL_72;
  }
  swift_beginAccess();
  v15 = *v14;
  if (v15)
  {
    v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0)
        goto LABEL_66;
      if (2 * v16 <= v12)
        v16 = v12;
      else
        v16 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
    v17 = swift_allocObject();
    sub_215096600((uint64_t)v15, v16, (uint64_t *)&v52);
    *(_OWORD *)(v17 + 16) = v52;
    swift_release();
    *v4 = v17;
    goto LABEL_15;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215091B70(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v13;
  uint64_t result;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[2];
  __int128 v52;

  v2 = v1;
  v4 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(_QWORD *)v9)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if ((v7 & 0x8000000000000000) != 0 || (v10 = *(_QWORD *)(*(_QWORD *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8)
    goto LABEL_76;
  v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    v16 = *v13;
    if (!v16)
      goto LABEL_86;
    v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      if (2 * v17 <= v11)
        v17 = v6 + v8 - v7;
      else
        v17 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
    v18 = swift_allocObject();
    sub_215096600((uint64_t)v16, v17, (uint64_t *)&v52);
    *(_OWORD *)(v18 + 16) = v52;
    result = swift_release();
    *v2 = v18;
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
    goto LABEL_21;
  }
  result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11)
      result = sub_21509B4D0(v11, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
LABEL_21:
    if (v15)
    {
      v50 = (uint64_t)a1;
      sub_2150858E4((uint64_t)a1);
      v19 = v8 - 1;
      v20 = v7;
      while (1)
      {
        v21 = *(_QWORD **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_80;
        if ((int64_t)v20 >= v21[1])
          goto LABEL_87;
        v22 = *((unsigned __int8 *)v21 + (v20 >> 3) + 64) & (1 << (v20 & 7));
        if (v22)
        {
          v23 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
            goto LABEL_75;
          }
          if (v23 < 0)
            v23 = *v21 + 14;
          v24 = v23 >> 3;
          v25 = v24 - 1;
          v15 = v24 < 1;
          v26 = v24 + 62;
          if (!v15)
            v26 = v25;
          v27 = *(_QWORD *)((char *)&v21[v20 + 16] + (v26 & 0xFFFFFFFFFFFFC0));
        }
        else
        {
          v27 = 0;
        }
        v28 = *v2;
        swift_beginAccess();
        v29 = *(uint64_t **)(v28 + 16);
        if (!v29)
          goto LABEL_81;
        v30 = *v29;
        v31 = v29[1];
        if (v31 >= *v29)
        {
          v42 = __OFADD__(v31, 1);
          v44 = v31 + 1;
          if (v42)
            goto LABEL_69;
          if (v30 < v44)
          {
            if (v30 + 0x4000000000000000 < 0)
              goto LABEL_73;
            if (2 * v30 <= v44)
              v30 = v44;
            else
              v30 *= 2;
          }
          sub_2150975F0((uint64_t)v29, v30, v51);
          v45 = *(_QWORD *)(v28 + 16);
          if (!v45)
            goto LABEL_82;
          if ((*(_QWORD *)(v45 + 8) & 0x8000000000000000) != 0)
            goto LABEL_71;
          MEMORY[0x2199DC578]();
          v46 = (_QWORD *)v51[0];
          v47 = v51[1];
          *(_QWORD *)(v28 + 16) = v51[0];
          *(_QWORD *)(v28 + 24) = v47;
          sub_2150989DC(v27, v22 == 0, v46);
          if (v19 == v20)
            return sub_2150858B4(v50);
        }
        else
        {
          if (v22)
          {
            v32 = v30 + 7;
            if (__OFADD__(v30, 7))
              goto LABEL_72;
            v33 = v29 + 8;
            if (v32 < 0)
              v32 = v30 + 14;
            v34 = v32 >> 3;
            v35 = v34 - 1;
            v15 = v34 < 1;
            v36 = v34 + 62;
            if (!v15)
              v36 = v35;
            *(uint64_t *)((char *)&v33[v31 + 8] + (v36 & 0xFFFFFFFFFFFFC0)) = v27;
            v37 = v29[1];
            v38 = v37 + 7;
            if (v37 >= 0)
              v38 = v29[1];
            v39 = v37 - (v38 & 0xFFFFFFFFFFFFFFF8);
            if (v39 >= 0)
              v40 = 1 << v39;
            else
              v40 = 0;
            *((_BYTE *)v33 + (v38 >> 3)) |= v40;
            v41 = v29[1];
            v42 = __OFADD__(v41, 1);
            v43 = v41 + 1;
            if (v42)
              goto LABEL_70;
          }
          else
          {
            v48 = v29[2];
            v42 = __OFADD__(v48, 1);
            v49 = v48 + 1;
            if (v42)
              goto LABEL_74;
            v29[2] = v49;
            v42 = __OFADD__(v31, 1);
            v43 = v31 + 1;
            if (v42)
              goto LABEL_70;
          }
          v29[1] = v43;
          if (v19 == v20)
            return sub_2150858B4(v50);
        }
        if (v7 != 0x7FFFFFFFFFFFFFFFLL && (uint64_t)++v20 < (uint64_t)v8)
          continue;
        __break(1u);
        return sub_2150858B4(v50);
      }
    }
    goto LABEL_78;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215091F9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t **v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  __int128 v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  __int128 v86;
  unsigned __int8 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v77 = *(_QWORD *)a1;
  *((_QWORD *)&v77 + 1) = v3;
  v82 = *(_QWORD *)(a1 + 16);
  v5 = a1 + 24;
  v4 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(a1 + 32);
  v80 = v4;
  v78 = *(unsigned __int8 *)(a1 + 40);
  v6 = *v1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_109;
  v8 = *(_QWORD *)(v7 + 8);
  v86 = *(_OWORD *)v5;
  v87 = *(_BYTE *)(v5 + 16);
  v9 = v87;
  v10 = *((_QWORD *)&v86 + 1);
  v11 = v86;
  if (v87)
  {
    if (v87 != 1 || !*(_QWORD *)(v86 + 16))
    {
      v16 = 0;
      goto LABEL_26;
    }
    v75 = v2;
    v76 = (unint64_t *)(v86 + 16);
    v74 = v8;
    swift_bridgeObjectRetain();
    v12 = 0;
    v15 = *(_QWORD *)(v86 + 32);
    v14 = *(_QWORD *)(v86 + 40);
    v13 = v86 + 32;
  }
  else
  {
    v74 = v8;
    v75 = v2;
    v76 = (unint64_t *)(v86 + 16);
    v13 = v86 + 32;
    v12 = 1;
    v14 = *((_QWORD *)&v86 + 1);
    v15 = v86;
  }
  v17 = v82 + 16;
  swift_beginAccess();
  v18 = *(_QWORD *)(v82 + 16);
  if (!v18)
  {
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v15 < 0 || (v19 = *(_QWORD *)(v18 + 8), v19 < v15))
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v14 < 0 || v19 < v14)
    goto LABEL_99;
  v16 = v14 - v15;
  if ((v12 & 1) == 0)
  {
    v20 = v76;
    if (*v76 != 1)
    {
      v21 = (uint64_t *)(v13 + 24);
      v22 = 1;
      while (v22 < *v20)
      {
        v23 = *(v21 - 1);
        v24 = *v21;
        swift_beginAccess();
        if (!*(_QWORD *)v17)
          goto LABEL_108;
        if (v23 < 0)
          goto LABEL_98;
        v25 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v25 < v23)
          goto LABEL_98;
        if (v24 < 0 || v25 < v24)
          goto LABEL_99;
        v26 = __OFADD__(v16, v24 - v23);
        v16 += v24 - v23;
        if (v26)
          goto LABEL_101;
        ++v22;
        v20 = v76;
        v21 += 2;
        if (v22 == *v76)
          goto LABEL_24;
      }
      goto LABEL_100;
    }
LABEL_24:
    sub_21509BF88((uint64_t)&v86);
  }
  v8 = v74;
  v2 = v75;
LABEL_26:
  v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = (uint64_t **)(*v81 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    swift_beginAccess();
    v31 = *v29;
    if (!v31)
    {
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      v73 = 0;
      v72 = 128;
      goto LABEL_118;
    }
    v32 = *v31;
    if (*v31 < v27)
    {
      if (v32 + 0x4000000000000000 < 0)
      {
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
      if (2 * v32 <= v27)
        v32 = v27;
      else
        v32 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
    v33 = swift_allocObject();
    sub_215096600((uint64_t)v31, v32, (uint64_t *)&v88);
    *(_OWORD *)(v33 + 16) = v88;
    swift_release();
    *v81 = v33;
    v30 = v11;
    if (!v9)
      goto LABEL_46;
    goto LABEL_40;
  }
  swift_beginAccess();
  if (!*v29)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if (**v29 < v27)
    sub_21509B4D0(v27, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
  v30 = v11;
  if (v9)
  {
LABEL_40:
    if (v9 == 1 && *(_QWORD *)(v11 + 16))
    {
      v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      v35 = *(_QWORD *)(v82 + 16);
      if (!v35)
        goto LABEL_112;
      v34 = (uint64_t *)(v35 + 8);
    }
    v30 = *v34;
  }
LABEL_46:
  sub_215053BA4(v2);
  v36 = (_QWORD **)(v82 + 16);
  v37 = swift_beginAccess();
  v38 = *(_QWORD *)(v82 + 16);
  if (!v38)
  {
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  while (1)
  {
    if (v30 == *(_QWORD *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_21501EF2C(v80, v79, v78);
    }
    v84 = v30;
    MEMORY[0x24BDAC7A8](v37);
    v72 = (uint64_t)&v84;
    sub_2150437A8(v11, v10, v9);
    sub_2150437A8(v11, v10, v9);
    v40 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509BFB8, (uint64_t)&v71, v11, v10, v9);
    sub_21501EF2C(v11, v10, v9);
    if ((_BYTE)v9)
      break;
    if (v40)
    {
      if (v40 != 1)
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      goto LABEL_117;
    }
LABEL_59:
    if (v84 < v11)
      goto LABEL_117;
    if (v30 < 0)
      goto LABEL_113;
    v43 = *v36;
    if (!*v36)
      goto LABEL_105;
    v44 = v43[1];
    if (v30 >= v44)
      goto LABEL_113;
    v45 = sub_215099328(v30, v43, v44);
    v47 = v46;
    v88 = v77;
    v89 = v82;
    v90 = v80;
    v91 = v79;
    v92 = v78;
    v30 = sub_21509B1C0(v30);
    v48 = *v81;
    swift_beginAccess();
    v49 = *(uint64_t **)(v48 + 16);
    if (!v49)
      goto LABEL_106;
    v50 = v47 & 1;
    v51 = v89;
    v11 = v90;
    v10 = v91;
    LOBYTE(v9) = v92;
    v52 = *v49;
    v53 = v49[1];
    if (v53 >= *v49)
    {
      v26 = __OFADD__(v53, 1);
      v64 = v53 + 1;
      if (v26)
        goto LABEL_92;
      if (v52 < v64)
      {
        if (v52 + 0x4000000000000000 < 0)
          goto LABEL_97;
        if (2 * v52 <= v64)
          v52 = v64;
        else
          v52 *= 2;
      }
      sub_2150975F0((uint64_t)v49, v52, &v84);
      v65 = *(_QWORD *)(v48 + 16);
      if (!v65)
        goto LABEL_107;
      if ((*(_QWORD *)(v65 + 8) & 0x8000000000000000) != 0)
        goto LABEL_94;
      MEMORY[0x2199DC578]();
      v66 = (_QWORD *)v84;
      v67 = v85;
      *(_QWORD *)(v48 + 16) = v84;
      *(_QWORD *)(v48 + 24) = v67;
      sub_2150989DC(v45, v50, v66);
    }
    else
    {
      if (v50)
      {
        v68 = v49[2];
        v26 = __OFADD__(v68, 1);
        v69 = v68 + 1;
        if (v26)
          goto LABEL_96;
        v49[2] = v69;
      }
      else
      {
        v54 = v52 + 7;
        if (__OFADD__(v52, 7))
          goto LABEL_95;
        v55 = v49 + 8;
        if (v54 < 0)
          v54 = v52 + 14;
        v56 = v54 >> 3;
        v58 = v56 - 1;
        v57 = v56 < 1;
        v59 = v56 + 62;
        if (!v57)
          v59 = v58;
        *(uint64_t *)((char *)&v55[v53 + 8] + (v59 & 0xFFFFFFFFFFFFC0)) = v45;
        v60 = v49[1];
        v61 = v60 + 7;
        if (v60 >= 0)
          v61 = v49[1];
        v62 = v60 - (v61 & 0xFFFFFFFFFFFFFFF8);
        if (v62 >= 0)
          v63 = 1 << v62;
        else
          v63 = 0;
        *((_BYTE *)v55 + (v61 >> 3)) |= v63;
        v53 = v49[1];
      }
      v26 = __OFADD__(v53, 1);
      v39 = v53 + 1;
      if (v26)
        goto LABEL_93;
      v49[1] = v39;
    }
    v36 = (_QWORD **)(v51 + 16);
    v37 = swift_beginAccess();
    v38 = *(_QWORD *)(v51 + 16);
    if (!v38)
      goto LABEL_104;
  }
  if (v9 == 1)
  {
    v41 = *(_QWORD *)(v11 + 16);
    if (v40 == v41)
    {
      sub_21501EF2C(v11, v10, 1);
      goto LABEL_117;
    }
    if (v40 >= v41)
      goto LABEL_91;
    v42 = *(_QWORD *)(v11 + 16 * v40 + 32);
    sub_21501EF2C(v11, v10, 1);
    v11 = v42;
    goto LABEL_59;
  }
  if (v40)
  {
    v73 = 0;
    v72 = 91;
    goto LABEL_118;
  }
LABEL_117:
  v84 = 0;
  v85 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v84 = 0x6E6F697469736F70;
  v85 = 0xE900000000000020;
  v83 = v30;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v73 = 0;
  v72 = 169;
LABEL_118:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215092780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48[2];
  __int128 v49;

  v4 = v3;
  v6 = *v3;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_64;
  v8 = *(_QWORD *)(v7 + 8);
  v9 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  if (!v10)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v11 = *(_QWORD *)(v10 + 8);
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
    goto LABEL_60;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12)
        sub_21509B5C8(v12, 1, &qword_254DA8220);
LABEL_15:
      v18 = *(_QWORD **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18)
        goto LABEL_62;
      v19 = 0;
      while (1)
      {
        v23 = v18[1];
        if (v19 == v23)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v23)
          goto LABEL_68;
        if (((*((unsigned __int8 *)v18 + (v19 >> 3) + 64) >> (v19 & 7)) & 1) != 0)
        {
          v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v24 < 0)
            v24 = *v18 + 14;
          v25 = v24 >> 3;
          v27 = v25 - 1;
          v26 = v25 < 1;
          v28 = v25 + 62;
          if (!v26)
            v28 = v27;
          v29 = *(_QWORD *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFC0));
          swift_bridgeObjectRetain();
        }
        else
        {
          v29 = 0;
        }
        v30 = *v4;
        swift_beginAccess();
        v31 = *(uint64_t **)(v30 + 16);
        if (!v31)
          goto LABEL_63;
        v20 = *v31;
        v32 = v31[1];
        if (v32 >= *v31)
        {
          v42 = __OFADD__(v32, 1);
          v44 = v32 + 1;
          if (v42)
            goto LABEL_55;
          if (v20 < v44)
          {
            if (v20 + 0x4000000000000000 < 0)
              goto LABEL_58;
            if (2 * v20 <= v44)
              v20 = v44;
            else
              v20 *= 2;
          }
          sub_2150975F0((uint64_t)v31, v20, v48);
          sub_215098828(*(_QWORD **)(v30 + 16), *(_QWORD *)(v30 + 24), &qword_254DA8220);
          v21 = (_QWORD *)v48[0];
          v22 = v48[1];
          *(_QWORD *)(v30 + 16) = v48[0];
          *(_QWORD *)(v30 + 24) = v22;
          sub_215099124(v29, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v29)
          {
            v33 = v20 + 7;
            if (__OFADD__(v20, 7))
              goto LABEL_57;
            v34 = v31 + 8;
            if (v33 < 0)
              v33 = v20 + 14;
            v35 = v33 >> 3;
            v36 = v35 - 1;
            v26 = v35 < 1;
            v37 = v35 + 62;
            if (!v26)
              v37 = v36;
            *(_QWORD *)((char *)&v34[v32 + 8] + (v37 & 0xFFFFFFFFFFFFC0)) = v29;
            v38 = v32 / 8;
            v39 = v32 - (v37 & 0xFFFFFFFFFFFFFFF8);
            if (v39 >= 0)
              v40 = 1 << v39;
            else
              v40 = 0;
            *((_BYTE *)v34 + v38) |= v40;
            v41 = v31[1];
            v42 = __OFADD__(v41, 1);
            v43 = v41 + 1;
            if (v42)
              goto LABEL_56;
          }
          else
          {
            v45 = v31[2];
            v42 = __OFADD__(v45, 1);
            v46 = v45 + 1;
            if (v42)
              goto LABEL_59;
            v31[2] = v46;
            v42 = __OFADD__(v32, 1);
            v43 = v32 + 1;
            if (v42)
              goto LABEL_56;
          }
          v31[1] = v43;
        }
        v18 = (_QWORD *)*v9;
        ++v19;
        if (!*v9)
          goto LABEL_62;
      }
    }
    goto LABEL_66;
  }
  swift_beginAccess();
  v15 = *v14;
  if (v15)
  {
    v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0)
        goto LABEL_61;
      if (2 * v16 <= v12)
        v16 = v12;
      else
        v16 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7570);
    v17 = swift_allocObject();
    sub_215096FA8((uint64_t)v15, v16, (uint64_t *)&v49);
    *(_OWORD *)(v17 + 16) = v49;
    swift_release();
    *v4 = v17;
    goto LABEL_15;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215092B4C(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v13;
  uint64_t result;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  __int128 v49;

  v2 = v1;
  v4 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *a1;
  v7 = a1[1];
  v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(_QWORD *)v9)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if ((v8 & 0x8000000000000000) != 0 || (v10 = *(_QWORD *)(*(_QWORD *)v9 + 8), v10 < (uint64_t)v8))
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if ((v7 & 0x8000000000000000) != 0 || v10 < (uint64_t)v7)
    goto LABEL_71;
  v11 = v6 + v7 - v8;
  if (__OFADD__(v6, v7 - v8))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    v16 = *v13;
    if (!v16)
      goto LABEL_80;
    v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (2 * v17 <= v11)
        v17 = v6 + v7 - v8;
      else
        v17 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7570);
    v18 = swift_allocObject();
    sub_215096FA8((uint64_t)v16, v17, (uint64_t *)&v49);
    *(_OWORD *)(v18 + 16) = v49;
    result = swift_release();
    *v2 = v18;
    v15 = v7 > v8;
    if (v7 == v8)
      return result;
    goto LABEL_21;
  }
  result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11)
      result = sub_21509B5C8(v11, 1, &qword_254DA8220);
    v15 = v7 > v8;
    if (v7 == v8)
      return result;
LABEL_21:
    if (v15)
    {
      sub_2150858E4((uint64_t)a1);
      v19 = v7 - 1;
      v20 = v8;
      while (1)
      {
        v21 = *(_QWORD **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_75;
        if ((int64_t)v20 >= v21[1])
          goto LABEL_81;
        if (((*((unsigned __int8 *)v21 + (v20 >> 3) + 64) >> (v20 & 7)) & 1) != 0)
        {
          v22 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if (v22 < 0)
            v22 = *v21 + 14;
          v23 = v22 >> 3;
          v24 = v23 - 1;
          v15 = v23 < 1;
          v25 = v23 + 62;
          if (!v15)
            v25 = v24;
          v26 = *(_QWORD *)((char *)&v21[v20 + 16] + (v25 & 0xFFFFFFFFFFFFC0));
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = 0;
        }
        v27 = *v2;
        swift_beginAccess();
        v28 = *(uint64_t **)(v27 + 16);
        if (!v28)
          goto LABEL_76;
        v29 = *v28;
        v30 = v28[1];
        if (v30 >= *v28)
        {
          v40 = __OFADD__(v30, 1);
          v42 = v30 + 1;
          if (v40)
            goto LABEL_65;
          if (v29 < v42)
          {
            if (v29 + 0x4000000000000000 < 0)
              goto LABEL_68;
            if (2 * v29 <= v42)
              v29 = v42;
            else
              v29 *= 2;
          }
          sub_2150975F0((uint64_t)v28, v29, v48);
          sub_215098828(*(_QWORD **)(v27 + 16), *(_QWORD *)(v27 + 24), &qword_254DA8220);
          v43 = (_QWORD *)v48[0];
          v44 = v48[1];
          *(_QWORD *)(v27 + 16) = v48[0];
          *(_QWORD *)(v27 + 24) = v44;
          sub_215099124(v26, v43);
          swift_bridgeObjectRelease();
          if (v19 == v20)
            return sub_2150858B4((uint64_t)a1);
        }
        else
        {
          if (v26)
          {
            v31 = v29 + 7;
            if (__OFADD__(v29, 7))
              goto LABEL_67;
            v32 = v28 + 8;
            if (v31 < 0)
              v31 = v29 + 14;
            v33 = v31 >> 3;
            v34 = v33 - 1;
            v15 = v33 < 1;
            v35 = v33 + 62;
            if (!v15)
              v35 = v34;
            *(uint64_t *)((char *)&v32[v30 + 8] + (v35 & 0xFFFFFFFFFFFFC0)) = v26;
            v36 = v30 / 8;
            v37 = v30 - (v35 & 0xFFFFFFFFFFFFFFF8);
            if (v37 >= 0)
              v38 = 1 << v37;
            else
              v38 = 0;
            *((_BYTE *)v32 + v36) |= v38;
            v39 = v28[1];
            v40 = __OFADD__(v39, 1);
            v41 = v39 + 1;
            if (v40)
              goto LABEL_66;
          }
          else
          {
            v45 = v28[2];
            v40 = __OFADD__(v45, 1);
            v46 = v45 + 1;
            if (v40)
              goto LABEL_69;
            v28[2] = v46;
            v40 = __OFADD__(v30, 1);
            v41 = v30 + 1;
            if (v40)
              goto LABEL_66;
          }
          v28[1] = v41;
          if (v19 == v20)
            return sub_2150858B4((uint64_t)a1);
        }
        v47 = v20 + 1;
        if ((uint64_t)(v20 + 1) >= (uint64_t)v8)
        {
          ++v20;
          if (v47 < (uint64_t)v7)
            continue;
        }
        __break(1u);
        return sub_2150858B4((uint64_t)a1);
      }
    }
    goto LABEL_73;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215092F60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t **v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  __int128 v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  __int128 v82;
  unsigned __int8 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;

  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v73 = *(_QWORD *)a1;
  *((_QWORD *)&v73 + 1) = v3;
  v78 = *(_QWORD *)(a1 + 16);
  v5 = a1 + 24;
  v4 = *(_QWORD *)(a1 + 24);
  v75 = *(_QWORD *)(a1 + 32);
  v76 = v4;
  v74 = *(unsigned __int8 *)(a1 + 40);
  v6 = *v1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_104;
  v8 = *(_QWORD *)(v7 + 8);
  v82 = *(_OWORD *)v5;
  v83 = *(_BYTE *)(v5 + 16);
  v9 = v83;
  v10 = *((_QWORD *)&v82 + 1);
  v11 = v82;
  v71 = a1;
  if (!v83)
  {
    v70 = v8;
    v72 = (unint64_t *)(v82 + 16);
    v15 = v82 + 32;
    v12 = 1;
    v13 = *((_QWORD *)&v82 + 1);
    v14 = v82;
LABEL_8:
    v17 = v78 + 16;
    swift_beginAccess();
    v18 = *(_QWORD *)(v78 + 16);
    if (!v18)
    {
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    if (v14 < 0 || (v19 = *(_QWORD *)(v18 + 8), v19 < v14))
    {
LABEL_94:
      __break(1u);
    }
    else if ((v13 & 0x8000000000000000) == 0 && v19 >= v13)
    {
      v16 = v13 - v14;
      if ((v12 & 1) == 0)
      {
        v20 = v72;
        if (*v72 != 1)
        {
          v21 = (uint64_t *)(v15 + 24);
          v22 = 1;
          while (v22 < *v20)
          {
            v24 = *(v21 - 1);
            v23 = *v21;
            swift_beginAccess();
            if (!*(_QWORD *)v17)
              goto LABEL_103;
            if (v24 < 0)
              goto LABEL_94;
            v25 = *(_QWORD *)(*(_QWORD *)v17 + 8);
            if (v25 < v24)
              goto LABEL_94;
            if (v23 < 0 || v25 < v23)
              goto LABEL_95;
            v26 = __OFADD__(v16, v23 - v24);
            v16 += v23 - v24;
            if (v26)
              goto LABEL_97;
            ++v22;
            v20 = v72;
            v21 += 2;
            if (v22 == *v72)
              goto LABEL_24;
          }
          goto LABEL_96;
        }
LABEL_24:
        sub_21509BF88((uint64_t)&v82);
      }
      v8 = v70;
      goto LABEL_26;
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v83 == 1 && *(_QWORD *)(v82 + 16))
  {
    v72 = (unint64_t *)(v82 + 16);
    v70 = v8;
    swift_bridgeObjectRetain();
    v12 = 0;
    v14 = *(_QWORD *)(v82 + 32);
    v13 = *(_QWORD *)(v82 + 40);
    v15 = v82 + 32;
    goto LABEL_8;
  }
  v16 = 0;
LABEL_26:
  v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = (uint64_t **)(*v77 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    swift_beginAccess();
    if (!*v29)
    {
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (**v29 < v27)
      sub_21509B5C8(v27, 1, &qword_254DA8220);
  }
  else
  {
    swift_beginAccess();
    v30 = *v29;
    if (!*v29)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      v69 = 0;
      v68 = 128;
      goto LABEL_113;
    }
    v31 = *v30;
    if (*v30 < v27)
    {
      if (v31 + 0x4000000000000000 < 0)
      {
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      if (2 * v31 <= v27)
        v31 = v27;
      else
        v31 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7570);
    v32 = swift_allocObject();
    sub_215096FA8((uint64_t)v30, v31, (uint64_t *)&v84);
    *(_OWORD *)(v32 + 16) = v84;
    swift_release();
    *v77 = v32;
  }
  v33 = v11;
  if (v9)
  {
    if (v9 == 1 && *(_QWORD *)(v11 + 16))
    {
      v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      v35 = *(_QWORD *)(v78 + 16);
      if (!v35)
        goto LABEL_107;
      v34 = (uint64_t *)(v35 + 8);
    }
    v33 = *v34;
  }
  sub_215053BA4(v71);
  v36 = (_QWORD **)(v78 + 16);
  v37 = swift_beginAccess();
  v38 = *(_QWORD *)(v78 + 16);
  if (!v38)
    goto LABEL_100;
  while (1)
  {
    if (v33 == *(_QWORD *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_21501EF2C(v76, v75, v74);
    }
    v80 = v33;
    MEMORY[0x24BDAC7A8](v37);
    v68 = (uint64_t)&v80;
    sub_2150437A8(v11, v10, v9);
    sub_2150437A8(v11, v10, v9);
    v42 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v67, v11, v10, v9);
    sub_21501EF2C(v11, v10, v9);
    if ((_BYTE)v9)
      break;
    if (v42)
    {
      if (v42 != 1)
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      goto LABEL_112;
    }
LABEL_60:
    if (v80 < v11)
      goto LABEL_112;
    if (v33 < 0)
      goto LABEL_108;
    v45 = *v36;
    if (!*v36)
      goto LABEL_101;
    v46 = v45[1];
    if (v33 >= v46)
      goto LABEL_108;
    v47 = sub_2150993BC(v33, v45, v46);
    v84 = v73;
    v85 = v78;
    v86 = v76;
    v87 = v75;
    v88 = v74;
    v33 = sub_21509B1C0(v33);
    v48 = *v77;
    swift_beginAccess();
    v49 = *(uint64_t **)(v48 + 16);
    if (!v49)
      goto LABEL_102;
    v50 = v85;
    v11 = v86;
    v10 = v87;
    LOBYTE(v9) = v88;
    v39 = *v49;
    v51 = v49[1];
    if (v51 >= *v49)
    {
      v26 = __OFADD__(v51, 1);
      v63 = v51 + 1;
      if (v26)
        goto LABEL_89;
      if (v39 < v63)
      {
        if (v39 + 0x4000000000000000 < 0)
          goto LABEL_92;
        if (2 * v39 <= v63)
          v39 = v63;
        else
          v39 *= 2;
      }
      sub_2150975F0((uint64_t)v49, v39, &v80);
      sub_215098828(*(_QWORD **)(v48 + 16), *(_QWORD *)(v48 + 24), &qword_254DA8220);
      v40 = (_QWORD *)v80;
      v41 = v81;
      *(_QWORD *)(v48 + 16) = v80;
      *(_QWORD *)(v48 + 24) = v41;
      sub_215099124(v47, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v47)
      {
        v52 = v39 + 7;
        if (__OFADD__(v39, 7))
          goto LABEL_91;
        v53 = v49 + 8;
        if (v52 < 0)
          v52 = v39 + 14;
        v54 = v52 >> 3;
        v56 = v54 - 1;
        v55 = v54 < 1;
        v57 = v54 + 62;
        if (!v55)
          v57 = v56;
        *(_QWORD *)((char *)&v53[v51 + 8] + (v57 & 0xFFFFFFFFFFFFC0)) = v47;
        v58 = v51 / 8;
        v59 = v51 - (v57 & 0xFFFFFFFFFFFFFFF8);
        if (v59 >= 0)
          v60 = 1 << v59;
        else
          v60 = 0;
        *((_BYTE *)v53 + v58) |= v60;
        v61 = v49[1];
        v26 = __OFADD__(v61, 1);
        v62 = v61 + 1;
        if (v26)
          goto LABEL_90;
      }
      else
      {
        v64 = v49[2];
        v26 = __OFADD__(v64, 1);
        v65 = v64 + 1;
        if (v26)
          goto LABEL_93;
        v49[2] = v65;
        v26 = __OFADD__(v51, 1);
        v62 = v51 + 1;
        if (v26)
          goto LABEL_90;
      }
      v49[1] = v62;
    }
    v36 = (_QWORD **)(v50 + 16);
    v37 = swift_beginAccess();
    v38 = *(_QWORD *)(v50 + 16);
    if (!v38)
      goto LABEL_100;
  }
  if (v9 == 1)
  {
    v43 = *(_QWORD *)(v11 + 16);
    if (v42 == v43)
    {
      sub_21501EF2C(v11, v10, 1);
      goto LABEL_112;
    }
    if (v42 >= v43)
      goto LABEL_88;
    v44 = *(_QWORD *)(v11 + 16 * v42 + 32);
    sub_21501EF2C(v11, v10, 1);
    v11 = v44;
    goto LABEL_60;
  }
  if (v42)
  {
    v69 = 0;
    v68 = 91;
    goto LABEL_113;
  }
LABEL_112:
  v80 = 0;
  v81 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v80 = 0x6E6F697469736F70;
  v81 = 0xE900000000000020;
  v79 = v33;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v69 = 0;
  v68 = 169;
LABEL_113:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215093730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50[2];
  __int128 v51;

  v4 = v3;
  v6 = *v3;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_68;
  v8 = *(_QWORD *)(v7 + 8);
  v9 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  if (!v10)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v11 = *(_QWORD *)(v10 + 8);
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
    goto LABEL_63;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12)
        sub_21509B4D0(v12, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
LABEL_15:
      v18 = *(_QWORD **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18)
        goto LABEL_65;
      v19 = 0;
      while (1)
      {
        v22 = v18[1];
        if (v19 == v22)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v22)
          goto LABEL_72;
        v23 = *((unsigned __int8 *)v18 + (v19 >> 3) + 64) & (1 << (v19 & 7));
        if (v23)
        {
          v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          if (v24 < 0)
            v24 = *v18 + 14;
          v25 = v24 >> 3;
          v27 = v25 - 1;
          v26 = v25 < 1;
          v28 = v25 + 62;
          if (!v26)
            v28 = v27;
          v29 = *(_QWORD *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFC0));
        }
        else
        {
          v29 = 0;
        }
        v30 = *v4;
        swift_beginAccess();
        v31 = *(uint64_t **)(v30 + 16);
        if (!v31)
          goto LABEL_66;
        v32 = *v31;
        v33 = v31[1];
        if (v33 >= *v31)
        {
          v43 = __OFADD__(v33, 1);
          v45 = v33 + 1;
          if (v43)
            goto LABEL_57;
          if (v32 < v45)
          {
            if (v32 + 0x4000000000000000 < 0)
              goto LABEL_61;
            if (2 * v32 <= v45)
              v32 = v45;
            else
              v32 *= 2;
          }
          sub_2150975F0((uint64_t)v31, v32, v50);
          v46 = *(_QWORD *)(v30 + 16);
          if (!v46)
            goto LABEL_67;
          if ((*(_QWORD *)(v46 + 8) & 0x8000000000000000) != 0)
            goto LABEL_59;
          MEMORY[0x2199DC578]();
          v20 = (_QWORD *)v50[0];
          v21 = v50[1];
          *(_QWORD *)(v30 + 16) = v50[0];
          *(_QWORD *)(v30 + 24) = v21;
          sub_215098AA0(v29, v23 == 0, v20);
        }
        else
        {
          if (v23)
          {
            v34 = v32 + 7;
            if (__OFADD__(v32, 7))
              goto LABEL_60;
            v35 = v31 + 8;
            if (v34 < 0)
              v34 = v32 + 14;
            v36 = v34 >> 3;
            v37 = v36 - 1;
            v26 = v36 < 1;
            v38 = v36 + 62;
            if (!v26)
              v38 = v37;
            *(uint64_t *)((char *)&v35[v33 + 8] + (v38 & 0xFFFFFFFFFFFFC0)) = v29;
            v39 = v33 / 8;
            v40 = v33 - (v38 & 0xFFFFFFFFFFFFFFF8);
            if (v40 >= 0)
              v41 = 1 << v40;
            else
              v41 = 0;
            *((_BYTE *)v35 + v39) |= v41;
            v42 = v31[1];
            v43 = __OFADD__(v42, 1);
            v44 = v42 + 1;
            if (v43)
              goto LABEL_58;
          }
          else
          {
            v47 = v31[2];
            v43 = __OFADD__(v47, 1);
            v48 = v47 + 1;
            if (v43)
              goto LABEL_62;
            v31[2] = v48;
            v43 = __OFADD__(v33, 1);
            v44 = v33 + 1;
            if (v43)
              goto LABEL_58;
          }
          v31[1] = v44;
        }
        v18 = (_QWORD *)*v9;
        ++v19;
        if (!*v9)
          goto LABEL_65;
      }
    }
    goto LABEL_70;
  }
  swift_beginAccess();
  v15 = *v14;
  if (v15)
  {
    v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0)
        goto LABEL_64;
      if (2 * v16 <= v12)
        v16 = v12;
      else
        v16 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
    v17 = swift_allocObject();
    sub_215096790((uint64_t)v15, v16, (uint64_t *)&v51);
    *(_OWORD *)(v17 + 16) = v51;
    swift_release();
    *v4 = v17;
    goto LABEL_15;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215093B0C(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v13;
  uint64_t result;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];
  __int128 v51;

  v2 = v1;
  v4 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(_QWORD *)v9)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if ((v7 & 0x8000000000000000) != 0 || (v10 = *(_QWORD *)(*(_QWORD *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8)
    goto LABEL_74;
  v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    v16 = *v13;
    if (!v16)
      goto LABEL_84;
    v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      if (2 * v17 <= v11)
        v17 = v6 + v8 - v7;
      else
        v17 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
    v18 = swift_allocObject();
    sub_215096790((uint64_t)v16, v17, (uint64_t *)&v51);
    *(_OWORD *)(v18 + 16) = v51;
    result = swift_release();
    *v2 = v18;
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
    goto LABEL_21;
  }
  result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11)
      result = sub_21509B4D0(v11, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
LABEL_21:
    if (v15)
    {
      v49 = (uint64_t)a1;
      sub_2150858E4((uint64_t)a1);
      v19 = v8 - 1;
      v20 = v7;
      while (1)
      {
        v21 = *(_QWORD **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_78;
        if ((int64_t)v20 >= v21[1])
          goto LABEL_85;
        v22 = *((unsigned __int8 *)v21 + (v20 >> 3) + 64) & (1 << (v20 & 7));
        if (v22)
        {
          v23 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          if (v23 < 0)
            v23 = *v21 + 14;
          v24 = v23 >> 3;
          v25 = v24 - 1;
          v15 = v24 < 1;
          v26 = v24 + 62;
          if (!v15)
            v26 = v25;
          v27 = *(_QWORD *)((char *)&v21[v20 + 16] + (v26 & 0xFFFFFFFFFFFFC0));
        }
        else
        {
          v27 = 0;
        }
        v28 = *v2;
        swift_beginAccess();
        v29 = *(uint64_t **)(v28 + 16);
        if (!v29)
          goto LABEL_79;
        v30 = *v29;
        v31 = v29[1];
        if (v31 >= *v29)
        {
          v41 = __OFADD__(v31, 1);
          v43 = v31 + 1;
          if (v41)
            goto LABEL_67;
          if (v30 < v43)
          {
            if (v30 + 0x4000000000000000 < 0)
              goto LABEL_71;
            if (2 * v30 <= v43)
              v30 = v43;
            else
              v30 *= 2;
          }
          sub_2150975F0((uint64_t)v29, v30, v50);
          v44 = *(_QWORD *)(v28 + 16);
          if (!v44)
            goto LABEL_80;
          if ((*(_QWORD *)(v44 + 8) & 0x8000000000000000) != 0)
            goto LABEL_69;
          MEMORY[0x2199DC578]();
          v45 = (_QWORD *)v50[0];
          v46 = v50[1];
          *(_QWORD *)(v28 + 16) = v50[0];
          *(_QWORD *)(v28 + 24) = v46;
          sub_215098AA0(v27, v22 == 0, v45);
          if (v19 == v20)
            return sub_2150858B4(v49);
        }
        else
        {
          if (v22)
          {
            v32 = v30 + 7;
            if (__OFADD__(v30, 7))
              goto LABEL_70;
            v33 = v29 + 8;
            if (v32 < 0)
              v32 = v30 + 14;
            v34 = v32 >> 3;
            v35 = v34 - 1;
            v15 = v34 < 1;
            v36 = v34 + 62;
            if (!v15)
              v36 = v35;
            *(uint64_t *)((char *)&v33[v31 + 8] + (v36 & 0xFFFFFFFFFFFFC0)) = v27;
            v37 = v31 / 8;
            v38 = v31 - (v36 & 0xFFFFFFFFFFFFFFF8);
            if (v38 >= 0)
              v39 = 1 << v38;
            else
              v39 = 0;
            *((_BYTE *)v33 + v37) |= v39;
            v40 = v29[1];
            v41 = __OFADD__(v40, 1);
            v42 = v40 + 1;
            if (v41)
              goto LABEL_68;
          }
          else
          {
            v47 = v29[2];
            v41 = __OFADD__(v47, 1);
            v48 = v47 + 1;
            if (v41)
              goto LABEL_72;
            v29[2] = v48;
            v41 = __OFADD__(v31, 1);
            v42 = v31 + 1;
            if (v41)
              goto LABEL_68;
          }
          v29[1] = v42;
          if (v19 == v20)
            return sub_2150858B4(v49);
        }
        if (v7 != 0x7FFFFFFFFFFFFFFFLL && (uint64_t)++v20 < (uint64_t)v8)
          continue;
        __break(1u);
        return sub_2150858B4(v49);
      }
    }
    goto LABEL_76;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215093F34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t **v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t *v75;
  __int128 v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;
  unsigned __int8 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v76 = *(_QWORD *)a1;
  *((_QWORD *)&v76 + 1) = v3;
  v81 = *(_QWORD *)(a1 + 16);
  v5 = a1 + 24;
  v4 = *(_QWORD *)(a1 + 24);
  v78 = *(_QWORD *)(a1 + 32);
  v79 = v4;
  v77 = *(unsigned __int8 *)(a1 + 40);
  v6 = *v1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_107;
  v8 = *(_QWORD *)(v7 + 8);
  v85 = *(_OWORD *)v5;
  v86 = *(_BYTE *)(v5 + 16);
  v9 = v86;
  v10 = *((_QWORD *)&v85 + 1);
  v11 = v85;
  if (v86)
  {
    if (v86 != 1 || !*(_QWORD *)(v85 + 16))
    {
      v16 = 0;
      goto LABEL_26;
    }
    v74 = v2;
    v75 = (unint64_t *)(v85 + 16);
    v73 = v8;
    swift_bridgeObjectRetain();
    v12 = 0;
    v15 = *(_QWORD *)(v85 + 32);
    v14 = *(_QWORD *)(v85 + 40);
    v13 = v85 + 32;
  }
  else
  {
    v73 = v8;
    v74 = v2;
    v75 = (unint64_t *)(v85 + 16);
    v13 = v85 + 32;
    v12 = 1;
    v14 = *((_QWORD *)&v85 + 1);
    v15 = v85;
  }
  v17 = v81 + 16;
  swift_beginAccess();
  v18 = *(_QWORD *)(v81 + 16);
  if (!v18)
  {
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (v15 < 0 || (v19 = *(_QWORD *)(v18 + 8), v19 < v15))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v14 < 0 || v19 < v14)
    goto LABEL_97;
  v16 = v14 - v15;
  if ((v12 & 1) == 0)
  {
    v20 = v75;
    if (*v75 != 1)
    {
      v21 = (uint64_t *)(v13 + 24);
      v22 = 1;
      while (v22 < *v20)
      {
        v23 = *(v21 - 1);
        v24 = *v21;
        swift_beginAccess();
        if (!*(_QWORD *)v17)
          goto LABEL_106;
        if (v23 < 0)
          goto LABEL_96;
        v25 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v25 < v23)
          goto LABEL_96;
        if (v24 < 0 || v25 < v24)
          goto LABEL_97;
        v26 = __OFADD__(v16, v24 - v23);
        v16 += v24 - v23;
        if (v26)
          goto LABEL_99;
        ++v22;
        v20 = v75;
        v21 += 2;
        if (v22 == *v75)
          goto LABEL_24;
      }
      goto LABEL_98;
    }
LABEL_24:
    sub_21509BF88((uint64_t)&v85);
  }
  v8 = v73;
  v2 = v74;
LABEL_26:
  v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = (uint64_t **)(*v80 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    swift_beginAccess();
    v31 = *v29;
    if (!v31)
    {
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      v72 = 0;
      v71 = 128;
      goto LABEL_116;
    }
    v32 = *v31;
    if (*v31 < v27)
    {
      if (v32 + 0x4000000000000000 < 0)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      if (2 * v32 <= v27)
        v32 = v27;
      else
        v32 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
    v33 = swift_allocObject();
    sub_215096790((uint64_t)v31, v32, (uint64_t *)&v87);
    *(_OWORD *)(v33 + 16) = v87;
    swift_release();
    *v80 = v33;
    v30 = v11;
    if (!v9)
      goto LABEL_46;
    goto LABEL_40;
  }
  swift_beginAccess();
  if (!*v29)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  if (**v29 < v27)
    sub_21509B4D0(v27, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
  v30 = v11;
  if (v9)
  {
LABEL_40:
    if (v9 == 1 && *(_QWORD *)(v11 + 16))
    {
      v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      v35 = *(_QWORD *)(v81 + 16);
      if (!v35)
        goto LABEL_110;
      v34 = (uint64_t *)(v35 + 8);
    }
    v30 = *v34;
  }
LABEL_46:
  sub_215053BA4(v2);
  v36 = (_QWORD **)(v81 + 16);
  v37 = swift_beginAccess();
  v38 = *(_QWORD *)(v81 + 16);
  if (!v38)
  {
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  while (1)
  {
    if (v30 == *(_QWORD *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_21501EF2C(v79, v78, v77);
    }
    v83 = v30;
    MEMORY[0x24BDAC7A8](v37);
    v71 = (uint64_t)&v83;
    sub_2150437A8(v11, v10, v9);
    sub_2150437A8(v11, v10, v9);
    v40 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v70, v11, v10, v9);
    sub_21501EF2C(v11, v10, v9);
    if ((_BYTE)v9)
      break;
    if (v40)
    {
      if (v40 != 1)
      {
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      goto LABEL_115;
    }
LABEL_59:
    if (v83 < v11)
      goto LABEL_115;
    if (v30 < 0)
      goto LABEL_111;
    v43 = *v36;
    if (!*v36)
      goto LABEL_103;
    v44 = v43[1];
    if (v30 >= v44)
      goto LABEL_111;
    v45 = sub_215099328(v30, v43, v44);
    v47 = v46;
    v87 = v76;
    v88 = v81;
    v89 = v79;
    v90 = v78;
    v91 = v77;
    v30 = sub_21509B1C0(v30);
    v48 = *v80;
    swift_beginAccess();
    v49 = *(uint64_t **)(v48 + 16);
    if (!v49)
      goto LABEL_104;
    v50 = v47 & 1;
    v51 = v88;
    v11 = v89;
    v10 = v90;
    LOBYTE(v9) = v91;
    v52 = *v49;
    v53 = v49[1];
    if (v53 >= *v49)
    {
      v26 = __OFADD__(v53, 1);
      v63 = v53 + 1;
      if (v26)
        goto LABEL_90;
      if (v52 < v63)
      {
        if (v52 + 0x4000000000000000 < 0)
          goto LABEL_95;
        if (2 * v52 <= v63)
          v52 = v63;
        else
          v52 *= 2;
      }
      sub_2150975F0((uint64_t)v49, v52, &v83);
      v64 = *(_QWORD *)(v48 + 16);
      if (!v64)
        goto LABEL_105;
      if ((*(_QWORD *)(v64 + 8) & 0x8000000000000000) != 0)
        goto LABEL_92;
      MEMORY[0x2199DC578]();
      v65 = (_QWORD *)v83;
      v66 = v84;
      *(_QWORD *)(v48 + 16) = v83;
      *(_QWORD *)(v48 + 24) = v66;
      sub_215098AA0(v45, v50, v65);
    }
    else
    {
      if (v50)
      {
        v67 = v49[2];
        v26 = __OFADD__(v67, 1);
        v68 = v67 + 1;
        if (v26)
          goto LABEL_94;
        v49[2] = v68;
      }
      else
      {
        v54 = v52 + 7;
        if (__OFADD__(v52, 7))
          goto LABEL_93;
        v55 = v49 + 8;
        if (v54 < 0)
          v54 = v52 + 14;
        v56 = v54 >> 3;
        v58 = v56 - 1;
        v57 = v56 < 1;
        v59 = v56 + 62;
        if (!v57)
          v59 = v58;
        *(uint64_t *)((char *)&v55[v53 + 8] + (v59 & 0xFFFFFFFFFFFFC0)) = v45;
        v60 = v53 / 8;
        v61 = v53 - (v59 & 0xFFFFFFFFFFFFFFF8);
        if (v61 >= 0)
          v62 = 1 << v61;
        else
          v62 = 0;
        *((_BYTE *)v55 + v60) |= v62;
        v53 = v49[1];
      }
      v26 = __OFADD__(v53, 1);
      v39 = v53 + 1;
      if (v26)
        goto LABEL_91;
      v49[1] = v39;
    }
    v36 = (_QWORD **)(v51 + 16);
    v37 = swift_beginAccess();
    v38 = *(_QWORD *)(v51 + 16);
    if (!v38)
      goto LABEL_102;
  }
  if (v9 == 1)
  {
    v41 = *(_QWORD *)(v11 + 16);
    if (v40 == v41)
    {
      sub_21501EF2C(v11, v10, 1);
      goto LABEL_115;
    }
    if (v40 >= v41)
      goto LABEL_89;
    v42 = *(_QWORD *)(v11 + 16 * v40 + 32);
    sub_21501EF2C(v11, v10, 1);
    v11 = v42;
    goto LABEL_59;
  }
  if (v40)
  {
    v72 = 0;
    v71 = 91;
    goto LABEL_116;
  }
LABEL_115:
  v83 = 0;
  v84 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v83 = 0x6E6F697469736F70;
  v84 = 0xE900000000000020;
  v82 = v30;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v72 = 0;
  v71 = 169;
LABEL_116:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215094714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53[2];
  __int128 v54;

  v4 = v3;
  v6 = *v3;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_66;
  v8 = *(_QWORD *)(v7 + 8);
  v9 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a3 + 16);
  if (!v10)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v11 = *(_QWORD *)(v10 + 8);
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
    goto LABEL_62;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = (uint64_t **)(*v3 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12)
        sub_21509B3B4(v12, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8);
LABEL_15:
      v18 = *(_QWORD **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18)
        goto LABEL_64;
      v19 = 0;
      v20 = 0;
      while (1)
      {
        v24 = v18[1];
        if (v20 == v24)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v20 >= v24)
          goto LABEL_70;
        if (((*((unsigned __int8 *)v18 + (v20 >> 3) + 64) >> (v20 & 7)) & 1) != 0)
        {
          v25 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
          if (v25 < 0)
            v25 = *v18 + 14;
          v26 = v25 >> 3;
          v28 = v26 - 1;
          v27 = v26 < 1;
          v29 = v26 + 62;
          if (!v27)
            v29 = v28;
          v30 = (unint64_t)&v18[v19] + (v29 & 0xFFFFFFFFFFFFFFC0);
          v32 = *(_QWORD *)(v30 + 128);
          v31 = *(_QWORD *)(v30 + 136);
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = 0;
          v31 = 0;
        }
        v33 = *v4;
        swift_beginAccess();
        v34 = *(uint64_t **)(v33 + 16);
        if (!v34)
          goto LABEL_65;
        v21 = *v34;
        v35 = v34[1];
        if (v35 >= *v34)
        {
          v47 = __OFADD__(v35, 1);
          v49 = v35 + 1;
          if (v47)
            goto LABEL_57;
          if (v21 < v49)
          {
            if (v21 + 0x4000000000000000 < 0)
              goto LABEL_60;
            if (2 * v21 <= v49)
              v21 = v49;
            else
              v21 *= 2;
          }
          sub_2150977DC((uint64_t)v34, v21, v53);
          sub_2150983B8(*(_QWORD **)(v33 + 16));
          v22 = (_QWORD *)v53[0];
          v23 = v53[1];
          *(_QWORD *)(v33 + 16) = v53[0];
          *(_QWORD *)(v33 + 24) = v23;
          sub_215098B5C(v32, v31, v22);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v31)
          {
            v36 = v21 + 7;
            if (__OFADD__(v21, 7))
              goto LABEL_59;
            v37 = v34 + 8;
            if (v36 < 0)
              v36 = v21 + 14;
            v38 = v36 >> 3;
            v39 = v38 - 1;
            v27 = v38 < 1;
            v40 = v38 + 62;
            if (!v27)
              v40 = v39;
            v41 = (unint64_t)&v37[2 * v35] + (v40 & 0xFFFFFFFFFFFFFFC0);
            *(_QWORD *)(v41 + 64) = v32;
            *(_QWORD *)(v41 + 72) = v31;
            v42 = v34[1];
            v43 = v42 + 7;
            if (v42 >= 0)
              v43 = v34[1];
            v44 = v42 - (v43 & 0xFFFFFFFFFFFFFFF8);
            if (v44 >= 0)
              v45 = 1 << v44;
            else
              v45 = 0;
            *((_BYTE *)v37 + (v43 >> 3)) |= v45;
            v46 = v34[1];
            v47 = __OFADD__(v46, 1);
            v48 = v46 + 1;
            if (v47)
              goto LABEL_58;
          }
          else
          {
            v50 = v34[2];
            v47 = __OFADD__(v50, 1);
            v51 = v50 + 1;
            if (v47)
              goto LABEL_61;
            v34[2] = v51;
            v47 = __OFADD__(v35, 1);
            v48 = v35 + 1;
            if (v47)
              goto LABEL_58;
          }
          v34[1] = v48;
        }
        v18 = (_QWORD *)*v9;
        v19 += 2;
        ++v20;
        if (!*v9)
          goto LABEL_64;
      }
    }
    goto LABEL_68;
  }
  swift_beginAccess();
  v15 = *v14;
  if (v15)
  {
    v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0)
        goto LABEL_63;
      if (2 * v16 <= v12)
        v16 = v12;
      else
        v16 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
    v17 = swift_allocObject();
    sub_21509691C((uint64_t)v15, v16, (uint64_t *)&v54);
    *(_OWORD *)(v17 + 16) = v54;
    swift_release();
    *v3 = v17;
    goto LABEL_15;
  }
LABEL_69:
  __break(1u);
LABEL_70:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215094AF4(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v13;
  uint64_t result;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[2];
  __int128 v52;

  v2 = v1;
  v4 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(_QWORD *)v9)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((v7 & 0x8000000000000000) != 0 || (v10 = *(_QWORD *)(*(_QWORD *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8)
    goto LABEL_73;
  v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    v16 = *v13;
    if (!v16)
      goto LABEL_82;
    v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if (2 * v17 <= v11)
        v17 = v6 + v8 - v7;
      else
        v17 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
    v18 = swift_allocObject();
    sub_21509691C((uint64_t)v16, v17, (uint64_t *)&v52);
    *(_OWORD *)(v18 + 16) = v52;
    result = swift_release();
    *v2 = v18;
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
    goto LABEL_21;
  }
  result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11)
      result = sub_21509B3B4(v11, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8);
    v15 = v8 > v7;
    if (v8 == v7)
      return result;
LABEL_21:
    if (v15)
    {
      sub_2150858E4((uint64_t)a1);
      v19 = v7 + 1;
      v20 = 2 * v7;
      while (1)
      {
        v21 = *(_QWORD **)v9;
        if (!*(_QWORD *)v9)
          goto LABEL_77;
        if (v19 - 1 >= v21[1])
          goto LABEL_83;
        if (((*((unsigned __int8 *)v21 + ((unint64_t)(v19 - 1) >> 3) + 64) >> ((v19 - 1) & 7)) & 1) != 0)
        {
          v22 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
          if (v22 < 0)
            v22 = *v21 + 14;
          v23 = v22 >> 3;
          v24 = v23 - 1;
          v15 = v23 < 1;
          v25 = v23 + 62;
          if (!v15)
            v25 = v24;
          v26 = (unint64_t)&v21[v20] + (v25 & 0xFFFFFFFFFFFFFFC0);
          v28 = *(_QWORD *)(v26 + 128);
          v27 = *(_QWORD *)(v26 + 136);
          swift_bridgeObjectRetain();
        }
        else
        {
          v28 = 0;
          v27 = 0;
        }
        v29 = *v2;
        swift_beginAccess();
        v30 = *(uint64_t **)(v29 + 16);
        if (!v30)
          goto LABEL_78;
        v31 = *v30;
        v32 = v30[1];
        if (v32 >= *v30)
        {
          v44 = __OFADD__(v32, 1);
          v46 = v32 + 1;
          if (v44)
            goto LABEL_67;
          if (v31 < v46)
          {
            if (v31 + 0x4000000000000000 < 0)
              goto LABEL_70;
            if (2 * v31 <= v46)
              v31 = v46;
            else
              v31 *= 2;
          }
          sub_2150977DC((uint64_t)v30, v31, v51);
          sub_2150983B8(*(_QWORD **)(v29 + 16));
          v47 = (_QWORD *)v51[0];
          v48 = v51[1];
          *(_QWORD *)(v29 + 16) = v51[0];
          *(_QWORD *)(v29 + 24) = v48;
          sub_215098B5C(v28, v27, v47);
          swift_bridgeObjectRelease();
          if (v8 == v19)
            return sub_2150858B4((uint64_t)a1);
        }
        else
        {
          if (v27)
          {
            v33 = v31 + 7;
            if (__OFADD__(v31, 7))
              goto LABEL_69;
            v34 = v30 + 8;
            if (v33 < 0)
              v33 = v31 + 14;
            v35 = v33 >> 3;
            v36 = v35 - 1;
            v15 = v35 < 1;
            v37 = v35 + 62;
            if (!v15)
              v37 = v36;
            v38 = (unint64_t)&v34[2 * v32] + (v37 & 0xFFFFFFFFFFFFFFC0);
            *(_QWORD *)(v38 + 64) = v28;
            *(_QWORD *)(v38 + 72) = v27;
            v39 = v30[1];
            v40 = v39 + 7;
            if (v39 >= 0)
              v40 = v30[1];
            v41 = v39 - (v40 & 0xFFFFFFFFFFFFFFF8);
            if (v41 >= 0)
              v42 = 1 << v41;
            else
              v42 = 0;
            *((_BYTE *)v34 + (v40 >> 3)) |= v42;
            v43 = v30[1];
            v44 = __OFADD__(v43, 1);
            v45 = v43 + 1;
            if (v44)
              goto LABEL_68;
          }
          else
          {
            v49 = v30[2];
            v44 = __OFADD__(v49, 1);
            v50 = v49 + 1;
            if (v44)
              goto LABEL_71;
            v30[2] = v50;
            v44 = __OFADD__(v32, 1);
            v45 = v32 + 1;
            if (v44)
              goto LABEL_68;
          }
          v30[1] = v45;
          if (v8 == v19)
            return sub_2150858B4((uint64_t)a1);
        }
        if (v19 >= (uint64_t)v7)
        {
          v20 += 2;
          v15 = v19++ < (uint64_t)v8;
          if (v15)
            continue;
        }
        __break(1u);
        return sub_2150858B4((uint64_t)a1);
      }
    }
    goto LABEL_75;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_215094F18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t **v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  __int128 v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  __int128 v86;
  unsigned __int8 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v77 = *(_QWORD *)a1;
  *((_QWORD *)&v77 + 1) = v3;
  v82 = *(_QWORD *)(a1 + 16);
  v5 = a1 + 24;
  v4 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(a1 + 32);
  v80 = v4;
  v78 = *(unsigned __int8 *)(a1 + 40);
  v6 = *v1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_106;
  v8 = *(_QWORD *)(v7 + 8);
  v86 = *(_OWORD *)v5;
  v87 = *(_BYTE *)(v5 + 16);
  v9 = v87;
  v10 = *((_QWORD *)&v86 + 1);
  v11 = v86;
  v75 = a1;
  if (!v87)
  {
    v74 = v8;
    v76 = (unint64_t *)(v86 + 16);
    v15 = v86 + 32;
    v12 = 1;
    v13 = *((_QWORD *)&v86 + 1);
    v14 = v86;
LABEL_8:
    v17 = v82 + 16;
    swift_beginAccess();
    v18 = *(_QWORD *)(v82 + 16);
    if (!v18)
    {
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    if (v14 < 0 || (v19 = *(_QWORD *)(v18 + 8), v19 < v14))
    {
LABEL_96:
      __break(1u);
    }
    else if ((v13 & 0x8000000000000000) == 0 && v19 >= v13)
    {
      v16 = v13 - v14;
      if ((v12 & 1) == 0)
      {
        v20 = v76;
        if (*v76 != 1)
        {
          v21 = (uint64_t *)(v15 + 24);
          v22 = 1;
          while (v22 < *v20)
          {
            v23 = *(v21 - 1);
            v24 = *v21;
            swift_beginAccess();
            if (!*(_QWORD *)v17)
              goto LABEL_105;
            if (v23 < 0)
              goto LABEL_96;
            v25 = *(_QWORD *)(*(_QWORD *)v17 + 8);
            if (v25 < v23)
              goto LABEL_96;
            if (v24 < 0 || v25 < v24)
              goto LABEL_97;
            v26 = __OFADD__(v16, v24 - v23);
            v16 += v24 - v23;
            if (v26)
              goto LABEL_99;
            ++v22;
            v20 = v76;
            v21 += 2;
            if (v22 == *v76)
              goto LABEL_24;
          }
          goto LABEL_98;
        }
LABEL_24:
        sub_21509BF88((uint64_t)&v86);
      }
      v8 = v74;
      goto LABEL_26;
    }
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v87 == 1 && *(_QWORD *)(v86 + 16))
  {
    v76 = (unint64_t *)(v86 + 16);
    v74 = v8;
    swift_bridgeObjectRetain();
    v12 = 0;
    v14 = *(_QWORD *)(v86 + 32);
    v13 = *(_QWORD *)(v86 + 40);
    v15 = v86 + 32;
    goto LABEL_8;
  }
  v16 = 0;
LABEL_26:
  v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = (uint64_t **)(*v81 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    swift_beginAccess();
    if (!*v29)
    {
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (**v29 < v27)
      sub_21509B3B4(v27, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8);
  }
  else
  {
    swift_beginAccess();
    v30 = *v29;
    if (!v30)
    {
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      v73 = 0;
      v72 = 128;
      goto LABEL_115;
    }
    v31 = *v30;
    if (*v30 < v27)
    {
      if (v31 + 0x4000000000000000 < 0)
      {
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      if (2 * v31 <= v27)
        v31 = v27;
      else
        v31 *= 2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
    v32 = swift_allocObject();
    sub_21509691C((uint64_t)v30, v31, (uint64_t *)&v88);
    *(_OWORD *)(v32 + 16) = v88;
    swift_release();
    *v81 = v32;
  }
  v33 = v11;
  if (v9)
  {
    if (v9 == 1 && *(_QWORD *)(v11 + 16))
    {
      v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      v35 = *(_QWORD *)(v82 + 16);
      if (!v35)
        goto LABEL_109;
      v34 = (uint64_t *)(v35 + 8);
    }
    v33 = *v34;
  }
  sub_215053BA4(v75);
  v36 = (_QWORD **)(v82 + 16);
  v37 = swift_beginAccess();
  v38 = *(_QWORD *)(v82 + 16);
  if (!v38)
    goto LABEL_102;
  while (1)
  {
    if (v33 == *(_QWORD *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_21501EF2C(v80, v79, v78);
    }
    v84 = v33;
    MEMORY[0x24BDAC7A8](v37);
    v72 = (uint64_t)&v84;
    sub_2150437A8(v11, v10, v9);
    sub_2150437A8(v11, v10, v9);
    v42 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v71, v11, v10, v9);
    sub_21501EF2C(v11, v10, v9);
    if ((_BYTE)v9)
      break;
    if (v42)
    {
      if (v42 != 1)
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      goto LABEL_114;
    }
LABEL_60:
    if (v84 < v11)
      goto LABEL_114;
    if (v33 < 0)
      goto LABEL_110;
    v45 = *v36;
    if (!*v36)
      goto LABEL_103;
    v46 = v45[1];
    if (v33 >= v46)
      goto LABEL_110;
    v47 = sub_215099458(v33, v45, v46);
    v49 = v48;
    v88 = v77;
    v89 = v82;
    v90 = v80;
    v91 = v79;
    v92 = v78;
    v33 = sub_21509B1C0(v33);
    v50 = *v81;
    swift_beginAccess();
    v51 = *(uint64_t **)(v50 + 16);
    if (!v51)
      goto LABEL_104;
    v52 = v89;
    v11 = v90;
    v10 = v91;
    LOBYTE(v9) = v92;
    v39 = *v51;
    v53 = v51[1];
    if (v53 >= *v51)
    {
      v26 = __OFADD__(v53, 1);
      v67 = v53 + 1;
      if (v26)
        goto LABEL_91;
      if (v39 < v67)
      {
        if (v39 + 0x4000000000000000 < 0)
          goto LABEL_94;
        if (2 * v39 <= v67)
          v39 = v67;
        else
          v39 *= 2;
      }
      sub_2150977DC((uint64_t)v51, v39, &v84);
      sub_2150983B8(*(_QWORD **)(v50 + 16));
      v40 = (_QWORD *)v84;
      v41 = v85;
      *(_QWORD *)(v50 + 16) = v84;
      *(_QWORD *)(v50 + 24) = v41;
      sub_215098B5C(v47, v49, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v49)
      {
        v54 = v39 + 7;
        if (__OFADD__(v39, 7))
          goto LABEL_93;
        v55 = v51 + 8;
        if (v54 < 0)
          v54 = v39 + 14;
        v56 = v54 >> 3;
        v58 = v56 - 1;
        v57 = v56 < 1;
        v59 = v56 + 62;
        if (!v57)
          v59 = v58;
        v60 = (unint64_t)&v55[2 * v53] + (v59 & 0xFFFFFFFFFFFFFFC0);
        *(_QWORD *)(v60 + 64) = v47;
        *(_QWORD *)(v60 + 72) = v49;
        v61 = v51[1];
        v62 = v61 + 7;
        if (v61 >= 0)
          v62 = v51[1];
        v63 = v61 - (v62 & 0xFFFFFFFFFFFFFFF8);
        if (v63 >= 0)
          v64 = 1 << v63;
        else
          v64 = 0;
        *((_BYTE *)v55 + (v62 >> 3)) |= v64;
        v65 = v51[1];
        v26 = __OFADD__(v65, 1);
        v66 = v65 + 1;
        if (v26)
          goto LABEL_92;
      }
      else
      {
        v68 = v51[2];
        v26 = __OFADD__(v68, 1);
        v69 = v68 + 1;
        if (v26)
          goto LABEL_95;
        v51[2] = v69;
        v26 = __OFADD__(v53, 1);
        v66 = v53 + 1;
        if (v26)
          goto LABEL_92;
      }
      v51[1] = v66;
    }
    v36 = (_QWORD **)(v52 + 16);
    v37 = swift_beginAccess();
    v38 = *(_QWORD *)(v52 + 16);
    if (!v38)
      goto LABEL_102;
  }
  if (v9 == 1)
  {
    v43 = *(_QWORD *)(v11 + 16);
    if (v42 == v43)
    {
      sub_21501EF2C(v11, v10, 1);
      goto LABEL_114;
    }
    if (v42 >= v43)
      goto LABEL_90;
    v44 = *(_QWORD *)(v11 + 16 * v42 + 32);
    sub_21501EF2C(v11, v10, 1);
    v11 = v44;
    goto LABEL_60;
  }
  if (v42)
  {
    v73 = 0;
    v72 = 91;
    goto LABEL_115;
  }
LABEL_114:
  v84 = 0;
  v85 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v84 = 0x6E6F697469736F70;
  v85 = 0xE900000000000020;
  v83 = v33;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v73 = 0;
  v72 = 169;
LABEL_115:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t *sub_2150956F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *i;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38[2];
  __int128 v39;

  v2 = v1;
  v4 = *v1;
  result = (uint64_t *)swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    result = (uint64_t *)swift_beginAccess();
    v12 = *v11;
    if (!v12)
    {
LABEL_59:
      __break(1u);
      return result;
    }
    v13 = *v12;
    if (*v12 >= v9)
      goto LABEL_15;
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9)
        v13 = v9;
      else
        v13 *= 2;
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
      v14 = swift_allocObject();
      sub_215096600((uint64_t)v12, v13, (uint64_t *)&v39);
      *(_OWORD *)(v14 + 16) = v39;
      result = (uint64_t *)swift_release();
      *v2 = v14;
      if (!v8)
        return result;
LABEL_16:
      swift_bridgeObjectRetain();
      for (i = (char *)(a1 + 40); ; i += 16)
      {
        v18 = *((_QWORD *)i - 1);
        v19 = *i;
        v20 = *v2;
        swift_beginAccess();
        result = *(uint64_t **)(v20 + 16);
        if (!result)
          break;
        v21 = *result;
        v22 = result[1];
        if (v22 >= *result)
        {
          v16 = __OFADD__(v22, 1);
          v25 = v22 + 1;
          if (v16)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
          if (v21 < v25)
          {
            if (v21 + 0x4000000000000000 < 0)
              goto LABEL_52;
            if (2 * v21 <= v25)
              v21 = v25;
            else
              v21 *= 2;
          }
          sub_2150975F0((uint64_t)result, v21, v38);
          result = *(uint64_t **)(v20 + 16);
          if (!result)
            goto LABEL_56;
          if (result[1] < 0)
            goto LABEL_49;
          MEMORY[0x2199DC578]();
          v26 = (_QWORD *)v38[0];
          v27 = v38[1];
          *(_QWORD *)(v20 + 16) = v38[0];
          *(_QWORD *)(v20 + 24) = v27;
          sub_2150989DC(v18, v19, v26);
        }
        else
        {
          if ((v19 & 1) != 0)
          {
            v23 = result[2];
            v16 = __OFADD__(v23, 1);
            v24 = v23 + 1;
            if (v16)
              goto LABEL_50;
            result[2] = v24;
          }
          else
          {
            v28 = v21 + 7;
            if (__OFADD__(v21, 7))
              goto LABEL_51;
            v29 = result + 8;
            if (v28 < 0)
              v28 = v21 + 14;
            v30 = v28 >> 3;
            v32 = v30 - 1;
            v31 = v30 < 1;
            v33 = v30 + 62;
            if (!v31)
              v33 = v32;
            *(uint64_t *)((char *)&v29[v22 + 8] + (v33 & 0xFFFFFFFFFFFFC0)) = v18;
            v34 = result[1];
            v35 = v34 + 7;
            if (v34 >= 0)
              v35 = result[1];
            v36 = v34 - (v35 & 0xFFFFFFFFFFFFFFF8);
            if (v36 >= 0)
              v37 = 1 << v36;
            else
              v37 = 0;
            *((_BYTE *)v29 + (v35 >> 3)) |= v37;
            v22 = result[1];
          }
          v16 = __OFADD__(v22, 1);
          v17 = v22 + 1;
          if (v16)
            goto LABEL_48;
          result[1] = v17;
        }
        if (!--v8)
          return (uint64_t *)swift_bridgeObjectRelease();
      }
      goto LABEL_55;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  result = (uint64_t *)swift_beginAccess();
  if (!*v11)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (**v11 < v9)
    result = (uint64_t *)sub_21509B4D0(v9, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
  if (v8)
    goto LABEL_16;
  return result;
}

uint64_t *sub_2150959D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *i;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37[2];
  __int128 v38;

  v2 = v1;
  v4 = *v1;
  result = (uint64_t *)swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    result = (uint64_t *)swift_beginAccess();
    v12 = *v11;
    if (!v12)
    {
LABEL_57:
      __break(1u);
      return result;
    }
    v13 = *v12;
    if (*v12 >= v9)
      goto LABEL_15;
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9)
        v13 = v9;
      else
        v13 *= 2;
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
      v14 = swift_allocObject();
      sub_215096790((uint64_t)v12, v13, (uint64_t *)&v38);
      *(_OWORD *)(v14 + 16) = v38;
      result = (uint64_t *)swift_release();
      *v2 = v14;
      if (!v8)
        return result;
LABEL_16:
      swift_bridgeObjectRetain();
      for (i = (char *)(a1 + 40); ; i += 16)
      {
        v18 = *((_QWORD *)i - 1);
        v19 = *i;
        v20 = *v2;
        swift_beginAccess();
        result = *(uint64_t **)(v20 + 16);
        if (!result)
          break;
        v21 = *result;
        v22 = result[1];
        if (v22 >= *result)
        {
          v16 = __OFADD__(v22, 1);
          v25 = v22 + 1;
          if (v16)
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v21 < v25)
          {
            if (v21 + 0x4000000000000000 < 0)
              goto LABEL_50;
            if (2 * v21 <= v25)
              v21 = v25;
            else
              v21 *= 2;
          }
          sub_2150975F0((uint64_t)result, v21, v37);
          result = *(uint64_t **)(v20 + 16);
          if (!result)
            goto LABEL_54;
          if (result[1] < 0)
            goto LABEL_47;
          MEMORY[0x2199DC578]();
          v26 = (_QWORD *)v37[0];
          v27 = v37[1];
          *(_QWORD *)(v20 + 16) = v37[0];
          *(_QWORD *)(v20 + 24) = v27;
          sub_215098AA0(v18, v19, v26);
        }
        else
        {
          if ((v19 & 1) != 0)
          {
            v23 = result[2];
            v16 = __OFADD__(v23, 1);
            v24 = v23 + 1;
            if (v16)
              goto LABEL_48;
            result[2] = v24;
          }
          else
          {
            v28 = v21 + 7;
            if (__OFADD__(v21, 7))
              goto LABEL_49;
            v29 = result + 8;
            if (v28 < 0)
              v28 = v21 + 14;
            v30 = v28 >> 3;
            v32 = v30 - 1;
            v31 = v30 < 1;
            v33 = v30 + 62;
            if (!v31)
              v33 = v32;
            *(uint64_t *)((char *)&v29[v22 + 8] + (v33 & 0xFFFFFFFFFFFFC0)) = v18;
            v34 = v22 / 8;
            v35 = v22 - (v33 & 0xFFFFFFFFFFFFFFF8);
            if (v35 >= 0)
              v36 = 1 << v35;
            else
              v36 = 0;
            *((_BYTE *)v29 + v34) |= v36;
            v22 = result[1];
          }
          v16 = __OFADD__(v22, 1);
          v17 = v22 + 1;
          if (v16)
            goto LABEL_46;
          result[1] = v17;
        }
        if (!--v8)
          return (uint64_t *)swift_bridgeObjectRelease();
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  result = (uint64_t *)swift_beginAccess();
  if (!*v11)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (**v11 < v9)
    result = (uint64_t *)sub_21509B4D0(v9, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
  if (v8)
    goto LABEL_16;
  return result;
}

uint64_t sub_215095CB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *i;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  __int128 v42;

  v2 = v1;
  v4 = *v1;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
    goto LABEL_54;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = (uint64_t **)(*v1 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    v12 = *v11;
    if (!v12)
    {
LABEL_56:
      __break(1u);
      return result;
    }
    v13 = *v12;
    if (*v12 >= v9)
      goto LABEL_15;
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9)
        v13 = v9;
      else
        v13 *= 2;
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
      v14 = swift_allocObject();
      sub_21509691C((uint64_t)v12, v13, (uint64_t *)&v42);
      *(_OWORD *)(v14 + 16) = v42;
      result = swift_release();
      *v1 = v14;
      if (!v8)
        return result;
LABEL_16:
      swift_bridgeObjectRetain();
      for (i = (uint64_t *)(a1 + 40); ; i += 2)
      {
        v19 = *(i - 1);
        v18 = *i;
        v20 = *v2;
        result = swift_beginAccess();
        v21 = *(uint64_t **)(v20 + 16);
        if (!v21)
          break;
        v23 = *v21;
        v22 = v21[1];
        if (v22 >= *v21)
        {
          v36 = __OFADD__(v22, 1);
          v38 = v22 + 1;
          if (v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v23 < v38)
          {
            if (v23 + 0x4000000000000000 < 0)
              goto LABEL_49;
            if (2 * v23 <= v38)
              v23 = v38;
            else
              v23 *= 2;
          }
          swift_bridgeObjectRetain();
          sub_2150977DC((uint64_t)v21, v23, v41);
          sub_2150983B8(*(_QWORD **)(v20 + 16));
          v16 = (_QWORD *)v41[0];
          v17 = v41[1];
          *(_QWORD *)(v20 + 16) = v41[0];
          *(_QWORD *)(v20 + 24) = v17;
          sub_215098B5C(v19, v18, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v18)
          {
            v24 = v23 + 7;
            if (__OFADD__(v23, 7))
              goto LABEL_48;
            v25 = v21 + 8;
            if (v24 < 0)
              v24 = v23 + 14;
            v26 = v24 >> 3;
            v28 = v26 - 1;
            v27 = v26 < 1;
            v29 = v26 + 62;
            if (!v27)
              v29 = v28;
            v30 = (unint64_t)&v25[2 * v22] + (v29 & 0xFFFFFFFFFFFFFFC0);
            *(_QWORD *)(v30 + 64) = v19;
            *(_QWORD *)(v30 + 72) = v18;
            v31 = v21[1];
            v32 = v31 + 7;
            if (v31 >= 0)
              v32 = v21[1];
            v33 = v31 - (v32 & 0xFFFFFFFFFFFFFFF8);
            if (v33 >= 0)
              v34 = 1 << v33;
            else
              v34 = 0;
            *((_BYTE *)v25 + (v32 >> 3)) |= v34;
            v35 = v21[1];
            v36 = __OFADD__(v35, 1);
            v37 = v35 + 1;
            if (v36)
              goto LABEL_47;
          }
          else
          {
            v39 = v21[2];
            v36 = __OFADD__(v39, 1);
            v40 = v39 + 1;
            if (v36)
              goto LABEL_50;
            v21[2] = v40;
            v36 = __OFADD__(v22, 1);
            v37 = v22 + 1;
            if (v36)
              goto LABEL_47;
          }
          v21[1] = v37;
          swift_bridgeObjectRetain();
        }
        if (!--v8)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  result = swift_beginAccess();
  if (!*v11)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (**v11 < v9)
    result = sub_21509B3B4(v9, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8);
  if (v8)
    goto LABEL_16;
  return result;
}

uint64_t sub_215095FB4(uint64_t a1)
{
  return sub_215096310(a1, &qword_254DA7708, &qword_254DA7700);
}

uint64_t sub_215095FC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *i;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  __int128 v42;

  v2 = v1;
  v4 = *v1;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
    goto LABEL_52;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = (uint64_t **)(*v1 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    v12 = *v11;
    if (!v12)
    {
LABEL_54:
      __break(1u);
      return result;
    }
    v13 = *v12;
    if (*v12 >= v9)
      goto LABEL_15;
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9)
        v13 = v9;
      else
        v13 *= 2;
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7720);
      v14 = swift_allocObject();
      sub_215096DE0((uint64_t)v12, v13, (uint64_t *)&v42);
      *(_OWORD *)(v14 + 16) = v42;
      result = swift_release();
      *v1 = v14;
      if (!v8)
        return result;
LABEL_16:
      swift_bridgeObjectRetain();
      for (i = (uint64_t *)(a1 + 48); ; i += 3)
      {
        v19 = *(i - 2);
        v18 = *(i - 1);
        v20 = *i;
        v21 = *v2;
        result = swift_beginAccess();
        v22 = *(uint64_t **)(v21 + 16);
        if (!v22)
          break;
        v24 = *v22;
        v23 = v22[1];
        if (v23 >= *v22)
        {
          v36 = __OFADD__(v23, 1);
          v38 = v23 + 1;
          if (v36)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
          if (v24 < v38)
          {
            if (v24 + 0x4000000000000000 < 0)
              goto LABEL_47;
            if (2 * v24 <= v38)
              v24 = v38;
            else
              v24 *= 2;
          }
          sub_2150462EC(v19);
          sub_215097FD8((uint64_t)v22, v24, v41);
          sub_215098740(*(_QWORD **)(v21 + 16));
          v16 = (_QWORD *)v41[0];
          v17 = v41[1];
          *(_QWORD *)(v21 + 16) = v41[0];
          *(_QWORD *)(v21 + 24) = v17;
          sub_215099060(v19, v18, v20, v16);
          sub_215046324(v19);
        }
        else
        {
          if (v19)
          {
            v25 = v24 + 7;
            if (__OFADD__(v24, 7))
              goto LABEL_46;
            v26 = v22 + 8;
            if (v25 < 0)
              v25 = v24 + 14;
            v27 = v25 >> 3;
            v29 = v27 - 1;
            v28 = v27 < 1;
            v30 = v27 + 62;
            if (!v28)
              v30 = v29;
            v31 = (unint64_t)&v26[3 * v23] + (v30 & 0xFFFFFFFFFFFFFFC0);
            *(_QWORD *)(v31 + 64) = v19;
            *(_QWORD *)(v31 + 72) = v18;
            *(_QWORD *)(v31 + 80) = v20;
            v32 = v23 / 8;
            v33 = v23 - (v31 & 0xFFFFFFFFFFFFFFF8);
            if (v33 >= 0)
              v34 = 1 << v33;
            else
              v34 = 0;
            *((_BYTE *)v26 + v32) |= v34;
            v35 = v22[1];
            v36 = __OFADD__(v35, 1);
            v37 = v35 + 1;
            if (v36)
              goto LABEL_45;
          }
          else
          {
            v39 = v22[2];
            v36 = __OFADD__(v39, 1);
            v40 = v39 + 1;
            if (v36)
              goto LABEL_48;
            v22[2] = v40;
            v36 = __OFADD__(v23, 1);
            v37 = v23 + 1;
            if (v36)
              goto LABEL_45;
          }
          v22[1] = v37;
          sub_2150462EC(v19);
        }
        if (!--v8)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_51;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  result = swift_beginAccess();
  if (!*v11)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (**v11 < v9)
    result = sub_21509B3B4(v9, 1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097FD8, (void (*)(_QWORD, _QWORD))sub_215098740);
  if (v8)
    goto LABEL_16;
  return result;
}

uint64_t sub_2150962E8(uint64_t a1)
{
  return sub_215096310(a1, &qword_254DA7738, &qword_254DA7E08);
}

uint64_t sub_2150962FC(uint64_t a1)
{
  return sub_215096310(a1, &qword_254DA7740, &qword_254DA7E00);
}

uint64_t sub_215096310(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t **v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];
  __int128 v43;

  v6 = v3;
  v8 = *v3;
  result = swift_beginAccess();
  v10 = *(_QWORD *)(v8 + 16);
  if (!v10)
    goto LABEL_52;
  v11 = *(_QWORD *)(v10 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = (uint64_t **)(*v6 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    v16 = *v15;
    if (!v16)
    {
LABEL_54:
      __break(1u);
      return result;
    }
    v17 = *v16;
    if (*v16 >= v13)
      goto LABEL_15;
    if (v17 + 0x4000000000000000 >= 0)
    {
      if (2 * v17 <= v13)
        v17 = v13;
      else
        v17 *= 2;
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v18 = swift_allocObject();
      sub_215096FA8((uint64_t)v16, v17, (uint64_t *)&v43);
      *(_OWORD *)(v18 + 16) = v43;
      result = swift_release();
      *v6 = v18;
      if (!v12)
        return result;
LABEL_16:
      swift_bridgeObjectRetain();
      v19 = 0;
      while (1)
      {
        v22 = *(_QWORD *)(a1 + 8 * v19 + 32);
        v23 = *v6;
        result = swift_beginAccess();
        v24 = *(uint64_t **)(v23 + 16);
        if (!v24)
          goto LABEL_51;
        v26 = *v24;
        v25 = v24[1];
        if (v25 >= *v24)
        {
          v37 = __OFADD__(v25, 1);
          v39 = v25 + 1;
          if (v37)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
          if (v26 < v39)
          {
            if (v26 + 0x4000000000000000 < 0)
              goto LABEL_47;
            if (2 * v26 <= v39)
              v26 = v39;
            else
              v26 *= 2;
          }
          swift_bridgeObjectRetain();
          sub_2150975F0((uint64_t)v24, v26, v42);
          sub_215098828(*(_QWORD **)(v23 + 16), *(_QWORD *)(v23 + 24), a3);
          v20 = (_QWORD *)v42[0];
          v21 = v42[1];
          *(_QWORD *)(v23 + 16) = v42[0];
          *(_QWORD *)(v23 + 24) = v21;
          sub_215099124(v22, v20);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v22)
          {
            v27 = v26 + 7;
            if (__OFADD__(v26, 7))
              goto LABEL_46;
            v28 = v24 + 8;
            if (v27 < 0)
              v27 = v26 + 14;
            v29 = v27 >> 3;
            v31 = v29 - 1;
            v30 = v29 < 1;
            v32 = v29 + 62;
            if (!v30)
              v32 = v31;
            *(uint64_t *)((char *)&v28[v25 + 8] + (v32 & 0xFFFFFFFFFFFFC0)) = v22;
            v33 = v25 / 8;
            v34 = v25 - (v32 & 0xFFFFFFFFFFFFFFF8);
            if (v34 >= 0)
              v35 = 1 << v34;
            else
              v35 = 0;
            *((_BYTE *)v28 + v33) |= v35;
            v36 = v24[1];
            v37 = __OFADD__(v36, 1);
            v38 = v36 + 1;
            if (v37)
              goto LABEL_45;
          }
          else
          {
            v40 = v24[2];
            v37 = __OFADD__(v40, 1);
            v41 = v40 + 1;
            if (v37)
              goto LABEL_48;
            v24[2] = v41;
            v37 = __OFADD__(v25, 1);
            v38 = v25 + 1;
            if (v37)
              goto LABEL_45;
          }
          v24[1] = v38;
          swift_bridgeObjectRetain();
        }
        if (v12 == ++v19)
          return swift_bridgeObjectRelease();
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  result = swift_beginAccess();
  if (!*v15)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (**v15 < v13)
    result = sub_21509B5C8(v13, 1, a3);
  if (v12)
    goto LABEL_16;
  return result;
}

void sub_215096600(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t i;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (char *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    for (i = 0; i != v25; ++i)
    {
      if (((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7)) & 1) != 0)
        *(_QWORD *)(v17 + v12 + 8 * i) = *(_QWORD *)&v19[8 * i + v24];
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_215096790(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t i;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (char *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    for (i = 0; i != v25; ++i)
    {
      if (((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7)) & 1) != 0)
        *(_QWORD *)(v17 + v12 + 8 * i) = *(_QWORD *)&v19[8 * i + v24];
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_21509691C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;

  if (!a1)
    goto LABEL_32;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_26;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15)
    goto LABEL_27;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  if (v16 < 0)
    v16 = *(_QWORD *)a1 + 14;
  v19 = v16 >> 3;
  v20 = v19 - 1;
  v21 = v19 + 62;
  if (v20 >= 0)
    v21 = v20;
  v22 = v21 & 0xFFFFFFFFFFFFFFC0;
  v23 = (v21 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v23);
  if ((uint64_t)(v11 - v22) < 0)
    goto LABEL_30;
  if (v11 != v22)
    bzero((void *)(v18 + v23), v11 - v22);
  v24 = *(_QWORD *)(v17 + 8);
  if (v24 < 0)
    goto LABEL_31;
  if (v24)
  {
    v25 = 0;
    v26 = (uint64_t *)(v22 + a1 + 136);
    v27 = (_QWORD *)(v11 + v17 + 136);
    do
    {
      if (((*(unsigned __int8 *)(v18 + (v25 >> 3)) >> (v25 & 7)) & 1) != 0)
      {
        v28 = *v26;
        *(v27 - 1) = *(v26 - 1);
        *v27 = v28;
        swift_bridgeObjectRetain();
      }
      ++v25;
      v26 += 2;
      v27 += 2;
    }
    while (v24 != v25);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_215096AB4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;

  if (!a1)
    goto LABEL_31;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_25;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (v8)
    v11 = v10;
  else
    v11 = v9;
  v12 = sub_21512F740();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = v14 * a2;
  if ((unsigned __int128)(v14 * (__int128)a2) >> 64 != (v14 * a2) >> 63)
    goto LABEL_26;
  v16 = v11 & 0xFFFFFFFFFFFFFFC0;
  v17 = (v11 & 0xFFFFFFFFFFFFFFC0) + 128;
  v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v19 = v12;
  v20 = swift_slowAlloc();
  v21 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v20 = a2;
  *(_OWORD *)(v20 + 8) = v21;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
  v22 = v20;
  v35 = a3;
  v23 = v20 + 64;
  v24 = (*(_QWORD *)a1 + 7) / 8;
  v25 = v24 - 1;
  v26 = v24 + 62;
  if (v25 >= 0)
    v26 = v25;
  v27 = v26 & 0xFFFFFFFFFFFFFFC0;
  v28 = (v26 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v20 + 64), (const void *)(a1 + 64), v28);
  if ((uint64_t)(v16 - v27) < 0)
    goto LABEL_29;
  v34 = v18;
  if (v16 != v27)
    bzero((void *)(v23 + v28), v16 - v27);
  v29 = *(_QWORD *)(v22 + 8);
  if (v29 < 0)
    goto LABEL_30;
  if (v29)
  {
    v30 = 0;
    v31 = a1 + v27;
    v32 = v22 + v16;
    v33 = 128;
    do
    {
      if (((*(unsigned __int8 *)(v23 + (v30 >> 3)) >> (v30 & 7)) & 1) != 0)
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v32 + v33, v31 + v33, v19);
      ++v30;
      v33 += v14;
    }
    while (v29 != v30);
  }
  *v35 = v22;
  v35[1] = v22 + v34;
}

void sub_215096C70(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t i;

  if (!a1)
    goto LABEL_28;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + a2;
  if (__OFADD__(v12, a2))
    goto LABEL_24;
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (const void *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_26;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_27;
  if (v25)
  {
    for (i = 0; i != v25; ++i)
    {
      if (((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7)) & 1) != 0)
        *(_BYTE *)(v17 + v12 + i) = *((_BYTE *)v19 + v24 + i);
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_215096DE0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  if (!a1)
    goto LABEL_32;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_26;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  v11 = 24 * a2;
  if ((unsigned __int128)(a2 * (__int128)24) >> 64 != (24 * a2) >> 63)
    goto LABEL_27;
  v12 = v10 & 0xFFFFFFFFFFFFFFC0;
  v13 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v15 = swift_slowAlloc();
  v16 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v15 = a2;
  *(_OWORD *)(v15 + 8) = v16;
  v17 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  v18 = v15;
  v19 = v15 + 64;
  if (v17 < 0)
    v17 = *(_QWORD *)a1 + 14;
  v20 = v17 >> 3;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v15 + 64), (const void *)(a1 + 64), v24);
  if ((uint64_t)(v12 - v23) < 0)
    goto LABEL_30;
  if (v12 != v23)
    bzero((void *)(v19 + v24), v12 - v23);
  v25 = *(_QWORD *)(v18 + 8);
  if (v25 < 0)
    goto LABEL_31;
  if (v25)
  {
    v26 = 0;
    v27 = (_QWORD *)(v12 + v18 + 144);
    v28 = (_QWORD *)(v23 + a1 + 144);
    do
    {
      if (((*(unsigned __int8 *)(v19 + (v26 >> 3)) >> (v26 & 7)) & 1) != 0)
      {
        v29 = *v28;
        *((_OWORD *)v27 - 1) = *((_OWORD *)v28 - 1);
        *v27 = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      ++v26;
      v27 += 3;
      v28 += 3;
    }
    while (v25 != v26);
  }
  *a3 = v18;
  a3[1] = v18 + v14;
}

void sub_215096FA8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (char *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    v26 = 0;
    v27 = v17 + v12;
    v28 = &v19[v24];
    do
    {
      if (((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7)) & 1) != 0)
      {
        *(_QWORD *)(v27 + 8 * v26) = *(_QWORD *)&v28[8 * v26];
        swift_bridgeObjectRetain();
      }
      ++v26;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_215097138(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t i;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 4 * a2;
  if (__OFADD__(v12, 4 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (char *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    for (i = 0; i != v25; ++i)
    {
      if (((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7)) & 1) != 0)
        *(_DWORD *)(v17 + v12 + 4 * i) = *(_DWORD *)&v19[4 * i + v24];
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_2150972C4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  __int128 v29;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (char *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    v26 = 0;
    v27 = v17 + v12;
    v28 = &v19[v24];
    do
    {
      if (((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7)) & 1) != 0)
      {
        v29 = *(_OWORD *)&v28[16 * v26];
        *(_OWORD *)(v27 + 16 * v26) = v29;
        sub_21501F068(v29, *((unint64_t *)&v29 + 1));
      }
      ++v26;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_21509745C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!a1)
    goto LABEL_30;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 != 31)
    goto LABEL_25;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 32 * a2;
  if (__OFADD__(v12, 32 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v14 + 64;
  v19 = (const void *)(a1 + 64);
  v20 = v16 / 8;
  v21 = v20 - 1;
  v22 = v20 + 62;
  if (v21 >= 0)
    v22 = v21;
  v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0)
    goto LABEL_28;
  if (v11 != v23)
    bzero((void *)(v18 + v24), v11 - v23);
  v25 = *(_QWORD *)(v17 + 8);
  if (v25 < 0)
    goto LABEL_29;
  if (v25)
  {
    v26 = 0;
    v27 = v17 + v12;
    v28 = (uint64_t)v19 + v24;
    do
    {
      if (((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7)) & 1) != 0)
        sub_21504679C(v28, v27);
      ++v26;
      v28 += 32;
      v27 += 32;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_2150975F0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  if (!a1)
    goto LABEL_37;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_31;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v14;
  v27 = a3;
  v18 = v14 + 64;
  v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0)
    v19 = v16 / 8 - 1;
  v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0)
    goto LABEL_34;
  if (v11 != v20)
    bzero((void *)(v18 + v21), v11 - v20);
  v22 = *(_QWORD *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      v23 = 0;
      v24 = 0;
      v25 = v17 + v12;
      v26 = a1 + v20;
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v25 != a1 + 64 + v21 || v25 + v23 >= v26 + v23 + 136))
        {
          *(_QWORD *)(v25 + 8 * v24) = *(_QWORD *)(v26 + 8 * v24 + 128);
        }
        ++v24;
        v23 += 8;
      }
      while (v22 != v24);
    }
    if (!v21)
      goto LABEL_28;
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v17 + 8);
      *v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2150977DC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  uint64_t *v26;

  if (!a1)
    goto LABEL_37;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15)
    goto LABEL_31;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v14;
  v26 = a3;
  v18 = v14 + 64;
  v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0)
    v19 = v16 / 8 - 1;
  v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0)
    goto LABEL_34;
  if (v11 != v20)
    bzero((void *)(v18 + v21), v11 - v20);
  v22 = *(_QWORD *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      v23 = 0;
      v24 = v20 + a1 + 144;
      v25 = (_OWORD *)(v17 + v12);
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)) & 1) != 0
          && (v17 + v12 != a1 + 64 + v21 || (unint64_t)v25 >= v24))
        {
          *v25 = *(_OWORD *)(v24 - 16);
        }
        ++v23;
        v24 += 16;
        ++v25;
      }
      while (v22 != v23);
    }
    if (!v21)
      goto LABEL_28;
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v17 + 8);
      *v26 = v17;
      v26[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2150979C4(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;

  if (!a1)
    goto LABEL_50;
  if (*a1 > a2)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (v8)
    v11 = v10;
  else
    v11 = v9;
  v12 = *(_QWORD *)(*(_QWORD *)(sub_21512F740() - 8) + 72);
  v13 = v12 * a2;
  if ((unsigned __int128)(v12 * (__int128)a2) >> 64 != (v12 * a2) >> 63)
    goto LABEL_44;
  v14 = v11 & 0xFFFFFFFFFFFFFFC0;
  if (!__OFADD__(v14 + 128, v13))
  {
    v36 = v14 + 128 + v13;
    v37 = a3;
    v15 = swift_slowAlloc();
    v16 = *(_OWORD *)(a1 + 1);
    *(_QWORD *)v15 = a2;
    *(_OWORD *)(v15 + 8) = v16;
    v17 = *a1 + 7;
    v18 = __OFADD__(*a1, 7);
    if (__OFADD__(*a1, 7))
      goto LABEL_46;
    v19 = v15;
    v20 = v14 + 128;
    v21 = v15 + 64;
    v38 = a1;
    v22 = (char *)(a1 + 8);
    v23 = v17 / 8 + 62;
    if (v17 / 8 - 1 >= 0)
      v23 = v17 / 8 - 1;
    v24 = v23 & 0xFFFFFFFFFFFFFFC0;
    v25 = (v23 & 0xFFFFFFFFFFFFFFC0) + 64;
    v39 = v22;
    memcpy((void *)(v15 + 64), v22, v25);
    if ((uint64_t)(v14 - v24) < 0)
      goto LABEL_47;
    if (v14 != v24)
      bzero((void *)(v21 + v25), v14 - v24);
    v26 = *(_QWORD *)(v19 + 8);
    if (v26 < 0)
      goto LABEL_48;
    if (v26)
    {
      v27 = 0;
      v28 = (char *)(v19 + v20);
      v29 = &v39[v25];
      v30 = v28;
      v31 = v29;
      do
      {
        if (((*(unsigned __int8 *)(v21 + (v27 >> 3)) >> (v27 & 7)) & 1) != 0)
        {
          if (v28 < v29 || v30 >= &v31[v12])
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v28 != v29)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ++v27;
        v31 += v12;
        v30 += v12;
      }
      while (v26 != v27);
      v32 = v38;
      v17 = *v38 + 7;
      if (!__OFADD__(*v38, 7))
        goto LABEL_34;
    }
    else
    {
      v32 = v38;
      if (!v18)
      {
LABEL_34:
        v34 = v17 / 8 + 62;
        if (v17 / 8 >= 1)
          v34 = v17 / 8 - 1;
        v35 = v34 & 0xFFFFFFFFFFFFFFC0;
        if (v35 == -64)
          goto LABEL_39;
        if (v17 >= -503)
        {
          bzero(v39, v35 + 64);
LABEL_39:
          v32[2] = *(_QWORD *)(v19 + 8);
          *v37 = v19;
          v37[1] = v19 + v36;
          return;
        }
        goto LABEL_49;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_215097C2C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BYTE *v25;
  unint64_t v26;
  uint64_t *v27;

  if (!a1)
    goto LABEL_35;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_29;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + a2;
  if (__OFADD__(v12, a2))
    goto LABEL_30;
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v17 = v14;
  v27 = a3;
  v18 = v14 + 64;
  v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0)
    v19 = v16 / 8 - 1;
  v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0)
    goto LABEL_32;
  if (v11 != v20)
    bzero((void *)(v18 + v21), v11 - v20);
  v22 = *(_QWORD *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      v23 = 0;
      v24 = v17 + v12;
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)) & 1) != 0)
        {
          v25 = (_BYTE *)(v24 + v23);
          v26 = a1 + v20 + v23;
          if (v24 != a1 + 64 + v21 || (unint64_t)v25 >= v26 + 129)
            *v25 = *(_BYTE *)(v26 + 128);
        }
        ++v23;
      }
      while (v22 != v23);
    }
    if (!v21)
      goto LABEL_27;
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_27:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v17 + 8);
      *v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_215097DF0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  if (!a1)
    goto LABEL_37;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3)
    goto LABEL_31;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 4 * a2;
  if (__OFADD__(v12, 4 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v14;
  v27 = a3;
  v18 = v14 + 64;
  v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0)
    v19 = v16 / 8 - 1;
  v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0)
    goto LABEL_34;
  if (v11 != v20)
    bzero((void *)(v18 + v21), v11 - v20);
  v22 = *(_QWORD *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      v23 = 0;
      v24 = 0;
      v25 = v17 + v12;
      v26 = a1 + v20;
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v25 != a1 + 64 + v21 || v25 + v23 >= v26 + v23 + 132))
        {
          *(_DWORD *)(v25 + 4 * v24) = *(_DWORD *)(v26 + 4 * v24 + 128);
        }
        ++v24;
        v23 += 4;
      }
      while (v22 != v24);
    }
    if (!v21)
      goto LABEL_28;
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v17 + 8);
      *v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_215097FD8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  uint64_t *v28;

  if (!a1)
    goto LABEL_37;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  v11 = 24 * a2;
  if ((unsigned __int128)(a2 * (__int128)24) >> 64 != (24 * a2) >> 63)
    goto LABEL_31;
  v12 = v10 & 0xFFFFFFFFFFFFFFC0;
  v13 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v15 = swift_slowAlloc();
  v16 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v15 = a2;
  *(_OWORD *)(v15 + 8) = v16;
  v17 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v18 = v15;
  v28 = a3;
  v19 = v15 + 64;
  v20 = v17 / 8 + 62;
  if (v17 / 8 - 1 >= 0)
    v20 = v17 / 8 - 1;
  v21 = v20 & 0xFFFFFFFFFFFFFFC0;
  v22 = (v20 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v15 + 64), (const void *)(a1 + 64), v22);
  if ((uint64_t)(v12 - v21) < 0)
    goto LABEL_34;
  if (v12 != v21)
    bzero((void *)(v19 + v22), v12 - v21);
  v23 = *(_QWORD *)(v18 + 8);
  if ((v23 & 0x8000000000000000) == 0)
  {
    if (v23)
    {
      v24 = 0;
      v25 = v21 + a1 + 152;
      v26 = v18 + v13;
      do
      {
        if (((*(unsigned __int8 *)(v19 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v18 + v13 != a1 + 64 + v22 || v26 >= v25))
        {
          v27 = *(_OWORD *)(v25 - 24);
          *(_QWORD *)(v26 + 16) = *(_QWORD *)(v25 - 8);
          *(_OWORD *)v26 = v27;
        }
        ++v24;
        v25 += 24;
        v26 += 24;
      }
      while (v23 != v24);
    }
    if (!v22)
      goto LABEL_28;
    if (v17 >= -503)
    {
      bzero((void *)(a1 + 64), v22);
LABEL_28:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v18 + 8);
      *v28 = v18;
      v28[1] = v18 + v14;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2150981C8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;

  if (!a1)
    goto LABEL_37;
  if (*(_QWORD *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0)
    v6 = a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 != 31)
    goto LABEL_31;
  v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  v13 = v12 + 32 * a2;
  if (__OFADD__(v12, 32 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v14 = swift_slowAlloc();
  v15 = *(_OWORD *)(a1 + 8);
  *(_QWORD *)v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  v16 = *(_QWORD *)a1 + 7;
  if (__OFADD__(*(_QWORD *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v14;
  v27 = a3;
  v18 = v14 + 64;
  v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0)
    v19 = v16 / 8 - 1;
  v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0)
    goto LABEL_34;
  if (v11 != v20)
    bzero((void *)(v18 + v21), v11 - v20);
  v22 = *(_QWORD *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      v23 = 0;
      v24 = v20 + a1 + 160;
      v25 = (_OWORD *)(v17 + v12);
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)) & 1) != 0
          && (v17 + v12 != a1 + 64 + v21 || (unint64_t)v25 >= v24))
        {
          v26 = *(_OWORD *)(v24 - 16);
          *v25 = *(_OWORD *)(v24 - 32);
          v25[1] = v26;
        }
        ++v23;
        v24 += 32;
        v25 += 2;
      }
      while (v22 != v23);
    }
    if (!v21)
      goto LABEL_28;
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(v17 + 8);
      *v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2150983AC(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA8220);
}

void sub_2150983B8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a1)
  {
    v1 = a1 + 8;
    v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0)
        v2 = *a1 + 14;
      v3 = v2 >> 3;
      v5 = v3 - 1;
      v4 = v3 < 1;
      v6 = v3 + 62;
      if (!v4)
        v6 = v5;
      v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          v8 = 0;
          v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)) & 1) != 0)
              swift_arrayDestroy();
            ++v8;
            v9 += 16;
          }
          while (v7 != v8);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

void sub_21509848C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a1)
  {
    v1 = a1 + 8;
    v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0)
        v2 = *a1 + 14;
      v3 = v2 >> 3;
      v5 = v3 - 1;
      v4 = v3 < 1;
      v6 = v3 + 62;
      if (!v4)
        v6 = v5;
      v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          v8 = 0;
          v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)) & 1) != 0)
              swift_arrayDestroy();
            ++v8;
            v9 += 32;
          }
          while (v7 != v8);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

void sub_215098564(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t i;

  if (a1)
  {
    v1 = a1 + 8;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      v2 = a1[1];
      if ((v2 & 0x8000000000000000) == 0)
      {
        if (v2)
        {
          for (i = 0; i != v2; ++i)
          {
            if (((*((unsigned __int8 *)v1 + (i >> 3)) >> (i & 7)) & 1) != 0)
            {
              sub_21512F740();
              swift_arrayDestroy();
            }
          }
        }
LABEL_13:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_13;
}

void sub_21509863C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a1)
  {
    v1 = a1 + 8;
    v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0)
        v2 = *a1 + 14;
      v3 = v2 >> 3;
      v5 = v3 - 1;
      v4 = v3 < 1;
      v6 = v3 + 62;
      if (!v4)
        v6 = v5;
      v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          v8 = 0;
          v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)) & 1) != 0)
              swift_arrayDestroy();
            ++v8;
            v9 += 16;
          }
          while (v7 != v8);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

void sub_215098710(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA7CF8);
}

void sub_21509871C(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA7CD8);
}

void sub_215098728(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA7E00);
}

void sub_215098734(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA7E08);
}

void sub_215098740(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a1)
  {
    v1 = a1 + 8;
    v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0)
        v2 = *a1 + 14;
      v3 = v2 >> 3;
      v5 = v3 - 1;
      v4 = v3 < 1;
      v6 = v3 + 62;
      if (!v4)
        v6 = v5;
      v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          v8 = 0;
          v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)) & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7718);
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 24;
          }
          while (v7 != v8);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

void sub_21509881C(_QWORD *a1, uint64_t a2)
{
  sub_215098828(a1, a2, &qword_254DA7700);
}

void sub_215098828(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;

  if (a1)
  {
    v3 = a1 + 8;
    v4 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v4 < 0)
        v4 = *a1 + 14;
      v5 = v4 >> 3;
      v7 = v5 - 1;
      v6 = v5 < 1;
      v8 = v5 + 62;
      if (!v6)
        v8 = v7;
      v9 = a1[1];
      if ((v9 & 0x8000000000000000) == 0)
      {
        if (v9)
        {
          v11 = 0;
          v12 = (unint64_t)v3 + (v8 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v3 + (v11 >> 3)) >> (v11 & 7)) & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(a3);
              swift_arrayDestroy();
            }
            ++v11;
            v12 += 8;
          }
          while (v9 != v11);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

void sub_215098900(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (a1)
  {
    v1 = a1 + 8;
    v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0)
        v2 = *a1 + 14;
      v3 = v2 >> 3;
      v5 = v3 - 1;
      v4 = v3 < 1;
      v6 = v3 + 62;
      if (!v4)
        v6 = v5;
      v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          v8 = 0;
          v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if (((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)) & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 32;
          }
          while (v7 != v8);
        }
LABEL_17:
        JUMPOUT(0x2199DC578);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_17;
}

uint64_t sub_2150989DC(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((a2 & 1) == 0)
  {
    if (!a3)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v3 = *a3 + 7;
    if (__OFADD__(*a3, 7))
      goto LABEL_20;
    v4 = a3 + 8;
    if (v3 < 0)
      v3 = *a3 + 14;
    v5 = v3 >> 3;
    v7 = v5 - 1;
    v6 = v5 < 1;
    v8 = v5 + 62;
    if (!v6)
      v8 = v7;
    *(_QWORD *)((char *)&v4[a3[1] + 8] + (v8 & 0xFFFFFFFFFFFFC0)) = result;
    v9 = a3[1];
    v10 = v9 + 7;
    if (v9 >= 0)
      v10 = a3[1];
    v11 = v9 - (v10 & 0xFFFFFFFFFFFFFFF8);
    if (v11 >= 0)
      v12 = 1 << v11;
    else
      v12 = 0;
    *((_BYTE *)v4 + (v10 >> 3)) |= v12;
LABEL_17:
    v16 = a3[1];
    v14 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (!v14)
    {
      a3[1] = v17;
      return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a3)
  {
    v13 = a3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a3[2] = v15;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_215098AA0(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((a2 & 1) == 0)
  {
    if (!a3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v3 = *a3 + 7;
    if (__OFADD__(*a3, 7))
      goto LABEL_18;
    v4 = a3 + 8;
    if (v3 < 0)
      v3 = *a3 + 14;
    v5 = v3 >> 3;
    v7 = v5 - 1;
    v6 = v5 < 1;
    v8 = v5 + 62;
    if (!v6)
      v8 = v7;
    v9 = a3[1];
    *(_QWORD *)((char *)&v4[v9 + 8] + (v8 & 0xFFFFFFFFFFFFC0)) = result;
    v10 = v9 - (v8 & 0xFFFFFFFFFFFFFFF8);
    if (v10 >= 0)
      v11 = 1 << v10;
    else
      v11 = 0;
    *((_BYTE *)v4 + v9 / 8) |= v11;
LABEL_15:
    v15 = a3[1];
    v13 = __OFADD__(v15, 1);
    v16 = v15 + 1;
    if (!v13)
    {
      a3[1] = v16;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a3)
  {
    v12 = a3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a3[2] = v14;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_215098B5C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    if (!a3)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v3 = *a3 + 7;
    if (__OFADD__(*a3, 7))
      goto LABEL_20;
    v4 = a3 + 8;
    if (v3 < 0)
      v3 = *a3 + 14;
    v5 = v3 >> 3;
    v7 = v5 - 1;
    v6 = v5 < 1;
    v8 = v5 + 62;
    if (!v6)
      v8 = v7;
    v9 = (unint64_t)&v4[2 * a3[1]] + (v8 & 0xFFFFFFFFFFFFFFC0);
    *(_QWORD *)(v9 + 64) = result;
    *(_QWORD *)(v9 + 72) = a2;
    v10 = a3[1];
    v11 = v10 + 7;
    if (v10 >= 0)
      v11 = a3[1];
    v12 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0)
      v13 = 1 << v12;
    else
      v13 = 0;
    *((_BYTE *)v4 + (v11 >> 3)) |= v13;
LABEL_17:
    v17 = a3[1];
    v15 = __OFADD__(v17, 1);
    v18 = v17 + 1;
    if (!v15)
    {
      a3[1] = v18;
      return swift_bridgeObjectRetain();
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a3)
  {
    v14 = a3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a3[2] = v16;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_215098C20(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_2150991FC(a1, a2, a3, qword_253F0D058, (uint64_t (*)(_QWORD *, _BYTE *))sub_21504678C, (void (*)(_BYTE *, char *))sub_21504679C);
}

uint64_t sub_215098C3C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21512F740();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21504670C(a1, (uint64_t)v6, qword_253F0D218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = sub_215046750((uint64_t)v6, qword_253F0D218);
    if (!a2)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v12 = a2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_20;
    a2[2] = v14;
LABEL_17:
    v25 = a2[1];
    v13 = __OFADD__(v25, 1);
    v26 = v25 + 1;
    if (!v13)
    {
      a2[1] = v26;
      return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (a2)
  {
    v15 = *a2 + 7;
    if (__OFADD__(*a2, 7))
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v16 = a2 + 8;
    if (v15 < 0)
      v15 = *a2 + 14;
    v17 = v15 >> 3;
    v19 = v17 - 1;
    v18 = v17 < 1;
    v20 = v17 + 62;
    if (!v18)
      v20 = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))((unint64_t)v16 + (v20 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v8 + 72) * a2[1] + 64, v10, v7);
    v21 = a2[1];
    v22 = v21 + 7;
    if (v21 >= 0)
      v22 = a2[1];
    v23 = v21 - (v22 & 0xFFFFFFFFFFFFFFF8);
    if (v23 >= 0)
      v24 = 1 << v23;
    else
      v24 = 0;
    *((_BYTE *)v16 + (v22 >> 3)) |= v24;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_215098E18(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (a2 >> 60 == 15)
  {
    if (!a3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v3 = a3[2];
    v4 = __OFADD__(v3, 1);
    v5 = v3 + 1;
    if (v4)
      goto LABEL_18;
    a3[2] = v5;
LABEL_15:
    v16 = a3[1];
    v4 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (!v4)
    {
      a3[1] = v17;
      return sub_215046224(a1, a2);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a3)
  {
    v6 = *a3 + 7;
    if (__OFADD__(*a3, 7))
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v7 = a3 + 8;
    if (v6 < 0)
      v6 = *a3 + 14;
    v8 = v6 >> 3;
    v10 = v8 - 1;
    v9 = v8 < 1;
    v11 = v8 + 62;
    if (!v9)
      v11 = v10;
    v12 = a3[1];
    v13 = (unint64_t)&v7[2 * v12] + (v11 & 0xFFFFFFFFFFFFFFC0);
    *(_QWORD *)(v13 + 64) = a1;
    *(_QWORD *)(v13 + 72) = a2;
    v14 = v12 - (v13 & 0xFFFFFFFFFFFFFFF8);
    if (v14 >= 0)
      v15 = 1 << v14;
    else
      v15 = 0;
    *((_BYTE *)v7 + v12 / 8) |= v15;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return a1;
}

uint64_t sub_215098EDC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  if (result == 2)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v2 = a2[2];
    v3 = __OFADD__(v2, 1);
    v4 = v2 + 1;
    if (v3)
      goto LABEL_18;
    a2[2] = v4;
LABEL_15:
    v14 = a2[1];
    v3 = __OFADD__(v14, 1);
    v15 = v14 + 1;
    if (!v3)
    {
      a2[1] = v15;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    v5 = *a2 + 7;
    if (__OFADD__(*a2, 7))
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v6 = a2 + 8;
    if (v5 < 0)
      v5 = *a2 + 14;
    v7 = v5 >> 3;
    v9 = v7 - 1;
    v8 = v7 < 1;
    v10 = v7 + 62;
    if (!v8)
      v10 = v9;
    v11 = a2[1];
    *((_BYTE *)v6 + v11 + (v10 & 0xFFFFFFFFFFFFC0) + 64) = result & 1;
    v12 = v11 - (v10 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0)
      v13 = 1 << v12;
    else
      v13 = 0;
    *((_BYTE *)v6 + v11 / 8) |= v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_215098FA4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((result & 0x100000000) == 0)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v2 = *a2 + 7;
    if (__OFADD__(*a2, 7))
      goto LABEL_18;
    v3 = a2 + 8;
    if (v2 < 0)
      v2 = *a2 + 14;
    v4 = v2 >> 3;
    v6 = v4 - 1;
    v5 = v4 < 1;
    v7 = v4 + 62;
    if (!v5)
      v7 = v6;
    v8 = a2[1];
    *(_DWORD *)((char *)v3 + 4 * v8 + (v7 & 0xFFFFFFFFFFFFC0) + 64) = result;
    v9 = v8 - (v7 & 0xFFFFFFFFFFFFFFF8);
    if (v9 >= 0)
      v10 = 1 << v9;
    else
      v10 = 0;
    *((_BYTE *)v3 + v8 / 8) |= v10;
LABEL_15:
    v14 = a2[1];
    v12 = __OFADD__(v14, 1);
    v15 = v14 + 1;
    if (!v12)
    {
      a2[1] = v15;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    v11 = a2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a2[2] = v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_215099060(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (result)
  {
    if (!a4)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v4 = *a4 + 7;
    if (__OFADD__(*a4, 7))
      goto LABEL_18;
    v5 = a4 + 8;
    if (v4 < 0)
      v4 = *a4 + 14;
    v6 = v4 >> 3;
    v8 = v6 - 1;
    v7 = v6 < 1;
    v9 = v6 + 62;
    if (!v7)
      v9 = v8;
    v10 = a4[1];
    v11 = (unint64_t)&v5[3 * v10] + (v9 & 0xFFFFFFFFFFFFFFC0);
    *(_QWORD *)(v11 + 64) = result;
    *(_QWORD *)(v11 + 72) = a2;
    *(_QWORD *)(v11 + 80) = a3;
    v12 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0)
      v13 = 1 << v12;
    else
      v13 = 0;
    *((_BYTE *)v5 + v10 / 8) |= v13;
LABEL_15:
    v17 = a4[1];
    v15 = __OFADD__(v17, 1);
    v18 = v17 + 1;
    if (!v15)
    {
      a4[1] = v18;
      return sub_2150462EC(result);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a4)
  {
    v14 = a4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a4[2] = v16;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_215099124(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (result)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v2 = *a2 + 7;
    if (__OFADD__(*a2, 7))
      goto LABEL_18;
    v3 = a2 + 8;
    if (v2 < 0)
      v2 = *a2 + 14;
    v4 = v2 >> 3;
    v6 = v4 - 1;
    v5 = v4 < 1;
    v7 = v4 + 62;
    if (!v5)
      v7 = v6;
    v8 = a2[1];
    *(_QWORD *)((char *)&v3[v8 + 8] + (v7 & 0xFFFFFFFFFFFFC0)) = result;
    v9 = v8 - (v7 & 0xFFFFFFFFFFFFFFF8);
    if (v9 >= 0)
      v10 = 1 << v9;
    else
      v10 = 0;
    *((_BYTE *)v3 + v8 / 8) |= v10;
LABEL_15:
    v14 = a2[1];
    v12 = __OFADD__(v14, 1);
    v15 = v14 + 1;
    if (!v12)
    {
      a2[1] = v15;
      return swift_bridgeObjectRetain();
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    v11 = a2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a2[2] = v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2150991E0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_2150991FC(a1, a2, a3, &qword_254DA7868, (uint64_t (*)(_QWORD *, _BYTE *))sub_21504678C, (void (*)(_BYTE *, char *))sub_21504679C);
}

uint64_t sub_2150991FC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD *, _BYTE *), void (*a6)(_BYTE *, char *))
{
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _BYTE v27[32];

  sub_21504670C(a1, (uint64_t)v26, a4);
  if (v26[3])
  {
    result = a5(v26, v27);
    if (!a2)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v11 = *a2 + 7;
    if (__OFADD__(*a2, 7))
      goto LABEL_20;
    v12 = a2 + 8;
    if (v11 < 0)
      v11 = *a2 + 14;
    v13 = v11 >> 3;
    v15 = v13 - 1;
    v14 = v13 < 1;
    v16 = v13 + 62;
    if (!v14)
      v16 = v15;
    a6(v27, (char *)&v12[4 * a2[1] + 8] + (v16 & 0xFFFFFFFFFFFFFFC0));
    v17 = a2[1];
    v18 = v17 + 7;
    if (v17 >= 0)
      v18 = a2[1];
    v19 = v17 - (v18 & 0xFFFFFFFFFFFFFFF8);
    if (v19 >= 0)
      v20 = 1 << v19;
    else
      v20 = 0;
    *((_BYTE *)v12 + (v18 >> 3)) |= v20;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
LABEL_17:
    v24 = a2[1];
    v22 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (!v22)
    {
      a2[1] = v25;
      return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  result = sub_215046750((uint64_t)v26, a4);
  if (a2)
  {
    v21 = a2[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a2[2] = v23;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_215099328@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  if (!a2)
    goto LABEL_14;
  v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
  if (v3 >= 0)
    v4 = 1 << v3;
  else
    LOBYTE(v4) = 0;
  if ((*((_BYTE *)a2 + result / 8 + 64) & v4) == 0)
    return 0;
  v5 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v5 < 0)
    v5 = *a2 + 14;
  v6 = v5 >> 3;
  v8 = v6 - 1;
  v7 = v6 < 1;
  v9 = v6 + 62;
  if (!v7)
    v9 = v8;
  return *(_QWORD *)((char *)&a2[result + 16] + (v9 & 0xFFFFFFFFFFFFC0));
}

uint64_t sub_2150993BC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;

  if (a2)
  {
    v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0)
      v4 = 1 << v3;
    else
      LOBYTE(v4) = 0;
    if ((v4 & *((_BYTE *)a2 + result / 8 + 64)) == 0)
      return 0;
    if (!__OFADD__(*a2, 7))
      return swift_bridgeObjectRetain();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_215099458@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2)
  {
    v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0)
      v4 = 1 << v3;
    else
      LOBYTE(v4) = 0;
    if ((v4 & *((_BYTE *)a2 + result / 8 + 64)) == 0)
      return 0;
    v5 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v5 < 0)
        v5 = *a2 + 14;
      v6 = v5 >> 3;
      v8 = v6 - 1;
      v7 = v6 < 1;
      v9 = v6 + 62;
      if (!v7)
        v9 = v8;
      v10 = *(_QWORD *)((char *)&a2[2 * result + 16] + (v9 & 0xFFFFFFFFFFFFFFC0));
      swift_bridgeObjectRetain();
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_215099508@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  if (!a2)
    goto LABEL_14;
  v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
  if (v3 >= 0)
    v4 = 1 << v3;
  else
    LOBYTE(v4) = 0;
  if ((v4 & *((_BYTE *)a2 + result / 8 + 64)) == 0)
    return 2;
  v5 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v5 < 0)
    v5 = *a2 + 14;
  v6 = v5 >> 3;
  v8 = v6 - 1;
  v7 = v6 < 1;
  v9 = v6 + 62;
  if (!v7)
    v9 = v8;
  return *((unsigned __int8 *)a2 + result + (v9 & 0xFFFFFFFFFFFFC0) + 128);
}

uint64_t sub_215099590@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    v3 = result;
    v5 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 0)
      v6 = 1 << v5;
    else
      LOBYTE(v6) = 0;
    if ((v6 & *((_BYTE *)a2 + result / 8 + 64)) == 0)
    {
      v18 = sub_21512F740();
      v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
      v16 = a3;
      v17 = 1;
      return v15(v16, v17, 1, v18);
    }
    v7 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v7 < 0)
        v7 = *a2 + 14;
      v8 = v7 >> 3;
      v10 = v8 - 1;
      v9 = v8 < 1;
      v11 = v8 + 62;
      if (!v9)
        v11 = v10;
      v12 = (unint64_t)a2 + (v11 & 0xFFFFFFFFFFFFFFC0) + 64;
      v13 = sub_21512F740();
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(a3, v12 + *(_QWORD *)(v14 + 72) * v3 + 64, v13);
      v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v16 = a3;
      v17 = 0;
      v18 = v13;
      return v15(v16, v17, 1, v18);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_215099698@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (!a2)
    goto LABEL_14;
  v4 = result - (v3 & 0xFFFFFFFFFFFFFFF8);
  if (v4 >= 0)
    v5 = 1 << v4;
  else
    LOBYTE(v5) = 0;
  if ((v5 & *((_BYTE *)a2 + result / 8 + 64)) == 0)
  {
    *(_OWORD *)a3 = xmmword_215135DD0;
    return result;
  }
  v6 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v6 < 0)
    v6 = *a2 + 14;
  v7 = v6 >> 3;
  v9 = v7 - 1;
  v8 = v7 < 1;
  v10 = v7 + 62;
  if (!v8)
    v10 = v9;
  v11 = (unint64_t)&a2[2 * result + 8] + (v10 & 0xFFFFFFFFFFFFFFC0);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)a3 = v12;
  *(_QWORD *)(a3 + 8) = v13;
  return sub_21501F068(v12, v13);
}

int64_t sub_21509972C@<X0>(int64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2)
  {
    v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0)
      v4 = 1 << v3;
    else
      LOBYTE(v4) = 0;
    v5 = *((_BYTE *)a2 + result / 8 + 64) & v4;
    if (!v5)
    {
      v11 = 0;
      return v11 | ((unint64_t)(v5 == 0) << 32);
    }
    v6 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v6 < 0)
        v6 = *a2 + 14;
      v7 = v6 >> 3;
      v9 = v7 - 1;
      v8 = v7 < 1;
      v10 = v7 + 62;
      if (!v8)
        v10 = v9;
      v11 = *(unsigned int *)((char *)a2 + 4 * result + (v10 & 0xFFFFFFFFFFFFC0) + 128);
      return v11 | ((unint64_t)(v5 == 0) << 32);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2150997D4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  if (a2)
  {
    v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0)
      v4 = 1 << v3;
    else
      LOBYTE(v4) = 0;
    v5 = *((_BYTE *)a2 + result / 8 + 64) & v4;
    if (!v5)
    {
      v11 = 0;
      return v11 | ((v5 == 0) << 16);
    }
    v6 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v6 < 0)
        v6 = *a2 + 14;
      v7 = v6 >> 3;
      v9 = v7 - 1;
      v8 = v7 < 1;
      v10 = v7 + 62;
      if (!v8)
        v10 = v9;
      v11 = *(unsigned __int16 *)((char *)a2 + 2 * result + (v10 & 0xFFFFFFFFFFFFC0) + 128);
      return v11 | ((v5 == 0) << 16);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_215099874@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = a5;
  a6[1] = result;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  return result;
}

uint64_t sub_215099884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  __int128 v25;
  char *v26;
  _OWORD *v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;

  v32 = a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v34 = swift_getTupleTypeMetadata2();
  v7 = sub_215130064();
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v28 - v8;
  v9 = sub_215130064();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(uint64_t))v3[3])(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    v29 = a3;
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v6);
    v35 = *v3;
    MEMORY[0x24BDAC7A8](v18);
    *(&v28 - 6) = v6;
    v19 = v32;
    *(_OWORD *)(&v28 - 5) = *(_OWORD *)(v32 + 24);
    *(&v28 - 3) = *(_QWORD *)(v19 + 40);
    *(&v28 - 2) = (uint64_t)v16;
    v20 = v34;
    v21 = sub_21512FD40();
    swift_bridgeObjectRetain();
    MEMORY[0x2199DC4C4](MEMORY[0x24BEE12C8], v21);
    v22 = v33;
    sub_21512FC5C();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v16, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v22, 1, v20) == 1)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, v31);
      v24 = 0;
      v25 = 0uLL;
    }
    else
    {
      v26 = &v22[*(int *)(v20 + 48)];
      v34 = *(_OWORD *)v26;
      v24 = *((_QWORD *)v26 + 2);
      result = ((uint64_t (*)(char *, uint64_t))v23)(v22, v6);
      v25 = v34;
    }
    v27 = v29;
    *v29 = v25;
    *((_QWORD *)v27 + 2) = v24;
  }
  return result;
}

uint64_t sub_215099B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  sub_215099C58(a2, &v5);
  v3 = sub_2150B63A0(a1, v5, *((unint64_t *)&v5 + 1), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_215099BA4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2199DC4C4](&unk_215137FB0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_215099BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormattingOptions.init()((uint64_t)v4);
  v5 = sub_215099B1C((uint64_t)v4, a1);
  sub_21509C010((uint64_t)v4);
  return v5;
}

unint64_t sub_215099C58@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  _UNKNOWN **v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t result;
  char v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _UNKNOWN **v51;
  _QWORD *v52;
  uint64_t (*v53)(uint64_t, _QWORD *);
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  __int128 v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _UNKNOWN **v99;
  char v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  __int128 v137;
  unint64_t v138;

  v86 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v78 = *(_QWORD *)(v9 + 64);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v88 = (char *)&v77 - v11;
  v85 = a1;
  v90 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v89 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_215130064();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v77 - v15;
  v81 = v2;
  v83 = *(_QWORD *)v2;
  v95 = v83;
  v17 = sub_21512FD40();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v17);
  sub_21512FEE4();
  v82 = v9;
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, TupleTypeMetadata2);
  v84 = TupleTypeMetadata2;
  v80 = a2;
  if (v18 == 1)
  {
    v19 = 0;
  }
  else
  {
    v20 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    if (!*(_QWORD *)(*(_QWORD *)v20 + 16))
      goto LABEL_7;
    sub_21501EE90(*(_QWORD *)v20 + 32, (uint64_t)&v95);
    v22 = v98;
    v21 = v99;
    __swift_project_boxed_opaque_existential_1(&v95, v98);
    v23 = (*((uint64_t (**)(uint64_t))v21[1] + 6))(v22);
    result = sub_21501EA34((uint64_t)&v95);
    if (v23 < 0)
      goto LABEL_81;
    if (v23)
    {
      v25 = 0;
    }
    else
    {
LABEL_7:
      v23 = 0;
      v25 = 2;
    }
    v19 = sub_2150EBD1C(0, v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(0, v23, v25);
    v14 = v86;
    v13 = v87;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  result = MEMORY[0x2199DB870](v83, v84);
  v26 = result * v19;
  if ((unsigned __int128)((uint64_t)result * (__int128)v19) >> 64 != (uint64_t)(result * v19) >> 63)
    goto LABEL_80;
  v27 = MEMORY[0x24BEE4AF8];
  v28 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v137 = v27;
  *((_QWORD *)&v137 + 1) = v27;
  v138 = v28;
  (*((void (**)(void))v81 + 1))();
  v29 = *(_QWORD *)(v85 + 40);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 24))(v26, v90, v29);
  v134 = 0x6E6D756C6F63;
  v135 = 0xE600000000000000;
  v136 = sub_215043B48(v27);
  sub_2150EE06C(v19);
  v131 = 1851876717;
  v132 = 0xE400000000000000;
  sub_215043D68(v27);
  v133 = v30;
  sub_2150EE050(v19);
  v128 = 6583411;
  v129 = 0xE300000000000000;
  sub_215043D68(v27);
  v130 = v31;
  sub_2150EE050(v19);
  v125 = 7235949;
  v126 = 0xE300000000000000;
  sub_215043D68(v27);
  v127 = v32;
  sub_2150EE050(v19);
  v122 = 7889261;
  v123 = 0xE300000000000000;
  sub_215043D68(v27);
  v124 = v33;
  sub_2150EE050(v19);
  v119 = 0x6E616964656DLL;
  v120 = 0xE600000000000000;
  sub_215043D68(v27);
  v121 = v34;
  sub_2150EE050(v19);
  v116 = 12625;
  v117 = 0xE200000000000000;
  sub_215043D68(v27);
  v118 = v35;
  sub_2150EE050(v19);
  v113 = 13137;
  v114 = 0xE200000000000000;
  v36 = v84;
  sub_215043D68(v27);
  v115 = v37;
  sub_2150EE050(v19);
  v110 = 1701080941;
  v111 = 0xE400000000000000;
  v112 = sub_21504400C(v27);
  sub_2150EE02C(v19);
  v107 = 0x6F43657571696E75;
  v108 = 0xEB00000000746E75;
  sub_215043454(v27);
  v109 = v38;
  sub_2150EE010(v19);
  v104 = 0x6E756F43656E6F6ELL;
  v105 = 0xE900000000000074;
  sub_215043454(v27);
  v106 = v39;
  sub_2150EE010(v19);
  v101 = 0x6E756F43656D6F73;
  v102 = 0xE900000000000074;
  v40 = v83;
  sub_215043454(v27);
  v103 = v41;
  sub_2150EE010(v19);
  v42 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2199DB894](v42, v36))
    goto LABEL_55;
  v43 = 0;
  v81 = &v88[*(int *)(v36 + 48)];
LABEL_12:
  v44 = sub_21512FD04();
  sub_21512FCC8();
  if ((v44 & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v88, v40+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v43, v36);
    v45 = __OFADD__(v43, 1);
    v46 = v43 + 1;
    if (v45)
      goto LABEL_54;
  }
  else
  {
    result = sub_2151301B4();
    if (v78 != 8)
      goto LABEL_82;
    v95 = result;
    (*(void (**)(char *, unint64_t *, uint64_t))(v82 + 16))(v88, &v95, v36);
    swift_unknownObjectRelease();
    v45 = __OFADD__(v43, 1);
    v46 = v43 + 1;
    if (v45)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
  }
  v85 = v46;
  v48 = *(_QWORD *)v81;
  v47 = *((_QWORD *)v81 + 1);
  v49 = *((_QWORD *)v81 + 2);
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v6, v88, v87);
  if (!*(_QWORD *)(v48 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = 0;
    goto LABEL_18;
  }
  sub_21501EE90(v48 + 32, (uint64_t)&v95);
  v50 = v98;
  v51 = v99;
  __swift_project_boxed_opaque_existential_1(&v95, v98);
  v52 = v51[1];
  v53 = (uint64_t (*)(uint64_t, _QWORD *))v52[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = v53(v50, v52);
  result = sub_21501EA34((uint64_t)&v95);
  if ((v54 & 0x8000000000000000) == 0)
  {
LABEL_18:
    v55 = 0;
    while (1)
    {
      if (v54)
      {
        if (v55 == v54)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v56 = v54;
          v57 = 0;
          goto LABEL_25;
        }
      }
      else if (!v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = 0;
        v57 = 2;
LABEL_25:
        sub_21501EF2C(0, v56, v57);
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(0x6E6D756C6F63, 0xE600000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_56;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_57;
        v58 = v48 + 32;
        sub_21501EE90(v48 + 32 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D440);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B6A8(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(1851876717, 0xE400000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_58;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_59;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D448);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(6583411, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_60;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_61;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(7235949, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_62;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_63;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(7889261, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_64;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_65;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(0x6E616964656DLL, 0xE600000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_66;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_67;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(12625, 0xE200000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_68;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_69;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(13137, 0xE200000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_70;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_71;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509B8E0(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(1701080941, 0xE400000000000000);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_72;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_73;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8198);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509BB18(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(0x6F43657571696E75, 0xEB00000000746E75);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_74;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_75;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509BD50(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_21501F2BC(0x6E756F43656E6F6ELL, 0xE900000000000074);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_76;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_77;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509BD50(v92, v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        v95 = v48;
        v96 = v47;
        v97 = v49;
        result = sub_21501F2BC(0x6E756F43656D6F73, 0xE900000000000074);
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_78;
        if (result >= *(_QWORD *)(v48 + 16))
          goto LABEL_79;
        sub_21501EE90(v58 + 40 * result, (uint64_t)v91);
        sub_2150459B0(v91, (uint64_t)&v95);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21509BD50(v92, v93, v94);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v6, v87);
        swift_release();
        swift_bridgeObjectRelease();
        v40 = v83;
        v36 = v84;
        v59 = MEMORY[0x2199DB894](v83, v84);
        v43 = v85;
        if (v85 == v59)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v29 + 40))(&v137, 0, v90, v29);
          v60 = v134;
          v61 = v135;
          v62 = v136;
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D440);
          v99 = &off_24D2A4440;
          v95 = v60;
          v96 = v61;
          v97 = v62;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v63 = v131;
          v64 = v132;
          v65 = v133;
          v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D448);
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v63;
          v96 = v64;
          v97 = v65;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v128;
          v96 = v129;
          v97 = v130;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v125;
          v96 = v126;
          v97 = v127;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v122;
          v96 = v123;
          v97 = v124;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v119;
          v96 = v120;
          v97 = v121;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v116;
          v96 = v117;
          v97 = v118;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v67 = v115;
          v98 = v66;
          v99 = &off_24D2A4440;
          v95 = v113;
          v96 = v114;
          v97 = v115;
          v88 = (char *)v114;
          swift_bridgeObjectRetain_n();
          v87 = v67;
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v68 = v110;
          v69 = v111;
          v70 = v112;
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8198);
          v99 = &off_24D2A4440;
          v95 = v68;
          v96 = v69;
          v97 = v70;
          v86 = v69;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v71 = v107;
          v72 = v108;
          v73 = v109;
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
          v98 = v74;
          v99 = &off_24D2A4440;
          v95 = v71;
          v96 = v72;
          v97 = v73;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v74;
          v99 = &off_24D2A4440;
          v95 = v104;
          v96 = v105;
          v97 = v106;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          v98 = v74;
          v99 = &off_24D2A4440;
          v95 = v101;
          v96 = v102;
          v97 = v103;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v95);
          sub_21501EA34((uint64_t)&v95);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v89, v90);
          v75 = v138;
          v76 = v80;
          *v80 = v137;
          *((_QWORD *)v76 + 2) = v75;
          return result;
        }
        goto LABEL_12;
      }
      v95 = v48;
      v96 = v47;
      v97 = v49;
      v98 = 0;
      v99 = (_UNKNOWN **)v54;
      v100 = 2 * (v54 == 0);
      v55 = DataFrame.Rows.index(after:)(v55);
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v6, v90, v29);
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_21509B1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 40);
  sub_2150437A8(v3, v5, v6);
  v7 = sub_2150C35A8(a1, v3, v5, v6);
  v9 = v8;
  sub_21501EF2C(v3, v5, v6);
  if ((v9 & 1) != 0)
    goto LABEL_26;
  result = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v6)
  {
    if (!v7)
    {
      if (result < v3 || result >= v5)
      {
LABEL_17:
        swift_beginAccess();
        v16 = *(_QWORD *)(v4 + 16);
        if (v16)
        {
          v15 = v16 + 8;
          return *(_QWORD *)v15;
        }
        goto LABEL_25;
      }
      return result;
    }
    goto LABEL_22;
  }
  if (v6 != 1)
  {
LABEL_26:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_23;
  if (v7 >= *(_QWORD *)(v3 + 16))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v11 = v3 + 16 * v7;
  v13 = *(_QWORD *)(v11 + 32);
  v12 = *(_QWORD *)(v11 + 40);
  if (result < v13 || result >= v12)
  {
    if (v7 + 1 < *(_QWORD *)(v3 + 16))
    {
      v15 = v3 + 16 * (v7 + 1) + 32;
      return *(_QWORD *)v15;
    }
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_21509B388(uint64_t a1, char a2)
{
  return sub_21509B4D0(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0);
}

uint64_t sub_21509B394(uint64_t a1, char a2)
{
  return sub_21509B5C8(a1, a2, &qword_254DA8220);
}

uint64_t sub_21509B3A0(uint64_t a1, char a2)
{
  return sub_21509B3B4(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8);
}

uint64_t sub_21509B3B4(uint64_t a1, char a2, void (*a3)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t), void (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  if ((a2 & 1) == 0)
  {
    v10 = a1;
    goto LABEL_9;
  }
  result = swift_beginAccess();
  v9 = *(uint64_t **)(v4 + 16);
  if (!v9)
    goto LABEL_11;
  v10 = *v9;
  if (*v9 >= a1)
  {
LABEL_9:
    swift_beginAccess();
    a3(v13, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v10);
    a4(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
    v11 = v13[0];
    v12 = v13[1];
    result = swift_beginAccess();
    *(_QWORD *)(v4 + 16) = v11;
    *(_QWORD *)(v4 + 24) = v12;
    return result;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    if (2 * v10 <= a1)
      v10 = a1;
    else
      v10 *= 2;
    goto LABEL_9;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21509B490(uint64_t a1, char a2)
{
  return sub_21509B3B4(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150979C4, (void (*)(_QWORD, _QWORD))sub_215098564);
}

uint64_t sub_21509B4A4(uint64_t a1, char a2)
{
  return sub_21509B3B4(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_21509863C);
}

uint64_t sub_21509B4B8(uint64_t a1, char a2)
{
  return sub_21509B4D0(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097C2C);
}

uint64_t sub_21509B4C4(uint64_t a1, char a2)
{
  return sub_21509B4D0(a1, a2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097DF0);
}

uint64_t sub_21509B4D0(uint64_t a1, char a2, void (*a3)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  if ((a2 & 1) == 0)
  {
    v8 = a1;
    goto LABEL_9;
  }
  result = swift_beginAccess();
  v7 = *(uint64_t **)(v3 + 16);
  if (v7)
  {
    v8 = *v7;
    if (*v7 < a1)
    {
      if (v8 + 0x4000000000000000 < 0)
        goto LABEL_13;
      if (2 * v8 <= a1)
        v8 = a1;
      else
        v8 *= 2;
    }
LABEL_9:
    swift_beginAccess();
    a3(v11, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v8);
    result = *(_QWORD *)(v3 + 16);
    if (!result)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if ((*(_QWORD *)(result + 8) & 0x8000000000000000) == 0)
    {
      MEMORY[0x2199DC578]();
      v9 = v11[0];
      v10 = v11[1];
      result = swift_beginAccess();
      *(_QWORD *)(v3 + 16) = v9;
      *(_QWORD *)(v3 + 24) = v10;
      return result;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_21509B5BC(uint64_t a1, char a2)
{
  return sub_21509B5C8(a1, a2, &qword_254DA7CF8);
}

uint64_t sub_21509B5C8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];

  if ((a2 & 1) == 0)
  {
    v8 = a1;
    goto LABEL_9;
  }
  result = swift_beginAccess();
  v7 = *(uint64_t **)(v3 + 16);
  if (!v7)
    goto LABEL_11;
  v8 = *v7;
  if (*v7 >= a1)
  {
LABEL_9:
    swift_beginAccess();
    sub_2150975F0(*(_QWORD *)(v3 + 16), v8, v11);
    sub_215098828(*(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
    v9 = v11[0];
    v10 = v11[1];
    result = swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v9;
    *(_QWORD *)(v3 + 24) = v10;
    return result;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    if (2 * v8 <= a1)
      v8 = a1;
    else
      v8 *= 2;
    goto LABEL_9;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21509B69C(uint64_t a1, char a2)
{
  return sub_21509B5C8(a1, a2, &qword_254DA7CD8);
}

uint64_t sub_21509B6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v7;
  _BYTE v8[25];
  _BYTE v9[40];
  _QWORD v10[5];
  __int128 v11;
  _BYTE v12[25];

  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D440);
  v10[4] = &off_24D2A4498;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_21504C608((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D198);
  if (swift_dynamicCast())
  {
    sub_215094714(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C88);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_QWORD *)&v12[16] = *(_QWORD *)&v8[16];
    sub_215094AF4((unint64_t *)&v11);
    sub_2150858B4((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C90);
  if (swift_dynamicCast())
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_215094F18((uint64_t)&v11);
    sub_215053AEC((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_21504C608((uint64_t)v10, (uint64_t)&v11);
  sub_215130178();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509B8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v7;
  _BYTE v8[25];
  _BYTE v9[40];
  _QWORD v10[5];
  __int128 v11;
  _BYTE v12[25];

  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D448);
  v10[4] = &off_24D2A4498;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_21504C608((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D198);
  if (swift_dynamicCast())
  {
    sub_215093730(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C68);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_QWORD *)&v12[16] = *(_QWORD *)&v8[16];
    sub_215093B0C((unint64_t *)&v11);
    sub_2150858B4((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C70);
  if (swift_dynamicCast())
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_215093F34((uint64_t)&v11);
    sub_215053AEC((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_21504C608((uint64_t)v10, (uint64_t)&v11);
  sub_215130178();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509BB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v7;
  _BYTE v8[25];
  _BYTE v9[40];
  _QWORD v10[5];
  __int128 v11;
  _BYTE v12[25];

  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8198);
  v10[4] = &off_24D2A4498;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_21504C608((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D198);
  if (swift_dynamicCast())
  {
    sub_215092780(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8358);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_QWORD *)&v12[16] = *(_QWORD *)&v8[16];
    sub_215092B4C((unint64_t *)&v11);
    sub_2150858B4((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8360);
  if (swift_dynamicCast())
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_215092F60((uint64_t)&v11);
    sub_215053AEC((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_21504C608((uint64_t)v10, (uint64_t)&v11);
  sub_215130178();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509BD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  __int128 v7;
  _BYTE v8[25];
  _BYTE v9[40];
  _QWORD v10[5];
  __int128 v11;
  _BYTE v12[25];

  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
  v10[4] = &off_24D2A4498;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_21504C608((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D198);
  if (swift_dynamicCast())
  {
    sub_215091790(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C38);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_QWORD *)&v12[16] = *(_QWORD *)&v8[16];
    sub_215091B70((unint64_t *)&v11);
    sub_2150858B4((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C40);
  if (swift_dynamicCast())
  {
    v11 = v7;
    *(_OWORD *)v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_215091F9C((uint64_t)&v11);
    sub_215053AEC((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_21504C608((uint64_t)v10, (uint64_t)&v11);
  sub_215130178();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509BF88(uint64_t a1)
{
  sub_21501EF2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

BOOL sub_21509BFB8(uint64_t a1)
{
  uint64_t v1;

  return sub_2150FAB10(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_21509BFD4()
{
  return sub_21512FA58() & 1;
}

uint64_t sub_21509C010(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormattingOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_21509C04C(uint64_t a1)
{
  return sub_21509BFB8(a1);
}

uint64_t sub_21509C064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t result;
  uint64_t (*v21)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v24[0] = a4;
  v24[1] = a5;
  v24[2] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_21501F2BC(a1, a2);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= *(_QWORD *)(a4 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = a3 & 1;
  sub_21501EE90(a4 + 40 * v14 + 32, (uint64_t)v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v25;
  v16 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 80))(v17);
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_253F0D450;
    v19 = (char *)sub_2150A565C;
LABEL_13:
    sub_21509C750(a1, a2, v15, a4, a5, a6, v18, v19, a7);
    return sub_21501EA34((uint64_t)v24);
  }
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_254DA8430;
    v19 = (char *)sub_2150A68C8;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_254DA7500;
    v19 = (char *)sub_2150A7B38;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_253F0D448;
    v19 = (char *)sub_2150A8D88;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_253F0D440;
    v19 = (char *)sub_2150A9B94;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    swift_bridgeObjectRetain();
    if (v15)
      v21 = sub_2150AC128;
    else
      v21 = sub_2150AAF00;
    sub_21509D7A0(a1, a2, a4, a5, a6, &qword_253F0D1A8, (uint64_t)v21, (void (*)(__int128 *, char *, _QWORD, _QWORD, uint64_t))sub_2150ACC80, a7);
    swift_bridgeObjectRelease();
    return sub_21501EA34((uint64_t)v24);
  }
  sub_21512F740();
  if (swift_dynamicCastMetatype())
  {
    v18 = &qword_253F0D1A0;
    v19 = (char *)sub_2150AD250;
    goto LABEL_13;
  }
LABEL_24:
  sub_215130178();
  sub_21512FB90();
  v22 = v25;
  v23 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 80))(v22);
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

TabularData::DataFrame __swiftcall DataFrameProtocol.sorted(on:order:)(Swift::String on, TabularData::Order order)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  void *object;
  char *countAndFlagsBits;
  unsigned __int8 v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char **v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(_BYTE *, _BYTE *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  unsigned __int8 v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  TabularData::DataFrame result;

  v5 = v3;
  v6 = v2;
  object = on._object;
  countAndFlagsBits = (char *)on._countAndFlagsBits;
  v25 = v4;
  v9 = *(_BYTE *)order;
  (*(void (**)(char **__return_ptr))(v3 + 24))(&v27);
  v10 = v27;
  v30[0] = v27;
  v30[1] = v28;
  v30[2] = v29;
  v11 = sub_21501F2BC((uint64_t)countAndFlagsBits, (uint64_t)object);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= *((_QWORD *)v10 + 2))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_21501EE90((uint64_t)&v10[40 * v11 + 32], (uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v31;
  v12 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 80))(v13);
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      v26 = v9;
      v14 = MEMORY[0x24BEE4678];
      v15 = MEMORY[0x24BEE4688];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      v26 = v9;
      v14 = MEMORY[0x24BEE14E8];
      v15 = MEMORY[0x24BEE1510];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      v26 = v9;
      v14 = MEMORY[0x24BEE13C8];
      v15 = MEMORY[0x24BEE13F0];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      v26 = v9;
      v14 = MEMORY[0x24BEE0D00];
      v15 = MEMORY[0x24BEE0D20];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      swift_bridgeObjectRetain();
      if ((v9 & 1) != 0)
        v21 = sub_21509E8B8;
      else
        v21 = sub_21509D78C;
      DataFrameProtocol.sorted<A>(on:by:)(&v27, (uint64_t)v21, 0, v6, MEMORY[0x24BEE1328], v5, v25);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    v22 = sub_21512F740();
    if (swift_dynamicCastMetatype())
    {
      v27 = countAndFlagsBits;
      v28 = (unint64_t)object;
      v26 = v9;
      v15 = sub_21509D744();
      v16 = v25;
      v17 = v6;
      v14 = v22;
      goto LABEL_14;
    }
LABEL_25:
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v23 = v31;
    v24 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 80))(v23);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v18 = (void *)sub_2151302EC();
    __break(1u);
    goto LABEL_26;
  }
  v27 = countAndFlagsBits;
  v28 = (unint64_t)object;
  v26 = v9;
  v14 = MEMORY[0x24BEE1768];
  v15 = MEMORY[0x24BEE1780];
LABEL_13:
  v16 = v25;
  v17 = v6;
LABEL_14:
  DataFrameProtocol.sorted<A>(on:order:)((uint64_t *)&v27, &v26, v17, v14, v5, v15, v16);
LABEL_15:
  v18 = (void *)sub_21501EA34((uint64_t)v30);
LABEL_26:
  result.columnIndicesByName._rawValue = v20;
  result.aliases._rawValue = v19;
  result.columns._rawValue = v18;
  return result;
}

uint64_t sub_21509C750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v9;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, char *);
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[3];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;

  v84 = a4;
  v85 = a5;
  v86 = a6;
  swift_bridgeObjectRetain();
  v69 = a5;
  swift_bridgeObjectRetain();
  v68 = a6;
  swift_bridgeObjectRetain();
  v19 = sub_21501F2BC(a1, a2);
  if ((v19 & 0x8000000000000000) != 0)
    goto LABEL_34;
  v9 = *(_QWORD *)(a4 + 16);
  if (v19 >= v9)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v70 = a8;
  v65 = a9;
  sub_21501EE90(a4 + 32 + 40 * v19, (uint64_t)&v81);
  sub_2150459B0(&v81, (uint64_t)&v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
  __swift_instantiateConcreteTypeFromMangledName(a7);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EE90(a4 + 32, (uint64_t)&v84);
  a8 = v87;
  v20 = v88;
  __swift_project_boxed_opaque_existential_1(&v84, (uint64_t)v87);
  v21 = *(_QWORD *)(v20 + 8);
  v22 = *(uint64_t (**)(char *, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = v22(a8, v21);
  sub_21501EA34((uint64_t)&v84);
  if (v23 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v24 = a3 & 1;
  if (v23)
  {
    v25 = 0;
    v26 = 0;
  }
  else
  {
    v26 = 2;
    sub_21508C520(0, 0, 2);
    if ((v28 & 1) != 0)
      v25 = 0;
    else
      v25 = v27;
  }
  sub_21508C520(0, v23, v26);
  v84 = a4;
  v85 = v69;
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = v29;
  v86 = v68;
  v87 = 0;
  v88 = v23;
  v89 = v26;
  v90 = v25;
  v91 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(0, v23, v26);
  v32 = sub_215048CD4((uint64_t)&v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v23, v26);
  *(_QWORD *)&v81 = v32;
  sub_2150AE314((char **)&v81, v77[0], v77[1], v77[2], v24, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v23, v26);
  v66 = v81;
  v80 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_215038C1C(0, v9, 0);
  v33 = v80;
  v34 = a4 + 32;
  v35 = v9;
  do
  {
    sub_21501EE90(v34, (uint64_t)v77);
    v36 = v78;
    v37 = v79;
    __swift_project_boxed_opaque_existential_1(v77, v78);
    (*(void (**)(char **__return_ptr, uint64_t))(*(_QWORD *)(v37 + 8) + 88))(&v73, v36);
    v38 = v75;
    v39 = v76;
    __swift_project_boxed_opaque_existential_1(&v73, v75);
    v41 = v78;
    v40 = v79;
    __swift_project_boxed_opaque_existential_1(v77, v78);
    v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 48))(v41);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v81, v42, v38, v39);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
    sub_21501EA34((uint64_t)v77);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_215038C1C(0, *(_QWORD *)(v33 + 16) + 1, 1);
      v33 = v80;
    }
    v44 = *(_QWORD *)(v33 + 16);
    v43 = *(_QWORD *)(v33 + 24);
    if (v44 >= v43 >> 1)
    {
      sub_215038C1C((char *)(v43 > 1), v44 + 1, 1);
      v33 = v80;
    }
    *(_QWORD *)(v33 + 16) = v44 + 1;
    v45 = v33 + 40 * v44;
    v46 = v81;
    v47 = v82;
    *(_QWORD *)(v45 + 64) = v83;
    *(_OWORD *)(v45 + 32) = v46;
    *(_OWORD *)(v45 + 48) = v47;
    v34 += 40;
    --v35;
  }
  while (v35);
  swift_bridgeObjectRelease();
  sub_215020C2C(v33, &v73);
  v67 = *(_QWORD *)(v66 + 16);
  if (!v67)
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_release();
    a8 = v73;
LABEL_30:
    *(_QWORD *)v65 = a8;
    *(_OWORD *)(v65 + 8) = v74;
    return result;
  }
  v48 = 0;
  while (2)
  {
    v71 = v48;
    v49 = *(_QWORD *)(v66 + 32 + 8 * v48);
    sub_21501EE90(a4 + 32, (uint64_t)&v81);
    v50 = *((_QWORD *)&v82 + 1);
    v51 = v83;
    __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
    a8 = *(char **)(v51 + 8);
    v52 = (uint64_t (*)(uint64_t, char *))*((_QWORD *)a8 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = v52(v50, a8);
    sub_21501EA34((uint64_t)&v81);
    if (v53 < 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    sub_21501EF2C(0, v53, 2 * (v53 == 0));
    a8 = v73;
    if (v9 == *((_QWORD *)v73 + 2))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a8 = sub_21501E4D4((uint64_t)a8);
      v54 = 0;
      v55 = 0;
      v72 = v71 + 1;
      do
      {
        sub_21501EE90(a4 + v54 + 32, (uint64_t)&v81);
        v73 = a8;
        if (v55 >= *((_QWORD *)a8 + 2))
        {
          __break(1u);
          goto LABEL_32;
        }
        ++v55;
        v56 = &a8[v54];
        v57 = (uint64_t)&a8[v54 + 32];
        v58 = *((_QWORD *)&v82 + 1);
        v59 = v83;
        v60 = __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
        v78 = v58;
        v79 = *(_QWORD *)(v59 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v77);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(boxed_opaque_existential_1, v60, v58);
        v63 = *((_QWORD *)v56 + 7);
        v62 = *((_QWORD *)v56 + 8);
        __swift_mutable_project_boxed_opaque_existential_1(v57, v63);
        (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v62 + 56))(v49, v77, v63, v62);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
        sub_21501EA34((uint64_t)&v81);
        a8 = v73;
        v54 += 40;
      }
      while (v9 != v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v72;
      if (v72 != v67)
        continue;
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_release();
      goto LABEL_30;
    }
    break;
  }
LABEL_36:
  *(_QWORD *)&v81 = 0;
  *((_QWORD *)&v81 + 1) = 0xE000000000000000;
  sub_215130178();
  sub_21512FB90();
  v77[0] = v9;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v77[0] = *((_QWORD *)a8 + 2);
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151302EC();
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t DataFrameProtocol.sorted<A>(on:order:)@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  char *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  char **v63;
  uint64_t v64;
  char **v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  void (*v73)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78[3];
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;

  v76 = a6;
  v65 = a7;
  v11 = *a1;
  v12 = a1[1];
  LODWORD(v72) = *a2;
  v77 = *(char **)(a5 + 24);
  ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t))v77)(&v92, a3, a5);
  v81 = v92;
  v82 = v93;
  v78[0] = v11;
  v78[1] = v12;
  v75 = a4;
  DataFrame.subscript.getter(v78, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = *((_QWORD *)&v88 + 1);
  v66 = v88;
  v67 = v89;
  v13 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 32);
  v74 = v7;
  v69 = a3;
  v70 = a5;
  v73 = v13;
  v13(&v88, a3, a5);
  v14 = v88;
  v15 = v89;
  v16 = v90;
  v17 = v91;
  v18 = *((_QWORD *)&v89 + 1);
  if (v91)
  {
    if (v91 == 1 && *(_QWORD *)(*((_QWORD *)&v89 + 1) + 16))
    {
      v18 = *(_QWORD *)(*((_QWORD *)&v89 + 1) + 32);
    }
    else
    {
      sub_21508C520(*((uint64_t *)&v89 + 1), v90, v91);
      if ((v20 & 1) != 0)
        v18 = 0;
      else
        v18 = v19;
    }
  }
  v21 = sub_21508C520(*((uint64_t *)&v15 + 1), v16, v17);
  v71 = &v64;
  v92 = v14;
  if ((v23 & 1) != 0)
    v24 = 0;
  else
    v24 = v22;
  v93 = v15;
  v94 = v16;
  v95 = v17;
  v96 = v18;
  v97 = v24;
  MEMORY[0x24BDAC7A8](v21);
  v25 = v69;
  v26 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(*((uint64_t *)&v15 + 1), v16, v17);
  v27 = sub_215048CD4((uint64_t)&v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v15 + 1), v16, v17);
  *(_QWORD *)&v81 = v27;
  sub_2150A40E0(sub_2150A1EA0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v15 + 1), v16, v17);
  v66 = v81;
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v77)(&v86, v25, v26);
  v28 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v28 + 2);
  if (v29)
  {
    v85 = MEMORY[0x24BEE4AF8];
    sub_215038C1C(0, v29, 0);
    v77 = v28;
    v30 = (uint64_t)(v28 + 32);
    v31 = v85;
    v32 = v66;
    do
    {
      sub_21501EE90(v30, (uint64_t)&v81);
      v34 = v83;
      v33 = v84;
      __swift_project_boxed_opaque_existential_1(&v81, v83);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v33 + 8) + 88))(v78, v34);
      v35 = v79;
      v36 = v80;
      __swift_project_boxed_opaque_existential_1(v78, v79);
      v38 = v83;
      v37 = v84;
      __swift_project_boxed_opaque_existential_1(&v81, v83);
      v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v37 + 8) + 48))(v38);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v36 + 32))(&v88, v39, v35, v36);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v78);
      sub_21501EA34((uint64_t)&v81);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038C1C(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v85;
      }
      v41 = *(_QWORD *)(v31 + 16);
      v40 = *(_QWORD *)(v31 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_215038C1C((char *)(v40 > 1), v41 + 1, 1);
        v31 = v85;
      }
      *(_QWORD *)(v31 + 16) = v41 + 1;
      v42 = v31 + 40 * v41;
      v43 = v88;
      v44 = v89;
      *(_QWORD *)(v42 + 64) = v90;
      *(_OWORD *)(v42 + 32) = v43;
      *(_OWORD *)(v42 + 48) = v44;
      v30 += 40;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    v26 = v70;
    v45 = v69;
  }
  else
  {
    v45 = v25;
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
    v32 = v66;
  }
  sub_215020C2C(v31, &v86);
  v72 = *(char **)(v32 + 16);
  if (v72)
  {
    v46 = 0;
    v71 = (uint64_t *)(v32 + 32);
    v47 = v86;
    while (1)
    {
      v48 = v71[(_QWORD)v46];
      v73(&v88, v45, v26);
      v49 = v88;
      v50 = v89;
      sub_21501EF2C(*((uint64_t *)&v89 + 1), v90, v91);
      v51 = *(_QWORD *)(v49 + 16);
      if (v51 != *((_QWORD *)v47 + 2))
        break;
      if (v51)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v46;
        v76 = *((_QWORD *)&v49 + 1);
        v75 = v50;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v47 = sub_21501E4D4((uint64_t)v47);
        v53 = 0;
        v54 = 0;
        while (1)
        {
          sub_21501EE90(v49 + v53 + 32, (uint64_t)&v81);
          v86 = v47;
          if (v54 >= *((_QWORD *)v47 + 2))
            break;
          ++v54;
          v55 = &v47[v53];
          v56 = v83;
          v57 = v84;
          v58 = __swift_project_boxed_opaque_existential_1(&v81, v83);
          v79 = v56;
          v80 = *(_QWORD *)(v57 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v78);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(boxed_opaque_existential_1, v58, v56);
          v60 = *((_QWORD *)v55 + 7);
          v61 = *((_QWORD *)v55 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v55 + 32), v60);
          (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v61 + 56))(v48, v78, v60, v61);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v78);
          sub_21501EA34((uint64_t)&v81);
          v47 = v86;
          v53 += 40;
          if (v51 == v54)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v26 = v70;
            v45 = v69;
            v46 = v77;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      if (++v46 == v72)
      {
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_release();
        goto LABEL_34;
      }
    }
    *(_QWORD *)&v81 = 0;
    *((_QWORD *)&v81 + 1) = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v78[0] = v51;
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v78[0] = *((_QWORD *)v47 + 2);
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151302EC();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_release();
    v47 = v86;
LABEL_34:
    v63 = v65;
    *v65 = v47;
    *(_OWORD *)(v63 + 1) = v87;
  }
  return result;
}

unint64_t sub_21509D744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA8368;
  if (!qword_254DA8368)
  {
    v1 = sub_21512F740();
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_254DA8368);
  }
  return result;
}

uint64_t sub_21509D78C(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_21509D7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, void (*a8)(__int128 *, char *, _QWORD, _QWORD, uint64_t)@<X7>, uint64_t a9@<X8>)
{
  char *v9;
  char *v13;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[5];
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v13 = v9;
  *(_QWORD *)&v81 = a3;
  *((_QWORD *)&v81 + 1) = a4;
  *(_QWORD *)&v82 = a5;
  swift_bridgeObjectRetain();
  v69 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_21501F2BC(a1, a2);
  if ((v20 & 0x8000000000000000) != 0)
    goto LABEL_36;
  v73 = *(_QWORD *)(a3 + 16);
  if (v20 >= v73)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v70 = v13;
  v66 = a9;
  sub_21501EE90(a3 + 32 + 40 * v20, (uint64_t)&v78);
  sub_2150459B0(&v78, (uint64_t)&v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
  __swift_instantiateConcreteTypeFromMangledName(a6);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EE90(a3 + 32, (uint64_t)&v81);
  v13 = (char *)*((_QWORD *)&v82 + 1);
  v21 = v83;
  __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
  v22 = *(_QWORD *)(v21 + 8);
  v23 = *(uint64_t (**)(char *, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v23(v13, v22);
  sub_21501EA34((uint64_t)&v81);
  if (v24 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v67 = a7;
  if (v24)
  {
    v25 = 0;
    v26 = 0;
  }
  else
  {
    v26 = 2;
    sub_21508C520(0, 0, 2);
    if ((v28 & 1) != 0)
      v25 = 0;
    else
      v25 = v27;
  }
  sub_21508C520(0, v24, v26);
  v84[0] = a3;
  v84[1] = v69;
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = v29;
  v84[2] = a5;
  v84[3] = 0;
  v84[4] = v24;
  v85 = v26;
  v86 = v25;
  v87 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(0, v24, v26);
  v32 = sub_215048CD4((uint64_t)v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v24, v26);
  *(_QWORD *)&v81 = v32;
  a8(&v81, v74, v75, *((_QWORD *)&v75 + 1), v67);
  if (v70)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_21501EF2C(0, v24, v26);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v24, v26);
  v65 = v81;
  v88 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v34 = v73;
  sub_215038C1C(0, v73, 0);
  v35 = v88;
  v36 = a3 + 32;
  do
  {
    sub_21501EE90(v36, (uint64_t)&v78);
    v38 = v79;
    v37 = v80;
    __swift_project_boxed_opaque_existential_1(&v78, v79);
    (*(void (**)(char **__return_ptr, uint64_t))(*(_QWORD *)(v37 + 8) + 88))(&v74, v38);
    v40 = v76;
    v39 = v77;
    __swift_project_boxed_opaque_existential_1(&v74, v76);
    v42 = v79;
    v41 = v80;
    __swift_project_boxed_opaque_existential_1(&v78, v79);
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v41 + 8) + 48))(v42);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v81, v43, v40, v39);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
    sub_21501EA34((uint64_t)&v78);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_215038C1C(0, *(_QWORD *)(v35 + 16) + 1, 1);
      v35 = v88;
    }
    v45 = *(_QWORD *)(v35 + 16);
    v44 = *(_QWORD *)(v35 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_215038C1C((char *)(v44 > 1), v45 + 1, 1);
      v35 = v88;
    }
    *(_QWORD *)(v35 + 16) = v45 + 1;
    v46 = v35 + 40 * v45;
    v47 = v81;
    v48 = v82;
    *(_QWORD *)(v46 + 64) = v83;
    *(_OWORD *)(v46 + 32) = v47;
    *(_OWORD *)(v46 + 48) = v48;
    v36 += 40;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
  sub_215020C2C(v35, &v74);
  v68 = *(_QWORD *)(v65 + 16);
  if (!v68)
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_release();
    v13 = v74;
LABEL_32:
    *(_QWORD *)v66 = v13;
    *(_OWORD *)(v66 + 8) = v75;
    return result;
  }
  v49 = 0;
  while (2)
  {
    v50 = *(_QWORD *)(v65 + 32 + 8 * v49);
    sub_21501EE90(a3 + 32, (uint64_t)&v81);
    v13 = (char *)*((_QWORD *)&v82 + 1);
    v51 = v83;
    __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
    v52 = *(_QWORD *)(v51 + 8);
    v53 = *(uint64_t (**)(char *, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = v53(v13, v52);
    sub_21501EA34((uint64_t)&v81);
    if (v54 < 0)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_21501EF2C(0, v54, 2 * (v54 == 0));
    v13 = v74;
    if (v73 == *((_QWORD *)v74 + 2))
    {
      v71 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_21501E4D4((uint64_t)v13);
      v55 = 0;
      v56 = 0;
      v72 = v71 + 1;
      do
      {
        sub_21501EE90(a3 + v55 + 32, (uint64_t)&v81);
        v74 = v13;
        if (v56 >= *((_QWORD *)v13 + 2))
        {
          __break(1u);
          goto LABEL_34;
        }
        ++v56;
        v57 = &v13[v55];
        v58 = (uint64_t)&v13[v55 + 32];
        v60 = *((_QWORD *)&v82 + 1);
        v59 = v83;
        v61 = __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
        v79 = v60;
        v80 = *(_QWORD *)(v59 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v78);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(boxed_opaque_existential_1, v61, v60);
        v63 = *((_QWORD *)v57 + 7);
        v64 = *((_QWORD *)v57 + 8);
        __swift_mutable_project_boxed_opaque_existential_1(v58, v63);
        (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v64 + 56))(v50, &v78, v63, v64);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
        sub_21501EA34((uint64_t)&v81);
        v13 = v74;
        v55 += 40;
      }
      while (v73 != v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = v72;
      if (v72 != v68)
        continue;
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_release();
      goto LABEL_32;
    }
    break;
  }
LABEL_38:
  *(_QWORD *)&v81 = 0;
  *((_QWORD *)&v81 + 1) = 0xE000000000000000;
  sub_215130178();
  sub_21512FB90();
  *(_QWORD *)&v78 = v73;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  *(_QWORD *)&v78 = *((_QWORD *)v13 + 2);
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509DF60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_21509D7A0(a1, a2, a3, a4, a5, &qword_253F0D450, (uint64_t)sub_2150AEAC4, (void (*)(__int128 *, char *, _QWORD, _QWORD, uint64_t))sub_2150ACC80, a6);
}

uint64_t sub_21509DF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_21509D7A0(a1, a2, a3, a4, a5, &qword_253F0D450, (uint64_t)sub_2150AFCCC, (void (*)(__int128 *, char *, _QWORD, _QWORD, uint64_t))sub_2150ACC80, a6);
}

uint64_t DataFrameProtocol.sorted<A>(on:by:)@<X0>(char **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  uint64_t v7;
  char *v11;
  void (*v12)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  Swift::Int v24;
  char *v25;
  uint64_t result;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v57;
  uint64_t v58;
  char **v59;
  uint64_t v60;
  Swift::Int v61;
  char **v62;
  void (*v63)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Swift::Int v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  char v90;
  _OWORD v91[2];
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v73 = a3;
  v72 = a2;
  v62 = a7;
  v11 = a1[1];
  v74 = *a1;
  v63 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a6 + 24);
  v63(&v87, a4, a6);
  v76 = v87;
  v77 = v88;
  v85 = v74;
  *(_QWORD *)&v86 = v11;
  v66 = a5;
  DataFrame.subscript.getter((uint64_t *)&v85, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = v80;
  v69 = v81;
  v64 = v82;
  v12 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a6 + 32);
  v71 = v7;
  v67 = a4;
  v68 = a6;
  v70 = v12;
  v12(&v87, a4, a6);
  v13 = v87;
  v14 = v88;
  v15 = v89;
  v16 = v90;
  v17 = *((_QWORD *)&v88 + 1);
  if (v90)
  {
    if (v90 == 1 && *(_QWORD *)(*((_QWORD *)&v88 + 1) + 16))
    {
      v17 = *(_QWORD *)(*((_QWORD *)&v88 + 1) + 32);
    }
    else
    {
      sub_21508C520(*((uint64_t *)&v88 + 1), v89, v90);
      if ((v19 & 1) != 0)
        v17 = 0;
      else
        v17 = v18;
    }
  }
  v20 = sub_21508C520(*((uint64_t *)&v14 + 1), v15, v16);
  v74 = (char *)&v60;
  v91[0] = v13;
  if ((v22 & 1) != 0)
    v23 = 0;
  else
    v23 = v21;
  v91[1] = v14;
  v92 = v15;
  v93 = v16;
  v94 = v17;
  v95 = v23;
  MEMORY[0x24BDAC7A8](v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(*((uint64_t *)&v14 + 1), v15, v16);
  v24 = sub_215048CD4((uint64_t)v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v14 + 1), v15, v16);
  v80 = v24;
  v25 = v75;
  sub_2150A40E0(sub_2150A4160);
  if (v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_21501EF2C(*((uint64_t *)&v14 + 1), v15, v16);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v60 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(*((uint64_t *)&v14 + 1), v15, v16);
    v27 = v80;
    v28 = v67;
    v29 = v68;
    v63((__int128 *)&v85, v67, v68);
    v30 = v85;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *((_QWORD *)v30 + 2);
    v61 = v27;
    if (v31)
    {
      v96 = MEMORY[0x24BEE4AF8];
      sub_215038C1C(0, v31, 0);
      v75 = v30;
      v32 = (uint64_t)(v30 + 32);
      v33 = v96;
      do
      {
        sub_21501EE90(v32, (uint64_t)&v80);
        v35 = v83;
        v34 = v84;
        __swift_project_boxed_opaque_existential_1(&v80, v83);
        (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v34 + 8) + 88))(&v76, v35);
        v36 = v78;
        v37 = v79;
        __swift_project_boxed_opaque_existential_1(&v76, v78);
        v39 = v83;
        v38 = v84;
        __swift_project_boxed_opaque_existential_1(&v80, v83);
        v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 8) + 48))(v39);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v37 + 32))(&v87, v40, v36, v37);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
        sub_21501EA34((uint64_t)&v80);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_215038C1C(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v96;
        }
        v42 = *(_QWORD *)(v33 + 16);
        v41 = *(_QWORD *)(v33 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_215038C1C((char *)(v41 > 1), v42 + 1, 1);
          v33 = v96;
        }
        *(_QWORD *)(v33 + 16) = v42 + 1;
        v43 = v33 + 40 * v42;
        v44 = v87;
        v45 = v88;
        *(_QWORD *)(v43 + 64) = v89;
        *(_OWORD *)(v43 + 32) = v44;
        *(_OWORD *)(v43 + 48) = v45;
        v32 += 40;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      v29 = v68;
      v28 = v67;
      v27 = v61;
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x24BEE4AF8];
    }
    sub_215020C2C(v33, &v85);
    v66 = *(_QWORD *)(v27 + 16);
    if (v66)
    {
      v46 = 0;
      v65 = v27 + 32;
      v47 = v85;
      while (1)
      {
        v75 = *(char **)(v65 + 8 * v46);
        v70(&v87, v28, v29);
        v74 = (char *)*((_QWORD *)&v87 + 1);
        v48 = v87;
        v73 = v88;
        sub_21501EF2C(*((uint64_t *)&v88 + 1), v89, v90);
        v49 = *(_QWORD *)(v48 + 16);
        if (v49 != *((_QWORD *)v47 + 2))
          break;
        if (v49)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v72 = v46;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v47 = sub_21501E4D4((uint64_t)v47);
          v51 = 0;
          v52 = 0;
          while (1)
          {
            sub_21501EE90(v48 + v51 + 32, (uint64_t)&v80);
            v85 = v47;
            if (v52 >= *((_QWORD *)v47 + 2))
              break;
            ++v52;
            v53 = v83;
            v54 = v84;
            v55 = __swift_project_boxed_opaque_existential_1(&v80, v83);
            v78 = v53;
            v79 = *(_QWORD *)(v54 + 8);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v76);
            (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(boxed_opaque_existential_1, v55, v53);
            v57 = *(_QWORD *)&v47[v51 + 56];
            v58 = *(_QWORD *)&v47[v51 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v47[v51 + 32], v57);
            (*(void (**)(char *, __int128 *, uint64_t, uint64_t))(v58 + 56))(v75, &v76, v57, v58);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v76);
            sub_21501EA34((uint64_t)&v80);
            v47 = v85;
            v51 += 40;
            if (v49 == v52)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v29 = v68;
              v28 = v67;
              v46 = v72;
              goto LABEL_25;
            }
          }
          __break(1u);
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_25:
        if (++v46 == v66)
        {
          swift_release();
          swift_bridgeObjectRelease();
          result = swift_release();
          goto LABEL_36;
        }
      }
      v80 = 0;
      v81 = 0xE000000000000000;
      sub_215130178();
      sub_21512FB90();
      *(_QWORD *)&v76 = v49;
      sub_2151303B8();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      *(_QWORD *)&v76 = *((_QWORD *)v47 + 2);
      sub_2151303B8();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      result = sub_2151302EC();
      __break(1u);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_release();
      v47 = v85;
LABEL_36:
      v59 = v62;
      *v62 = v47;
      *(_OWORD *)(v59 + 1) = v86;
    }
  }
  return result;
}

uint64_t sub_21509E8B8(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t DataFrameProtocol.sorted<A>(on:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char **a8@<X8>)
{
  unsigned __int8 v13;
  unsigned __int8 v15;
  uint64_t v16[2];
  _QWORD v17[2];

  v13 = *a3;
  ColumnID.init(_:_:)(a1, a2, v17);
  v16[0] = v17[0];
  v16[1] = v17[1];
  v15 = v13;
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:order:)(v16, &v15, a4, a5, a6, a7, a8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21509E96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD **v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, uint64_t, uint64_t);
  int v28;
  int v29;
  char v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v32;
  _BYTE *v33;
  char v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;

  v38 = a6;
  v9 = sub_21512F740();
  v41 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v40 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v39 = &v37[-v12];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA75C0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v37[-v20];
  if (a1 < 0)
    goto LABEL_20;
  v22 = (_QWORD **)(a5 + 16);
  swift_beginAccess();
  v23 = *(_QWORD **)(a5 + 16);
  if (!v23)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v23[1] <= a1)
    goto LABEL_20;
  sub_215099590(a1, v23, (uint64_t)v21);
  if (a2 < 0)
    goto LABEL_20;
  v24 = *v22;
  if (!*v22)
    goto LABEL_19;
  if (v24[1] <= a2)
  {
LABEL_20:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  sub_215099590(a2, v24, (uint64_t)v19);
  v25 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_21501EE48((uint64_t)v21, (uint64_t)v15);
  sub_21501EE48((uint64_t)v19, v25);
  v26 = v41;
  v27 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48);
  v28 = v27(v15, 1, v9);
  v29 = v27((_BYTE *)v25, 1, v9);
  if (v28 == 1)
  {
    if (v29 != 1)
      sub_215066908(v25);
    v30 = 0;
  }
  else if (v29 == 1)
  {
    sub_215066908((uint64_t)v15);
    v30 = 1;
  }
  else
  {
    v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 32);
    v32 = v39;
    v31(v39, v15, v9);
    v33 = v40;
    v31(v40, (_BYTE *)v25, v9);
    sub_21509D744();
    if ((v38 & 1) != 0)
      v34 = sub_21512F9BC();
    else
      v34 = sub_21512F9C8();
    v30 = v34;
    v35 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
    v35(v33, v9);
    v35(v32, v9);
  }
  sub_215066908((uint64_t)v19);
  sub_215066908((uint64_t)v21);
  return v30 & 1;
}

uint64_t sub_21509EC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;

  if ((a1 & 0x8000000000000000) == 0)
  {
    swift_beginAccess();
    v10 = *(_QWORD **)(a5 + 16);
    if (v10)
    {
      v11 = v10[1];
      if (v11 > a1)
      {
        v12 = sub_215099458(a1, *(_QWORD **)(a5 + 16), v11);
        if ((a2 & 0x8000000000000000) == 0)
        {
          v14 = v10[1];
          if (v14 > a2)
          {
            v15 = v12;
            v16 = v13;
            v17 = sub_215099458(a2, v10, v14);
            if (v16)
            {
              if (!v18)
              {
                v19 = 1;
LABEL_20:
                swift_bridgeObjectRelease();
                return v19 & 1;
              }
              if ((a6 & 1) != 0)
              {
                if (v17 != v15 || v18 != v16)
                  goto LABEL_19;
              }
              else if (v15 != v17 || v16 != v18)
              {
LABEL_19:
                v19 = sub_21513043C();
                swift_bridgeObjectRelease();
                goto LABEL_20;
              }
              swift_bridgeObjectRelease();
            }
            else if (!v18)
            {
              v19 = 0;
              return v19 & 1;
            }
            v19 = 0;
            goto LABEL_20;
          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_21509EE34(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a6;
  v35 = a10;
  v36 = a7;
  v34 = a9;
  v32 = a8;
  v16 = sub_215130064();
  v37 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v31 - v20;
  v22 = *a1;
  v31 = *a2;
  v38 = a3;
  v39 = a4;
  v40 = a5;
  v25 = type metadata accessor for Column(0, a8, v23, v24);
  Column.subscript.getter(v22, v25, (uint64_t)v21);
  v38 = a3;
  v39 = a4;
  v40 = a5;
  Column.subscript.getter(v31, v25, (uint64_t)v19);
  LOBYTE(a2) = v33 & 1;
  v26 = swift_allocObject();
  v27 = v32;
  *(_QWORD *)(v26 + 16) = v36;
  *(_QWORD *)(v26 + 24) = v27;
  v28 = v35;
  *(_QWORD *)(v26 + 32) = v34;
  *(_QWORD *)(v26 + 40) = v28;
  *(_BYTE *)(v26 + 48) = (_BYTE)a2;
  LOBYTE(a2) = sub_21509EFE8((uint64_t)v19, (uint64_t (*)(char *, char *))sub_2150B096C, v26, v16);
  v29 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29(v19, v16);
  v29(v21, v16);
  swift_release();
  return a2 & 1;
}

uint64_t sub_21509EFE8(uint64_t a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  char v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t (*v30)(char *, char *);
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a3;
  v30 = a2;
  v33 = a1;
  v6 = *(_QWORD *)(a4 + 16);
  v7 = *(_QWORD **)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = (char *)&v30 - v14;
  v16 = (char *)&v30 + *(int *)(v13 + 48) - v14;
  v17 = *(_QWORD *)(a4 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v30 - v14, v4, a4);
  v18(v16, v33, a4);
  v19 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  v20 = v19(v15, 1, v6);
  v21 = v19(v16, 1, v6);
  v22 = v20 != 1;
  if (v20 != 1)
  {
    v23 = v11;
    v24 = v31;
    if (v21 != 1)
    {
      v25 = (void (*)(char *, char *, uint64_t))v7[4];
      v26 = v23;
      v25(v23, v15, v6);
      v27 = v24;
      v25(v24, v16, v6);
      v22 = v30(v26, v24);
      v28 = (void (*)(char *, uint64_t))v7[1];
      v28(v27, v6);
      v28(v26, v6);
      return v22 & 1;
    }
    v16 = v15;
    goto LABEL_6;
  }
  if (v21 != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, a4);
    return v22 & 1;
  }
  v22 = 0;
  return v22 & 1;
}

uint64_t DataFrameProtocol.sorted<A, B>(on:_:order:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  void (*v15)(__int128 *__return_ptr, uint64_t, uint64_t);
  void (*v16)(_QWORD *__return_ptr, _QWORD, _QWORD);
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  _QWORD v66[4];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v77;
  void (*v78)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v79;
  void (*v80)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v77 = a8;
  v79 = a6;
  v66[0] = a9;
  v74 = a10;
  v13 = *a1;
  v14 = a1[1];
  v76 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))a2;
  v73 = *(_QWORD *)(a2 + 8);
  LODWORD(v67) = *a3;
  v15 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a7 + 24);
  v15(&v95, a4, a7);
  v84 = v95;
  v85 = v96;
  v80 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v13;
  v81 = v14;
  v75 = a5;
  DataFrame.subscript.getter((uint64_t *)&v80, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = *((_QWORD *)&v91 + 1);
  v66[3] = v91;
  v70 = v92;
  v78 = (void (*)(char **__return_ptr, uint64_t, uint64_t))v15;
  v15(&v95, a4, a7);
  v84 = v95;
  v85 = v96;
  v80 = v76;
  v81 = v73;
  DataFrame.subscript.getter((uint64_t *)&v80, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v69 = *((_QWORD *)&v91 + 1);
  v66[1] = v91;
  v68 = v92;
  v16 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(a7 + 32);
  v72 = a4;
  v73 = a7;
  v76 = v16;
  v16(&v91, a4, a7);
  v17 = v91;
  v18 = v92;
  v19 = v93;
  v20 = v94;
  v21 = *((_QWORD *)&v92 + 1);
  if (v94)
  {
    if (v94 == 1 && *(_QWORD *)(*((_QWORD *)&v92 + 1) + 16))
    {
      v21 = *(_QWORD *)(*((_QWORD *)&v92 + 1) + 32);
    }
    else
    {
      sub_21508C520(*((uint64_t *)&v92 + 1), v93, v94);
      if ((v23 & 1) != 0)
        v21 = 0;
      else
        v21 = v22;
    }
  }
  v24 = sub_21508C520(*((uint64_t *)&v18 + 1), v19, v20);
  v66[2] = v66;
  v95 = v17;
  if ((v26 & 1) != 0)
    v27 = 0;
  else
    v27 = v25;
  v96 = v18;
  v97 = v19;
  v98 = v20;
  v99 = v21;
  v100 = v27;
  MEMORY[0x24BDAC7A8](v24);
  v28 = v72;
  v29 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(*((uint64_t *)&v18 + 1), v19, v20);
  v30 = sub_215048CD4((uint64_t)&v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v18 + 1), v19, v20);
  *(_QWORD *)&v84 = v30;
  sub_2150A40E0(sub_2150A4194);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v18 + 1), v19, v20);
  v31 = v84;
  v78(&v89, v28, v29);
  v32 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = *((_QWORD *)v32 + 2);
  v67 = v31;
  if (v33)
  {
    v88 = MEMORY[0x24BEE4AF8];
    sub_215038C1C(0, v33, 0);
    v34 = (uint64_t)(v32 + 32);
    v35 = v88;
    do
    {
      sub_21501EE90(v34, (uint64_t)&v84);
      v37 = v86;
      v36 = v87;
      __swift_project_boxed_opaque_existential_1(&v84, v86);
      (*(void (**)(void (**__return_ptr)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t))(*(_QWORD *)(v36 + 8) + 88))(&v80, v37);
      v38 = v82;
      v39 = v83;
      __swift_project_boxed_opaque_existential_1(&v80, v82);
      v41 = v86;
      v40 = v87;
      __swift_project_boxed_opaque_existential_1(&v84, v86);
      v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 48))(v41);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v91, v42, v38, v39);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
      sub_21501EA34((uint64_t)&v84);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038C1C(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v35 = v88;
      }
      v44 = *(_QWORD *)(v35 + 16);
      v43 = *(_QWORD *)(v35 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_215038C1C((char *)(v43 > 1), v44 + 1, 1);
        v35 = v88;
      }
      *(_QWORD *)(v35 + 16) = v44 + 1;
      v45 = v35 + 40 * v44;
      v46 = v91;
      v47 = v92;
      *(_QWORD *)(v45 + 64) = v93;
      *(_OWORD *)(v45 + 32) = v46;
      *(_OWORD *)(v45 + 48) = v47;
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v29 = v73;
    v48 = v72;
    v31 = v67;
  }
  else
  {
    v48 = v28;
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
  }
  sub_215020C2C(v35, &v89);
  v75 = *(_QWORD *)(v31 + 16);
  if (v75)
  {
    v49 = 0;
    v74 = v31 + 32;
    v50 = v89;
    while (1)
    {
      v51 = *(_QWORD *)(v74 + 8 * v49);
      v76(&v91, v48, v29);
      v52 = v91;
      v53 = v92;
      sub_21501EF2C(*((uint64_t *)&v92 + 1), v93, v94);
      v54 = *(_QWORD *)(v52 + 16);
      if (v54 != *((_QWORD *)v50 + 2))
        break;
      if (v54)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v79 = v49;
        v78 = (void (*)(char **__return_ptr, uint64_t, uint64_t))*((_QWORD *)&v52 + 1);
        v77 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v50 = sub_21501E4D4((uint64_t)v50);
        v56 = 0;
        v57 = 0;
        while (1)
        {
          sub_21501EE90(v52 + v56 + 32, (uint64_t)&v84);
          v89 = v50;
          if (v57 >= *((_QWORD *)v50 + 2))
            break;
          ++v57;
          v58 = v86;
          v59 = v87;
          v60 = __swift_project_boxed_opaque_existential_1(&v84, v86);
          v82 = v58;
          v83 = *(_QWORD *)(v59 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v80);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(boxed_opaque_existential_1, v60, v58);
          v62 = *(_QWORD *)&v50[v56 + 56];
          v63 = *(_QWORD *)&v50[v56 + 64];
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v50[v56 + 32], v62);
          (*(void (**)(uint64_t, void (**)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t, uint64_t))(v63 + 56))(v51, &v80, v62, v63);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v80);
          sub_21501EA34((uint64_t)&v84);
          v50 = v89;
          v56 += 40;
          if (v54 == v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v29 = v73;
            v48 = v72;
            v49 = v79;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      if (++v49 == v75)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_34;
      }
    }
    *(_QWORD *)&v84 = 0;
    *((_QWORD *)&v84 + 1) = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v80 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v54;
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v80 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))*((_QWORD *)v50 + 2);
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151302EC();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v50 = v89;
LABEL_34:
    swift_release();
    result = swift_bridgeObjectRelease();
    v65 = v66[0];
    *(_QWORD *)v66[0] = v50;
    *(_OWORD *)(v65 + 8) = v90;
  }
  return result;
}

uint64_t sub_21509FB68(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t TupleTypeMetadata2;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v96 = a8;
  v95 = a7;
  v113 = a6;
  v122 = a5;
  v117 = a14;
  v118 = a15;
  v115 = a12;
  v116 = a13;
  v114 = a10;
  v100 = sub_215130064();
  v99 = *(_QWORD *)(v100 - 8);
  v19 = MEMORY[0x24BDAC7A8](v100);
  v98 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v97 = (uint64_t)&v94 - v22;
  v121 = *(_QWORD *)(a11 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v94 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_215130064();
  v108 = v24;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v101 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v25 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v109 = (char *)&v94 - v26;
  v119 = *(_QWORD *)(v24 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v104 = (uint64_t)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v103 = (uint64_t)&v94 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v110 = (char *)&v94 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v107 = (uint64_t)&v94 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v94 - v35;
  v37 = *a1;
  v38 = *a2;
  v123 = a3;
  v124 = a4;
  v39 = a4;
  v40 = v122;
  v125 = v122;
  v43 = type metadata accessor for Column(0, a11, v41, v42);
  v111 = v37;
  Column.subscript.getter(v37, v43, (uint64_t)v36);
  v44 = a3;
  v45 = v107;
  v105 = v44;
  v123 = v44;
  v124 = v39;
  v106 = v39;
  v46 = v40;
  v47 = v108;
  v125 = v46;
  v112 = v38;
  v102 = v43;
  v48 = v43;
  v49 = v119;
  Column.subscript.getter(v38, v48, v107);
  v50 = v109;
  v51 = &v109[*(int *)(TupleTypeMetadata2 + 48)];
  v52 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v52(v109, v36, v47);
  v52(v51, (char *)v45, v47);
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
  v126 = a11;
  if (v53(v50, 1, a11) != 1)
  {
    v52(v110, v50, v47);
    if (v53(v51, 1, v126) != 1)
    {
      v58 = v121;
      v59 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
      v60 = v94;
      TupleTypeMetadata2 = (uint64_t)v36;
      v61 = v126;
      v59(v94, v51, v126);
      v62 = v117;
      v63 = v110;
      v64 = sub_21512FA58();
      v65 = *(void (**)(char *, uint64_t))(v58 + 8);
      v66 = v60;
      v57 = v62;
      v65(v66, v61);
      v54 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v54(v45, v47);
      v54(TupleTypeMetadata2, v47);
      v65(v63, v61);
      v54((uint64_t)v50, v47);
      if ((v64 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v81 = v105;
      v82 = v106;
      v123 = v105;
      v124 = v106;
      v83 = v122;
      v125 = v122;
      v84 = v103;
      v85 = v57;
      v86 = v102;
      Column.subscript.getter(v111, v102, v103);
      v123 = v81;
      v124 = v82;
      v125 = v83;
      v87 = v104;
      Column.subscript.getter(v112, v86, v104);
      v88 = v113 & 1;
      v89 = swift_allocObject();
      v90 = v126;
      *(_QWORD *)(v89 + 16) = v114;
      *(_QWORD *)(v89 + 24) = v90;
      v91 = v116;
      *(_QWORD *)(v89 + 32) = v115;
      *(_QWORD *)(v89 + 40) = v91;
      v92 = v118;
      *(_QWORD *)(v89 + 48) = v85;
      *(_QWORD *)(v89 + 56) = v92;
      *(_BYTE *)(v89 + 64) = v88;
      v79 = sub_21509EFE8(v87, (uint64_t (*)(char *, char *))sub_2150B0920, v89, v47);
      v54(v87, v47);
      v54(v84, v47);
      goto LABEL_10;
    }
    v54 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v54(v45, v47);
    v54((uint64_t)v36, v47);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v110, v126);
LABEL_6:
    v57 = v117;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v50, TupleTypeMetadata2);
    goto LABEL_9;
  }
  v54 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v54(v45, v47);
  v54((uint64_t)v36, v47);
  if (v53(v51, 1, v126) != 1)
    goto LABEL_6;
  v54((uint64_t)v50, v47);
  v57 = v117;
LABEL_8:
  v67 = v95;
  v68 = v96;
  v123 = v95;
  v124 = v96;
  v125 = a9;
  v69 = v115;
  v70 = type metadata accessor for Column(0, v115, v55, v56);
  v71 = v97;
  Column.subscript.getter(v111, v70, v97);
  v123 = v67;
  v124 = v68;
  v125 = a9;
  v72 = v98;
  Column.subscript.getter(v112, v70, v98);
  v73 = v113 & 1;
  v74 = swift_allocObject();
  v75 = v126;
  *(_QWORD *)(v74 + 16) = v114;
  *(_QWORD *)(v74 + 24) = v75;
  v76 = v116;
  *(_QWORD *)(v74 + 32) = v69;
  *(_QWORD *)(v74 + 40) = v76;
  v77 = v118;
  *(_QWORD *)(v74 + 48) = v57;
  *(_QWORD *)(v74 + 56) = v77;
  *(_BYTE *)(v74 + 64) = v73;
  v78 = v100;
  v79 = sub_21509EFE8(v72, (uint64_t (*)(char *, char *))sub_2150B08D4, v74, v100);
  v80 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  v80(v72, v78);
  v80(v71, v78);
LABEL_10:
  swift_release();
  return v79 & 1;
}

uint64_t DataFrameProtocol.sorted<A, B, C>(on:_:_:order:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char **a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  void (*v16)(__int128 *__return_ptr, uint64_t, uint64_t);
  void (*v17)(_QWORD *__return_ptr, _QWORD, _QWORD);
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  char **v66;
  uint64_t v67;
  char **v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v87;
  void (*v88)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  char v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;

  v87 = a7;
  v89 = a6;
  v68 = a8;
  v84 = a12;
  v75 = a11;
  v74 = a10;
  v14 = *a1;
  v15 = a1[1];
  v86 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))a2;
  v82 = *(_QWORD *)(a2 + 8);
  v73 = *a3;
  v16 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a9 + 24);
  v83 = a4;
  v16(&v105, a4, a9);
  v94 = v105;
  v95 = v106;
  v90 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v14;
  v91 = v15;
  v85 = a5;
  DataFrame.subscript.getter((uint64_t *)&v90, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v81 = *((_QWORD *)&v101 + 1);
  v72 = v101;
  v79 = v102;
  v16(&v105, a4, a9);
  v94 = v105;
  v95 = v106;
  v90 = v86;
  v91 = v82;
  DataFrame.subscript.getter((uint64_t *)&v90, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v80 = *((_QWORD *)&v101 + 1);
  v71 = v101;
  v78 = v102;
  v88 = (void (*)(char **__return_ptr, uint64_t, uint64_t))v16;
  v16(&v105, v83, a9);
  v94 = v105;
  v95 = v106;
  v90 = v86;
  v91 = v82;
  DataFrame.subscript.getter((uint64_t *)&v90, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v77 = *((_QWORD *)&v101 + 1);
  v69 = v101;
  v76 = v102;
  v17 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(a9 + 32);
  v82 = a9;
  v86 = v17;
  v17(&v101, v83, a9);
  v18 = v101;
  v19 = v102;
  v20 = v103;
  v21 = v104;
  v22 = *((_QWORD *)&v102 + 1);
  if (v104)
  {
    if (v104 == 1 && *(_QWORD *)(*((_QWORD *)&v102 + 1) + 16))
    {
      v22 = *(_QWORD *)(*((_QWORD *)&v102 + 1) + 32);
    }
    else
    {
      sub_21508C520(*((uint64_t *)&v102 + 1), v103, v104);
      if ((v24 & 1) != 0)
        v22 = 0;
      else
        v22 = v23;
    }
  }
  v25 = sub_21508C520(*((uint64_t *)&v19 + 1), v20, v21);
  v70 = &v67;
  v105 = v18;
  if ((v27 & 1) != 0)
    v28 = 0;
  else
    v28 = v26;
  v106 = v19;
  v107 = v20;
  v108 = v21;
  v109 = v22;
  v110 = v28;
  MEMORY[0x24BDAC7A8](v25);
  v29 = v83;
  v30 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(*((uint64_t *)&v19 + 1), v20, v21);
  v31 = sub_215048CD4((uint64_t)&v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v19 + 1), v20, v21);
  *(_QWORD *)&v94 = v31;
  sub_2150A40E0(sub_2150A41E4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(*((uint64_t *)&v19 + 1), v20, v21);
  v75 = v94;
  v88(&v99, v29, v30);
  v32 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = *((_QWORD *)v32 + 2);
  if (v33)
  {
    v98 = MEMORY[0x24BEE4AF8];
    sub_215038C1C(0, v33, 0);
    v34 = (uint64_t)(v32 + 32);
    v35 = v98;
    do
    {
      sub_21501EE90(v34, (uint64_t)&v94);
      v37 = v96;
      v36 = v97;
      __swift_project_boxed_opaque_existential_1(&v94, v96);
      (*(void (**)(void (**__return_ptr)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t))(*(_QWORD *)(v36 + 8) + 88))(&v90, v37);
      v38 = v92;
      v39 = v93;
      __swift_project_boxed_opaque_existential_1(&v90, v92);
      v41 = v96;
      v40 = v97;
      __swift_project_boxed_opaque_existential_1(&v94, v96);
      v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 48))(v41);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v101, v42, v38, v39);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
      sub_21501EA34((uint64_t)&v94);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038C1C(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v35 = v98;
      }
      v44 = *(_QWORD *)(v35 + 16);
      v43 = *(_QWORD *)(v35 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_215038C1C((char *)(v43 > 1), v44 + 1, 1);
        v35 = v98;
      }
      *(_QWORD *)(v35 + 16) = v44 + 1;
      v45 = v35 + 40 * v44;
      v46 = v101;
      v47 = v102;
      *(_QWORD *)(v45 + 64) = v103;
      *(_OWORD *)(v45 + 32) = v46;
      *(_OWORD *)(v45 + 48) = v47;
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v29 = v83;
    v48 = v82;
  }
  else
  {
    v48 = v30;
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
  }
  sub_215020C2C(v35, &v99);
  v85 = *(_QWORD *)(v75 + 16);
  if (v85)
  {
    v49 = 0;
    v84 = v75 + 32;
    v50 = v99;
    while (1)
    {
      v51 = *(_QWORD *)(v84 + 8 * v49);
      v86(&v101, v29, v48);
      v52 = v101;
      v53 = v102;
      sub_21501EF2C(*((uint64_t *)&v102 + 1), v103, v104);
      v54 = *(_QWORD *)(v52 + 16);
      if (v54 != *((_QWORD *)v50 + 2))
        break;
      if (v54)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v89 = v49;
        v88 = (void (*)(char **__return_ptr, uint64_t, uint64_t))*((_QWORD *)&v52 + 1);
        v87 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v50 = sub_21501E4D4((uint64_t)v50);
        v56 = 0;
        v57 = 0;
        while (1)
        {
          sub_21501EE90(v52 + v56 + 32, (uint64_t)&v94);
          v99 = v50;
          if (v57 >= *((_QWORD *)v50 + 2))
            break;
          ++v57;
          v58 = &v50[v56];
          v59 = v96;
          v60 = v97;
          v61 = __swift_project_boxed_opaque_existential_1(&v94, v96);
          v92 = v59;
          v93 = *(_QWORD *)(v60 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v90);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(boxed_opaque_existential_1, v61, v59);
          v63 = *((_QWORD *)v58 + 7);
          v64 = *((_QWORD *)v58 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v58 + 32), v63);
          (*(void (**)(uint64_t, void (**)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t, uint64_t))(v64 + 56))(v51, &v90, v63, v64);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          sub_21501EA34((uint64_t)&v94);
          v50 = v99;
          v56 += 40;
          if (v54 == v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v29 = v83;
            v48 = v82;
            v49 = v89;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      if (++v49 == v85)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_34;
      }
    }
    *(_QWORD *)&v94 = 0;
    *((_QWORD *)&v94 + 1) = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v90 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v54;
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v90 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))*((_QWORD *)v50 + 2);
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151302EC();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v50 = v99;
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_bridgeObjectRelease();
    v66 = v68;
    *v68 = v50;
    *(_OWORD *)(v66 + 1) = v100;
  }
  return result;
}

uint64_t sub_2150A0C68(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, char *a5, int a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v87;
  char v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  BOOL v106;
  char *v107;
  char *v108;
  char *v109;
  unsigned int v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char v114;
  void (*v115)(char *, uint64_t);
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t TupleTypeMetadata2;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;

  v158 = a8;
  v157 = a7;
  v165 = a6;
  v181 = a5;
  v174 = a19;
  v175 = a18;
  v168 = a17;
  v169 = a20;
  v166 = a13;
  v167 = a16;
  v150 = *(_QWORD *)(a15 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v144 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = v25;
  v26 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v146 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v27 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v164 = (char *)&v142 - v28;
  v151 = v26;
  v154 = *(_QWORD *)(v26 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v147 = (uint64_t)&v142 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v148 = (uint64_t)&v142 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v145 = (char *)&v142 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v149 = (uint64_t)&v142 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v156 = (uint64_t)&v142 - v38;
  v172 = *(_QWORD *)(a14 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v152 = (char *)&v142 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_215130064();
  v186 = v40;
  v178 = swift_getTupleTypeMetadata2();
  v153 = *(_QWORD *)(v178 - 8);
  v41 = MEMORY[0x24BDAC7A8](v178);
  v173 = (char *)&v142 - v42;
  v179 = *(char **)(v40 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v161 = (uint64_t)&v142 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v160 = (uint64_t)&v142 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v171 = (char *)&v142 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v177 = (uint64_t)&v142 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v142 - v51;
  v53 = *a1;
  v182 = *a2;
  v183 = a3;
  v54 = a4;
  v184 = a4;
  v55 = v181;
  v185 = v181;
  v58 = type metadata accessor for Column(0, a14, v56, v57);
  v176 = v53;
  Column.subscript.getter(v53, v58, (uint64_t)v52);
  v162 = a3;
  v183 = a3;
  v184 = v54;
  v59 = v173;
  v60 = v186;
  v163 = v54;
  v61 = v177;
  v185 = v55;
  v159 = v58;
  v62 = v58;
  v63 = v179;
  Column.subscript.getter(v182, v62, v177);
  v64 = &v59[*(int *)(v178 + 48)];
  v65 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v63 + 2);
  v170 = v52;
  v65(v59, v52, v60);
  v65(v64, (char *)v61, v60);
  v66 = v172;
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48);
  if (v67(v59, 1, a14) == 1)
  {
    v68 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v63 + 1);
    v69 = v186;
    v68(v61, v186);
    v68((uint64_t)v170, v69);
    if (v67(v64, 1, a14) == 1)
    {
      v68((uint64_t)v59, v186);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v72 = v152;
  v65(v171, v59, v186);
  if (v67(v64, 1, a14) == 1)
  {
    v68 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v179 + 1);
    v73 = v186;
    v68(v177, v186);
    v68((uint64_t)v170, v73);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v171, a14);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v153 + 8))(v59, v178);
LABEL_7:
    v74 = v162;
    v75 = v163;
    v183 = v162;
    v184 = v163;
    v76 = v181;
    v185 = v181;
    v77 = v160;
    v78 = v159;
    Column.subscript.getter(v176, v159, v160);
    v183 = v74;
    v184 = v75;
    v185 = v76;
    v79 = v161;
    Column.subscript.getter(v182, v78, v161);
    v80 = v165 & 1;
    v81 = swift_allocObject();
    *(_QWORD *)(v81 + 16) = v166;
    *(_QWORD *)(v81 + 24) = a14;
    v82 = v167;
    *(_QWORD *)(v81 + 32) = v180;
    *(_QWORD *)(v81 + 40) = v82;
    v83 = v175;
    *(_QWORD *)(v81 + 48) = v168;
    *(_QWORD *)(v81 + 56) = v83;
    v84 = v169;
    *(_QWORD *)(v81 + 64) = v174;
    *(_QWORD *)(v81 + 72) = v84;
    *(_BYTE *)(v81 + 80) = v80;
    v85 = v186;
    v86 = sub_21509EFE8(v79, (uint64_t (*)(char *, char *))sub_2150B0888, v81, v186);
    v68(v79, v85);
    v68(v77, v85);
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v72, v64, a14);
  v87 = v171;
  v88 = sub_21512FA58();
  v89 = *(void (**)(char *, uint64_t))(v66 + 8);
  v89(v72, a14);
  v68 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v179 + 1);
  v90 = v186;
  v68(v177, v186);
  v68((uint64_t)v170, v90);
  v89(v87, a14);
  v68((uint64_t)v59, v90);
  if ((v88 & 1) == 0)
    goto LABEL_7;
LABEL_9:
  v143 = a14;
  v91 = v157;
  v92 = v158;
  v183 = v157;
  v184 = v158;
  v185 = a9;
  v93 = v180;
  v94 = type metadata accessor for Column(0, v180, v70, v71);
  v95 = v156;
  Column.subscript.getter(v176, v94, v156);
  v183 = v91;
  v184 = v92;
  v179 = a9;
  v185 = a9;
  v96 = v149;
  v186 = v94;
  Column.subscript.getter(v182, v94, v149);
  v97 = v164;
  v98 = &v164[*(int *)(TupleTypeMetadata2 + 48)];
  v99 = v154;
  v100 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
  v101 = v151;
  v100(v164, v95, v151);
  v181 = v98;
  v100(v98, v96, v101);
  v102 = v150;
  v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
  if (v103(v97, 1, v93) == 1)
  {
    v104 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v104(v96, v101);
    v104(v95, v101);
    v105 = v180;
    v106 = v103(v181, 1, v180) == 1;
    v107 = v164;
    if (!v106)
      goto LABEL_15;
    v104((uint64_t)v164, v101);
    goto LABEL_17;
  }
  v108 = v145;
  v100(v145, (uint64_t)v164, v101);
  v109 = v181;
  v110 = v103(v181, 1, v180);
  v111 = v154;
  if (v110 == 1)
  {
    v104 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
    v104(v96, v101);
    v104(v156, v101);
    v105 = v180;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v108, v180);
    v107 = v164;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v146 + 8))(v107, TupleTypeMetadata2);
    goto LABEL_18;
  }
  v112 = v144;
  v113 = v109;
  v105 = v180;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v144, v113, v180);
  v114 = sub_21512FA58();
  v115 = *(void (**)(char *, uint64_t))(v102 + 8);
  v115(v112, v105);
  v104 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
  v104(v96, v101);
  v104(v156, v101);
  v115(v108, v105);
  v104((uint64_t)v164, v101);
  if ((v114 & 1) != 0)
  {
LABEL_17:
    v183 = a10;
    v184 = a11;
    v185 = a12;
    v116 = v104;
    v117 = v105;
    v118 = v148;
    v119 = v186;
    Column.subscript.getter(v176, v186, v148);
    v183 = a10;
    v184 = a11;
    v185 = a12;
    v120 = v147;
    Column.subscript.getter(v182, v119, v147);
    v121 = v165 & 1;
    v122 = swift_allocObject();
    v123 = v143;
    *(_QWORD *)(v122 + 16) = v166;
    *(_QWORD *)(v122 + 24) = v123;
    v124 = v167;
    *(_QWORD *)(v122 + 32) = v117;
    *(_QWORD *)(v122 + 40) = v124;
    v125 = v175;
    *(_QWORD *)(v122 + 48) = v168;
    *(_QWORD *)(v122 + 56) = v125;
    v126 = v169;
    *(_QWORD *)(v122 + 64) = v174;
    *(_QWORD *)(v122 + 72) = v126;
    *(_BYTE *)(v122 + 80) = v121;
    v86 = sub_21509EFE8(v120, (uint64_t (*)(char *, char *))sub_2150B0828, v122, v101);
    v116(v120, v101);
    v116(v118, v101);
    goto LABEL_20;
  }
LABEL_18:
  v127 = v157;
  v128 = v158;
  v183 = v157;
  v184 = v158;
  v129 = v179;
  v185 = v179;
  v130 = v104;
  v131 = v105;
  v132 = v148;
  v133 = v186;
  Column.subscript.getter(v176, v186, v148);
  v183 = v127;
  v184 = v128;
  v185 = v129;
  v134 = v147;
  Column.subscript.getter(v182, v133, v147);
  v135 = v165 & 1;
  v136 = swift_allocObject();
  v137 = v143;
  *(_QWORD *)(v136 + 16) = v166;
  *(_QWORD *)(v136 + 24) = v137;
  v138 = v167;
  *(_QWORD *)(v136 + 32) = v131;
  *(_QWORD *)(v136 + 40) = v138;
  v139 = v175;
  *(_QWORD *)(v136 + 48) = v168;
  *(_QWORD *)(v136 + 56) = v139;
  v140 = v169;
  *(_QWORD *)(v136 + 64) = v174;
  *(_QWORD *)(v136 + 72) = v140;
  *(_BYTE *)(v136 + 80) = v135;
  v86 = sub_21509EFE8(v134, (uint64_t (*)(char *, char *))sub_2150B0828, v136, v101);
  v130(v134, v101);
  v130(v132, v101);
LABEL_20:
  swift_release();
  return v86 & 1;
}

uint64_t DataFrameProtocol.sorted<A>(on:_:by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char **a8@<X8>)
{
  char *v15[2];
  _QWORD v16[2];

  ColumnID.init(_:_:)(a1, a2, v16);
  v15[0] = (char *)v16[0];
  v15[1] = (char *)v16[1];
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:by:)(v15, a3, a4, a5, a6, a7, a8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A17FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(char *, char *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a7;
  v27 = a5;
  v28 = a6;
  v13 = sub_215130064();
  v29 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v26 - v17;
  v19 = *a1;
  v26 = *a2;
  v31 = a3;
  v32 = a4;
  v20 = v27;
  v33 = v27;
  v23 = type metadata accessor for Column(0, a9, v21, v22);
  Column.subscript.getter(v19, v23, (uint64_t)v18);
  v31 = a3;
  v32 = a4;
  v33 = v20;
  Column.subscript.getter(v26, v23, (uint64_t)v16);
  LOBYTE(a3) = sub_21509EFE8((uint64_t)v16, v28, v30, v13);
  v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v16, v13);
  v24(v18, v13);
  return a3 & 1;
}

Swift::Void __swiftcall DataFrame.sort(on:order:)(Swift::String on, TabularData::Order order)
{
  uint64_t *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  sub_21509C064(on._countAndFlagsBits, (uint64_t)on._object, *(_BYTE *)order, *v2, v2[1], v2[2], (uint64_t)&v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v5;
  *(_OWORD *)v2 = v4;
  v2[2] = v3;
}

uint64_t DataFrame.sort<A>(on:_:order:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v8;
  unsigned __int8 v10;
  uint64_t v11[2];
  _QWORD v12[2];

  v8 = *a4;
  ColumnID.init(_:_:)(a1, a2, v12);
  v11[0] = v12[0];
  v11[1] = v12[1];
  v10 = v8;
  swift_bridgeObjectRetain();
  DataFrame.sort<A>(on:order:)(v11, &v10, a5, a6);
  return swift_bridgeObjectRelease();
}

double DataFrame.sort<A>(on:order:)(uint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  unsigned __int8 v12;
  uint64_t v13[5];
  __int128 v14;
  uint64_t v15;

  v5 = *a1;
  v6 = a1[1];
  v7 = *a2;
  v8 = v4[1];
  v9 = v4[2];
  v13[2] = *v4;
  v13[3] = v8;
  v13[4] = v9;
  v13[0] = v5;
  v13[1] = v6;
  v12 = v7;
  DataFrameProtocol.sorted<A>(on:order:)(v13, &v12, (uint64_t)&type metadata for DataFrame, a3, (uint64_t)&protocol witness table for DataFrame, a4, (char **)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v15;
  result = *(double *)&v14;
  *(_OWORD *)v4 = v14;
  v4[2] = v10;
  return result;
}

double DataFrame.sort<A, B>(on:_:order:)(uint64_t *a1, uint64_t *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  unsigned __int8 v17;
  _QWORD v18[2];
  uint64_t v19[5];
  __int128 v20;
  uint64_t v21;

  v8 = *a1;
  v9 = a1[1];
  v10 = *a2;
  v11 = a2[1];
  v12 = *a3;
  v13 = v7[1];
  v14 = v7[2];
  v19[2] = *v7;
  v19[3] = v13;
  v19[4] = v14;
  v19[0] = v8;
  v19[1] = v9;
  v18[0] = v10;
  v18[1] = v11;
  v17 = v12;
  DataFrameProtocol.sorted<A, B>(on:_:order:)(v19, (uint64_t)v18, &v17, (uint64_t)&type metadata for DataFrame, a4, a5, (uint64_t)&protocol witness table for DataFrame, a6, (uint64_t)&v20, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v21;
  result = *(double *)&v20;
  *(_OWORD *)v7 = v20;
  v7[2] = v15;
  return result;
}

double DataFrame.sort<A, B, C>(on:_:_:order:)(uint64_t *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unsigned __int8 v20;
  _QWORD v21[2];
  uint64_t v22[5];
  __int128 v23;
  uint64_t v24;

  v11 = *a1;
  v12 = a1[1];
  v13 = *a2;
  v14 = a2[1];
  v15 = *a4;
  v16 = v10[1];
  v17 = v10[2];
  v22[2] = *v10;
  v22[3] = v16;
  v22[4] = v17;
  v22[0] = v11;
  v22[1] = v12;
  v21[0] = v13;
  v21[1] = v14;
  v20 = v15;
  DataFrameProtocol.sorted<A, B, C>(on:_:_:order:)(v22, (uint64_t)v21, &v20, (uint64_t)&type metadata for DataFrame, a5, a6, a7, (char **)&v23, (uint64_t)&protocol witness table for DataFrame, a8, a9, a10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v24;
  result = *(double *)&v23;
  *(_OWORD *)v10 = v23;
  v10[2] = v18;
  return result;
}

double DataFrame.sort<A>(on:by:)(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  uint64_t v5;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  double result;
  char *v14;
  char *v15[5];
  __int128 v16;
  char *v17;

  v9 = *a1;
  v10 = a1[1];
  v11 = v4[1];
  v12 = v4[2];
  v15[2] = *v4;
  v15[3] = v11;
  v15[4] = v12;
  v15[0] = v9;
  v15[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:by:)(v15, a2, a3, (uint64_t)&type metadata for DataFrame, a4, (uint64_t)&protocol witness table for DataFrame, (char **)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v14 = v17;
    result = *(double *)&v16;
    *(_OWORD *)v4 = v16;
    v4[2] = v14;
  }
  return result;
}

double DataFrame.sort<A>(on:_:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  char *v15[2];
  _QWORD v16[5];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v10 = v6[1];
  v11 = v6[2];
  v16[2] = *v6;
  v16[3] = v10;
  v16[4] = v11;
  ColumnID.init(_:_:)(a1, a2, v16);
  v15[0] = (char *)v16[0];
  v15[1] = (char *)v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v19;
  DataFrameProtocol.sorted<A>(on:by:)(v15, a4, a5, (uint64_t)&type metadata for DataFrame, a6, (uint64_t)&protocol witness table for DataFrame, (char **)&v17);
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v14 = v18;
    result = *(double *)&v17;
    *(_OWORD *)v6 = v17;
    v6[2] = v14;
  }
  return result;
}

uint64_t sub_2150A1EA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_21509EE34(a1, a2, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40)) & 1;
}

_QWORD *sub_2150A1ED8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8428);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA75E8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A200C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A234C(a1, a2, a3, a4, &qword_254DA8438);
}

char *sub_2150A2020(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A2120(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D200);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

_QWORD *sub_2150A2218(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7850);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7858);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A2338(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A234C(a1, a2, a3, a4, &qword_253F0D458);
}

char *sub_2150A234C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v9])
      memmove(v13, v14, 40 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

size_t sub_2150A2464(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A388C(a1, a2, a3, a4, &qword_254DA8498, qword_253F0D218);
}

_QWORD *sub_2150A2478(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A2588(a1, a2, a3, a4, &qword_254DA8490, &qword_254DA74E8);
}

char *sub_2150A248C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8488);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

_QWORD *sub_2150A2574(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A2588(a1, a2, a3, a4, &qword_253F0D028, &qword_253F0D020);
}

_QWORD *sub_2150A2588(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[2 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_2150A26AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8480);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 8 * v8;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_release();
  return v10;
}

char *sub_2150A27A0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A27B8(a1, a2, a3, a4, &qword_253F0D048);
}

char *sub_2150A27AC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A27B8(a1, a2, a3, a4, &qword_253F0D050);
}

char *sub_2150A27B8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v9;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v16);
  }
  swift_release();
  return v11;
}

_QWORD *sub_2150A28A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3618(a1, a2, a3, a4, &qword_254DA8448, &qword_254DA8450);
}

char *sub_2150A28BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8458);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_2150A29D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3A8C(a1, a2, a3, a4, &qword_254DA8418, &qword_254DA8420);
}

_QWORD *sub_2150A29E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3A8C(a1, a2, a3, a4, &qword_254DA8460, &qword_254DA8468);
}

_QWORD *sub_2150A29FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8470);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[13 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 104 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8478);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A2B34(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8440);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A2C38(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7808);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_2150A2D38(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77F8);
  v10 = *(_QWORD *)(sub_21512F740() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(sub_21512F740() - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_2150A2EAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

char *sub_2150A2F94(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7580);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_2150A308C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_2150A3184(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_release();
  return v10;
}

_QWORD *sub_2150A3278(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3FBC(a1, a2, a3, a4, &qword_254DA84A0, &qword_254DA7868);
}

_QWORD *sub_2150A328C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4])
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1D0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A33AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2150A34C4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A3500(a1, a2, a3, a4, &qword_253F0D1E8);
}

_QWORD *sub_2150A34D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3618(a1, a2, a3, a4, &qword_253F0D1E0, &qword_253F0D170);
}

char *sub_2150A34EC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2150A3500(a1, a2, a3, a4, &qword_254DA7780);
}

char *sub_2150A3500(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9])
      memmove(v14, v15, 32 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

_QWORD *sub_2150A3604(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3618(a1, a2, a3, a4, &qword_254DA7788, &qword_254DA7790);
}

_QWORD *sub_2150A3618(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_2150A3750(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7768);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_2150A3864(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A388C(a1, a2, a3, a4, &qword_254DA8400, &qword_254DA8408);
}

size_t sub_2150A3878(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A388C(a1, a2, a3, a4, &qword_254DA8410, &qword_254DA8218);
}

size_t sub_2150A388C(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

_QWORD *sub_2150A3A00(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3D3C(a1, a2, a3, a4, &qword_254DA83E8, &qword_254DA83F0);
}

_QWORD *sub_2150A3A14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3E74(a1, a2, a3, a4, &qword_254DA83F8, &qword_254DA8210);
}

_QWORD *sub_2150A3A28(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3A8C(a1, a2, a3, a4, &qword_254DA83D0, &qword_254DA83D8);
}

_QWORD *sub_2150A3A3C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3BDC(a1, a2, a3, a4, &qword_254DA83E0, &qword_254DA8208);
}

_QWORD *sub_2150A3A50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3D3C(a1, a2, a3, a4, &qword_254DA83B8, &qword_254DA83C0);
}

_QWORD *sub_2150A3A64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3E74(a1, a2, a3, a4, &qword_254DA83C8, &qword_254DA8200);
}

_QWORD *sub_2150A3A78(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3A8C(a1, a2, a3, a4, &qword_254DA83A0, &qword_254DA83A8);
}

_QWORD *sub_2150A3A8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 56);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[7 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 56 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

_QWORD *sub_2150A3BC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3BDC(a1, a2, a3, a4, &qword_254DA83B0, &qword_254DA81F8);
}

_QWORD *sub_2150A3BDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 1;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[4 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 32 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

_QWORD *sub_2150A3D00(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3D3C(a1, a2, a3, a4, &qword_254DA8388, &qword_254DA8390);
}

_QWORD *sub_2150A3D14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3E74(a1, a2, a3, a4, &qword_254DA8398, &qword_254DA81F0);
}

_QWORD *sub_2150A3D28(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3D3C(a1, a2, a3, a4, &qword_254DA8370, &qword_254DA8378);
}

_QWORD *sub_2150A3D3C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 + 31;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 6);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[8 * v11 + 4])
      memmove(v13 + 4, a4 + 4, v11 << 6);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

_QWORD *sub_2150A3E60(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3E74(a1, a2, a3, a4, &qword_254DA8380, &qword_254DA81E8);
}

_QWORD *sub_2150A3E74(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

_QWORD *sub_2150A3FA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2150A3FBC(a1, a2, a3, a4, &qword_254DA7730, qword_253F0D058);
}

_QWORD *sub_2150A3FBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 1;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[4 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 32 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

uint64_t sub_2150A40E0(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  char **v1;
  char *v3;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2150A4F1C((uint64_t)v3);
  result = sub_2150A4234(a1);
  *v1 = v3;
  return result;
}

uint64_t sub_2150A4160(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2150A17FC(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(uint64_t (**)(char *, char *))(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1;
}

uint64_t sub_2150A4194(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_21509FB68(a1, a2, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(unsigned __int8 *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56)) & 1;
}

uint64_t sub_2150A41E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2150A0C68(a1, a2, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(char **)(v2 + 96), *(unsigned __int8 *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(char **)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144), *(char **)(v2 + 152), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64),
           *(_QWORD *)(v2 + 72)) & 1;
}

uint64_t sub_2150A4234(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;

  v3 = v1[1];
  result = sub_215130394();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if (v3)
      return sub_2150A48E0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_137;
  v87 = result;
  v88 = v3;
  if (v3 >= 2)
  {
    v6 = v5 >> 1;
    result = sub_21512FCF8();
    *(_QWORD *)(result + 16) = v6;
    v86 = result;
    v89 = (char *)(result + 32);
LABEL_13:
    v8 = 0;
    v9 = *v1;
    v85 = *v1 + 16;
    v83 = v1;
    v84 = *v1 - 8;
    v10 = MEMORY[0x24BEE4AF8];
    v11 = v88;
    v90 = *v1;
    while (1)
    {
      v12 = v8++;
      if (v8 < v11)
      {
        v93 = *(_QWORD *)(v9 + 8 * v8);
        v92 = *(_QWORD *)(v9 + 8 * v12);
        result = a1(&v93, &v92);
        if (v2)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          v7 = v86;
          goto LABEL_115;
        }
        v13 = result;
        v8 = v12 + 2;
        if (v12 + 2 < v88)
        {
          v14 = (uint64_t *)(v85 + 8 * v12);
          while (1)
          {
            v93 = *v14;
            v92 = *(v14 - 1);
            result = a1(&v93, &v92);
            if (((v13 ^ result) & 1) != 0)
              break;
            ++v14;
            if (v88 == ++v8)
            {
              v8 = v88;
              break;
            }
          }
        }
        v9 = v90;
        if ((v13 & 1) != 0)
        {
          if (v8 < v12)
            goto LABEL_142;
          v11 = v88;
          if (v12 < v8)
          {
            v15 = v8 - 1;
            v16 = v12;
            do
            {
              if (v16 != v15)
              {
                if (!v90)
                  goto LABEL_145;
                v17 = *(_QWORD *)(v90 + 8 * v16);
                *(_QWORD *)(v90 + 8 * v16) = *(_QWORD *)(v90 + 8 * v15);
                *(_QWORD *)(v90 + 8 * v15) = v17;
              }
              v52 = ++v16 < v15--;
            }
            while (v52);
          }
        }
        else
        {
          v11 = v88;
        }
      }
      if (v8 >= v11)
        goto LABEL_40;
      if (__OFSUB__(v8, v12))
        goto LABEL_139;
      if (v8 - v12 >= v87)
        goto LABEL_40;
      if (__OFADD__(v12, v87))
        goto LABEL_140;
      if (v12 + v87 >= v11)
        v18 = v11;
      else
        v18 = v12 + v87;
      if (v18 < v12)
      {
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
        return result;
      }
      if (v8 == v18)
      {
LABEL_40:
        if (v8 < v12)
          goto LABEL_136;
      }
      else
      {
        v71 = (uint64_t *)(v84 + 8 * v8);
        do
        {
          v72 = *(_QWORD *)(v9 + 8 * v8);
          v73 = v12;
          v74 = v71;
          while (1)
          {
            v93 = v72;
            v92 = *v74;
            result = a1(&v93, &v92);
            if (v2)
              goto LABEL_101;
            if ((result & 1) == 0)
              break;
            v9 = v90;
            if (!v90)
              goto LABEL_144;
            v75 = *v74;
            v72 = v74[1];
            *v74 = v72;
            v74[1] = v75;
            --v74;
            if (v8 == ++v73)
              goto LABEL_98;
          }
          v9 = v90;
LABEL_98:
          ++v8;
          ++v71;
        }
        while (v8 != v18);
        v8 = v18;
        if (v18 < v12)
          goto LABEL_136;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_21502DABC(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
        v10 = result;
      }
      v20 = *(_QWORD *)(v10 + 16);
      v19 = *(_QWORD *)(v10 + 24);
      v21 = v20 + 1;
      v9 = v90;
      if (v20 >= v19 >> 1)
      {
        result = (uint64_t)sub_21502DABC((char *)(v19 > 1), v20 + 1, 1, (char *)v10);
        v9 = v90;
        v10 = result;
      }
      *(_QWORD *)(v10 + 16) = v21;
      v22 = v10 + 32;
      v23 = (uint64_t *)(v10 + 32 + 16 * v20);
      *v23 = v12;
      v23[1] = v8;
      if (v20)
      {
        while (1)
        {
          v24 = v21 - 1;
          if (v21 >= 4)
          {
            v29 = v22 + 16 * v21;
            v30 = *(_QWORD *)(v29 - 64);
            v31 = *(_QWORD *)(v29 - 56);
            v35 = __OFSUB__(v31, v30);
            v32 = v31 - v30;
            if (v35)
              goto LABEL_121;
            v34 = *(_QWORD *)(v29 - 48);
            v33 = *(_QWORD *)(v29 - 40);
            v35 = __OFSUB__(v33, v34);
            v27 = v33 - v34;
            v28 = v35;
            if (v35)
              goto LABEL_122;
            v36 = v21 - 2;
            v37 = (uint64_t *)(v22 + 16 * (v21 - 2));
            v39 = *v37;
            v38 = v37[1];
            v35 = __OFSUB__(v38, v39);
            v40 = v38 - v39;
            if (v35)
              goto LABEL_123;
            v35 = __OFADD__(v27, v40);
            v41 = v27 + v40;
            if (v35)
              goto LABEL_125;
            if (v41 >= v32)
            {
              v59 = (uint64_t *)(v22 + 16 * v24);
              v61 = *v59;
              v60 = v59[1];
              v35 = __OFSUB__(v60, v61);
              v62 = v60 - v61;
              if (v35)
                goto LABEL_131;
              v52 = v27 < v62;
              goto LABEL_77;
            }
          }
          else
          {
            if (v21 != 3)
            {
              v53 = *(_QWORD *)(v10 + 32);
              v54 = *(_QWORD *)(v10 + 40);
              v35 = __OFSUB__(v54, v53);
              v46 = v54 - v53;
              v47 = v35;
              goto LABEL_71;
            }
            v26 = *(_QWORD *)(v10 + 32);
            v25 = *(_QWORD *)(v10 + 40);
            v35 = __OFSUB__(v25, v26);
            v27 = v25 - v26;
            v28 = v35;
          }
          if ((v28 & 1) != 0)
            goto LABEL_124;
          v36 = v21 - 2;
          v42 = (uint64_t *)(v22 + 16 * (v21 - 2));
          v44 = *v42;
          v43 = v42[1];
          v45 = __OFSUB__(v43, v44);
          v46 = v43 - v44;
          v47 = v45;
          if (v45)
            goto LABEL_126;
          v48 = (uint64_t *)(v22 + 16 * v24);
          v50 = *v48;
          v49 = v48[1];
          v35 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v35)
            goto LABEL_128;
          if (__OFADD__(v46, v51))
            goto LABEL_130;
          if (v46 + v51 >= v27)
          {
            v52 = v27 < v51;
LABEL_77:
            if (v52)
              v24 = v36;
            goto LABEL_79;
          }
LABEL_71:
          if ((v47 & 1) != 0)
            goto LABEL_127;
          v55 = (uint64_t *)(v22 + 16 * v24);
          v57 = *v55;
          v56 = v55[1];
          v35 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v35)
            goto LABEL_129;
          if (v58 < v46)
            goto LABEL_88;
LABEL_79:
          v63 = v24 - 1;
          if (v24 - 1 >= v21)
          {
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          if (!v9)
            goto LABEL_143;
          v64 = v8;
          v65 = v10;
          v66 = (uint64_t *)(v22 + 16 * v63);
          v67 = *v66;
          v68 = (_QWORD *)(v22 + 16 * v24);
          v69 = v68[1];
          result = sub_2150A4C74((char *)(v9 + 8 * *v66), (char *)(v9 + 8 * *v68), v9 + 8 * v69, v89, a1);
          if (v2)
            goto LABEL_101;
          if (v69 < v67)
            goto LABEL_118;
          if (v24 > *(_QWORD *)(v65 + 16))
            goto LABEL_119;
          *v66 = v67;
          *(_QWORD *)(v22 + 16 * v63 + 8) = v69;
          v70 = *(_QWORD *)(v65 + 16);
          if (v24 >= v70)
            goto LABEL_120;
          v10 = v65;
          v21 = v70 - 1;
          result = (uint64_t)memmove((void *)(v22 + 16 * v24), v68 + 2, 16 * (v70 - 1 - v24));
          *(_QWORD *)(v65 + 16) = v70 - 1;
          v9 = v90;
          v8 = v64;
          if (v70 <= 2)
            goto LABEL_88;
        }
      }
      v21 = 1;
LABEL_88:
      v11 = v88;
      if (v8 >= v88)
      {
        v7 = v86;
        v1 = v83;
        goto LABEL_103;
      }
    }
  }
  v7 = MEMORY[0x24BEE4AF8];
  v89 = (char *)(MEMORY[0x24BEE4AF8] + 32);
  if (v3 == 1)
  {
    v86 = MEMORY[0x24BEE4AF8];
    goto LABEL_13;
  }
  v21 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  v10 = MEMORY[0x24BEE4AF8];
LABEL_103:
  result = v10;
  if (v21 >= 2)
  {
    v76 = *v1;
    do
    {
      v77 = v21 - 2;
      if (v21 < 2)
        goto LABEL_132;
      if (!v76)
        goto LABEL_146;
      v78 = result;
      v79 = *(_QWORD *)(result + 32 + 16 * v77);
      v80 = *(_QWORD *)(result + 32 + 16 * (v21 - 1) + 8);
      result = sub_2150A4C74((char *)(v76 + 8 * v79), (char *)(v76 + 8 * *(_QWORD *)(result + 32 + 16 * (v21 - 1))), v76 + 8 * v80, v89, a1);
      if (v2)
        break;
      if (v80 < v79)
        goto LABEL_133;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_21501E510(v78);
        v78 = result;
      }
      if (v77 >= *(_QWORD *)(v78 + 16))
        goto LABEL_134;
      v81 = (_QWORD *)(v78 + 32 + 16 * v77);
      *v81 = v79;
      v81[1] = v80;
      v82 = *(_QWORD *)(v78 + 16);
      if (v21 > v82)
        goto LABEL_135;
      memmove((void *)(v78 + 32 + 16 * (v21 - 1)), (const void *)(v78 + 32 + 16 * v21), 16 * (v82 - v21));
      result = v78;
      *(_QWORD *)(v78 + 16) = v82 - 1;
      v21 = v82 - 1;
    }
    while (v82 > 2);
  }
  swift_bridgeObjectRelease();
LABEL_115:
  *(_QWORD *)(v7 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A48E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v7 = a3;
    v9 = result;
    v10 = *v4;
    v11 = *v4 + 8 * a3 - 8;
LABEL_4:
    v12 = *(_QWORD *)(v10 + 8 * v7);
    v13 = v9;
    v14 = (uint64_t *)v11;
    while (1)
    {
      v17 = v12;
      v16 = *v14;
      result = a4(&v17, &v16);
      if (v5)
        break;
      if ((result & 1) != 0)
      {
        if (!v10)
        {
          __break(1u);
          return result;
        }
        v15 = *v14;
        v12 = v14[1];
        *v14 = v12;
        v14[1] = v15;
        --v14;
        if (v7 != ++v13)
          continue;
      }
      ++v7;
      v11 += 8;
      if (v7 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_2150A49A8(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v9;
  char *v10;
  char *v12;
  char *v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char *v22;
  BOOL v23;
  char *v24;
  char *v25;
  char v26;
  char *v27;
  BOOL v28;
  uint64_t v29;
  size_t v30;
  char *v31;
  uint64_t v32;
  unsigned int v35;

  v10 = a4;
  v12 = __src;
  v13 = __dst;
  v35 = a8 & 1;
  v14 = __src - __dst;
  v15 = __src - __dst + 7;
  if (__src - __dst >= 0)
    v15 = __src - __dst;
  v16 = v15 >> 3;
  v17 = a3 - (_QWORD)__src;
  v18 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v18 = a3 - (_QWORD)__src;
  v19 = v18 >> 3;
  if (v16 >= v18 >> 3)
  {
    if (a4 != __src || &__src[8 * v19] <= a4)
      memmove(a4, __src, 8 * v19);
    v20 = &v10[8 * v19];
    if (v13 >= v12 || v17 < 8)
      goto LABEL_49;
    v24 = (char *)(a3 - 8);
    while (1)
    {
      v25 = v12 - 8;
      v26 = a9(*((_QWORD *)v20 - 1), *((_QWORD *)v12 - 1), a5, a6, a7, v35);
      if (v9)
        goto LABEL_49;
      v27 = v24 + 8;
      if ((v26 & 1) != 0)
      {
        if (v27 != v12)
        {
          v12 -= 8;
LABEL_39:
          *(_QWORD *)v24 = *(_QWORD *)v25;
          goto LABEL_40;
        }
        v28 = v24 >= v12;
        v12 -= 8;
        if (v28)
          goto LABEL_39;
      }
      else
      {
        v25 = v20 - 8;
        if (v27 != v20)
        {
          v20 -= 8;
          goto LABEL_39;
        }
        v28 = v24 >= v20;
        v20 -= 8;
        if (v28)
          goto LABEL_39;
      }
LABEL_40:
      if (v12 > v13)
      {
        v24 -= 8;
        if (v20 > v10)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (a4 != __dst || &__dst[8 * v16] <= a4)
    memmove(a4, __dst, 8 * v16);
  v20 = &v10[8 * v16];
  if ((unint64_t)v12 < a3 && v14 >= 8)
  {
    while (1)
    {
      v21 = a9(*(_QWORD *)v12, *(_QWORD *)v10, a5, a6, a7, v35);
      if (v9)
      {
        v29 = v20 - v10 + 7;
        if (v20 - v10 >= 0)
          v29 = v20 - v10;
        if (v13 < v10 || v13 >= &v10[v29 & 0xFFFFFFFFFFFFFFF8] || v13 != v10)
        {
          v30 = 8 * (v29 >> 3);
          v31 = v13;
          goto LABEL_55;
        }
        goto LABEL_56;
      }
      if ((v21 & 1) == 0)
        break;
      v22 = v12;
      v23 = v13 == v12;
      v12 += 8;
      if (!v23)
        goto LABEL_17;
LABEL_18:
      v13 += 8;
      if (v10 >= v20 || (unint64_t)v12 >= a3)
        goto LABEL_20;
    }
    v22 = v10;
    v23 = v13 == v10;
    v10 += 8;
    if (v23)
      goto LABEL_18;
LABEL_17:
    *(_QWORD *)v13 = *(_QWORD *)v22;
    goto LABEL_18;
  }
LABEL_20:
  v12 = v13;
LABEL_49:
  v32 = v20 - v10 + 7;
  if (v20 - v10 >= 0)
    v32 = v20 - v10;
  if (v12 < v10 || v12 >= &v10[v32 & 0xFFFFFFFFFFFFFFF8] || v12 != v10)
  {
    v30 = 8 * (v32 >> 3);
    v31 = v12;
LABEL_55:
    memmove(v31, v10, v30);
  }
LABEL_56:
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_2150A4C74(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char *v17;
  BOOL v18;
  char *v19;
  char *v20;
  char v21;
  char *v22;
  BOOL v23;
  uint64_t v24;
  size_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v31;
  uint64_t v32;

  v6 = a4;
  v7 = __src;
  v8 = __dst;
  v9 = __src - __dst;
  v10 = __src - __dst + 7;
  if (__src - __dst >= 0)
    v10 = __src - __dst;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)__src;
  v13 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v13 = a3 - (_QWORD)__src;
  v14 = v13 >> 3;
  if (v11 >= v13 >> 3)
  {
    if (a4 != __src || &__src[8 * v14] <= a4)
      memmove(a4, __src, 8 * v14);
    v15 = &v6[8 * v14];
    if (v8 >= v7 || v12 < 8)
      goto LABEL_42;
    v19 = (char *)(a3 - 8);
    while (1)
    {
      v32 = *((_QWORD *)v15 - 1);
      v20 = v7 - 8;
      v31 = *((_QWORD *)v7 - 1);
      v21 = a5(&v32, &v31);
      if (v5)
        goto LABEL_42;
      v22 = v19 + 8;
      if ((v21 & 1) != 0)
      {
        if (v22 != v7)
        {
          v7 -= 8;
LABEL_39:
          *(_QWORD *)v19 = *(_QWORD *)v20;
          goto LABEL_40;
        }
        v23 = v19 >= v7;
        v7 -= 8;
        if (v23)
          goto LABEL_39;
      }
      else
      {
        v20 = v15 - 8;
        if (v22 != v15)
        {
          v15 -= 8;
          goto LABEL_39;
        }
        v23 = v19 >= v15;
        v15 -= 8;
        if (v23)
          goto LABEL_39;
      }
LABEL_40:
      if (v7 > v8)
      {
        v19 -= 8;
        if (v15 > v6)
          continue;
      }
      goto LABEL_42;
    }
  }
  if (a4 != __dst || &__dst[8 * v11] <= a4)
    memmove(a4, __dst, 8 * v11);
  v15 = &v6[8 * v11];
  if ((unint64_t)v7 < a3 && v9 >= 8)
  {
    while (1)
    {
      v32 = *(_QWORD *)v7;
      v31 = *(_QWORD *)v6;
      v16 = a5(&v32, &v31);
      if (v5)
      {
        v28 = v15 - v6 + 7;
        if (v15 - v6 >= 0)
          v28 = v15 - v6;
        if (v8 < v6 || v8 >= &v6[v28 & 0xFFFFFFFFFFFFFFF8] || v8 != v6)
        {
          v25 = 8 * (v28 >> 3);
          v26 = v8;
LABEL_48:
          memmove(v26, v6, v25);
        }
        return 1;
      }
      if ((v16 & 1) == 0)
        break;
      v17 = v7;
      v18 = v8 == v7;
      v7 += 8;
      if (!v18)
        goto LABEL_17;
LABEL_18:
      v8 += 8;
      if (v6 >= v15 || (unint64_t)v7 >= a3)
        goto LABEL_20;
    }
    v17 = v6;
    v18 = v8 == v6;
    v6 += 8;
    if (v18)
      goto LABEL_18;
LABEL_17:
    *(_QWORD *)v8 = *(_QWORD *)v17;
    goto LABEL_18;
  }
LABEL_20:
  v7 = v8;
LABEL_42:
  v24 = v15 - v6 + 7;
  if (v15 - v6 >= 0)
    v24 = v15 - v6;
  if (v7 < v6 || v7 >= &v6[v24 & 0xFFFFFFFFFFFFFFF8] || v7 != v6)
  {
    v25 = 8 * (v24 >> 3);
    v26 = v7;
    goto LABEL_48;
  }
  return 1;
}

char *sub_2150A4F1C(uint64_t a1)
{
  return sub_2150A2120(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_2150A4F30(uint64_t a1)
{
  return sub_2150A2F94(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_2150A4F44(uint64_t a1)
{
  return sub_2150A308C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_2150A4F58(uint64_t a1)
{
  return sub_2150A2020(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2150A4F6C(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL4 v40;
  _BOOL4 v41;
  char *v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  _BOOL4 v65;
  BOOL v66;
  uint64_t result;
  char *v69;
  _QWORD *v70;

  v9 = a4;
  v10 = a3;
  v11 = __dst;
  v12 = __src;
  v13 = __dst - __src;
  v14 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v14 = __dst - __src;
  v15 = v14 >> 3;
  v16 = a3 - __dst;
  v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0)
    v17 = a3 - __dst;
  v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4)
      memmove(a4, __dst, 8 * v18);
    v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8)
      goto LABEL_86;
    v70 = (_QWORD *)(a7 + 16);
    v69 = v12;
    while (1)
    {
      v44 = *((_QWORD *)v19 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_96:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v45 = v11;
      v46 = v11 - 8;
      v47 = *((_QWORD *)v11 - 1);
      swift_beginAccess();
      v48 = (_QWORD *)*v70;
      if (!*v70)
        goto LABEL_95;
      v49 = v48[1];
      if ((uint64_t)v44 >= v49)
        goto LABEL_96;
      v50 = v48 + 8;
      v51 = *((unsigned __int8 *)v48 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v51)
      {
        v52 = *v48 + 7;
        if (__OFADD__(*v48, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        v53 = v10;
        if (v52 < 0)
          v52 = *v48 + 14;
        v54 = v52 >> 3;
        v55 = v54 - 1;
        v29 = v54 < 1;
        v56 = v54 + 62;
        if (!v29)
          v56 = v55;
        v57 = *(_QWORD *)((char *)&v50[v44 + 8] + (v56 & 0xFFFFFFFFFFFFC0));
        if ((v47 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v57 = 0;
        v53 = v10;
        if ((v47 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v47 >= v49)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v50 + (v47 >> 3)) >> (v47 & 7)) & 1) != 0)
      {
        v58 = *v48;
        if (__OFADD__(v58, 7))
          goto LABEL_93;
        v10 = v53 - 8;
        if (v51)
        {
          v59 = v58 + 14;
          if (v58 + 7 >= 0)
            v59 = v58 + 7;
          v60 = v59 >> 3;
          v61 = v60 - 1;
          v29 = v60 < 1;
          v62 = v60 + 62;
          if (!v29)
            v62 = v61;
          v63 = *(_QWORD *)((char *)&v50[v47 + 8] + (v62 & 0xFFFFFFFFFFFFC0));
          v64 = v63 < v57;
          v65 = v57 < v63;
          if ((a8 & 1) != 0)
            v65 = v64;
          if (v65)
          {
LABEL_76:
            if (v53 == v11)
            {
              v11 -= 8;
              if (v10 < v45)
                goto LABEL_82;
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        v10 = v53 - 8;
        if (v51)
          goto LABEL_76;
      }
      v46 = v19 - 8;
      if (v53 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(_QWORD *)v10 = *(_QWORD *)v46;
        goto LABEL_82;
      }
      v66 = v10 >= v19;
      v19 -= 8;
      if (v66)
        goto LABEL_81;
LABEL_82:
      if (v11 <= v69 || v19 <= v9)
        goto LABEL_86;
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4)
    memmove(a4, __src, 8 * v15);
  v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    v20 = (_QWORD *)(a7 + 16);
    do
    {
      v21 = *(_QWORD *)v11;
      if ((*(_QWORD *)v11 & 0x8000000000000000) != 0)
        goto LABEL_96;
      v22 = *(_QWORD *)v9;
      swift_beginAccess();
      v23 = (_QWORD *)*v20;
      if (!*v20)
        goto LABEL_94;
      v24 = v23[1];
      if ((uint64_t)v21 >= v24)
        goto LABEL_96;
      v25 = v23 + 8;
      v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0)
          v27 = *v23 + 14;
        v28 = v27 >> 3;
        v30 = v28 - 1;
        v29 = v28 < 1;
        v31 = v28 + 62;
        if (!v29)
          v31 = v30;
        v32 = *(_QWORD *)((char *)&v25[v21 + 8] + (v31 & 0xFFFFFFFFFFFFC0));
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v32 = 0;
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v22 >= v24)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)) & 1) != 0)
      {
        v33 = *v23;
        v34 = __OFADD__(v33, 7);
        v35 = v33 + 7;
        if (v34)
          goto LABEL_92;
        if (!v26)
          goto LABEL_33;
        v36 = v35 / 8;
        v37 = v36 - 1;
        v29 = v36 < 1;
        v38 = v36 + 62;
        if (!v29)
          v38 = v37;
        v39 = *(_QWORD *)((char *)&v25[v22 + 8] + (v38 & 0xFFFFFFFFFFFFC0));
        v40 = v39 < v32;
        v41 = v32 < v39;
        if ((a8 & 1) != 0)
          v41 = v40;
        if (!v41)
        {
LABEL_33:
          v42 = v9;
          v43 = v12 == v9;
          v9 += 8;
          if (v43)
            goto LABEL_35;
LABEL_34:
          *(_QWORD *)v12 = *(_QWORD *)v42;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      v42 = v11;
      v43 = v12 == v11;
      v11 += 8;
      if (!v43)
        goto LABEL_34;
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  return 1;
}

uint64_t sub_2150A5440(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;
  _BOOL4 v35;
  unint64_t v36;
  uint64_t v38;

  v38 = result;
  if (a3 != a2)
  {
    v9 = a3;
    v10 = *a4;
    v11 = (_QWORD *)(a7 + 16);
    v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    v13 = *(_QWORD *)(v10 + 8 * v9);
    v14 = v38;
    v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      v16 = *v15;
      result = swift_beginAccess();
      v17 = (_QWORD *)*v11;
      if (!*v11)
        goto LABEL_34;
      v18 = v17[1];
      if ((uint64_t)v13 >= v18)
        break;
      v19 = v17 + 8;
      v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0)
          v21 = *v17 + 14;
        v22 = v21 >> 3;
        v24 = v22 - 1;
        v23 = v22 < 1;
        v25 = v22 + 62;
        if (!v23)
          v25 = v24;
        v26 = *(_QWORD *)((char *)&v19[v13 + 8] + (v25 & 0xFFFFFFFFFFFFC0));
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v26 = 0;
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v16 >= v18)
        break;
      if (((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)) & 1) != 0)
      {
        v27 = *v17;
        v28 = __OFADD__(v27, 7);
        v29 = v27 + 7;
        if (v28)
          goto LABEL_33;
        if (!v20)
          goto LABEL_4;
        v30 = v29 / 8;
        v31 = v30 - 1;
        v23 = v30 < 1;
        v32 = v30 + 62;
        if (!v23)
          v32 = v31;
        v33 = *(_QWORD *)((char *)&v19[v16 + 8] + (v32 & 0xFFFFFFFFFFFFC0));
        v34 = v33 < v26;
        v35 = v26 < v33;
        if ((a8 & 1) != 0)
          v35 = v34;
        if (!v35)
          goto LABEL_4;
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10)
        goto LABEL_35;
      v36 = *v15;
      v13 = v15[1];
      *v15 = v13;
      v15[1] = v36;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2)
          return result;
        goto LABEL_5;
      }
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150A565C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL4 v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v75;
  _BOOL4 v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  unint64_t v142;
  uint64_t result;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *__dst;
  char *__dsta;
  int v163;
  uint64_t v164;
  _QWORD **v165;
  uint64_t v166;
  uint64_t v167;

  v9 = a5 & 1;
  v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_215130394();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A5440(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_211;
  v155 = a3;
  v156 = a4;
  v163 = v9;
  v147 = v11;
  v164 = v5;
  v145 = a1;
  if (v10 <= 1)
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v153 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v146 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v80 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_171:
      if (v80 < 2)
        goto LABEL_184;
      v133 = *v145;
      v167 = *v145;
      while (1)
      {
        v134 = v80 - 2;
        if (v80 < 2)
          goto LABEL_205;
        if (!v133)
          goto LABEL_220;
        v160 = v15;
        v135 = v15 + 32;
        v136 = *(_QWORD *)&v15[16 * v134 + 32];
        v137 = *(_QWORD *)&v15[16 * v80 + 24];
        v138 = (char *)(v133 + 8 * v136);
        v139 = (char *)(v133 + 8 * *(_QWORD *)&v135[16 * v80 - 16]);
        v140 = (char *)(v133 + 8 * v137);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A4F6C(v138, v139, v140, v153, a2, v155, v156, v163);
        if (v164)
          goto LABEL_183;
        swift_release();
        swift_bridgeObjectRelease();
        if (v137 < v136)
          goto LABEL_206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v160 = sub_21501E510((uint64_t)v160);
        if (v134 >= *((_QWORD *)v160 + 2))
          goto LABEL_207;
        v141 = &v160[16 * v134 + 32];
        *(_QWORD *)v141 = v136;
        *((_QWORD *)v141 + 1) = v137;
        v142 = *((_QWORD *)v160 + 2);
        if (v80 > v142)
          goto LABEL_208;
        v15 = v160;
        memmove(&v160[16 * v80 + 16], &v160[16 * v80 + 32], 16 * (v142 - v80));
        *((_QWORD *)v160 + 2) = v142 - 1;
        v80 = v142 - 1;
        v133 = v167;
        if (v142 <= 2)
          goto LABEL_184;
      }
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_21512FCF8();
    *(_QWORD *)(v14 + 16) = v13;
    v146 = v14;
    v153 = (char *)(v14 + 32);
  }
  v16 = 0;
  v17 = *a1;
  v165 = (_QWORD **)(a4 + 16);
  v144 = *a1 - 8;
  v15 = (char *)MEMORY[0x24BEE4AF8];
  v166 = *a1;
  v150 = v10;
  while (1)
  {
    v18 = (char *)v16;
    v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      v148 = v16 + 1;
      v20 = *(_QWORD *)(v17 + 8 * v19);
      if (v20 < 0)
        goto LABEL_222;
      v21 = (char *)v16;
      v22 = *(_QWORD *)(v17 + 8 * v16);
      swift_beginAccess();
      v23 = *v165;
      if (!*v165)
        goto LABEL_221;
      if (v20 >= v23[1])
        goto LABEL_222;
      v157 = v15;
      v24 = sub_215099328(v20, v23, v156);
      if (v22 < 0)
        goto LABEL_222;
      v27 = v23[1];
      if (v22 >= v27)
        goto LABEL_222;
      v28 = v24;
      v29 = v25;
      v30 = sub_215099328(v22, v23, v26);
      if ((v29 & 1) != 0)
      {
        v33 = 0;
        v18 = v21;
      }
      else
      {
        v18 = v21;
        if ((v31 & 1) != 0)
        {
          v34 = (uint64_t)(v21 + 2);
          if ((uint64_t)(v21 + 2) >= v10)
          {
            v15 = v157;
            v17 = v166;
            if ((uint64_t)v21 < v34)
              goto LABEL_68;
            goto LABEL_76;
          }
          v33 = 1;
          v17 = v166;
          goto LABEL_32;
        }
        if (v9)
          v32 = v30 < v28;
        else
          v32 = v28 < v30;
        v33 = v32;
      }
      v34 = (uint64_t)(v18 + 2);
      v17 = v166;
      if ((uint64_t)(v18 + 2) >= v10)
        goto LABEL_65;
LABEL_32:
      v35 = v23 + 8;
      if (v10 <= v34 + 1)
        v36 = v34 + 1;
      else
        v36 = v10;
      v37 = *(_QWORD *)(v17 + 8 * v148);
      while (1)
      {
        v38 = v37;
        v37 = *(_QWORD *)(v17 + 8 * v34);
        if (v37 < 0 || v37 >= v27)
          goto LABEL_222;
        v39 = *((unsigned __int8 *)v35 + ((unint64_t)v37 >> 3)) & (1 << (v37 & 7));
        if (v39)
        {
          v40 = *v23 + 7;
          if (__OFADD__(*v23, 7))
            goto LABEL_202;
          if (v40 < 0)
            v40 = *v23 + 14;
          v41 = v40 >> 3;
          v42 = v41 - 1;
          v32 = v41 < 1;
          v43 = v41 + 62;
          if (!v32)
            v43 = v42;
          v44 = *(_QWORD *)((char *)&v35[v37 + 8] + (v43 & 0xFFFFFFFFFFFFC0));
          if (v38 < 0)
            goto LABEL_222;
        }
        else
        {
          v44 = 0;
          if (v38 < 0)
            goto LABEL_222;
        }
        if (v38 >= v27)
          goto LABEL_222;
        if (((*((unsigned __int8 *)v35 + ((unint64_t)v38 >> 3)) >> (v38 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v23, 7))
            goto LABEL_203;
          if (!v39)
          {
LABEL_36:
            if ((v33 & 1) != 0)
            {
              v15 = v157;
              if (v34 < (uint64_t)v18)
                goto LABEL_213;
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          v45 = *v23 + 14;
          if (*v23 + 7 >= 0)
            v45 = *v23 + 7;
          v46 = v45 >> 3;
          v47 = v46 - 1;
          v32 = v46 < 1;
          v48 = v46 + 62;
          if (!v32)
            v48 = v47;
          v49 = *(_QWORD *)((char *)&v35[v38 + 8] + (v48 & 0xFFFFFFFFFFFFC0));
          v50 = v49 < v44;
          v51 = v44 < v49;
          if (v9)
            v51 = v50;
          if (v33 != v51)
            goto LABEL_65;
        }
        else
        {
          if (!v39)
            goto LABEL_36;
          if ((v33 & 1) == 0)
          {
            v19 = v34;
            v15 = v157;
            break;
          }
        }
LABEL_37:
        if (++v34 >= v10)
        {
          v34 = v36;
LABEL_65:
          v19 = v34;
          v15 = v157;
          if (!v33)
            break;
          if (v34 < (uint64_t)v18)
            goto LABEL_213;
LABEL_67:
          if ((uint64_t)v18 < v34)
          {
LABEL_68:
            v52 = v34 - 1;
            v53 = v18;
            do
            {
              if (v53 != (char *)v52)
              {
                if (!v17)
                  goto LABEL_219;
                v54 = *(_QWORD *)(v17 + 8 * (_QWORD)v53);
                *(_QWORD *)(v17 + 8 * (_QWORD)v53) = *(_QWORD *)(v17 + 8 * v52);
                *(_QWORD *)(v17 + 8 * v52) = v54;
              }
              v32 = (uint64_t)++v53 < v52--;
            }
            while (v32);
          }
LABEL_76:
          v19 = v34;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18))
        goto LABEL_210;
      if (v19 - (uint64_t)v18 < v147)
      {
        if (__OFADD__(v18, v147))
          goto LABEL_214;
        if ((uint64_t)&v18[v147] >= v10)
          v55 = v10;
        else
          v55 = (uint64_t)&v18[v147];
        if (v55 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          result = sub_2151302EC();
          __break(1u);
          return result;
        }
        if (v19 != v55)
        {
          v158 = v15;
          __dst = v18;
          v56 = (unint64_t *)(v144 + 8 * v19);
          v151 = v55;
          do
          {
            v57 = *(_QWORD *)(v17 + 8 * v19);
            v58 = v56;
            do
            {
              if ((v57 & 0x8000000000000000) != 0)
                goto LABEL_222;
              v59 = *v58;
              swift_beginAccess();
              v60 = *v165;
              if (!*v165)
                goto LABEL_216;
              v61 = v60[1];
              v17 = v166;
              if ((uint64_t)v57 >= v61)
                goto LABEL_222;
              v62 = v60 + 8;
              v63 = *((unsigned __int8 *)v60 + (v57 >> 3) + 64) & (1 << (v57 & 7));
              if (v63)
              {
                v64 = *v60 + 7;
                if (__OFADD__(*v60, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v64 < 0)
                  v64 = *v60 + 14;
                v65 = v64 >> 3;
                v66 = v65 - 1;
                v32 = v65 < 1;
                v67 = v65 + 62;
                if (!v32)
                  v67 = v66;
                v68 = *(_QWORD *)((char *)&v62[v57 + 8] + (v67 & 0xFFFFFFFFFFFFC0));
                if ((v59 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              else
              {
                v68 = 0;
                if ((v59 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              if ((uint64_t)v59 >= v61)
                goto LABEL_222;
              if (((*((unsigned __int8 *)v62 + (v59 >> 3)) >> (v59 & 7)) & 1) != 0)
              {
                v69 = *v60;
                v94 = __OFADD__(v69, 7);
                v70 = v69 + 7;
                if (v94)
                  goto LABEL_187;
                if (!v63)
                  break;
                v71 = v70 / 8;
                v72 = v71 - 1;
                v32 = v71 < 1;
                v73 = v71 + 62;
                if (!v32)
                  v73 = v72;
                v74 = *(_QWORD *)((char *)&v62[v59 + 8] + (v73 & 0xFFFFFFFFFFFFC0));
                v75 = v74 < v68;
                v76 = v68 < v74;
                if (v9)
                  v76 = v75;
                if (!v76)
                  break;
              }
              else if (!v63)
              {
                break;
              }
              if (!v166)
                goto LABEL_217;
              v77 = *v58;
              v57 = v58[1];
              *v58 = v57;
              v58[1] = v77;
              --v58;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v56;
            v18 = __dst;
          }
          while (v19 != v151);
          v19 = v151;
          v15 = v158;
        }
      }
    }
    if (v19 < (uint64_t)v18)
      goto LABEL_209;
    v149 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v79 = *((_QWORD *)v15 + 2);
    v78 = *((_QWORD *)v15 + 3);
    v80 = v79 + 1;
    v17 = v166;
    if (v79 >= v78 >> 1)
    {
      v15 = sub_21502DABC((char *)(v78 > 1), v79 + 1, 1, v15);
      v17 = v166;
    }
    *((_QWORD *)v15 + 2) = v80;
    v81 = v15 + 32;
    v82 = &v15[16 * v79 + 32];
    *(_QWORD *)v82 = v18;
    *((_QWORD *)v82 + 1) = v149;
    if (v79)
      break;
    v80 = 1;
LABEL_165:
    v16 = v149;
    if (v149 >= v10)
      goto LABEL_171;
  }
  v159 = v15;
  v152 = v15 + 32;
  while (1)
  {
    v83 = v80 - 1;
    if (v80 >= 4)
    {
      v88 = &v81[16 * v80];
      v89 = *((_QWORD *)v88 - 8);
      v90 = *((_QWORD *)v88 - 7);
      v94 = __OFSUB__(v90, v89);
      v91 = v90 - v89;
      if (v94)
        goto LABEL_192;
      v93 = *((_QWORD *)v88 - 6);
      v92 = *((_QWORD *)v88 - 5);
      v94 = __OFSUB__(v92, v93);
      v86 = v92 - v93;
      v87 = v94;
      if (v94)
        goto LABEL_193;
      v95 = v80 - 2;
      v96 = &v81[16 * v80 - 32];
      v98 = *(_QWORD *)v96;
      v97 = *((_QWORD *)v96 + 1);
      v94 = __OFSUB__(v97, v98);
      v99 = v97 - v98;
      if (v94)
        goto LABEL_194;
      v94 = __OFADD__(v86, v99);
      v100 = v86 + v99;
      if (v94)
        goto LABEL_197;
      if (v100 >= v91)
      {
        v118 = &v81[16 * v83];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v94 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v94)
          goto LABEL_204;
        v111 = v86 < v121;
        goto LABEL_154;
      }
    }
    else
    {
      if (v80 != 3)
      {
        v112 = *((_QWORD *)v15 + 4);
        v113 = *((_QWORD *)v15 + 5);
        v94 = __OFSUB__(v113, v112);
        v105 = v113 - v112;
        v106 = v94;
        goto LABEL_148;
      }
      v85 = *((_QWORD *)v15 + 4);
      v84 = *((_QWORD *)v15 + 5);
      v94 = __OFSUB__(v84, v85);
      v86 = v84 - v85;
      v87 = v94;
    }
    if ((v87 & 1) != 0)
      goto LABEL_195;
    v95 = v80 - 2;
    v101 = &v81[16 * v80 - 32];
    v103 = *(_QWORD *)v101;
    v102 = *((_QWORD *)v101 + 1);
    v104 = __OFSUB__(v102, v103);
    v105 = v102 - v103;
    v106 = v104;
    if (v104)
      goto LABEL_198;
    v107 = &v81[16 * v83];
    v109 = *(_QWORD *)v107;
    v108 = *((_QWORD *)v107 + 1);
    v94 = __OFSUB__(v108, v109);
    v110 = v108 - v109;
    if (v94)
      goto LABEL_199;
    if (__OFADD__(v105, v110))
      goto LABEL_201;
    if (v105 + v110 >= v86)
    {
      v111 = v86 < v110;
LABEL_154:
      if (v111)
        v83 = v95;
      goto LABEL_156;
    }
LABEL_148:
    if ((v106 & 1) != 0)
      goto LABEL_196;
    v114 = &v81[16 * v83];
    v116 = *(_QWORD *)v114;
    v115 = *((_QWORD *)v114 + 1);
    v94 = __OFSUB__(v115, v116);
    v117 = v115 - v116;
    if (v94)
      goto LABEL_200;
    if (v117 < v105)
      goto LABEL_165;
LABEL_156:
    v122 = v83 - 1;
    if (v83 - 1 >= v80)
      goto LABEL_188;
    if (!v17)
      goto LABEL_218;
    v123 = &v81[16 * v122];
    v124 = v81;
    v125 = *(_QWORD *)v123;
    v126 = v83;
    v127 = &v124[16 * v83];
    v128 = *((_QWORD *)v127 + 1);
    v129 = (char *)(v17 + 8 * *(_QWORD *)v123);
    __dsta = (char *)(v17 + 8 * *(_QWORD *)v127);
    v130 = (char *)(v17 + 8 * v128);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150A4F6C(v129, __dsta, v130, v153, a2, v155, v156, v163);
    if (v164)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    v15 = v159;
    if (v128 < v125)
      goto LABEL_189;
    if (v126 > *((_QWORD *)v159 + 2))
      goto LABEL_190;
    v131 = v126;
    *(_QWORD *)v123 = v125;
    v81 = v152;
    *(_QWORD *)&v152[16 * v122 + 8] = v128;
    v132 = *((_QWORD *)v159 + 2);
    if (v131 >= v132)
      goto LABEL_191;
    v80 = v132 - 1;
    memmove(v127, v127 + 16, 16 * (v132 - 1 - v131));
    *((_QWORD *)v159 + 2) = v132 - 1;
    v9 = v163;
    v10 = v150;
    v17 = v166;
    if (v132 <= 2)
      goto LABEL_165;
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_184:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v146 + 16) = 0;
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A61C0(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL4 v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v69;
  uint64_t result;
  char *v72;
  _QWORD *v73;

  v9 = a4;
  v10 = a3;
  v11 = __dst;
  v12 = __src;
  v13 = __dst - __src;
  v14 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v14 = __dst - __src;
  v15 = v14 >> 3;
  v16 = a3 - __dst;
  v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0)
    v17 = a3 - __dst;
  v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4)
      memmove(a4, __dst, 8 * v18);
    v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8)
      goto LABEL_86;
    v73 = (_QWORD *)(a7 + 16);
    v72 = v12;
    while (1)
    {
      v47 = *((_QWORD *)v19 - 1);
      if ((v47 & 0x8000000000000000) != 0)
      {
LABEL_96:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v48 = v11;
      v49 = v11 - 8;
      v50 = *((_QWORD *)v11 - 1);
      swift_beginAccess();
      v51 = (_QWORD *)*v73;
      if (!*v73)
        goto LABEL_95;
      v52 = v51[1];
      if ((uint64_t)v47 >= v52)
        goto LABEL_96;
      v53 = v51 + 8;
      v54 = *((unsigned __int8 *)v51 + (v47 >> 3) + 64) & (1 << (v47 & 7));
      if (v54)
      {
        v55 = *v51 + 7;
        if (__OFADD__(*v51, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        v56 = v10;
        if (v55 < 0)
          v55 = *v51 + 14;
        v57 = v55 >> 3;
        v58 = v57 - 1;
        v29 = v57 < 1;
        v59 = v57 + 62;
        if (!v29)
          v59 = v58;
        _H0 = *(_WORD *)((char *)v53 + 2 * v47 + (v59 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v50 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        _H0 = 0;
        v56 = v10;
        if ((v50 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v50 >= v52)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v53 + (v50 >> 3)) >> (v50 & 7)) & 1) != 0)
      {
        v61 = *v51;
        if (__OFADD__(v61, 7))
          goto LABEL_93;
        v10 = v56 - 8;
        if (v54)
        {
          v62 = v61 + 14;
          if (v61 + 7 >= 0)
            v62 = v61 + 7;
          v63 = v62 >> 3;
          v64 = v63 - 1;
          v29 = v63 < 1;
          v65 = v63 + 62;
          if (!v29)
            v65 = v64;
          _H1 = *(_WORD *)((char *)v53 + 2 * v50 + (v65 & 0xFFFFFFFFFFFFC0) + 64);
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          v69 = _S1 < _S0;
          if ((a8 & 1) == 0)
            v69 = _S0 < _S1;
          if (v69)
          {
LABEL_76:
            if (v56 == v11)
            {
              v11 -= 8;
              if (v10 < v48)
                goto LABEL_82;
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        v10 = v56 - 8;
        if (v54)
          goto LABEL_76;
      }
      v49 = v19 - 8;
      if (v56 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(_QWORD *)v10 = *(_QWORD *)v49;
        goto LABEL_82;
      }
      _CF = v10 >= v19;
      v19 -= 8;
      if (_CF)
        goto LABEL_81;
LABEL_82:
      if (v11 <= v72 || v19 <= v9)
        goto LABEL_86;
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4)
    memmove(a4, __src, 8 * v15);
  v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    v20 = (_QWORD *)(a7 + 16);
    do
    {
      v21 = *(_QWORD *)v11;
      if ((*(_QWORD *)v11 & 0x8000000000000000) != 0)
        goto LABEL_96;
      v22 = *(_QWORD *)v9;
      swift_beginAccess();
      v23 = (_QWORD *)*v20;
      if (!*v20)
        goto LABEL_94;
      v24 = v23[1];
      if ((uint64_t)v21 >= v24)
        goto LABEL_96;
      v25 = v23 + 8;
      v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0)
          v27 = *v23 + 14;
        v28 = v27 >> 3;
        v30 = v28 - 1;
        v29 = v28 < 1;
        v31 = v28 + 62;
        if (!v29)
          v31 = v30;
        _H0 = *(_WORD *)((char *)v25 + 2 * v21 + (v31 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        _H0 = 0;
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v22 >= v24)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)) & 1) != 0)
      {
        v33 = *v23;
        _VF = __OFADD__(v33, 7);
        v35 = v33 + 7;
        if (_VF)
          goto LABEL_92;
        if (!v26)
          goto LABEL_33;
        v36 = v35 / 8;
        v37 = v36 - 1;
        v29 = v36 < 1;
        v38 = v36 + 62;
        if (!v29)
          v38 = v37;
        _H1 = *(_WORD *)((char *)v25 + 2 * v22 + (v38 & 0xFFFFFFFFFFFFC0) + 64);
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        v45 = _S1 < _S0;
        if ((a8 & 1) == 0)
          v45 = _S0 < _S1;
        if (!v45)
        {
LABEL_33:
          v46 = v9;
          _ZF = v12 == v9;
          v9 += 8;
          if (_ZF)
            goto LABEL_35;
LABEL_34:
          *(_QWORD *)v12 = *(_QWORD *)v46;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      v46 = v11;
      _ZF = v12 == v11;
      v11 += 8;
      if (!_ZF)
        goto LABEL_34;
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  return 1;
}

uint64_t sub_2150A66A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v39;
  unint64_t v40;
  uint64_t v42;

  v42 = result;
  if (a3 != a2)
  {
    v9 = a3;
    v10 = *a4;
    v11 = (_QWORD *)(a7 + 16);
    v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    v13 = *(_QWORD *)(v10 + 8 * v9);
    v14 = v42;
    v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      v16 = *v15;
      result = swift_beginAccess();
      v17 = (_QWORD *)*v11;
      if (!*v11)
        goto LABEL_34;
      v18 = v17[1];
      if ((uint64_t)v13 >= v18)
        break;
      v19 = v17 + 8;
      v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0)
          v21 = *v17 + 14;
        v22 = v21 >> 3;
        v24 = v22 - 1;
        v23 = v22 < 1;
        v25 = v22 + 62;
        if (!v23)
          v25 = v24;
        _H0 = *(_WORD *)((char *)v19 + 2 * v13 + (v25 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        _H0 = 0;
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v16 >= v18)
        break;
      if (((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)) & 1) != 0)
      {
        v27 = *v17;
        _VF = __OFADD__(v27, 7);
        v29 = v27 + 7;
        if (_VF)
          goto LABEL_33;
        if (!v20)
          goto LABEL_4;
        v30 = v29 / 8;
        v31 = v30 - 1;
        v23 = v30 < 1;
        v32 = v30 + 62;
        if (!v23)
          v32 = v31;
        _H1 = *(_WORD *)((char *)v19 + 2 * v16 + (v32 & 0xFFFFFFFFFFFFC0) + 64);
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        v39 = _S1 < _S0;
        if ((a8 & 1) == 0)
          v39 = _S0 < _S1;
        if (!v39)
          goto LABEL_4;
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10)
        goto LABEL_35;
      v40 = *v15;
      v13 = v15[1];
      *v15 = v13;
      v15[1] = v40;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2)
          return result;
        goto LABEL_5;
      }
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150A68C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v36;
  uint64_t v37;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BOOL4 v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  unint64_t v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  unint64_t v149;
  uint64_t result;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v168;
  char *v169;
  int v170;
  uint64_t v171;
  _QWORD **v172;
  uint64_t v173;
  uint64_t v174;

  v9 = a5 & 1;
  v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_215130394();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A66A4(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_211;
  v160 = a4;
  v161 = a3;
  v170 = v9;
  v154 = v11;
  v171 = v5;
  v152 = a1;
  if (v10 <= 1)
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v158 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v153 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v87 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_171:
      if (v87 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v153 + 16) = 0;
        goto LABEL_184;
      }
      v140 = *v152;
      v174 = *v152;
      while (1)
      {
        v141 = v87 - 2;
        if (v87 < 2)
          goto LABEL_205;
        if (!v140)
          goto LABEL_220;
        v164 = v15;
        v142 = v15 + 32;
        v143 = *(_QWORD *)&v15[16 * v141 + 32];
        v144 = *(_QWORD *)&v15[16 * v87 + 24];
        v145 = (char *)(v140 + 8 * v143);
        v146 = (char *)(v140 + 8 * *(_QWORD *)&v142[16 * v87 - 16]);
        v147 = (char *)(v140 + 8 * v144);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A61C0(v145, v146, v147, v158, a2, v161, v160, v170);
        if (v171)
          goto LABEL_183;
        swift_release();
        swift_bridgeObjectRelease();
        if (v144 < v143)
          goto LABEL_206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v164 = sub_21501E510((uint64_t)v164);
        if (v141 >= *((_QWORD *)v164 + 2))
          goto LABEL_207;
        v148 = &v164[16 * v141 + 32];
        *(_QWORD *)v148 = v143;
        *((_QWORD *)v148 + 1) = v144;
        v149 = *((_QWORD *)v164 + 2);
        if (v87 > v149)
          goto LABEL_208;
        v15 = v164;
        memmove(&v164[16 * v87 + 16], &v164[16 * v87 + 32], 16 * (v149 - v87));
        *((_QWORD *)v164 + 2) = v149 - 1;
        v87 = v149 - 1;
        v140 = v174;
        if (v149 <= 2)
          goto LABEL_182;
      }
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_21512FCF8();
    *(_QWORD *)(v14 + 16) = v13;
    v153 = v14;
    v158 = (char *)(v14 + 32);
  }
  v16 = 0;
  v17 = *a1;
  v172 = (_QWORD **)(a4 + 16);
  v151 = *a1 - 8;
  v15 = (char *)MEMORY[0x24BEE4AF8];
  v173 = *a1;
  v157 = v10;
  while (1)
  {
    v18 = (char *)v16;
    v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      __dst = (char *)v16;
      v155 = (char *)(v16 + 1);
      v20 = *(_QWORD *)(v17 + 8 * v19);
      if (v20 < 0)
        goto LABEL_222;
      v21 = *(_QWORD *)(v17 + 8 * v16);
      swift_beginAccess();
      v22 = *v172;
      if (!*v172)
        goto LABEL_221;
      v23 = v22[1];
      if (v20 >= v23)
        goto LABEL_222;
      v24 = sub_2150997D4(v20, v22, v23);
      if (v21 < 0)
        goto LABEL_222;
      v26 = v22[1];
      if (v21 >= v26)
        goto LABEL_222;
      v27 = v24;
      v28 = sub_2150997D4(v21, v22, v25);
      if ((v27 & 0x10000) != 0)
      {
        v36 = 0;
        v17 = v173;
        v18 = __dst;
      }
      else
      {
        v17 = v173;
        v18 = __dst;
        if ((v28 & 0x10000) != 0)
        {
          v37 = (uint64_t)(__dst + 2);
          if ((uint64_t)(__dst + 2) >= v10)
          {
            if ((uint64_t)__dst < v37)
              goto LABEL_68;
            goto LABEL_76;
          }
          v36 = 1;
          goto LABEL_32;
        }
        _H0 = v27;
        _H1 = v28;
        if (v9)
        {
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          _NF = _S1 < _S0;
        }
        else
        {
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          _NF = _S0 < _S1;
        }
        v36 = _NF;
      }
      v37 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10)
        goto LABEL_65;
LABEL_32:
      v40 = v22 + 8;
      if (v10 <= v37 + 1)
        v41 = v37 + 1;
      else
        v41 = v10;
      v42 = *(_QWORD *)(v17 + 8 * (_QWORD)v155);
      while (1)
      {
        v43 = v42;
        v42 = *(_QWORD *)(v17 + 8 * v37);
        if (v42 < 0 || v42 >= v26)
          goto LABEL_222;
        v44 = *((unsigned __int8 *)v40 + ((unint64_t)v42 >> 3)) & (1 << (v42 & 7));
        if (v44)
        {
          v45 = *v22 + 7;
          if (__OFADD__(*v22, 7))
            goto LABEL_202;
          if (v45 < 0)
            v45 = *v22 + 14;
          v46 = v45 >> 3;
          v47 = v46 - 1;
          v118 = v46 < 1;
          v48 = v46 + 62;
          if (!v118)
            v48 = v47;
          _H0 = *(_WORD *)((char *)v40 + 2 * v42 + (v48 & 0xFFFFFFFFFFFFC0) + 64);
          if (v43 < 0)
            goto LABEL_222;
        }
        else
        {
          _H0 = 0;
          if (v43 < 0)
            goto LABEL_222;
        }
        if (v43 >= v26)
          goto LABEL_222;
        if (((*((unsigned __int8 *)v40 + ((unint64_t)v43 >> 3)) >> (v43 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v22, 7))
            goto LABEL_203;
          if (!v44)
          {
LABEL_36:
            if ((v36 & 1) != 0)
            {
              if (v37 < (uint64_t)v18)
                goto LABEL_213;
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          v50 = *v22 + 14;
          if (*v22 + 7 >= 0)
            v50 = *v22 + 7;
          v51 = v50 >> 3;
          v52 = v51 - 1;
          v118 = v51 < 1;
          v53 = v51 + 62;
          if (!v118)
            v53 = v52;
          _H1 = *(_WORD *)((char *)v40 + 2 * v43 + (v53 & 0xFFFFFFFFFFFFC0) + 64);
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          v57 = _S1 < _S0;
          if (!v9)
            v57 = _S0 < _S1;
          if (v36 != v57)
            goto LABEL_65;
        }
        else
        {
          if (!v44)
            goto LABEL_36;
          if ((v36 & 1) == 0)
          {
            v19 = v37;
            break;
          }
        }
LABEL_37:
        if (++v37 >= v10)
        {
          v37 = v41;
LABEL_65:
          v19 = v37;
          if (!v36)
            break;
          if (v37 < (uint64_t)v18)
            goto LABEL_213;
LABEL_67:
          if ((uint64_t)v18 < v37)
          {
LABEL_68:
            v58 = v37 - 1;
            v59 = v18;
            do
            {
              if (v59 != (char *)v58)
              {
                if (!v17)
                  goto LABEL_219;
                v60 = *(_QWORD *)(v17 + 8 * (_QWORD)v59);
                *(_QWORD *)(v17 + 8 * (_QWORD)v59) = *(_QWORD *)(v17 + 8 * v58);
                *(_QWORD *)(v17 + 8 * v58) = v60;
              }
              v118 = (uint64_t)++v59 < v58--;
            }
            while (v118);
          }
LABEL_76:
          v19 = v37;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18))
        goto LABEL_210;
      if (v19 - (uint64_t)v18 < v154)
      {
        if (__OFADD__(v18, v154))
          goto LABEL_214;
        if ((uint64_t)&v18[v154] >= v10)
          v61 = v10;
        else
          v61 = (uint64_t)&v18[v154];
        if (v61 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          result = sub_2151302EC();
          __break(1u);
          return result;
        }
        if (v19 != v61)
        {
          v162 = v15;
          __dsta = v18;
          v62 = (unint64_t *)(v151 + 8 * v19);
          v168 = v61;
          do
          {
            v63 = *(_QWORD *)(v17 + 8 * v19);
            v64 = v62;
            do
            {
              if ((v63 & 0x8000000000000000) != 0)
                goto LABEL_222;
              v65 = *v64;
              swift_beginAccess();
              v66 = *v172;
              if (!*v172)
                goto LABEL_216;
              v67 = v66[1];
              v17 = v173;
              if ((uint64_t)v63 >= v67)
                goto LABEL_222;
              v68 = v66 + 8;
              v69 = *((unsigned __int8 *)v66 + (v63 >> 3) + 64) & (1 << (v63 & 7));
              if (v69)
              {
                v70 = *v66 + 7;
                if (__OFADD__(*v66, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v70 < 0)
                  v70 = *v66 + 14;
                v71 = v70 >> 3;
                v72 = v71 - 1;
                v118 = v71 < 1;
                v73 = v71 + 62;
                if (!v118)
                  v73 = v72;
                _H0 = *(_WORD *)((char *)v68 + 2 * v63 + (v73 & 0xFFFFFFFFFFFFC0) + 64);
                if ((v65 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              else
              {
                _H0 = 0;
                if ((v65 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              if ((uint64_t)v65 >= v67)
                goto LABEL_222;
              if (((*((unsigned __int8 *)v68 + (v65 >> 3)) >> (v65 & 7)) & 1) != 0)
              {
                v75 = *v66;
                _VF = __OFADD__(v75, 7);
                v76 = v75 + 7;
                if (_VF)
                  goto LABEL_187;
                if (!v69)
                  break;
                v77 = v76 / 8;
                v78 = v77 - 1;
                v118 = v77 < 1;
                v79 = v77 + 62;
                if (!v118)
                  v79 = v78;
                _H1 = *(_WORD *)((char *)v68 + 2 * v65 + (v79 & 0xFFFFFFFFFFFFC0) + 64);
                __asm
                {
                  FCVT            S1, H1
                  FCVT            S0, H0
                }
                v83 = _S1 < _S0;
                if (!v9)
                  v83 = _S0 < _S1;
                if (!v83)
                  break;
              }
              else if (!v69)
              {
                break;
              }
              if (!v173)
                goto LABEL_217;
              v84 = *v64;
              v63 = v64[1];
              *v64 = v63;
              v64[1] = v84;
              --v64;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v62;
            v18 = __dsta;
          }
          while (v19 != v168);
          v19 = v168;
          v15 = v162;
        }
      }
    }
    if (v19 < (uint64_t)v18)
      goto LABEL_209;
    v156 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v86 = *((_QWORD *)v15 + 2);
    v85 = *((_QWORD *)v15 + 3);
    v87 = v86 + 1;
    v17 = v173;
    if (v86 >= v85 >> 1)
    {
      v139 = sub_21502DABC((char *)(v85 > 1), v86 + 1, 1, v15);
      v17 = v173;
      v15 = v139;
    }
    *((_QWORD *)v15 + 2) = v87;
    v88 = v15 + 32;
    v89 = &v15[16 * v86 + 32];
    *(_QWORD *)v89 = v18;
    *((_QWORD *)v89 + 1) = v156;
    if (v86)
      break;
    v87 = 1;
LABEL_165:
    v16 = v156;
    if (v156 >= v10)
      goto LABEL_171;
  }
  v163 = v15;
  v169 = v15 + 32;
  while (1)
  {
    v90 = v87 - 1;
    if (v87 >= 4)
    {
      v95 = &v88[16 * v87];
      v96 = *((_QWORD *)v95 - 8);
      v97 = *((_QWORD *)v95 - 7);
      _VF = __OFSUB__(v97, v96);
      v98 = v97 - v96;
      if (_VF)
        goto LABEL_192;
      v100 = *((_QWORD *)v95 - 6);
      v99 = *((_QWORD *)v95 - 5);
      _VF = __OFSUB__(v99, v100);
      v93 = v99 - v100;
      v94 = _VF;
      if (_VF)
        goto LABEL_193;
      v102 = v87 - 2;
      v103 = &v88[16 * v87 - 32];
      v105 = *(_QWORD *)v103;
      v104 = *((_QWORD *)v103 + 1);
      _VF = __OFSUB__(v104, v105);
      v106 = v104 - v105;
      if (_VF)
        goto LABEL_194;
      _VF = __OFADD__(v93, v106);
      v107 = v93 + v106;
      if (_VF)
        goto LABEL_197;
      if (v107 >= v98)
      {
        v125 = &v88[16 * v90];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        _VF = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (_VF)
          goto LABEL_204;
        v118 = v93 < v128;
        goto LABEL_154;
      }
    }
    else
    {
      if (v87 != 3)
      {
        v119 = *((_QWORD *)v15 + 4);
        v120 = *((_QWORD *)v15 + 5);
        _VF = __OFSUB__(v120, v119);
        v112 = v120 - v119;
        v113 = _VF;
        goto LABEL_148;
      }
      v92 = *((_QWORD *)v15 + 4);
      v91 = *((_QWORD *)v15 + 5);
      _VF = __OFSUB__(v91, v92);
      v93 = v91 - v92;
      v94 = _VF;
    }
    if ((v94 & 1) != 0)
      goto LABEL_195;
    v102 = v87 - 2;
    v108 = &v88[16 * v87 - 32];
    v110 = *(_QWORD *)v108;
    v109 = *((_QWORD *)v108 + 1);
    v111 = __OFSUB__(v109, v110);
    v112 = v109 - v110;
    v113 = v111;
    if (v111)
      goto LABEL_198;
    v114 = &v88[16 * v90];
    v116 = *(_QWORD *)v114;
    v115 = *((_QWORD *)v114 + 1);
    _VF = __OFSUB__(v115, v116);
    v117 = v115 - v116;
    if (_VF)
      goto LABEL_199;
    if (__OFADD__(v112, v117))
      goto LABEL_201;
    if (v112 + v117 >= v93)
    {
      v118 = v93 < v117;
LABEL_154:
      if (v118)
        v90 = v102;
      goto LABEL_156;
    }
LABEL_148:
    if ((v113 & 1) != 0)
      goto LABEL_196;
    v121 = &v88[16 * v90];
    v123 = *(_QWORD *)v121;
    v122 = *((_QWORD *)v121 + 1);
    _VF = __OFSUB__(v122, v123);
    v124 = v122 - v123;
    if (_VF)
      goto LABEL_200;
    if (v124 < v112)
      goto LABEL_165;
LABEL_156:
    v129 = v90 - 1;
    if (v90 - 1 >= v87)
      goto LABEL_188;
    if (!v17)
      goto LABEL_218;
    v130 = &v88[16 * v129];
    v131 = *(_QWORD *)v130;
    v132 = v90;
    v133 = &v88[16 * v90];
    v134 = *((_QWORD *)v133 + 1);
    v135 = (char *)(v17 + 8 * *(_QWORD *)v130);
    __dstb = (char *)(v17 + 8 * *(_QWORD *)v133);
    v136 = (char *)(v17 + 8 * v134);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150A61C0(v135, __dstb, v136, v158, a2, v161, v160, v170);
    if (v171)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    v15 = v163;
    if (v134 < v131)
      goto LABEL_189;
    if (v132 > *((_QWORD *)v163 + 2))
      goto LABEL_190;
    v137 = v132;
    *(_QWORD *)v130 = v131;
    *(_QWORD *)&v169[16 * v129 + 8] = v134;
    v138 = *((_QWORD *)v163 + 2);
    if (v137 >= v138)
      goto LABEL_191;
    v87 = v138 - 1;
    memmove(v133, v133 + 16, 16 * (v138 - 1 - v137));
    v88 = v169;
    *((_QWORD *)v163 + 2) = v138 - 1;
    v9 = v170;
    v10 = v157;
    v17 = v173;
    if (v138 <= 2)
      goto LABEL_165;
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v153 + 16) = 0;
LABEL_184:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A7448(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float v39;
  _BOOL4 v40;
  char *v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  float v62;
  _BOOL4 v63;
  BOOL v64;
  uint64_t result;
  char *v67;
  _QWORD *v68;

  v9 = a4;
  v10 = a3;
  v11 = __dst;
  v12 = __src;
  v13 = __dst - __src;
  v14 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v14 = __dst - __src;
  v15 = v14 >> 3;
  v16 = a3 - __dst;
  v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0)
    v17 = a3 - __dst;
  v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4)
      memmove(a4, __dst, 8 * v18);
    v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8)
      goto LABEL_86;
    v68 = (_QWORD *)(a7 + 16);
    v67 = v12;
    while (1)
    {
      v43 = *((_QWORD *)v19 - 1);
      if ((v43 & 0x8000000000000000) != 0)
      {
LABEL_96:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v44 = v11;
      v45 = v11 - 8;
      v46 = *((_QWORD *)v11 - 1);
      swift_beginAccess();
      v47 = (_QWORD *)*v68;
      if (!*v68)
        goto LABEL_95;
      v48 = v47[1];
      if ((uint64_t)v43 >= v48)
        goto LABEL_96;
      v49 = v47 + 8;
      v50 = *((unsigned __int8 *)v47 + (v43 >> 3) + 64) & (1 << (v43 & 7));
      if (v50)
      {
        v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        v52 = v10;
        if (v51 < 0)
          v51 = *v47 + 14;
        v53 = v51 >> 3;
        v54 = v53 - 1;
        v29 = v53 < 1;
        v55 = v53 + 62;
        if (!v29)
          v55 = v54;
        v56 = *(float *)((char *)v49 + 4 * v43 + (v55 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v46 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v56 = 0.0;
        v52 = v10;
        if ((v46 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v46 >= v48)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)) & 1) != 0)
      {
        v57 = *v47;
        if (__OFADD__(v57, 7))
          goto LABEL_93;
        v10 = v52 - 8;
        if (v50)
        {
          v58 = v57 + 14;
          if (v57 + 7 >= 0)
            v58 = v57 + 7;
          v59 = v58 >> 3;
          v60 = v59 - 1;
          v29 = v59 < 1;
          v61 = v59 + 62;
          if (!v29)
            v61 = v60;
          v62 = *(float *)((char *)v49 + 4 * v46 + (v61 & 0xFFFFFFFFFFFFC0) + 64);
          v63 = v62 < v56;
          if ((a8 & 1) == 0)
            v63 = v56 < v62;
          if (v63)
          {
LABEL_76:
            if (v52 == v11)
            {
              v11 -= 8;
              if (v10 < v44)
                goto LABEL_82;
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        v10 = v52 - 8;
        if (v50)
          goto LABEL_76;
      }
      v45 = v19 - 8;
      if (v52 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(_QWORD *)v10 = *(_QWORD *)v45;
        goto LABEL_82;
      }
      v64 = v10 >= v19;
      v19 -= 8;
      if (v64)
        goto LABEL_81;
LABEL_82:
      if (v11 <= v67 || v19 <= v9)
        goto LABEL_86;
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4)
    memmove(a4, __src, 8 * v15);
  v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    v20 = (_QWORD *)(a7 + 16);
    do
    {
      v21 = *(_QWORD *)v11;
      if ((*(_QWORD *)v11 & 0x8000000000000000) != 0)
        goto LABEL_96;
      v22 = *(_QWORD *)v9;
      swift_beginAccess();
      v23 = (_QWORD *)*v20;
      if (!*v20)
        goto LABEL_94;
      v24 = v23[1];
      if ((uint64_t)v21 >= v24)
        goto LABEL_96;
      v25 = v23 + 8;
      v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0)
          v27 = *v23 + 14;
        v28 = v27 >> 3;
        v30 = v28 - 1;
        v29 = v28 < 1;
        v31 = v28 + 62;
        if (!v29)
          v31 = v30;
        v32 = *(float *)((char *)v25 + 4 * v21 + (v31 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v32 = 0.0;
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v22 >= v24)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)) & 1) != 0)
      {
        v33 = *v23;
        v34 = __OFADD__(v33, 7);
        v35 = v33 + 7;
        if (v34)
          goto LABEL_92;
        if (!v26)
          goto LABEL_33;
        v36 = v35 / 8;
        v37 = v36 - 1;
        v29 = v36 < 1;
        v38 = v36 + 62;
        if (!v29)
          v38 = v37;
        v39 = *(float *)((char *)v25 + 4 * v22 + (v38 & 0xFFFFFFFFFFFFC0) + 64);
        v40 = v39 < v32;
        if ((a8 & 1) == 0)
          v40 = v32 < v39;
        if (!v40)
        {
LABEL_33:
          v41 = v9;
          v42 = v12 == v9;
          v9 += 8;
          if (v42)
            goto LABEL_35;
LABEL_34:
          *(_QWORD *)v12 = *(_QWORD *)v41;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      v41 = v11;
      v42 = v12 == v11;
      v11 += 8;
      if (!v42)
        goto LABEL_34;
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  return 1;
}

uint64_t sub_2150A791C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  float v33;
  _BOOL4 v34;
  unint64_t v35;
  uint64_t v37;

  v37 = result;
  if (a3 != a2)
  {
    v9 = a3;
    v10 = *a4;
    v11 = (_QWORD *)(a7 + 16);
    v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    v13 = *(_QWORD *)(v10 + 8 * v9);
    v14 = v37;
    v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      v16 = *v15;
      result = swift_beginAccess();
      v17 = (_QWORD *)*v11;
      if (!*v11)
        goto LABEL_34;
      v18 = v17[1];
      if ((uint64_t)v13 >= v18)
        break;
      v19 = v17 + 8;
      v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0)
          v21 = *v17 + 14;
        v22 = v21 >> 3;
        v24 = v22 - 1;
        v23 = v22 < 1;
        v25 = v22 + 62;
        if (!v23)
          v25 = v24;
        v26 = *(float *)((char *)v19 + 4 * v13 + (v25 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v26 = 0.0;
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v16 >= v18)
        break;
      if (((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)) & 1) != 0)
      {
        v27 = *v17;
        v28 = __OFADD__(v27, 7);
        v29 = v27 + 7;
        if (v28)
          goto LABEL_33;
        if (!v20)
          goto LABEL_4;
        v30 = v29 / 8;
        v31 = v30 - 1;
        v23 = v30 < 1;
        v32 = v30 + 62;
        if (!v23)
          v32 = v31;
        v33 = *(float *)((char *)v19 + 4 * v16 + (v32 & 0xFFFFFFFFFFFFC0) + 64);
        v34 = v33 < v26;
        if ((a8 & 1) == 0)
          v34 = v26 < v33;
        if (!v34)
          goto LABEL_4;
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10)
        goto LABEL_35;
      v35 = *v15;
      v13 = v15[1];
      *v15 = v13;
      v15[1] = v35;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2)
          return result;
        goto LABEL_5;
      }
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150A7B38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  int64_t v28;
  BOOL v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  float v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  _BOOL4 v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  unint64_t v137;
  uint64_t result;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v156;
  char *v157;
  int v158;
  uint64_t v159;
  _QWORD **v160;
  uint64_t v161;
  uint64_t v162;

  v9 = a5 & 1;
  v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_215130394();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A791C(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_211;
  v148 = a4;
  v149 = a3;
  v158 = v9;
  v142 = v11;
  v159 = v5;
  v140 = a1;
  if (v10 <= 1)
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v146 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v141 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v75 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_171:
      if (v75 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v141 + 16) = 0;
        goto LABEL_184;
      }
      v128 = *v140;
      v162 = *v140;
      while (1)
      {
        v129 = v75 - 2;
        if (v75 < 2)
          goto LABEL_205;
        if (!v128)
          goto LABEL_220;
        v152 = v15;
        v130 = v15 + 32;
        v131 = *(_QWORD *)&v15[16 * v129 + 32];
        v132 = *(_QWORD *)&v15[16 * v75 + 24];
        v133 = (char *)(v128 + 8 * v131);
        v134 = (char *)(v128 + 8 * *(_QWORD *)&v130[16 * v75 - 16]);
        v135 = (char *)(v128 + 8 * v132);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A7448(v133, v134, v135, v146, a2, v149, v148, v158);
        if (v159)
          goto LABEL_183;
        swift_release();
        swift_bridgeObjectRelease();
        if (v132 < v131)
          goto LABEL_206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v152 = sub_21501E510((uint64_t)v152);
        if (v129 >= *((_QWORD *)v152 + 2))
          goto LABEL_207;
        v136 = &v152[16 * v129 + 32];
        *(_QWORD *)v136 = v131;
        *((_QWORD *)v136 + 1) = v132;
        v137 = *((_QWORD *)v152 + 2);
        if (v75 > v137)
          goto LABEL_208;
        v15 = v152;
        memmove(&v152[16 * v75 + 16], &v152[16 * v75 + 32], 16 * (v137 - v75));
        *((_QWORD *)v152 + 2) = v137 - 1;
        v75 = v137 - 1;
        v128 = v162;
        if (v137 <= 2)
          goto LABEL_182;
      }
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_21512FCF8();
    *(_QWORD *)(v14 + 16) = v13;
    v141 = v14;
    v146 = (char *)(v14 + 32);
  }
  v16 = 0;
  v17 = *a1;
  v160 = (_QWORD **)(a4 + 16);
  v139 = *a1 - 8;
  v15 = (char *)MEMORY[0x24BEE4AF8];
  v161 = *a1;
  v145 = v10;
  while (1)
  {
    v18 = (char *)v16;
    v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      __dst = (char *)v16;
      v143 = (char *)(v16 + 1);
      v20 = *(_QWORD *)(v17 + 8 * v19);
      if (v20 < 0)
        goto LABEL_222;
      v21 = *(_QWORD *)(v17 + 8 * v16);
      swift_beginAccess();
      v22 = *v160;
      if (!*v160)
        goto LABEL_221;
      v23 = v22[1];
      if (v20 >= v23)
        goto LABEL_222;
      v24 = sub_21509972C(v20, v22, v23);
      if (v21 < 0)
        goto LABEL_222;
      v26 = v22[1];
      if (v21 >= v26)
        goto LABEL_222;
      v27 = v24;
      v28 = sub_21509972C(v21, v22, v25);
      if ((v27 & 0x100000000) != 0)
      {
        v30 = 0;
        v17 = v161;
        v18 = __dst;
      }
      else
      {
        v17 = v161;
        v18 = __dst;
        if ((v28 & 0x100000000) != 0)
        {
          v31 = (uint64_t)(__dst + 2);
          if ((uint64_t)(__dst + 2) >= v10)
          {
            if ((uint64_t)__dst < v31)
              goto LABEL_68;
            goto LABEL_76;
          }
          v30 = 1;
          goto LABEL_32;
        }
        if (v9)
          v29 = *(float *)&v28 < *(float *)&v27;
        else
          v29 = *(float *)&v27 < *(float *)&v28;
        v30 = v29;
      }
      v31 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10)
        goto LABEL_65;
LABEL_32:
      v32 = v22 + 8;
      if (v10 <= v31 + 1)
        v33 = v31 + 1;
      else
        v33 = v10;
      v34 = *(_QWORD *)(v17 + 8 * (_QWORD)v143);
      while (1)
      {
        v35 = v34;
        v34 = *(_QWORD *)(v17 + 8 * v31);
        if (v34 < 0 || v34 >= v26)
          goto LABEL_222;
        v36 = *((unsigned __int8 *)v32 + ((unint64_t)v34 >> 3)) & (1 << (v34 & 7));
        if (v36)
        {
          v37 = *v22 + 7;
          if (__OFADD__(*v22, 7))
            goto LABEL_202;
          if (v37 < 0)
            v37 = *v22 + 14;
          v38 = v37 >> 3;
          v39 = v38 - 1;
          v106 = v38 < 1;
          v40 = v38 + 62;
          if (!v106)
            v40 = v39;
          v41 = *(float *)((char *)v32 + 4 * v34 + (v40 & 0xFFFFFFFFFFFFC0) + 64);
          if (v35 < 0)
            goto LABEL_222;
        }
        else
        {
          v41 = 0.0;
          if (v35 < 0)
            goto LABEL_222;
        }
        if (v35 >= v26)
          goto LABEL_222;
        if (((*((unsigned __int8 *)v32 + ((unint64_t)v35 >> 3)) >> (v35 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v22, 7))
            goto LABEL_203;
          if (!v36)
          {
LABEL_36:
            if ((v30 & 1) != 0)
            {
              if (v31 < (uint64_t)v18)
                goto LABEL_213;
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          v42 = *v22 + 14;
          if (*v22 + 7 >= 0)
            v42 = *v22 + 7;
          v43 = v42 >> 3;
          v44 = v43 - 1;
          v106 = v43 < 1;
          v45 = v43 + 62;
          if (!v106)
            v45 = v44;
          v46 = *(float *)((char *)v32 + 4 * v35 + (v45 & 0xFFFFFFFFFFFFC0) + 64);
          v47 = v46 < v41;
          if (!v9)
            v47 = v41 < v46;
          if (v30 != v47)
            goto LABEL_65;
        }
        else
        {
          if (!v36)
            goto LABEL_36;
          if ((v30 & 1) == 0)
          {
            v19 = v31;
            break;
          }
        }
LABEL_37:
        if (++v31 >= v10)
        {
          v31 = v33;
LABEL_65:
          v19 = v31;
          if (!v30)
            break;
          if (v31 < (uint64_t)v18)
            goto LABEL_213;
LABEL_67:
          if ((uint64_t)v18 < v31)
          {
LABEL_68:
            v48 = v31 - 1;
            v49 = v18;
            do
            {
              if (v49 != (char *)v48)
              {
                if (!v17)
                  goto LABEL_219;
                v50 = *(_QWORD *)(v17 + 8 * (_QWORD)v49);
                *(_QWORD *)(v17 + 8 * (_QWORD)v49) = *(_QWORD *)(v17 + 8 * v48);
                *(_QWORD *)(v17 + 8 * v48) = v50;
              }
              v106 = (uint64_t)++v49 < v48--;
            }
            while (v106);
          }
LABEL_76:
          v19 = v31;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18))
        goto LABEL_210;
      if (v19 - (uint64_t)v18 < v142)
      {
        if (__OFADD__(v18, v142))
          goto LABEL_214;
        if ((uint64_t)&v18[v142] >= v10)
          v51 = v10;
        else
          v51 = (uint64_t)&v18[v142];
        if (v51 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          result = sub_2151302EC();
          __break(1u);
          return result;
        }
        if (v19 != v51)
        {
          v150 = v15;
          __dsta = v18;
          v52 = (unint64_t *)(v139 + 8 * v19);
          v156 = v51;
          do
          {
            v53 = *(_QWORD *)(v17 + 8 * v19);
            v54 = v52;
            do
            {
              if ((v53 & 0x8000000000000000) != 0)
                goto LABEL_222;
              v55 = *v54;
              swift_beginAccess();
              v56 = *v160;
              if (!*v160)
                goto LABEL_216;
              v57 = v56[1];
              v17 = v161;
              if ((uint64_t)v53 >= v57)
                goto LABEL_222;
              v58 = v56 + 8;
              v59 = *((unsigned __int8 *)v56 + (v53 >> 3) + 64) & (1 << (v53 & 7));
              if (v59)
              {
                v60 = *v56 + 7;
                if (__OFADD__(*v56, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v60 < 0)
                  v60 = *v56 + 14;
                v61 = v60 >> 3;
                v62 = v61 - 1;
                v106 = v61 < 1;
                v63 = v61 + 62;
                if (!v106)
                  v63 = v62;
                v64 = *(float *)((char *)v58 + 4 * v53 + (v63 & 0xFFFFFFFFFFFFC0) + 64);
                if ((v55 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              else
              {
                v64 = 0.0;
                if ((v55 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              if ((uint64_t)v55 >= v57)
                goto LABEL_222;
              if (((*((unsigned __int8 *)v58 + (v55 >> 3)) >> (v55 & 7)) & 1) != 0)
              {
                v65 = *v56;
                v89 = __OFADD__(v65, 7);
                v66 = v65 + 7;
                if (v89)
                  goto LABEL_187;
                if (!v59)
                  break;
                v67 = v66 / 8;
                v68 = v67 - 1;
                v106 = v67 < 1;
                v69 = v67 + 62;
                if (!v106)
                  v69 = v68;
                v70 = *(float *)((char *)v58 + 4 * v55 + (v69 & 0xFFFFFFFFFFFFC0) + 64);
                v71 = v70 < v64;
                if (!v9)
                  v71 = v64 < v70;
                if (!v71)
                  break;
              }
              else if (!v59)
              {
                break;
              }
              if (!v161)
                goto LABEL_217;
              v72 = *v54;
              v53 = v54[1];
              *v54 = v53;
              v54[1] = v72;
              --v54;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v52;
            v18 = __dsta;
          }
          while (v19 != v156);
          v19 = v156;
          v15 = v150;
        }
      }
    }
    if (v19 < (uint64_t)v18)
      goto LABEL_209;
    v144 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v74 = *((_QWORD *)v15 + 2);
    v73 = *((_QWORD *)v15 + 3);
    v75 = v74 + 1;
    v17 = v161;
    if (v74 >= v73 >> 1)
    {
      v127 = sub_21502DABC((char *)(v73 > 1), v74 + 1, 1, v15);
      v17 = v161;
      v15 = v127;
    }
    *((_QWORD *)v15 + 2) = v75;
    v76 = v15 + 32;
    v77 = &v15[16 * v74 + 32];
    *(_QWORD *)v77 = v18;
    *((_QWORD *)v77 + 1) = v144;
    if (v74)
      break;
    v75 = 1;
LABEL_165:
    v16 = v144;
    if (v144 >= v10)
      goto LABEL_171;
  }
  v151 = v15;
  v157 = v15 + 32;
  while (1)
  {
    v78 = v75 - 1;
    if (v75 >= 4)
    {
      v83 = &v76[16 * v75];
      v84 = *((_QWORD *)v83 - 8);
      v85 = *((_QWORD *)v83 - 7);
      v89 = __OFSUB__(v85, v84);
      v86 = v85 - v84;
      if (v89)
        goto LABEL_192;
      v88 = *((_QWORD *)v83 - 6);
      v87 = *((_QWORD *)v83 - 5);
      v89 = __OFSUB__(v87, v88);
      v81 = v87 - v88;
      v82 = v89;
      if (v89)
        goto LABEL_193;
      v90 = v75 - 2;
      v91 = &v76[16 * v75 - 32];
      v93 = *(_QWORD *)v91;
      v92 = *((_QWORD *)v91 + 1);
      v89 = __OFSUB__(v92, v93);
      v94 = v92 - v93;
      if (v89)
        goto LABEL_194;
      v89 = __OFADD__(v81, v94);
      v95 = v81 + v94;
      if (v89)
        goto LABEL_197;
      if (v95 >= v86)
      {
        v113 = &v76[16 * v78];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v89 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v89)
          goto LABEL_204;
        v106 = v81 < v116;
        goto LABEL_154;
      }
    }
    else
    {
      if (v75 != 3)
      {
        v107 = *((_QWORD *)v15 + 4);
        v108 = *((_QWORD *)v15 + 5);
        v89 = __OFSUB__(v108, v107);
        v100 = v108 - v107;
        v101 = v89;
        goto LABEL_148;
      }
      v80 = *((_QWORD *)v15 + 4);
      v79 = *((_QWORD *)v15 + 5);
      v89 = __OFSUB__(v79, v80);
      v81 = v79 - v80;
      v82 = v89;
    }
    if ((v82 & 1) != 0)
      goto LABEL_195;
    v90 = v75 - 2;
    v96 = &v76[16 * v75 - 32];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v99 = __OFSUB__(v97, v98);
    v100 = v97 - v98;
    v101 = v99;
    if (v99)
      goto LABEL_198;
    v102 = &v76[16 * v78];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v89 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v89)
      goto LABEL_199;
    if (__OFADD__(v100, v105))
      goto LABEL_201;
    if (v100 + v105 >= v81)
    {
      v106 = v81 < v105;
LABEL_154:
      if (v106)
        v78 = v90;
      goto LABEL_156;
    }
LABEL_148:
    if ((v101 & 1) != 0)
      goto LABEL_196;
    v109 = &v76[16 * v78];
    v111 = *(_QWORD *)v109;
    v110 = *((_QWORD *)v109 + 1);
    v89 = __OFSUB__(v110, v111);
    v112 = v110 - v111;
    if (v89)
      goto LABEL_200;
    if (v112 < v100)
      goto LABEL_165;
LABEL_156:
    v117 = v78 - 1;
    if (v78 - 1 >= v75)
      goto LABEL_188;
    if (!v17)
      goto LABEL_218;
    v118 = &v76[16 * v117];
    v119 = *(_QWORD *)v118;
    v120 = v78;
    v121 = &v76[16 * v78];
    v122 = *((_QWORD *)v121 + 1);
    v123 = (char *)(v17 + 8 * *(_QWORD *)v118);
    __dstb = (char *)(v17 + 8 * *(_QWORD *)v121);
    v124 = (char *)(v17 + 8 * v122);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150A7448(v123, __dstb, v124, v146, a2, v149, v148, v158);
    if (v159)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    v15 = v151;
    if (v122 < v119)
      goto LABEL_189;
    if (v120 > *((_QWORD *)v151 + 2))
      goto LABEL_190;
    v125 = v120;
    *(_QWORD *)v118 = v119;
    *(_QWORD *)&v157[16 * v117 + 8] = v122;
    v126 = *((_QWORD *)v151 + 2);
    if (v125 >= v126)
      goto LABEL_191;
    v75 = v126 - 1;
    memmove(v121, v121 + 16, 16 * (v126 - 1 - v125));
    v76 = v157;
    *((_QWORD *)v151 + 2) = v126 - 1;
    v9 = v158;
    v10 = v145;
    v17 = v161;
    if (v126 <= 2)
      goto LABEL_165;
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v141 + 16) = 0;
LABEL_184:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A8698(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  _BOOL4 v40;
  char *v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  _BOOL4 v63;
  BOOL v64;
  uint64_t result;
  char *v67;
  _QWORD *v68;

  v9 = a4;
  v10 = a3;
  v11 = __dst;
  v12 = __src;
  v13 = __dst - __src;
  v14 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v14 = __dst - __src;
  v15 = v14 >> 3;
  v16 = a3 - __dst;
  v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0)
    v17 = a3 - __dst;
  v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4)
      memmove(a4, __dst, 8 * v18);
    v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8)
      goto LABEL_86;
    v68 = (_QWORD *)(a7 + 16);
    v67 = v12;
    while (1)
    {
      v43 = *((_QWORD *)v19 - 1);
      if ((v43 & 0x8000000000000000) != 0)
      {
LABEL_96:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v44 = v11;
      v45 = v11 - 8;
      v46 = *((_QWORD *)v11 - 1);
      swift_beginAccess();
      v47 = (_QWORD *)*v68;
      if (!*v68)
        goto LABEL_95;
      v48 = v47[1];
      if ((uint64_t)v43 >= v48)
        goto LABEL_96;
      v49 = v47 + 8;
      v50 = *((unsigned __int8 *)v47 + (v43 >> 3) + 64) & (1 << (v43 & 7));
      if (v50)
      {
        v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        v52 = v10;
        if (v51 < 0)
          v51 = *v47 + 14;
        v53 = v51 >> 3;
        v54 = v53 - 1;
        v29 = v53 < 1;
        v55 = v53 + 62;
        if (!v29)
          v55 = v54;
        v56 = *(double *)((char *)&v49[v43 + 8] + (v55 & 0xFFFFFFFFFFFFC0));
        if ((v46 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v56 = 0.0;
        v52 = v10;
        if ((v46 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v46 >= v48)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)) & 1) != 0)
      {
        v57 = *v47;
        if (__OFADD__(v57, 7))
          goto LABEL_93;
        v10 = v52 - 8;
        if (v50)
        {
          v58 = v57 + 14;
          if (v57 + 7 >= 0)
            v58 = v57 + 7;
          v59 = v58 >> 3;
          v60 = v59 - 1;
          v29 = v59 < 1;
          v61 = v59 + 62;
          if (!v29)
            v61 = v60;
          v62 = *(double *)((char *)&v49[v46 + 8] + (v61 & 0xFFFFFFFFFFFFC0));
          v63 = v62 < v56;
          if ((a8 & 1) == 0)
            v63 = v56 < v62;
          if (v63)
          {
LABEL_76:
            if (v52 == v11)
            {
              v11 -= 8;
              if (v10 < v44)
                goto LABEL_82;
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        v10 = v52 - 8;
        if (v50)
          goto LABEL_76;
      }
      v45 = v19 - 8;
      if (v52 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(_QWORD *)v10 = *(_QWORD *)v45;
        goto LABEL_82;
      }
      v64 = v10 >= v19;
      v19 -= 8;
      if (v64)
        goto LABEL_81;
LABEL_82:
      if (v11 <= v67 || v19 <= v9)
        goto LABEL_86;
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4)
    memmove(a4, __src, 8 * v15);
  v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    v20 = (_QWORD *)(a7 + 16);
    do
    {
      v21 = *(_QWORD *)v11;
      if ((*(_QWORD *)v11 & 0x8000000000000000) != 0)
        goto LABEL_96;
      v22 = *(_QWORD *)v9;
      swift_beginAccess();
      v23 = (_QWORD *)*v20;
      if (!*v20)
        goto LABEL_94;
      v24 = v23[1];
      if ((uint64_t)v21 >= v24)
        goto LABEL_96;
      v25 = v23 + 8;
      v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0)
          v27 = *v23 + 14;
        v28 = v27 >> 3;
        v30 = v28 - 1;
        v29 = v28 < 1;
        v31 = v28 + 62;
        if (!v29)
          v31 = v30;
        v32 = *(double *)((char *)&v25[v21 + 8] + (v31 & 0xFFFFFFFFFFFFC0));
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      else
      {
        v32 = 0.0;
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_96;
      }
      if ((uint64_t)v22 >= v24)
        goto LABEL_96;
      if (((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)) & 1) != 0)
      {
        v33 = *v23;
        v34 = __OFADD__(v33, 7);
        v35 = v33 + 7;
        if (v34)
          goto LABEL_92;
        if (!v26)
          goto LABEL_33;
        v36 = v35 / 8;
        v37 = v36 - 1;
        v29 = v36 < 1;
        v38 = v36 + 62;
        if (!v29)
          v38 = v37;
        v39 = *(double *)((char *)&v25[v22 + 8] + (v38 & 0xFFFFFFFFFFFFC0));
        v40 = v39 < v32;
        if ((a8 & 1) == 0)
          v40 = v32 < v39;
        if (!v40)
        {
LABEL_33:
          v41 = v9;
          v42 = v12 == v9;
          v9 += 8;
          if (v42)
            goto LABEL_35;
LABEL_34:
          *(_QWORD *)v12 = *(_QWORD *)v41;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      v41 = v11;
      v42 = v12 == v11;
      v11 += 8;
      if (!v42)
        goto LABEL_34;
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  return 1;
}

uint64_t sub_2150A8B6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  _BOOL4 v34;
  unint64_t v35;
  uint64_t v37;

  v37 = result;
  if (a3 != a2)
  {
    v9 = a3;
    v10 = *a4;
    v11 = (_QWORD *)(a7 + 16);
    v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    v13 = *(_QWORD *)(v10 + 8 * v9);
    v14 = v37;
    v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      v16 = *v15;
      result = swift_beginAccess();
      v17 = (_QWORD *)*v11;
      if (!*v11)
        goto LABEL_34;
      v18 = v17[1];
      if ((uint64_t)v13 >= v18)
        break;
      v19 = v17 + 8;
      v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0)
          v21 = *v17 + 14;
        v22 = v21 >> 3;
        v24 = v22 - 1;
        v23 = v22 < 1;
        v25 = v22 + 62;
        if (!v23)
          v25 = v24;
        v26 = *(double *)((char *)&v19[v13 + 8] + (v25 & 0xFFFFFFFFFFFFC0));
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v26 = 0.0;
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v16 >= v18)
        break;
      if (((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)) & 1) != 0)
      {
        v27 = *v17;
        v28 = __OFADD__(v27, 7);
        v29 = v27 + 7;
        if (v28)
          goto LABEL_33;
        if (!v20)
          goto LABEL_4;
        v30 = v29 / 8;
        v31 = v30 - 1;
        v23 = v30 < 1;
        v32 = v30 + 62;
        if (!v23)
          v32 = v31;
        v33 = *(double *)((char *)&v19[v16 + 8] + (v32 & 0xFFFFFFFFFFFFC0));
        v34 = v33 < v26;
        if ((a8 & 1) == 0)
          v34 = v26 < v33;
        if (!v34)
          goto LABEL_4;
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10)
        goto LABEL_35;
      v35 = *v15;
      v13 = v15[1];
      *v15 = v13;
      v15[1] = v35;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2)
          return result;
        goto LABEL_5;
      }
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150A8D88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;
  double v30;
  char v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  _BOOL4 v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  unint64_t v141;
  uint64_t result;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *__dst;
  char *__dsta;
  int v162;
  uint64_t v163;
  _QWORD **v164;
  uint64_t v165;
  uint64_t v166;

  v9 = a5 & 1;
  v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_215130394();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A8B6C(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_211;
  v154 = a3;
  v155 = a4;
  v162 = v9;
  v146 = v11;
  v163 = v5;
  v144 = a1;
  if (v10 <= 1)
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v152 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v145 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v78 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_171:
      if (v78 < 2)
        goto LABEL_184;
      v132 = *v144;
      v166 = *v144;
      while (1)
      {
        v133 = v78 - 2;
        if (v78 < 2)
          goto LABEL_205;
        if (!v132)
          goto LABEL_220;
        v159 = v15;
        v134 = v15 + 32;
        v135 = *(_QWORD *)&v15[16 * v133 + 32];
        v136 = *(_QWORD *)&v15[16 * v78 + 24];
        v137 = (char *)(v132 + 8 * v135);
        v138 = (char *)(v132 + 8 * *(_QWORD *)&v134[16 * v78 - 16]);
        v139 = (char *)(v132 + 8 * v136);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A8698(v137, v138, v139, v152, a2, v154, v155, v162);
        if (v163)
          goto LABEL_183;
        swift_release();
        swift_bridgeObjectRelease();
        if (v136 < v135)
          goto LABEL_206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v159 = sub_21501E510((uint64_t)v159);
        if (v133 >= *((_QWORD *)v159 + 2))
          goto LABEL_207;
        v140 = &v159[16 * v133 + 32];
        *(_QWORD *)v140 = v135;
        *((_QWORD *)v140 + 1) = v136;
        v141 = *((_QWORD *)v159 + 2);
        if (v78 > v141)
          goto LABEL_208;
        v15 = v159;
        memmove(&v159[16 * v78 + 16], &v159[16 * v78 + 32], 16 * (v141 - v78));
        *((_QWORD *)v159 + 2) = v141 - 1;
        v78 = v141 - 1;
        v132 = v166;
        if (v141 <= 2)
          goto LABEL_184;
      }
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_21512FCF8();
    *(_QWORD *)(v14 + 16) = v13;
    v145 = v14;
    v152 = (char *)(v14 + 32);
  }
  v16 = 0;
  v17 = *a1;
  v164 = (_QWORD **)(a4 + 16);
  v143 = *a1 - 8;
  v15 = (char *)MEMORY[0x24BEE4AF8];
  v165 = *a1;
  v149 = v10;
  while (1)
  {
    v18 = (char *)v16;
    v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      v147 = v16 + 1;
      v20 = *(_QWORD *)(v17 + 8 * v19);
      if (v20 < 0)
        goto LABEL_222;
      v21 = (char *)v16;
      v22 = *(_QWORD *)(v17 + 8 * v16);
      swift_beginAccess();
      v23 = *v164;
      if (!*v164)
        goto LABEL_221;
      if (v20 >= v23[1])
        goto LABEL_222;
      v156 = v15;
      v24 = sub_215099328(v20, v23, v155);
      if (v22 < 0)
        goto LABEL_222;
      v27 = v23[1];
      if (v22 >= v27)
        goto LABEL_222;
      v28 = *(double *)&v24;
      v29 = v25;
      v30 = COERCE_DOUBLE(sub_215099328(v22, v23, v26));
      if ((v29 & 1) != 0)
      {
        v33 = 0;
        v17 = v165;
        v18 = v21;
      }
      else
      {
        v17 = v165;
        v18 = v21;
        if ((v31 & 1) != 0)
        {
          v34 = (uint64_t)(v21 + 2);
          if ((uint64_t)(v21 + 2) >= v10)
          {
            v15 = v156;
            if ((uint64_t)v21 < v34)
              goto LABEL_68;
            goto LABEL_76;
          }
          v33 = 1;
          goto LABEL_32;
        }
        if (v9)
          v32 = v30 < v28;
        else
          v32 = v28 < v30;
        v33 = v32;
      }
      v34 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10)
        goto LABEL_65;
LABEL_32:
      v35 = v23 + 8;
      if (v10 <= v34 + 1)
        v36 = v34 + 1;
      else
        v36 = v10;
      v37 = *(_QWORD *)(v17 + 8 * v147);
      while (1)
      {
        v38 = v37;
        v37 = *(_QWORD *)(v17 + 8 * v34);
        if (v37 < 0 || v37 >= v27)
          goto LABEL_222;
        v39 = *((unsigned __int8 *)v35 + ((unint64_t)v37 >> 3)) & (1 << (v37 & 7));
        if (v39)
        {
          v40 = *v23 + 7;
          if (__OFADD__(*v23, 7))
            goto LABEL_202;
          if (v40 < 0)
            v40 = *v23 + 14;
          v41 = v40 >> 3;
          v42 = v41 - 1;
          v109 = v41 < 1;
          v43 = v41 + 62;
          if (!v109)
            v43 = v42;
          v44 = *(double *)((char *)&v35[v37 + 8] + (v43 & 0xFFFFFFFFFFFFC0));
          if (v38 < 0)
            goto LABEL_222;
        }
        else
        {
          v44 = 0.0;
          if (v38 < 0)
            goto LABEL_222;
        }
        if (v38 >= v27)
          goto LABEL_222;
        if (((*((unsigned __int8 *)v35 + ((unint64_t)v38 >> 3)) >> (v38 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v23, 7))
            goto LABEL_203;
          if (!v39)
          {
LABEL_36:
            if ((v33 & 1) != 0)
            {
              v15 = v156;
              if (v34 < (uint64_t)v18)
                goto LABEL_213;
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          v45 = *v23 + 14;
          if (*v23 + 7 >= 0)
            v45 = *v23 + 7;
          v46 = v45 >> 3;
          v47 = v46 - 1;
          v109 = v46 < 1;
          v48 = v46 + 62;
          if (!v109)
            v48 = v47;
          v49 = *(double *)((char *)&v35[v38 + 8] + (v48 & 0xFFFFFFFFFFFFC0));
          v50 = v49 < v44;
          if (!v9)
            v50 = v44 < v49;
          if (v33 != v50)
            goto LABEL_65;
        }
        else
        {
          if (!v39)
            goto LABEL_36;
          if ((v33 & 1) == 0)
          {
            v19 = v34;
            v15 = v156;
            break;
          }
        }
LABEL_37:
        if (++v34 >= v10)
        {
          v34 = v36;
LABEL_65:
          v19 = v34;
          v15 = v156;
          if (!v33)
            break;
          if (v34 < (uint64_t)v18)
            goto LABEL_213;
LABEL_67:
          if ((uint64_t)v18 < v34)
          {
LABEL_68:
            v51 = v34 - 1;
            v52 = v18;
            do
            {
              if (v52 != (char *)v51)
              {
                if (!v17)
                  goto LABEL_219;
                v53 = *(_QWORD *)(v17 + 8 * (_QWORD)v52);
                *(_QWORD *)(v17 + 8 * (_QWORD)v52) = *(_QWORD *)(v17 + 8 * v51);
                *(_QWORD *)(v17 + 8 * v51) = v53;
              }
              v109 = (uint64_t)++v52 < v51--;
            }
            while (v109);
          }
LABEL_76:
          v19 = v34;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18))
        goto LABEL_210;
      if (v19 - (uint64_t)v18 < v146)
      {
        if (__OFADD__(v18, v146))
          goto LABEL_214;
        if ((uint64_t)&v18[v146] >= v10)
          v54 = v10;
        else
          v54 = (uint64_t)&v18[v146];
        if (v54 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          result = sub_2151302EC();
          __break(1u);
          return result;
        }
        if (v19 != v54)
        {
          v157 = v15;
          __dst = v18;
          v55 = (unint64_t *)(v143 + 8 * v19);
          v150 = v54;
          do
          {
            v56 = *(_QWORD *)(v17 + 8 * v19);
            v57 = v55;
            do
            {
              if ((v56 & 0x8000000000000000) != 0)
                goto LABEL_222;
              v58 = *v57;
              swift_beginAccess();
              v59 = *v164;
              if (!*v164)
                goto LABEL_216;
              v60 = v59[1];
              v17 = v165;
              if ((uint64_t)v56 >= v60)
                goto LABEL_222;
              v61 = v59 + 8;
              v62 = *((unsigned __int8 *)v59 + (v56 >> 3) + 64) & (1 << (v56 & 7));
              if (v62)
              {
                v63 = *v59 + 7;
                if (__OFADD__(*v59, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v63 < 0)
                  v63 = *v59 + 14;
                v64 = v63 >> 3;
                v65 = v64 - 1;
                v109 = v64 < 1;
                v66 = v64 + 62;
                if (!v109)
                  v66 = v65;
                v67 = *(double *)((char *)&v61[v56 + 8] + (v66 & 0xFFFFFFFFFFFFC0));
                if ((v58 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              else
              {
                v67 = 0.0;
                if ((v58 & 0x8000000000000000) != 0)
                  goto LABEL_222;
              }
              if ((uint64_t)v58 >= v60)
                goto LABEL_222;
              if (((*((unsigned __int8 *)v61 + (v58 >> 3)) >> (v58 & 7)) & 1) != 0)
              {
                v68 = *v59;
                v92 = __OFADD__(v68, 7);
                v69 = v68 + 7;
                if (v92)
                  goto LABEL_187;
                if (!v62)
                  break;
                v70 = v69 / 8;
                v71 = v70 - 1;
                v109 = v70 < 1;
                v72 = v70 + 62;
                if (!v109)
                  v72 = v71;
                v73 = *(double *)((char *)&v61[v58 + 8] + (v72 & 0xFFFFFFFFFFFFC0));
                v74 = v73 < v67;
                if (!v9)
                  v74 = v67 < v73;
                if (!v74)
                  break;
              }
              else if (!v62)
              {
                break;
              }
              if (!v165)
                goto LABEL_217;
              v75 = *v57;
              v56 = v57[1];
              *v57 = v56;
              v57[1] = v75;
              --v57;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v55;
            v18 = __dst;
          }
          while (v19 != v150);
          v19 = v150;
          v15 = v157;
        }
      }
    }
    if (v19 < (uint64_t)v18)
      goto LABEL_209;
    v148 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v77 = *((_QWORD *)v15 + 2);
    v76 = *((_QWORD *)v15 + 3);
    v78 = v77 + 1;
    v17 = v165;
    if (v77 >= v76 >> 1)
    {
      v131 = sub_21502DABC((char *)(v76 > 1), v77 + 1, 1, v15);
      v17 = v165;
      v15 = v131;
    }
    *((_QWORD *)v15 + 2) = v78;
    v79 = v15 + 32;
    v80 = &v15[16 * v77 + 32];
    *(_QWORD *)v80 = v18;
    *((_QWORD *)v80 + 1) = v148;
    if (v77)
      break;
    v78 = 1;
LABEL_165:
    v16 = v148;
    if (v148 >= v10)
      goto LABEL_171;
  }
  v158 = v15;
  v151 = v15 + 32;
  while (1)
  {
    v81 = v78 - 1;
    if (v78 >= 4)
    {
      v86 = &v79[16 * v78];
      v87 = *((_QWORD *)v86 - 8);
      v88 = *((_QWORD *)v86 - 7);
      v92 = __OFSUB__(v88, v87);
      v89 = v88 - v87;
      if (v92)
        goto LABEL_192;
      v91 = *((_QWORD *)v86 - 6);
      v90 = *((_QWORD *)v86 - 5);
      v92 = __OFSUB__(v90, v91);
      v84 = v90 - v91;
      v85 = v92;
      if (v92)
        goto LABEL_193;
      v93 = v78 - 2;
      v94 = &v79[16 * v78 - 32];
      v96 = *(_QWORD *)v94;
      v95 = *((_QWORD *)v94 + 1);
      v92 = __OFSUB__(v95, v96);
      v97 = v95 - v96;
      if (v92)
        goto LABEL_194;
      v92 = __OFADD__(v84, v97);
      v98 = v84 + v97;
      if (v92)
        goto LABEL_197;
      if (v98 >= v89)
      {
        v116 = &v79[16 * v81];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v92 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v92)
          goto LABEL_204;
        v109 = v84 < v119;
        goto LABEL_154;
      }
    }
    else
    {
      if (v78 != 3)
      {
        v110 = *((_QWORD *)v15 + 4);
        v111 = *((_QWORD *)v15 + 5);
        v92 = __OFSUB__(v111, v110);
        v103 = v111 - v110;
        v104 = v92;
        goto LABEL_148;
      }
      v83 = *((_QWORD *)v15 + 4);
      v82 = *((_QWORD *)v15 + 5);
      v92 = __OFSUB__(v82, v83);
      v84 = v82 - v83;
      v85 = v92;
    }
    if ((v85 & 1) != 0)
      goto LABEL_195;
    v93 = v78 - 2;
    v99 = &v79[16 * v78 - 32];
    v101 = *(_QWORD *)v99;
    v100 = *((_QWORD *)v99 + 1);
    v102 = __OFSUB__(v100, v101);
    v103 = v100 - v101;
    v104 = v102;
    if (v102)
      goto LABEL_198;
    v105 = &v79[16 * v81];
    v107 = *(_QWORD *)v105;
    v106 = *((_QWORD *)v105 + 1);
    v92 = __OFSUB__(v106, v107);
    v108 = v106 - v107;
    if (v92)
      goto LABEL_199;
    if (__OFADD__(v103, v108))
      goto LABEL_201;
    if (v103 + v108 >= v84)
    {
      v109 = v84 < v108;
LABEL_154:
      if (v109)
        v81 = v93;
      goto LABEL_156;
    }
LABEL_148:
    if ((v104 & 1) != 0)
      goto LABEL_196;
    v112 = &v79[16 * v81];
    v114 = *(_QWORD *)v112;
    v113 = *((_QWORD *)v112 + 1);
    v92 = __OFSUB__(v113, v114);
    v115 = v113 - v114;
    if (v92)
      goto LABEL_200;
    if (v115 < v103)
      goto LABEL_165;
LABEL_156:
    v120 = v81 - 1;
    if (v81 - 1 >= v78)
      goto LABEL_188;
    if (!v17)
      goto LABEL_218;
    v121 = &v79[16 * v120];
    v122 = v79;
    v123 = *(_QWORD *)v121;
    v124 = v81;
    v125 = &v122[16 * v81];
    v126 = *((_QWORD *)v125 + 1);
    v127 = (char *)(v17 + 8 * *(_QWORD *)v121);
    __dsta = (char *)(v17 + 8 * *(_QWORD *)v125);
    v128 = (char *)(v17 + 8 * v126);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150A8698(v127, __dsta, v128, v152, a2, v154, v155, v162);
    if (v163)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    v15 = v158;
    if (v126 < v123)
      goto LABEL_189;
    if (v124 > *((_QWORD *)v158 + 2))
      goto LABEL_190;
    v129 = v124;
    *(_QWORD *)v121 = v123;
    v79 = v151;
    *(_QWORD *)&v151[16 * v120 + 8] = v126;
    v130 = *((_QWORD *)v158 + 2);
    if (v129 >= v130)
      goto LABEL_191;
    v78 = v130 - 1;
    memmove(v125, v125 + 16, 16 * (v130 - 1 - v129));
    *((_QWORD *)v158 + 2) = v130 - 1;
    v9 = v162;
    v10 = v149;
    v17 = v165;
    if (v130 <= 2)
      goto LABEL_165;
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_184:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v145 + 16) = 0;
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150A98F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v40;

  v37 = result;
  if (a3 != a2)
  {
    v8 = a3;
    v9 = (_QWORD *)(a7 + 16);
    v40 = *a4;
    v10 = (unint64_t *)(*a4 + 8 * a3 - 8);
LABEL_7:
    v11 = *(_QWORD *)(v40 + 8 * v8);
    v12 = v37;
    v38 = v10;
    while (1)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_51:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v13 = *v10;
      result = swift_beginAccess();
      v14 = (_QWORD *)*v9;
      if (!*v9)
        goto LABEL_49;
      v15 = v14[1];
      if ((uint64_t)v11 >= v15)
        goto LABEL_51;
      v16 = v14 + 8;
      if (((*((unsigned __int8 *)v14 + (v11 >> 3) + 64) >> (v11 & 7)) & 1) != 0)
      {
        v17 = *v14 + 7;
        if (__OFADD__(*v14, 7))
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        if (v17 < 0)
          v17 = *v14 + 14;
        v18 = v17 >> 3;
        v20 = v18 - 1;
        v19 = v18 < 1;
        v21 = v18 + 62;
        if (!v19)
          v21 = v20;
        v22 = (unint64_t)&v16[2 * v11] + (v21 & 0xFFFFFFFFFFFFFFC0);
        v23 = *(_QWORD *)(v22 + 64);
        v24 = *(_QWORD *)(v22 + 72);
        result = swift_bridgeObjectRetain();
        if ((v13 & 0x8000000000000000) != 0)
          goto LABEL_51;
      }
      else
      {
        v23 = 0;
        v24 = 0;
        if ((v13 & 0x8000000000000000) != 0)
          goto LABEL_51;
      }
      if ((uint64_t)v13 >= v15)
        goto LABEL_51;
      if (((*((unsigned __int8 *)v16 + (v13 >> 3)) >> (v13 & 7)) & 1) == 0)
        break;
      v25 = *v14 + 7;
      if (__OFADD__(*v14, 7))
        goto LABEL_48;
      if (v25 < 0)
        v25 = *v14 + 14;
      v26 = v25 >> 3;
      v27 = v26 - 1;
      v19 = v26 < 1;
      v28 = v26 + 62;
      if (!v19)
        v28 = v27;
      v29 = (unint64_t)&v16[2 * v13] + (v28 & 0xFFFFFFFFFFFFFFC0);
      v31 = *(_QWORD *)(v29 + 64);
      v30 = *(_QWORD *)(v29 + 72);
      result = swift_bridgeObjectRetain();
      if (!v24)
      {
        if (!v30)
        {
LABEL_6:
          ++v8;
          v10 = v38 + 1;
          if (v8 == a2)
            return result;
          goto LABEL_7;
        }
LABEL_5:
        result = swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (!v30)
        goto LABEL_36;
      if ((a8 & 1) != 0)
      {
        if (v31 == v23 && v24 == v30)
        {
LABEL_4:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      else if (v23 == v31 && v24 == v30)
      {
        goto LABEL_4;
      }
      v34 = sub_21513043C();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
        goto LABEL_6;
LABEL_42:
      if (!v40)
        goto LABEL_50;
      v35 = *v10;
      v11 = v10[1];
      *v10 = v11;
      v10[1] = v35;
      --v10;
      if (v8 == ++v12)
        goto LABEL_6;
    }
    if (!v24)
      goto LABEL_6;
LABEL_36:
    result = swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_2150A9B94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  unint64_t v141;
  uint64_t result;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v158;
  int v159;
  unint64_t *v160;
  char *v161;
  uint64_t v162;
  int v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;

  v163 = a5 & 1;
  v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v9 = sub_215130394();
  if (v9 >= v8)
  {
    if (v8 < 0)
      goto LABEL_232;
    if (v8)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2150A98F0(0, v8, 1, a1, a2, a3, a4, v163);
    }
    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_203;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
  {
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
LABEL_236:
    __break(1u);
LABEL_237:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_238:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_239:
    __break(1u);
LABEL_240:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_241:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    __break(1u);
    goto LABEL_242;
  }
  v158 = a3;
  v156 = a4;
  v149 = v8;
  v146 = v9;
  v144 = a1;
  if (v8 <= 1)
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
    v152 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v145 = MEMORY[0x24BEE4AF8];
    if (v8 == 1)
      goto LABEL_13;
    v79 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_191:
    if (v79 >= 2)
    {
      v130 = *v144;
      v165 = *v144;
      while (1)
      {
        v131 = v79 - 2;
        if (v79 < 2)
          break;
        if (!v130)
          goto LABEL_241;
        v132 = v13;
        v133 = v13 + 32;
        v134 = *(_QWORD *)&v13[16 * v131 + 32];
        v135 = *(_QWORD *)&v133[16 * v79 - 8];
        v136 = (char *)(v130 + 8 * v134);
        v167 = (char *)(v130 + 8 * *(_QWORD *)&v133[16 * v79 - 16]);
        v137 = v130 + 8 * v135;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A49A8(v136, v167, v137, v152, a2, v158, v156, v163, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_21509EC90);
        if (v162)
          goto LABEL_202;
        if (v135 < v134)
          goto LABEL_226;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v132 = sub_21501E510((uint64_t)v132);
        if (v131 >= *((_QWORD *)v132 + 2))
          goto LABEL_227;
        v138 = v132;
        v139 = v132 + 32;
        v140 = &v132[16 * v131 + 32];
        *(_QWORD *)v140 = v134;
        *((_QWORD *)v140 + 1) = v135;
        v141 = *((_QWORD *)v132 + 2);
        if (v79 > v141)
          goto LABEL_228;
        v13 = v138;
        memmove(&v139[16 * v79 - 16], &v139[16 * v79], 16 * (v141 - v79));
        *((_QWORD *)v13 + 2) = v141 - 1;
        v79 = v141 - 1;
        v130 = v165;
        if (v141 <= 2)
          goto LABEL_202;
      }
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
      goto LABEL_231;
    }
LABEL_202:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v145 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_203:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v11 = v10 >> 1;
  v12 = sub_21512FCF8();
  *(_QWORD *)(v12 + 16) = v11;
  v145 = v12;
  v152 = (char *)(v12 + 32);
LABEL_13:
  v14 = 0;
  v15 = *a1;
  v164 = (_QWORD *)(a4 + 16);
  v143 = *a1 - 8;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v16 = v149;
  v166 = *a1;
  while (1)
  {
    v17 = v14;
    v18 = v14 + 1;
    if (v14 + 1 < v16)
      break;
LABEL_82:
    v148 = v18;
    if (v18 >= v149)
      goto LABEL_137;
    if (__OFSUB__(v18, v17))
      goto LABEL_230;
    if (v18 - v17 >= v146)
      goto LABEL_137;
    if (__OFADD__(v17, v146))
      goto LABEL_233;
    if (v17 + v146 >= v149)
      v49 = v149;
    else
      v49 = v17 + v146;
    if (v49 < v17)
      goto LABEL_234;
    if (v18 == v49)
      goto LABEL_137;
    v150 = v17;
    v154 = v13;
    v50 = (unint64_t *)(v143 + 8 * v18);
    v51 = v18;
    v147 = v49;
    while (2)
    {
      v52 = v51;
      v53 = *(_QWORD *)(v15 + 8 * v51);
      v54 = v150;
      v160 = v50;
      while (1)
      {
        if ((v53 & 0x8000000000000000) != 0)
          goto LABEL_242;
        v55 = *v50;
        swift_beginAccess();
        v56 = (_QWORD *)*v164;
        if (!*v164)
          goto LABEL_236;
        v57 = v56[1];
        if ((uint64_t)v53 >= v57)
          goto LABEL_242;
        v58 = v56 + 8;
        if (((*((unsigned __int8 *)v56 + (v53 >> 3) + 64) >> (v53 & 7)) & 1) == 0)
        {
          v64 = 0;
          v65 = 0;
          if ((v55 & 0x8000000000000000) != 0)
            goto LABEL_242;
          goto LABEL_109;
        }
        v59 = *v56 + 7;
        if (__OFADD__(*v56, 7))
        {
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        if (v59 < 0)
          v59 = *v56 + 14;
        v60 = v59 >> 3;
        v61 = v60 - 1;
        v110 = v60 < 1;
        v62 = v60 + 62;
        if (!v110)
          v62 = v61;
        v63 = (unint64_t)&v58[2 * v53] + (v62 & 0xFFFFFFFFFFFFFFC0);
        v64 = *(_QWORD *)(v63 + 64);
        v65 = *(_QWORD *)(v63 + 72);
        swift_bridgeObjectRetain();
        if ((v55 & 0x8000000000000000) != 0)
          goto LABEL_242;
LABEL_109:
        if ((uint64_t)v55 >= v57)
          goto LABEL_242;
        if (((*((unsigned __int8 *)v58 + (v55 >> 3)) >> (v55 & 7)) & 1) != 0)
          break;
        if (!v65)
          goto LABEL_94;
LABEL_125:
        swift_bridgeObjectRelease();
LABEL_131:
        v15 = v166;
        if (!v166)
          goto LABEL_237;
        v76 = *v50;
        v53 = v50[1];
        *v50 = v53;
        v50[1] = v76;
        --v50;
        if (v52 == ++v54)
          goto LABEL_95;
      }
      v66 = *v56 + 7;
      if (__OFADD__(*v56, 7))
        goto LABEL_207;
      if (v66 < 0)
        v66 = *v56 + 14;
      v67 = v66 >> 3;
      v68 = v67 - 1;
      v110 = v67 < 1;
      v69 = v67 + 62;
      if (!v110)
        v69 = v68;
      v70 = (unint64_t)&v58[2 * v55] + (v69 & 0xFFFFFFFFFFFFFFC0);
      v71 = *(_QWORD *)(v70 + 64);
      v72 = *(_QWORD *)(v70 + 72);
      swift_bridgeObjectRetain();
      if (!v65)
      {
        if (!v72)
          goto LABEL_94;
        goto LABEL_93;
      }
      if (!v72)
        goto LABEL_125;
      if (!v163)
      {
        if (v64 == v71 && v65 == v72)
          goto LABEL_92;
        goto LABEL_130;
      }
      if (v71 != v64 || v65 != v72)
      {
LABEL_130:
        v75 = sub_21513043C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v75 & 1) == 0)
          goto LABEL_94;
        goto LABEL_131;
      }
LABEL_92:
      swift_bridgeObjectRelease();
LABEL_93:
      swift_bridgeObjectRelease();
LABEL_94:
      v15 = v166;
LABEL_95:
      v51 = v52 + 1;
      v50 = v160 + 1;
      if (v52 + 1 != v147)
        continue;
      break;
    }
    v148 = v147;
    v13 = v154;
    v17 = v150;
LABEL_137:
    if (v148 < v17)
      goto LABEL_229;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_21502DABC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v78 = *((_QWORD *)v13 + 2);
    v77 = *((_QWORD *)v13 + 3);
    v79 = v78 + 1;
    if (v78 >= v77 >> 1)
      v13 = sub_21502DABC((char *)(v77 > 1), v78 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v79;
    v80 = v13 + 32;
    v81 = &v13[16 * v78 + 32];
    *(_QWORD *)v81 = v17;
    *((_QWORD *)v81 + 1) = v148;
    if (v78)
    {
      v151 = v13 + 32;
      v155 = v13;
      while (1)
      {
        v82 = v79 - 1;
        if (v79 >= 4)
        {
          v87 = &v80[16 * v79];
          v88 = *((_QWORD *)v87 - 8);
          v89 = *((_QWORD *)v87 - 7);
          v93 = __OFSUB__(v89, v88);
          v90 = v89 - v88;
          if (v93)
            goto LABEL_212;
          v92 = *((_QWORD *)v87 - 6);
          v91 = *((_QWORD *)v87 - 5);
          v93 = __OFSUB__(v91, v92);
          v85 = v91 - v92;
          v86 = v93;
          if (v93)
            goto LABEL_213;
          v94 = v79 - 2;
          v95 = &v80[16 * v79 - 32];
          v97 = *(_QWORD *)v95;
          v96 = *((_QWORD *)v95 + 1);
          v93 = __OFSUB__(v96, v97);
          v98 = v96 - v97;
          if (v93)
            goto LABEL_214;
          v93 = __OFADD__(v85, v98);
          v99 = v85 + v98;
          if (v93)
            goto LABEL_216;
          if (v99 >= v90)
          {
            v117 = &v80[16 * v82];
            v119 = *(_QWORD *)v117;
            v118 = *((_QWORD *)v117 + 1);
            v93 = __OFSUB__(v118, v119);
            v120 = v118 - v119;
            if (v93)
              goto LABEL_224;
            v110 = v85 < v120;
            goto LABEL_175;
          }
        }
        else
        {
          if (v79 != 3)
          {
            v111 = *((_QWORD *)v13 + 4);
            v112 = *((_QWORD *)v13 + 5);
            v93 = __OFSUB__(v112, v111);
            v104 = v112 - v111;
            v105 = v93;
            goto LABEL_169;
          }
          v84 = *((_QWORD *)v13 + 4);
          v83 = *((_QWORD *)v13 + 5);
          v93 = __OFSUB__(v83, v84);
          v85 = v83 - v84;
          v86 = v93;
        }
        if ((v86 & 1) != 0)
          goto LABEL_215;
        v94 = v79 - 2;
        v100 = &v80[16 * v79 - 32];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v103 = __OFSUB__(v101, v102);
        v104 = v101 - v102;
        v105 = v103;
        if (v103)
          goto LABEL_217;
        v106 = &v80[16 * v82];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v93 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v93)
          goto LABEL_220;
        if (__OFADD__(v104, v109))
          goto LABEL_221;
        if (v104 + v109 >= v85)
        {
          v110 = v85 < v109;
LABEL_175:
          if (v110)
            v82 = v94;
          goto LABEL_177;
        }
LABEL_169:
        if ((v105 & 1) != 0)
          goto LABEL_218;
        v113 = &v80[16 * v82];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v93 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v93)
          goto LABEL_219;
        if (v116 < v104)
          goto LABEL_186;
LABEL_177:
        v121 = v82 - 1;
        if (v82 - 1 >= v79)
          goto LABEL_208;
        if (!v15)
          goto LABEL_238;
        v122 = &v80[16 * v121];
        v123 = *(_QWORD *)v122;
        v124 = v82;
        v125 = &v80[16 * v82];
        v126 = *((_QWORD *)v125 + 1);
        v127 = (char *)(v15 + 8 * *(_QWORD *)v122);
        v161 = (char *)(v15 + 8 * *(_QWORD *)v125);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150A49A8(v127, v161, v15 + 8 * v126, v152, a2, v158, v156, v163, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_21509EC90);
        if (v162)
          goto LABEL_202;
        v13 = v155;
        if (v126 < v123)
          goto LABEL_209;
        if (v124 > *((_QWORD *)v155 + 2))
          goto LABEL_210;
        v128 = v124;
        *(_QWORD *)v122 = v123;
        v80 = v151;
        *(_QWORD *)&v151[16 * v121 + 8] = v126;
        v129 = *((_QWORD *)v155 + 2);
        if (v128 >= v129)
          goto LABEL_211;
        v79 = v129 - 1;
        memmove(v125, v125 + 16, 16 * (v129 - 1 - v128));
        *((_QWORD *)v155 + 2) = v129 - 1;
        v15 = v166;
        if (v129 <= 2)
          goto LABEL_186;
      }
    }
    v79 = 1;
LABEL_186:
    v14 = v148;
    v16 = v149;
    a3 = v158;
    if (v148 >= v149)
      goto LABEL_191;
  }
  v159 = sub_21509EC90(*(_QWORD *)(v15 + 8 * v18), *(_QWORD *)(v15 + 8 * v14), a2, a3, v156, v163);
  if (v162)
    goto LABEL_202;
  v153 = v13;
  v19 = v17;
  v20 = v17 + 2;
  if (v17 + 2 >= v149)
  {
    v42 = v17 + 2;
LABEL_64:
    if ((v159 & 1) != 0)
    {
LABEL_72:
      if (v42 < v19)
        goto LABEL_235;
      v17 = v19;
      if (v19 >= v42)
      {
        v18 = v42;
        v13 = v153;
      }
      else
      {
        v45 = v42;
        v46 = v42 - 1;
        v47 = v19;
        v13 = v153;
        do
        {
          if (v47 != v46)
          {
            if (!v15)
              goto LABEL_240;
            v48 = *(_QWORD *)(v15 + 8 * v47);
            *(_QWORD *)(v15 + 8 * v47) = *(_QWORD *)(v15 + 8 * v46);
            *(_QWORD *)(v15 + 8 * v46) = v48;
          }
          v110 = ++v47 < v46--;
        }
        while (v110);
        v18 = v45;
      }
    }
    else
    {
LABEL_65:
      v18 = v42;
      v13 = v153;
LABEL_66:
      v17 = v19;
    }
    goto LABEL_82;
  }
  v21 = *(_QWORD *)(v15 + 8 * v20);
  if ((v21 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      v22 = *(_QWORD *)(v15 + 8 * v18);
      swift_beginAccess();
      v23 = (_QWORD *)*v164;
      if (!*v164)
        goto LABEL_239;
      v24 = v23[1];
      if ((uint64_t)v21 >= v24)
        goto LABEL_242;
      v25 = v23 + 8;
      if (((*((unsigned __int8 *)v23 + (v21 >> 3) + 64) >> (v21 & 7)) & 1) != 0)
      {
        v26 = *v23 + 7;
        if (__OFADD__(*v23, 7))
          goto LABEL_222;
        if (v26 < 0)
          v26 = *v23 + 14;
        v27 = v26 >> 3;
        v28 = v27 - 1;
        v110 = v27 < 1;
        v29 = v27 + 62;
        if (!v110)
          v29 = v28;
        v30 = (unint64_t)&v25[2 * v21] + (v29 & 0xFFFFFFFFFFFFFFC0);
        v31 = *(_QWORD *)(v30 + 64);
        v32 = *(_QWORD *)(v30 + 72);
        swift_bridgeObjectRetain();
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_242;
      }
      else
      {
        v31 = 0;
        v32 = 0;
        if ((v22 & 0x8000000000000000) != 0)
          goto LABEL_242;
      }
      if ((uint64_t)v22 >= v24)
        goto LABEL_242;
      if (((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)) & 1) == 0)
        break;
      v93 = __OFADD__(*v23, 7);
      v33 = *v23 + 7;
      v34 = v149;
      if (v93)
        goto LABEL_223;
      v35 = v33 / 8;
      v36 = v35 - 1;
      v110 = v35 < 1;
      v37 = v35 + 62;
      if (!v110)
        v37 = v36;
      v38 = (unint64_t)&v25[2 * v22] + (v37 & 0xFFFFFFFFFFFFFFC0);
      v39 = *(_QWORD *)(v38 + 64);
      v40 = *(_QWORD *)(v38 + 72);
      swift_bridgeObjectRetain();
      if (!v32)
      {
        if (v40)
          swift_bridgeObjectRelease();
LABEL_50:
        v15 = v166;
        if ((v159 & 1) != 0)
        {
          v42 = v20;
          goto LABEL_72;
        }
        v42 = v20 + 1;
        if (v20 + 1 >= v34)
          goto LABEL_65;
        goto LABEL_19;
      }
      if (!v40)
        goto LABEL_45;
      if (v163)
      {
        if (v39 == v31 && v32 == v40)
        {
LABEL_60:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v159 & 1) != 0)
          {
            v42 = v20;
            v15 = v166;
            goto LABEL_72;
          }
          v42 = v20 + 1;
          v15 = v166;
          if (v20 + 1 >= v149)
            goto LABEL_65;
          goto LABEL_19;
        }
      }
      else if (v31 == v39 && v32 == v40)
      {
        goto LABEL_60;
      }
      v44 = sub_21513043C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v159 ^ v44) & 1) != 0)
      {
        v42 = v20;
        v15 = v166;
        if ((v159 & 1) != 0)
          goto LABEL_72;
        goto LABEL_65;
      }
      v42 = v20 + 1;
      v15 = v166;
      if (v20 + 1 >= v149)
        goto LABEL_64;
LABEL_19:
      v21 = *(_QWORD *)(v15 + 8 * v42);
      v18 = v20;
      v20 = v42;
      if ((v21 & 0x8000000000000000) != 0)
        goto LABEL_242;
    }
    v34 = v149;
    if (!v32)
      goto LABEL_50;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v159 & 1) == 0)
    {
      v18 = v20;
      v13 = v153;
      v15 = v166;
      goto LABEL_66;
    }
    v42 = v20 + 1;
    v15 = v166;
    if (v20 + 1 >= v34)
      goto LABEL_72;
    goto LABEL_19;
  }
LABEL_242:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150AA834(char *__src, char *__dst, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v8;
  char *v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  BOOL v38;
  char v39;
  char *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char *v60;
  BOOL v61;
  BOOL v62;
  BOOL v63;
  uint64_t result;
  char *v65;
  _QWORD *v66;

  v8 = a4;
  v10 = __dst;
  v11 = __src;
  v12 = __dst - __src;
  v13 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v13 = __dst - __src;
  v14 = v13 >> 3;
  v15 = a3 - (_QWORD)__dst;
  v16 = a3 - (_QWORD)__dst + 7;
  if ((uint64_t)(a3 - (_QWORD)__dst) >= 0)
    v16 = a3 - (_QWORD)__dst;
  v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v17] <= a4)
      memmove(a4, __dst, 8 * v17);
    v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8)
      goto LABEL_96;
    v66 = (_QWORD *)(a7 + 16);
    v41 = (char *)(a3 - 8);
    v65 = v8;
    while (1)
    {
      v42 = *((_QWORD *)v18 - 1);
      if ((v42 & 0x8000000000000000) != 0)
      {
LABEL_107:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v43 = v10;
      v45 = v10 - 8;
      v44 = *((_QWORD *)v10 - 1);
      swift_beginAccess();
      v46 = (_QWORD *)*v66;
      if (!*v66)
        goto LABEL_106;
      v47 = v46[1];
      if ((uint64_t)v42 >= v47)
        goto LABEL_107;
      v48 = v46 + 8;
      if (((*((unsigned __int8 *)v46 + (v42 >> 3) + 64) >> (v42 & 7)) & 1) != 0)
      {
        v49 = *v46 + 7;
        if (__OFADD__(*v46, 7))
        {
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
          goto LABEL_107;
        }
        if (v49 < 0)
          v49 = *v46 + 14;
        v50 = v49 >> 3;
        v51 = v50 - 1;
        v27 = v50 < 1;
        v52 = v50 + 62;
        if (!v27)
          v52 = v51;
        v53 = *((unsigned __int8 *)v48 + v42 + (v52 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_107;
      }
      else
      {
        v53 = 2;
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_107;
      }
      if ((uint64_t)v44 >= v47)
        goto LABEL_107;
      if (((*((unsigned __int8 *)v48 + (v44 >> 3)) >> (v44 & 7)) & 1) != 0)
      {
        v54 = *v46;
        v32 = __OFADD__(v54, 7);
        v55 = v54 + 7;
        if (v32)
          goto LABEL_104;
        v56 = v55 / 8;
        v57 = v56 - 1;
        v27 = v56 < 1;
        v58 = v56 + 62;
        if (!v27)
          v58 = v57;
        v59 = *((unsigned __int8 *)v48 + v44 + (v58 & 0xFFFFFFFFFFFFC0) + 64);
      }
      else
      {
        v59 = 2;
      }
      v60 = v41 + 8;
      if (v53 != 2)
      {
        v61 = (v59 & 1) != 0 && v53 == 0;
        v62 = !v61;
        if (v59 == 2 || !v62)
          break;
      }
      v45 = v18 - 8;
      if (v60 != v18)
      {
        v18 -= 8;
LABEL_91:
        *(_QWORD *)v41 = *(_QWORD *)v45;
        goto LABEL_92;
      }
      v63 = v41 >= v18;
      v18 -= 8;
      if (v63)
        goto LABEL_91;
LABEL_92:
      if (v10 <= v11)
      {
        v8 = v65;
        goto LABEL_96;
      }
      v41 -= 8;
      v8 = v65;
      if (v18 <= v65)
        goto LABEL_96;
    }
    if (v60 == v10)
    {
      v10 -= 8;
      if (v41 < v43)
        goto LABEL_92;
    }
    else
    {
      v10 -= 8;
    }
    goto LABEL_91;
  }
  if (a4 != __src || &__src[8 * v14] <= a4)
    memmove(a4, __src, 8 * v14);
  v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    v19 = (_QWORD *)(a7 + 16);
    do
    {
      v20 = *(_QWORD *)v10;
      if ((*(_QWORD *)v10 & 0x8000000000000000) != 0)
        goto LABEL_107;
      v21 = *(_QWORD *)v8;
      swift_beginAccess();
      v22 = (_QWORD *)*v19;
      if (!*v19)
        goto LABEL_105;
      v23 = v22[1];
      if ((uint64_t)v20 >= v23)
        goto LABEL_107;
      v24 = v22 + 8;
      if (((*((unsigned __int8 *)v22 + (v20 >> 3) + 64) >> (v20 & 7)) & 1) != 0)
      {
        v25 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_102;
        }
        if (v25 < 0)
          v25 = *v22 + 14;
        v26 = v25 >> 3;
        v28 = v26 - 1;
        v27 = v26 < 1;
        v29 = v26 + 62;
        if (!v27)
          v29 = v28;
        v30 = *((unsigned __int8 *)v24 + v20 + (v29 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_107;
      }
      else
      {
        v30 = 2;
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_107;
      }
      if ((uint64_t)v21 >= v23)
        goto LABEL_107;
      if (((*((unsigned __int8 *)v24 + (v21 >> 3)) >> (v21 & 7)) & 1) != 0)
      {
        v31 = *v22;
        v32 = __OFADD__(v31, 7);
        v33 = v31 + 7;
        if (v32)
          goto LABEL_103;
        v34 = v33 / 8;
        v35 = v34 - 1;
        v27 = v34 < 1;
        v36 = v34 + 62;
        if (!v27)
          v36 = v35;
        v37 = *((unsigned __int8 *)v24 + v21 + (v36 & 0xFFFFFFFFFFFFC0) + 64);
        if (v30 == 2)
        {
LABEL_40:
          v40 = v8;
          v38 = v11 == v8;
          v8 += 8;
          if (v38)
            goto LABEL_42;
LABEL_41:
          *(_QWORD *)v11 = *(_QWORD *)v40;
          goto LABEL_42;
        }
      }
      else
      {
        v37 = 2;
        if (v30 == 2)
          goto LABEL_40;
      }
      v38 = (v37 & 1) != 0 && v30 == 0;
      v39 = !v38;
      if (v37 != 2 && (v39 & 1) != 0)
        goto LABEL_40;
      v40 = v10;
      v38 = v11 == v10;
      v10 += 8;
      if (!v38)
        goto LABEL_41;
LABEL_42:
      v11 += 8;
    }
    while (v8 < v18 && (unint64_t)v10 < a3);
  }
  v10 = v11;
LABEL_96:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  return 1;
}

uint64_t sub_2150AACEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v33;
  unint64_t v34;
  uint64_t v35;

  v35 = result;
  if (a3 != a2)
  {
    v7 = a3;
    v9 = *a4;
    v10 = (_QWORD *)(a7 + 16);
    v11 = *a4 + 8 * a3 - 8;
LABEL_5:
    v12 = *(_QWORD *)(v9 + 8 * v7);
    v13 = v35;
    v14 = (unint64_t *)v11;
    while ((v12 & 0x8000000000000000) == 0)
    {
      v15 = *v14;
      result = swift_beginAccess();
      v16 = (_QWORD *)*v10;
      if (!*v10)
        goto LABEL_39;
      v17 = v16[1];
      if ((uint64_t)v12 >= v17)
        break;
      v18 = v16 + 8;
      if (((*((unsigned __int8 *)v16 + (v12 >> 3) + 64) >> (v12 & 7)) & 1) != 0)
      {
        v19 = *v16 + 7;
        if (__OFADD__(*v16, 7))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          break;
        }
        if (v19 < 0)
          v19 = *v16 + 14;
        v20 = v19 >> 3;
        v22 = v20 - 1;
        v21 = v20 < 1;
        v23 = v20 + 62;
        if (!v21)
          v23 = v22;
        v24 = *((unsigned __int8 *)v18 + v12 + (v23 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v15 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v24 = 2;
        if ((v15 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v15 >= v17)
        break;
      if (((*((unsigned __int8 *)v18 + (v15 >> 3)) >> (v15 & 7)) & 1) != 0)
      {
        v25 = *v16;
        v26 = __OFADD__(v25, 7);
        v27 = v25 + 7;
        if (v26)
          goto LABEL_38;
        v28 = v27 / 8;
        v29 = v28 - 1;
        v21 = v28 < 1;
        v30 = v28 + 62;
        if (!v21)
          v30 = v29;
        v31 = *((unsigned __int8 *)v18 + v15 + (v30 & 0xFFFFFFFFFFFFC0) + 64);
        if (v24 == 2)
          goto LABEL_4;
      }
      else
      {
        v31 = 2;
        if (v24 == 2)
          goto LABEL_4;
      }
      v33 = (v31 & 1) == 0 || v24 != 0;
      if (v31 == 2 || !v33)
      {
        if (!v9)
          goto LABEL_40;
        v34 = *v14;
        v12 = v14[1];
        *v14 = v12;
        v14[1] = v34;
        --v14;
        if (v7 != ++v13)
          continue;
      }
LABEL_4:
      ++v7;
      v11 += 8;
      if (v7 == a2)
        return result;
      goto LABEL_5;
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150AAF00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  BOOL v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  unint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t result;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  _QWORD **v153;
  uint64_t v154;

  v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v8 = sub_215130394();
  if (v8 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150AACEC(0, v7, 1, a1, a2, a3, a4);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_192;
    }
    goto LABEL_219;
  }
  v136 = v8;
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_218;
  v143 = a3;
  v148 = a4;
  v134 = a1;
  if (v7 <= 1)
  {
    v142 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v135 = MEMORY[0x24BEE4AF8];
    if (v7 != 1)
    {
      v71 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v14 = (char *)MEMORY[0x24BEE4AF8];
LABEL_178:
      v147 = v14;
      if (v71 < 2)
      {
LABEL_189:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v135 + 16) = 0;
        swift_release_n();
        goto LABEL_191;
      }
      v123 = *v134;
      v154 = *v134;
      while (1)
      {
        v124 = v71 - 2;
        if (v71 < 2)
          goto LABEL_212;
        if (!v123)
          goto LABEL_227;
        v125 = *(_QWORD *)&v147[16 * v124 + 32];
        v126 = *(_QWORD *)&v147[16 * v71 + 24];
        v127 = (char *)(v123 + 8 * v125);
        v128 = (char *)(v123 + 8 * *(_QWORD *)&v147[16 * v71 + 16]);
        v129 = v123 + 8 * v126;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150AA834(v127, v128, v129, v142, a2, v143, v148);
        if (v152)
          goto LABEL_190;
        swift_release();
        swift_bridgeObjectRelease();
        if (v126 < v125)
          goto LABEL_214;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v147 = sub_21501E510((uint64_t)v147);
        if (v124 >= *((_QWORD *)v147 + 2))
          goto LABEL_215;
        v130 = &v147[16 * v124 + 32];
        *(_QWORD *)v130 = v125;
        *((_QWORD *)v130 + 1) = v126;
        v131 = *((_QWORD *)v147 + 2);
        if (v71 > v131)
          goto LABEL_216;
        memmove(&v147[16 * v71 + 16], &v147[16 * v71 + 32], 16 * (v131 - v71));
        *((_QWORD *)v147 + 2) = v131 - 1;
        v71 = v131 - 1;
        v123 = v154;
        if (v131 <= 2)
          goto LABEL_189;
      }
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_21512FCF8();
    *(_QWORD *)(v11 + 16) = v10;
    v135 = v11;
    v142 = (char *)(v11 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v153 = (_QWORD **)(a4 + 16);
  v133 = *a1 - 8;
  v14 = (char *)MEMORY[0x24BEE4AF8];
  v139 = *a1;
  v140 = v7;
  while (1)
  {
    v15 = v12;
    v16 = v12 + 1;
    if (v12 + 1 >= v7)
      goto LABEL_76;
    v17 = *(_QWORD *)(v13 + 8 * v16);
    if (v17 < 0)
      goto LABEL_229;
    v18 = v14;
    v19 = *(_QWORD *)(v13 + 8 * v12);
    swift_beginAccess();
    v20 = *v153;
    if (!*v153)
      goto LABEL_228;
    if (v17 >= v20[1])
      goto LABEL_229;
    v149 = v15;
    v21 = sub_215099508(v17, v20, v148);
    if (v19 < 0)
      goto LABEL_229;
    v23 = v20[1];
    if (v19 >= v23)
      goto LABEL_229;
    v24 = v21;
    v25 = sub_215099508(v19, v20, v22);
    if (v24 == 2)
    {
      v26 = v149 + 2;
      v14 = v18;
      if (v149 + 2 >= v7)
        goto LABEL_121;
    }
    else
    {
      v14 = v18;
      if (v25 == 2)
      {
        v26 = v149 + 2;
LABEL_27:
        if (v26 < v7)
        {
          v27 = 1;
          goto LABEL_29;
        }
        v15 = v149;
        if (v149 < v26)
        {
LABEL_68:
          v42 = v26 - 1;
          v43 = v15;
          do
          {
            if (v43 != v42)
            {
              if (!v13)
                goto LABEL_226;
              v44 = *(_QWORD *)(v13 + 8 * v43);
              *(_QWORD *)(v13 + 8 * v43) = *(_QWORD *)(v13 + 8 * v42);
              *(_QWORD *)(v13 + 8 * v42) = v44;
            }
            v102 = ++v43 < v42--;
          }
          while (v102);
        }
LABEL_75:
        v16 = v26;
LABEL_76:
        if (v16 < v7)
          goto LABEL_77;
        goto LABEL_123;
      }
      v26 = v149 + 2;
      if ((v24 & 1) == 0 && (v25 & 1) != 0)
        goto LABEL_27;
      if (v26 >= v7)
      {
LABEL_121:
        v16 = v26;
LABEL_122:
        v15 = v149;
        if (v16 >= v7)
          goto LABEL_123;
LABEL_77:
        if (__OFSUB__(v16, v15))
          goto LABEL_217;
        if (v16 - v15 < v136)
        {
          if (__OFADD__(v15, v136))
            goto LABEL_221;
          if (v15 + v136 >= v7)
            v45 = v7;
          else
            v45 = v15 + v136;
          if (v45 < v15)
          {
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_225:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_226:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_227:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_228:
            __break(1u);
LABEL_229:
            result = sub_2151302EC();
            __break(1u);
            return result;
          }
          if (v16 != v45)
          {
            v150 = v15;
            v145 = v14;
            v46 = (unint64_t *)(v133 + 8 * v16);
            v137 = v45;
            do
            {
              v47 = *(_QWORD *)(v13 + 8 * v16);
              v48 = v150;
              v49 = v46;
              do
              {
                if ((v47 & 0x8000000000000000) != 0)
                  goto LABEL_229;
                v50 = *v49;
                swift_beginAccess();
                v51 = *v153;
                if (!*v153)
                  goto LABEL_223;
                v52 = v51[1];
                if ((uint64_t)v47 >= v52)
                  goto LABEL_229;
                v53 = v51 + 8;
                if (((*((unsigned __int8 *)v51 + (v47 >> 3) + 64) >> (v47 & 7)) & 1) != 0)
                {
                  v54 = *v51 + 7;
                  if (__OFADD__(*v51, 7))
                  {
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
LABEL_207:
                    __break(1u);
LABEL_208:
                    __break(1u);
LABEL_209:
                    __break(1u);
LABEL_210:
                    __break(1u);
LABEL_211:
                    __break(1u);
LABEL_212:
                    __break(1u);
LABEL_213:
                    __break(1u);
LABEL_214:
                    __break(1u);
LABEL_215:
                    __break(1u);
LABEL_216:
                    __break(1u);
LABEL_217:
                    __break(1u);
LABEL_218:
                    __break(1u);
LABEL_219:
                    __break(1u);
LABEL_220:
                    __break(1u);
LABEL_221:
                    __break(1u);
                    goto LABEL_222;
                  }
                  if (v54 < 0)
                    v54 = *v51 + 14;
                  v55 = v54 >> 3;
                  v56 = v55 - 1;
                  v102 = v55 < 1;
                  v57 = v55 + 62;
                  if (!v102)
                    v57 = v56;
                  v58 = *((unsigned __int8 *)v53 + v47 + (v57 & 0xFFFFFFFFFFFFC0) + 64);
                  if ((v50 & 0x8000000000000000) != 0)
                    goto LABEL_229;
                }
                else
                {
                  v58 = 2;
                  if ((v50 & 0x8000000000000000) != 0)
                    goto LABEL_229;
                }
                if ((uint64_t)v50 >= v52)
                  goto LABEL_229;
                if (((*((unsigned __int8 *)v53 + (v50 >> 3)) >> (v50 & 7)) & 1) != 0)
                {
                  v59 = *v51;
                  v85 = __OFADD__(v59, 7);
                  v60 = v59 + 7;
                  if (v85)
                    goto LABEL_194;
                  v61 = v60 / 8;
                  v62 = v61 - 1;
                  v102 = v61 < 1;
                  v63 = v61 + 62;
                  if (!v102)
                    v63 = v62;
                  v64 = *((unsigned __int8 *)v53 + v50 + (v63 & 0xFFFFFFFFFFFFC0) + 64);
                  if (v58 == 2)
                    break;
                }
                else
                {
                  v64 = 2;
                  if (v58 == 2)
                    break;
                }
                v66 = (v64 & 1) == 0 || v58 != 0;
                if (v64 != 2 && v66)
                  break;
                if (!v13)
                  goto LABEL_224;
                v67 = *v49;
                v47 = v49[1];
                *v49 = v47;
                v49[1] = v67;
                --v49;
                ++v48;
              }
              while (v16 != v48);
              ++v16;
              ++v46;
              v41 = v137;
            }
            while (v16 != v137);
            v14 = v145;
            v15 = v150;
            goto LABEL_124;
          }
        }
LABEL_123:
        v41 = v16;
        goto LABEL_124;
      }
    }
    v27 = 0;
LABEL_29:
    v28 = v20 + 8;
    v29 = v7 <= v26 + 1 ? v26 + 1 : v7;
    v30 = *(_QWORD *)(v13 + 8 * v16);
    v16 = v26;
    do
    {
      v31 = v30;
      v30 = *(_QWORD *)(v13 + 8 * v16);
      if (v30 < 0 || v30 >= v23)
        goto LABEL_229;
      if (((*((unsigned __int8 *)v28 + ((unint64_t)v30 >> 3)) >> (v30 & 7)) & 1) != 0)
      {
        v32 = *v20 + 7;
        if (__OFADD__(*v20, 7))
          goto LABEL_209;
        if (v32 < 0)
          v32 = *v20 + 14;
        v33 = v32 >> 3;
        v34 = v33 - 1;
        v102 = v33 < 1;
        v35 = v33 + 62;
        if (!v102)
          v35 = v34;
        v36 = *((unsigned __int8 *)v28 + v30 + (v35 & 0xFFFFFFFFFFFFC0) + 64);
        if (v31 < 0)
          goto LABEL_229;
      }
      else
      {
        v36 = 2;
        if (v31 < 0)
          goto LABEL_229;
      }
      if (v31 >= v23)
        goto LABEL_229;
      if (((*((unsigned __int8 *)v28 + ((unint64_t)v31 >> 3)) >> (v31 & 7)) & 1) != 0)
      {
        v37 = *v20 + 7;
        if (__OFADD__(*v20, 7))
          goto LABEL_210;
        if (v36 != 2)
        {
          if (v37 < 0)
            v37 = *v20 + 14;
          v38 = v37 >> 3;
          v39 = v38 - 1;
          v102 = v38 < 1;
          v40 = v38 + 62;
          if (!v102)
            v40 = v39;
          if (!v36 && (*((_BYTE *)v28 + v31 + (v40 & 0xFFFFFFFFFFFFC0) + 64) & 1) != 0)
          {
            if (!v27)
              goto LABEL_122;
            goto LABEL_34;
          }
        }
      }
      else if (v36 != 2)
      {
        if ((v27 & 1) == 0)
          goto LABEL_122;
        goto LABEL_34;
      }
      if ((v27 & 1) != 0)
      {
        v41 = v16;
        v15 = v149;
        goto LABEL_66;
      }
LABEL_34:
      ++v16;
    }
    while (v16 < v7);
    v41 = v29;
    v15 = v149;
    if (v27)
    {
LABEL_66:
      v26 = v41;
      if (v41 < v15)
        goto LABEL_220;
      if (v15 < v41)
        goto LABEL_68;
      goto LABEL_75;
    }
LABEL_124:
    if (v41 < v15)
      goto LABEL_213;
    v68 = v14;
    v138 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v14 = v68;
    else
      v14 = sub_21502DABC(0, *((_QWORD *)v68 + 2) + 1, 1, v68);
    v70 = *((_QWORD *)v14 + 2);
    v69 = *((_QWORD *)v14 + 3);
    v71 = v70 + 1;
    if (v70 >= v69 >> 1)
      v14 = sub_21502DABC((char *)(v69 > 1), v70 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v71;
    v72 = v14 + 32;
    v73 = &v14[16 * v70 + 32];
    *(_QWORD *)v73 = v15;
    *((_QWORD *)v73 + 1) = v138;
    if (v70)
      break;
    v71 = 1;
LABEL_173:
    v12 = v138;
    if (v138 >= v7)
      goto LABEL_178;
  }
  v146 = v14;
  v141 = v14 + 32;
  while (1)
  {
    v74 = v71 - 1;
    if (v71 >= 4)
    {
      v79 = &v72[16 * v71];
      v80 = *((_QWORD *)v79 - 8);
      v81 = *((_QWORD *)v79 - 7);
      v85 = __OFSUB__(v81, v80);
      v82 = v81 - v80;
      if (v85)
        goto LABEL_199;
      v84 = *((_QWORD *)v79 - 6);
      v83 = *((_QWORD *)v79 - 5);
      v85 = __OFSUB__(v83, v84);
      v77 = v83 - v84;
      v78 = v85;
      if (v85)
        goto LABEL_200;
      v86 = v71 - 2;
      v87 = &v72[16 * v71 - 32];
      v89 = *(_QWORD *)v87;
      v88 = *((_QWORD *)v87 + 1);
      v85 = __OFSUB__(v88, v89);
      v90 = v88 - v89;
      if (v85)
        goto LABEL_201;
      v85 = __OFADD__(v77, v90);
      v91 = v77 + v90;
      if (v85)
        goto LABEL_203;
      if (v91 >= v82)
      {
        v109 = &v72[16 * v74];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v85 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v85)
          goto LABEL_211;
        v102 = v77 < v112;
        goto LABEL_162;
      }
    }
    else
    {
      if (v71 != 3)
      {
        v103 = *((_QWORD *)v14 + 4);
        v104 = *((_QWORD *)v14 + 5);
        v85 = __OFSUB__(v104, v103);
        v96 = v104 - v103;
        v97 = v85;
        goto LABEL_156;
      }
      v76 = *((_QWORD *)v14 + 4);
      v75 = *((_QWORD *)v14 + 5);
      v85 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      v78 = v85;
    }
    if ((v78 & 1) != 0)
      goto LABEL_202;
    v86 = v71 - 2;
    v92 = &v72[16 * v71 - 32];
    v94 = *(_QWORD *)v92;
    v93 = *((_QWORD *)v92 + 1);
    v95 = __OFSUB__(v93, v94);
    v96 = v93 - v94;
    v97 = v95;
    if (v95)
      goto LABEL_204;
    v98 = &v72[16 * v74];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v85 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v85)
      goto LABEL_206;
    if (__OFADD__(v96, v101))
      goto LABEL_208;
    if (v96 + v101 >= v77)
    {
      v102 = v77 < v101;
LABEL_162:
      if (v102)
        v74 = v86;
      goto LABEL_164;
    }
LABEL_156:
    if ((v97 & 1) != 0)
      goto LABEL_205;
    v105 = &v72[16 * v74];
    v107 = *(_QWORD *)v105;
    v106 = *((_QWORD *)v105 + 1);
    v85 = __OFSUB__(v106, v107);
    v108 = v106 - v107;
    if (v85)
      goto LABEL_207;
    if (v108 < v96)
      goto LABEL_173;
LABEL_164:
    v113 = v74 - 1;
    if (v74 - 1 >= v71)
      goto LABEL_195;
    if (!v13)
      goto LABEL_225;
    v114 = v13;
    v115 = &v72[16 * v113];
    v116 = *(_QWORD *)v115;
    v117 = v74;
    v118 = &v72[16 * v74];
    v119 = *((_QWORD *)v118 + 1);
    v120 = (char *)(v114 + 8 * *(_QWORD *)v115);
    v151 = (char *)(v114 + 8 * *(_QWORD *)v118);
    v121 = v114 + 8 * v119;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150AA834(v120, v151, v121, v142, a2, v143, v148);
    if (v152)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    if (v119 < v116)
      goto LABEL_196;
    if (v117 > *((_QWORD *)v146 + 2))
      goto LABEL_197;
    *(_QWORD *)v115 = v116;
    v72 = v141;
    *(_QWORD *)&v141[16 * v113 + 8] = v119;
    v122 = *((_QWORD *)v146 + 2);
    if (v117 >= v122)
      goto LABEL_198;
    v71 = v122 - 1;
    memmove(v118, v118 + 16, 16 * (v122 - 1 - v117));
    v14 = v146;
    *((_QWORD *)v146 + 2) = v122 - 1;
    v13 = v139;
    v7 = v140;
    if (v122 <= 2)
      goto LABEL_173;
  }
LABEL_190:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v135 + 16) = 0;
  swift_release_n();
LABEL_191:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_192:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150ABA5C(char *__src, char *__dst, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v8;
  char *v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char *v38;
  BOOL v39;
  char *v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  _BOOL4 v60;
  BOOL v61;
  uint64_t result;
  char *v63;
  _QWORD *v64;

  v8 = a4;
  v10 = __dst;
  v11 = __src;
  v12 = __dst - __src;
  v13 = __dst - __src + 7;
  if (__dst - __src >= 0)
    v13 = __dst - __src;
  v14 = v13 >> 3;
  v15 = a3 - (_QWORD)__dst;
  v16 = a3 - (_QWORD)__dst + 7;
  if ((uint64_t)(a3 - (_QWORD)__dst) >= 0)
    v16 = a3 - (_QWORD)__dst;
  v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v17] <= a4)
      memmove(a4, __dst, 8 * v17);
    v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8)
      goto LABEL_84;
    v64 = (_QWORD *)(a7 + 16);
    v40 = (char *)(a3 - 8);
    v63 = v8;
    while (1)
    {
      v41 = *((_QWORD *)v18 - 1);
      if ((v41 & 0x8000000000000000) != 0)
      {
LABEL_95:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v42 = v10;
      v44 = v10 - 8;
      v43 = *((_QWORD *)v10 - 1);
      swift_beginAccess();
      v45 = (_QWORD *)*v64;
      if (!*v64)
        goto LABEL_94;
      v46 = v45[1];
      if ((uint64_t)v41 >= v46)
        goto LABEL_95;
      v47 = v45 + 8;
      if (((*((unsigned __int8 *)v45 + (v41 >> 3) + 64) >> (v41 & 7)) & 1) != 0)
      {
        v48 = *v45 + 7;
        if (__OFADD__(*v45, 7))
        {
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        if (v48 < 0)
          v48 = *v45 + 14;
        v49 = v48 >> 3;
        v50 = v49 - 1;
        v27 = v49 < 1;
        v51 = v49 + 62;
        if (!v27)
          v51 = v50;
        v52 = *((unsigned __int8 *)v47 + v41 + (v51 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v43 & 0x8000000000000000) != 0)
          goto LABEL_95;
      }
      else
      {
        v52 = 2;
        if ((v43 & 0x8000000000000000) != 0)
          goto LABEL_95;
      }
      if ((uint64_t)v43 >= v46)
        goto LABEL_95;
      if (((*((unsigned __int8 *)v47 + (v43 >> 3)) >> (v43 & 7)) & 1) != 0)
      {
        v53 = *v45;
        v32 = __OFADD__(v53, 7);
        v54 = v53 + 7;
        if (v32)
          goto LABEL_92;
        v55 = v54 / 8;
        v56 = v55 - 1;
        v27 = v55 < 1;
        v57 = v55 + 62;
        if (!v27)
          v57 = v56;
        v58 = *((unsigned __int8 *)v47 + v43 + (v57 & 0xFFFFFFFFFFFFC0) + 64);
      }
      else
      {
        v58 = 2;
      }
      v59 = v40 + 8;
      if (v52 != 2)
      {
        v60 = v52 == 0;
        if (v58 == 2 || ((v60 | v58) & 1) == 0)
          break;
      }
      v44 = v18 - 8;
      if (v59 != v18)
      {
        v18 -= 8;
LABEL_79:
        *(_QWORD *)v40 = *(_QWORD *)v44;
        goto LABEL_80;
      }
      v61 = v40 >= v18;
      v18 -= 8;
      if (v61)
        goto LABEL_79;
LABEL_80:
      if (v10 <= v11)
      {
        v8 = v63;
        goto LABEL_84;
      }
      v40 -= 8;
      v8 = v63;
      if (v18 <= v63)
        goto LABEL_84;
    }
    if (v59 == v10)
    {
      v10 -= 8;
      if (v40 < v42)
        goto LABEL_80;
    }
    else
    {
      v10 -= 8;
    }
    goto LABEL_79;
  }
  if (a4 != __src || &__src[8 * v14] <= a4)
    memmove(a4, __src, 8 * v14);
  v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    v19 = (_QWORD *)(a7 + 16);
    do
    {
      v20 = *(_QWORD *)v10;
      if ((*(_QWORD *)v10 & 0x8000000000000000) != 0)
        goto LABEL_95;
      v21 = *(_QWORD *)v8;
      swift_beginAccess();
      v22 = (_QWORD *)*v19;
      if (!*v19)
        goto LABEL_93;
      v23 = v22[1];
      if ((uint64_t)v20 >= v23)
        goto LABEL_95;
      v24 = v22 + 8;
      if (((*((unsigned __int8 *)v22 + (v20 >> 3) + 64) >> (v20 & 7)) & 1) != 0)
      {
        v25 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_90;
        }
        if (v25 < 0)
          v25 = *v22 + 14;
        v26 = v25 >> 3;
        v28 = v26 - 1;
        v27 = v26 < 1;
        v29 = v26 + 62;
        if (!v27)
          v29 = v28;
        v30 = *((unsigned __int8 *)v24 + v20 + (v29 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_95;
      }
      else
      {
        v30 = 2;
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_95;
      }
      if ((uint64_t)v21 >= v23)
        goto LABEL_95;
      if (((*((unsigned __int8 *)v24 + (v21 >> 3)) >> (v21 & 7)) & 1) != 0)
      {
        v31 = *v22;
        v32 = __OFADD__(v31, 7);
        v33 = v31 + 7;
        if (v32)
          goto LABEL_91;
        v34 = v33 / 8;
        v35 = v34 - 1;
        v27 = v34 < 1;
        v36 = v34 + 62;
        if (!v27)
          v36 = v35;
        v37 = *((unsigned __int8 *)v24 + v21 + (v36 & 0xFFFFFFFFFFFFC0) + 64);
        if (v30 == 2)
        {
LABEL_34:
          v38 = v8;
          v39 = v11 == v8;
          v8 += 8;
          if (v39)
            goto LABEL_36;
LABEL_35:
          *(_QWORD *)v11 = *(_QWORD *)v38;
          goto LABEL_36;
        }
      }
      else
      {
        v37 = 2;
        if (v30 == 2)
          goto LABEL_34;
      }
      if (v37 != 2 && (v30 == 0) | v37 & 1)
        goto LABEL_34;
      v38 = v10;
      v39 = v11 == v10;
      v10 += 8;
      if (!v39)
        goto LABEL_35;
LABEL_36:
      v11 += 8;
    }
    while (v8 < v18 && (unint64_t)v10 < a3);
  }
  v10 = v11;
LABEL_84:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  return 1;
}

uint64_t sub_2150ABF14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;

  v33 = result;
  if (a3 != a2)
  {
    v7 = a3;
    v9 = *a4;
    v10 = (_QWORD *)(a7 + 16);
    v11 = *a4 + 8 * a3 - 8;
LABEL_5:
    v12 = *(_QWORD *)(v9 + 8 * v7);
    v13 = v33;
    v14 = (unint64_t *)v11;
    while ((v12 & 0x8000000000000000) == 0)
    {
      v15 = *v14;
      result = swift_beginAccess();
      v16 = (_QWORD *)*v10;
      if (!*v10)
        goto LABEL_33;
      v17 = v16[1];
      if ((uint64_t)v12 >= v17)
        break;
      v18 = v16 + 8;
      if (((*((unsigned __int8 *)v16 + (v12 >> 3) + 64) >> (v12 & 7)) & 1) != 0)
      {
        v19 = *v16 + 7;
        if (__OFADD__(*v16, 7))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          break;
        }
        if (v19 < 0)
          v19 = *v16 + 14;
        v20 = v19 >> 3;
        v22 = v20 - 1;
        v21 = v20 < 1;
        v23 = v20 + 62;
        if (!v21)
          v23 = v22;
        v24 = *((unsigned __int8 *)v18 + v12 + (v23 & 0xFFFFFFFFFFFFC0) + 64);
        if ((v15 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v24 = 2;
        if ((v15 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v15 >= v17)
        break;
      if (((*((unsigned __int8 *)v18 + (v15 >> 3)) >> (v15 & 7)) & 1) != 0)
      {
        v25 = *v16;
        v26 = __OFADD__(v25, 7);
        v27 = v25 + 7;
        if (v26)
          goto LABEL_32;
        v28 = v27 / 8;
        v29 = v28 - 1;
        v21 = v28 < 1;
        v30 = v28 + 62;
        if (!v21)
          v30 = v29;
        v31 = *((unsigned __int8 *)v18 + v15 + (v30 & 0xFFFFFFFFFFFFC0) + 64);
        if (v24 == 2)
          goto LABEL_4;
      }
      else
      {
        v31 = 2;
        if (v24 == 2)
          goto LABEL_4;
      }
      if (v31 == 2 || !((v24 == 0) | v31 & 1))
      {
        if (!v9)
          goto LABEL_34;
        v32 = *v14;
        v12 = v14[1];
        *v14 = v12;
        v14[1] = v32;
        --v14;
        if (v7 != ++v13)
          continue;
      }
LABEL_4:
      ++v7;
      v11 += 8;
      if (v7 == a2)
        return result;
      goto LABEL_5;
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150AC128(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  unint64_t v127;
  char *v128;
  unint64_t v129;
  uint64_t result;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  _QWORD **v151;
  uint64_t v152;

  v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v8 = sub_215130394();
  if (v8 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150ABF14(0, v7, 1, a1, a2, a3, a4);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  v134 = v8;
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_211;
  v141 = a3;
  v146 = a4;
  v132 = a1;
  if (v7 <= 1)
  {
    v140 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v133 = MEMORY[0x24BEE4AF8];
    if (v7 != 1)
    {
      v69 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v14 = (char *)MEMORY[0x24BEE4AF8];
LABEL_171:
      v145 = v14;
      if (v69 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v133 + 16) = 0;
        swift_release_n();
        goto LABEL_184;
      }
      v121 = *v132;
      v152 = *v132;
      while (1)
      {
        v122 = v69 - 2;
        if (v69 < 2)
          goto LABEL_205;
        if (!v121)
          goto LABEL_220;
        v123 = *(_QWORD *)&v145[16 * v122 + 32];
        v124 = *(_QWORD *)&v145[16 * v69 + 24];
        v125 = (char *)(v121 + 8 * v123);
        v126 = (char *)(v121 + 8 * *(_QWORD *)&v145[16 * v69 + 16]);
        v127 = v121 + 8 * v124;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150ABA5C(v125, v126, v127, v140, a2, v141, v146);
        if (v150)
          goto LABEL_183;
        swift_release();
        swift_bridgeObjectRelease();
        if (v124 < v123)
          goto LABEL_207;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v145 = sub_21501E510((uint64_t)v145);
        if (v122 >= *((_QWORD *)v145 + 2))
          goto LABEL_208;
        v128 = &v145[16 * v122 + 32];
        *(_QWORD *)v128 = v123;
        *((_QWORD *)v128 + 1) = v124;
        v129 = *((_QWORD *)v145 + 2);
        if (v69 > v129)
          goto LABEL_209;
        memmove(&v145[16 * v69 + 16], &v145[16 * v69 + 32], 16 * (v129 - v69));
        *((_QWORD *)v145 + 2) = v129 - 1;
        v69 = v129 - 1;
        v121 = v152;
        if (v129 <= 2)
          goto LABEL_182;
      }
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_21512FCF8();
    *(_QWORD *)(v11 + 16) = v10;
    v133 = v11;
    v140 = (char *)(v11 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v151 = (_QWORD **)(a4 + 16);
  v131 = *a1 - 8;
  v14 = (char *)MEMORY[0x24BEE4AF8];
  v137 = *a1;
  v138 = v7;
  while (1)
  {
    v15 = v12;
    v16 = v12 + 1;
    if (v12 + 1 >= v7)
      goto LABEL_75;
    v17 = *(_QWORD *)(v13 + 8 * v16);
    if (v17 < 0)
      goto LABEL_222;
    v18 = v14;
    v19 = *(_QWORD *)(v13 + 8 * v12);
    swift_beginAccess();
    v20 = *v151;
    if (!*v151)
      goto LABEL_221;
    if (v17 >= v20[1])
      goto LABEL_222;
    v147 = v15;
    v21 = sub_215099508(v17, v20, v146);
    if (v19 < 0)
      goto LABEL_222;
    v23 = v20[1];
    if (v19 >= v23)
      goto LABEL_222;
    v24 = v21;
    v25 = sub_215099508(v19, v20, v22);
    if (v24 == 2)
    {
      v26 = v147 + 2;
      v14 = v18;
      if (v147 + 2 >= v7)
        goto LABEL_114;
    }
    else
    {
      v14 = v18;
      if (v25 == 2)
      {
        v26 = v147 + 2;
LABEL_27:
        if (v26 < v7)
        {
          v27 = 1;
          goto LABEL_29;
        }
        v15 = v147;
        if (v147 < v26)
        {
LABEL_67:
          v42 = v26 - 1;
          v43 = v15;
          do
          {
            if (v43 != v42)
            {
              if (!v13)
                goto LABEL_219;
              v44 = *(_QWORD *)(v13 + 8 * v43);
              *(_QWORD *)(v13 + 8 * v43) = *(_QWORD *)(v13 + 8 * v42);
              *(_QWORD *)(v13 + 8 * v42) = v44;
            }
            v100 = ++v43 < v42--;
          }
          while (v100);
        }
LABEL_74:
        v16 = v26;
LABEL_75:
        if (v16 < v7)
          goto LABEL_76;
        goto LABEL_116;
      }
      v26 = v147 + 2;
      if ((v24 & 1) != 0 && (v25 & 1) == 0)
        goto LABEL_27;
      if (v26 >= v7)
      {
LABEL_114:
        v16 = v26;
LABEL_115:
        v15 = v147;
        if (v16 >= v7)
          goto LABEL_116;
LABEL_76:
        if (__OFSUB__(v16, v15))
          goto LABEL_210;
        if (v16 - v15 < v134)
        {
          if (__OFADD__(v15, v134))
            goto LABEL_214;
          if (v15 + v134 >= v7)
            v45 = v7;
          else
            v45 = v15 + v134;
          if (v45 < v15)
          {
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_218:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_219:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_220:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            result = sub_2151302EC();
            __break(1u);
            return result;
          }
          if (v16 != v45)
          {
            v148 = v15;
            v143 = v14;
            v46 = (unint64_t *)(v131 + 8 * v16);
            v135 = v45;
            do
            {
              v47 = *(_QWORD *)(v13 + 8 * v16);
              v48 = v148;
              v49 = v46;
              do
              {
                if ((v47 & 0x8000000000000000) != 0)
                  goto LABEL_222;
                v50 = *v49;
                swift_beginAccess();
                v51 = *v151;
                if (!*v151)
                  goto LABEL_216;
                v52 = v51[1];
                if ((uint64_t)v47 >= v52)
                  goto LABEL_222;
                v53 = v51 + 8;
                if (((*((unsigned __int8 *)v51 + (v47 >> 3) + 64) >> (v47 & 7)) & 1) != 0)
                {
                  v54 = *v51 + 7;
                  if (__OFADD__(*v51, 7))
                  {
                    __break(1u);
LABEL_187:
                    __break(1u);
LABEL_188:
                    __break(1u);
LABEL_189:
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
LABEL_207:
                    __break(1u);
LABEL_208:
                    __break(1u);
LABEL_209:
                    __break(1u);
LABEL_210:
                    __break(1u);
LABEL_211:
                    __break(1u);
LABEL_212:
                    __break(1u);
LABEL_213:
                    __break(1u);
LABEL_214:
                    __break(1u);
                    goto LABEL_215;
                  }
                  if (v54 < 0)
                    v54 = *v51 + 14;
                  v55 = v54 >> 3;
                  v56 = v55 - 1;
                  v100 = v55 < 1;
                  v57 = v55 + 62;
                  if (!v100)
                    v57 = v56;
                  v58 = *((unsigned __int8 *)v53 + v47 + (v57 & 0xFFFFFFFFFFFFC0) + 64);
                  if ((v50 & 0x8000000000000000) != 0)
                    goto LABEL_222;
                }
                else
                {
                  v58 = 2;
                  if ((v50 & 0x8000000000000000) != 0)
                    goto LABEL_222;
                }
                if ((uint64_t)v50 >= v52)
                  goto LABEL_222;
                if (((*((unsigned __int8 *)v53 + (v50 >> 3)) >> (v50 & 7)) & 1) != 0)
                {
                  v59 = *v51;
                  v83 = __OFADD__(v59, 7);
                  v60 = v59 + 7;
                  if (v83)
                    goto LABEL_187;
                  v61 = v60 / 8;
                  v62 = v61 - 1;
                  v100 = v61 < 1;
                  v63 = v61 + 62;
                  if (!v100)
                    v63 = v62;
                  v64 = *((unsigned __int8 *)v53 + v50 + (v63 & 0xFFFFFFFFFFFFC0) + 64);
                  if (v58 == 2)
                    break;
                }
                else
                {
                  v64 = 2;
                  if (v58 == 2)
                    break;
                }
                if (v64 != 2 && (v58 == 0) | v64 & 1)
                  break;
                if (!v13)
                  goto LABEL_217;
                v65 = *v49;
                v47 = v49[1];
                *v49 = v47;
                v49[1] = v65;
                --v49;
                ++v48;
              }
              while (v16 != v48);
              ++v16;
              ++v46;
              v41 = v135;
            }
            while (v16 != v135);
            v14 = v143;
            v15 = v148;
            goto LABEL_117;
          }
        }
LABEL_116:
        v41 = v16;
        goto LABEL_117;
      }
    }
    v27 = 0;
LABEL_29:
    v28 = v20 + 8;
    v29 = v7 <= v26 + 1 ? v26 + 1 : v7;
    v30 = *(_QWORD *)(v13 + 8 * v16);
    v16 = v26;
    do
    {
      v31 = v30;
      v30 = *(_QWORD *)(v13 + 8 * v16);
      if (v30 < 0 || v30 >= v23)
        goto LABEL_222;
      if (((*((unsigned __int8 *)v28 + ((unint64_t)v30 >> 3)) >> (v30 & 7)) & 1) != 0)
      {
        v32 = *v20 + 7;
        if (__OFADD__(*v20, 7))
          goto LABEL_202;
        if (v32 < 0)
          v32 = *v20 + 14;
        v33 = v32 >> 3;
        v34 = v33 - 1;
        v100 = v33 < 1;
        v35 = v33 + 62;
        if (!v100)
          v35 = v34;
        v36 = *((unsigned __int8 *)v28 + v30 + (v35 & 0xFFFFFFFFFFFFC0) + 64);
        if (v31 < 0)
          goto LABEL_222;
      }
      else
      {
        v36 = 2;
        if (v31 < 0)
          goto LABEL_222;
      }
      if (v31 >= v23)
        goto LABEL_222;
      if (((*((unsigned __int8 *)v28 + ((unint64_t)v31 >> 3)) >> (v31 & 7)) & 1) != 0)
      {
        v37 = *v20 + 7;
        if (__OFADD__(*v20, 7))
          goto LABEL_203;
        if (v36 != 2)
        {
          if (v37 < 0)
            v37 = *v20 + 14;
          v38 = v37 >> 3;
          v39 = v38 - 1;
          v100 = v38 < 1;
          v40 = v38 + 62;
          if (!v100)
            v40 = v39;
          if (v36 && (*((_BYTE *)v28 + v31 + (v40 & 0xFFFFFFFFFFFFC0) + 64) & 1) == 0)
          {
LABEL_58:
            if ((v27 & 1) == 0)
              goto LABEL_115;
            goto LABEL_34;
          }
        }
      }
      else if (v36 != 2)
      {
        goto LABEL_58;
      }
      if ((v27 & 1) != 0)
      {
        v41 = v16;
        v15 = v147;
        goto LABEL_65;
      }
LABEL_34:
      ++v16;
    }
    while (v16 < v7);
    v41 = v29;
    v15 = v147;
    if (v27)
    {
LABEL_65:
      v26 = v41;
      if (v41 < v15)
        goto LABEL_213;
      if (v15 < v41)
        goto LABEL_67;
      goto LABEL_74;
    }
LABEL_117:
    if (v41 < v15)
      goto LABEL_206;
    v66 = v14;
    v136 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v14 = v66;
    else
      v14 = sub_21502DABC(0, *((_QWORD *)v66 + 2) + 1, 1, v66);
    v68 = *((_QWORD *)v14 + 2);
    v67 = *((_QWORD *)v14 + 3);
    v69 = v68 + 1;
    if (v68 >= v67 >> 1)
      v14 = sub_21502DABC((char *)(v67 > 1), v68 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v69;
    v70 = v14 + 32;
    v71 = &v14[16 * v68 + 32];
    *(_QWORD *)v71 = v15;
    *((_QWORD *)v71 + 1) = v136;
    if (v68)
      break;
    v69 = 1;
LABEL_166:
    v12 = v136;
    if (v136 >= v7)
      goto LABEL_171;
  }
  v144 = v14;
  v139 = v14 + 32;
  while (1)
  {
    v72 = v69 - 1;
    if (v69 >= 4)
    {
      v77 = &v70[16 * v69];
      v78 = *((_QWORD *)v77 - 8);
      v79 = *((_QWORD *)v77 - 7);
      v83 = __OFSUB__(v79, v78);
      v80 = v79 - v78;
      if (v83)
        goto LABEL_192;
      v82 = *((_QWORD *)v77 - 6);
      v81 = *((_QWORD *)v77 - 5);
      v83 = __OFSUB__(v81, v82);
      v75 = v81 - v82;
      v76 = v83;
      if (v83)
        goto LABEL_193;
      v84 = v69 - 2;
      v85 = &v70[16 * v69 - 32];
      v87 = *(_QWORD *)v85;
      v86 = *((_QWORD *)v85 + 1);
      v83 = __OFSUB__(v86, v87);
      v88 = v86 - v87;
      if (v83)
        goto LABEL_194;
      v83 = __OFADD__(v75, v88);
      v89 = v75 + v88;
      if (v83)
        goto LABEL_196;
      if (v89 >= v80)
      {
        v107 = &v70[16 * v72];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v83 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v83)
          goto LABEL_204;
        v100 = v75 < v110;
        goto LABEL_155;
      }
    }
    else
    {
      if (v69 != 3)
      {
        v101 = *((_QWORD *)v14 + 4);
        v102 = *((_QWORD *)v14 + 5);
        v83 = __OFSUB__(v102, v101);
        v94 = v102 - v101;
        v95 = v83;
        goto LABEL_149;
      }
      v74 = *((_QWORD *)v14 + 4);
      v73 = *((_QWORD *)v14 + 5);
      v83 = __OFSUB__(v73, v74);
      v75 = v73 - v74;
      v76 = v83;
    }
    if ((v76 & 1) != 0)
      goto LABEL_195;
    v84 = v69 - 2;
    v90 = &v70[16 * v69 - 32];
    v92 = *(_QWORD *)v90;
    v91 = *((_QWORD *)v90 + 1);
    v93 = __OFSUB__(v91, v92);
    v94 = v91 - v92;
    v95 = v93;
    if (v93)
      goto LABEL_197;
    v96 = &v70[16 * v72];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v83 = __OFSUB__(v97, v98);
    v99 = v97 - v98;
    if (v83)
      goto LABEL_199;
    if (__OFADD__(v94, v99))
      goto LABEL_201;
    if (v94 + v99 >= v75)
    {
      v100 = v75 < v99;
LABEL_155:
      if (v100)
        v72 = v84;
      goto LABEL_157;
    }
LABEL_149:
    if ((v95 & 1) != 0)
      goto LABEL_198;
    v103 = &v70[16 * v72];
    v105 = *(_QWORD *)v103;
    v104 = *((_QWORD *)v103 + 1);
    v83 = __OFSUB__(v104, v105);
    v106 = v104 - v105;
    if (v83)
      goto LABEL_200;
    if (v106 < v94)
      goto LABEL_166;
LABEL_157:
    v111 = v72 - 1;
    if (v72 - 1 >= v69)
      goto LABEL_188;
    if (!v13)
      goto LABEL_218;
    v112 = v13;
    v113 = &v70[16 * v111];
    v114 = *(_QWORD *)v113;
    v115 = v72;
    v116 = &v70[16 * v72];
    v117 = *((_QWORD *)v116 + 1);
    v118 = (char *)(v112 + 8 * *(_QWORD *)v113);
    v149 = (char *)(v112 + 8 * *(_QWORD *)v116);
    v119 = v112 + 8 * v117;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150ABA5C(v118, v149, v119, v140, a2, v141, v146);
    if (v150)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    if (v117 < v114)
      goto LABEL_189;
    if (v115 > *((_QWORD *)v144 + 2))
      goto LABEL_190;
    *(_QWORD *)v113 = v114;
    v70 = v139;
    *(_QWORD *)&v139[16 * v111 + 8] = v117;
    v120 = *((_QWORD *)v144 + 2);
    if (v115 >= v120)
      goto LABEL_191;
    v69 = v120 - 1;
    memmove(v116, v116 + 16, 16 * (v120 - 1 - v115));
    v14 = v144;
    *((_QWORD *)v144 + 2) = v120 - 1;
    v13 = v137;
    v7 = v138;
    if (v120 <= 2)
      goto LABEL_166;
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v133 + 16) = 0;
  swift_release_n();
LABEL_184:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150ACC80(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t))
{
  char *v10;
  uint64_t v11;
  _QWORD v13[2];

  v10 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_2150A4F1C((uint64_t)v10);
  v11 = *((_QWORD *)v10 + 2);
  v13[0] = v10 + 32;
  v13[1] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  a5(v13, a2, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = v10;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2150ACD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char v57;
  char v58;
  void (*v59)(char *, uint64_t);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  int v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v65 = a8;
  v63 = a1;
  v12 = sub_21512F740();
  v74 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v72 = (char *)&v61 - v16;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA75C0);
  MEMORY[0x24BDAC7A8](v69);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v20);
  v75 = (uint64_t)&v61 - v24;
  v62 = a2;
  if (a3 != a2)
  {
    v25 = (uint64_t)v18;
    v26 = *a4;
    v67 = v15;
    v68 = (_QWORD *)(a7 + 16);
    v70 = v26;
    v27 = (unint64_t *)(v26 + 8 * a3 - 8);
    v66 = v22;
LABEL_6:
    v28 = *(_QWORD *)(v70 + 8 * a3);
    v29 = v63;
    v64 = v27;
    v71 = a3;
    while (1)
    {
      v73 = v29;
      if ((v28 & 0x8000000000000000) != 0)
        break;
      v30 = *v27;
      v31 = v68;
      swift_beginAccess();
      v32 = (_QWORD *)*v31;
      if (!*v31)
        goto LABEL_42;
      if ((int64_t)v28 >= v32[1])
        break;
      v33 = v32 + 8;
      if (((*((unsigned __int8 *)v32 + (v28 >> 3) + 64) >> (v28 & 7)) & 1) != 0)
      {
        v34 = *v32 + 7;
        if (__OFADD__(*v32, 7))
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          break;
        }
        if (v34 < 0)
          v34 = *v32 + 14;
        v35 = v34 >> 3;
        v37 = v35 - 1;
        v36 = v35 < 1;
        v38 = v35 + 62;
        if (!v36)
          v38 = v37;
        v39 = v12;
        v40 = v74;
        v41 = v75;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v74 + 16))(v75, (unint64_t)v33 + (v38 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v74 + 72) * v28 + 64, v39);
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v12 = v39;
        v22 = v66;
        v42(v41, 0, 1, v12);
      }
      else
      {
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
        v42(v75, 1, 1, v12);
      }
      if ((v30 & 0x8000000000000000) != 0 || (int64_t)v30 >= v32[1])
        break;
      if (((*((unsigned __int8 *)v33 + (v30 >> 3)) >> (v30 & 7)) & 1) != 0)
      {
        v43 = *v32 + 7;
        if (__OFADD__(*v32, 7))
          goto LABEL_41;
        if (v43 < 0)
          v43 = *v32 + 14;
        v44 = v43 >> 3;
        v45 = v44 - 1;
        v36 = v44 < 1;
        v46 = v44 + 62;
        if (!v36)
          v46 = v45;
        v47 = v74;
        (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v22, (unint64_t)v33 + (v46 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v74 + 72) * v30 + 64, v12);
        v48 = 0;
      }
      else
      {
        v48 = 1;
        v47 = v74;
      }
      v42((uint64_t)v22, v48, 1, v12);
      v49 = v25 + *(int *)(v69 + 48);
      sub_21501EE48(v75, v25);
      sub_21501EE48((uint64_t)v22, v49);
      v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      v51 = v50(v25, 1, v12);
      v52 = v50(v49, 1, v12);
      if (v51 == 1)
      {
        v53 = v71;
        if (v52 != 1)
          sub_215066908(v49);
        sub_215066908((uint64_t)v22);
        result = sub_215066908(v75);
LABEL_5:
        a3 = v53 + 1;
        v27 = v64 + 1;
        if (a3 == v62)
          return result;
        goto LABEL_6;
      }
      v53 = v71;
      v54 = v67;
      if (v52 == 1)
      {
        sub_215066908(v25);
        sub_215066908((uint64_t)v22);
        result = sub_215066908(v75);
        v55 = v73;
      }
      else
      {
        v56 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
        v56(v72, v25, v12);
        v56(v54, v49, v12);
        sub_21509D744();
        if ((v65 & 1) != 0)
          v57 = sub_21512F9BC();
        else
          v57 = sub_21512F9C8();
        v58 = v57;
        v59 = *(void (**)(char *, uint64_t))(v74 + 8);
        v59(v54, v12);
        v59(v72, v12);
        sub_215066908((uint64_t)v22);
        result = sub_215066908(v75);
        v55 = v73;
        if ((v58 & 1) == 0)
          goto LABEL_5;
      }
      if (!v70)
        goto LABEL_43;
      v60 = *v27;
      v28 = v27[1];
      *v27 = v28;
      v27[1] = v60;
      --v27;
      v29 = v55 + 1;
      if (v53 == v29)
        goto LABEL_5;
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150AD250(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  int64_t v42;
  int64_t v43;
  int64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  int v69;
  int v70;
  int v71;
  char *v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t);
  int v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  unint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  int v106;
  int v107;
  int64_t v108;
  char *v109;
  char *v110;
  void (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  char v113;
  char v114;
  void (*v115)(char *, uint64_t);
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  char *v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  char v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  unint64_t v187;
  uint64_t result;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  int64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  char *v211;
  char *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  int64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;

  v202 = a2;
  v210 = a5 & 1;
  v8 = sub_21512F740();
  v219 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v212 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v211 = (char *)&v189 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v189 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v189 - v16;
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA75C0);
  v18 = MEMORY[0x24BDAC7A8](v214);
  v217 = (uint64_t)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v198 = (uint64_t)&v189 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v220 = (char *)&v189 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v200 = (uint64_t)&v189 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v204 = (uint64_t)&v189 - v29;
  v30 = a1[1];
  v203 = a3;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v31 = sub_215130394();
  if (v31 >= v30)
  {
    if (v30 < 0)
      goto LABEL_206;
    if (v30)
    {
      v36 = v203;
      swift_bridgeObjectRetain();
      swift_retain();
      v37 = v209;
      sub_2150ACD6C(0, v30, 1, a1, v202, v36, a4, v210);
      swift_release_n();
      swift_bridgeObjectRelease_n();
      v209 = v37;
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_177;
  }
  if (v30 >= 0)
    v32 = v30;
  else
    v32 = v30 + 1;
  if (v30 >= -1)
  {
    v194 = v31;
    v208 = a4;
    v196 = v15;
    v195 = v17;
    v197 = v30;
    v191 = a1;
    if (v30 > 1)
    {
      v33 = v32 >> 1;
      v34 = sub_21512FCF8();
      *(_QWORD *)(v34 + 16) = v33;
      v193 = v34;
      v201 = (char *)(v34 + 32);
      v35 = v219;
      goto LABEL_12;
    }
    v201 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v35 = v219;
    v193 = MEMORY[0x24BEE4AF8];
    if (v30 == 1)
    {
LABEL_12:
      v38 = a4;
      v39 = 0;
      v40 = *a1;
      v213 = (_QWORD *)(a4 + 16);
      v192 = v40 + 16;
      v215 = v40;
      v190 = v40 - 8;
      v41 = (char *)MEMORY[0x24BEE4AF8];
      v218 = v24;
      v42 = v197;
LABEL_13:
      v43 = v39++;
      v44 = v42;
      v207 = (char *)v43;
      if (v39 >= v42)
        goto LABEL_63;
      v45 = v209;
      LODWORD(v206) = sub_21509E96C(*(_QWORD *)(v215 + 8 * v39), *(_QWORD *)(v215 + 8 * v43), v202, v203, v38, v210);
      v209 = v45;
      if (v45)
        goto LABEL_176;
      v39 = v43 + 2;
      if (v43 + 2 >= v44)
        goto LABEL_52;
      v46 = (unint64_t *)(v192 + 8 * v43);
      while (1)
      {
        v216 = v39;
        v47 = *v46;
        if ((*v46 & 0x8000000000000000) != 0)
          goto LABEL_216;
        v48 = v41;
        v49 = *(v46 - 1);
        v50 = v213;
        swift_beginAccess();
        v51 = (_QWORD *)*v50;
        if (!v51)
          goto LABEL_213;
        if ((int64_t)v47 >= v51[1])
          goto LABEL_216;
        v52 = v51 + 8;
        if (((*((unsigned __int8 *)v51 + (v47 >> 3) + 64) >> (v47 & 7)) & 1) != 0)
        {
          v53 = *v51 + 7;
          if (__OFADD__(*v51, 7))
            goto LABEL_196;
          if (v53 < 0)
            v53 = *v51 + 14;
          v54 = v53 >> 3;
          v55 = v54 - 1;
          v150 = v54 < 1;
          v56 = v54 + 62;
          if (!v150)
            v56 = v55;
          v57 = (unint64_t)v52 + (v56 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v35 + 72) * v47 + 64;
          v58 = v204;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v204, v57, v8);
          v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
          v59(v58, 0, 1, v8);
        }
        else
        {
          v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
          v59(v204, 1, 1, v8);
        }
        if ((v49 & 0x8000000000000000) != 0 || (int64_t)v49 >= v51[1])
          goto LABEL_216;
        if (((*((unsigned __int8 *)v52 + (v49 >> 3)) >> (v49 & 7)) & 1) != 0)
        {
          v60 = *v51 + 7;
          if (__OFADD__(*v51, 7))
            goto LABEL_197;
          if (v60 < 0)
            v60 = *v51 + 14;
          v61 = v60 >> 3;
          v62 = v61 - 1;
          v150 = v61 < 1;
          v63 = v61 + 62;
          if (!v150)
            v63 = v62;
          v64 = v200;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v200, (unint64_t)v52 + (v63 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v35 + 72) * v49 + 64, v8);
          v65 = 0;
        }
        else
        {
          v65 = 1;
          v64 = v200;
        }
        v59(v64, v65, 1, v8);
        v66 = v198;
        v67 = v198 + *(int *)(v214 + 48);
        sub_21501EE48(v204, v198);
        sub_21501EE48(v64, v67);
        v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
        v69 = v68(v66, 1, v8);
        v70 = v68(v67, 1, v8);
        if (v69 == 1)
        {
          v41 = v48;
          v44 = v197;
          if (v70 != 1)
            sub_215066908(v67);
          v71 = 0;
          v35 = v219;
        }
        else
        {
          v72 = v196;
          v73 = v195;
          v44 = v197;
          if (v70 == 1)
          {
            sub_215066908(v198);
            v71 = 1;
            v35 = v219;
          }
          else
          {
            v74 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 32);
            v74(v195, v198, v8);
            v74(v72, v67, v8);
            sub_21509D744();
            v75 = v210 ? sub_21512F9BC() : sub_21512F9C8();
            v71 = v75;
            v76 = v219;
            v77 = *(void (**)(char *, uint64_t))(v219 + 8);
            v77(v72, v8);
            v77(v73, v8);
            v35 = v76;
          }
          v41 = v48;
        }
        v39 = v216;
        sub_215066908(v200);
        sub_215066908(v204);
        if (((v206 ^ v71) & 1) != 0)
          break;
        ++v46;
        ++v39;
        v43 = (int64_t)v207;
        if (v44 == v39)
        {
          v39 = v44;
          v38 = v208;
LABEL_52:
          if ((v206 & 1) != 0)
            goto LABEL_55;
LABEL_63:
          if (v39 >= v44)
            goto LABEL_111;
          if (__OFSUB__(v39, v43))
            goto LABEL_204;
          if (v39 - v43 >= v194)
            goto LABEL_111;
          if (__OFADD__(v43, v194))
            goto LABEL_207;
          if (v43 + v194 >= v44)
            v82 = v44;
          else
            v82 = v43 + v194;
          if (v82 < v43)
            goto LABEL_208;
          if (v39 == v82)
            goto LABEL_111;
          v199 = v41;
          v83 = (char *)(v190 + 8 * v39);
          v84 = v215;
          v205 = v82;
          while (2)
          {
            v216 = v39;
            v85 = *(_QWORD *)(v84 + 8 * v39);
            v86 = v43;
            v206 = v83;
            while (2)
            {
              if ((v85 & 0x8000000000000000) != 0)
                goto LABEL_216;
              v87 = *(_QWORD *)v83;
              v88 = v213;
              swift_beginAccess();
              v89 = (_QWORD *)*v88;
              if (!*v88)
                goto LABEL_210;
              if ((int64_t)v85 >= v89[1])
                goto LABEL_216;
              v90 = v89 + 8;
              if (((*((unsigned __int8 *)v89 + (v85 >> 3) + 64) >> (v85 & 7)) & 1) == 0)
              {
                v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
                v96(v220, 1, 1, v8);
                goto LABEL_87;
              }
              v91 = *v89 + 7;
              if (__OFADD__(*v89, 7))
              {
                __break(1u);
LABEL_181:
                __break(1u);
LABEL_182:
                __break(1u);
LABEL_183:
                __break(1u);
LABEL_184:
                __break(1u);
LABEL_185:
                __break(1u);
LABEL_186:
                __break(1u);
LABEL_187:
                __break(1u);
LABEL_188:
                __break(1u);
LABEL_189:
                __break(1u);
LABEL_190:
                __break(1u);
LABEL_191:
                __break(1u);
LABEL_192:
                __break(1u);
LABEL_193:
                __break(1u);
LABEL_194:
                __break(1u);
LABEL_195:
                __break(1u);
LABEL_196:
                __break(1u);
LABEL_197:
                __break(1u);
LABEL_198:
                __break(1u);
                goto LABEL_199;
              }
              if (v91 < 0)
                v91 = *v89 + 14;
              v92 = v91 >> 3;
              v93 = v92 - 1;
              v150 = v92 < 1;
              v94 = v92 + 62;
              if (!v150)
                v94 = v93;
              v95 = v220;
              (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v220, (unint64_t)v90 + (v94 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v35 + 72) * v85 + 64, v8);
              v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
              v96(v95, 0, 1, v8);
LABEL_87:
              if ((v87 & 0x8000000000000000) != 0 || (int64_t)v87 >= v89[1])
                goto LABEL_216;
              if (((*((unsigned __int8 *)v90 + (v87 >> 3)) >> (v87 & 7)) & 1) != 0)
              {
                v97 = *v89 + 7;
                if (__OFADD__(*v89, 7))
                  goto LABEL_181;
                if (v97 < 0)
                  v97 = *v89 + 14;
                v98 = v97 >> 3;
                v99 = v98 - 1;
                v150 = v98 < 1;
                v100 = v98 + 62;
                if (!v150)
                  v100 = v99;
                v101 = (uint64_t)v218;
                (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v218, (unint64_t)v90 + (v100 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v35 + 72) * v87 + 64, v8);
                v102 = 0;
              }
              else
              {
                v102 = 1;
                v101 = (uint64_t)v218;
              }
              v96((char *)v101, v102, 1, v8);
              v103 = v217;
              v104 = v217 + *(int *)(v214 + 48);
              sub_21501EE48((uint64_t)v220, v217);
              sub_21501EE48(v101, v104);
              v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
              v106 = v105(v103, 1, v8);
              v107 = v105(v104, 1, v8);
              v108 = v216;
              if (v106 != 1)
              {
                v110 = v211;
                v109 = v212;
                if (v107 == 1)
                {
                  sub_215066908(v217);
                  sub_215066908((uint64_t)v218);
                  sub_215066908((uint64_t)v220);
                }
                else
                {
                  v111 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 32);
                  v111(v211, v217, v8);
                  v111(v109, v104, v8);
                  sub_21509D744();
                  v112 = (uint64_t)v218;
                  if (v210)
                    v113 = sub_21512F9BC();
                  else
                    v113 = sub_21512F9C8();
                  v114 = v113;
                  v115 = *(void (**)(char *, uint64_t))(v219 + 8);
                  v115(v109, v8);
                  v115(v110, v8);
                  sub_215066908(v112);
                  sub_215066908((uint64_t)v220);
                  if ((v114 & 1) == 0)
                  {
                    v35 = v219;
                    v84 = v215;
                    goto LABEL_74;
                  }
                }
                v84 = v215;
                if (!v215)
                  goto LABEL_211;
                v116 = *(_QWORD *)v83;
                v85 = *((_QWORD *)v83 + 1);
                *(_QWORD *)v83 = v85;
                *((_QWORD *)v83 + 1) = v116;
                v83 -= 8;
                ++v86;
                v35 = v219;
                if (v108 == v86)
                  goto LABEL_74;
                continue;
              }
              break;
            }
            v84 = v215;
            if (v107 != 1)
              sub_215066908(v104);
            sub_215066908((uint64_t)v218);
            sub_215066908((uint64_t)v220);
            v35 = v219;
LABEL_74:
            v39 = v108 + 1;
            v83 = v206 + 8;
            v43 = (int64_t)v207;
            if (v39 != v205)
              continue;
            break;
          }
          v39 = v205;
          v41 = v199;
          v38 = v208;
LABEL_111:
          if (v39 < v43)
            goto LABEL_203;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v41 = sub_21502DABC(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
          v118 = *((_QWORD *)v41 + 2);
          v117 = *((_QWORD *)v41 + 3);
          v119 = v118 + 1;
          if (v118 >= v117 >> 1)
            v41 = sub_21502DABC((char *)(v117 > 1), v118 + 1, 1, v41);
          *((_QWORD *)v41 + 2) = v119;
          v120 = v41 + 32;
          v121 = &v41[16 * v118 + 32];
          *(_QWORD *)v121 = v43;
          *((_QWORD *)v121 + 1) = v39;
          if (v118)
          {
            v35 = v219;
            v216 = v39;
            v207 = v41 + 32;
            v199 = v41;
            while (1)
            {
              v122 = v119 - 1;
              if (v119 >= 4)
              {
                v127 = &v120[16 * v119];
                v128 = *((_QWORD *)v127 - 8);
                v129 = *((_QWORD *)v127 - 7);
                v133 = __OFSUB__(v129, v128);
                v130 = v129 - v128;
                if (v133)
                  goto LABEL_186;
                v132 = *((_QWORD *)v127 - 6);
                v131 = *((_QWORD *)v127 - 5);
                v133 = __OFSUB__(v131, v132);
                v125 = v131 - v132;
                v126 = v133;
                if (v133)
                  goto LABEL_187;
                v134 = v119 - 2;
                v135 = &v120[16 * v119 - 32];
                v137 = *(_QWORD *)v135;
                v136 = *((_QWORD *)v135 + 1);
                v133 = __OFSUB__(v136, v137);
                v138 = v136 - v137;
                if (v133)
                  goto LABEL_188;
                v133 = __OFADD__(v125, v138);
                v139 = v125 + v138;
                if (v133)
                  goto LABEL_190;
                if (v139 >= v130)
                {
                  v157 = &v120[16 * v122];
                  v159 = *(_QWORD *)v157;
                  v158 = *((_QWORD *)v157 + 1);
                  v133 = __OFSUB__(v158, v159);
                  v160 = v158 - v159;
                  if (v133)
                    goto LABEL_198;
                  v150 = v125 < v160;
                  goto LABEL_149;
                }
              }
              else
              {
                if (v119 != 3)
                {
                  v151 = *((_QWORD *)v41 + 4);
                  v152 = *((_QWORD *)v41 + 5);
                  v133 = __OFSUB__(v152, v151);
                  v144 = v152 - v151;
                  v145 = v133;
                  goto LABEL_143;
                }
                v124 = *((_QWORD *)v41 + 4);
                v123 = *((_QWORD *)v41 + 5);
                v133 = __OFSUB__(v123, v124);
                v125 = v123 - v124;
                v126 = v133;
              }
              if ((v126 & 1) != 0)
                goto LABEL_189;
              v134 = v119 - 2;
              v140 = &v120[16 * v119 - 32];
              v142 = *(_QWORD *)v140;
              v141 = *((_QWORD *)v140 + 1);
              v143 = __OFSUB__(v141, v142);
              v144 = v141 - v142;
              v145 = v143;
              if (v143)
                goto LABEL_191;
              v146 = &v120[16 * v122];
              v148 = *(_QWORD *)v146;
              v147 = *((_QWORD *)v146 + 1);
              v133 = __OFSUB__(v147, v148);
              v149 = v147 - v148;
              if (v133)
                goto LABEL_193;
              if (__OFADD__(v144, v149))
                goto LABEL_195;
              if (v144 + v149 >= v125)
              {
                v150 = v125 < v149;
LABEL_149:
                if (v150)
                  v122 = v134;
                goto LABEL_151;
              }
LABEL_143:
              if ((v145 & 1) != 0)
                goto LABEL_192;
              v153 = &v120[16 * v122];
              v155 = *(_QWORD *)v153;
              v154 = *((_QWORD *)v153 + 1);
              v133 = __OFSUB__(v154, v155);
              v156 = v154 - v155;
              if (v133)
                goto LABEL_194;
              if (v156 < v144)
                goto LABEL_160;
LABEL_151:
              v161 = v122 - 1;
              if (v122 - 1 >= v119)
                goto LABEL_182;
              if (!v215)
                goto LABEL_212;
              v162 = v8;
              v163 = &v120[16 * v161];
              v164 = *(_QWORD *)v163;
              v165 = v122;
              v166 = &v120[16 * v122];
              v167 = *((_QWORD *)v166 + 1);
              v168 = (char *)(v215 + 8 * *(_QWORD *)v163);
              v169 = (char *)(v215 + 8 * *(_QWORD *)v166);
              v205 = v215 + 8 * v167;
              v206 = v169;
              v170 = v203;
              swift_bridgeObjectRetain();
              v171 = v208;
              swift_retain();
              v172 = v168;
              v173 = v209;
              sub_2150A49A8(v172, v206, v205, v201, v202, v170, v171, v210, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_21509E96C);
              v209 = v173;
              if (v173)
                goto LABEL_176;
              if (v167 < v164)
                goto LABEL_183;
              v41 = v199;
              if (v165 > *((_QWORD *)v199 + 2))
                goto LABEL_184;
              *(_QWORD *)v163 = v164;
              *(_QWORD *)&v207[16 * v161 + 8] = v167;
              v174 = *((_QWORD *)v41 + 2);
              if (v165 >= v174)
                goto LABEL_185;
              v8 = v162;
              v119 = v174 - 1;
              memmove(v166, v166 + 16, 16 * (v174 - 1 - v165));
              v120 = v207;
              v38 = v208;
              *((_QWORD *)v41 + 2) = v174 - 1;
              v150 = v174 > 2;
              v35 = v219;
              v39 = v216;
              if (!v150)
                goto LABEL_160;
            }
          }
          v119 = 1;
          v35 = v219;
LABEL_160:
          v42 = v197;
          if (v39 >= v197)
            goto LABEL_165;
          goto LABEL_13;
        }
      }
      v43 = (int64_t)v207;
      v38 = v208;
      if ((v206 & 1) == 0)
        goto LABEL_63;
LABEL_55:
      if (v39 >= v43)
      {
        if (v43 < v39)
        {
          v78 = v39 - 1;
          v79 = v43;
          while (1)
          {
            if (v79 != v78)
            {
              v80 = v215;
              if (!v215)
                goto LABEL_214;
              v81 = *(_QWORD *)(v215 + 8 * v79);
              *(_QWORD *)(v215 + 8 * v79) = *(_QWORD *)(v215 + 8 * v78);
              *(_QWORD *)(v80 + 8 * v78) = v81;
            }
            v150 = ++v79 < v78--;
            if (!v150)
              goto LABEL_63;
          }
        }
        goto LABEL_63;
      }
      goto LABEL_209;
    }
    v41 = (char *)MEMORY[0x24BEE4AF8];
    v119 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_165:
    if (v119 >= 2)
    {
      v175 = *v191;
      v219 = *v191;
      while (1)
      {
        v176 = v119 - 2;
        if (v119 < 2)
          break;
        if (!v175)
          goto LABEL_215;
        v177 = (uint64_t)v41;
        v178 = *(_QWORD *)&v41[16 * v176 + 32];
        v179 = *(_QWORD *)&v41[16 * v119 + 24];
        v180 = (char *)(v175 + 8 * v178);
        v220 = (char *)(v175 + 8 * *(_QWORD *)&v41[16 * v119 + 16]);
        v181 = v175 + 8 * v179;
        v182 = v203;
        swift_bridgeObjectRetain();
        v183 = v208;
        swift_retain();
        v184 = v180;
        v185 = v209;
        sub_2150A49A8(v184, v220, v181, v201, v202, v182, v183, v210, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_21509E96C);
        v209 = v185;
        if (v185)
          goto LABEL_176;
        if (v179 < v178)
          goto LABEL_200;
        v41 = (char *)v177;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_21501E510(v177);
        if (v176 >= *((_QWORD *)v41 + 2))
          goto LABEL_201;
        v186 = &v41[16 * v176 + 32];
        *(_QWORD *)v186 = v178;
        *((_QWORD *)v186 + 1) = v179;
        v187 = *((_QWORD *)v41 + 2);
        if (v119 > v187)
          goto LABEL_202;
        memmove(&v41[16 * v119 + 16], &v41[16 * v119 + 32], 16 * (v187 - v119));
        *((_QWORD *)v41 + 2) = v187 - 1;
        v119 = v187 - 1;
        v175 = v219;
        if (v187 <= 2)
          goto LABEL_176;
      }
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
      goto LABEL_205;
    }
LABEL_176:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v193 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_177:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_212:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_215:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_216:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150AE314(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v11 = a5 & 1;
  v12 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_2150A4F1C((uint64_t)v12);
  v13 = *((_QWORD *)v12 + 2);
  v15[0] = v12 + 32;
  v15[1] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  a6(v15, a2, a3, a4, v11);
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = v12;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2150AE408(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v8;
  char *v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  char *v41;
  BOOL v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  BOOL v64;
  char v65;
  BOOL v66;
  uint64_t result;
  _QWORD *v68;
  char *v69;

  v8 = a4;
  v10 = __src;
  v11 = __dst;
  v12 = __src - __dst;
  v13 = __src - __dst + 7;
  if (__src - __dst >= 0)
    v13 = __src - __dst;
  v14 = v13 >> 3;
  v15 = a3 - (_QWORD)__src;
  v16 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v16 = a3 - (_QWORD)__src;
  v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __src || &__src[8 * v17] <= a4)
      memmove(a4, __src, 8 * v17);
    v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8)
      goto LABEL_93;
    v68 = (_QWORD *)(a7 + 16);
    v43 = (char *)(a3 - 8);
    while (1)
    {
      v69 = v43;
      v44 = *((_QWORD *)v18 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_103:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v46 = v10 - 8;
      v45 = *((_QWORD *)v10 - 1);
      swift_beginAccess();
      v47 = (_QWORD *)*v68;
      if (!*v68)
        goto LABEL_102;
      v48 = v47[1];
      if ((uint64_t)v44 >= v48)
        goto LABEL_103;
      v49 = v47 + 8;
      v50 = *((unsigned __int8 *)v47 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v50)
      {
        v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        if (v51 < 0)
          v51 = *v47 + 14;
        v52 = v51 >> 3;
        v53 = v52 - 1;
        v39 = v52 < 1;
        v54 = v52 + 62;
        if (!v39)
          v54 = v53;
        v55 = *(_QWORD *)((char *)&v49[v44 + 8] + (v54 & 0xFFFFFFFFFFFFC0));
        if ((v45 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      else
      {
        v55 = 0;
        if ((v45 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      if ((uint64_t)v45 >= v48)
        goto LABEL_103;
      v56 = *((unsigned __int8 *)v49 + (v45 >> 3)) & (1 << (v45 & 7));
      if (v56)
      {
        v57 = *v47;
        v33 = __OFADD__(v57, 7);
        v58 = v57 + 7;
        if (v33)
          goto LABEL_100;
        v59 = v58 / 8;
        v60 = v59 - 1;
        v39 = v59 < 1;
        v61 = v59 + 62;
        if (!v39)
          v61 = v60;
        v62 = *(_QWORD *)((char *)&v49[v45 + 8] + (v61 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v62 = 0;
      }
      v63 = v69 + 8;
      if (v56)
        v64 = v55 < v62;
      else
        v64 = 1;
      v65 = v64;
      if (v50 && (v65 & 1) != 0)
      {
        if (v63 != v10)
        {
          v10 -= 8;
LABEL_90:
          *(_QWORD *)v69 = *(_QWORD *)v46;
          goto LABEL_91;
        }
        v66 = v69 >= v10;
        v10 -= 8;
        if (v66)
          goto LABEL_90;
      }
      else
      {
        v46 = v18 - 8;
        if (v63 != v18)
        {
          v18 -= 8;
          goto LABEL_90;
        }
        v66 = v69 >= v18;
        v18 -= 8;
        if (v66)
          goto LABEL_90;
      }
LABEL_91:
      if (v10 > v11)
      {
        v43 = v69 - 8;
        if (v18 > v8)
          continue;
      }
      goto LABEL_93;
    }
  }
  if (a4 != __dst || &__dst[8 * v14] <= a4)
    memmove(a4, __dst, 8 * v14);
  v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    v19 = (_QWORD *)(a7 + 16);
    while (1)
    {
      v20 = *(_QWORD *)v10;
      if ((*(_QWORD *)v10 & 0x8000000000000000) != 0)
        goto LABEL_103;
      v21 = *(_QWORD *)v8;
      swift_beginAccess();
      v22 = (_QWORD *)*v19;
      if (!*v19)
        goto LABEL_101;
      v23 = v22[1];
      if ((uint64_t)v20 >= v23)
        goto LABEL_103;
      v24 = v22 + 8;
      v25 = *((unsigned __int8 *)v22 + (v20 >> 3) + 64) & (1 << (v20 & 7));
      if (v25)
      {
        v26 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_98;
        }
        if (v26 < 0)
          v26 = *v22 + 14;
        v27 = v26 >> 3;
        v28 = v27 - 1;
        v39 = v27 < 1;
        v29 = v27 + 62;
        if (!v39)
          v29 = v28;
        v30 = *(_QWORD *)((char *)&v24[v20 + 8] + (v29 & 0xFFFFFFFFFFFFC0));
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      else
      {
        v30 = 0;
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      if ((uint64_t)v21 >= v23)
        goto LABEL_103;
      v31 = *((unsigned __int8 *)v24 + (v21 >> 3)) & (1 << (v21 & 7));
      if (v31)
      {
        v32 = *v22;
        v33 = __OFADD__(v32, 7);
        v34 = v32 + 7;
        if (v33)
          goto LABEL_99;
        v35 = v34 / 8;
        v36 = v35 - 1;
        v39 = v35 < 1;
        v37 = v35 + 62;
        if (!v39)
          v37 = v36;
        v38 = *(_QWORD *)((char *)&v24[v21 + 8] + (v37 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v38 = 0;
      }
      v39 = !v31 || v30 < v38;
      v40 = v39;
      if (!v25 || !v40)
        break;
      v41 = v10;
      v42 = v11 == v10;
      v10 += 8;
      if (!v42)
        goto LABEL_43;
LABEL_44:
      v11 += 8;
      if (v8 >= v18 || (unint64_t)v10 >= a3)
        goto LABEL_46;
    }
    v41 = v8;
    v42 = v11 == v8;
    v8 += 8;
    if (v42)
      goto LABEL_44;
LABEL_43:
    *(_QWORD *)v11 = *(_QWORD *)v41;
    goto LABEL_44;
  }
LABEL_46:
  v10 = v11;
LABEL_93:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  return 1;
}

uint64_t sub_2150AE8B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  unint64_t v34;
  uint64_t v36;

  v36 = result;
  if (a3 != a2)
  {
    v7 = a3;
    v8 = *a4;
    v9 = (_QWORD *)(a7 + 16);
    v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    v11 = *(_QWORD *)(v8 + 8 * v7);
    v12 = v36;
    v13 = (unint64_t *)v10;
    while ((v11 & 0x8000000000000000) == 0)
    {
      v14 = *v13;
      result = swift_beginAccess();
      v15 = (_QWORD *)*v9;
      if (!*v9)
        goto LABEL_38;
      v16 = v15[1];
      if ((uint64_t)v11 >= v16)
        break;
      v17 = v15 + 8;
      v18 = *((unsigned __int8 *)v15 + (v11 >> 3) + 64) & (1 << (v11 & 7));
      if (v18)
      {
        v19 = *v15 + 7;
        if (__OFADD__(*v15, 7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          break;
        }
        if (v19 < 0)
          v19 = *v15 + 14;
        v20 = v19 >> 3;
        v21 = v20 - 1;
        v32 = v20 < 1;
        v22 = v20 + 62;
        if (!v32)
          v22 = v21;
        v23 = *(_QWORD *)((char *)&v17[v11 + 8] + (v22 & 0xFFFFFFFFFFFFC0));
        if ((v14 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v23 = 0;
        if ((v14 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v14 >= v16)
        break;
      v24 = *((unsigned __int8 *)v17 + (v14 >> 3)) & (1 << (v14 & 7));
      if (v24)
      {
        v25 = *v15;
        v26 = __OFADD__(v25, 7);
        v27 = v25 + 7;
        if (v26)
          goto LABEL_37;
        v28 = v27 / 8;
        v29 = v28 - 1;
        v32 = v28 < 1;
        v30 = v28 + 62;
        if (!v32)
          v30 = v29;
        v31 = *(_QWORD *)((char *)&v17[v14 + 8] + (v30 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v31 = 0;
      }
      if (v24)
        v32 = v23 < v31;
      else
        v32 = 1;
      v33 = v32;
      if (v18 && (v33 & 1) != 0)
      {
        if (!v8)
          goto LABEL_39;
        v34 = *v13;
        v11 = v13[1];
        *v13 = v11;
        v13[1] = v34;
        --v13;
        if (v7 != ++v12)
          continue;
      }
      ++v7;
      v10 += 8;
      if (v7 == a2)
        return result;
      goto LABEL_5;
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150AEAC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  unint64_t v136;
  char *v137;
  unint64_t v138;
  uint64_t result;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  _QWORD **v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  int v156[2];
  unint64_t v157;
  int v158[2];
  uint64_t v159;

  v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v9 = sub_215130394();
  if (v9 < v8)
  {
    if (v8 >= 0)
      v10 = v8;
    else
      v10 = v8 + 1;
    if (v8 < -1)
      goto LABEL_208;
    v150 = a3;
    v155 = a4;
    v142 = v9;
    v159 = v4;
    v141 = a1;
    if (v8 <= 1)
    {
      v12 = MEMORY[0x24BEE4AF8];
      v149 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if (v8 != 1)
      {
        v76 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        v15 = (char *)MEMORY[0x24BEE4AF8];
LABEL_169:
        v148 = v12;
        if (v76 < 2)
        {
LABEL_180:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v148 + 16) = 0;
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_182;
        }
        v129 = *v141;
        *(_QWORD *)v158 = *v141;
        while (1)
        {
          v130 = v76 - 2;
          if (v76 < 2)
            goto LABEL_202;
          if (!v129)
            goto LABEL_217;
          v154 = v15;
          v131 = v15 + 32;
          v132 = *(_QWORD *)&v15[16 * v130 + 32];
          v133 = *(_QWORD *)&v131[16 * v76 - 8];
          v134 = (char *)(v129 + 8 * v132);
          v135 = (char *)(v129 + 8 * *(_QWORD *)&v131[16 * v76 - 16]);
          v136 = v129 + 8 * v133;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2150AE408(v134, v135, v136, v149, a2, v150, v155);
          if (v159)
            goto LABEL_181;
          swift_release();
          swift_bridgeObjectRelease();
          if (v133 < v132)
            goto LABEL_203;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v154 = sub_21501E510((uint64_t)v154);
          if (v130 >= *((_QWORD *)v154 + 2))
            goto LABEL_204;
          v137 = &v154[16 * v130 + 32];
          *(_QWORD *)v137 = v132;
          *((_QWORD *)v137 + 1) = v133;
          v138 = *((_QWORD *)v154 + 2);
          if (v76 > v138)
            goto LABEL_205;
          v15 = v154;
          memmove(&v154[16 * v76 + 16], &v154[16 * v76 + 32], 16 * (v138 - v76));
          *((_QWORD *)v154 + 2) = v138 - 1;
          v76 = v138 - 1;
          v129 = *(_QWORD *)v158;
          if (v138 <= 2)
            goto LABEL_180;
        }
      }
    }
    else
    {
      v11 = v10 >> 1;
      v12 = sub_21512FCF8();
      *(_QWORD *)(v12 + 16) = v11;
      v149 = (char *)(v12 + 32);
    }
    v13 = 0;
    v14 = *a1;
    v143 = (_QWORD **)(a4 + 16);
    v140 = v14 - 8;
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v147 = v8;
    v148 = v12;
    v145 = v14;
    while (1)
    {
      v16 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_71;
      v17 = *(_QWORD *)(v14 + 8 * v16);
      if (v17 < 0)
        goto LABEL_219;
      v18 = *(_QWORD *)(v14 + 8 * v13);
      swift_beginAccess();
      v19 = *v143;
      if (!*v143)
        goto LABEL_218;
      if (v17 >= v19[1] || (v20 = sub_215099328(v17, *v143, v155), v18 < 0) || (v23 = v19[1], v18 >= v23))
      {
LABEL_219:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v24 = v20;
      v25 = v21;
      v26 = sub_215099328(v18, v19, v22);
      if ((v25 & 1) != 0)
        break;
      v28 = v24;
      v8 = v147;
      v12 = v148;
      if ((v27 & 1) == 0)
      {
        v29 = v28 < v26;
        goto LABEL_24;
      }
      v30 = v13 + 2;
      if (v13 + 2 >= v147)
      {
        if (v13 < v30)
          goto LABEL_62;
        goto LABEL_70;
      }
      v29 = 1;
LABEL_28:
      v31 = v19 + 8;
      if (v8 <= v30 + 1)
        v32 = v30 + 1;
      else
        v32 = v8;
      v33 = *(_QWORD *)(v14 + 8 * (v13 + 1));
      while (1)
      {
        v34 = v33;
        v33 = *(_QWORD *)(v14 + 8 * v30);
        if (v33 < 0 || v33 >= v23)
          goto LABEL_219;
        v35 = *((unsigned __int8 *)v31 + ((unint64_t)v33 >> 3)) & (1 << (v33 & 7));
        if (v35)
        {
          v36 = *v19 + 7;
          if (__OFADD__(*v19, 7))
            goto LABEL_199;
          if (v36 < 0)
            v36 = *v19 + 14;
          v37 = v36 >> 3;
          v38 = v37 - 1;
          v71 = v37 < 1;
          v39 = v37 + 62;
          if (!v71)
            v39 = v38;
          v40 = *(_QWORD *)((char *)&v31[v33 + 8] + (v39 & 0xFFFFFFFFFFFFC0));
          if (v34 < 0)
            goto LABEL_219;
        }
        else
        {
          v40 = 0;
          if (v34 < 0)
            goto LABEL_219;
        }
        if (v34 >= v23)
          goto LABEL_219;
        if (((*((unsigned __int8 *)v31 + ((unint64_t)v34 >> 3)) >> (v34 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v19, 7))
            goto LABEL_200;
          if (v35)
          {
            v41 = *v19 + 14;
            if (*v19 + 7 >= 0)
              v41 = *v19 + 7;
            v42 = v41 >> 3;
            v43 = v42 - 1;
            v71 = v42 < 1;
            v44 = v42 + 62;
            if (!v71)
              v44 = v43;
            if (((v29 ^ (v40 < *(_QWORD *)((char *)&v31[v34 + 8] + (v44 & 0xFFFFFFFFFFFFC0)))) & 1) != 0)
              goto LABEL_59;
            goto LABEL_33;
          }
        }
        else if (v35)
        {
          if (!v29)
            goto LABEL_70;
          goto LABEL_33;
        }
        if (v29)
          break;
LABEL_33:
        if (++v30 >= v8)
        {
          v30 = v32;
          goto LABEL_59;
        }
      }
      if (v30 < v13)
        goto LABEL_210;
LABEL_61:
      if (v13 < v30)
      {
LABEL_62:
        v45 = v30 - 1;
        v46 = v13;
        do
        {
          if (v46 != v45)
          {
            if (!v14)
              goto LABEL_216;
            v47 = *(_QWORD *)(v14 + 8 * v46);
            *(_QWORD *)(v14 + 8 * v46) = *(_QWORD *)(v14 + 8 * v45);
            *(_QWORD *)(v14 + 8 * v45) = v47;
          }
          v71 = ++v46 < v45--;
        }
        while (v71);
      }
LABEL_70:
      v16 = v30;
LABEL_71:
      if (v16 < v8)
      {
        if (__OFSUB__(v16, v13))
          goto LABEL_207;
        if (v16 - v13 < v142)
        {
          if (__OFADD__(v13, v142))
            goto LABEL_211;
          if (v13 + v142 >= v8)
            v48 = v8;
          else
            v48 = v13 + v142;
          if (v48 >= v13)
          {
            if (v16 != v48)
            {
              *(_QWORD *)v156 = v13;
              v49 = (unint64_t *)(v140 + 8 * v16);
              v152 = v48;
              do
              {
                v50 = v16;
                v51 = *(_QWORD *)(v14 + 8 * v16);
                v52 = *(_QWORD *)v156;
                v53 = v49;
                do
                {
                  if ((v51 & 0x8000000000000000) != 0)
                    goto LABEL_219;
                  v54 = *v53;
                  swift_beginAccess();
                  v55 = *v143;
                  if (!*v143)
                    goto LABEL_213;
                  v56 = v55[1];
                  if ((uint64_t)v51 >= v56)
                    goto LABEL_219;
                  v57 = v55 + 8;
                  v58 = *((unsigned __int8 *)v55 + (v51 >> 3) + 64) & (1 << (v51 & 7));
                  if (v58)
                  {
                    v59 = *v55 + 7;
                    if (__OFADD__(*v55, 7))
                    {
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
LABEL_189:
                      __break(1u);
LABEL_190:
                      __break(1u);
LABEL_191:
                      __break(1u);
LABEL_192:
                      __break(1u);
LABEL_193:
                      __break(1u);
LABEL_194:
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
LABEL_208:
                      __break(1u);
LABEL_209:
                      __break(1u);
LABEL_210:
                      __break(1u);
LABEL_211:
                      __break(1u);
                      goto LABEL_212;
                    }
                    if (v59 < 0)
                      v59 = *v55 + 14;
                    v60 = v59 >> 3;
                    v61 = v60 - 1;
                    v71 = v60 < 1;
                    v62 = v60 + 62;
                    if (!v71)
                      v62 = v61;
                    v63 = *(_QWORD *)((char *)&v57[v51 + 8] + (v62 & 0xFFFFFFFFFFFFC0));
                    if ((v54 & 0x8000000000000000) != 0)
                      goto LABEL_219;
                  }
                  else
                  {
                    v63 = 0;
                    if ((v54 & 0x8000000000000000) != 0)
                      goto LABEL_219;
                  }
                  if ((uint64_t)v54 >= v56)
                    goto LABEL_219;
                  v64 = *((unsigned __int8 *)v57 + (v54 >> 3)) & (1 << (v54 & 7));
                  if (v64)
                  {
                    v65 = *v55;
                    v90 = __OFADD__(v65, 7);
                    v66 = v65 + 7;
                    if (v90)
                      goto LABEL_184;
                    v67 = v66 / 8;
                    v68 = v67 - 1;
                    v71 = v67 < 1;
                    v69 = v67 + 62;
                    if (!v71)
                      v69 = v68;
                    v70 = *(_QWORD *)((char *)&v57[v54 + 8] + (v69 & 0xFFFFFFFFFFFFC0));
                  }
                  else
                  {
                    v70 = 0;
                  }
                  if (v64)
                    v71 = v63 < v70;
                  else
                    v71 = 1;
                  v72 = v71;
                  if (!v58 || (v72 & 1) == 0)
                    break;
                  if (!v14)
                    goto LABEL_214;
                  v73 = *v53;
                  v51 = v53[1];
                  *v53 = v51;
                  v53[1] = v73;
                  --v53;
                  ++v52;
                }
                while (v50 != v52);
                v16 = v50 + 1;
                ++v49;
              }
              while (v50 + 1 != v152);
              v16 = v152;
              v8 = v147;
              v12 = v148;
              v13 = *(_QWORD *)v156;
            }
            goto LABEL_114;
          }
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_215:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_216:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
      }
LABEL_114:
      if (v16 < v13)
        goto LABEL_206;
      v144 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
      v75 = *((_QWORD *)v15 + 2);
      v74 = *((_QWORD *)v15 + 3);
      v76 = v75 + 1;
      if (v75 >= v74 >> 1)
        v15 = sub_21502DABC((char *)(v74 > 1), v75 + 1, 1, v15);
      *((_QWORD *)v15 + 2) = v76;
      v77 = v15 + 32;
      v78 = &v15[16 * v75 + 32];
      *(_QWORD *)v78 = v13;
      *((_QWORD *)v78 + 1) = v144;
      if (v75)
      {
        v153 = v15;
        v146 = v15 + 32;
        while (1)
        {
          v79 = v76 - 1;
          if (v76 >= 4)
          {
            v84 = &v77[16 * v76];
            v85 = *((_QWORD *)v84 - 8);
            v86 = *((_QWORD *)v84 - 7);
            v90 = __OFSUB__(v86, v85);
            v87 = v86 - v85;
            if (v90)
              goto LABEL_189;
            v89 = *((_QWORD *)v84 - 6);
            v88 = *((_QWORD *)v84 - 5);
            v90 = __OFSUB__(v88, v89);
            v82 = v88 - v89;
            v83 = v90;
            if (v90)
              goto LABEL_190;
            v91 = v76 - 2;
            v92 = &v77[16 * v76 - 32];
            v94 = *(_QWORD *)v92;
            v93 = *((_QWORD *)v92 + 1);
            v90 = __OFSUB__(v93, v94);
            v95 = v93 - v94;
            if (v90)
              goto LABEL_191;
            v90 = __OFADD__(v82, v95);
            v96 = v82 + v95;
            if (v90)
              goto LABEL_194;
            if (v96 >= v87)
            {
              v114 = &v77[16 * v79];
              v116 = *(_QWORD *)v114;
              v115 = *((_QWORD *)v114 + 1);
              v90 = __OFSUB__(v115, v116);
              v117 = v115 - v116;
              if (v90)
                goto LABEL_201;
              v107 = v82 < v117;
              goto LABEL_152;
            }
          }
          else
          {
            if (v76 != 3)
            {
              v108 = *((_QWORD *)v15 + 4);
              v109 = *((_QWORD *)v15 + 5);
              v90 = __OFSUB__(v109, v108);
              v101 = v109 - v108;
              v102 = v90;
              goto LABEL_146;
            }
            v81 = *((_QWORD *)v15 + 4);
            v80 = *((_QWORD *)v15 + 5);
            v90 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            v83 = v90;
          }
          if ((v83 & 1) != 0)
            goto LABEL_192;
          v91 = v76 - 2;
          v97 = &v77[16 * v76 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v100 = __OFSUB__(v98, v99);
          v101 = v98 - v99;
          v102 = v100;
          if (v100)
            goto LABEL_195;
          v103 = &v77[16 * v79];
          v105 = *(_QWORD *)v103;
          v104 = *((_QWORD *)v103 + 1);
          v90 = __OFSUB__(v104, v105);
          v106 = v104 - v105;
          if (v90)
            goto LABEL_196;
          if (__OFADD__(v101, v106))
            goto LABEL_198;
          if (v101 + v106 >= v82)
          {
            v107 = v82 < v106;
LABEL_152:
            if (v107)
              v79 = v91;
            goto LABEL_154;
          }
LABEL_146:
          if ((v102 & 1) != 0)
            goto LABEL_193;
          v110 = &v77[16 * v79];
          v112 = *(_QWORD *)v110;
          v111 = *((_QWORD *)v110 + 1);
          v90 = __OFSUB__(v111, v112);
          v113 = v111 - v112;
          if (v90)
            goto LABEL_197;
          if (v113 < v101)
            goto LABEL_163;
LABEL_154:
          v118 = v79 - 1;
          if (v79 - 1 >= v76)
            goto LABEL_185;
          if (!v14)
            goto LABEL_215;
          v119 = v14;
          v120 = &v77[16 * v118];
          v121 = *(_QWORD *)v120;
          v122 = v79;
          v123 = &v77[16 * v79];
          v124 = *((_QWORD *)v123 + 1);
          v125 = (char *)(v119 + 8 * *(_QWORD *)v120);
          v126 = (char *)(v119 + 8 * *(_QWORD *)v123);
          v157 = v119 + 8 * v124;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2150AE408(v125, v126, v157, v149, a2, v150, v155);
          if (v159)
          {
LABEL_181:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v148 + 16) = 0;
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_182;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v124 < v121)
            goto LABEL_186;
          if (v122 > *((_QWORD *)v153 + 2))
            goto LABEL_187;
          v127 = v122;
          *(_QWORD *)v120 = v121;
          v77 = v146;
          *(_QWORD *)&v146[16 * v118 + 8] = v124;
          v128 = *((_QWORD *)v153 + 2);
          if (v122 >= v128)
            goto LABEL_188;
          v15 = v153;
          v159 = 0;
          v76 = v128 - 1;
          memmove(v123, v123 + 16, 16 * (v128 - 1 - v127));
          *((_QWORD *)v153 + 2) = v128 - 1;
          v8 = v147;
          v12 = v148;
          v14 = v145;
          if (v128 <= 2)
            goto LABEL_163;
        }
      }
      v76 = 1;
LABEL_163:
      v13 = v144;
      if (v144 >= v8)
        goto LABEL_169;
    }
    v29 = 0;
    v8 = v147;
    v12 = v148;
LABEL_24:
    v30 = v13 + 2;
    if (v13 + 2 >= v8)
    {
LABEL_59:
      v16 = v30;
      if (v29)
      {
        if (v30 < v13)
          goto LABEL_210;
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    goto LABEL_28;
  }
  if (v8 < 0)
    goto LABEL_209;
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150AE8B8(0, v8, 1, a1, a2, a3, a4);
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_182:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150AF610(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v8;
  char *v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  char *v41;
  BOOL v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  BOOL v64;
  char v65;
  BOOL v66;
  uint64_t result;
  _QWORD *v68;
  char *v69;

  v8 = a4;
  v10 = __src;
  v11 = __dst;
  v12 = __src - __dst;
  v13 = __src - __dst + 7;
  if (__src - __dst >= 0)
    v13 = __src - __dst;
  v14 = v13 >> 3;
  v15 = a3 - (_QWORD)__src;
  v16 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v16 = a3 - (_QWORD)__src;
  v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __src || &__src[8 * v17] <= a4)
      memmove(a4, __src, 8 * v17);
    v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8)
      goto LABEL_93;
    v68 = (_QWORD *)(a7 + 16);
    v43 = (char *)(a3 - 8);
    while (1)
    {
      v69 = v43;
      v44 = *((_QWORD *)v18 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_103:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v46 = v10 - 8;
      v45 = *((_QWORD *)v10 - 1);
      swift_beginAccess();
      v47 = (_QWORD *)*v68;
      if (!*v68)
        goto LABEL_102;
      v48 = v47[1];
      if ((uint64_t)v44 >= v48)
        goto LABEL_103;
      v49 = v47 + 8;
      v50 = *((unsigned __int8 *)v47 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v50)
      {
        v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        if (v51 < 0)
          v51 = *v47 + 14;
        v52 = v51 >> 3;
        v53 = v52 - 1;
        v39 = v52 < 1;
        v54 = v52 + 62;
        if (!v39)
          v54 = v53;
        v55 = *(_QWORD *)((char *)&v49[v44 + 8] + (v54 & 0xFFFFFFFFFFFFC0));
        if ((v45 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      else
      {
        v55 = 0;
        if ((v45 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      if ((uint64_t)v45 >= v48)
        goto LABEL_103;
      v56 = *((unsigned __int8 *)v49 + (v45 >> 3)) & (1 << (v45 & 7));
      if (v56)
      {
        v57 = *v47;
        v33 = __OFADD__(v57, 7);
        v58 = v57 + 7;
        if (v33)
          goto LABEL_100;
        v59 = v58 / 8;
        v60 = v59 - 1;
        v39 = v59 < 1;
        v61 = v59 + 62;
        if (!v39)
          v61 = v60;
        v62 = *(_QWORD *)((char *)&v49[v45 + 8] + (v61 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v62 = 0;
      }
      v63 = v69 + 8;
      if (v56)
        v64 = v62 < v55;
      else
        v64 = 1;
      v65 = v64;
      if (v50 && (v65 & 1) != 0)
      {
        if (v63 != v10)
        {
          v10 -= 8;
LABEL_90:
          *(_QWORD *)v69 = *(_QWORD *)v46;
          goto LABEL_91;
        }
        v66 = v69 >= v10;
        v10 -= 8;
        if (v66)
          goto LABEL_90;
      }
      else
      {
        v46 = v18 - 8;
        if (v63 != v18)
        {
          v18 -= 8;
          goto LABEL_90;
        }
        v66 = v69 >= v18;
        v18 -= 8;
        if (v66)
          goto LABEL_90;
      }
LABEL_91:
      if (v10 > v11)
      {
        v43 = v69 - 8;
        if (v18 > v8)
          continue;
      }
      goto LABEL_93;
    }
  }
  if (a4 != __dst || &__dst[8 * v14] <= a4)
    memmove(a4, __dst, 8 * v14);
  v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    v19 = (_QWORD *)(a7 + 16);
    while (1)
    {
      v20 = *(_QWORD *)v10;
      if ((*(_QWORD *)v10 & 0x8000000000000000) != 0)
        goto LABEL_103;
      v21 = *(_QWORD *)v8;
      swift_beginAccess();
      v22 = (_QWORD *)*v19;
      if (!*v19)
        goto LABEL_101;
      v23 = v22[1];
      if ((uint64_t)v20 >= v23)
        goto LABEL_103;
      v24 = v22 + 8;
      v25 = *((unsigned __int8 *)v22 + (v20 >> 3) + 64) & (1 << (v20 & 7));
      if (v25)
      {
        v26 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_98;
        }
        if (v26 < 0)
          v26 = *v22 + 14;
        v27 = v26 >> 3;
        v28 = v27 - 1;
        v39 = v27 < 1;
        v29 = v27 + 62;
        if (!v39)
          v29 = v28;
        v30 = *(_QWORD *)((char *)&v24[v20 + 8] + (v29 & 0xFFFFFFFFFFFFC0));
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      else
      {
        v30 = 0;
        if ((v21 & 0x8000000000000000) != 0)
          goto LABEL_103;
      }
      if ((uint64_t)v21 >= v23)
        goto LABEL_103;
      v31 = *((unsigned __int8 *)v24 + (v21 >> 3)) & (1 << (v21 & 7));
      if (v31)
      {
        v32 = *v22;
        v33 = __OFADD__(v32, 7);
        v34 = v32 + 7;
        if (v33)
          goto LABEL_99;
        v35 = v34 / 8;
        v36 = v35 - 1;
        v39 = v35 < 1;
        v37 = v35 + 62;
        if (!v39)
          v37 = v36;
        v38 = *(_QWORD *)((char *)&v24[v21 + 8] + (v37 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v38 = 0;
      }
      v39 = !v31 || v38 < v30;
      v40 = v39;
      if (!v25 || !v40)
        break;
      v41 = v10;
      v42 = v11 == v10;
      v10 += 8;
      if (!v42)
        goto LABEL_43;
LABEL_44:
      v11 += 8;
      if (v8 >= v18 || (unint64_t)v10 >= a3)
        goto LABEL_46;
    }
    v41 = v8;
    v42 = v11 == v8;
    v8 += 8;
    if (v42)
      goto LABEL_44;
LABEL_43:
    *(_QWORD *)v11 = *(_QWORD *)v41;
    goto LABEL_44;
  }
LABEL_46:
  v10 = v11;
LABEL_93:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8])
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  return 1;
}

uint64_t sub_2150AFAC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  unint64_t v34;
  uint64_t v36;

  v36 = result;
  if (a3 != a2)
  {
    v7 = a3;
    v8 = *a4;
    v9 = (_QWORD *)(a7 + 16);
    v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    v11 = *(_QWORD *)(v8 + 8 * v7);
    v12 = v36;
    v13 = (unint64_t *)v10;
    while ((v11 & 0x8000000000000000) == 0)
    {
      v14 = *v13;
      result = swift_beginAccess();
      v15 = (_QWORD *)*v9;
      if (!*v9)
        goto LABEL_38;
      v16 = v15[1];
      if ((uint64_t)v11 >= v16)
        break;
      v17 = v15 + 8;
      v18 = *((unsigned __int8 *)v15 + (v11 >> 3) + 64) & (1 << (v11 & 7));
      if (v18)
      {
        v19 = *v15 + 7;
        if (__OFADD__(*v15, 7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          break;
        }
        if (v19 < 0)
          v19 = *v15 + 14;
        v20 = v19 >> 3;
        v21 = v20 - 1;
        v32 = v20 < 1;
        v22 = v20 + 62;
        if (!v32)
          v22 = v21;
        v23 = *(_QWORD *)((char *)&v17[v11 + 8] + (v22 & 0xFFFFFFFFFFFFC0));
        if ((v14 & 0x8000000000000000) != 0)
          break;
      }
      else
      {
        v23 = 0;
        if ((v14 & 0x8000000000000000) != 0)
          break;
      }
      if ((uint64_t)v14 >= v16)
        break;
      v24 = *((unsigned __int8 *)v17 + (v14 >> 3)) & (1 << (v14 & 7));
      if (v24)
      {
        v25 = *v15;
        v26 = __OFADD__(v25, 7);
        v27 = v25 + 7;
        if (v26)
          goto LABEL_37;
        v28 = v27 / 8;
        v29 = v28 - 1;
        v32 = v28 < 1;
        v30 = v28 + 62;
        if (!v32)
          v30 = v29;
        v31 = *(_QWORD *)((char *)&v17[v14 + 8] + (v30 & 0xFFFFFFFFFFFFC0));
      }
      else
      {
        v31 = 0;
      }
      if (v24)
        v32 = v31 < v23;
      else
        v32 = 1;
      v33 = v32;
      if (v18 && (v33 & 1) != 0)
      {
        if (!v8)
          goto LABEL_39;
        v34 = *v13;
        v11 = v13[1];
        *v13 = v11;
        v13[1] = v34;
        --v13;
        if (v7 != ++v12)
          continue;
      }
      ++v7;
      v10 += 8;
      if (v7 == a2)
        return result;
      goto LABEL_5;
    }
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150AFCCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  unint64_t v136;
  char *v137;
  unint64_t v138;
  uint64_t result;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  _QWORD **v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  int v156[2];
  unint64_t v157;
  int v158[2];
  uint64_t v159;

  v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v9 = sub_215130394();
  if (v9 < v8)
  {
    if (v8 >= 0)
      v10 = v8;
    else
      v10 = v8 + 1;
    if (v8 < -1)
      goto LABEL_208;
    v150 = a3;
    v155 = a4;
    v142 = v9;
    v159 = v4;
    v141 = a1;
    if (v8 <= 1)
    {
      v12 = MEMORY[0x24BEE4AF8];
      v149 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if (v8 != 1)
      {
        v76 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        v15 = (char *)MEMORY[0x24BEE4AF8];
LABEL_169:
        v148 = v12;
        if (v76 < 2)
        {
LABEL_180:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v148 + 16) = 0;
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_182;
        }
        v129 = *v141;
        *(_QWORD *)v158 = *v141;
        while (1)
        {
          v130 = v76 - 2;
          if (v76 < 2)
            goto LABEL_202;
          if (!v129)
            goto LABEL_217;
          v154 = v15;
          v131 = v15 + 32;
          v132 = *(_QWORD *)&v15[16 * v130 + 32];
          v133 = *(_QWORD *)&v131[16 * v76 - 8];
          v134 = (char *)(v129 + 8 * v132);
          v135 = (char *)(v129 + 8 * *(_QWORD *)&v131[16 * v76 - 16]);
          v136 = v129 + 8 * v133;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2150AF610(v134, v135, v136, v149, a2, v150, v155);
          if (v159)
            goto LABEL_181;
          swift_release();
          swift_bridgeObjectRelease();
          if (v133 < v132)
            goto LABEL_203;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v154 = sub_21501E510((uint64_t)v154);
          if (v130 >= *((_QWORD *)v154 + 2))
            goto LABEL_204;
          v137 = &v154[16 * v130 + 32];
          *(_QWORD *)v137 = v132;
          *((_QWORD *)v137 + 1) = v133;
          v138 = *((_QWORD *)v154 + 2);
          if (v76 > v138)
            goto LABEL_205;
          v15 = v154;
          memmove(&v154[16 * v76 + 16], &v154[16 * v76 + 32], 16 * (v138 - v76));
          *((_QWORD *)v154 + 2) = v138 - 1;
          v76 = v138 - 1;
          v129 = *(_QWORD *)v158;
          if (v138 <= 2)
            goto LABEL_180;
        }
      }
    }
    else
    {
      v11 = v10 >> 1;
      v12 = sub_21512FCF8();
      *(_QWORD *)(v12 + 16) = v11;
      v149 = (char *)(v12 + 32);
    }
    v13 = 0;
    v14 = *a1;
    v143 = (_QWORD **)(a4 + 16);
    v140 = v14 - 8;
    v15 = (char *)MEMORY[0x24BEE4AF8];
    v147 = v8;
    v148 = v12;
    v145 = v14;
    while (1)
    {
      v16 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_71;
      v17 = *(_QWORD *)(v14 + 8 * v16);
      if (v17 < 0)
        goto LABEL_219;
      v18 = *(_QWORD *)(v14 + 8 * v13);
      swift_beginAccess();
      v19 = *v143;
      if (!*v143)
        goto LABEL_218;
      if (v17 >= v19[1] || (v20 = sub_215099328(v17, *v143, v155), v18 < 0) || (v23 = v19[1], v18 >= v23))
      {
LABEL_219:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v24 = v20;
      v25 = v21;
      v26 = sub_215099328(v18, v19, v22);
      if ((v25 & 1) != 0)
        break;
      v28 = v24;
      v8 = v147;
      v12 = v148;
      if ((v27 & 1) == 0)
      {
        v29 = v26 < v28;
        goto LABEL_24;
      }
      v30 = v13 + 2;
      if (v13 + 2 >= v147)
      {
        if (v13 < v30)
          goto LABEL_62;
        goto LABEL_70;
      }
      v29 = 1;
LABEL_28:
      v31 = v19 + 8;
      if (v8 <= v30 + 1)
        v32 = v30 + 1;
      else
        v32 = v8;
      v33 = *(_QWORD *)(v14 + 8 * (v13 + 1));
      while (1)
      {
        v34 = v33;
        v33 = *(_QWORD *)(v14 + 8 * v30);
        if (v33 < 0 || v33 >= v23)
          goto LABEL_219;
        v35 = *((unsigned __int8 *)v31 + ((unint64_t)v33 >> 3)) & (1 << (v33 & 7));
        if (v35)
        {
          v36 = *v19 + 7;
          if (__OFADD__(*v19, 7))
            goto LABEL_199;
          if (v36 < 0)
            v36 = *v19 + 14;
          v37 = v36 >> 3;
          v38 = v37 - 1;
          v71 = v37 < 1;
          v39 = v37 + 62;
          if (!v71)
            v39 = v38;
          v40 = *(_QWORD *)((char *)&v31[v33 + 8] + (v39 & 0xFFFFFFFFFFFFC0));
          if (v34 < 0)
            goto LABEL_219;
        }
        else
        {
          v40 = 0;
          if (v34 < 0)
            goto LABEL_219;
        }
        if (v34 >= v23)
          goto LABEL_219;
        if (((*((unsigned __int8 *)v31 + ((unint64_t)v34 >> 3)) >> (v34 & 7)) & 1) != 0)
        {
          if (__OFADD__(*v19, 7))
            goto LABEL_200;
          if (v35)
          {
            v41 = *v19 + 14;
            if (*v19 + 7 >= 0)
              v41 = *v19 + 7;
            v42 = v41 >> 3;
            v43 = v42 - 1;
            v71 = v42 < 1;
            v44 = v42 + 62;
            if (!v71)
              v44 = v43;
            if (((v29 ^ (*(_QWORD *)((char *)&v31[v34 + 8] + (v44 & 0xFFFFFFFFFFFFC0)) < v40)) & 1) != 0)
              goto LABEL_59;
            goto LABEL_33;
          }
        }
        else if (v35)
        {
          if (!v29)
            goto LABEL_70;
          goto LABEL_33;
        }
        if (v29)
          break;
LABEL_33:
        if (++v30 >= v8)
        {
          v30 = v32;
          goto LABEL_59;
        }
      }
      if (v30 < v13)
        goto LABEL_210;
LABEL_61:
      if (v13 < v30)
      {
LABEL_62:
        v45 = v30 - 1;
        v46 = v13;
        do
        {
          if (v46 != v45)
          {
            if (!v14)
              goto LABEL_216;
            v47 = *(_QWORD *)(v14 + 8 * v46);
            *(_QWORD *)(v14 + 8 * v46) = *(_QWORD *)(v14 + 8 * v45);
            *(_QWORD *)(v14 + 8 * v45) = v47;
          }
          v71 = ++v46 < v45--;
        }
        while (v71);
      }
LABEL_70:
      v16 = v30;
LABEL_71:
      if (v16 < v8)
      {
        if (__OFSUB__(v16, v13))
          goto LABEL_207;
        if (v16 - v13 < v142)
        {
          if (__OFADD__(v13, v142))
            goto LABEL_211;
          if (v13 + v142 >= v8)
            v48 = v8;
          else
            v48 = v13 + v142;
          if (v48 >= v13)
          {
            if (v16 != v48)
            {
              *(_QWORD *)v156 = v13;
              v49 = (unint64_t *)(v140 + 8 * v16);
              v152 = v48;
              do
              {
                v50 = v16;
                v51 = *(_QWORD *)(v14 + 8 * v16);
                v52 = *(_QWORD *)v156;
                v53 = v49;
                do
                {
                  if ((v51 & 0x8000000000000000) != 0)
                    goto LABEL_219;
                  v54 = *v53;
                  swift_beginAccess();
                  v55 = *v143;
                  if (!*v143)
                    goto LABEL_213;
                  v56 = v55[1];
                  if ((uint64_t)v51 >= v56)
                    goto LABEL_219;
                  v57 = v55 + 8;
                  v58 = *((unsigned __int8 *)v55 + (v51 >> 3) + 64) & (1 << (v51 & 7));
                  if (v58)
                  {
                    v59 = *v55 + 7;
                    if (__OFADD__(*v55, 7))
                    {
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
LABEL_189:
                      __break(1u);
LABEL_190:
                      __break(1u);
LABEL_191:
                      __break(1u);
LABEL_192:
                      __break(1u);
LABEL_193:
                      __break(1u);
LABEL_194:
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
LABEL_208:
                      __break(1u);
LABEL_209:
                      __break(1u);
LABEL_210:
                      __break(1u);
LABEL_211:
                      __break(1u);
                      goto LABEL_212;
                    }
                    if (v59 < 0)
                      v59 = *v55 + 14;
                    v60 = v59 >> 3;
                    v61 = v60 - 1;
                    v71 = v60 < 1;
                    v62 = v60 + 62;
                    if (!v71)
                      v62 = v61;
                    v63 = *(_QWORD *)((char *)&v57[v51 + 8] + (v62 & 0xFFFFFFFFFFFFC0));
                    if ((v54 & 0x8000000000000000) != 0)
                      goto LABEL_219;
                  }
                  else
                  {
                    v63 = 0;
                    if ((v54 & 0x8000000000000000) != 0)
                      goto LABEL_219;
                  }
                  if ((uint64_t)v54 >= v56)
                    goto LABEL_219;
                  v64 = *((unsigned __int8 *)v57 + (v54 >> 3)) & (1 << (v54 & 7));
                  if (v64)
                  {
                    v65 = *v55;
                    v90 = __OFADD__(v65, 7);
                    v66 = v65 + 7;
                    if (v90)
                      goto LABEL_184;
                    v67 = v66 / 8;
                    v68 = v67 - 1;
                    v71 = v67 < 1;
                    v69 = v67 + 62;
                    if (!v71)
                      v69 = v68;
                    v70 = *(_QWORD *)((char *)&v57[v54 + 8] + (v69 & 0xFFFFFFFFFFFFC0));
                  }
                  else
                  {
                    v70 = 0;
                  }
                  if (v64)
                    v71 = v70 < v63;
                  else
                    v71 = 1;
                  v72 = v71;
                  if (!v58 || (v72 & 1) == 0)
                    break;
                  if (!v14)
                    goto LABEL_214;
                  v73 = *v53;
                  v51 = v53[1];
                  *v53 = v51;
                  v53[1] = v73;
                  --v53;
                  ++v52;
                }
                while (v50 != v52);
                v16 = v50 + 1;
                ++v49;
              }
              while (v50 + 1 != v152);
              v16 = v152;
              v8 = v147;
              v12 = v148;
              v13 = *(_QWORD *)v156;
            }
            goto LABEL_114;
          }
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_215:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_216:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
      }
LABEL_114:
      if (v16 < v13)
        goto LABEL_206;
      v144 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_21502DABC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
      v75 = *((_QWORD *)v15 + 2);
      v74 = *((_QWORD *)v15 + 3);
      v76 = v75 + 1;
      if (v75 >= v74 >> 1)
        v15 = sub_21502DABC((char *)(v74 > 1), v75 + 1, 1, v15);
      *((_QWORD *)v15 + 2) = v76;
      v77 = v15 + 32;
      v78 = &v15[16 * v75 + 32];
      *(_QWORD *)v78 = v13;
      *((_QWORD *)v78 + 1) = v144;
      if (v75)
      {
        v153 = v15;
        v146 = v15 + 32;
        while (1)
        {
          v79 = v76 - 1;
          if (v76 >= 4)
          {
            v84 = &v77[16 * v76];
            v85 = *((_QWORD *)v84 - 8);
            v86 = *((_QWORD *)v84 - 7);
            v90 = __OFSUB__(v86, v85);
            v87 = v86 - v85;
            if (v90)
              goto LABEL_189;
            v89 = *((_QWORD *)v84 - 6);
            v88 = *((_QWORD *)v84 - 5);
            v90 = __OFSUB__(v88, v89);
            v82 = v88 - v89;
            v83 = v90;
            if (v90)
              goto LABEL_190;
            v91 = v76 - 2;
            v92 = &v77[16 * v76 - 32];
            v94 = *(_QWORD *)v92;
            v93 = *((_QWORD *)v92 + 1);
            v90 = __OFSUB__(v93, v94);
            v95 = v93 - v94;
            if (v90)
              goto LABEL_191;
            v90 = __OFADD__(v82, v95);
            v96 = v82 + v95;
            if (v90)
              goto LABEL_194;
            if (v96 >= v87)
            {
              v114 = &v77[16 * v79];
              v116 = *(_QWORD *)v114;
              v115 = *((_QWORD *)v114 + 1);
              v90 = __OFSUB__(v115, v116);
              v117 = v115 - v116;
              if (v90)
                goto LABEL_201;
              v107 = v82 < v117;
              goto LABEL_152;
            }
          }
          else
          {
            if (v76 != 3)
            {
              v108 = *((_QWORD *)v15 + 4);
              v109 = *((_QWORD *)v15 + 5);
              v90 = __OFSUB__(v109, v108);
              v101 = v109 - v108;
              v102 = v90;
              goto LABEL_146;
            }
            v81 = *((_QWORD *)v15 + 4);
            v80 = *((_QWORD *)v15 + 5);
            v90 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            v83 = v90;
          }
          if ((v83 & 1) != 0)
            goto LABEL_192;
          v91 = v76 - 2;
          v97 = &v77[16 * v76 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v100 = __OFSUB__(v98, v99);
          v101 = v98 - v99;
          v102 = v100;
          if (v100)
            goto LABEL_195;
          v103 = &v77[16 * v79];
          v105 = *(_QWORD *)v103;
          v104 = *((_QWORD *)v103 + 1);
          v90 = __OFSUB__(v104, v105);
          v106 = v104 - v105;
          if (v90)
            goto LABEL_196;
          if (__OFADD__(v101, v106))
            goto LABEL_198;
          if (v101 + v106 >= v82)
          {
            v107 = v82 < v106;
LABEL_152:
            if (v107)
              v79 = v91;
            goto LABEL_154;
          }
LABEL_146:
          if ((v102 & 1) != 0)
            goto LABEL_193;
          v110 = &v77[16 * v79];
          v112 = *(_QWORD *)v110;
          v111 = *((_QWORD *)v110 + 1);
          v90 = __OFSUB__(v111, v112);
          v113 = v111 - v112;
          if (v90)
            goto LABEL_197;
          if (v113 < v101)
            goto LABEL_163;
LABEL_154:
          v118 = v79 - 1;
          if (v79 - 1 >= v76)
            goto LABEL_185;
          if (!v14)
            goto LABEL_215;
          v119 = v14;
          v120 = &v77[16 * v118];
          v121 = *(_QWORD *)v120;
          v122 = v79;
          v123 = &v77[16 * v79];
          v124 = *((_QWORD *)v123 + 1);
          v125 = (char *)(v119 + 8 * *(_QWORD *)v120);
          v126 = (char *)(v119 + 8 * *(_QWORD *)v123);
          v157 = v119 + 8 * v124;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2150AF610(v125, v126, v157, v149, a2, v150, v155);
          if (v159)
          {
LABEL_181:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v148 + 16) = 0;
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_182;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v124 < v121)
            goto LABEL_186;
          if (v122 > *((_QWORD *)v153 + 2))
            goto LABEL_187;
          v127 = v122;
          *(_QWORD *)v120 = v121;
          v77 = v146;
          *(_QWORD *)&v146[16 * v118 + 8] = v124;
          v128 = *((_QWORD *)v153 + 2);
          if (v122 >= v128)
            goto LABEL_188;
          v15 = v153;
          v159 = 0;
          v76 = v128 - 1;
          memmove(v123, v123 + 16, 16 * (v128 - 1 - v127));
          *((_QWORD *)v153 + 2) = v128 - 1;
          v8 = v147;
          v12 = v148;
          v14 = v145;
          if (v128 <= 2)
            goto LABEL_163;
        }
      }
      v76 = 1;
LABEL_163:
      v13 = v144;
      if (v144 >= v8)
        goto LABEL_169;
    }
    v29 = 0;
    v8 = v147;
    v12 = v148;
LABEL_24:
    v30 = v13 + 2;
    if (v13 + 2 >= v8)
    {
LABEL_59:
      v16 = v30;
      if (v29)
      {
        if (v30 < v13)
          goto LABEL_210;
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    goto LABEL_28;
  }
  if (v8 < 0)
    goto LABEL_209;
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150AFAC0(0, v8, 1, a1, a2, a3, a4);
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_182:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150B0818()
{
  return swift_deallocObject();
}

uint64_t sub_2150B082C()
{
  return swift_deallocObject();
}

uint64_t sub_2150B083C()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2150B0878()
{
  return swift_deallocObject();
}

uint64_t sub_2150B0888()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2150B08C4()
{
  return swift_deallocObject();
}

uint64_t sub_2150B08D4()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2150B0910()
{
  return swift_deallocObject();
}

uint64_t sub_2150B0920()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2150B095C()
{
  return swift_deallocObject();
}

uint64_t sub_2150B096C()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

void JSONReadingError.description.getter()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_2150B0E38(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_2150B0A10()
{
  __int128 v1;
  uint64_t v2;
  __int128 v3;

  sub_21504678C(&v3, &v1);
  sub_215130178();
  sub_21512FB90();
  __swift_project_boxed_opaque_existential_1(&v1, v2);
  sub_215130418();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_215130178();
  sub_21512FB90();
  sub_2151302A4();
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v1);
  return 0;
}

uint64_t sub_2150B0E38(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for JSONReadingError(a2, a1);
  return a2;
}

uint64_t destroy for JSONReadingError(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 64);
  if (v2 >= 3)
    v2 = *(_DWORD *)result + 3;
  switch(v2)
  {
    case 2u:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1u:
      return swift_bridgeObjectRelease();
    case 0u:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for JSONReadingError(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v3 = *(unsigned __int8 *)(a2 + 64);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 64) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3 == 1)
  {
    v8 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v4 = a2 + 32;
    v5 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v5;
    v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain();
    v6(a1 + 32, v4, v5);
    *(_BYTE *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for JSONReadingError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 != 1)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 64) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v5 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *(_OWORD *)(a2 + 16);
    v10 = *(_OWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v6 = a2 + 32;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    v8(a1 + 32, v6, v7);
    *(_BYTE *)(a1 + 64) = 0;
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for JSONReadingError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 != 1)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 64) = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 64) = 1;
  }
  else if (v5)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONReadingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSONReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_2150B1344(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_2150B1360(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONReadingError()
{
  return &type metadata for JSONReadingError;
}

uint64_t destroy for InferringJSONColumnProcessor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
}

uint64_t initializeWithCopy for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = a2 + 32;
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v5, v7);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2 + 88;
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v13(a1 + 88, v10, v12);
  return a1;
}

uint64_t assignWithCopy for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferringJSONColumnProcessor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferringJSONColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferringJSONColumnProcessor()
{
  return &type metadata for InferringJSONColumnProcessor;
}

uint64_t sub_2150B16BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_2150B1778(a1);
  if ((result & 1) == 0)
  {
    result = sub_2150B1B80(a1);
    if ((result & 1) == 0)
    {
      result = sub_2150B21B4(a1);
      if ((result & 1) == 0)
      {
        result = sub_2150B27E4(a1);
        if ((result & 1) == 0)
        {
          result = sub_2150B3028(a1);
          if ((result & 1) == 0)
          {
            result = sub_2150B3ED4(a1);
            if ((result & 1) == 0)
            {
              result = sub_2150B44F8(a1);
              if ((result & 1) == 0)
              {
                result = sub_2150B4C48(a1);
                if ((result & 1) == 0)
                {
                  sub_215057CCC();
                  swift_allocError();
                  v4 = *(_QWORD *)(v1 + 80);
                  *(_QWORD *)v5 = *(_QWORD *)(v1 + 72);
                  *(_QWORD *)(v5 + 8) = v4;
                  *(_BYTE *)(v5 + 64) = 1;
                  swift_bridgeObjectRetain();
                  return swift_willThrow();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2150B1778(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  _UNKNOWN **v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[5];
  uint64_t v48;
  __int128 v49;

  v2 = v1;
  v4 = v1[10];
  v48 = v1[9];
  *(_QWORD *)&v49 = v4;
  swift_bridgeObjectRetain();
  *((_QWORD *)&v49 + 1) = sub_2150464B4(MEMORY[0x24BEE4AF8]);
  sub_2150EE2F4(0);
  v5 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = 0uLL;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 8 * v7 + 32);
      if (*(_QWORD *)(v9 + 16))
      {
        v11 = v2[9];
        v10 = v2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = sub_21502F840(v11, v10);
        if ((v13 & 1) != 0)
          sub_21504679C(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)v43);
        else
          memset(v43, 0, sizeof(v43));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v43[1] + 1))
        {
          sub_215046750((uint64_t)v43, &qword_254DA7868);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else
      {
        v43[0] = v8;
        v43[1] = v8;
      }
      sub_215046750((uint64_t)v43, &qword_254DA7868);
      memset(v43, 0, sizeof(v43));
      v14 = *((_QWORD *)&v49 + 1);
      v15 = (uint64_t *)(*((_QWORD *)&v49 + 1) + 16);
      result = swift_beginAccess();
      v17 = *(_QWORD *)(v14 + 16);
      if (!v17)
        break;
      v18 = *(_QWORD *)(v17 + 8);
      v19 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        break;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        swift_beginAccess();
        result = *v15;
        if (!*v15)
          goto LABEL_56;
        v20 = *(_QWORD *)result;
        if (*(_QWORD *)result < v19)
        {
          if (v20 + 0x4000000000000000 < 0)
            goto LABEL_52;
          v21 = 2 * v20;
          if (v21 <= v19)
            v22 = v19;
          else
            v22 = v21;
          sub_2150979C0(v47, result, *(_QWORD *)(v14 + 24), v22);
          sub_215098900(*(_QWORD **)(v14 + 16));
          *(_OWORD *)(v14 + 16) = *(_OWORD *)v47;
        }
      }
      else
      {
        result = swift_beginAccess();
        v23 = (uint64_t *)*v15;
        if (!v23)
          goto LABEL_57;
        v24 = *v23;
        if (*v23 < v19)
        {
          if (v24 + 0x4000000000000000 < 0)
            goto LABEL_53;
          if (2 * v24 <= v19)
            v24 = v19;
          else
            v24 *= 2;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7860);
        v25 = swift_allocObject();
        sub_21509745C((uint64_t)v23, v24, v47);
        *(_OWORD *)(v25 + 16) = *(_OWORD *)v47;
        swift_release();
        *((_QWORD *)&v49 + 1) = v25;
        v14 = v25;
      }
      swift_beginAccess();
      v26 = *(_QWORD **)(v14 + 16);
      sub_21504670C((uint64_t)v43, (uint64_t)&v45, &qword_254DA7868);
      if (v46)
      {
        result = (uint64_t)sub_21504678C(&v45, v47);
        if (!v26)
          goto LABEL_55;
        v27 = *v26 + 7;
        if (__OFADD__(*v26, 7))
          goto LABEL_50;
        v28 = v26 + 8;
        if (v27 < 0)
          v27 = *v26 + 14;
        v29 = v27 >> 3;
        v31 = v29 - 1;
        v30 = v29 < 1;
        v32 = v29 + 62;
        if (!v30)
          v32 = v31;
        sub_21504679C((uint64_t)v47, (uint64_t)&v28[4 * v26[1] + 8] + (v32 & 0xFFFFFFFFFFFFFFC0));
        v33 = v26[1];
        v34 = v33 + 7;
        if (v33 >= 0)
          v34 = v26[1];
        v35 = v33 - (v34 & 0xFFFFFFFFFFFFFFF8);
        if (v35 >= 0)
          v36 = 1 << v35;
        else
          v36 = 0;
        *((_BYTE *)v28 + (v34 >> 3)) |= v36;
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      }
      else
      {
        result = sub_215046750((uint64_t)&v45, &qword_254DA7868);
        if (!v26)
          goto LABEL_58;
        v37 = v26[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_51;
        v26[2] = v39;
      }
      v40 = v26[1];
      v38 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v38)
        goto LABEL_49;
      ++v7;
      v26[1] = v41;
      sub_215046750((uint64_t)v43, &qword_254DA7868);
      v8 = 0uLL;
      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        v5 = (uint64_t)(v2 + 11);
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  else
  {
LABEL_45:
    v42 = v48;
    *((_QWORD *)&v43[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(qword_254DA84A8);
    v44 = &off_24D2A4440;
    *(_QWORD *)&v43[0] = v42;
    *(_OWORD *)((char *)v43 + 8) = v49;
    sub_2150668CC((uint64_t)v43, v5);
    return 1;
  }
  return result;
}

uint64_t sub_2150B1B80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  _UNKNOWN **v60;
  __int128 v61;
  __int128 *v62;
  _BYTE v63[32];
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v2 = v1;
  v4 = &v58;
  v5 = v1[10];
  v66 = v1[9];
  v67 = v5;
  swift_bridgeObjectRetain();
  sub_215043454(MEMORY[0x24BEE4AF8]);
  v68 = v6;
  sub_2150EE010(0);
  v7 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_71:
    v57 = v66;
    *((_QWORD *)&v59 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
    v60 = &off_24D2A4440;
    *(_QWORD *)&v58 = v57;
    *(__int128 *)((char *)v4 + 8) = v4[14];
    sub_2150668CC((uint64_t)&v58, v7);
    return 1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
    if (*(_QWORD *)(v10 + 16))
    {
      v12 = v2[9];
      v11 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_21502F840(v12, v11);
      if ((v14 & 1) != 0)
      {
        sub_21504679C(*(_QWORD *)(v10 + 56) + 32 * v13, (uint64_t)&v58);
      }
      else
      {
        v59 = 0u;
        v58 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v59 = 0u;
      v58 = 0u;
    }
    sub_21504670C((uint64_t)&v58, (uint64_t)&v64, &qword_254DA7868);
    if (v65)
    {
      sub_21504670C((uint64_t)&v64, (uint64_t)v63, &qword_254DA7868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
      sub_215057C90();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_215046750((uint64_t)&v58, &qword_254DA7868);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
          sub_215046750((uint64_t)&v64, &qword_254DA7868);
          return 0;
        }
        v4 = v62;
        v33 = v68;
        v34 = (uint64_t *)(v68 + 16);
        result = swift_beginAccess();
        v35 = *(_QWORD *)(v33 + 16);
        if (!v35)
          goto LABEL_89;
        v36 = *(_QWORD *)(v35 + 8);
        v37 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_77;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          result = *v34;
          if (!*v34)
            goto LABEL_92;
          v38 = *(_QWORD *)result;
          if (*(_QWORD *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0)
              goto LABEL_82;
            v39 = 2 * v38;
            if (v39 <= v37)
              v40 = v37;
            else
              v40 = v39;
            sub_2150975F0(result, v40, (uint64_t *)&v61);
            result = *(_QWORD *)(v33 + 16);
            if (!result)
              goto LABEL_94;
            if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
              goto LABEL_84;
            MEMORY[0x2199DC578]();
            *(_OWORD *)v34 = v61;
          }
        }
        else
        {
          result = swift_beginAccess();
          v41 = (uint64_t *)*v34;
          if (!v41)
            goto LABEL_93;
          v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0)
              goto LABEL_83;
            if (2 * v42 <= v37)
              v42 = v37;
            else
              v42 *= 2;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
          v43 = swift_allocObject();
          sub_215096600((uint64_t)v41, v42, (uint64_t *)&v61);
          *(_OWORD *)(v43 + 16) = v61;
          swift_release();
          v68 = v43;
          v33 = v43;
        }
        result = swift_beginAccess();
        v44 = *(_QWORD **)(v33 + 16);
        if (!v44)
          goto LABEL_90;
        v45 = *v44 + 7;
        if (__OFADD__(*v44, 7))
          goto LABEL_78;
        v46 = v44 + 8;
        if (v45 < 0)
          v45 = *v44 + 14;
        v47 = v45 >> 3;
        v49 = v47 - 1;
        v48 = v47 < 1;
        v50 = v47 + 62;
        if (!v48)
          v50 = v49;
        *(_QWORD *)((char *)&v46[v44[1] + 8] + (v50 & 0xFFFFFFFFFFFFC0)) = v4;
        v51 = v44[1];
        v52 = v51 + 7;
        if (v51 >= 0)
          v52 = v44[1];
        v53 = v52 >> 3;
        v54 = v51 - (v52 & 0xFFFFFFFFFFFFFFF8);
        if (v54 >= 0)
          v55 = 1 << v54;
        else
          v55 = 0;
        *((_BYTE *)v46 + v53) |= v55;
        v29 = __OFADD__(v51, 1);
        v56 = v51 + 1;
        if (v29)
        {
          __break(1u);
LABEL_70:
          swift_bridgeObjectRelease();
          v7 = (uint64_t)(v2 + 11);
          goto LABEL_71;
        }
        v44[1] = v56;
        sub_215046750((uint64_t)&v58, &qword_254DA7868);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
        sub_215046750((uint64_t)&v64, &qword_254DA7868);
        v4 = &v58;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    }
    sub_215046750((uint64_t)&v64, &qword_254DA7868);
    v15 = v68;
    v16 = (uint64_t *)(v68 + 16);
    result = swift_beginAccess();
    v18 = *(_QWORD *)(v15 + 16);
    if (!v18)
      goto LABEL_85;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v16;
      if (!*v16)
        goto LABEL_87;
      v21 = *(_QWORD *)result;
      if (*(_QWORD *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0)
          goto LABEL_79;
        v22 = 2 * v21;
        if (v22 <= v20)
          v23 = v20;
        else
          v23 = v22;
        sub_2150975F0(result, v23, (uint64_t *)&v64);
        result = *(_QWORD *)(v15 + 16);
        if (!result)
          goto LABEL_91;
        if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
          goto LABEL_81;
        MEMORY[0x2199DC578]();
        *(_OWORD *)v16 = v64;
      }
    }
    else
    {
      result = swift_beginAccess();
      v24 = (uint64_t *)*v16;
      if (!v24)
        goto LABEL_88;
      v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0)
          goto LABEL_80;
        if (2 * v25 <= v20)
          v25 = v20;
        else
          v25 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D438);
      v26 = swift_allocObject();
      sub_215096600((uint64_t)v24, v25, (uint64_t *)&v64);
      *(_OWORD *)(v26 + 16) = v64;
      swift_release();
      v68 = v26;
      v15 = v26;
    }
    result = swift_beginAccess();
    v27 = *(_QWORD *)(v15 + 16);
    if (!v27)
      goto LABEL_86;
    v28 = *(_QWORD *)(v27 + 16);
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_75;
    *(_QWORD *)(v27 + 16) = v30;
    v31 = *(_QWORD *)(v27 + 8);
    v29 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v29)
      goto LABEL_76;
    *(_QWORD *)(v27 + 8) = v32;
    sub_215046750((uint64_t)&v58, &qword_254DA7868);
LABEL_3:
    if (v8 == ++v9)
      goto LABEL_70;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
  return result;
}

uint64_t sub_2150B21B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  _UNKNOWN **v57;
  __int128 v58;
  unsigned __int8 v59;
  _BYTE v60[32];
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = v1;
  v4 = (unint64_t)&v55;
  v5 = v1[10];
  v63 = v1[9];
  v64 = v5;
  swift_bridgeObjectRetain();
  sub_215044030(MEMORY[0x24BEE4AF8]);
  v65 = v6;
  sub_2150EE090(0);
  v7 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_69:
    v54 = v63;
    *((_QWORD *)&v56 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1A8);
    v57 = &off_24D2A4440;
    *(_QWORD *)&v55 = v54;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v4 + 224);
    sub_2150668CC((uint64_t)&v55, v7);
    return 1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
    if (*(_QWORD *)(v10 + 16))
    {
      v12 = v2[9];
      v11 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_21502F840(v12, v11);
      if ((v14 & 1) != 0)
      {
        sub_21504679C(*(_QWORD *)(v10 + 56) + 32 * v13, (uint64_t)&v55);
      }
      else
      {
        v56 = 0u;
        v55 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = 0u;
      v55 = 0u;
    }
    sub_21504670C((uint64_t)&v55, (uint64_t)&v61, &qword_254DA7868);
    if (v62)
    {
      sub_21504670C((uint64_t)&v61, (uint64_t)v60, &qword_254DA7868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
      sub_215057C90();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_215046750((uint64_t)&v55, &qword_254DA7868);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
          sub_215046750((uint64_t)&v61, &qword_254DA7868);
          return 0;
        }
        v4 = v59;
        v33 = v65;
        v34 = (uint64_t *)(v65 + 16);
        result = swift_beginAccess();
        v35 = *(_QWORD *)(v33 + 16);
        if (!v35)
          goto LABEL_86;
        v36 = *(_QWORD *)(v35 + 8);
        v37 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_74;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          result = *v34;
          if (!*v34)
            goto LABEL_89;
          v38 = *(_QWORD *)result;
          if (*(_QWORD *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0)
              goto LABEL_79;
            v39 = 2 * v38;
            if (v39 <= v37)
              v40 = v37;
            else
              v40 = v39;
            sub_215097C2C(result, v40, (uint64_t *)&v58);
            result = *(_QWORD *)(v33 + 16);
            if (!result)
              goto LABEL_91;
            if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
              goto LABEL_81;
            MEMORY[0x2199DC578]();
            *(_OWORD *)v34 = v58;
          }
        }
        else
        {
          result = swift_beginAccess();
          v41 = (uint64_t *)*v34;
          if (!v41)
            goto LABEL_90;
          v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0)
              goto LABEL_80;
            if (2 * v42 <= v37)
              v42 = v37;
            else
              v42 *= 2;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D188);
          v43 = swift_allocObject();
          sub_215096C70((uint64_t)v41, v42, (uint64_t *)&v58);
          *(_OWORD *)(v43 + 16) = v58;
          swift_release();
          v65 = v43;
          v33 = v43;
        }
        result = swift_beginAccess();
        v44 = *(_QWORD **)(v33 + 16);
        if (!v44)
          goto LABEL_87;
        v45 = *v44 + 7;
        if (__OFADD__(*v44, 7))
          goto LABEL_75;
        v46 = v44 + 8;
        if (v45 < 0)
          v45 = *v44 + 14;
        v47 = v45 >> 3;
        v49 = v47 - 1;
        v48 = v47 < 1;
        v50 = v47 + 62;
        if (!v48)
          v50 = v49;
        v51 = v44[1];
        *((_BYTE *)v46 + v51 + (v50 & 0xFFFFFFFFFFFFC0) + 64) = v4;
        v52 = v51 - (v50 & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0)
          v53 = 1 << v52;
        else
          v53 = 0;
        *((_BYTE *)v46 + v51 / 8) |= v53;
        if (__OFADD__(v51, 1))
        {
          __break(1u);
LABEL_68:
          swift_bridgeObjectRelease();
          v7 = (uint64_t)(v2 + 11);
          goto LABEL_69;
        }
        v44[1] = v51 + 1;
        sub_215046750((uint64_t)&v55, &qword_254DA7868);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
        sub_215046750((uint64_t)&v61, &qword_254DA7868);
        v4 = (unint64_t)&v55;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
    }
    sub_215046750((uint64_t)&v61, &qword_254DA7868);
    v15 = v65;
    v16 = (uint64_t *)(v65 + 16);
    result = swift_beginAccess();
    v18 = *(_QWORD *)(v15 + 16);
    if (!v18)
      goto LABEL_82;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v16;
      if (!*v16)
        goto LABEL_84;
      v21 = *(_QWORD *)result;
      if (*(_QWORD *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0)
          goto LABEL_76;
        v22 = 2 * v21;
        if (v22 <= v20)
          v23 = v20;
        else
          v23 = v22;
        sub_215097C2C(result, v23, (uint64_t *)&v61);
        result = *(_QWORD *)(v15 + 16);
        if (!result)
          goto LABEL_88;
        if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
          goto LABEL_78;
        MEMORY[0x2199DC578]();
        *(_OWORD *)v16 = v61;
      }
    }
    else
    {
      result = swift_beginAccess();
      v24 = (uint64_t *)*v16;
      if (!v24)
        goto LABEL_85;
      v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0)
          goto LABEL_77;
        if (2 * v25 <= v20)
          v25 = v20;
        else
          v25 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D188);
      v26 = swift_allocObject();
      sub_215096C70((uint64_t)v24, v25, (uint64_t *)&v61);
      *(_OWORD *)(v26 + 16) = v61;
      swift_release();
      v65 = v26;
      v15 = v26;
    }
    result = swift_beginAccess();
    v27 = *(_QWORD *)(v15 + 16);
    if (!v27)
      goto LABEL_83;
    v28 = *(_QWORD *)(v27 + 16);
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_72;
    *(_QWORD *)(v27 + 16) = v30;
    v31 = *(_QWORD *)(v27 + 8);
    v29 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v29)
      goto LABEL_73;
    *(_QWORD *)(v27 + 8) = v32;
    sub_215046750((uint64_t)&v55, &qword_254DA7868);
LABEL_3:
    if (v8 == ++v9)
      goto LABEL_68;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

uint64_t sub_2150B27E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  _QWORD v77[5];
  __int128 v78;
  uint64_t v79;
  _BYTE v80[32];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;

  v2 = v1;
  v4 = v1[10];
  v83 = v1[9];
  *(_QWORD *)&v84 = v4;
  swift_bridgeObjectRetain();
  sub_215043D68(MEMORY[0x24BEE4AF8]);
  *((_QWORD *)&v84 + 1) = v5;
  sub_2150EE050(0);
  v6 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_102:
    v76 = v83;
    v77[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D448);
    v77[4] = &off_24D2A4440;
    v77[0] = v76;
    *(_OWORD *)&v77[1] = v84;
    sub_2150668CC((uint64_t)v77, v6);
    return 1;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v10 = *(_QWORD *)(a1 + 8 * v8 + 32);
    if (*(_QWORD *)(v10 + 16))
    {
      v12 = v2[9];
      v11 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_21502F840(v12, v11);
      if ((v14 & 1) != 0)
        sub_21504679C(*(_QWORD *)(v10 + 56) + 32 * v13, (uint64_t)v77);
      else
        memset(v77, 0, 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v77, 0, 32);
    }
    sub_21504670C((uint64_t)v77, (uint64_t)&v81, &qword_254DA7868);
    if (v82)
    {
      sub_21504670C((uint64_t)&v81, (uint64_t)v80, &qword_254DA7868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
      sub_215057C90();
      if (!swift_dynamicCast())
      {
        if (swift_dynamicCast())
        {
          v33 = v79;
          v34 = *((_QWORD *)&v84 + 1);
          v35 = (uint64_t *)(*((_QWORD *)&v84 + 1) + 16);
          result = swift_beginAccess();
          v36 = *(_QWORD *)(v34 + 16);
          if (!v36)
            goto LABEL_126;
          v37 = *(_QWORD *)(v36 + 8);
          v38 = v37 + 1;
          if (__OFADD__(v37, 1))
            goto LABEL_110;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            swift_beginAccess();
            result = *v35;
            if (!*v35)
              goto LABEL_130;
            v39 = *(_QWORD *)result;
            if (*(_QWORD *)result < v38)
            {
              if (v39 + 0x4000000000000000 < 0)
                goto LABEL_115;
              v40 = 2 * v39;
              if (v40 <= v38)
                v41 = v38;
              else
                v41 = v40;
              sub_2150975F0(result, v41, (uint64_t *)&v78);
              result = *(_QWORD *)(v34 + 16);
              if (!result)
                goto LABEL_134;
              if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
                goto LABEL_117;
              MEMORY[0x2199DC578]();
              *(_OWORD *)v35 = v78;
            }
          }
          else
          {
            result = swift_beginAccess();
            v51 = (uint64_t *)*v35;
            if (!v51)
              goto LABEL_132;
            v52 = *v51;
            if (*v51 < v38)
            {
              if (v52 + 0x4000000000000000 < 0)
                goto LABEL_116;
              if (2 * v52 <= v38)
                v52 = v38;
              else
                v52 *= 2;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
            v53 = swift_allocObject();
            sub_215096790((uint64_t)v51, v52, (uint64_t *)&v78);
            *(_OWORD *)(v53 + 16) = v78;
            swift_release();
            *((_QWORD *)&v84 + 1) = v53;
            v34 = v53;
          }
          result = swift_beginAccess();
          v54 = *(_QWORD **)(v34 + 16);
          if (!v54)
            goto LABEL_127;
          v55 = *v54 + 7;
          if (__OFADD__(*v54, 7))
            goto LABEL_111;
          v56 = v54 + 8;
          if (v55 < 0)
            v55 = *v54 + 14;
          v57 = v55 >> 3;
          v59 = v57 - 1;
          v58 = v57 < 1;
          v60 = v57 + 62;
          if (!v58)
            v60 = v59;
          v61 = v54[1];
          *(_QWORD *)((char *)&v56[v61 + 8] + (v60 & 0xFFFFFFFFFFFFC0)) = v33;
          v62 = v61 - (v60 & 0xFFFFFFFFFFFFFFF8);
          if (v62 >= 0)
            v63 = 1 << v62;
          else
            v63 = 0;
          *((_BYTE *)v56 + v61 / 8) |= v63;
          v64 = v61 + 1;
          if (__OFADD__(v61, 1))
            goto LABEL_112;
        }
        else
        {
          if (!swift_dynamicCast())
          {
            sub_215046750((uint64_t)v77, &qword_254DA7868);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
            sub_215046750((uint64_t)&v81, &qword_254DA7868);
            return 0;
          }
          v42 = v79;
          v43 = *((_QWORD *)&v84 + 1);
          v44 = (uint64_t *)(*((_QWORD *)&v84 + 1) + 16);
          result = swift_beginAccess();
          v45 = *(_QWORD *)(v43 + 16);
          if (!v45)
            goto LABEL_128;
          v46 = *(_QWORD *)(v45 + 8);
          v47 = v46 + 1;
          if (__OFADD__(v46, 1))
            goto LABEL_113;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            swift_beginAccess();
            result = *v44;
            if (!*v44)
              goto LABEL_131;
            v48 = *(_QWORD *)result;
            if (*(_QWORD *)result < v47)
            {
              if (v48 + 0x4000000000000000 < 0)
                goto LABEL_118;
              v49 = 2 * v48;
              if (v49 <= v47)
                v50 = v47;
              else
                v50 = v49;
              sub_2150975F0(result, v50, (uint64_t *)&v78);
              result = *(_QWORD *)(v43 + 16);
              if (!result)
                goto LABEL_135;
              if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
                goto LABEL_120;
              MEMORY[0x2199DC578]();
              *(_OWORD *)v44 = v78;
            }
          }
          else
          {
            result = swift_beginAccess();
            v65 = (uint64_t *)*v44;
            if (!v65)
              goto LABEL_133;
            v66 = *v65;
            if (*v65 < v47)
            {
              if (v66 + 0x4000000000000000 < 0)
                goto LABEL_119;
              if (2 * v66 <= v47)
                v66 = v47;
              else
                v66 *= 2;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
            v67 = swift_allocObject();
            sub_215096790((uint64_t)v65, v66, (uint64_t *)&v78);
            *(_OWORD *)(v67 + 16) = v78;
            swift_release();
            *((_QWORD *)&v84 + 1) = v67;
            v43 = v67;
          }
          result = swift_beginAccess();
          v54 = *(_QWORD **)(v43 + 16);
          if (!v54)
            goto LABEL_129;
          v68 = *v54 + 7;
          if (__OFADD__(*v54, 7))
            goto LABEL_114;
          v69 = v54 + 8;
          if (v68 < 0)
            v68 = *v54 + 14;
          v70 = v68 >> 3;
          v71 = v70 - 1;
          v58 = v70 < 1;
          v72 = v70 + 62;
          if (!v58)
            v72 = v71;
          v73 = v54[1];
          *(double *)((char *)&v69[v73 + 8] + (v72 & 0xFFFFFFFFFFFFC0)) = (double)v42;
          v74 = v73 - (v72 & 0xFFFFFFFFFFFFFFF8);
          if (v74 >= 0)
            v75 = 1 << v74;
          else
            v75 = 0;
          *((_BYTE *)v69 + v73 / 8) |= v75;
          v64 = v73 + 1;
          if (__OFADD__(v73, 1))
          {
            __break(1u);
LABEL_101:
            swift_bridgeObjectRelease();
            v6 = (uint64_t)(v2 + 11);
            goto LABEL_102;
          }
        }
        v54[1] = v64;
        sub_215046750((uint64_t)v77, &qword_254DA7868);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
        v9 = &v81;
        goto LABEL_4;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
    }
    sub_215046750((uint64_t)&v81, &qword_254DA7868);
    v15 = *((_QWORD *)&v84 + 1);
    v16 = (uint64_t *)(*((_QWORD *)&v84 + 1) + 16);
    result = swift_beginAccess();
    v18 = *(_QWORD *)(v15 + 16);
    if (!v18)
      goto LABEL_121;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v16;
      if (!*v16)
        goto LABEL_123;
      v21 = *(_QWORD *)result;
      if (*(_QWORD *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0)
          goto LABEL_107;
        v22 = 2 * v21;
        if (v22 <= v20)
          v23 = v20;
        else
          v23 = v22;
        sub_2150975F0(result, v23, (uint64_t *)&v81);
        result = *(_QWORD *)(v15 + 16);
        if (!result)
          goto LABEL_125;
        if ((*(_QWORD *)(result + 8) & 0x8000000000000000) != 0)
          goto LABEL_109;
        MEMORY[0x2199DC578]();
        *(_OWORD *)v16 = v81;
      }
    }
    else
    {
      result = swift_beginAccess();
      v24 = (uint64_t *)*v16;
      if (!v24)
        goto LABEL_124;
      v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0)
          goto LABEL_108;
        if (2 * v25 <= v20)
          v25 = v20;
        else
          v25 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D430);
      v26 = swift_allocObject();
      sub_215096790((uint64_t)v24, v25, (uint64_t *)&v81);
      *(_OWORD *)(v26 + 16) = v81;
      swift_release();
      *((_QWORD *)&v84 + 1) = v26;
      v15 = v26;
    }
    result = swift_beginAccess();
    v27 = *(_QWORD *)(v15 + 16);
    if (!v27)
      goto LABEL_122;
    v28 = *(_QWORD *)(v27 + 16);
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_105;
    *(_QWORD *)(v27 + 16) = v30;
    v31 = *(_QWORD *)(v27 + 8);
    v29 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v29)
      goto LABEL_106;
    *(_QWORD *)(v27 + 8) = v32;
    v9 = (__int128 *)v77;
LABEL_4:
    sub_215046750((uint64_t)v9, &qword_254DA7868);
    if (v7 == ++v8)
      goto LABEL_101;
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
  return result;
}

uint64_t sub_2150B3028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  void (*v82)(uint64_t, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t);
  void (*v98)(char *, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t (*v155)(char *, uint64_t);
  uint64_t v156;
  _QWORD v157[2];
  char *v158;
  char *v159;
  char *v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD v177[8];
  __int128 v178;
  __int128 v179;
  _BYTE v180[32];
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;

  v2 = v1;
  v4 = sub_21512F740();
  v5 = *(_QWORD *)(v4 - 8);
  v175 = v4;
  v176 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v158 = (char *)v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v166 = (char *)v157 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v162 = (char *)v157 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v167 = (char *)v157 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v157 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v172 = (char *)v157 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v159 = (char *)v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v168 = (uint64_t)v157 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v160 = (char *)v157 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v163 = (char *)v157 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v169 = (uint64_t)v157 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v157 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v157 - v32;
  v34 = *(_QWORD *)(v1 + 80);
  v183 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)&v184 = v34;
  swift_bridgeObjectRetain();
  *((_QWORD *)&v184 + 1) = sub_215044588(MEMORY[0x24BEE4AF8]);
  sub_2150EE0AC(0);
  v35 = a1;
  v36 = v2 + 88;
  sub_21501EEF0((uint64_t *)(v2 + 32), (uint64_t *)(v2 + 88));
  v174 = *(_QWORD *)(a1 + 16);
  if (!v174)
  {
LABEL_124:
    v156 = v183;
    v177[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1A0);
    v177[4] = &off_24D2A4440;
    v177[0] = v156;
    *(_OWORD *)&v177[1] = v184;
    sub_2150668CC((uint64_t)v177, v36);
    return 1;
  }
  v165 = v16;
  v170 = v2;
  v157[0] = v2 + 88;
  v157[1] = v2 + 8;
  swift_bridgeObjectRetain();
  v37 = 0;
  v164 = a1;
  v171 = v31;
  v173 = v33;
  v38 = v175;
  while (1)
  {
    v43 = v35;
    v44 = *(_QWORD *)(v35 + 8 * v37 + 32);
    if (*(_QWORD *)(v44 + 16))
    {
      v46 = *(_QWORD *)(v170 + 72);
      v45 = *(_QWORD *)(v170 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = sub_21502F840(v46, v45);
      if ((v48 & 1) != 0)
        sub_21504679C(*(_QWORD *)(v44 + 56) + 32 * v47, (uint64_t)v177);
      else
        memset(v177, 0, 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v177, 0, 32);
    }
    sub_21504670C((uint64_t)v177, (uint64_t)&v181, &qword_254DA7868);
    if (v182)
    {
      sub_21504670C((uint64_t)&v181, (uint64_t)v180, &qword_254DA7868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
      sub_215057C90();
      if (swift_dynamicCast())
      {

        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v180);
        goto LABEL_16;
      }
      v78 = v165;
      if (swift_dynamicCast())
      {
        v79 = v176;
        v80 = *(void (**)(char *, char *, uint64_t))(v176 + 32);
        v81 = v167;
        v80(v167, v78, v175);
        v82 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 16);
        v83 = v169;
        v82(v169, v81, v175);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v83, 0, 1, v175);
        v84 = *((_QWORD *)&v184 + 1);
        v85 = (uint64_t *)(*((_QWORD *)&v184 + 1) + 16);
        result = swift_beginAccess();
        v86 = *(_QWORD *)(v84 + 16);
        if (!v86)
          goto LABEL_152;
        v87 = *(_QWORD *)(v86 + 8);
        v88 = v87 + 1;
        if (__OFADD__(v87, 1))
          goto LABEL_135;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          result = *v85;
          if (!*v85)
            goto LABEL_154;
          v89 = *(_QWORD *)result;
          v90 = (uint64_t)v163;
          if (*(_QWORD *)result >= v88)
          {
            v91 = v82;
          }
          else
          {
            if (v89 + 0x4000000000000000 < 0)
              goto LABEL_143;
            v91 = v82;
            v92 = 2 * v89;
            if (v92 <= v88)
              v93 = v88;
            else
              v93 = v92;
            sub_2150979C4((_QWORD *)result, v93, (uint64_t *)&v179);
            sub_215098564(*(_QWORD **)(v84 + 16));
            *(_OWORD *)(v84 + 16) = v179;
          }
        }
        else
        {
          result = swift_beginAccess();
          v113 = (uint64_t *)*v85;
          if (!v113)
            goto LABEL_156;
          v114 = *v113;
          if (*v113 < v88)
          {
            if (v114 + 0x4000000000000000 < 0)
              goto LABEL_144;
            if (2 * v114 <= v88)
              v114 = v88;
            else
              v114 *= 2;
          }
          v91 = v82;
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D180);
          v115 = swift_allocObject();
          sub_215096AB4((uint64_t)v113, v114, (uint64_t *)&v179);
          *(_OWORD *)(v115 + 16) = v179;
          swift_release();
          *((_QWORD *)&v184 + 1) = v115;
          v84 = v115;
          v90 = (uint64_t)v163;
        }
        swift_beginAccess();
        v137 = *(_QWORD **)(v84 + 16);
        sub_21504670C(v169, v90, qword_253F0D218);
        v138 = v175;
        v139 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v90, 1, v175);
        v31 = v171;
        if (v139 == 1)
        {
          result = sub_215046750(v90, qword_253F0D218);
          v33 = v173;
          if (!v137)
            goto LABEL_160;
          v140 = v137[2];
          v40 = __OFADD__(v140, 1);
          v141 = v140 + 1;
          v43 = v164;
          v38 = v175;
          if (v40)
            goto LABEL_139;
          v137[2] = v141;
        }
        else
        {
          result = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v162, v90, v138);
          if (!v137)
            goto LABEL_161;
          v142 = *v137 + 7;
          v33 = v173;
          if (__OFADD__(*v137, 7))
            goto LABEL_140;
          v143 = (void (*)(char *, char *, uint64_t))v91;
          v144 = (char *)(v137 + 8);
          if (v142 < 0)
            v142 = *v137 + 14;
          v145 = v142 >> 3;
          v146 = v145 - 1;
          v68 = v145 < 1;
          v147 = v145 + 62;
          if (!v68)
            v147 = v146;
          v148 = v176;
          v149 = v162;
          v150 = v175;
          v143(&v144[(v147 & 0xFFFFFFFFFFFFFFC0) + 64 + *(_QWORD *)(v176 + 72) * v137[1]], v162, v175);
          v151 = v137[1];
          v152 = v151 + 7;
          if (v151 >= 0)
            v152 = v137[1];
          v153 = v151 - (v152 & 0xFFFFFFFFFFFFFFF8);
          if (v153 >= 0)
            v154 = 1 << v153;
          else
            v154 = 0;
          v144[v152 >> 3] |= v154;
          v155 = *(uint64_t (**)(char *, uint64_t))(v148 + 8);
          v38 = v150;
          result = v155(v149, v150);
          v43 = v164;
        }
        v39 = v137[1];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_136;
        v137[1] = v41;
        sub_215046750(v169, qword_253F0D218);
        (*(void (**)(char *, uint64_t))(v176 + 8))(v167, v38);
        goto LABEL_5;
      }
      if (swift_dynamicCast())
      {
        v94 = v160;
        sub_2150C0AA4(v179, *((uint64_t *)&v179 + 1), v160);
        v95 = (uint64_t)v94;
        swift_bridgeObjectRelease();
        v96 = v176;
        v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 48);
        if (v97(v95, 1, v38) != 1)
        {
          v98 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
          v99 = v166;
          v98(v166, v95, v38);
          v100 = v38;
          v101 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 16);
          v102 = v168;
          v101(v168, v99, v100);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v102, 0, 1, v100);
          v103 = *((_QWORD *)&v184 + 1);
          v104 = (uint64_t *)(*((_QWORD *)&v184 + 1) + 16);
          result = swift_beginAccess();
          v105 = *(_QWORD *)(v103 + 16);
          if (!v105)
            goto LABEL_153;
          v106 = *(_QWORD *)(v105 + 8);
          v107 = v106 + 1;
          if (__OFADD__(v106, 1))
            goto LABEL_137;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v161 = (uint64_t (*)(char *, uint64_t, uint64_t))v98;
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_beginAccess();
            result = *v104;
            if (!*v104)
              goto LABEL_155;
            v109 = *(_QWORD *)result;
            v110 = (uint64_t)v159;
            if (*(_QWORD *)result < v107)
            {
              if (v109 + 0x4000000000000000 < 0)
                goto LABEL_145;
              v111 = 2 * v109;
              if (v111 <= v107)
                v112 = v107;
              else
                v112 = v111;
              sub_2150979C4((_QWORD *)result, v112, (uint64_t *)&v178);
              sub_215098564(*(_QWORD **)(v103 + 16));
              *(_OWORD *)(v103 + 16) = v178;
            }
          }
          else
          {
            result = swift_beginAccess();
            v116 = (uint64_t *)*v104;
            if (!v116)
              goto LABEL_157;
            v117 = *v116;
            if (*v116 < v107)
            {
              if (v117 + 0x4000000000000000 < 0)
                goto LABEL_146;
              if (2 * v117 <= v107)
                v117 = v107;
              else
                v117 *= 2;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D180);
            v118 = swift_allocObject();
            sub_215096AB4((uint64_t)v116, v117, (uint64_t *)&v178);
            *(_OWORD *)(v118 + 16) = v178;
            swift_release();
            *((_QWORD *)&v184 + 1) = v118;
            v103 = v118;
            v110 = (uint64_t)v159;
          }
          swift_beginAccess();
          v119 = *(_QWORD **)(v103 + 16);
          sub_21504670C(v168, v110, qword_253F0D218);
          v120 = v175;
          v121 = v97(v110, 1, v175);
          v31 = v171;
          if (v121 == 1)
          {
            result = sub_215046750(v110, qword_253F0D218);
            v43 = v164;
            v33 = v173;
            if (!v119)
              goto LABEL_158;
            v122 = v119[2];
            v40 = __OFADD__(v122, 1);
            v123 = v122 + 1;
            v38 = v175;
            if (v40)
              goto LABEL_141;
            v119[2] = v123;
          }
          else
          {
            v124 = (void (*)(char *, char *, uint64_t))v101;
            result = v161(v158, v110, v120);
            v33 = v173;
            if (!v119)
              goto LABEL_159;
            v125 = *v119 + 7;
            v43 = v164;
            if (__OFADD__(*v119, 7))
              goto LABEL_142;
            v126 = (char *)(v119 + 8);
            if (v125 < 0)
              v125 = *v119 + 14;
            v127 = v125 >> 3;
            v128 = v127 - 1;
            v68 = v127 < 1;
            v129 = v127 + 62;
            if (!v68)
              v129 = v128;
            v130 = v158;
            v38 = v175;
            v124(&v126[(v129 & 0xFFFFFFFFFFFFFFC0) + 64 + *(_QWORD *)(v176 + 72) * v119[1]], v158, v175);
            v131 = v119[1];
            v132 = v131 + 7;
            if (v131 >= 0)
              v132 = v119[1];
            v133 = v131 - (v132 & 0xFFFFFFFFFFFFFFF8);
            if (v133 >= 0)
              v134 = 1 << v133;
            else
              v134 = 0;
            v126[v132 >> 3] |= v134;
            result = (*(uint64_t (**)(char *, uint64_t))(v176 + 8))(v130, v38);
          }
          v135 = v119[1];
          v40 = __OFADD__(v135, 1);
          v136 = v135 + 1;
          if (v40)
            goto LABEL_138;
          v119[1] = v136;
          sub_215046750(v168, qword_253F0D218);
          (*(void (**)(char *, uint64_t))(v176 + 8))(v166, v38);
LABEL_5:
          sub_215046750((uint64_t)v177, &qword_254DA7868);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v180);
          v42 = &v181;
          goto LABEL_6;
        }
        sub_215046750((uint64_t)v177, &qword_254DA7868);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_215046750(v95, qword_253F0D218);
      }
      else
      {
        sub_215046750((uint64_t)v177, &qword_254DA7868);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v180);
      sub_215046750((uint64_t)&v181, &qword_254DA7868);
      return 0;
    }
LABEL_16:
    sub_215046750((uint64_t)&v181, &qword_254DA7868);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56))(v33, 1, 1, v38);
    v49 = *((_QWORD *)&v184 + 1);
    v50 = (uint64_t *)(*((_QWORD *)&v184 + 1) + 16);
    result = swift_beginAccess();
    v52 = *(_QWORD *)(v49 + 16);
    if (!v52)
      goto LABEL_147;
    v53 = *(_QWORD *)(v52 + 8);
    v54 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v50;
      if (!*v50)
        goto LABEL_148;
      v55 = *(_QWORD *)result;
      if (*(_QWORD *)result < v54)
      {
        if (v55 + 0x4000000000000000 < 0)
          goto LABEL_133;
        v56 = 2 * v55;
        if (v56 <= v54)
          v57 = v54;
        else
          v57 = v56;
        sub_2150979C4((_QWORD *)result, v57, (uint64_t *)&v181);
        sub_215098564(*(_QWORD **)(v49 + 16));
        *(_OWORD *)(v49 + 16) = v181;
      }
    }
    else
    {
      result = swift_beginAccess();
      v58 = (uint64_t *)*v50;
      if (!v58)
        goto LABEL_149;
      v59 = *v58;
      if (*v58 < v54)
      {
        if (v59 + 0x4000000000000000 < 0)
          goto LABEL_134;
        if (2 * v59 <= v54)
          v59 = v54;
        else
          v59 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D180);
      v60 = swift_allocObject();
      sub_215096AB4((uint64_t)v58, v59, (uint64_t *)&v181);
      *(_OWORD *)(v60 + 16) = v181;
      swift_release();
      *((_QWORD *)&v184 + 1) = v60;
      v49 = v60;
      v31 = v171;
    }
    swift_beginAccess();
    v61 = *(_QWORD **)(v49 + 16);
    v33 = v173;
    sub_21504670C((uint64_t)v173, (uint64_t)v31, qword_253F0D218);
    v62 = v176;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v31, 1, v38) == 1)
    {
      result = sub_215046750((uint64_t)v31, qword_253F0D218);
      if (!v61)
        goto LABEL_150;
      v63 = v61[2];
      v40 = __OFADD__(v63, 1);
      v64 = v63 + 1;
      if (v40)
        goto LABEL_131;
      v61[2] = v64;
    }
    else
    {
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v172, v31, v38);
      if (!v61)
        goto LABEL_151;
      v65 = *v61 + 7;
      if (__OFADD__(*v61, 7))
        goto LABEL_132;
      v66 = v61 + 8;
      if (v65 < 0)
        v65 = *v61 + 14;
      v67 = v65 >> 3;
      v69 = v67 - 1;
      v68 = v67 < 1;
      v70 = v67 + 62;
      if (!v68)
        v70 = v69;
      v71 = v172;
      (*(void (**)(unint64_t, char *, uint64_t))(v62 + 16))((unint64_t)v66 + (v70 & 0xFFFFFFFFFFFFFFC0) + *(_QWORD *)(v62 + 72) * v61[1] + 64, v172, v38);
      v72 = v61[1];
      v73 = v72 + 7;
      if (v72 >= 0)
        v73 = v61[1];
      v74 = v72 - (v73 & 0xFFFFFFFFFFFFFFF8);
      if (v74 >= 0)
        v75 = 1 << v74;
      else
        v75 = 0;
      *((_BYTE *)v66 + (v73 >> 3)) |= v75;
      result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v71, v38);
    }
    v76 = v61[1];
    v40 = __OFADD__(v76, 1);
    v77 = v76 + 1;
    if (v40)
      goto LABEL_130;
    v61[1] = v77;
    sub_215046750((uint64_t)v33, qword_253F0D218);
    v42 = (__int128 *)v177;
LABEL_6:
    sub_215046750((uint64_t)v42, &qword_254DA7868);
    ++v37;
    v35 = v43;
    if (v174 == v37)
    {
      swift_bridgeObjectRelease();
      v36 = v157[0];
      goto LABEL_124;
    }
  }
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
  return result;
}

uint64_t sub_2150B3ED4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _UNKNOWN **v61;
  __int128 v62;
  __int128 *v63;
  uint64_t v64;
  _BYTE v65[32];
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = &v59;
  v5 = v1[10];
  v68 = v1[9];
  v69 = v5;
  swift_bridgeObjectRetain();
  v70 = sub_215043B48(MEMORY[0x24BEE4AF8]);
  sub_2150EE06C(0);
  v6 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_67:
    v58 = v68;
    *((_QWORD *)&v60 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D440);
    v61 = &off_24D2A4440;
    *(_QWORD *)&v59 = v58;
    *(__int128 *)((char *)v4 + 8) = v4[14];
    sub_2150668CC((uint64_t)&v59, v6);
    return 1;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(a1 + 8 * v8 + 32);
    if (*(_QWORD *)(v9 + 16))
    {
      v11 = v2[9];
      v10 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_21502F840(v11, v10);
      if ((v13 & 1) != 0)
      {
        sub_21504679C(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v59);
      }
      else
      {
        v60 = 0u;
        v59 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v60 = 0u;
      v59 = 0u;
    }
    sub_21504670C((uint64_t)&v59, (uint64_t)&v66, &qword_254DA7868);
    if (v67)
    {
      sub_21504670C((uint64_t)&v66, (uint64_t)v65, &qword_254DA7868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
      sub_215057C90();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_215046750((uint64_t)&v59, &qword_254DA7868);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
          sub_215046750((uint64_t)&v66, &qword_254DA7868);
          return 0;
        }
        v4 = v63;
        v32 = v64;
        v33 = v70;
        v34 = (uint64_t *)(v70 + 16);
        result = swift_beginAccess();
        v35 = *(_QWORD *)(v33 + 16);
        if (!v35)
          goto LABEL_83;
        v36 = *(_QWORD *)(v35 + 8);
        v37 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_73;
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          result = *v34;
          if (!*v34)
            goto LABEL_85;
          v38 = *(_QWORD *)result;
          if (*(_QWORD *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0)
              goto LABEL_77;
            v39 = 2 * v38;
            if (v39 <= v37)
              v40 = v37;
            else
              v40 = v39;
            sub_2150977DC(result, v40, (uint64_t *)&v62);
            sub_2150983B8(*(_QWORD **)(v33 + 16));
            *(_OWORD *)(v33 + 16) = v62;
          }
        }
        else
        {
          result = swift_beginAccess();
          v41 = (uint64_t *)*v34;
          if (!v41)
            goto LABEL_86;
          v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0)
              goto LABEL_78;
            if (2 * v42 <= v37)
              v42 = v37;
            else
              v42 *= 2;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
          v43 = swift_allocObject();
          sub_21509691C((uint64_t)v41, v42, (uint64_t *)&v62);
          *(_OWORD *)(v43 + 16) = v62;
          swift_release();
          v70 = v43;
          v33 = v43;
        }
        result = swift_beginAccess();
        v44 = *(_QWORD **)(v33 + 16);
        if (!v44)
          goto LABEL_84;
        v45 = *v44 + 7;
        if (__OFADD__(*v44, 7))
          goto LABEL_74;
        v46 = v44 + 8;
        if (v45 < 0)
          v45 = *v44 + 14;
        v47 = v45 >> 3;
        v49 = v47 - 1;
        v48 = v47 < 1;
        v50 = v47 + 62;
        if (!v48)
          v50 = v49;
        v51 = (unint64_t)&v46[2 * v44[1]] + (v50 & 0xFFFFFFFFFFFFFFC0);
        *(_QWORD *)(v51 + 64) = v4;
        *(_QWORD *)(v51 + 72) = v32;
        v52 = v44[1];
        v53 = v52 + 7;
        if (v52 >= 0)
          v53 = v44[1];
        v54 = v53 >> 3;
        v55 = v52 - (v53 & 0xFFFFFFFFFFFFFFF8);
        if (v55 >= 0)
          v56 = 1 << v55;
        else
          v56 = 0;
        *((_BYTE *)v46 + v54) |= v56;
        v28 = __OFADD__(v52, 1);
        v57 = v52 + 1;
        if (v28)
        {
          __break(1u);
LABEL_66:
          swift_bridgeObjectRelease();
          v6 = (uint64_t)(v2 + 11);
          goto LABEL_67;
        }
        v44[1] = v57;
        sub_215046750((uint64_t)&v59, &qword_254DA7868);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
        sub_215046750((uint64_t)&v66, &qword_254DA7868);
        v4 = &v59;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
    }
    sub_215046750((uint64_t)&v66, &qword_254DA7868);
    v14 = v70;
    v15 = (uint64_t *)(v70 + 16);
    result = swift_beginAccess();
    v17 = *(_QWORD *)(v14 + 16);
    if (!v17)
      goto LABEL_79;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v15;
      if (!*v15)
        goto LABEL_81;
      v20 = *(_QWORD *)result;
      if (*(_QWORD *)result < v19)
      {
        if (v20 + 0x4000000000000000 < 0)
          goto LABEL_75;
        v21 = 2 * v20;
        if (v21 <= v19)
          v22 = v19;
        else
          v22 = v21;
        sub_2150977DC(result, v22, (uint64_t *)&v66);
        sub_2150983B8(*(_QWORD **)(v14 + 16));
        *(_OWORD *)(v14 + 16) = v66;
      }
    }
    else
    {
      result = swift_beginAccess();
      v23 = (uint64_t *)*v15;
      if (!v23)
        goto LABEL_82;
      v24 = *v23;
      if (*v23 < v19)
      {
        if (v24 + 0x4000000000000000 < 0)
          goto LABEL_76;
        if (2 * v24 <= v19)
          v24 = v19;
        else
          v24 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D428);
      v25 = swift_allocObject();
      sub_21509691C((uint64_t)v23, v24, (uint64_t *)&v66);
      *(_OWORD *)(v25 + 16) = v66;
      swift_release();
      v70 = v25;
      v14 = v25;
    }
    result = swift_beginAccess();
    v26 = *(_QWORD *)(v14 + 16);
    if (!v26)
      goto LABEL_80;
    v27 = *(_QWORD *)(v26 + 16);
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_71;
    *(_QWORD *)(v26 + 16) = v29;
    v30 = *(_QWORD *)(v26 + 8);
    v28 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v28)
      goto LABEL_72;
    *(_QWORD *)(v26 + 8) = v31;
    sub_215046750((uint64_t)&v59, &qword_254DA7868);
LABEL_3:
    if (v7 == ++v8)
      goto LABEL_66;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t sub_2150B44F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  void *v64;
  _OWORD v65[2];
  _UNKNOWN **v66;
  _BYTE v67[32];
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[32];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;

  v2 = v1;
  v4 = v1[10];
  v75 = v1[9];
  *(_QWORD *)&v76 = v4;
  swift_bridgeObjectRetain();
  *((_QWORD *)&v76 + 1) = sub_215044B40(MEMORY[0x24BEE4AF8]);
  sub_2150EE0D0(0);
  v5 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    goto LABEL_79;
  v60 = v2 + 11;
  v63 = a1 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v61 = v6;
  v62 = v2;
  while (1)
  {
    v9 = *(_QWORD *)(v63 + 8 * v7);
    if (*(_QWORD *)(v9 + 16))
    {
      v11 = v2[9];
      v10 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_21502F840(v11, v10);
      if ((v13 & 1) != 0)
        sub_21504679C(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)v65);
      else
        memset(v65, 0, sizeof(v65));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v65, 0, sizeof(v65));
    }
    sub_21504670C((uint64_t)v65, (uint64_t)&v73, &qword_254DA7868);
    if (!v74)
      goto LABEL_13;
    sub_21504670C((uint64_t)&v73, (uint64_t)v72, &qword_254DA7868);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
    sub_215057C90();
    if (swift_dynamicCast())
      break;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CF8);
    if (!swift_dynamicCast())
    {
      sub_215046750((uint64_t)v65, &qword_254DA7868);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
      sub_215046750((uint64_t)&v73, &qword_254DA7868);
      return 0;
    }
    v32 = v71;
    v33 = *(_QWORD *)(v71 + 16);
    if (v33)
    {
      v70 = MEMORY[0x24BEE4AF8];
      sub_215038E4C(0, v33, 0);
      v34 = v32 + 32;
      while (1)
      {
        sub_21504670C(v34, (uint64_t)v67, &qword_254DA7868);
        sub_21504670C((uint64_t)v67, (uint64_t)&v68, &qword_254DA7868);
        if (!*((_QWORD *)&v69 + 1))
          break;
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_42;

        v68 = 0u;
        v69 = 0u;
LABEL_43:
        sub_215046750((uint64_t)v67, &qword_254DA7868);
        v35 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_215038E4C(0, *(_QWORD *)(v35 + 16) + 1, 1);
          v35 = v70;
        }
        v37 = *(_QWORD *)(v35 + 16);
        v36 = *(_QWORD *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_215038E4C((_QWORD *)(v36 > 1), v37 + 1, 1);
          v35 = v70;
        }
        *(_QWORD *)(v35 + 16) = v37 + 1;
        sub_215057D10((uint64_t)&v68, v35 + 32 * v37 + 32);
        v34 += 32;
        if (!--v33)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
      sub_215046750((uint64_t)&v68, &qword_254DA7868);
LABEL_42:
      sub_21504670C((uint64_t)v67, (uint64_t)&v68, &qword_254DA7868);
      goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
LABEL_50:
    v38 = *((_QWORD *)&v76 + 1);
    v39 = (uint64_t *)(*((_QWORD *)&v76 + 1) + 16);
    result = swift_beginAccess();
    v40 = *(_QWORD *)(v38 + 16);
    v6 = v61;
    v2 = v62;
    if (!v40)
      goto LABEL_95;
    v41 = *(_QWORD *)(v40 + 8);
    v42 = v41 + 1;
    if (__OFADD__(v41, 1))
      goto LABEL_84;
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v39;
      if (!*v39)
        goto LABEL_97;
      v43 = *(_QWORD *)result;
      if (*(_QWORD *)result < v42)
      {
        if (v43 + 0x4000000000000000 < 0)
          goto LABEL_89;
        v44 = 2 * v43;
        if (v44 <= v42)
          v45 = v42;
        else
          v45 = v44;
        sub_2150977D8(result, v45, (uint64_t *)&v68);
        sub_215098710(*(_QWORD **)(v38 + 16), *(_QWORD *)(v38 + 24));
        *(_OWORD *)(v38 + 16) = v68;
      }
    }
    else
    {
      result = swift_beginAccess();
      v46 = (uint64_t *)*v39;
      if (!v46)
        goto LABEL_98;
      v47 = *v46;
      if (*v46 < v42)
      {
        if (v47 + 0x4000000000000000 < 0)
          goto LABEL_90;
        if (2 * v47 <= v42)
          v47 = v42;
        else
          v47 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7798);
      v48 = swift_allocObject();
      sub_21509678C(&v68, v46, *(_QWORD *)(v38 + 24), v47);
      *(_OWORD *)(v48 + 16) = v68;
      swift_release();
      *((_QWORD *)&v76 + 1) = v48;
      v38 = v48;
    }
    result = swift_beginAccess();
    v49 = *(_QWORD **)(v38 + 16);
    if (!v49)
      goto LABEL_96;
    v50 = *v49 + 7;
    if (__OFADD__(*v49, 7))
      goto LABEL_85;
    v51 = v49 + 8;
    if (v50 < 0)
      v50 = *v49 + 14;
    v52 = v50 >> 3;
    v54 = v52 - 1;
    v53 = v52 < 1;
    v55 = v52 + 62;
    if (!v53)
      v55 = v54;
    v56 = v49[1];
    *(_QWORD *)((char *)&v51[v56 + 8] + (v55 & 0xFFFFFFFFFFFFC0)) = v35;
    v57 = v56 - (v55 & 0xFFFFFFFFFFFFFFF8);
    if (v57 >= 0)
      v58 = 1 << v57;
    else
      v58 = 0;
    *((_BYTE *)v51 + v56 / 8) |= v58;
    if (__OFADD__(v56, 1))
      goto LABEL_86;
    v49[1] = v56 + 1;
    swift_bridgeObjectRelease();
    sub_215046750((uint64_t)v65, &qword_254DA7868);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    v8 = &v73;
LABEL_3:
    sub_215046750((uint64_t)v8, &qword_254DA7868);
    if (++v7 == v6)
    {
      swift_bridgeObjectRelease();
      v5 = (uint64_t)v60;
LABEL_79:
      v59 = v75;
      *((_QWORD *)&v65[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D00);
      v66 = &off_24D2A4440;
      *(_QWORD *)&v65[0] = v59;
      *(_OWORD *)((char *)v65 + 8) = v76;
      sub_2150668CC((uint64_t)v65, v5);
      return 1;
    }
  }

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
LABEL_13:
  sub_215046750((uint64_t)&v73, &qword_254DA7868);
  v14 = *((_QWORD *)&v76 + 1);
  v15 = (uint64_t *)(*((_QWORD *)&v76 + 1) + 16);
  result = swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (!v17)
    goto LABEL_91;
  v18 = *(_QWORD *)(v17 + 8);
  v19 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v15;
      if (!*v15)
        goto LABEL_93;
      v20 = *(_QWORD *)result;
      if (*(_QWORD *)result < v19)
      {
        if (v20 + 0x4000000000000000 < 0)
          goto LABEL_87;
        v21 = 2 * v20;
        if (v21 <= v19)
          v22 = v19;
        else
          v22 = v21;
        sub_2150977D8(result, v22, (uint64_t *)&v73);
        sub_215098710(*(_QWORD **)(v14 + 16), *(_QWORD *)(v14 + 24));
        *(_OWORD *)(v14 + 16) = v73;
      }
    }
    else
    {
      result = swift_beginAccess();
      v23 = (uint64_t *)*v15;
      if (!v23)
        goto LABEL_94;
      v24 = *v23;
      if (*v23 < v19)
      {
        if (v24 + 0x4000000000000000 < 0)
          goto LABEL_88;
        if (2 * v24 <= v19)
          v24 = v19;
        else
          v24 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7798);
      v25 = swift_allocObject();
      sub_21509678C(&v73, v23, *(_QWORD *)(v14 + 24), v24);
      *(_OWORD *)(v25 + 16) = v73;
      swift_release();
      *((_QWORD *)&v76 + 1) = v25;
      v14 = v25;
    }
    result = swift_beginAccess();
    v26 = *(_QWORD *)(v14 + 16);
    if (!v26)
      goto LABEL_92;
    v27 = *(_QWORD *)(v26 + 16);
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_82;
    *(_QWORD *)(v26 + 16) = v29;
    v30 = *(_QWORD *)(v26 + 8);
    v28 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v28)
      goto LABEL_83;
    *(_QWORD *)(v26 + 8) = v31;
    v8 = v65;
    goto LABEL_3;
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
  return result;
}

uint64_t sub_2150B4C48(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  int64_t v61;
  _OWORD v62[2];
  _UNKNOWN **v63;
  id v64;
  __int128 v65;
  __int128 v66;
  id v67[5];
  _BYTE v68[32];
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;

  v2 = v1;
  v4 = v1[10];
  v71 = v1[9];
  *(_QWORD *)&v72 = v4;
  swift_bridgeObjectRetain();
  *((_QWORD *)&v72 + 1) = sub_215044D8C(MEMORY[0x24BEE4AF8]);
  sub_2150EE0F4(0);
  v5 = (uint64_t)(v1 + 11);
  sub_21501EEF0(v2 + 4, v2 + 11);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    goto LABEL_66;
  v56 = v2 + 11;
  v7 = a1 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
  v58 = v6;
  v59 = v2;
  v57 = v7;
  while (1)
  {
    v11 = *(_QWORD *)(v7 + 8 * v8);
    if (*(_QWORD *)(v11 + 16))
    {
      v13 = v2[9];
      v12 = v2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_21502F840(v13, v12);
      if ((v15 & 1) != 0)
        sub_21504679C(*(_QWORD *)(v11 + 56) + 32 * v14, (uint64_t)v62);
      else
        memset(v62, 0, sizeof(v62));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v62, 0, sizeof(v62));
    }
    sub_21504670C((uint64_t)v62, (uint64_t)&v69, &qword_254DA7868);
    if (!v70)
      goto LABEL_14;
    sub_21504670C((uint64_t)&v69, (uint64_t)v68, &qword_254DA7868);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CC8);
    sub_215057C90();
    if (!swift_dynamicCast())
      break;

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
LABEL_14:
    v16 = v8;
    sub_215046750((uint64_t)&v69, &qword_254DA7868);
    v17 = *((_QWORD *)&v72 + 1);
    v18 = (uint64_t *)(*((_QWORD *)&v72 + 1) + 16);
    result = swift_beginAccess();
    v20 = *(_QWORD *)(v17 + 16);
    if (!v20)
      goto LABEL_76;
    v21 = *(_QWORD *)(v20 + 8);
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      result = *v18;
      if (!*v18)
        goto LABEL_78;
      v23 = *(_QWORD *)result;
      if (*(_QWORD *)result < v22)
      {
        if (v23 + 0x4000000000000000 < 0)
          goto LABEL_74;
        v24 = 2 * v23;
        if (v24 <= v22)
          v25 = v22;
        else
          v25 = v24;
        sub_2150977D8(result, v25, (uint64_t *)&v69);
        sub_21509871C(*(_QWORD **)(v17 + 16), *(_QWORD *)(v17 + 24));
        *(_OWORD *)(v17 + 16) = v69;
      }
    }
    else
    {
      result = swift_beginAccess();
      v26 = (uint64_t *)*v18;
      if (!v26)
        goto LABEL_79;
      v27 = *v26;
      if (*v26 < v22)
      {
        if (v27 + 0x4000000000000000 < 0)
          goto LABEL_75;
        if (2 * v27 <= v22)
          v27 = v22;
        else
          v27 *= 2;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA77A0);
      v28 = swift_allocObject();
      sub_21509678C(&v69, v26, *(_QWORD *)(v17 + 24), v27);
      *(_OWORD *)(v28 + 16) = v69;
      swift_release();
      *((_QWORD *)&v72 + 1) = v28;
      v17 = v28;
    }
    result = swift_beginAccess();
    v29 = *(_QWORD *)(v17 + 16);
    if (!v29)
      goto LABEL_77;
    v30 = *(_QWORD *)(v29 + 16);
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_71;
    *(_QWORD *)(v29 + 16) = v32;
    v33 = *(_QWORD *)(v29 + 8);
    v31 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v31)
      goto LABEL_72;
    v10 = v16;
    *(_QWORD *)(v29 + 8) = v34;
    sub_215046750((uint64_t)v62, &qword_254DA7868);
LABEL_4:
    v8 = v10 + 1;
    if (v8 == v6)
    {
      swift_bridgeObjectRelease();
      v5 = (uint64_t)v56;
LABEL_66:
      v55 = v71;
      *((_QWORD *)&v62[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CF0);
      v63 = &off_24D2A4440;
      *(_QWORD *)&v62[0] = v55;
      *(_OWORD *)((char *)v62 + 8) = v72;
      sub_2150668CC((uint64_t)v62, v5);
      return 1;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CD8);
  if (!swift_dynamicCast())
  {
    sub_215046750((uint64_t)v62, &qword_254DA7868);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_215046750((uint64_t)&v69, &qword_254DA7868);
    return 0;
  }
  v60 = v8;
  v35 = v67[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CE8);
  result = sub_215130328();
  v36 = (_QWORD *)result;
  v37 = 0;
  v38 = 1 << v35[32];
  v40 = v35 + 64;
  v39 = *((_QWORD *)v35 + 8);
  if (v38 < 64)
    v41 = ~(-1 << v38);
  else
    v41 = -1;
  v42 = v41 & v39;
  v61 = (unint64_t)(v38 + 63) >> 6;
  v43 = result + 64;
  if ((v41 & v39) != 0)
  {
LABEL_40:
    v44 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v45 = v44 | (v37 << 6);
    goto LABEL_57;
  }
  while (2)
  {
    v46 = v37 + 1;
    if (__OFADD__(v37, 1))
      goto LABEL_69;
    if (v46 >= v61)
      goto LABEL_3;
    v47 = *(_QWORD *)&v40[8 * v46];
    ++v37;
    if (v47)
      goto LABEL_56;
    v37 = v46 + 1;
    if (v46 + 1 >= v61)
      goto LABEL_3;
    v47 = *(_QWORD *)&v40[8 * v37];
    if (v47)
      goto LABEL_56;
    v37 = v46 + 2;
    if (v46 + 2 >= v61)
      goto LABEL_3;
    v47 = *(_QWORD *)&v40[8 * v37];
    if (v47)
      goto LABEL_56;
    v37 = v46 + 3;
    if (v46 + 3 >= v61)
      goto LABEL_3;
    v47 = *(_QWORD *)&v40[8 * v37];
    if (v47)
    {
LABEL_56:
      v42 = (v47 - 1) & v47;
      v45 = __clz(__rbit64(v47)) + (v37 << 6);
LABEL_57:
      v49 = (uint64_t *)(*((_QWORD *)v35 + 6) + 16 * v45);
      v51 = *v49;
      v50 = v49[1];
      sub_21504670C(*((_QWORD *)v35 + 7) + 32 * v45, (uint64_t)v67, &qword_254DA7868);
      sub_21504670C((uint64_t)v67, (uint64_t)&v65, &qword_254DA7868);
      if (*((_QWORD *)&v66 + 1))
      {
        swift_bridgeObjectRetain();
        if ((swift_dynamicCast() & 1) != 0)
        {

          v65 = 0u;
          v66 = 0u;
LABEL_62:
          sub_215046750((uint64_t)v67, &qword_254DA7868);
          *(_QWORD *)(v43 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
          v52 = (_QWORD *)(v36[6] + 16 * v45);
          *v52 = v51;
          v52[1] = v50;
          result = sub_215057D10((uint64_t)&v65, v36[7] + 32 * v45);
          v53 = v36[2];
          v31 = __OFADD__(v53, 1);
          v54 = v53 + 1;
          if (v31)
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          v36[2] = v54;
          if (v42)
            goto LABEL_40;
          continue;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_215046750((uint64_t)&v65, &qword_254DA7868);
      }
      sub_21504670C((uint64_t)v67, (uint64_t)&v65, &qword_254DA7868);
      goto LABEL_62;
    }
    break;
  }
  v48 = v46 + 4;
  if (v48 >= v61)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    v9 = swift_bridgeObjectRetain();
    sub_2150EE778(v9);
    swift_release_n();
    sub_215046750((uint64_t)v62, &qword_254DA7868);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_215046750((uint64_t)&v69, &qword_254DA7868);
    v6 = v58;
    v2 = v59;
    v7 = v57;
    v10 = v60;
    goto LABEL_4;
  }
  v47 = *(_QWORD *)&v40[8 * v48];
  if (v47)
  {
    v37 = v48;
    goto LABEL_56;
  }
  while (1)
  {
    v37 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v37 >= v61)
      goto LABEL_3;
    v47 = *(_QWORD *)&v40[8 * v37];
    ++v48;
    if (v47)
      goto LABEL_56;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_2150B52C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21501EE90(v1 + 88, a1);
}

uint64_t sub_2150B52CC(uint64_t a1)
{
  return sub_2150B16BC(a1);
}

char *sub_2150B52E0(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned __int8 **v20;
  uint64_t v21;

  v6 = sub_21512FB0C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_2150550F4(a1, a2);
  if (!v2)
  {
    v9 = v7;
    v21 = *(_QWORD *)(v7 + 16);
    if (v21)
    {
      v20 = a1;
      v10 = 0;
      v11 = *a1;
      v3 = (char *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        v11 += *(_QWORD *)(v9 + 8 * v10 + 32);
        sub_21512FB00();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D50);
        sub_21506BA98();
        v12 = sub_21512FAA0();
        if (!v13)
          break;
        v14 = v12;
        v15 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_21502DDE0(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
        v17 = *((_QWORD *)v3 + 2);
        v16 = *((_QWORD *)v3 + 3);
        if (v17 >= v16 >> 1)
          v3 = sub_21502DDE0((char *)(v16 > 1), v17 + 1, 1, v3);
        ++v10;
        *((_QWORD *)v3 + 2) = v17 + 1;
        v18 = &v3[16 * v17];
        *((_QWORD *)v18 + 4) = v14;
        *((_QWORD *)v18 + 5) = v15;
        if (v21 == v10)
        {
          swift_bridgeObjectRelease();
          *v20 = v11;
          return v3;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v20 = v11;
      sub_21501D914();
      swift_allocError();
      *(_QWORD *)v19 = 0xD000000000000020;
      *(_QWORD *)(v19 + 8) = 0x80000002151316F0;
      *(_BYTE *)(v19 + 16) = 4;
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (char *)MEMORY[0x24BEE4AF8];
    }
  }
  return v3;
}

int64_t sub_2150B5500(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  int64_t result;
  int64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = sub_21512FB0C();
  MEMORY[0x24BDAC7A8](v5);
  result = sub_21501C570(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v7 = result;
    v28 = a2;
    v8 = sub_21502DDE0(0, result, 0, MEMORY[0x24BEE4AF8]);
    if (v7)
    {
      while (1)
      {
        result = sub_21501C570(a1);
        if (result < 0)
          break;
        *a1 += result;
        sub_21512FB00();
        v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D50);
        sub_21506BA98();
        v9 = sub_21512FAA0();
        if (!v10)
        {
          sub_21501D914();
          swift_allocError();
          *(_QWORD *)v27 = 0xD000000000000020;
          *(_QWORD *)(v27 + 8) = 0x80000002151316F0;
          *(_BYTE *)(v27 + 16) = 4;
          swift_willThrow();
          goto LABEL_18;
        }
        v11 = v9;
        v12 = v10;
        v14 = *((_QWORD *)v8 + 2);
        v13 = *((_QWORD *)v8 + 3);
        v2 = v14 + 1;
        if (v14 >= v13 >> 1)
          v8 = sub_21502DDE0((char *)(v13 > 1), v14 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v2;
        v15 = &v8[16 * v14];
        *((_QWORD *)v15 + 4) = v11;
        *((_QWORD *)v15 + 5) = v12;
        if (!--v7)
          goto LABEL_8;
      }
      __break(1u);
      goto LABEL_22;
    }
LABEL_8:
    v16 = sub_2150550F4(a1, v28);
    if (v30)
    {
LABEL_18:
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = v16;
      v18 = *(_QWORD *)(v16 + 16);
      if (v18)
      {
        v29 = MEMORY[0x24BEE4AF8];
        result = (int64_t)sub_215038BC8(0, v18, 0);
        v19 = 0;
        v2 = v29;
        while (1)
        {
          v20 = *(_QWORD *)(v17 + 8 * v19 + 32);
          if ((v20 & 0x8000000000000000) != 0)
            break;
          if (v20 >= *((_QWORD *)v8 + 2))
            goto LABEL_23;
          v21 = &v8[16 * v20 + 32];
          v22 = *(_QWORD *)v21;
          v23 = *((_QWORD *)v21 + 1);
          v25 = *(_QWORD *)(v29 + 16);
          v24 = *(_QWORD *)(v29 + 24);
          result = swift_bridgeObjectRetain();
          if (v25 >= v24 >> 1)
            result = (int64_t)sub_215038BC8((char *)(v24 > 1), v25 + 1, 1);
          ++v19;
          *(_QWORD *)(v29 + 16) = v25 + 1;
          v26 = v29 + 16 * v25;
          *(_QWORD *)(v26 + 32) = v22;
          *(_QWORD *)(v26 + 40) = v23;
          if (v18 == v19)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v2;
          }
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return v2;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_2150B57D4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;

  v63 = a5;
  v52 = a2;
  v53 = a6;
  v61 = a1;
  v51 = *(_QWORD **)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v62 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v60 = (char *)&v50 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - v12;
  v14 = sub_215130064();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v50 - v16;
  v18 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v24 = (char *)&v50 - v23;
  v67 = sub_21512F818();
  v66 = sub_21512F824();
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v61, a4);
  sub_21512FC20();
  v25 = AssociatedTypeWitness;
  v26 = v52;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_215130094();
  v27 = v51;
  v28 = (unsigned int (*)(char *, uint64_t, uint64_t))v51[6];
  v61 = v17;
  v29 = v17;
  v30 = v53;
  v58 = v28;
  v31 = 0;
  if (v28(v29, 1, a3) == 1)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v25);
    swift_bridgeObjectRetain();
    v47 = sub_21512F884();
    result = swift_bridgeObjectRelease();
    if (v26 < 1 || (v48 = __OFADD__(v47, 1), ++v47, !v48))
    {
      v49 = v66;
      *v30 = v31;
      v30[1] = v26;
      v30[2] = v47;
      v30[3] = v49;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v56 = v24;
    v57 = v25;
    v50 = v22;
    v32 = 0;
    v33 = 0;
    v55 = (uint64_t (*)(char *, char *, uint64_t))v27[4];
    v34 = (uint64_t)v60;
    result = v55(v13, v61, a3);
    while (!__OFADD__(v32, 1))
    {
      v54 = v32 + 1;
      v38 = (void (*)(uint64_t, char *, uint64_t))v27[2];
      v38(v34, v13, a3);
      v39 = v67;
      if (*(_QWORD *)(v67 + 16) && (v40 = sub_2150D9150(v34, a3, v63), (v41 & 1) != 0))
        v42 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v40);
      else
        v42 = 0;
      v43 = v27;
      v44 = (uint64_t (*)(uint64_t, uint64_t))v27[1];
      result = v44(v34, a3);
      v36 = v42 + 1;
      if (__OFADD__(v42, 1))
        goto LABEL_21;
      v38((uint64_t)v62, v13, a3);
      v64 = v42 + 1;
      v65 = 0;
      sub_21512F890();
      sub_21512F8A8();
      if (v33 >= v36)
      {
        if (v36 == v33)
        {
          v38((uint64_t)v62, v13, a3);
          sub_21512FD40();
          sub_21512FD28();
        }
        v44((uint64_t)v13, a3);
        v36 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_2150B6074(a3, a3);
        swift_allocObject();
        v45 = sub_21512FCBC();
        v38(v46, v13, a3);
        sub_2150C8744();
        v44((uint64_t)v13, a3);
        v66 = v45;
      }
      v34 = (uint64_t)v60;
      v37 = v61;
      sub_215130094();
      ++v32;
      v33 = v36;
      v27 = v43;
      if (v58(v37, 1, a3) == 1)
      {
        v26 = v52;
        v30 = v53;
        v24 = v56;
        v25 = v57;
        v22 = v50;
        v31 = v54;
        goto LABEL_17;
      }
      result = v55(v13, v37, a3);
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CategoricalSummary.init(someCount:noneCount:uniqueCount:mode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t CategoricalSummary.someCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CategoricalSummary.someCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*CategoricalSummary.someCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.noneCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CategoricalSummary.noneCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*CategoricalSummary.noneCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.totalCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  result = *v0 + v1;
  if (__OFADD__(*v0, v1))
    __break(1u);
  return result;
}

uint64_t CategoricalSummary.uniqueCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CategoricalSummary.uniqueCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*CategoricalSummary.uniqueCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.mode.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CategoricalSummary.mode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CategoricalSummary.mode.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_21512FCEC();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = result;
  return result;
}

uint64_t CategoricalSummary.debugDescription.getter()
{
  uint64_t v0;

  sub_215130178();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v0 = sub_21512FD40();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE12F8], v0);
  sub_215130424();
  return 0;
}

uint64_t CategoricalSummary.hash(into:)()
{
  sub_2151305B0();
  sub_2151305B0();
  sub_2151305B0();
  swift_bridgeObjectRetain();
  sub_21512FD4C();
  return swift_bridgeObjectRelease();
}

uint64_t static CategoricalSummary.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
    return sub_21512FD58();
  else
    return 0;
}

uint64_t CategoricalSummary.hashValue.getter()
{
  sub_2151305A4();
  CategoricalSummary.hash(into:)();
  return sub_2151305EC();
}

uint64_t sub_2150B6024()
{
  sub_2151305A4();
  CategoricalSummary.hash(into:)();
  return sub_2151305EC();
}

uint64_t sub_2150B6068(_QWORD *a1, _QWORD *a2)
{
  return static CategoricalSummary.== infix(_:_:)(a1, a2);
}

uint64_t sub_2150B6074(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8530);
  else
    return sub_2151303C4();
}

void sub_2150B60C0()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150B60D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2150B60D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2150B610C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2150B6168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2150B61A0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2150B61E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CategoricalSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CategoricalSummary);
}

uint64_t sub_2150B6234@<X0>(char *a1@<X0>, Swift::Int a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  Swift::Int v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  if (!*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    v16 = 0;
    v18 = 2;
    goto LABEL_7;
  }
  sub_21501EE90(a3 + 32, (uint64_t)v23);
  v12 = v24;
  v13 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v14 = *(_QWORD *)(v13 + 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(v12, v14);
  result = sub_21501EA34((uint64_t)v23);
  if (v16 < 0)
  {
    __break(1u);
    return result;
  }
  if (!v16)
    goto LABEL_6;
  v18 = 0;
LABEL_7:
  sub_21508C520(0, v16, v18);
  v23[0] = a3;
  v23[1] = a4;
  if ((v20 & 1) != 0)
    v21 = 0;
  else
    v21 = v19;
  v23[2] = a5;
  v24 = 0;
  v25 = v16;
  v26 = v18;
  v27 = 0;
  v28 = v21;
  v22 = DataFrame.Rows.index(after:)(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v16, v18);
  return sub_21508B144(a1, v22, a3, a4, a5, a6);
}

uint64_t sub_2150B63A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int64_t v15;
  uint64_t (*v16)(uint64_t, int64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t **v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t **v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  uint64_t v76;
  int64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t **v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t **v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t inited;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t **v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t *v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v10 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v10);
  v118 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = *(_QWORD *)(a2 + 16);
  if (!v117)
    return 0;
  v120 = a1;
  v115 = a2 + 32;
  sub_21501EE90(a2 + 32, (uint64_t)&v141);
  v12 = v143;
  v13 = v144;
  v14 = __swift_project_boxed_opaque_existential_1(&v141, v143);
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(uint64_t (**)(uint64_t, int64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(v12, v15);
  sub_21501EA34((uint64_t)&v141);
  if (v17 < 0)
    goto LABEL_120;
  v18 = 2 * (v17 == 0);
  sub_2150437A8(0, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v17, v18);
  v19 = sub_2150EBC3C(0, v17, v18);
  sub_21501EF2C(0, v17, v18);
  v20 = v120;
  v15 = sub_2150BA5C4(*(_QWORD *)(v120 + 16), v19);
  v22 = v21;
  v4 = v23;
  v5 = (_QWORD *)v24;
  v25 = v118;
  sub_2150BB83C(v21, v23, v24, v20, a2, v118);
  v111 = v15;
  v26 = sub_2150BBDB4(v15, v22, v4, v5, v25, a2, a3, a4);
  v27 = *((_QWORD *)v26 + 2);
  v28 = v117 + *(unsigned __int8 *)(v20 + 25);
  v136 = (unint64_t)v5;
  v137 = v4;
  if (v27 >= v28)
  {
    v34 = 0;
    v31 = 0;
    v5 = 0;
    v32 = 0;
    v132 = 0;
    v20 = 0;
    v126 = 0;
    goto LABEL_12;
  }
  if (v27)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v29 = *((_QWORD *)v26 + 2);
      if (v29)
        goto LABEL_7;
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
  }
  else
  {
    __break(1u);
  }
  v26 = sub_21501E4E8((uint64_t)v26);
  v29 = *((_QWORD *)v26 + 2);
  if (!v29)
    goto LABEL_128;
LABEL_7:
  v27 = v29 - 1;
  v30 = &v26[48 * v29 - 48];
  v31 = *((_QWORD *)v30 + 4);
  v5 = (_QWORD *)*((_QWORD *)v30 + 5);
  v32 = *((_QWORD *)v30 + 6);
  v132 = *((_QWORD *)v30 + 7);
  v20 = *((_QWORD *)v30 + 8);
  v33 = *((_QWORD *)v30 + 9);
  *((_QWORD *)v26 + 2) = v27;
  v126 = v33;
  v34 = v33 + 2;
  if (__OFADD__(v33, 2))
  {
    __break(1u);
    return 0;
  }
LABEL_12:
  v124 = v32;
  v125 = (uint64_t *)v31;
  v112 = a4;
  v113 = a3;
  v114 = a2;
  v14 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v119 = v34;
  v134 = v20;
  if (v27)
  {
    v141 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BE4(0, v27, 0);
    v36 = 72;
    v14 = (uint64_t *)v141;
    do
    {
      v37 = *(_QWORD *)&v26[v36];
      v38 = v37 + 2;
      if (__OFADD__(v37, 2))
      {
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
      v141 = (uint64_t)v14;
      a3 = v14[2];
      v39 = v14[3];
      v15 = a3 + 1;
      if (a3 >= v39 >> 1)
      {
        sub_215038BE4((char *)(v39 > 1), a3 + 1, 1);
        v14 = (uint64_t *)v141;
      }
      v14[2] = v15;
      v14[a3 + 4] = v38;
      v36 += 48;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v34 = v119;
    v20 = v134;
  }
  v139 = 0;
  v140 = 0xE000000000000000;
  v116 = v14;
  v14 = (uint64_t *)sub_215126D94(qword_24D2A2AC0, (uint64_t)v14, 9278946, 0xA300000000000000, v34);
  v15 = v40;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  v139 = v14;
  v140 = v15;
  swift_bridgeObjectRetain();
  v41 = sub_21512FB48();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v41, 1))
    goto LABEL_121;
  v109 = v41 - 1;
  v42 = *((_QWORD *)v26 + 2);
  a3 = MEMORY[0x24BEE4AF8];
  v133 = v26;
  v123 = v5;
  if (v42)
  {
    v138 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BC8(0, v42, 0);
    v4 = v138;
    v43 = (uint64_t **)(v26 + 72);
    do
    {
      v44 = (uint64_t)*(v43 - 5);
      v15 = (int64_t)*(v43 - 4);
      a3 = (unint64_t)*(v43 - 2);
      a4 = (uint64_t)*(v43 - 1);
      v14 = *v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v14 >= sub_21512FB48())
      {
        v45 = sub_21512FB48();
        if (__OFSUB__(v14, v45))
          goto LABEL_116;
        MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v14 - v45);
        v5 = v46;
        v141 = v44;
        v142 = v15;
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = v133;
        swift_bridgeObjectRelease();
        v44 = v141;
        v15 = v142;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v47 = v4;
      v138 = v4;
      v49 = *(_QWORD *)(v4 + 16);
      v48 = *(_QWORD *)(v4 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_215038BC8((char *)(v48 > 1), v49 + 1, 1);
        v47 = v138;
      }
      v43 += 6;
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v4 = v47;
      v50 = v47 + 16 * v49;
      *(_QWORD *)(v50 + 32) = v44;
      *(_QWORD *)(v50 + 40) = v15;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    v20 = v134;
    a3 = MEMORY[0x24BEE4AF8];
    v5 = v123;
    if (v123)
      goto LABEL_30;
LABEL_38:
    a4 = (uint64_t)v26;
    goto LABEL_39;
  }
  v4 = MEMORY[0x24BEE4AF8];
  if (!v5)
    goto LABEL_38;
LABEL_30:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = (int64_t)v125;
  v14 = v125;
  v15 = (int64_t)v5;
  a4 = (uint64_t)v26;
  if (v126 < sub_21512FB48())
    goto LABEL_33;
  v51 = sub_21512FB48();
  if (!__OFSUB__(v126, v51))
  {
    MEMORY[0x2199DB744](32, 0xE100000000000000, v126 - v51);
    v141 = v27;
    v142 = (unint64_t)v5;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = (uint64_t *)v141;
    v15 = v142;
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_34;
    goto LABEL_125;
  }
  while (2)
  {
    __break(1u);
LABEL_133:
    v27 = (int64_t)sub_21502DDE0(0, *(_QWORD *)(v27 + 16) + 1, 1, (char *)v27);
LABEL_60:
    v70 = *(_QWORD *)(v27 + 16);
    v69 = *(_QWORD *)(v27 + 24);
    if (v70 >= v69 >> 1)
      v27 = (int64_t)sub_21502DDE0((char *)(v69 > 1), v70 + 1, 1, (char *)v27);
    *(_QWORD *)(v27 + 16) = v70 + 1;
    v71 = v27 + 16 * v70;
    *(_QWORD *)(v71 + 32) = v15;
    *(_QWORD *)(v71 + 40) = v20;
LABEL_63:
    v141 = v27;
    sub_21512F9B0();
    swift_bridgeObjectRelease();
    v141 = 32;
    v142 = 0xE100000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v141 = 8623330;
    v142 = 0xA300000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v119;
    while (1)
    {
      v15 = sub_215126D94(qword_24D2A2B20, (uint64_t)v116, 9278946, 0xA300000000000000, v57);
      swift_arrayDestroy();
      v14 = (uint64_t *)&v139;
      sub_21512FB90();
      swift_bridgeObjectRelease();
      v72 = (v136 >> 1) - v137;
      if (__OFSUB__(v136 >> 1, v137))
        goto LABEL_122;
      if ((v72 & 0x8000000000000000) != 0)
        goto LABEL_123;
      v73 = v134;
      v131 = (v136 >> 1) - v137;
      if (v72)
      {
        v74 = 0;
        v121 = v134 + 32;
        v75 = *(_QWORD *)(a4 + 16);
        v76 = 8819938;
        v128 = 8557794;
        if (!v119)
          v76 = 8557794;
        v127 = v76;
        v77 = v131;
        v122 = (uint64_t **)(a4 + 72);
        v136 = v75;
        while (1)
        {
          v135 = v74;
          if (v74 == v77)
            break;
          if (v75)
          {
            v138 = a3;
            swift_bridgeObjectRetain();
            v14 = (uint64_t *)&v138;
            sub_215038BC8(0, v75, 0);
            v79 = v138;
            v80 = v122;
            v5 = (_QWORD *)v75;
            v4 = v135;
            do
            {
              a3 = (unint64_t)*(v80 - 1);
              if (v4 >= *(_QWORD *)(a3 + 16))
              {
                __break(1u);
LABEL_113:
                __break(1u);
                goto LABEL_114;
              }
              v137 = v79;
              v14 = *v80;
              v81 = a3 + 16 * v4;
              a4 = *(_QWORD *)(v81 + 32);
              v15 = *(_QWORD *)(v81 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((uint64_t)v14 >= sub_21512FB48())
              {
                v82 = sub_21512FB48();
                if (__OFSUB__(v14, v82))
                  goto LABEL_113;
                MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v14 - v82);
                v141 = a4;
                v142 = v15;
                swift_bridgeObjectRetain();
                v14 = &v141;
                v4 = v135;
                sub_21512FB90();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a4 = v141;
                v15 = v142;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v75 = v136;
              v79 = v137;
              v138 = v137;
              v84 = *(_QWORD *)(v137 + 16);
              v83 = *(_QWORD *)(v137 + 24);
              if (v84 >= v83 >> 1)
              {
                v14 = (uint64_t *)&v138;
                sub_215038BC8((char *)(v83 > 1), v84 + 1, 1);
                v79 = v138;
              }
              *(_QWORD *)(v79 + 16) = v84 + 1;
              v85 = v79 + 16 * v84;
              *(_QWORD *)(v85 + 32) = a4;
              *(_QWORD *)(v85 + 40) = v15;
              v80 += 6;
              v5 = (_QWORD *)((char *)v5 - 1);
            }
            while (v5);
            a4 = (uint64_t)v133;
            a3 = v79;
            swift_bridgeObjectRelease();
            v5 = v123;
            v73 = v134;
            if (v123)
              goto LABEL_86;
          }
          else if (v5)
          {
LABEL_86:
            if (v135 >= *(_QWORD *)(v73 + 16))
              goto LABEL_117;
            v86 = (uint64_t **)(v121 + 16 * v135);
            v14 = *v86;
            v87 = (unint64_t)v86[1];
            v15 = v126;
            sub_2150BE2A0((uint64_t)v125, (uint64_t)v5);
            swift_bridgeObjectRetain();
            if (v15 >= sub_21512FB48())
            {
              v89 = sub_21512FB48();
              if (__OFSUB__(v15, v89))
                goto LABEL_119;
              MEMORY[0x2199DB744](32, 0xE100000000000000, v15 - v89);
              v4 = (unint64_t)v5;
              v141 = (uint64_t)v14;
              v142 = v87;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              v14 = (uint64_t *)v141;
              v88 = v142;
            }
            else
            {
              swift_bridgeObjectRetain();
              v88 = v87;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              a3 = (unint64_t)sub_21502DDE0(0, *(_QWORD *)(a3 + 16) + 1, 1, (char *)a3);
            v91 = *(_QWORD *)(a3 + 16);
            v90 = *(_QWORD *)(a3 + 24);
            if (v91 >= v90 >> 1)
              a3 = (unint64_t)sub_21502DDE0((char *)(v90 > 1), v91 + 1, 1, (char *)a3);
            *(_QWORD *)(a3 + 16) = v91 + 1;
            v78 = a3 + 16 * v91;
            *(_QWORD *)(v78 + 32) = v14;
            *(_QWORD *)(v78 + 40) = v88;
            v73 = v134;
          }
          v74 = v135 + 1;
          v141 = a3;
          sub_21512F9B0();
          swift_bridgeObjectRelease();
          v141 = 32;
          v142 = 0xE100000000000000;
          sub_21512FB90();
          swift_bridgeObjectRetain();
          sub_21512FB90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v141 = v128;
          v142 = 0xA300000000000000;
          sub_21512FB90();
          swift_bridgeObjectRetain();
          sub_21512FB90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21512FB90();
          v15 = v142;
          v14 = (uint64_t *)&v139;
          sub_21512FB90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v77 = v131;
          a3 = MEMORY[0x24BEE4AF8];
          if (v74 == v131)
            goto LABEL_95;
        }
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
LABEL_95:
      sub_2150BE264((uint64_t)v125, (uint64_t)v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EE90(v115, (uint64_t)&v141);
      v92 = v143;
      v93 = v144;
      v14 = __swift_project_boxed_opaque_existential_1(&v141, v143);
      v15 = *(_QWORD *)(v93 + 8);
      v20 = *(_QWORD *)(v15 + 48);
      swift_bridgeObjectRetain();
      a3 = v113;
      swift_bridgeObjectRetain();
      a4 = v112;
      swift_bridgeObjectRetain();
      v27 = ((uint64_t (*)(uint64_t, int64_t))v20)(v92, v15);
      sub_21501EA34((uint64_t)&v141);
      if ((v27 & 0x8000000000000000) == 0)
        break;
LABEL_124:
      __break(1u);
LABEL_125:
      v4 = (unint64_t)sub_21502DDE0(0, *(_QWORD *)(v4 + 16) + 1, 1, (char *)v4);
LABEL_34:
      v53 = *(_QWORD *)(v4 + 16);
      v52 = *(_QWORD *)(v4 + 24);
      if (v53 >= v52 >> 1)
        v4 = (unint64_t)sub_21502DDE0((char *)(v52 > 1), v53 + 1, 1, (char *)v4);
      *(_QWORD *)(v4 + 16) = v53 + 1;
      v54 = v4 + 16 * v53;
      *(_QWORD *)(v54 + 32) = v14;
      *(_QWORD *)(v54 + 40) = v15;
LABEL_39:
      v141 = v4;
      swift_bridgeObjectRetain();
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
      v56 = sub_21506037C((unint64_t *)&qword_254DA7D88, &qword_254DA7D80, MEMORY[0x24BEE12B0]);
      v130 = v55;
      v129 = v56;
      sub_21512F9B0();
      v110 = v4;
      swift_bridgeObjectRelease();
      v141 = 32;
      v142 = 0xE100000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v57 = v119;
      if (v119)
        v58 = 8885474;
      else
        v58 = 8623330;
      v141 = 8623330;
      v142 = 0xA300000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      v135 = v58;
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v120 + 24) == 1)
      {
        v59 = *(_QWORD *)(a4 + 16);
        v27 = MEMORY[0x24BEE4AF8];
        if (v59)
        {
          v138 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_215038BC8(0, v59, 0);
          v27 = v138;
          v60 = (uint64_t **)(a4 + 72);
          do
          {
            a4 = (uint64_t)*(v60 - 4);
            v15 = (int64_t)*(v60 - 3);
            v5 = *(v60 - 2);
            a3 = (unint64_t)*(v60 - 1);
            v14 = *v60;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v14 >= sub_21512FB48())
            {
              v61 = sub_21512FB48();
              if (__OFSUB__(v14, v61))
                goto LABEL_118;
              MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v14 - v61);
              v4 = v62;
              v141 = v15;
              v142 = (unint64_t)v5;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v15 = v141;
              v5 = (_QWORD *)v142;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v138 = v27;
            v64 = *(_QWORD *)(v27 + 16);
            v63 = *(_QWORD *)(v27 + 24);
            if (v64 >= v63 >> 1)
            {
              sub_215038BC8((char *)(v63 > 1), v64 + 1, 1);
              v27 = v138;
            }
            *(_QWORD *)(v27 + 16) = v64 + 1;
            v65 = v27 + 16 * v64;
            *(_QWORD *)(v65 + 32) = v15;
            *(_QWORD *)(v65 + 40) = v5;
            v60 += 6;
            --v59;
          }
          while (v59);
          a4 = (uint64_t)v133;
          swift_bridgeObjectRelease();
          v5 = v123;
          v66 = v132;
          a3 = MEMORY[0x24BEE4AF8];
        }
        else
        {
          v66 = v132;
        }
        v67 = v126;
        if (!v5)
          goto LABEL_63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v68 = v124;
        if (v67 >= sub_21512FB48())
        {
          result = sub_21512FB48();
          if (!__OFSUB__(v67, result))
          {
            MEMORY[0x2199DB744](32, 0xE100000000000000, v67 - result);
            v141 = v68;
            v142 = v66;
            swift_bridgeObjectRetain();
            sub_21512FB90();
            swift_bridgeObjectRelease();
            v15 = v141;
            v20 = v142;
            goto LABEL_59;
          }
          goto LABEL_136;
        }
        swift_bridgeObjectRetain();
        v15 = v68;
        v20 = v66;
LABEL_59:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_133;
        goto LABEL_60;
      }
    }
    v94 = 2 * (v27 == 0);
    v15 = sub_2150EBD1C(0, v27, v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(0, v27, v94);
    if (v131 >= v15)
    {
      v102 = v120;
      sub_215126D94(qword_24D2A2C40, (uint64_t)v116, 9213410, 0xA300000000000000, v119);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    a4 = v109 - 2;
    if (__OFSUB__(v109, 2))
      goto LABEL_129;
    v95 = v109 - 4;
    if (__OFSUB__(a4, 2))
    {
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      continue;
    }
    break;
  }
  v96 = sub_215087BFC(v109 - 4, 3026478, 0xE300000000000000);
  v98 = v97;
  if (v95 < sub_21512FB48())
    goto LABEL_102;
  result = sub_21512FB48();
  if (__OFSUB__(v95, result))
  {
    __break(1u);
    goto LABEL_135;
  }
  MEMORY[0x2199DB744](32, 0xE100000000000000, v95 - result);
  v141 = v96;
  v142 = v98;
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_102:
  v141 = 32;
  v142 = 0xE100000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v100 = v141;
  v99 = v142;
  v4 = (unint64_t)v116;
  sub_215126D94(qword_24D2A2B80, (uint64_t)v116, 9278946, 0xA300000000000000, v119);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  if (a4 >= sub_21512FB48())
  {
    result = sub_21512FB48();
    if (!__OFSUB__(a4, result))
    {
      MEMORY[0x2199DB744](32, 0xE100000000000000, a4 - result);
      v141 = v100;
      v142 = v99;
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return result;
  }
LABEL_105:
  v141 = 8885474;
  v142 = 0xA300000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D200);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_215135F80;
  *(_QWORD *)(inited + 32) = a4;
  v102 = v120;
  sub_215126D94(qword_24D2A2BE0, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
LABEL_107:
  sub_21512FB90();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v102 + 26) == 1)
  {
    sub_21501EE90(v115, (uint64_t)&v141);
    v103 = v143;
    v104 = v144;
    __swift_project_boxed_opaque_existential_1(&v141, v143);
    v15 = *(_QWORD *)(v104 + 8);
    v20 = *(_QWORD *)(v15 + 48);
    swift_bridgeObjectRetain();
    a3 = v113;
    swift_bridgeObjectRetain();
    a4 = v112;
    swift_bridgeObjectRetain();
    v27 = ((uint64_t (*)(uint64_t, int64_t))v20)(v103, v15);
    sub_21501EA34((uint64_t)&v141);
    if (v27 < 0)
      goto LABEL_131;
    v105 = 2 * (v27 == 0);
    v106 = sub_2150EBD1C(0, v27, v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(0, v27, v105);
    v141 = sub_2150BD670(v106, v117);
    v142 = v107;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_21509C010(v118);
  }
  else
  {
    sub_21509C010(v118);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v139;
}

uint64_t sub_2150B7A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t **v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t **v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  char *v65;
  int64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t **v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t **v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t inited;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD v99[2];
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t *v130;
  unint64_t v131;

  v3 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t)v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v6)
    return 0;
  v99[1] = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(unsigned __int8 *)(v1 + 40);
  sub_2150437A8(v7, v8, *(_BYTE *)(v1 + 40));
  sub_2150437A8(v7, v8, v9);
  sub_21501EF2C(v7, v8, v9);
  v10 = sub_2150EBC3C(v7, v8, v9);
  v105 = v7;
  v104 = v8;
  v103 = v9;
  sub_21501EF2C(v7, v8, v9);
  v11 = sub_2150BA5C4(*(_QWORD *)(a1 + 16), v10);
  v13 = v12;
  v15 = (char *)v14;
  v17 = v16;
  sub_2150BB9E4(v12, v14, v16, a1, v5);
  v101 = v11;
  v126 = v17;
  v102 = v5;
  v100 = v1;
  v18 = sub_2150BC650(v11, v13, (uint64_t)v15, v17, v5);
  v19 = *((_QWORD *)v18 + 2);
  v108 = a1;
  if (v19 < v6 + *(unsigned __int8 *)(a1 + 25))
  {
    if (v19)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v20 = *((_QWORD *)v18 + 2);
        if (v20)
        {
LABEL_6:
          v19 = v20 - 1;
          v21 = &v18[48 * v20 - 48];
          v22 = *((_QWORD *)v21 + 4);
          v5 = *((_QWORD *)v21 + 5);
          v111 = *((_QWORD *)v21 + 6);
          v121 = *((_QWORD *)v21 + 7);
          v24 = *((_QWORD *)v21 + 8);
          v23 = *((_QWORD *)v21 + 9);
          v123 = v24;
          *((_QWORD *)v18 + 2) = v19;
          v25 = v23 + 2;
          if (!__OFADD__(v23, 2))
            goto LABEL_11;
          __break(1u);
          return 0;
        }
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
        goto LABEL_125;
      }
    }
    else
    {
      __break(1u);
    }
    v18 = sub_21501E4E8((uint64_t)v18);
    v20 = *((_QWORD *)v18 + 2);
    if (v20)
      goto LABEL_6;
    goto LABEL_123;
  }
  v25 = 0;
  v22 = 0;
  v5 = 0;
  v111 = 0;
  v121 = 0;
  v123 = 0;
  v23 = 0;
LABEL_11:
  v113 = v23;
  v112 = (uint64_t *)v22;
  v27 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v107 = v25;
  v122 = v5;
  if (v19)
  {
    v130 = (uint64_t *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BE4(0, v19, 0);
    v28 = 72;
    v27 = v130;
    do
    {
      v29 = *(_QWORD *)&v18[v28];
      a1 = v29 + 2;
      if (__OFADD__(v29, 2))
      {
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      v130 = v27;
      v31 = v27[2];
      v30 = v27[3];
      v6 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_215038BE4((char *)(v30 > 1), v31 + 1, 1);
        v27 = v130;
      }
      v27[2] = v6;
      v27[v31 + 4] = a1;
      v28 += 48;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    v25 = v107;
    v5 = v122;
  }
  v130 = 0;
  v131 = 0xE000000000000000;
  v106 = v27;
  v27 = (uint64_t *)sub_215126D94(qword_24D2A28E0, (uint64_t)v27, 9278946, 0xA300000000000000, v25);
  v6 = v32;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  v130 = v27;
  v131 = v6;
  swift_bridgeObjectRetain();
  v33 = sub_21512FB48();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v33, 1))
    goto LABEL_117;
  v99[0] = v33 - 1;
  v34 = *((_QWORD *)v18 + 2);
  v120 = v18;
  v125 = v15;
  if (v34)
  {
    v129 = (char *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BC8(0, v34, 0);
    v124 = v129;
    v35 = (uint64_t **)(v18 + 72);
    do
    {
      a1 = (uint64_t)*(v35 - 5);
      v6 = (int64_t)*(v35 - 4);
      v15 = (char *)*(v35 - 2);
      v27 = *v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v27 >= sub_21512FB48())
      {
        v36 = sub_21512FB48();
        if (__OFSUB__(v27, v36))
          goto LABEL_113;
        MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v27 - v36);
        v127 = a1;
        v128 = v6;
        swift_bridgeObjectRetain();
        v18 = v120;
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v127;
        v6 = v128;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v37 = v124;
      v129 = v124;
      v39 = *((_QWORD *)v124 + 2);
      v38 = *((_QWORD *)v124 + 3);
      if (v39 >= v38 >> 1)
      {
        sub_215038BC8((char *)(v38 > 1), v39 + 1, 1);
        v37 = v129;
      }
      v35 += 6;
      *((_QWORD *)v37 + 2) = v39 + 1;
      v124 = v37;
      v40 = &v37[16 * v39];
      *((_QWORD *)v40 + 4) = a1;
      *((_QWORD *)v40 + 5) = v6;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v5 = v122;
    v41 = v124;
    v15 = v125;
    if (!v122)
      goto LABEL_39;
  }
  else
  {
    v41 = (char *)MEMORY[0x24BEE4AF8];
    if (!v5)
      goto LABEL_39;
  }
  a1 = (uint64_t)v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = (int64_t)v112;
  v27 = v112;
  v6 = v5;
  if (v113 < sub_21512FB48())
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v41 = (char *)a1;
      goto LABEL_36;
    }
    goto LABEL_120;
  }
  v42 = sub_21512FB48();
  if (!__OFSUB__(v113, v42))
  {
    MEMORY[0x2199DB744](32, 0xE100000000000000, v113 - v42);
    v127 = v19;
    v128 = v5;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = (uint64_t *)v127;
    v6 = v128;
    goto LABEL_34;
  }
  while (2)
  {
    __break(1u);
LABEL_127:
    v19 = (int64_t)sub_21502DDE0(0, *(_QWORD *)(v19 + 16) + 1, 1, (char *)v19);
LABEL_59:
    v60 = *(_QWORD *)(v19 + 16);
    v59 = *(_QWORD *)(v19 + 24);
    if (v60 >= v59 >> 1)
      v19 = (int64_t)sub_21502DDE0((char *)(v59 > 1), v60 + 1, 1, (char *)v19);
    *(_QWORD *)(v19 + 16) = v60 + 1;
    v61 = v19 + 16 * v60;
    *(_QWORD *)(v61 + 32) = v6;
    *(_QWORD *)(v61 + 40) = v5;
LABEL_62:
    v127 = v19;
    sub_21512F9B0();
    swift_bridgeObjectRelease();
    v127 = 32;
    v128 = 0xE100000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v127 = 8623330;
    v128 = 0xA300000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v107;
    while (1)
    {
      v6 = sub_215126D94(qword_24D2A2940, (uint64_t)v106, 9278946, 0xA300000000000000, v48);
      a1 = v62;
      swift_arrayDestroy();
      v27 = (uint64_t *)&v130;
      sub_21512FB90();
      swift_bridgeObjectRelease();
      v63 = (v126 >> 1) - (_QWORD)v15;
      if (__OFSUB__(v126 >> 1, v15))
        goto LABEL_118;
      if ((v63 & 0x8000000000000000) == 0)
        break;
LABEL_119:
      __break(1u);
LABEL_120:
      v41 = sub_21502DDE0(0, *(_QWORD *)(a1 + 16) + 1, 1, (char *)a1);
LABEL_36:
      v44 = *((_QWORD *)v41 + 2);
      v43 = *((_QWORD *)v41 + 3);
      if (v44 >= v43 >> 1)
        v41 = sub_21502DDE0((char *)(v43 > 1), v44 + 1, 1, v41);
      *((_QWORD *)v41 + 2) = v44 + 1;
      v45 = &v41[16 * v44];
      *((_QWORD *)v45 + 4) = v27;
      *((_QWORD *)v45 + 5) = v6;
LABEL_39:
      v127 = (uint64_t)v41;
      v46 = v41;
      swift_bridgeObjectRetain();
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
      v118 = sub_21506037C((unint64_t *)&qword_254DA7D88, &qword_254DA7D80, MEMORY[0x24BEE12B0]);
      v119 = v47;
      sub_21512F9B0();
      v124 = v46;
      swift_bridgeObjectRelease();
      v127 = 32;
      v128 = 0xE100000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v107;
      if (v107)
        v49 = 8885474;
      else
        v49 = 8623330;
      v127 = 8623330;
      v128 = 0xA300000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v108 + 24) == 1)
      {
        v6 = *((_QWORD *)v18 + 2);
        v19 = MEMORY[0x24BEE4AF8];
        if (v6)
        {
          v117 = v49;
          v129 = (char *)MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_215038BC8(0, v6, 0);
          v19 = (int64_t)v129;
          v50 = (uint64_t **)(v18 + 72);
          do
          {
            v15 = (char *)*(v50 - 4);
            a1 = (uint64_t)*(v50 - 3);
            v51 = (unint64_t)*(v50 - 2);
            v18 = (char *)*(v50 - 1);
            v27 = *v50;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v27 >= sub_21512FB48())
            {
              v52 = sub_21512FB48();
              if (__OFSUB__(v27, v52))
                goto LABEL_115;
              MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v27 - v52);
              v127 = a1;
              v128 = v51;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 = v127;
              v51 = v128;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v129 = (char *)v19;
            v54 = *(_QWORD *)(v19 + 16);
            v53 = *(_QWORD *)(v19 + 24);
            if (v54 >= v53 >> 1)
            {
              sub_215038BC8((char *)(v53 > 1), v54 + 1, 1);
              v19 = (int64_t)v129;
            }
            *(_QWORD *)(v19 + 16) = v54 + 1;
            v55 = v19 + 16 * v54;
            *(_QWORD *)(v55 + 32) = a1;
            *(_QWORD *)(v55 + 40) = v51;
            v50 += 6;
            --v6;
          }
          while (v6);
          v18 = v120;
          swift_bridgeObjectRelease();
          v15 = v125;
        }
        v5 = v121;
        v56 = v111;
        if (!v122)
          goto LABEL_62;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = sub_21512FB48();
        v58 = v113;
        if (v113 >= v57)
        {
          result = sub_21512FB48();
          if (!__OFSUB__(v58, result))
          {
            MEMORY[0x2199DB744](32, 0xE100000000000000, v58 - result);
            v127 = v56;
            v128 = v5;
            swift_bridgeObjectRetain();
            sub_21512FB90();
            swift_bridgeObjectRelease();
            v6 = v127;
            v5 = v128;
            goto LABEL_58;
          }
          goto LABEL_130;
        }
        swift_bridgeObjectRetain();
        v6 = v56;
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_127;
        goto LABEL_59;
      }
    }
    v64 = v122;
    if (v63)
    {
      v65 = 0;
      v109 = v123 + 32;
      v66 = *((_QWORD *)v18 + 2);
      v67 = 8819938;
      v115 = 8557794;
      if (!v107)
        v67 = 8557794;
      v114 = v67;
      v110 = v18 + 72;
      v116 = v66;
      v117 = (v126 >> 1) - (_QWORD)v15;
      while (v65 != (char *)v63)
      {
        if (v66)
        {
          v129 = (char *)MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          v27 = (uint64_t *)&v129;
          sub_215038BC8(0, v66, 0);
          v15 = v129;
          v70 = (uint64_t **)v110;
          v125 = v65;
          do
          {
            v18 = (char *)*(v70 - 1);
            if ((unint64_t)v65 >= *((_QWORD *)v18 + 2))
            {
              __break(1u);
LABEL_110:
              __break(1u);
              goto LABEL_111;
            }
            v126 = (unint64_t)v15;
            v6 = (int64_t)*(v70 - 4);
            v15 = (char *)*(v70 - 2);
            v27 = *v70;
            v71 = &v18[16 * (_QWORD)v65];
            v72 = *((_QWORD *)v71 + 4);
            a1 = *((_QWORD *)v71 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v27 >= sub_21512FB48())
            {
              v73 = sub_21512FB48();
              if (__OFSUB__(v27, v73))
                goto LABEL_110;
              MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v27 - v73);
              v127 = v72;
              v128 = a1;
              swift_bridgeObjectRetain();
              v27 = &v127;
              sub_21512FB90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v65 = v125;
              swift_bridgeObjectRelease();
              v72 = v127;
              a1 = v128;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v15 = (char *)v126;
            v129 = (char *)v126;
            v75 = *(_QWORD *)(v126 + 16);
            v74 = *(_QWORD *)(v126 + 24);
            v6 = v75 + 1;
            if (v75 >= v74 >> 1)
            {
              v27 = (uint64_t *)&v129;
              sub_215038BC8((char *)(v74 > 1), v75 + 1, 1);
              v15 = v129;
            }
            *((_QWORD *)v15 + 2) = v6;
            v76 = &v15[16 * v75];
            *((_QWORD *)v76 + 4) = v72;
            *((_QWORD *)v76 + 5) = a1;
            v70 += 6;
            --v66;
          }
          while (v66);
          v18 = v120;
          swift_bridgeObjectRelease();
          v64 = v122;
          if (v122)
            goto LABEL_85;
        }
        else
        {
          v15 = (char *)MEMORY[0x24BEE4AF8];
          if (v64)
          {
LABEL_85:
            if ((unint64_t)v65 >= *(_QWORD *)(v123 + 16))
              goto LABEL_114;
            v77 = (uint64_t **)(v109 + 16 * (_QWORD)v65);
            v27 = *v77;
            v6 = (int64_t)v77[1];
            v78 = v113;
            sub_2150BE2A0((uint64_t)v112, v64);
            swift_bridgeObjectRetain();
            if (v78 >= sub_21512FB48())
            {
              v80 = sub_21512FB48();
              if (__OFSUB__(v78, v80))
                goto LABEL_116;
              MEMORY[0x2199DB744](32, 0xE100000000000000, v78 - v80);
              v127 = (uint64_t)v27;
              v128 = v6;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              v27 = (uint64_t *)v127;
              v79 = v128;
            }
            else
            {
              swift_bridgeObjectRetain();
              v79 = v6;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v15 = sub_21502DDE0(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
            v82 = *((_QWORD *)v15 + 2);
            v81 = *((_QWORD *)v15 + 3);
            if (v82 >= v81 >> 1)
              v15 = sub_21502DDE0((char *)(v81 > 1), v82 + 1, 1, v15);
            *((_QWORD *)v15 + 2) = v82 + 1;
            v68 = &v15[16 * v82];
            *((_QWORD *)v68 + 4) = v27;
            *((_QWORD *)v68 + 5) = v79;
            v64 = v122;
          }
        }
        ++v65;
        v127 = (uint64_t)v15;
        sub_21512F9B0();
        a1 = v69;
        swift_bridgeObjectRelease();
        v127 = 32;
        v128 = 0xE100000000000000;
        sub_21512FB90();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v127 = v115;
        v128 = 0xA300000000000000;
        sub_21512FB90();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        v6 = v128;
        v27 = (uint64_t *)&v130;
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63 = v117;
        v66 = v116;
        if (v65 == (char *)v117)
          goto LABEL_94;
      }
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
LABEL_94:
    v83 = v63;
    sub_2150BE264((uint64_t)v112, v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v84 = v105;
    v6 = v104;
    v5 = v103;
    v19 = sub_2150EBD1C(v105, v104, v103);
    sub_2150437A8(v84, v6, v5);
    sub_21501EF2C(v84, v6, v5);
    if (v83 >= v19)
    {
      v92 = v108;
      sub_215126D94(qword_24D2A2A60, (uint64_t)v106, 9213410, 0xA300000000000000, v107);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    v15 = (char *)(v99[0] - 2);
    if (__OFSUB__(v99[0], 2))
      goto LABEL_124;
    v85 = v99[0] - 4;
    if (__OFSUB__(v15, 2))
    {
LABEL_125:
      __break(1u);
      continue;
    }
    break;
  }
  v86 = sub_215087BFC(v99[0] - 4, 3026478, 0xE300000000000000);
  v88 = v87;
  if (v85 < sub_21512FB48())
    goto LABEL_100;
  result = sub_21512FB48();
  if (__OFSUB__(v85, result))
  {
    __break(1u);
    goto LABEL_129;
  }
  MEMORY[0x2199DB744](32, 0xE100000000000000, v85 - result);
  v127 = v86;
  v128 = v88;
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_100:
  v127 = 32;
  v128 = 0xE100000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v90 = v127;
  v89 = v128;
  sub_215126D94(qword_24D2A29A0, (uint64_t)v106, 9278946, 0xA300000000000000, v107);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  if ((uint64_t)v15 >= sub_21512FB48())
  {
    result = sub_21512FB48();
    if (!__OFSUB__(v15, result))
    {
      MEMORY[0x2199DB744](32, 0xE100000000000000, &v15[-result]);
      v127 = v90;
      v128 = v89;
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    return result;
  }
LABEL_103:
  v127 = 8885474;
  v128 = 0xA300000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D200);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_215135F80;
  *(_QWORD *)(inited + 32) = v15;
  v92 = v108;
  sub_215126D94(qword_24D2A2A00, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
LABEL_105:
  sub_21512FB90();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v92 + 26) == 1)
  {
    v93 = sub_2150EBD1C(v105, v104, v103);
    v94 = v100;
    sub_2150451E0(v100);
    v95 = swift_bridgeObjectRetain();
    v96 = sub_215043204(v95, v94);
    sub_215045244(v94);
    swift_bridgeObjectRelease();
    v97 = *(_QWORD *)(v96 + 16);
    swift_bridgeObjectRelease();
    v127 = sub_2150BD670(v93, v97);
    v128 = v98;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_21509C010(v102);
  }
  else
  {
    sub_21509C010(v102);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v130;
}

uint64_t DataFrameProtocol.description(options:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  char *v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t **v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t **v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t **v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t **v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t inited;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  int64_t v124;
  char *v125;
  void (*v126)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t **v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  void (*v149)(_QWORD *__return_ptr, _QWORD, _QWORD);
  char *v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;

  v7 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24);
  v10(&v153, a2, a3);
  v11 = v153;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (!v12)
    return 0;
  v126 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32);
  v126(&v153, a2, a3);
  v149 = v10;
  v13 = v156;
  v131 = a1;
  v14 = v157;
  v129 = a2;
  v15 = v158;
  sub_2150437A8(v156, v157, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v13, v14, v15);
  v16 = sub_2150EBC3C(v13, v14, v15);
  v17 = v131;
  sub_21501EF2C(v13, v14, v15);
  v18 = sub_2150BA5C4(*(_QWORD *)(v17 + 16), v16);
  v148 = v19;
  v21 = v20;
  v23 = v22;
  v153 = v18;
  v154 = v19;
  v155 = v20;
  v156 = v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8538);
  v25 = sub_21506037C(&qword_254DA8540, &qword_254DA8538, MEMORY[0x24BEE2180]);
  v26 = v129;
  sub_2150BBB90(v17, v129, a3, (uint64_t)v9);
  v124 = v18;
  v153 = v18;
  v154 = v148;
  v147 = v23;
  v148 = v21;
  v155 = v21;
  v156 = v23;
  v125 = v9;
  v27 = (unint64_t)sub_2150BCEF4((uint64_t)&v153, (uint64_t)v9, v26, v24, a3, v25);
  v28 = *(_QWORD *)(v27 + 16);
  v137 = v3;
  v127 = a3;
  v149(&v153, v26, a3);
  v29 = v153;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = *(uint64_t **)(v29 + 16);
  swift_bridgeObjectRelease();
  v31 = *(unsigned __int8 *)(v17 + 25);
  v32 = __OFADD__(v30, v31);
  v33 = (char *)v30 + v31;
  if (v32)
    goto LABEL_118;
  v34 = *(_QWORD *)(v27 + 16);
  if (v28 < (uint64_t)v33)
  {
    if (v34)
    {
      v29 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v35 = *(_QWORD *)(v27 + 16);
        if (v35)
        {
LABEL_7:
          v34 = v35 - 1;
          v36 = (char *)(v27 + 48 * (v35 - 1));
          v37 = *((_QWORD *)v36 + 4);
          v144 = *((_QWORD *)v36 + 5);
          v38 = (uint64_t *)*((_QWORD *)v36 + 6);
          v143 = *((_QWORD *)v36 + 7);
          v40 = *((_QWORD *)v36 + 8);
          v39 = *((_QWORD *)v36 + 9);
          v145 = v40;
          *(_QWORD *)(v27 + 16) = v34;
          v41 = v39 + 2;
          if (!__OFADD__(v39, 2))
            goto LABEL_12;
          __break(1u);
          return 0;
        }
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        goto LABEL_127;
      }
    }
    else
    {
      __break(1u);
    }
    v27 = (unint64_t)sub_21501E4E8(v29);
    v35 = *(_QWORD *)(v27 + 16);
    if (v35)
      goto LABEL_7;
    goto LABEL_125;
  }
  v41 = 0;
  v37 = 0;
  v143 = 0;
  v144 = 0;
  v38 = 0;
  v145 = 0;
  v39 = 0;
LABEL_12:
  v136 = v39;
  v134 = v38;
  v135 = (uint64_t *)v37;
  v146 = v27;
  v30 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v130 = v41;
  if (v34)
  {
    v153 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BE4(0, v34, 0);
    v43 = v146;
    v28 = 72;
    v30 = (uint64_t *)v153;
    do
    {
      v44 = *(_QWORD *)(v43 + v28);
      v23 = v44 + 2;
      if (__OFADD__(v44, 2))
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      v153 = (uint64_t)v30;
      v27 = v30[2];
      v45 = v30[3];
      if (v27 >= v45 >> 1)
      {
        sub_215038BE4((char *)(v45 > 1), v27 + 1, 1);
        v43 = v146;
        v30 = (uint64_t *)v153;
      }
      v30[2] = v27 + 1;
      v30[v27 + 4] = v23;
      v28 += 48;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v17 = v131;
    v41 = v130;
  }
  v151 = 0;
  v152 = 0xE000000000000000;
  v128 = v30;
  v30 = (uint64_t *)sub_215126D94(qword_24D2A30D8, (uint64_t)v30, 9278946, 0xA300000000000000, v41);
  v28 = v46;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  v151 = v30;
  v152 = v28;
  swift_bridgeObjectRetain();
  v47 = sub_21512FB48();
  swift_bridgeObjectRelease();
  v48 = v144;
  if (__OFSUB__(v47, 1))
    goto LABEL_119;
  v122 = v47 - 1;
  v49 = v146;
  v23 = *(_QWORD *)(v146 + 16);
  v27 = MEMORY[0x24BEE4AF8];
  if (v23)
  {
    v150 = (char *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_215038BC8(0, v23, 0);
    v50 = v150;
    v51 = (uint64_t **)(v49 + 72);
    do
    {
      v52 = (uint64_t)*(v51 - 5);
      v28 = (uint64_t)*(v51 - 4);
      v27 = (unint64_t)*(v51 - 2);
      v30 = *v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v30 >= sub_21512FB48())
      {
        v53 = sub_21512FB48();
        if (__OFSUB__(v30, v53))
          goto LABEL_114;
        v17 = MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v30 - v53);
        v153 = v52;
        v154 = v28;
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = v153;
        v28 = v154;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v54 = v50;
      v150 = v50;
      v56 = *((_QWORD *)v50 + 2);
      v55 = *((_QWORD *)v50 + 3);
      if (v56 >= v55 >> 1)
      {
        sub_215038BC8((char *)(v55 > 1), v56 + 1, 1);
        v54 = v150;
      }
      v51 += 6;
      *((_QWORD *)v54 + 2) = v56 + 1;
      v50 = v54;
      v57 = &v54[16 * v56];
      *((_QWORD *)v57 + 4) = v52;
      *((_QWORD *)v57 + 5) = v28;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v48 = v144;
    v27 = MEMORY[0x24BEE4AF8];
    v58 = v50;
  }
  else
  {
    v58 = (char *)MEMORY[0x24BEE4AF8];
  }
  v23 = v131;
  if (!v48)
    goto LABEL_40;
  v17 = (uint64_t)v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = (uint64_t)v135;
  v30 = v135;
  v28 = v48;
  if (v136 < sub_21512FB48())
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v58 = (char *)v17;
      goto LABEL_37;
    }
    goto LABEL_122;
  }
  v30 = (uint64_t *)v59;
  v60 = sub_21512FB48();
  if (!__OFSUB__(v136, v60))
  {
    MEMORY[0x2199DB744](32, 0xE100000000000000, v136 - v60);
    v153 = v59;
    v154 = v48;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = (uint64_t *)v153;
    v28 = v154;
    goto LABEL_35;
  }
  while (2)
  {
    __break(1u);
LABEL_129:
    v23 = (unint64_t)sub_21502DDE0(0, *(_QWORD *)(v23 + 16) + 1, 1, (char *)v23);
LABEL_60:
    v27 = MEMORY[0x24BEE4AF8];
    v81 = *(_QWORD *)(v23 + 16);
    v80 = *(_QWORD *)(v23 + 24);
    if (v81 >= v80 >> 1)
      v23 = (unint64_t)sub_21502DDE0((char *)(v80 > 1), v81 + 1, 1, (char *)v23);
    *(_QWORD *)(v23 + 16) = v81 + 1;
    v82 = v23 + 16 * v81;
    *(_QWORD *)(v82 + 32) = v30;
    *(_QWORD *)(v82 + 40) = v28;
LABEL_63:
    v153 = v23;
    sub_21512F9B0();
    swift_bridgeObjectRelease();
    v153 = 32;
    v154 = 0xE100000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v153 = 8623330;
    v154 = 0xA300000000000000;
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67 = v130;
    while (1)
    {
      v28 = sub_215126D94(qword_24D2A3138, (uint64_t)v128, 9278946, 0xA300000000000000, v67);
      v23 = v83;
      swift_arrayDestroy();
      v30 = (uint64_t *)&v151;
      sub_21512FB90();
      swift_bridgeObjectRelease();
      v84 = (v147 >> 1) - v148;
      if (__OFSUB__(v147 >> 1, v148))
        goto LABEL_120;
      if ((v84 & 0x8000000000000000) == 0)
        break;
LABEL_121:
      __break(1u);
LABEL_122:
      v58 = sub_21502DDE0(0, *(_QWORD *)(v17 + 16) + 1, 1, (char *)v17);
LABEL_37:
      v62 = *((_QWORD *)v58 + 2);
      v61 = *((_QWORD *)v58 + 3);
      if (v62 >= v61 >> 1)
        v58 = sub_21502DDE0((char *)(v61 > 1), v62 + 1, 1, v58);
      *((_QWORD *)v58 + 2) = v62 + 1;
      v63 = &v58[16 * v62];
      *((_QWORD *)v63 + 4) = v30;
      *((_QWORD *)v63 + 5) = v28;
LABEL_40:
      v17 = 8623330;
      v153 = (uint64_t)v58;
      v64 = v58;
      swift_bridgeObjectRetain();
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
      v66 = sub_21506037C((unint64_t *)&qword_254DA7D88, &qword_254DA7D80, MEMORY[0x24BEE12B0]);
      v142 = v65;
      v141 = v66;
      sub_21512F9B0();
      v123 = v64;
      swift_bridgeObjectRelease();
      v153 = 32;
      v154 = 0xE100000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67 = v130;
      if (v130)
        v68 = 8885474;
      else
        v68 = 8623330;
      v153 = 8623330;
      v154 = 0xA300000000000000;
      sub_21512FB90();
      swift_bridgeObjectRetain();
      v149 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v68;
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v23 + 24) == 1)
      {
        v69 = v146;
        v70 = *(_QWORD *)(v146 + 16);
        v23 = MEMORY[0x24BEE4AF8];
        if (v70)
        {
          v150 = (char *)MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_215038BC8(0, v70, 0);
          v23 = (unint64_t)v150;
          v71 = (uint64_t **)(v69 + 72);
          do
          {
            v27 = (unint64_t)*(v71 - 4);
            v72 = (uint64_t)*(v71 - 3);
            v17 = (uint64_t)*(v71 - 2);
            v28 = (uint64_t)*(v71 - 1);
            v30 = *v71;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v30 >= sub_21512FB48())
            {
              v73 = sub_21512FB48();
              if (__OFSUB__(v30, v73))
                goto LABEL_116;
              MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v30 - v73);
              v153 = v72;
              v154 = v17;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v72 = v153;
              v17 = v154;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v150 = (char *)v23;
            v75 = *(_QWORD *)(v23 + 16);
            v74 = *(_QWORD *)(v23 + 24);
            if (v75 >= v74 >> 1)
            {
              sub_215038BC8((char *)(v74 > 1), v75 + 1, 1);
              v23 = (unint64_t)v150;
            }
            *(_QWORD *)(v23 + 16) = v75 + 1;
            v76 = v23 + 16 * v75;
            *(_QWORD *)(v76 + 32) = v72;
            *(_QWORD *)(v76 + 40) = v17;
            v71 += 6;
            --v70;
          }
          while (v70);
          swift_bridgeObjectRelease();
          v27 = MEMORY[0x24BEE4AF8];
        }
        if (!v144)
          goto LABEL_63;
        swift_bridgeObjectRetain();
        v77 = v143;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = v134;
        v78 = sub_21512FB48();
        v79 = v136;
        if (v136 >= v78)
        {
          result = sub_21512FB48();
          if (!__OFSUB__(v79, result))
          {
            MEMORY[0x2199DB744](32, 0xE100000000000000, v79 - result);
            v153 = (uint64_t)v30;
            v154 = v77;
            swift_bridgeObjectRetain();
            sub_21512FB90();
            swift_bridgeObjectRelease();
            v30 = (uint64_t *)v153;
            v28 = v154;
            goto LABEL_59;
          }
          goto LABEL_132;
        }
        swift_bridgeObjectRetain();
        v28 = v77;
LABEL_59:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_129;
        goto LABEL_60;
      }
    }
    v85 = v144;
    if (v84)
    {
      v86 = 0;
      v132 = v145 + 32;
      v17 = *(_QWORD *)(v146 + 16);
      v87 = 8819938;
      v139 = 8557794;
      if (!v130)
        v87 = 8557794;
      v138 = v87;
      v133 = (uint64_t **)(v146 + 72);
      v140 = (v147 >> 1) - v148;
      v148 = v17;
      while (v86 != v84)
      {
        if (v17)
        {
          v150 = (char *)v27;
          swift_bridgeObjectRetain();
          v30 = (uint64_t *)&v150;
          sub_215038BC8(0, v17, 0);
          v89 = v150;
          v90 = v133;
          v91 = v17;
          v147 = v86;
          do
          {
            v27 = (unint64_t)*(v90 - 1);
            if (v86 >= *(_QWORD *)(v27 + 16))
            {
              __break(1u);
LABEL_111:
              __break(1u);
              goto LABEL_112;
            }
            v149 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v89;
            v17 = (uint64_t)*(v90 - 4);
            v30 = *v90;
            v92 = (char *)(v27 + 16 * v86);
            v93 = *((_QWORD *)v92 + 4);
            v28 = *((_QWORD *)v92 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v30 >= sub_21512FB48())
            {
              v94 = sub_21512FB48();
              if (__OFSUB__(v30, v94))
                goto LABEL_111;
              MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v30 - v94);
              v153 = v93;
              v154 = v28;
              swift_bridgeObjectRetain();
              v30 = &v153;
              v86 = v147;
              sub_21512FB90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v93 = v153;
              v28 = v154;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v89 = (char *)v149;
            v150 = (char *)v149;
            v23 = *((_QWORD *)v149 + 2);
            v95 = *((_QWORD *)v149 + 3);
            if (v23 >= v95 >> 1)
            {
              v30 = (uint64_t *)&v150;
              sub_215038BC8((char *)(v95 > 1), v23 + 1, 1);
              v89 = v150;
            }
            *((_QWORD *)v89 + 2) = v23 + 1;
            v96 = &v89[16 * v23];
            *((_QWORD *)v96 + 4) = v93;
            *((_QWORD *)v96 + 5) = v28;
            v90 += 6;
            --v91;
            v17 = v148;
          }
          while (v91);
          swift_bridgeObjectRelease();
          v85 = v144;
          v27 = MEMORY[0x24BEE4AF8];
          if (v144)
            goto LABEL_86;
        }
        else
        {
          v89 = (char *)v27;
          if (v85)
          {
LABEL_86:
            if (v86 >= *(_QWORD *)(v145 + 16))
              goto LABEL_115;
            v97 = (uint64_t **)(v132 + 16 * v86);
            v30 = *v97;
            v98 = (unint64_t)v97[1];
            v28 = v136;
            sub_2150BE2A0((uint64_t)v135, v85);
            swift_bridgeObjectRetain();
            if (v28 >= sub_21512FB48())
            {
              v100 = sub_21512FB48();
              if (__OFSUB__(v28, v100))
                goto LABEL_117;
              MEMORY[0x2199DB744](32, 0xE100000000000000, v28 - v100);
              v23 = v101;
              v153 = (uint64_t)v30;
              v154 = v98;
              swift_bridgeObjectRetain();
              sub_21512FB90();
              swift_bridgeObjectRelease();
              v30 = (uint64_t *)v153;
              v99 = v154;
            }
            else
            {
              swift_bridgeObjectRetain();
              v99 = v98;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v89 = sub_21502DDE0(0, *((_QWORD *)v89 + 2) + 1, 1, v89);
            v103 = *((_QWORD *)v89 + 2);
            v102 = *((_QWORD *)v89 + 3);
            if (v103 >= v102 >> 1)
              v89 = sub_21502DDE0((char *)(v102 > 1), v103 + 1, 1, v89);
            *((_QWORD *)v89 + 2) = v103 + 1;
            v88 = &v89[16 * v103];
            *((_QWORD *)v88 + 4) = v30;
            *((_QWORD *)v88 + 5) = v99;
            v85 = v144;
          }
        }
        ++v86;
        v153 = (uint64_t)v89;
        sub_21512F9B0();
        swift_bridgeObjectRelease();
        v153 = 32;
        v154 = 0xE100000000000000;
        sub_21512FB90();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v153 = v139;
        v154 = 0xA300000000000000;
        sub_21512FB90();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_21512FB90();
        v28 = v154;
        v30 = (uint64_t *)&v151;
        sub_21512FB90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = v140;
        if (v86 == v140)
          goto LABEL_95;
      }
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
LABEL_95:
    v17 = v84;
    sub_2150BE264((uint64_t)v135, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v126(&v153, v129, v127);
    v30 = (uint64_t *)v154;
    v28 = v155;
    v104 = v156;
    v105 = v157;
    v106 = v158;
    v107 = sub_2150EBD1C(v156, v157, v158);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v104, v105, v106);
    if (v17 >= v107)
    {
      v116 = v131;
      sub_215126D94(qword_24D2A3258, (uint64_t)v128, 9213410, 0xA300000000000000, v130);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    v108 = v122 - 2;
    v23 = v131;
    if (__OFSUB__(v122, 2))
      goto LABEL_126;
    v30 = (uint64_t *)(v122 - 4);
    if (__OFSUB__(v108, 2))
    {
LABEL_127:
      __break(1u);
      continue;
    }
    break;
  }
  v109 = sub_215087BFC(v122 - 4, 3026478, 0xE300000000000000);
  v111 = v110;
  if ((uint64_t)v30 < sub_21512FB48())
    goto LABEL_101;
  result = sub_21512FB48();
  if (__OFSUB__(v30, result))
  {
    __break(1u);
    goto LABEL_131;
  }
  MEMORY[0x2199DB744](32, 0xE100000000000000, (char *)v30 - result);
  v153 = v109;
  v154 = v111;
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_101:
  v153 = 32;
  v154 = 0xE100000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v113 = v153;
  v112 = v154;
  sub_215126D94(qword_24D2A3198, (uint64_t)v128, 9278946, 0xA300000000000000, v130);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  if (v108 >= sub_21512FB48())
  {
    result = sub_21512FB48();
    if (!__OFSUB__(v108, result))
    {
      MEMORY[0x2199DB744](32, 0xE100000000000000, v108 - result);
      v153 = v113;
      v154 = v112;
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_104;
    }
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    return result;
  }
LABEL_104:
  v153 = 8885474;
  v154 = 0xA300000000000000;
  sub_21512FB90();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21512FB90();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D200);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_215135F80;
  *(_QWORD *)(inited + 32) = v108;
  v115 = v131;
  sub_215126D94(qword_24D2A31F8, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  v116 = v115;
LABEL_106:
  sub_21512FB90();
  swift_bridgeObjectRelease();
  v117 = (uint64_t)v125;
  if (*(_BYTE *)(v116 + 26) == 1)
  {
    v118 = (*(uint64_t (**)(uint64_t))(v127 + 64))(v129);
    v153 = sub_2150BD670(v118, v119);
    v154 = v120;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_21509C010(v117);
  }
  else
  {
    sub_21509C010((uint64_t)v125);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v151;
}

int64_t sub_2150BA5C4(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

void sub_2150BA608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x2150BA750);
}

uint64_t DataFrame.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  FormattingOptions.init()((uint64_t)v3);
  v7 = sub_2150B63A0((uint64_t)v3, v4, v5, v6);
  sub_21509C010((uint64_t)v3);
  return v7;
}

uint64_t DataFrame.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormattingOptions.init()((uint64_t)v3);
  v7 = sub_2150B63A0((uint64_t)v3, v4, v5, v6);
  sub_21509C010((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DataFrame.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = sub_215130604();
  v24 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8080);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[1];
  v8 = v0[2];
  v28 = *v0;
  v6 = v28;
  v29 = v7;
  v30 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8088);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2151360E0;
  strcpy((char *)(v9 + 32), "column names");
  *(_BYTE *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_21501E1D4(v6);
  swift_bridgeObjectRelease();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
  *(_QWORD *)(v9 + 48) = v10;
  *(_QWORD *)(v9 + 72) = v11;
  strcpy((char *)(v9 + 80), "number of rows");
  *(_BYTE *)(v9 + 95) = -18;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v22 = v1;
  sub_21501EE90(v6 + 32, (uint64_t)v25);
  v13 = v26;
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(v13, v14);
  result = sub_21501EA34((uint64_t)v25);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v1 = v22;
    if (v16)
    {
      v18 = 0;
LABEL_7:
      v19 = sub_2150EBD1C(0, v16, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(0, v16, v18);
      *(_QWORD *)(v9 + 120) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v9 + 96) = v19;
      v20 = sub_2151305F8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v23, 1, 1, v20);
      (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v3, *MEMORY[0x24BEE43C0], v1);
      return sub_215130610();
    }
LABEL_6:
    v16 = 0;
    v18 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150BABC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  FormattingOptions.init()((uint64_t)v3);
  v7 = sub_2150B63A0((uint64_t)v3, v4, v5, v6);
  sub_21509C010((uint64_t)v3);
  return v7;
}

uint64_t sub_2150BAC5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormattingOptions.init()((uint64_t)v3);
  v7 = sub_2150B63A0((uint64_t)v3, v4, v5, v6);
  sub_21509C010((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DataFrame.Slice.description.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  _OWORD v8[2];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[1];
  v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)v0 + 25);
  FormattingOptions.init()((uint64_t)v3);
  v5 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  return v5;
}

uint64_t DataFrame.Slice.debugDescription.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  _OWORD v8[2];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[1];
  v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)v0 + 25);
  sub_2150451E0((uint64_t)&v7);
  FormattingOptions.init()((uint64_t)v3);
  v5 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)&v7);
  return v5;
}

uint64_t DataFrame.Slice.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v22 = a1;
  v2 = sub_215130604();
  v20 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v19 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8080);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[1];
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = *((_BYTE *)v1 + 40);
  v23 = *v1;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8088);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2151360E0;
  strcpy((char *)(v12 + 32), "column names");
  *(_BYTE *)(v12 + 45) = 0;
  *(_WORD *)(v12 + 46) = -5120;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v9, v10, v11);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_21501E1D4(v13);
  swift_bridgeObjectRelease();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
  *(_QWORD *)(v12 + 48) = v14;
  *(_QWORD *)(v12 + 72) = v15;
  strcpy((char *)(v12 + 80), "number of rows");
  *(_BYTE *)(v12 + 95) = -18;
  v16 = sub_2150EBD1C(v9, v10, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v9, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v9, v10, v11);
  *(_QWORD *)(v12 + 120) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 96) = v16;
  v17 = sub_2151305F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x24BEE43C0], v21);
  return sub_215130610();
}

uint64_t sub_2150BB0E4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  _OWORD v8[2];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[1];
  v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)v0 + 25);
  FormattingOptions.init()((uint64_t)v3);
  v5 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  return v5;
}

uint64_t sub_2150BB17C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  _OWORD v8[2];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[1];
  v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)v0 + 25);
  sub_2150451E0((uint64_t)&v7);
  FormattingOptions.init()((uint64_t)v3);
  v5 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)&v7);
  return v5;
}

uint64_t DataFrame.Row.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[48];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150B6234(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  FormattingOptions.init()((uint64_t)v3);
  v8 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)v10);
  return v8;
}

uint64_t DataFrame.Row.description(options:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[48];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = (char *)v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150B6234(v5, (Swift::Int)v5, v3, v4, v6, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_2150B7A84(a1);
  sub_215045244((uint64_t)v9);
  return v7;
}

uint64_t DataFrame.Row.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[48];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150B6234(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  FormattingOptions.init()((uint64_t)v3);
  v8 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t DataFrame.Row.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v1 = sub_215130604();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8080);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  v8 = v0[1];
  v11 = v0[2];
  v10 = v0[3];
  v16[0] = v9;
  v16[1] = v8;
  v16[2] = v11;
  v16[3] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8088);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2151360E0;
  *(_QWORD *)(v12 + 32) = 0x7865646E69;
  *(_QWORD *)(v12 + 40) = 0xE500000000000000;
  v13 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 72) = v13;
  *(_QWORD *)(v12 + 80) = 1702060386;
  *(_QWORD *)(v12 + 112) = v11;
  *(_QWORD *)(v12 + 120) = &type metadata for DataFrame;
  *(_QWORD *)(v12 + 88) = 0xE400000000000000;
  *(_QWORD *)(v12 + 96) = v9;
  *(_QWORD *)(v12 + 104) = v8;
  v14 = sub_2151305F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE43C0], v1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_215130610();
}

uint64_t sub_2150BB660()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[48];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150B6234(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  FormattingOptions.init()((uint64_t)v3);
  v8 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)v10);
  return v8;
}

uint64_t sub_2150BB74C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[48];

  v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150B6234(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  FormattingOptions.init()((uint64_t)v3);
  v8 = sub_2150B7A84((uint64_t)v3);
  sub_21509C010((uint64_t)v3);
  sub_215045244((uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2150BB83C@<X0>(int64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = *(_QWORD *)(a5 + 16);
  if (!v8)
    return sub_2150BE514(a4, a6);
  sub_215068F0C(a1, a2, a3);
  if ((v9 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    sub_2151303B8();
    v10 = sub_21512FB48();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a4 + 8) >= v10)
      v11 = v10;
    else
      v11 = *(_QWORD *)(a4 + 8);
  }
  result = sub_2150BE558(v8 - 1, a4);
  v13 = v11 + 1;
  v14 = __OFADD__(v11, 1);
  if (!result)
  {
LABEL_23:
    if (!v14)
    {
      v16 = __OFADD__(v13, 2);
      v21 = v13 + 2;
      if (!v16)
      {
        v16 = __OFADD__(v21, 1);
        v22 = v21 + 1;
        if (!v16)
        {
          v16 = __OFADD__(v22, 2);
          v23 = v22 + 2;
          if (!v16)
          {
            v16 = __OFADD__(v23, 2);
            v24 = v23 + 2;
            if (!v16)
            {
              result = v24 + 1;
              if (!__OFADD__(v24, 1))
                goto LABEL_29;
LABEL_46:
              __break(1u);
              return result;
            }
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v14)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (__OFADD__(v13, 2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v15 = v11 + 4;
  if (__OFADD__(v11 + 3, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v16 = __OFADD__(v15, result);
  v17 = v15 + result;
  if (v16)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v16 = __OFADD__(v17, 2);
  v18 = v17 + 2;
  if (v16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v16 = __OFADD__(v18, 1);
  v19 = v18 + 1;
  if (v16)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v16 = __OFADD__(v19, 2);
  v20 = v19 + 2;
  if (v16)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v16 = __OFADD__(v20, 2);
  v13 = v20 + 2;
  if (v16)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
LABEL_29:
  if (*(_QWORD *)a4 >= result)
    return sub_2150BE514(a4, a6);
  else
    return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 16), *(_BYTE *)(a4 + 24), a6);
}

uint64_t sub_2150BB9E4@<X0>(int64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (!v8)
    return sub_2150BE514(a4, a5);
  sub_215068F0C(a1, a2, a3);
  if ((v9 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    sub_2151303B8();
    v10 = sub_21512FB48();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a4 + 8) >= v10)
      v11 = v10;
    else
      v11 = *(_QWORD *)(a4 + 8);
  }
  result = sub_2150BE558(v8 - 1, a4);
  v13 = v11 + 1;
  v14 = __OFADD__(v11, 1);
  if (!result)
  {
LABEL_23:
    if (!v14)
    {
      v16 = __OFADD__(v13, 2);
      v21 = v13 + 2;
      if (!v16)
      {
        v16 = __OFADD__(v21, 1);
        v22 = v21 + 1;
        if (!v16)
        {
          v16 = __OFADD__(v22, 2);
          v23 = v22 + 2;
          if (!v16)
          {
            v16 = __OFADD__(v23, 2);
            v24 = v23 + 2;
            if (!v16)
            {
              result = v24 + 1;
              if (!__OFADD__(v24, 1))
                goto LABEL_29;
LABEL_46:
              __break(1u);
              return result;
            }
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v14)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (__OFADD__(v13, 2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v15 = v11 + 4;
  if (__OFADD__(v11 + 3, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v16 = __OFADD__(v15, result);
  v17 = v15 + result;
  if (v16)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v16 = __OFADD__(v17, 2);
  v18 = v17 + 2;
  if (v16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v16 = __OFADD__(v18, 1);
  v19 = v18 + 1;
  if (v16)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v16 = __OFADD__(v19, 2);
  v20 = v19 + 2;
  if (v16)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v16 = __OFADD__(v20, 2);
  v13 = v20 + 2;
  if (v16)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
LABEL_29:
  if (*(_QWORD *)a4 >= result)
    return sub_2150BE514(a4, a5);
  else
    return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 16), *(_BYTE *)(a4 + 24), a5);
}

uint64_t sub_2150BBB90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24);
  v8(&v24, a2, a3);
  v9 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease();
  if (!v10)
    return sub_2150BE514(a1, a4);
  sub_21512FC80();
  v11 = sub_2150BE6C0(v24, v25, a1);
  v8(&v24, a2, a3);
  v12 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease();
  result = sub_2150BE734(v13 - 1, a1);
  v15 = v11 + 1;
  v16 = __OFADD__(v11, 1);
  if (!result)
  {
    if (!v16)
    {
      if (!__OFADD__(v15, 2))
      {
        if (!__OFADD__(v11 + 3, 1))
        {
          if (!__OFADD__(v11 + 4, 2))
          {
            if (!__OFADD__(v11 + 6, 2))
            {
              result = v11 + 9;
              if (!__OFADD__(v11 + 8, 1))
                goto LABEL_24;
LABEL_41:
              __break(1u);
              return result;
            }
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v15, 2))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v17 = v11 + 4;
  if (__OFADD__(v11 + 3, 1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v18 = __OFADD__(v17, result);
  v19 = v17 + result;
  if (v18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v18 = __OFADD__(v19, 2);
  v20 = v19 + 2;
  if (v18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v18 = __OFADD__(v20, 1);
  v21 = v20 + 1;
  if (v18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v18 = __OFADD__(v21, 2);
  v22 = v21 + 2;
  if (v18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v18 = __OFADD__(v22, 2);
  v23 = v22 + 2;
  if (v18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  result = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    return sub_2150BE514(a1, a4);
  }
LABEL_24:
  if (*(_QWORD *)a1 >= result)
    return sub_2150BE514(a1, a4);
  else
    return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), a4);
}

char *sub_2150BBDB4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  char v26;
  char v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  int64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  void (*v51)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t);
  uint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  __int128 v76;
  _QWORD v78[3];
  uint64_t v79;
  __int128 v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  int64_t v94;
  int64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  int64_t v102;
  char *v103;
  __int128 v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD v108[5];
  _QWORD v109[4];
  _QWORD v110[5];
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _QWORD v115[8];

  v78[1] = a7;
  v78[2] = a8;
  v14 = 0;
  v15 = sub_21512F614();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v87 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8548);
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v84 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21512F770();
  MEMORY[0x24BDAC7A8](v19);
  v83 = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for FormattingOptions();
  v21 = MEMORY[0x24BDAC7A8](v82);
  v81 = (char *)v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109[0] = a1;
  v109[1] = a2;
  v109[2] = a3;
  v109[3] = a4;
  v79 = a6;
  v23 = *(_QWORD *)(a6 + 16);
  if (*(_BYTE *)(a5 + 25) != 1)
    goto LABEL_14;
  MEMORY[0x24BDAC7A8](v21);
  v78[-2] = a5;
  a4 = sub_215117C80(sub_2150BE8F8, (uint64_t)&v78[-4], a1, a2, a3, (unint64_t)a4);
  a2 = sub_21512FB48();
  v24 = sub_215066A70((uint64_t)a4);
  v25 = sub_215068AFC(v24);
  v27 = v26;
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    v28 = 0;
  else
    v28 = v25;
  if (v28 > a2)
    a2 = v28;
  v29 = sub_21512FB48();
  if (v29 > a2)
    a2 = v29;
  v30 = sub_21502DCC8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  a1 = *((_QWORD *)v30 + 2);
  v31 = *((_QWORD *)v30 + 3);
  v103 = v30;
  v32 = a1 + 1;
  if (a1 >= v31 >> 1)
    goto LABEL_74;
  while (1)
  {
    v33 = v103;
    *((_QWORD *)v103 + 2) = v32;
    v34 = &v33[48 * a1];
    *((_QWORD *)v34 + 4) = 0;
    *((_QWORD *)v34 + 5) = 0xE000000000000000;
    *((_QWORD *)v34 + 6) = 0;
    *((_QWORD *)v34 + 7) = 0xE000000000000000;
    *((_QWORD *)v34 + 8) = a4;
    *((_QWORD *)v34 + 9) = a2;
    v35 = *((_QWORD *)v33 + 9);
    v36 = __OFADD__(v35, 2);
    v37 = v35 + 2;
    if (v36)
      break;
    v36 = __OFADD__(v37, 1);
    v31 = v37 + 1;
    if (v36)
    {
      __break(1u);
LABEL_14:
      v103 = (char *)MEMORY[0x24BEE4AF8];
      v31 = 1;
    }
    v32 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      v91 = (uint64_t)&v104 + 8;
      v92 = v79 + 32;
      v90 = (__int128 *)((char *)&v112 + 8);
      v95 = v23 - 1;
      v96 = v108;
      swift_bridgeObjectRetain();
      a2 = 0;
      v31 = (unint64_t)&unk_215138000;
      v80 = xmmword_215138210;
      v99 = a5;
      v94 = v23;
      v38 = v23 == 0;
      if (!v23)
      {
LABEL_17:
        v113 = 0u;
        v114 = 0u;
        v39 = v23;
        v112 = 0u;
        goto LABEL_20;
      }
      while (1)
      {
        if (v38)
          goto LABEL_71;
        v39 = a2 + 1;
        v40 = v91;
        sub_21501EE90(v92 + 40 * a2, v91);
        *(_QWORD *)&v112 = a2;
        v41 = *(_OWORD *)(v40 + 16);
        v42 = v90;
        *v90 = *(_OWORD *)v40;
        v42[1] = v41;
        *((_QWORD *)v42 + 4) = *(_QWORD *)(v40 + 32);
LABEL_20:
        sub_2150BE428((uint64_t)&v112, (uint64_t)&v107);
        if (!v108[3])
        {
          swift_bridgeObjectRelease();
          return v103;
        }
        a1 = v107;
        v43 = *((_OWORD *)v96 + 1);
        v104 = *(_OWORD *)v96;
        v105 = v43;
        v31 = v96[4];
        v106 = v31;
        v44 = v23 - v107;
        if (__OFSUB__(v23, v107))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          break;
        }
        v31 = v44 - 1;
        if (__OFSUB__(v44, 1))
          goto LABEL_61;
        if (v44 != 1)
        {
          if ((*(_BYTE *)(a5 + 24) & 1) != 0)
          {
            *(_QWORD *)&v112 = v44 - 1;
            sub_2151303B8();
            a4 = v45;
            a2 = sub_21512FB48();
            swift_bridgeObjectRelease();
            v46 = sub_21512FB48();
            if (v46 <= a2)
              v31 = a2;
            else
              v31 = v46;
          }
          else
          {
            *(_QWORD *)&v112 = v44 - 1;
            sub_2151303B8();
            a4 = v47;
            a2 = sub_21512FB48();
            swift_bridgeObjectRelease();
            v48 = sub_21512FB48();
            v31 = a2 + v48;
            if (__OFADD__(a2, v48))
              goto LABEL_72;
          }
          if (*(_QWORD *)(a5 + 8) < (int64_t)v31)
            v31 = *(_QWORD *)(a5 + 8);
        }
        v36 = __OFADD__(v31, 2);
        v31 += 2;
        if (v36)
          goto LABEL_62;
        v36 = __OFADD__(v31++, 1);
        if (v36)
          goto LABEL_63;
        v49 = *(_QWORD *)a5 - v32;
        if (__OFSUB__(*(_QWORD *)a5, v32))
          goto LABEL_64;
        if (a1 == v95)
          v31 = 0;
        v36 = __OFSUB__(v49, v31);
        v31 = v49 - v31;
        if (v36)
          goto LABEL_65;
        v36 = __OFSUB__(v31, 2);
        v31 -= 2;
        if (v36)
          goto LABEL_66;
        v23 = v31 - 1;
        if (__OFSUB__(v31, 1))
          goto LABEL_67;
        v100 = v39;
        v101 = v14;
        v102 = v32;
        v50 = v106;
        __swift_project_boxed_opaque_existential_1(&v104, *((uint64_t *)&v105 + 1));
        v51 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8) + 112);
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8538);
        v53 = v110;
        v97 = sub_21506037C(&qword_254DA8540, &qword_254DA8538, MEMORY[0x24BEE2180]);
        v98 = v52;
        v51(v110, v109, a5, v52);
        a4 = (_QWORD *)v110[1];
        v32 = v110[3];
        v54 = v110[4];
        a5 = v111;
        if (v23 >= v111)
        {
          a2 = v110[2];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((_QWORD *)v103 + 2) != 1)
          {
            v70 = v79;
            swift_bridgeObjectRelease();
            sub_2150BD858(v44, v99, v70, (unint64_t *)&v112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              goto LABEL_76;
            goto LABEL_56;
          }
          v55 = *((_QWORD *)&v105 + 1);
          v56 = v106;
          v93 = __swift_project_boxed_opaque_existential_1(&v104, *((uint64_t *)&v105 + 1));
          v57 = *(_QWORD *)(v99 + 8);
          v58 = *(_QWORD *)(v99 + 16);
          if (v57 >= v23)
            v57 = v23;
          v59 = *(_BYTE *)(v99 + 24);
          v60 = (uint64_t)v81;
          *(_WORD *)(v81 + 25) = 257;
          *(_QWORD *)v60 = v23;
          *(_QWORD *)(v60 + 8) = v57;
          *(_QWORD *)(v60 + 16) = v58;
          *(_BYTE *)(v60 + 24) = v59;
          sub_21512F764();
          sub_2150BE470();
          sub_21512F5C0();
          sub_21512F764();
          sub_2150BE4B4();
          v61 = v84;
          sub_21512F5F0();
          v112 = v80;
          __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
          sub_21506037C(&qword_254DA8568, &qword_254DA7F20, MEMORY[0x24BEE1BC0]);
          v62 = v87;
          sub_21512F608();
          v63 = v86;
          MEMORY[0x2199DB15C](v62, v86);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v62, v89);
          v64 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v61, v63);
          MEMORY[0x2199DB12C](v64);
          v65 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8) + 112);
          v53 = v115;
          v65(v115, v109, v60, v98, v97, v55);
          sub_21509C010(v60);
          a4 = (_QWORD *)v115[1];
          a2 = v115[2];
          v32 = v115[3];
          v54 = v115[4];
          a5 = v115[5];
        }
        a1 = *v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v23 = v94;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v103 = sub_21502DCC8(0, *((_QWORD *)v103 + 2) + 1, 1, v103);
        v14 = *((_QWORD *)v103 + 2);
        v67 = *((_QWORD *)v103 + 3);
        if (v14 >= v67 >> 1)
          v103 = sub_21502DCC8((char *)(v67 > 1), v14 + 1, 1, v103);
        v68 = v103;
        *((_QWORD *)v103 + 2) = v14 + 1;
        v69 = &v68[48 * v14];
        *((_QWORD *)v69 + 4) = a1;
        *((_QWORD *)v69 + 5) = a4;
        *((_QWORD *)v69 + 6) = a2;
        *((_QWORD *)v69 + 7) = v32;
        *((_QWORD *)v69 + 8) = v54;
        *((_QWORD *)v69 + 9) = a5;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = a5 + 2;
        if (__OFADD__(a5, 2))
          goto LABEL_68;
        v36 = __OFADD__(v31, 1);
        v31 = a5 + 3;
        if (v36)
          goto LABEL_69;
        v32 = v102 + v31;
        if (__OFADD__(v102, v31))
          goto LABEL_70;
        sub_21501EA34((uint64_t)&v104);
        a5 = v99;
        a2 = v100;
        v14 = v101;
        v38 = v100 >= v23;
        if (v100 == v23)
          goto LABEL_17;
      }
    }
    __break(1u);
LABEL_74:
    v103 = sub_21502DCC8((char *)(v31 > 1), v32, 1, v103);
  }
  __break(1u);
LABEL_76:
  v103 = sub_21502DCC8(0, *((_QWORD *)v103 + 2) + 1, 1, v103);
LABEL_56:
  v72 = *((_QWORD *)v103 + 2);
  v71 = *((_QWORD *)v103 + 3);
  if (v72 >= v71 >> 1)
    v103 = sub_21502DCC8((char *)(v71 > 1), v72 + 1, 1, v103);
  v73 = v103;
  *((_QWORD *)v103 + 2) = v72 + 1;
  v74 = &v73[48 * v72];
  v75 = v112;
  v76 = v114;
  *((_OWORD *)v74 + 3) = v113;
  *((_OWORD *)v74 + 4) = v76;
  *((_OWORD *)v74 + 2) = v75;
  sub_21501EA34((uint64_t)&v104);
  return v103;
}

char *sub_2150BC650(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  char v25;
  char v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  __int128 v39;
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  int64_t *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  uint64_t v74;
  _QWORD *v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  int64_t v91;
  _QWORD *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  int64_t v98;
  char *v99;
  __int128 v100;
  __int128 v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD v104[5];
  _QWORD v105[4];
  _QWORD v106[5];
  int64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _QWORD v111[6];
  _QWORD v112[3];

  v11 = 0;
  v12 = sub_21512F614();
  v84 = *(_QWORD *)(v12 - 8);
  v85 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8548);
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v80 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21512F770();
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for FormattingOptions();
  v18 = MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105[0] = a1;
  v105[1] = a2;
  v105[2] = a3;
  v105[3] = a4;
  v75 = v5;
  v20 = *v5;
  v112[0] = v20;
  v21 = *(_QWORD *)(v20 + 16);
  LODWORD(v19) = *(unsigned __int8 *)(a5 + 25);
  v93 = v21;
  if ((_DWORD)v19 != 1)
  {
    v30 = (char *)MEMORY[0x24BEE4AF8];
    v31 = 1;
    goto LABEL_16;
  }
  MEMORY[0x24BDAC7A8](v18);
  *(&v74 - 2) = a5;
  a3 = (uint64_t)sub_215117C80(sub_2150BE4F8, (uint64_t)(&v74 - 4), a1, a2, a3, a4);
  v22 = sub_21512FB48();
  v23 = sub_215066A70(a3);
  v21 = 0;
  v24 = sub_215068AFC(v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    v27 = 0;
  else
    v27 = v24;
  if (v27 <= v22)
    v28 = v22;
  else
    v28 = v27;
  v29 = sub_21512FB48();
  if (v29 <= v28)
    a4 = v28;
  else
    a4 = v29;
  v30 = sub_21502DCC8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v32 = *((_QWORD *)v30 + 2);
  v31 = *((_QWORD *)v30 + 3);
  v11 = v32 + 1;
  if (v32 >= v31 >> 1)
    goto LABEL_75;
  while (1)
  {
    *((_QWORD *)v30 + 2) = v11;
    v33 = &v30[48 * v32];
    *((_QWORD *)v33 + 4) = 0;
    *((_QWORD *)v33 + 5) = 0xE000000000000000;
    *((_QWORD *)v33 + 6) = 0;
    *((_QWORD *)v33 + 7) = 0xE000000000000000;
    *((_QWORD *)v33 + 8) = a3;
    *((_QWORD *)v33 + 9) = a4;
    v34 = *((_QWORD *)v30 + 9);
    v35 = __OFADD__(v34, 2);
    v36 = v34 + 2;
    if (v35)
      break;
    v35 = __OFADD__(v36, 1);
    v31 = v36 + 1;
    if (v35)
      goto LABEL_77;
    v11 = v21;
    v21 = v93;
LABEL_16:
    v32 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      v87 = (uint64_t)&v100 + 8;
      v88 = v20 + 32;
      v86 = (__int128 *)((char *)&v108 + 8);
      v91 = v21 - 1;
      v92 = v104;
      swift_bridgeObjectRetain();
      a4 = 0;
      v31 = (unint64_t)&unk_215138000;
      v76 = xmmword_215138210;
      v95 = a5;
      v37 = v21 == 0;
      if (!v21)
      {
LABEL_18:
        v109 = 0u;
        v110 = 0u;
        v38 = v21;
        v108 = 0u;
        goto LABEL_21;
      }
      while (1)
      {
        if (v37)
          goto LABEL_72;
        v38 = a4 + 1;
        a3 = v87;
        sub_21501EE90(v88 + 40 * a4, v87);
        *(_QWORD *)&v108 = a4;
        v39 = *(_OWORD *)(a3 + 16);
        v40 = v86;
        *v86 = *(_OWORD *)a3;
        v40[1] = v39;
        *((_QWORD *)v40 + 4) = *(_QWORD *)(a3 + 32);
LABEL_21:
        sub_2150BE428((uint64_t)&v108, (uint64_t)&v103);
        if (!v104[3])
        {
          sub_215049D70((uint64_t)v112);
          return v30;
        }
        v98 = v11;
        a4 = v103;
        v41 = *((_OWORD *)v92 + 1);
        v100 = *(_OWORD *)v92;
        v101 = v41;
        v31 = v92[4];
        v102 = v31;
        v11 = v21 - v103;
        if (__OFSUB__(v21, v103))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          break;
        }
        v31 = v11 - 1;
        if (__OFSUB__(v11, 1))
          goto LABEL_62;
        if (v11 != 1)
        {
          if ((*(_BYTE *)(a5 + 24) & 1) != 0)
          {
            *(_QWORD *)&v108 = v11 - 1;
            sub_2151303B8();
            v20 = v42;
            a3 = sub_21512FB48();
            swift_bridgeObjectRelease();
            v43 = sub_21512FB48();
            if (v43 <= a3)
              v31 = a3;
            else
              v31 = v43;
          }
          else
          {
            *(_QWORD *)&v108 = v11 - 1;
            sub_2151303B8();
            v20 = v44;
            a3 = sub_21512FB48();
            swift_bridgeObjectRelease();
            v45 = sub_21512FB48();
            v31 = a3 + v45;
            if (__OFADD__(a3, v45))
              goto LABEL_73;
          }
          if (*(_QWORD *)(a5 + 8) < (int64_t)v31)
            v31 = *(_QWORD *)(a5 + 8);
        }
        v35 = __OFADD__(v31, 2);
        v31 += 2;
        if (v35)
          goto LABEL_63;
        v35 = __OFADD__(v31++, 1);
        if (v35)
          goto LABEL_64;
        v46 = *(_QWORD *)a5 - v32;
        if (__OFSUB__(*(_QWORD *)a5, v32))
          goto LABEL_65;
        if (a4 == v91)
          v31 = 0;
        v35 = __OFSUB__(v46, v31);
        v31 = v46 - v31;
        if (v35)
          goto LABEL_66;
        v35 = __OFSUB__(v31, 2);
        v31 -= 2;
        if (v35)
          goto LABEL_67;
        v97 = v38;
        v47 = v31 - 1;
        if (__OFSUB__(v31, 1))
          goto LABEL_68;
        v90 = (_QWORD *)(v21 - a4);
        v96 = v32;
        v99 = v30;
        v49 = *((_QWORD *)&v101 + 1);
        v48 = v102;
        __swift_project_boxed_opaque_existential_1(&v100, *((uint64_t *)&v101 + 1));
        v50 = *(_QWORD *)(v48 + 8);
        v51 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 112);
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8538);
        v53 = sub_21506037C(&qword_254DA8540, &qword_254DA8538, MEMORY[0x24BEE2180]);
        v54 = v106;
        v94 = v52;
        v51(v106, v105, a5, v52, v53, v49, v50);
        v20 = v106[1];
        a5 = v106[3];
        v32 = v106[4];
        a4 = v107;
        if (v47 >= v107)
        {
          a3 = v106[2];
          v30 = v99;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = v99;
          if (*((_QWORD *)v99 + 2) != 1)
          {
            sub_215049D70((uint64_t)v112);
            sub_2150BDC18(v95, (unint64_t *)&v108);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              goto LABEL_78;
            goto LABEL_57;
          }
          v55 = *((_QWORD *)&v101 + 1);
          v89 = v102;
          v90 = __swift_project_boxed_opaque_existential_1(&v100, *((uint64_t *)&v101 + 1));
          v56 = *(_QWORD *)(v95 + 8);
          v57 = *(_QWORD *)(v95 + 16);
          if (v56 >= v47)
            v56 = v47;
          v58 = *(_BYTE *)(v95 + 24);
          v59 = (uint64_t)v77;
          *(_WORD *)(v77 + 25) = 257;
          *(_QWORD *)v59 = v47;
          *(_QWORD *)(v59 + 8) = v56;
          *(_QWORD *)(v59 + 16) = v57;
          *(_BYTE *)(v59 + 24) = v58;
          sub_21512F764();
          sub_2150BE470();
          sub_21512F5C0();
          sub_21512F764();
          sub_2150BE4B4();
          v60 = v80;
          sub_21512F5F0();
          v108 = v76;
          __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
          sub_21506037C(&qword_254DA8568, &qword_254DA7F20, MEMORY[0x24BEE1BC0]);
          v61 = v83;
          sub_21512F608();
          v62 = v82;
          MEMORY[0x2199DB15C](v61, v82);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v61, v85);
          v63 = v60;
          v30 = v99;
          v64 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v63, v62);
          MEMORY[0x2199DB12C](v64);
          v54 = v111;
          (*(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 + 8) + 112))(v111, v105, v59, v94, v53, v55);
          sub_21509C010(v59);
          v20 = v111[1];
          a3 = v111[2];
          a5 = v111[3];
          v32 = v111[4];
          a4 = v111[5];
        }
        v21 = *v54;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v30 = sub_21502DCC8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        v66 = *((_QWORD *)v30 + 2);
        v65 = *((_QWORD *)v30 + 3);
        v11 = v66 + 1;
        if (v66 >= v65 >> 1)
          v30 = sub_21502DCC8((char *)(v65 > 1), v66 + 1, 1, v30);
        *((_QWORD *)v30 + 2) = v11;
        v67 = &v30[48 * v66];
        *((_QWORD *)v67 + 4) = v21;
        *((_QWORD *)v67 + 5) = v20;
        *((_QWORD *)v67 + 6) = a3;
        *((_QWORD *)v67 + 7) = a5;
        *((_QWORD *)v67 + 8) = v32;
        *((_QWORD *)v67 + 9) = a4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = a4 + 2;
        if (__OFADD__(a4, 2))
          goto LABEL_69;
        v35 = __OFADD__(v31, 1);
        v31 = a4 + 3;
        if (v35)
          goto LABEL_70;
        v32 = v96 + v31;
        if (__OFADD__(v96, v31))
          goto LABEL_71;
        sub_21501EA34((uint64_t)&v100);
        a5 = v95;
        a4 = v97;
        v11 = v98;
        v21 = v93;
        v37 = v97 >= v93;
        if (v97 == v93)
          goto LABEL_18;
      }
    }
    __break(1u);
LABEL_75:
    v30 = sub_21502DCC8((char *)(v31 > 1), v11, 1, v30);
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  v30 = sub_21502DCC8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
LABEL_57:
  v69 = *((_QWORD *)v30 + 2);
  v68 = *((_QWORD *)v30 + 3);
  if (v69 >= v68 >> 1)
    v30 = sub_21502DCC8((char *)(v68 > 1), v69 + 1, 1, v30);
  *((_QWORD *)v30 + 2) = v69 + 1;
  v70 = &v30[48 * v69];
  v71 = v108;
  v72 = v110;
  *((_OWORD *)v70 + 3) = v109;
  *((_OWORD *)v70 + 4) = v72;
  *((_OWORD *)v70 + 2) = v71;
  sub_21501EA34((uint64_t)&v100);
  return v30;
}

char *sub_2150BCEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  int64_t v102;
  _QWORD v103[5];
  _OWORD v104[3];
  _QWORD v105[5];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v13 = sub_21512F614();
  v79 = *(_QWORD *)(v13 - 8);
  v80 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8548);
  v76 = *(_QWORD *)(v15 - 8);
  v77 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v75 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21512F770();
  MEMORY[0x24BDAC7A8](v17);
  v74 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 + 24);
  v70 = v6;
  ((void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v20)(&v110, a3, a5);
  v21 = v110;
  v22 = v111;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v93 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRelease();
  v24 = *(unsigned __int8 *)(a2 + 25);
  v92 = a2;
  v95 = a1;
  v96 = a4;
  if (v24 != 1)
    goto LABEL_7;
  sub_2150BE818(a2, a4, a6, v23, v104);
  v25 = sub_21502DCC8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v22 = *((_QWORD *)v25 + 2);
  v26 = *((_QWORD *)v25 + 3);
  v98 = v25;
  v21 = v22 + 1;
  if (v22 >= v26 >> 1)
    goto LABEL_58;
  while (1)
  {
    v27 = v98;
    *((_QWORD *)v98 + 2) = v21;
    v28 = &v27[48 * v22];
    v29 = v104[2];
    *((_OWORD *)v28 + 3) = v104[1];
    *((_OWORD *)v28 + 4) = v29;
    *((_OWORD *)v28 + 2) = v104[0];
    v30 = *((_QWORD *)v27 + 9);
    v31 = __OFADD__(v30, 2);
    v32 = v30 + 2;
    if (v31)
      break;
    v31 = __OFADD__(v32, 1);
    v26 = v32 + 1;
    if (v31)
    {
      __break(1u);
LABEL_7:
      v98 = (char *)MEMORY[0x24BEE4AF8];
      v26 = 1;
    }
    v33 = v26 + 1;
    if (!__OFADD__(v26, 1))
    {
      ((void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v20)(&v110, a3, a5);
      v22 = v110;
      v21 = v111;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = 0;
      v35 = *(_QWORD *)(v22 + 16);
      v83 = v22 + 32;
      v84 = v22;
      v81 = (__int128 *)((char *)&v107 + 8);
      v82 = (unint64_t)&v99 + 8;
      v90 = v93 - 1;
      v91 = v103;
      v71 = xmmword_215138210;
      v88 = a3;
      v89 = a5;
      v94 = a6;
      v87 = v35;
      while (1)
      {
        v20 = v92;
        if (v34 == v35)
        {
          v108 = 0u;
          v109 = 0u;
          v36 = v35;
          v107 = 0u;
        }
        else
        {
          v26 = *(_QWORD *)(v84 + 16);
          if (v34 >= v26)
            goto LABEL_56;
          v36 = v34 + 1;
          v22 = v82;
          sub_21501EE90(v83 + 40 * v34, v82);
          *(_QWORD *)&v107 = v34;
          v37 = *(_OWORD *)(v22 + 16);
          v38 = v81;
          *v81 = *(_OWORD *)v22;
          v38[1] = v37;
          *((_QWORD *)v38 + 4) = *(_QWORD *)(v22 + 32);
        }
        sub_2150BE428((uint64_t)&v107, (uint64_t)&v102);
        if (!v103[3])
        {
          swift_bridgeObjectRelease();
          return v98;
        }
        v97 = v36;
        v21 = v102;
        v39 = *((_OWORD *)v91 + 1);
        v99 = *(_OWORD *)v91;
        v100 = v39;
        v101 = v91[4];
        v26 = v93;
        v40 = v93 - v102;
        if (__OFSUB__(v93, v102))
        {
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          break;
        }
        if (__OFSUB__(v40, 1))
          goto LABEL_46;
        v41 = sub_2150BE734(v40 - 1, v20);
        v26 = v41 + 2;
        if (__OFADD__(v41, 2))
          goto LABEL_47;
        v31 = __OFADD__(v26, 1);
        v26 = v41 + 3;
        if (v31)
          goto LABEL_48;
        v42 = *(_QWORD *)v20 - v33;
        if (__OFSUB__(*(_QWORD *)v20, v33))
          goto LABEL_49;
        if (v21 == v90)
          v26 = 0;
        v31 = __OFSUB__(v42, v26);
        v26 = v42 - v26;
        if (v31)
          goto LABEL_50;
        v31 = __OFSUB__(v26, 2);
        v26 -= 2;
        if (v31)
          goto LABEL_51;
        v43 = v26 - 1;
        if (__OFSUB__(v26, 1))
          goto LABEL_52;
        v44 = *((_QWORD *)&v100 + 1);
        v45 = v101;
        __swift_project_boxed_opaque_existential_1(&v99, *((uint64_t *)&v100 + 1));
        v46 = *(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8) + 112);
        v47 = v105;
        v46(v105, v95, v20, v96, a6, v44);
        v21 = v105[1];
        v22 = v105[3];
        a6 = v105[4];
        a3 = v106;
        if (v43 >= v106)
        {
          v58 = v105[2];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((_QWORD *)v98 + 2) != 1)
          {
            swift_bridgeObjectRelease();
            sub_2150BDF08(v40, v20, v88, v89, (unint64_t *)&v107);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              goto LABEL_60;
            goto LABEL_41;
          }
          v48 = v101;
          v86 = *((_QWORD *)&v100 + 1);
          v85 = __swift_project_boxed_opaque_existential_1(&v99, *((uint64_t *)&v100 + 1));
          v49 = *(_QWORD *)(v20 + 8);
          v50 = *(_QWORD *)(v20 + 16);
          if (v49 >= v43)
            v49 = v43;
          v51 = *(_BYTE *)(v20 + 24);
          v52 = (uint64_t)v72;
          *(_WORD *)(v72 + 25) = 257;
          *(_QWORD *)v52 = v43;
          *(_QWORD *)(v52 + 8) = v49;
          *(_QWORD *)(v52 + 16) = v50;
          *(_BYTE *)(v52 + 24) = v51;
          sub_21512F764();
          sub_2150BE470();
          sub_21512F5C0();
          sub_21512F764();
          sub_2150BE4B4();
          v53 = v75;
          sub_21512F5F0();
          v107 = v71;
          __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
          sub_21506037C(&qword_254DA8568, &qword_254DA7F20, MEMORY[0x24BEE1BC0]);
          v54 = v78;
          sub_21512F608();
          v55 = v77;
          MEMORY[0x2199DB15C](v54, v77);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v80);
          v56 = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v53, v55);
          MEMORY[0x2199DB12C](v56);
          v57 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8) + 112);
          v47 = (uint64_t *)&v110;
          v57(&v110, v95, v52, v96, v94, v86);
          sub_21509C010(v52);
          v21 = v111;
          v58 = v112;
          v22 = v113;
          a6 = v114;
          a3 = v115;
        }
        a5 = *v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v98 = sub_21502DCC8(0, *((_QWORD *)v98 + 2) + 1, 1, v98);
        v20 = *((_QWORD *)v98 + 2);
        v59 = *((_QWORD *)v98 + 3);
        if (v20 >= v59 >> 1)
          v98 = sub_21502DCC8((char *)(v59 > 1), v20 + 1, 1, v98);
        v60 = v98;
        *((_QWORD *)v98 + 2) = v20 + 1;
        v61 = &v60[48 * v20];
        *((_QWORD *)v61 + 4) = a5;
        *((_QWORD *)v61 + 5) = v21;
        *((_QWORD *)v61 + 6) = v58;
        *((_QWORD *)v61 + 7) = v22;
        *((_QWORD *)v61 + 8) = a6;
        *((_QWORD *)v61 + 9) = a3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = a3 + 2;
        if (__OFADD__(a3, 2))
          goto LABEL_53;
        v31 = __OFADD__(v26, 1);
        v26 = a3 + 3;
        if (v31)
          goto LABEL_54;
        v31 = __OFADD__(v33, v26);
        v33 += v26;
        if (v31)
          goto LABEL_55;
        sub_21501EA34((uint64_t)&v99);
        a3 = v88;
        a5 = v89;
        a6 = v94;
        v35 = v87;
        v34 = v97;
      }
    }
    __break(1u);
LABEL_58:
    v98 = sub_21502DCC8((char *)(v26 > 1), v21, 1, v98);
  }
  __break(1u);
LABEL_60:
  v98 = sub_21502DCC8(0, *((_QWORD *)v98 + 2) + 1, 1, v98);
LABEL_41:
  v63 = *((_QWORD *)v98 + 2);
  v62 = *((_QWORD *)v98 + 3);
  if (v63 >= v62 >> 1)
    v98 = sub_21502DCC8((char *)(v62 > 1), v63 + 1, 1, v98);
  v64 = v98;
  *((_QWORD *)v98 + 2) = v63 + 1;
  v65 = &v64[48 * v63];
  v66 = v107;
  v67 = v109;
  *((_OWORD *)v65 + 3) = v108;
  *((_OWORD *)v65 + 4) = v67;
  *((_OWORD *)v65 + 2) = v66;
  sub_21501EA34((uint64_t)&v99);
  return v98;
}

uint64_t sub_2150BD670(uint64_t a1, uint64_t a2)
{
  if (a1 != 1)
  {
    type metadata accessor for FormattingOptions();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8570);
    sub_2150BE470();
    sub_21506037C(qword_254DA8578, &qword_254DA8570, MEMORY[0x24BDCC928]);
    sub_2151300B8();
    sub_21512FB90();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    if (a2 != 1)
      goto LABEL_3;
LABEL_5:
    sub_21512FB90();
    return 0;
  }
  sub_21512FB90();
  if (a2 == 1)
    goto LABEL_5;
LABEL_3:
  type metadata accessor for FormattingOptions();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8570);
  sub_2150BE470();
  sub_21506037C(qword_254DA8578, &qword_254DA8570, MEMORY[0x24BDCC928]);
  sub_2151300B8();
  sub_21512FB90();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2150BD858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char v37;
  char v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  char v45;
  char v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  if (*(_BYTE *)(a2 + 24) != 1)
  {
    v55 = a1;
    v51 = sub_2151303B8();
    v52 = v22;
    sub_21512FB90();
    v23 = sub_215087BFC(*(_QWORD *)(a2 + 8), v51, v52);
    v11 = v24;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a3 + 16))
    {
      v25 = v11;
      sub_21501EE90(a3 + 32, (uint64_t)&v51);
      v26 = v53;
      v27 = v54;
      __swift_project_boxed_opaque_existential_1(&v51, v53);
      v28 = *(_QWORD *)(v27 + 8);
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v29(v26, v28);
      result = sub_21501EA34((uint64_t)&v51);
      if (v30 < 0)
      {
LABEL_33:
        __break(1u);
        return result;
      }
      v11 = v25;
      if (v30)
      {
        v31 = 0;
LABEL_21:
        v41 = sub_2150EBD1C(0, v30, v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21501EF2C(0, v30, v31);
        v14 = 0xE000000000000000;
        v33 = sub_215057D58(0, 0xE000000000000000, v41);
        v42 = sub_21512FB48();
        v43 = sub_215066A70((uint64_t)v33);
        v44 = sub_215068AFC(v43);
        v46 = v45;
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
          v47 = 0;
        else
          v47 = v44;
        if (v47 <= v42)
          v40 = v42;
        else
          v40 = v47;
        result = sub_21512FB48();
        v12 = 0;
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v30 = 0;
    v31 = 2;
    goto LABEL_21;
  }
  v51 = a1;
  v7 = sub_2151303B8();
  v8 = *(_QWORD *)(a2 + 8);
  v50 = sub_215087BFC(v8, v7, v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = sub_215087BFC(v8, 1701998445, 0xE400000000000000);
  v14 = v13;
  if (!*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  v49 = v11;
  sub_21501EE90(a3 + 32, (uint64_t)&v51);
  v16 = v53;
  v15 = v54;
  __swift_project_boxed_opaque_existential_1(&v51, v53);
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v18(v16, v17);
  result = sub_21501EA34((uint64_t)&v51);
  if (v19 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  v11 = v49;
  if (!v19)
  {
LABEL_11:
    v19 = 0;
    v21 = 2;
    goto LABEL_12;
  }
  v21 = 0;
LABEL_12:
  v32 = sub_2150EBD1C(0, v19, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(0, v19, v21);
  v33 = sub_215057D58(0, 0xE000000000000000, v32);
  v23 = v50;
  v34 = sub_21512FB48();
  v35 = sub_215066A70((uint64_t)v33);
  v36 = sub_215068AFC(v35);
  v38 = v37;
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
    v39 = 0;
  else
    v39 = v36;
  if (v39 <= v34)
    v40 = v34;
  else
    v40 = v39;
  result = sub_21512FB48();
LABEL_28:
  if (result <= v40)
    v48 = v40;
  else
    v48 = result;
  *a4 = v23;
  a4[1] = v11;
  a4[2] = v12;
  a4[3] = v14;
  a4[4] = (unint64_t)v33;
  a4[5] = v48;
  return result;
}

uint64_t sub_2150BDC18@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  int64_t v26;
  uint64_t result;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  char v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v3 = v2;
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v6 = sub_2151303B8();
    v7 = *(_QWORD *)(a1 + 8);
    v39 = sub_215087BFC(v7, v6, v8);
    v40 = v9;
    swift_bridgeObjectRelease();
    v10 = sub_215087BFC(v7, 1701998445, 0xE400000000000000);
    v12 = v11;
    v13 = *(_QWORD *)(v2 + 24);
    v14 = *(_QWORD *)(v2 + 32);
    v15 = *(_BYTE *)(v3 + 40);
    v16 = sub_2150EBD1C(v13, v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v13, v14, v15);
    v17 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v13;
    v19 = v40;
    sub_21501EF2C(v18, v14, v15);
    v20 = sub_215057D58(0, 0xE000000000000000, v16);
    v21 = sub_21512FB48();
    v22 = sub_215066A70((uint64_t)v20);
    v23 = sub_215068AFC(v22);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      v26 = 0;
    else
      v26 = v23;
    if (v26 > v21)
      v21 = v26;
    result = sub_21512FB48();
  }
  else
  {
    v41 = sub_2151303B8();
    v42 = v28;
    sub_21512FB90();
    v17 = sub_215087BFC(*(_QWORD *)(a1 + 8), v41, v42);
    v19 = v29;
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v2 + 24);
    v31 = *(_QWORD *)(v2 + 32);
    v32 = *(_BYTE *)(v2 + 40);
    v33 = sub_2150EBD1C(v30, v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v30, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v30, v31, v32);
    v12 = 0xE000000000000000;
    v20 = sub_215057D58(0, 0xE000000000000000, v33);
    v21 = sub_21512FB48();
    v34 = sub_215066A70((uint64_t)v20);
    v35 = sub_215068AFC(v34);
    LOBYTE(v30) = v36;
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      v37 = 0;
    else
      v37 = v35;
    if (v37 > v21)
      v21 = v37;
    result = sub_21512FB48();
    v10 = 0;
  }
  if (result <= v21)
    v38 = v21;
  else
    v38 = result;
  *a2 = v17;
  a2[1] = v19;
  a2[2] = v10;
  a2[3] = v12;
  a2[4] = (unint64_t)v20;
  a2[5] = v38;
  return result;
}

uint64_t sub_2150BDF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  char v29;
  char v30;
  int64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  char v44;
  char v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  if (*(_BYTE *)(a2 + 24) == 1)
  {
    v50 = a1;
    v9 = sub_2151303B8();
    v10 = *(_QWORD *)(a2 + 8);
    v12 = sub_215087BFC(v10, v9, v11);
    v48 = v13;
    v49 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_215087BFC(v10, 1701998445, 0xE400000000000000);
    v16 = v15;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v50, a3, a4);
    v17 = v52;
    v18 = v53;
    v19 = v54;
    v20 = sub_2150EBD1C(v52, v53, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v17;
    v22 = v18;
    v23 = v48;
    v24 = v49;
    sub_21501EF2C(v21, v22, v19);
    v25 = sub_215057D58(0, 0xE000000000000000, v20);
    v26 = sub_21512FB48();
    v27 = sub_215066A70((uint64_t)v25);
    v28 = sub_215068AFC(v27);
    v30 = v29;
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      v31 = 0;
    else
      v31 = v28;
    if (v31 <= v26)
      v32 = v26;
    else
      v32 = v31;
    result = sub_21512FB48();
  }
  else
  {
    v55 = a1;
    v50 = sub_2151303B8();
    v51 = v34;
    sub_21512FB90();
    v24 = sub_215087BFC(*(_QWORD *)(a2 + 8), v50, v51);
    v36 = v35;
    swift_bridgeObjectRelease();
    v23 = v36;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v50, a3, a4);
    v37 = v52;
    v38 = v53;
    v39 = v54;
    v40 = sub_2150EBD1C(v52, v53, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v37, v38, v39);
    v16 = 0xE000000000000000;
    v25 = sub_215057D58(0, 0xE000000000000000, v40);
    v41 = sub_21512FB48();
    v42 = sub_215066A70((uint64_t)v25);
    v43 = sub_215068AFC(v42);
    v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
      v46 = 0;
    else
      v46 = v43;
    if (v46 <= v41)
      v32 = v41;
    else
      v32 = v46;
    result = sub_21512FB48();
    v14 = 0;
  }
  if (result <= v32)
    v47 = v32;
  else
    v47 = result;
  *a5 = v24;
  a5[1] = v23;
  a5[2] = v14;
  a5[3] = v16;
  a5[4] = (unint64_t)v25;
  a5[5] = v47;
  return result;
}

uint64_t sub_2150BE1E0@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = sub_2151303B8();
  v6 = sub_215087BFC(*(_QWORD *)(a1 + 8), v4, v5);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_2150BE264(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2150BE2A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2150BE2DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x2150BE33CLL);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_2150BE2F4 + *((int *)qword_2150BE340 + (a4 >> 62))))(v5);
}

uint64_t sub_2150BE350(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_2150BE360 + *((int *)qword_2150BE408 + (a4 >> 62))))();
}

uint64_t sub_2150BE374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x2150BE400);
  }
  return ((uint64_t (*)(void))((char *)&loc_2150BE3B0 + *((int *)qword_2150BE418 + a3)))();
}

uint64_t sub_2150BE428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2150BE470()
{
  unint64_t result;

  result = qword_254DA8558;
  if (!qword_254DA8558)
  {
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254DA8558);
  }
  return result;
}

unint64_t sub_2150BE4B4()
{
  unint64_t result;

  result = qword_254DA8560;
  if (!qword_254DA8560)
  {
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_254DA8560);
  }
  return result;
}

uint64_t sub_2150BE4F8@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2150BE1E0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2150BE514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormattingOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2150BE558(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      sub_2151303B8();
      v3 = sub_21512FB48();
      swift_bridgeObjectRelease();
      v4 = sub_21512FB48();
      if (v4 <= v3)
        v5 = v3;
      else
        v5 = v4;
    }
    else
    {
      sub_2151303B8();
      v6 = sub_21512FB48();
      swift_bridgeObjectRelease();
      result = sub_21512FB48();
      v5 = v6 + result;
      if (__OFADD__(v6, result))
      {
        __break(1u);
        return result;
      }
    }
    if (*(_QWORD *)(a2 + 8) >= v5)
      return v5;
    else
      return *(_QWORD *)(a2 + 8);
  }
  return result;
}

uint64_t sub_2150BE638(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_21512FB6C();
    return sub_21512FC14();
  }
  return result;
}

uint64_t sub_2150BE6C0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;

  if ((a2 & 1) != 0)
    return 0;
  sub_2151303B8();
  v4 = sub_21512FB48();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 8) >= v4)
    return v4;
  else
    return *(_QWORD *)(a3 + 8);
}

uint64_t sub_2150BE734(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result)
  {
    if (*(_BYTE *)(a2 + 24) == 1)
    {
      sub_2151303B8();
      v3 = sub_21512FB48();
      swift_bridgeObjectRelease();
      v4 = sub_21512FB48();
      if (v4 <= v3)
        v5 = v3;
      else
        v5 = v4;
    }
    else
    {
      sub_2151303B8();
      v6 = sub_21512FB48();
      swift_bridgeObjectRelease();
      result = sub_21512FB48();
      v5 = v6 + result;
      if (__OFADD__(v6, result))
      {
        __break(1u);
        return result;
      }
    }
    if (*(_QWORD *)(a2 + 8) >= v5)
      return v5;
    else
      return *(_QWORD *)(a2 + 8);
  }
  return result;
}

uint64_t sub_2150BE818@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X7>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char v10;
  char v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[4];

  v16[2] = a1;
  v6 = sub_215021834((void (*)(char *, char *))sub_2150BE8F8, (uint64_t)v16, a2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], a4);
  v7 = sub_21512FB48();
  v8 = sub_215066A70(v6);
  v9 = sub_215068AFC(v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    v12 = 0;
  else
    v12 = v9;
  if (v12 <= v7)
    v13 = v7;
  else
    v13 = v12;
  result = sub_21512FB48();
  if (result <= v13)
    v15 = v13;
  else
    v15 = result;
  *a5 = 0;
  a5[1] = 0xE000000000000000;
  a5[2] = 0;
  a5[3] = 0xE000000000000000;
  a5[4] = v6;
  a5[5] = v15;
  return result;
}

uint64_t sub_2150BE8F8@<X0>(unint64_t *a1@<X8>)
{
  return sub_2150BE4F8(a1);
}

uint64_t sub_2150BE90C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  _BYTE *v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_21512FB0C();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = *((_QWORD *)a2 + 1);
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  v15 = a2[32];
  v16 = *((_QWORD *)a2 + 5);
  v17 = a2[48];
  v18 = a2[49];
  v19 = a2[50];
  v20 = a2[51];
  v21 = a2[52];
  v22 = (_BYTE *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v24 = *v22;
    result = v23 - 1;
    if (v23 == 1 || *v22)
    {
      if (v23 == 1 || v24 != 255)
      {
        if (v23 == 1 || v24 != 254)
        {
          v25 = 0;
          if (v23 != 1 && v24 == 239)
          {
            v25 = 0;
            if (*(unsigned __int8 *)(a1 + 33) == 187 && v23 >= 3)
            {
              v25 = 3;
              if (*(unsigned __int8 *)(a1 + 34) != 191)
                v25 = 0;
            }
          }
          goto LABEL_33;
        }
        if (*(unsigned __int8 *)(a1 + 33) == 255)
        {
          v31 = *((_QWORD *)a2 + 2);
          v32 = v12;
          sub_21512FAD0();
          goto LABEL_31;
        }
      }
      else if (*(unsigned __int8 *)(a1 + 33) == 254)
      {
        if (v23 != 2)
        {
          result = *(unsigned __int8 *)(a1 + 34);
          if (!*(_BYTE *)(a1 + 34) && v23 != 3 && !*(_BYTE *)(a1 + 35))
          {
            v31 = *((_QWORD *)a2 + 2);
            v32 = v12;
            sub_21512FAF4();
            goto LABEL_31;
          }
        }
        if (*(unsigned __int8 *)(a1 + 33) == 254)
        {
          v31 = *((_QWORD *)a2 + 2);
          v32 = v12;
          sub_21512FAE8();
          goto LABEL_31;
        }
      }
    }
    else if (!*(_BYTE *)(a1 + 33) && v23 != 2)
    {
      v25 = 0;
      if (*(unsigned __int8 *)(a1 + 34) != 254 || v23 == 3)
        goto LABEL_33;
      if (*(unsigned __int8 *)(a1 + 35) == 255)
      {
        v31 = *((_QWORD *)a2 + 2);
        v32 = v12;
        sub_21512FADC();
LABEL_31:
        v26 = sub_21512FAC4();
        v28 = v27;
        sub_2150602A0();
        swift_allocError();
        *(_QWORD *)v29 = v26;
        *(_QWORD *)(v29 + 8) = v28;
        *(_QWORD *)(v29 + 16) = 0;
        *(_QWORD *)(v29 + 24) = 0;
        *(_QWORD *)(v29 + 32) = 0x1000000000000000;
        *(_BYTE *)(v29 + 40) = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  v25 = 0;
LABEL_33:
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = v14;
  *(_BYTE *)(a3 + 40) = v15;
  *(_QWORD *)(a3 + 48) = v16;
  *(_BYTE *)(a3 + 56) = v17;
  *(_BYTE *)(a3 + 57) = v18;
  *(_BYTE *)(a3 + 58) = v19;
  *(_BYTE *)(a3 + 59) = v20;
  *(_BYTE *)(a3 + 60) = v21;
  *(_QWORD *)(a3 + 64) = v22;
  *(_QWORD *)(a3 + 72) = v23;
  *(_QWORD *)(a3 + 80) = v25;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = v22;
  *(_QWORD *)(a3 + 104) = v23;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2150BEC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char i;
  int v22;
  int v23;
  int v24;
  int v25;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = v2 - v1;
  if (v2 == v1)
    return 0;
  result = 0;
  v5 = *(unsigned __int8 *)(v0 + 57);
  v6 = *(unsigned __int8 *)(v0 + 58);
  v7 = *(unsigned __int8 *)(v0 + 59);
  v8 = *(unsigned __int8 *)(v0 + 60);
  v9 = v2 - 1;
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);
  while (1)
  {
    while (1)
    {
      v12 = 0;
LABEL_5:
      v13 = *(unsigned __int8 *)(v11 + v10);
      v14 = v13 == 34 ? *(unsigned __int8 *)(v0 + 57) : 0;
      if (v14 != 1)
        break;
      if (v9 == v10)
      {
        if (v2 >= v1)
          goto LABEL_27;
        __break(1u);
LABEL_36:
        if (v9 == v10)
          return 2;
        v20 = v10 + 1;
        result = 2;
        do
        {
          for (i = 0; ; i = 0)
          {
            while (1)
            {
              while (1)
              {
                v22 = 0;
LABEL_41:
                v23 = *(unsigned __int8 *)(v11 + v20);
                v24 = v23 == 34 ? v5 : 0;
                if (v24 != 1)
                  break;
                if (v9 == v20)
                  return result;
                i ^= 1u;
                ++v20;
              }
              if (v8 == v23)
                v25 = v6;
              else
                v25 = 0;
              if (v25 == 1)
              {
                while (v9 != v20)
                {
                  v22 ^= 1u;
                  ++v20;
                  if ((v22 & 1) == 0)
                    goto LABEL_41;
                }
                return result;
              }
              if ((i & 1) == 0)
                break;
              if (v9 == v20)
                return result;
              i = 1;
              ++v20;
            }
            if (v7 == v23)
              break;
            if (v23 == 10 || v23 == 13 || v9 == v20)
              return result;
            ++v20;
          }
          if (__OFADD__(result++, 1))
            goto LABEL_67;
          v19 = v9 == v20++;
        }
        while (!v19);
        return result;
      }
      result = result ^ 1;
      ++v10;
    }
    v15 = v8 == v13 ? *(unsigned __int8 *)(v0 + 58) : 0;
    if (v15 == 1)
      break;
    if ((result & 1) != 0)
    {
      if (v9 == v10)
        goto LABEL_26;
      result = 1;
      ++v10;
    }
    else
    {
      if (v7 == v13)
        goto LABEL_36;
      if (v13 == 10 || v13 == 13 || v9 == v10)
        goto LABEL_26;
      result = 0;
      ++v10;
    }
  }
  while (v9 != v10)
  {
    v12 ^= 1u;
    ++v10;
    if ((v12 & 1) == 0)
      goto LABEL_5;
  }
LABEL_26:
  if (v2 >= v1)
  {
LABEL_27:
    v16 = (unsigned __int8 *)(v11 + v1);
    result = 1;
    while (1)
    {
      v17 = *v16++;
      v18 = (1 << v17) & 0x100002600;
      v19 = v17 > 0x20 || v18 == 0;
      if (v19)
        break;
      if (!--v3)
        return 0;
    }
    return result;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_2150BEDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t i;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  _BOOL4 v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int64_t v50;
  int64_t v51;
  int64_t v52;
  unint64_t v53;
  _BOOL4 v54;
  unint64_t v55;
  int64_t v56;
  unsigned int v57;
  unsigned int v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  char v63;
  int v64;
  uint64_t v65;
  uint64_t v66;

  v3 = v2;
  LOBYTE(v5) = *(_BYTE *)(v1 + 57);
  v6 = *(unsigned __int8 *)(v1 + 60);
  v8 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 128);
  v63 = *(_BYTE *)(v1 + 56);
  v64 = *(unsigned __int8 *)(v1 + 59);
  LOBYTE(v60) = *(_BYTE *)(v1 + 58);
  v59 = *(_OWORD *)(v1 + 96);
  v61 = *(_OWORD *)(v1 + 112);
  v62 = *(_OWORD *)(v1 + 80);
  v65 = v1;
  v66 = sub_2150BEC04();
  *(_QWORD *)(v1 + 120) = v66;
  v10 = v9;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_93;
  for (i = v9; ; i = result)
  {
    v10 = *(_QWORD *)(i + 16);
    v13 = *(_QWORD *)(i + 24);
    v14 = v65;
    v15 = v66;
    v17 = v63;
    v16 = v64;
    if (v10 >= v13 >> 1)
    {
      result = (uint64_t)sub_21502DBB4((char *)(v13 > 1), v10 + 1, 1, (char *)i);
      v17 = v63;
      v16 = v64;
      v14 = v65;
      i = result;
      v15 = v66;
    }
    *(_QWORD *)(i + 16) = v10 + 1;
    *(_QWORD *)(i + 8 * v10 + 32) = v62;
    v18 = v62;
    *(_QWORD *)(v14 + 128) = i;
    *(_QWORD *)(v14 + 88) = 0;
    v19 = v61;
    if ((_QWORD)v62 == v7)
    {
      v20 = 0;
      v6 = *(_QWORD *)(i + 16);
      if (v6)
        goto LABEL_76;
      goto LABEL_81;
    }
    *(_QWORD *)&v61 = a1;
    *(_QWORD *)&v62 = v3;
    v21 = v15 - 1;
    result = __OFSUB__(v15, 1);
    v10 = 1;
    a1 = 0x100002600;
    v22 = v5 & 1;
    v5 = v60 & 1;
    while (1)
    {
      v20 = 0;
      v23 = 0;
      v24 = v19 * v15;
      v25 = (unsigned __int128)(v19 * (__int128)v15) >> 64 != (v19 * v15) >> 63;
LABEL_13:
      v26 = 0;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            v27 = 0;
            ++v18;
LABEL_15:
            v28 = *(unsigned __int8 *)(v8 + v18 - 1);
            if (v28 != 34 || v22 == 0)
              break;
            v26 = v26 ^ 1;
            if (v7 == v18)
              goto LABEL_37;
          }
          if ((_DWORD)v6 == v28 && v5 != 0)
          {
            while (v7 != v18)
            {
              v27 ^= 1u;
              ++v18;
              if ((v27 & 1) == 0)
                goto LABEL_15;
            }
LABEL_37:
            *(_QWORD *)(v14 + 80) = v7;
            v18 = v7;
            if ((v26 & 1) == 0)
              goto LABEL_38;
LABEL_70:
            v45 = v19;
            v46 = v23;
            sub_2150602A0();
            swift_allocError();
            *(_QWORD *)v47 = v45;
            *(_QWORD *)(v47 + 8) = v46;
            *(_QWORD *)(v47 + 16) = 0;
            *(_QWORD *)(v47 + 24) = 0;
            *(_QWORD *)(v47 + 32) = 0x2000000000000000;
            goto LABEL_87;
          }
          if ((v26 & 1) == 0)
            break;
          v26 = 1;
          if (v7 == v18)
          {
            *(_QWORD *)(v14 + 80) = v7;
            goto LABEL_70;
          }
        }
        if (v16 == v28)
        {
          *(_QWORD *)(v14 + 80) = v18;
          v37 = __OFADD__(v20++, 1);
          if (v37)
            goto LABEL_99;
          *(_QWORD *)(v14 + 88) = v20;
          v39 = *(_QWORD *)(i + 16);
          v38 = *(_QWORD *)(i + 24);
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v57 = result;
            v55 = v24;
            v54 = v25;
            v3 = v19;
            v60 = v20;
            v52 = v39 + 1;
            v53 = *(_QWORD *)(i + 16);
            v41 = sub_21502DBB4((char *)(v38 > 1), v40, 1, (char *)i);
            v40 = v52;
            v39 = v53;
            v25 = v54;
            v24 = v55;
            v20 = v60;
            v17 = v63;
            v16 = v64;
            v19 = v3;
            v14 = v65;
            i = (uint64_t)v41;
            result = v57;
            v15 = v66;
          }
          *(_QWORD *)(i + 16) = v40;
          *(_QWORD *)(i + 8 * v39 + 32) = v18;
          v23 = v20;
          goto LABEL_52;
        }
        if (v28 == 13)
          break;
        if (v28 == 10)
          goto LABEL_61;
        v26 = 0;
        if (v7 == v18)
        {
          v18 = v7;
          goto LABEL_61;
        }
      }
      *(_QWORD *)(v14 + 80) = v18;
      if (v18 < v7)
      {
        v26 = *(unsigned __int8 *)(v8 + v18);
        if ((_DWORD)v26 == 10)
        {
          ++v18;
LABEL_61:
          *(_QWORD *)(v14 + 80) = v18;
        }
      }
LABEL_38:
      if ((v17 & 1) != 0)
        break;
LABEL_63:
      if ((result & 1) != 0)
        goto LABEL_92;
      if (v20 != v21)
      {
        v6 = v20 + 1;
        if (!__OFADD__(v20, 1))
          goto LABEL_86;
        __break(1u);
LABEL_74:
        v20 = 0;
        goto LABEL_75;
      }
      v37 = __OFADD__(v19++, 1);
      if (v37)
      {
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      *(_QWORD *)(v14 + 112) = v19;
      *(_QWORD *)(v14 + 88) = 0;
      v3 = *(_QWORD *)(i + 16);
      v42 = *(_QWORD *)(i + 24);
      v43 = v3 + 1;
      if (v3 >= v42 >> 1)
      {
        v58 = result;
        LOBYTE(v60) = v3 + 1;
        v56 = v19;
        v44 = sub_21502DBB4((char *)(v42 > 1), v3 + 1, 1, (char *)i);
        v43 = v3 + 1;
        v17 = v63;
        v16 = v64;
        v19 = v56;
        v14 = v65;
        i = (uint64_t)v44;
        result = v58;
        v15 = v66;
      }
      *(_QWORD *)(i + 16) = v43;
      *(_QWORD *)(i + 8 * v3 + 32) = v18;
      *(_QWORD *)(v14 + 128) = i;
      if (v18 == v7)
        goto LABEL_74;
    }
    if (v25)
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    if ((v24 & 0x8000000000000000) != 0)
      goto LABEL_89;
    v26 = *(_QWORD *)(i + 16);
    if (v24 >= v26)
      goto LABEL_90;
    if (v20)
      goto LABEL_63;
    v31 = *(_QWORD *)(i + 32 + 8 * v24);
    v32 = v18 - v31;
    if (v18 >= v31)
      break;
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    result = (uint64_t)sub_21502DBB4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
  }
  if (v18 != v31)
  {
    v33 = (unsigned __int8 *)(v8 + v31);
    while (1)
    {
      v34 = *v33++;
      v35 = (1 << v34) & 0x100002600;
      if (v34 > 0x20 || v35 == 0)
        break;
      if (!--v32)
        goto LABEL_51;
    }
    v20 = 0;
    goto LABEL_63;
  }
LABEL_51:
  v20 = 0;
  *(_QWORD *)(i + 32 + 8 * v26 - 8) = v18;
LABEL_52:
  *(_QWORD *)(v14 + 128) = i;
  if (v18 != v7)
    goto LABEL_13;
LABEL_75:
  a1 = v61;
  v6 = *(_QWORD *)(i + 16);
  if (v6)
  {
LABEL_76:
    v48 = *(_QWORD *)(i + 8 * v6 + 24);
    if (v48 >= 1 && *(unsigned __int8 *)(v48 + v59 - 1) == v16)
    {
      v26 = *(_QWORD *)(i + 24);
      v10 = v6 + 1;
      if (v6 < v26 >> 1)
        goto LABEL_79;
      goto LABEL_97;
    }
  }
LABEL_81:
  if (!v20)
  {
LABEL_84:
    v49 = *(_OWORD *)(v14 + 112);
    *(_OWORD *)a1 = *(_OWORD *)(v14 + 96);
    *(_OWORD *)(a1 + 16) = v49;
    *(_QWORD *)(a1 + 32) = i;
    return result;
  }
  v26 = v15 - 1;
  if (__OFSUB__(v15, 1))
    goto LABEL_95;
  if (v20 == v26)
    goto LABEL_84;
  v6 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
LABEL_86:
    v50 = v19;
    sub_2150602A0();
    swift_allocError();
    *(_QWORD *)v47 = v50;
    *(_QWORD *)(v47 + 8) = v6;
    *(_QWORD *)(v47 + 16) = v66;
    *(_OWORD *)(v47 + 24) = xmmword_215138390;
LABEL_87:
    *(_BYTE *)(v47 + 40) = 0;
    return swift_willThrow();
  }
LABEL_96:
  __break(1u);
LABEL_97:
  v51 = v19;
  result = (uint64_t)sub_21502DBB4((char *)(v26 > 1), v10, 1, (char *)i);
  v19 = v51;
  v14 = v65;
  i = result;
LABEL_79:
  *(_QWORD *)(i + 16) = v10;
  *(_QWORD *)(i + 8 * v6 + 32) = v7;
  *(_QWORD *)(v14 + 128) = i;
  if (!__OFADD__(v19, 1))
  {
    *(_QWORD *)(v14 + 112) = v19 + 1;
    *(_QWORD *)(v14 + 88) = 0;
    goto LABEL_84;
  }
  __break(1u);
LABEL_99:
  __break(1u);
  return result;
}

uint64_t destroy for CSVIndex()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVIndex(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CSVIndex(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CSVIndex(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVIndex(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVIndex(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVIndex()
{
  return &type metadata for CSVIndex;
}

uint64_t CSVReadingError.row.getter()
{
  uint64_t v0;
  char v1;

  if (*(_BYTE *)(v0 + 40))
    v1 = 4;
  else
    v1 = 0;
  if (((1 << ((*(_QWORD *)(v0 + 32) >> 60) & 3 | v1)) & 0x5D) != 0)
    return *(_QWORD *)v0;
  else
    return 0;
}

uint64_t CSVReadingError.column.getter()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 40))
    v1 = 4;
  else
    v1 = 0;
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_2150BF5D0
                                                 + 4
                                                 * byte_2151383AC[(*(_QWORD *)(v0 + 32) >> 60) & 3 | v1]))(*(_QWORD *)(v0 + 8), 0);
}

uint64_t sub_2150BF5D0()
{
  return 0;
}

void CSVReadingError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = sub_21512FB0C();
  MEMORY[0x24BDAC7A8](v1);
  if (*(_BYTE *)(v0 + 40))
    v2 = 4;
  else
    v2 = 0;
  __asm { BR              X10 }
}

uint64_t sub_2150BF66C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 - 96) = 0;
  *(_QWORD *)(v6 - 88) = 0xE000000000000000;
  sub_21501F068(v1, v4);
  sub_215130178();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 - 96) = 0xD000000000000019;
  *(_QWORD *)(v6 - 88) = 0x8000000215131880;
  *(_QWORD *)(v6 - 112) = v0;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  *(_QWORD *)(v6 - 112) = v5;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_21501F068(v1, v4);
  sub_2150BA608(1024, v1, v4);
  v7 = *(_QWORD *)(v6 - 112);
  v8 = *(_QWORD *)(v6 - 104);
  sub_2150BFF5C(v7, v8);
  v10 = v9;
  sub_21501F0D8(v7, v8);
  MEMORY[0x2199DB810](v10, MEMORY[0x24BEE4260]);
  sub_21512FB90();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2150C00C4(v0, v5, v1, v4, v3, v2);
  return *(_QWORD *)(v6 - 96);
}

void CSVReadingError.errorDescription.getter()
{
  CSVReadingError.description.getter();
}

void sub_2150BFF1C()
{
  CSVReadingError.description.getter();
}

void sub_2150BFF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_21512F6A4();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_2150BFFD8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D210);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_21501F068(v2, v0);
    v7 = sub_21512F650();
    sub_21501F0D8(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x2150C00ACLL);
    }
  }
  return v4;
}

void sub_2150C00C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  int v6;

  if ((a6 & 1) != 0)
    v6 = 4;
  else
    v6 = 0;
  switch((a5 >> 60) & 3 | v6)
  {
    case 0uLL:
      sub_21501F0D8(a3, a4);
      break;
    case 1uLL:
    case 5uLL:
      swift_bridgeObjectRelease();
      break;
    case 4uLL:
      sub_21501F0D8(a4, a5);
      break;
    default:
      return;
  }
}

void sub_2150C0120(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  int v6;

  if ((a6 & 1) != 0)
    v6 = 4;
  else
    v6 = 0;
  switch((a5 >> 60) & 3 | v6)
  {
    case 0uLL:
      sub_21501F068(a3, a4);
      break;
    case 1uLL:
    case 5uLL:
      swift_bridgeObjectRetain();
      break;
    case 4uLL:
      sub_21501F068(a4, a5);
      break;
    default:
      return;
  }
}

void destroy for CSVReadingError(uint64_t a1)
{
  sub_2150C00C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_2150C0120(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_2150C0120(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  sub_2150C00C4(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_2150C00C4(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVReadingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FA && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1018);
  v3 = ((*(_QWORD *)(a1 + 32) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 40))) ^ 0x3FF;
  if (v3 >= 0x3F9)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CSVReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 1018;
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = (-a2 & 3) << 60;
      *(_BYTE *)(result + 40) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_2150C0394(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 40))
    v1 = 4;
  else
    v1 = 0;
  return (*(_QWORD *)(a1 + 32) >> 60) & 3 | v1;
}

uint64_t sub_2150C03B4(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_2150C03C4(uint64_t result, char a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(result + 32) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(_BYTE *)(result + 40) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for CSVReadingError()
{
  return &type metadata for CSVReadingError;
}

uint64_t sub_2150C03F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  unint64_t v22;
  int v23;

  v4 = (unsigned __int8 *)sub_2150C04E0(a1, a2);
  v6 = *(_QWORD *)(a3 + 16);
  if (!v6)
    return 0;
  v7 = v4;
  v8 = v5;
  v10 = *(_QWORD *)(a3 + 32);
  v9 = a3 + 32;
  result = (uint64_t)sub_215115810(v4, v5, v10);
  if ((result & 1) != 0)
    return 1;
  if (v6 == 1)
    return 0;
  v12 = &v7[v8];
  if (!v7)
    v12 = 0;
  v13 = 1;
LABEL_11:
  v14 = v13;
  if (!__OFADD__(v13++, 1))
  {
    v16 = 0;
    v17 = *(_QWORD *)(v9 + 8 * v14);
    v18 = *(_QWORD *)(v17 + 16);
    v19 = v17 + 32;
    v20 = v7;
    while (1)
    {
      if (v16 == v18)
      {
        v21 = 0;
        v22 = v18;
        if (!v20)
          goto LABEL_9;
      }
      else
      {
        if (v16 >= v18)
        {
          __break(1u);
          break;
        }
        v21 = *(unsigned __int8 *)(v19 + v16);
        v22 = v16 + 1;
        if (!v20)
        {
LABEL_9:
          if (v16 == v18)
            return 1;
LABEL_10:
          if (v13 == v6)
            return 0;
          goto LABEL_11;
        }
      }
      if (v20 == v12)
        goto LABEL_9;
      if (v16 != v18)
      {
        v23 = *v20++;
        v16 = v22;
        if (v21 == v23)
          continue;
      }
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2150C04E0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v11;
  uint64_t v12;

  if (a2 < 1)
  {
    v2 = 0;
    v7 = a2 - 1;
    if (!__OFSUB__(a2, 1))
      goto LABEL_10;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v2 = 0;
  while (1)
  {
    v3 = *(unsigned __int8 *)(result + v2);
    v4 = v3 > 0x20;
    v5 = (1 << v3) & 0x100002600;
    if (v4 || v5 == 0)
      break;
    if (a2 == ++v2)
    {
      v2 = a2;
      break;
    }
  }
  v7 = a2 - 1;
  if (__OFSUB__(a2, 1))
    goto LABEL_23;
LABEL_10:
  if (v2 < v7)
  {
    while (1)
    {
      v8 = *(unsigned __int8 *)(result + v7);
      v4 = v8 > 0x20;
      v9 = (1 << v8) & 0x100002600;
      if (v4 || v9 == 0)
        break;
      if (v2 >= --v7)
      {
        v7 = v2;
        break;
      }
    }
  }
  if (!result)
    goto LABEL_26;
  v11 = __OFSUB__(v7, v2);
  v12 = v7 - v2;
  if (!v11)
  {
    if (!__OFADD__(v12, 1))
    {
      result += v2;
      return result;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2150C059C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_2150C063C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2150C0720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[5];
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_21512F6A4();
  v13[2] = *(_QWORD *)(v2 - 8);
  v13[3] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v13[1] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21512FB0C();
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v15 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_215038E68(0, v6, 0);
    v7 = sub_2150C059C(a1);
    v13[4] = a1;
    v14 = a1 + 56;
    v13[0] = v4;
    if (v7 < 0 || v7 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v14 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == (_DWORD)v8)
      {
        v17 = v8;
        swift_bridgeObjectRetain();
        v9 = v15;
        sub_21512FB00();
        sub_21512FA88();
        v11 = v10;
        (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v4);
        if (v11 >> 60 != 15)
          __asm { BR              X9 }
        __break(1u);
        JUMPOUT(0x2150C0A78);
      }
LABEL_11:
      __break(1u);
      JUMPOUT(0x2150C0A68);
    }
    __break(1u);
    goto LABEL_11;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2150C0A88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for OptionMatcher()
{
  return &type metadata for OptionMatcher;
}

uint64_t sub_2150C0AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  char **v3;
  char **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char **v27;
  char *v28;
  char **v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  v32 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  v13 = sub_21512F740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v31 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v29 - v18;
  if (((_BYTE)v3[2] & 1) == 0)
  {
    v20 = v3[1];
    if (((unint64_t)v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v20 < *((_QWORD *)*v3 + 2))
    {
      v21 = *(void (**)(uint64_t *))&(*v3)[16 * (_QWORD)v20 + 32];
      v33 = a1;
      v34 = v32;
      swift_retain();
      v21(&v33);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
LABEL_12:
        v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v24(v19, v12, v13);
        v24(a3, v19, v13);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
      }
      sub_215066908((uint64_t)v12);
      goto LABEL_6;
    }
    __break(1u);
    return result;
  }
LABEL_6:
  v12 = *v3;
  v22 = *((_QWORD *)*v3 + 2);
  if (v22)
  {
    v29 = v4;
    v30 = a3;
    swift_bridgeObjectRetain();
    v19 = 0;
    v23 = v12 + 40;
    while (1)
    {
      a3 = (char *)*((_QWORD *)v23 - 1);
      v33 = a1;
      v34 = v32;
      swift_retain();
      ((void (*)(uint64_t *))a3)(&v33);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
      {
        swift_bridgeObjectRelease();
        v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v26 = v31;
        v25(v31, v10, v13);
        v27 = v29;
        v28 = v30;
        v29[1] = v19;
        *((_BYTE *)v27 + 16) = 0;
        v25(v28, v26, v13);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
      }
      sub_215066908((uint64_t)v10);
      if ((char *)(v22 - 1) == v19)
        break;
      ++v19;
      v23 += 16;
      if ((unint64_t)v19 >= *((_QWORD *)v12 + 2))
      {
        __break(1u);
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    a3 = v30;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, 1, 1, v13);
}

uint64_t initializeBufferWithCopyOfBuffer for DateParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DateParser()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for DateParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for DateParser(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateParser(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateParser()
{
  return &type metadata for DateParser;
}

uint64_t sub_2150C0EBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *);
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 == a4)
  {
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = a3;
    if (a4 >= a3)
    {
      v8 = (uint64_t (*)(uint64_t *))result;
      v5 = MEMORY[0x24BEE4AF8];
      while (a4 != v7)
      {
        v11 = v7;
        result = v8(&v11);
        if (v4)
        {
          swift_release();
          return v5;
        }
        if ((result & 1) != 0)
        {
          result = swift_isUniquelyReferenced_nonNull_native();
          v12 = v5;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_215038BE4(0, *(_QWORD *)(v5 + 16) + 1, 1);
            v5 = v12;
          }
          v10 = *(_QWORD *)(v5 + 16);
          v9 = *(_QWORD *)(v5 + 24);
          if (v10 >= v9 >> 1)
          {
            result = (uint64_t)sub_215038BE4((char *)(v9 > 1), v10 + 1, 1);
            v5 = v12;
          }
          *(_QWORD *)(v5 + 16) = v10 + 1;
          *(_QWORD *)(v5 + 8 * v10 + 32) = v7;
        }
        if (a4 == ++v7)
          return v5;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t static Column.+= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1054(a1, a2, a3, a4, (uint64_t)sub_2150C1004, (void (*)(_QWORD *))sub_2150C101C);
}

BOOL sub_2150C1004(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1200(a1, a2, a3, a4);
}

uint64_t *sub_2150C101C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2150C126C(a1, v1[4], v1[5], v1[2], v1[3], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

uint64_t static Column.-= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1054(a1, a2, a3, a4, (uint64_t)sub_2150C1004, (void (*)(_QWORD *))sub_2150C1158);
}

uint64_t sub_2150C1054(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v22 = *a1;
  v23 = *(_OWORD *)(a1 + 1);
  v12 = type metadata accessor for Column(0, a3, a3, a4);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v12);
  sub_21512FE30();
  v19 = a3;
  v20 = a4;
  v21 = a1;
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = sub_2150C0EBC(a5, (uint64_t)v18, v24, v25);
  v17[5] = a2;
  v15 = type metadata accessor for PackedOptionalsArray(0, a3, v13, v14);
  sub_2151158A0(a6, (uint64_t)v17, v15, MEMORY[0x24BEE4AE0] + 8);
  return swift_bridgeObjectRelease();
}

uint64_t *sub_2150C1158(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2150C126C(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x24BEE2F80]);
}

uint64_t static Column.*= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1054(a1, a2, a3, a4, (uint64_t)sub_2150C1004, (void (*)(_QWORD *))sub_2150C1190);
}

uint64_t *sub_2150C1190(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2150C126C(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x24BEE1800]);
}

uint64_t static Column./= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1054(a1, a2, a3, a4, (uint64_t)sub_2150C1004, (void (*)(_QWORD *))sub_2150C11C8);
}

{
  return sub_2150C1054(a1, a2, a3, a4, (uint64_t)sub_2150C1004, (void (*)(_QWORD *))sub_2150C1310);
}

uint64_t *sub_2150C11C8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2150C126C(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x24BEE2018]);
}

BOOL sub_2150C1200(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  Swift::Int v5;

  v5 = *a1;
  type metadata accessor for Column(0, *(_QWORD *)(v4 + 16), a3, a4);
  return !Column.isNil(at:)(v5);
}

uint64_t *sub_2150C126C(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v12 = *result;
    v13 = *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72);
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v15 = *(_QWORD *)(a2 + 8 * i + 32);
      a6(v12 + v13 * v15, a3, a4, a5);
    }
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_2150C1310(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2150C126C(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x24BEE0568]);
}

uint64_t static ColumnSlice.+= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1370(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

uint64_t static ColumnSlice.-= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1370(a1, a2, a3, a4, MEMORY[0x24BEE2F80]);
}

uint64_t static ColumnSlice.*= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1370(a1, a2, a3, a4, MEMORY[0x24BEE1800]);
}

uint64_t static ColumnSlice./= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C1370(a1, a2, a3, a4, MEMORY[0x24BEE2018]);
}

{
  return sub_2150C1370(a1, a2, a3, a4, MEMORY[0x24BEE0568]);
}

uint64_t sub_2150C1370(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  Swift::Int v33;
  Swift::Int v34;

  v26 = a4;
  v27 = a5;
  v25 = a2;
  v7 = sub_215130064();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)&v22 - v8;
  v29 = a3;
  v9 = *((_QWORD *)a1 + 2);
  v30 = *a1;
  v31 = v9;
  v32 = *(__int128 *)((char *)a1 + 24);
  v12 = type metadata accessor for ColumnSlice(0, a3, v10, v11);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnSlice<A>, v12);
  result = sub_21512FE30();
  v15 = v33;
  v14 = v34;
  if (v33 != v34)
  {
    if (v34 >= v33)
      goto LABEL_6;
    __break(1u);
    while (v14 != ++v15)
    {
LABEL_6:
      if (v15 >= v14)
      {
        __break(1u);
LABEL_11:
        __break(1u);
        return result;
      }
      v17 = *(_QWORD *)a1;
      v16 = *((_QWORD *)a1 + 1);
      v19 = *((_QWORD *)a1 + 2);
      v18 = *((_QWORD *)a1 + 3);
      v20 = *((_QWORD *)a1 + 4);
      *(_QWORD *)&v30 = *(_QWORD *)a1;
      *((_QWORD *)&v30 + 1) = v16;
      v31 = v19;
      *(_QWORD *)&v32 = v18;
      *((_QWORD *)&v32 + 1) = v20;
      result = ColumnSlice.isNil(at:)(v15);
      if ((result & 1) == 0)
      {
        *(_QWORD *)&v30 = v17;
        *((_QWORD *)&v30 + 1) = v16;
        v31 = v19;
        *(_QWORD *)&v32 = v18;
        *((_QWORD *)&v32 + 1) = v20;
        v21 = (uint64_t)v28;
        ColumnSlice.subscript.getter(v15, v12);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v21, 1, v29);
        if ((_DWORD)result == 1)
          goto LABEL_11;
        v27(v21, v25);
        sub_215079CF8(v21, v15, v12);
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v21, v24);
      }
    }
  }
  return result;
}

uint64_t static DiscontiguousColumnSlice.+= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C157C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

uint64_t static DiscontiguousColumnSlice.-= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C157C(a1, a2, a3, a4, MEMORY[0x24BEE2F80]);
}

uint64_t static DiscontiguousColumnSlice.*= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C157C(a1, a2, a3, a4, MEMORY[0x24BEE1800]);
}

uint64_t static DiscontiguousColumnSlice./= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C157C(a1, a2, a3, a4, MEMORY[0x24BEE2018]);
}

{
  return sub_2150C157C(a1, a2, a3, a4, MEMORY[0x24BEE0568]);
}

uint64_t sub_2150C157C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t result;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  Swift::Int *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  __int128 v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  Swift::Int v68;

  v33 = a5;
  v32 = a4;
  v31 = a2;
  v30 = sub_215130064();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (uint64_t)&v28 - v7;
  v8 = *(_BYTE *)(a1 + 40);
  v62 = *(_QWORD *)a1;
  v63 = *(_OWORD *)(a1 + 8);
  v64 = *(_OWORD *)(a1 + 24);
  v65 = v8;
  v35 = a3;
  v11 = type metadata accessor for DiscontiguousColumnSlice(0, a3, v9, v10);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v11);
  sub_21512FF38();
  v42 = v54;
  v44 = v55;
  v12 = v57;
  v43 = v56;
  v13 = v58;
  v14 = v59;
  v16 = v60;
  v15 = v61;
  v46 = v54;
  v47 = v55;
  v48 = v56;
  v49 = v57;
  v50 = v58;
  v51 = v59;
  v52 = v60;
  v53 = v61;
  v45 = v11;
  sub_21512F944();
  MEMORY[0x2199DB480](&v62);
  v17 = v62;
  v62 = v42;
  *(_QWORD *)&v63 = v44;
  *((_QWORD *)&v63 + 1) = v43;
  *(_QWORD *)&v64 = v12;
  v41 = v12;
  v40 = v13;
  *((_QWORD *)&v64 + 1) = v13;
  v39 = v14;
  v65 = v14;
  v38 = v16;
  v66 = v16;
  v67 = v15;
  v37 = v15;
  v68 = v17;
  sub_21512F92C();
  if (v17 == v54)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_21501EF2C(v41, v40, v39);
  }
  v36 = &v68;
  while (1)
  {
    v54 = v42;
    v55 = v44;
    v56 = v43;
    v57 = v41;
    v58 = v40;
    v59 = v39;
    v60 = v38;
    v61 = v37;
    sub_21512F938();
    v19 = *(_QWORD *)a1;
    v20 = *(_QWORD *)(a1 + 8);
    v21 = *(_QWORD *)(a1 + 16);
    v22 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(_BYTE *)(a1 + 40);
    v54 = *(_QWORD *)a1;
    v55 = v20;
    v56 = v21;
    v57 = v22;
    v58 = v23;
    v59 = v24;
    if (!DiscontiguousColumnSlice.isNil(at:)(v17))
      break;
LABEL_4:
    v17 = v68;
    sub_21512F92C();
    if (v17 == v54)
      goto LABEL_2;
  }
  v54 = v19;
  v55 = v20;
  v56 = v21;
  v57 = v22;
  v58 = v23;
  v59 = v24;
  v25 = v34;
  v26 = v45;
  DiscontiguousColumnSlice.subscript.getter(v17, v45, v34);
  v27 = v35;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v25, 1, v35);
  if ((_DWORD)result != 1)
  {
    v33(v25, v31, v27, v32);
    sub_2150C6E8C(v25, v17, v26);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v30);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150C1940(unsigned __int8 **a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  int v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = a4;
  if ((a4 & 8) != 0)
    v9 = *(*a1)++;
  else
    v9 = 0;
  result = sub_2150550F4(a1, a2);
  if (v4)
    return (uint64_t)v5;
  v11 = result;
  v12 = *(_QWORD *)(result + 16);
  if (v12)
  {
    v13 = 0;
    v14 = (uint64_t *)(result + 32);
    do
    {
      v15 = *v14++;
      v16 = __OFADD__(v13, v15);
      v13 += v15;
      if (v16)
      {
        __break(1u);
        goto LABEL_47;
      }
      --v12;
    }
    while (v12);
    if (!v9)
      goto LABEL_42;
  }
  else
  {
    v13 = 0;
    if (!v9)
    {
LABEL_42:
      result = sub_21512F3A4(a1, v13, a3, (char)v5);
      goto LABEL_12;
    }
  }
  if (v9 != 1)
  {
    swift_bridgeObjectRelease();
    sub_215130178();
    swift_bridgeObjectRelease();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v34 = 0xD000000000000024;
    *(_QWORD *)(v34 + 8) = 0x80000002151318A0;
    *(_BYTE *)(v34 + 16) = 3;
    swift_willThrow();
    return (uint64_t)v5;
  }
  result = sub_21512F1A4(a1, v13);
LABEL_12:
  v17 = result;
  if (a2 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (!a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  if ((unint64_t)(a2 - 1) < *(_QWORD *)(v11 + 16))
  {
    v18 = 0;
    v19 = 0;
    v35 = result + 32;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v36 = v11;
    v37 = a2;
    while (1)
    {
      v20 = v11 + 8 * v19;
      v21 = *(_QWORD *)(v20 + 32);
      v22 = v18 + v21;
      if (__OFADD__(v18, v21))
        break;
      v23 = *(_QWORD *)(v20 + 32);
      if (v22 < (uint64_t)v18)
        goto LABEL_48;
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_49;
      v24 = *(_QWORD *)(v17 + 16);
      if (v24 < v18 || (uint64_t)v24 < v22)
        goto LABEL_50;
      sub_215130448();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        v26 = MEMORY[0x24BEE4AF8];
      }
      v27 = *(_QWORD *)(v26 + 16);
      swift_release();
      if (v27 == v23)
      {
        v28 = (_QWORD *)swift_dynamicCastClass();
        if (!v28)
        {
          swift_bridgeObjectRelease();
          v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
        if (v22 != v18)
        {
          if (v23 >= 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7580);
            v28 = (_QWORD *)swift_allocObject();
            v32 = _swift_stdlib_malloc_size(v28);
            v33 = v32 - 32;
            if (v32 < 32)
              v33 = v32 - 25;
            v28[2] = v23;
            v28[3] = 2 * (v33 >> 3);
          }
          memcpy(v28 + 4, (const void *)(v35 + 8 * v18), 8 * v23);
        }
      }
      swift_bridgeObjectRelease();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_21502E9C0(0, v5[2] + 1, 1, v5);
        v5 = (_QWORD *)result;
      }
      v30 = v5[2];
      v29 = v5[3];
      if (v30 >= v29 >> 1)
      {
        result = (uint64_t)sub_21502E9C0((_QWORD *)(v29 > 1), v30 + 1, 1, v5);
        v5 = (_QWORD *)result;
      }
      v5[2] = v30 + 1;
      v5[v30 + 4] = v28;
      v31 = *(_QWORD *)(v20 + 32);
      v16 = __OFADD__(v18, v31);
      v18 += v31;
      if (v16)
        goto LABEL_51;
      ++v19;
      v11 = v36;
      if (v37 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_2150C1D1C(unsigned __int8 *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 v12;
  char v13;

  if (!a2)
    return 0;
  if (a2 < 1)
    goto LABEL_7;
  v3 = *a1;
  if (v3 == 43)
  {
    if (a2 == 1)
      return 0;
    v6 = 1;
    v5 = 0;
    goto LABEL_8;
  }
  if (v3 != 45)
  {
LABEL_7:
    v5 = 0;
    v6 = 0;
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    result = 0;
LABEL_12:
    v8 = __OFSUB__(0, result);
    result = -result;
    if (v8)
LABEL_29:
      __break(1u);
    return result;
  }
  v5 = 1;
  v6 = 1;
LABEL_8:
  v7 = a1[v6];
  if (v7 <= 0x2F || v7 > 0x39)
  {
    result = 0;
    if (v6 != a2 || ((v5 ^ 1) & 1) != 0)
      return result;
    goto LABEL_12;
  }
  result = 0;
  v9 = ~v6 + a2;
  v10 = &a1[v6 + 1];
  while (1)
  {
    v11 = 10 * result;
    if ((unsigned __int128)(result * (__int128)10) >> 64 != (10 * result) >> 63)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v12 = v7 - 48;
    result = v11 + v12;
    if (__OFADD__(v11, v12))
      goto LABEL_28;
    if (!v9)
      break;
    v13 = *v10++;
    LOBYTE(v7) = v13;
    --v9;
    if ((v13 - 58) < 0xF6u)
      return 0;
  }
  if ((v5 & 1) != 0)
    goto LABEL_12;
  return result;
}

uint64_t sub_2150C1E3C(uint64_t a1, unint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  swift_bridgeObjectRetain();
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v5 = HIBYTE(a2) & 0xF;
    v10[0] = a1;
    v10[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v4 = (unsigned __int8 *)v10;
    goto LABEL_7;
  }
  a1 = sub_2150CFC08();
  v7 = v6;
  swift_bridgeObjectRelease();
  a2 = v7;
  if ((v7 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((a1 & 0x1000000000000000) != 0)
  {
    v4 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = (unsigned __int8 *)sub_215130208();
  }
LABEL_7:
  v8 = sub_2150C1D1C(v4, v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2150C1EF0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  void (*v45)(char *, _QWORD);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t TupleTypeMetadata2;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char v93[40];
  uint64_t v94;

  v85 = a1;
  v86 = a2;
  v69 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v72 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v74 = (char *)&v68 - v11;
  v79 = a4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v76 = sub_215130028();
  v75 = *(_QWORD *)(v76 - 8);
  v13 = MEMORY[0x24BDAC7A8](v76);
  v88 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v73 = (char *)&v68 - v15;
  v16 = swift_getAssociatedTypeWitness();
  v83 = *(_QWORD *)(v16 - 8);
  v84 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v68 - v18;
  v78 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v91 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v68 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v68 - v25;
  v90 = AssociatedConformanceWitness;
  v28 = type metadata accessor for _RangeSet(0, AssociatedTypeWitness, AssociatedConformanceWitness, v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v68 - v30;
  v92 = v5;
  v87 = a3;
  if ((sub_21512FE90() & 1) != 0)
    return sub_21507D2F0(AssociatedTypeWitness, v90);
  v89 = v24;
  v68 = v29;
  v71 = v28;
  v82 = v19;
  v70 = v31;
  sub_21507D2F0(AssociatedTypeWitness, v90);
  sub_21512FE48();
  v33 = v78;
  while (1)
  {
    v37 = v89;
    sub_21512FEA8();
    v38 = sub_21512FA58();
    v39 = v33;
    v40 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41 = AssociatedTypeWitness;
    v42 = AssociatedTypeWitness;
    v43 = v40;
    v40(v37, v42);
    if ((v38 & 1) != 0)
    {
      v43(v26, v41);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v68 + 32))(v69, v70, v71);
    }
    sub_21512FE6C();
    v44 = v26;
    v45 = (void (*)(char *, _QWORD))sub_21512FF5C();
    v46 = v82;
    v47 = v83;
    v48 = v84;
    (*(void (**)(char *))(v83 + 16))(v82);
    v45(v93, 0);
    v49 = v94;
    v50 = v85(v46);
    v94 = v49;
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
      v43(v91, v41);
      v43(v44, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v70, v71);
    }
    v51 = v50;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    if ((v51 & 1) == 0)
    {
      v26 = v44;
      v34 = v41;
      v43(v44, v41);
      v33 = v39;
      v35 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v36 = v91;
      goto LABEL_5;
    }
    v52 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v53 = v89;
    v52(v89, v44, v41);
    result = sub_21512F9E0();
    if ((result & 1) == 0)
      break;
    v54 = v53;
    v55 = v72;
    v56 = v74;
    v81 = v43;
    v57 = TupleTypeMetadata2;
    v58 = &v74[*(int *)(TupleTypeMetadata2 + 48)];
    v35 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v35(v74, v54, v41);
    v80 = v58;
    v52(v58, v91, v41);
    v59 = &v55[*(int *)(v57 + 48)];
    v52(v55, v56, v41);
    v52(v59, v58, v41);
    v35(v88, v55, v41);
    v60 = v81;
    v81(v59, v41);
    v61 = *(int *)(v57 + 48);
    v62 = v55;
    v26 = v44;
    v63 = &v62[v61];
    v35(v62, v56, v41);
    v35(v63, v80, v41);
    v64 = v76;
    v35(&v88[*(int *)(v76 + 36)], v63, v41);
    v65 = v60;
    v60(v62, v41);
    v66 = v75;
    v67 = (uint64_t)v73;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v73, v88, v64);
    sub_21507D2F4(v67, v71);
    v34 = v41;
    v36 = v91;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v64);
    v65(v26, v41);
    v33 = v78;
LABEL_5:
    v35(v26, v36, v34);
    AssociatedTypeWitness = v34;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150C2524@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, _QWORD);
  uint64_t v31;
  char *v32;
  char v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49[32];
  uint64_t AssociatedTypeWitness;

  v6 = v5;
  v43 = a1;
  v44 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v37 - v10;
  v12 = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - v15;
  v17 = sub_21512FE60();
  v47 = a4;
  v48 = a5;
  v46 = a3;
  result = sub_21512FE48();
  if (v17 >= 1)
  {
    v40 = v11;
    while (1)
    {
      v29 = (unint64_t)v17 >> 1;
      sub_21512FE78();
      v30 = (void (*)(char *, _QWORD))sub_21512FF5C();
      v31 = v45;
      v32 = v40;
      (*(void (**)(char *))(v45 + 16))(v40);
      v30(v49, 0);
      v33 = v43(v32);
      if (v6)
        break;
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, AssociatedTypeWitness);
      if ((v34 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v16, v42);
        v17 = (unint64_t)v17 >> 1;
      }
      else
      {
        v19 = v38;
        sub_21512FE6C();
        v20 = v41;
        v21 = *(void (**)(char *, uint64_t))(v41 + 8);
        v22 = v16;
        v39 = v17;
        v23 = v16;
        v24 = v42;
        v21(v22, v42);
        v25 = v48;
        v21(v48, v24);
        v26 = v25;
        v6 = 0;
        v27 = v24;
        v16 = v23;
        v28 = v39;
        result = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v26, v19, v27);
        v17 = v28 + ~v29;
      }
      if (v17 <= 0)
        return result;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, AssociatedTypeWitness);
    v35 = v42;
    v36 = *(void (**)(char *, uint64_t))(v41 + 8);
    v36(v16, v42);
    return ((uint64_t (*)(char *, uint64_t))v36)(v48, v35);
  }
  return result;
}

uint64_t sub_2150C27C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = (_QWORD *)(a1 + 40);
  do
  {
    v8 = v6 + 1;
    v9 = *(v7 - 1) == a2 && *v7 == a3;
    if (v9 || (sub_21513043C() & 1) != 0)
      sub_21502C94C(v6, v6 + 1);
    v7 += 4;
    ++v6;
  }
  while (v4 != v8);
  return 0;
}

uint64_t sub_2150C2890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = (_QWORD *)(a1 + 56);
  do
  {
    v8 = v6 + 1;
    v9 = *(v7 - 1) == a2 && *v7 == a3;
    if (v9 || (sub_21513043C() & 1) != 0)
      sub_21502C94C(v6, v6 + 1);
    v7 += 4;
    ++v6;
  }
  while (v4 != v8);
  return 0;
}

uint64_t ShapedData.shape.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.strides.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.init(shape:strides:contents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a1 + 32);
    v11 = 1;
    v12 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v13 = *v10++;
      v14 = v11 * v13;
      if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63)
        break;
      v11 = v14;
      if (!--v12)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v14 = 1;
LABEL_7:
    result = MEMORY[0x2199DB870](a3, a4);
    if (v14 == result)
    {
      *a5 = a1;
      a5[1] = a2;
      a5[2] = a3;
      return result;
    }
  }
  sub_215130178();
  sub_21512FB90();
  MEMORY[0x2199DB810](a1, MEMORY[0x24BEE1768]);
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  if (v9)
  {
    v16 = (uint64_t *)(a1 + 32);
    v17 = 1;
    while (1)
    {
      v18 = *v16++;
      v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63)
        break;
      v17 = v19;
      if (!--v9)
        goto LABEL_16;
    }
    __break(1u);
  }
LABEL_16:
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t ShapedData.subscript.getter(_QWORD *a1)
{
  sub_2150C2C08(a1);
  return sub_21512FD70();
}

uint64_t sub_2150C2C08(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  v2 = *(_QWORD **)(v1 + 8);
  v3 = a1[2];
  if (v3 != v2[2])
    goto LABEL_15;
  if (!v3)
    return 0;
  v5 = a1[4];
  v6 = v2[4];
  result = v5 * v6;
  if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_215130178();
    swift_bridgeObjectRelease();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  if (v3 != 1)
  {
    v8 = a1 + 5;
    v9 = v2 + 5;
    for (i = v3 - 2; ; --i)
    {
      v12 = *v8++;
      v11 = v12;
      v13 = *v9++;
      v14 = v11 * v13;
      if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63)
        break;
      v15 = __OFADD__(result, v14);
      result += v14;
      if (v15)
        goto LABEL_13;
      if (!i)
        return result;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t static ShapedData<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *(_QWORD **)(a1 + 8);
  v3 = *(_QWORD **)(a2 + 8);
  if (sub_21502B174(*(_QWORD **)a1, *(_QWORD **)a2) && sub_21502B174(v2, v3))
    return sub_21512FD58();
  else
    return 0;
}

uint64_t sub_2150C2E78(uint64_t a1, uint64_t a2)
{
  return static ShapedData<A>.== infix(_:_:)(a1, a2);
}

uint64_t ShapedData<A>.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  v1 = v0[1];
  sub_2151305B0();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    do
    {
      v4 += 8;
      sub_2151305B0();
      --v3;
    }
    while (v3);
  }
  sub_2151305B0();
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    v6 = v1 + 32;
    do
    {
      v6 += 8;
      sub_2151305B0();
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRetain();
  sub_21512FD4C();
  return swift_bridgeObjectRelease();
}

uint64_t ShapedData<A>.hashValue.getter()
{
  sub_2151305A4();
  ShapedData<A>.hash(into:)();
  return sub_2151305EC();
}

uint64_t sub_2150C2FA0()
{
  return ShapedData<A>.hashValue.getter();
}

uint64_t sub_2150C2FA8()
{
  return ShapedData<A>.hash(into:)();
}

uint64_t sub_2150C2FB0()
{
  sub_2151305A4();
  ShapedData<A>.hash(into:)();
  return sub_2151305EC();
}

uint64_t sub_2150C3000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2199DC4C4](&protocol conformance descriptor for <A> ShapedData<A>, a1, &v4);
}

uint64_t type metadata accessor for ShapedData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShapedData);
}

Swift::Bool __swiftcall DiscontiguousColumnSlice.isNil(at:)(Swift::Int at)
{
  uint64_t v1;
  uint64_t v2;

  return sub_215115068(at, *(_QWORD *)(v2 + 16), *(_QWORD *)(v1 + 16));
}

__n128 sub_2150C3054@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v2;
  return result;
}

uint64_t sub_2150C3078(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  char v10[16];
  uint64_t *v11;
  uint64_t v12;

  v6 = a2;
  v12 = a1;
  v11 = &v12;
  sub_2150437A8(a2, a3, a4);
  v7 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509BFB8, (uint64_t)v10, v6, a3, a4);
  sub_21501EF2C(v6, a3, a4);
  if (a4)
  {
    if (a4 == 1)
    {
      v8 = *(_QWORD *)(v6 + 16);
      if (v7 != v8)
      {
        if (v7 < v8)
        {
          v6 = *(_QWORD *)(v6 + 16 * v7 + 32);
          return v12 >= v6;
        }
        goto LABEL_13;
      }
    }
    else if (v7)
    {
LABEL_14:
      result = sub_2151302EC();
      __break(1u);
      return result;
    }
  }
  else if (v7 != 1)
  {
    if (!v7)
      return v12 >= v6;
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return 0;
}

__n128 sub_2150C31A8@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __n128 result;
  __int128 v16;
  _QWORD v17[2];
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  char v25;

  v6 = a4;
  v10 = a1[1];
  v11 = a1[2];
  v19 = *a1;
  v20 = v10;
  v21 = v11;
  v17[0] = a2;
  v17[1] = a3;
  v18 = a4;
  v12 = type metadata accessor for Column(0, a5, a3, a4);
  v13 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v12);
  sub_21506CCA4((uint64_t)v17, v12, v13, (uint64_t)&v22);
  sub_21501EF2C(a2, a3, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v14 = v25;
  result = v23;
  v16 = v24;
  *(_QWORD *)a6 = v22;
  *(__n128 *)(a6 + 8) = result;
  *(_OWORD *)(a6 + 24) = v16;
  *(_BYTE *)(a6 + 40) = v14;
  return result;
}

uint64_t DiscontiguousColumnSlice.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for Column(255, *(_QWORD *)(a1 + 16), a3, a4);
  v5 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v4);
  v7 = type metadata accessor for _DiscontiguousSlice(0, v4, v5, v6);
  return sub_21506DF44(v7);
}

_QWORD *DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  sub_2150437A8(v7, v8, v9);
  v10 = sub_2150C3078(a1, v7, v8, v9);
  sub_21501EF2C(v7, v8, v9);
  if ((v10 & 1) != 0)
  {
    v13 = type metadata accessor for Column(0, *(_QWORD *)(a2 + 16), v11, v12);
    return Column.subscript.getter(a1, v13, a3);
  }
  else
  {
    sub_215130178();
    swift_bridgeObjectRelease();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = (_QWORD *)sub_2151302EC();
    __break(1u);
  }
  return result;
}

__n128 DiscontiguousColumnSlice.init(column:ranges:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __n128 result;
  __int128 v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __int128 v27;
  char v28;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v25 = 0;
  v26.n128_u64[0] = 0;
  v26.n128_u8[8] = 2;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a2 + 40);
    do
    {
      sub_2150757D4(*(v10 - 1), *v10);
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v13 = v25;
    v9 = v26.n128_u64[0];
    v14 = v26.n128_i8[8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = 0;
    v14 = 2;
  }
  v22 = v7;
  v23 = v6;
  v24 = v8;
  v20[0] = v13;
  v20[1] = v9;
  v21 = v14;
  v15 = type metadata accessor for Column(0, a3, v11, v12);
  v16 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v15);
  sub_21506CCA4((uint64_t)v20, v15, v16, (uint64_t)&v25);
  sub_21501EF2C(v13, v9, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v17 = v28;
  result = v26;
  v19 = v27;
  *(_QWORD *)a4 = v25;
  *(__n128 *)(a4 + 8) = result;
  *(_OWORD *)(a4 + 24) = v19;
  *(_BYTE *)(a4 + 40) = v17;
  return result;
}

uint64_t sub_2150C35A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11[16];
  uint64_t *v12;
  uint64_t v13;

  v6 = a2;
  v13 = a1;
  v12 = &v13;
  sub_2150437A8(a2, a3, a4);
  v7 = sub_2150F776C((uint64_t (*)(__int128 *))sub_2150C7A78, (uint64_t)v11, v6, a3, a4);
  sub_21501EF2C(v6, a3, a4);
  if (a4)
  {
    if (a4 == 1)
    {
      v8 = *(_QWORD *)(v6 + 16);
      if (v7 != v8)
      {
        if (v7 < v8)
        {
          v9 = v13;
          v6 = *(_QWORD *)(v6 + 16 * v7 + 32);
          goto LABEL_9;
        }
        __break(1u);
        goto LABEL_16;
      }
    }
    else if (v7)
    {
LABEL_17:
      result = sub_2151302EC();
      __break(1u);
      return result;
    }
    return 0;
  }
  if (v7 == 1)
    return 0;
  if (v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v13;
LABEL_9:
  if (v9 >= v6)
    return v7;
  else
    return 0;
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  sub_2150C6E8C(a1, a2, a3);
  v4 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t DiscontiguousColumnSlice.name.getter()
{
  uint64_t v0;

  v0 = sub_215075E3C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2150C3760@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;

  type metadata accessor for DiscontiguousColumnSlice(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  *a4 = sub_215075E3C();
  a4[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150C37C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return DiscontiguousColumnSlice.name.setter(v1, v2);
}

uint64_t DiscontiguousColumnSlice.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DiscontiguousColumnSlice.name.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_2150C3870;
}

uint64_t sub_2150C3870(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.wrappedElementType.getter(uint64_t a1)
{
  return nullsub_5(*(_QWORD *)(a1 + 16));
}

uint64_t DiscontiguousColumnSlice.prototype.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = nullsub_5(*v2);
  v7 = v6;
  a2[3] = type metadata accessor for ColumnPrototype(0, v4, v8, v9);
  a2[4] = (uint64_t)&off_24D2A3598;
  *a2 = v5;
  a2[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t DiscontiguousColumnSlice.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  _QWORD v17[2];
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v22 = *a1;
  *(_QWORD *)&v23 = v6;
  *((_QWORD *)&v23 + 1) = v8;
  v9 = type metadata accessor for Column(0, a2, a3, a4);
  result = Column.count.getter(v9);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v11 = result;
    v19 = v7;
    v20 = v6;
    v21 = v8;
    v17[0] = 0;
    v17[1] = result;
    v12 = 2 * (result == 0);
    v18 = v12;
    v13 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v9);
    sub_21506CCA4((uint64_t)v17, v9, v13, (uint64_t)&v22);
    sub_21501EF2C(0, v11, v12);
    swift_release();
    result = swift_bridgeObjectRelease();
    v14 = v25;
    v15 = v23;
    v16 = v24;
    *(_QWORD *)a5 = v22;
    *(_OWORD *)(a5 + 8) = v15;
    *(_OWORD *)(a5 + 24) = v16;
    *(_BYTE *)(a5 + 40) = v14;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v8 = *(_QWORD *)v5;
  v9 = *(_QWORD *)(v5 + 8);
  v10 = *(_QWORD *)(v5 + 16);
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *(_QWORD *)(v5 + 32);
  v13 = *(_BYTE *)(v5 + 40);
  v30 = v8;
  v37[0] = v8;
  v37[1] = v9;
  v37[2] = v10;
  v38 = v11;
  v39 = v12;
  v40 = v13;
  v33 = *(_QWORD *)(a3 + 16);
  v34 = a4;
  v35 = a1;
  v36 = a2;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_2150437A8(v11, v12, v13);
  v16 = type metadata accessor for Column(255, v33, v14, v15);
  v17 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v16);
  v19 = type metadata accessor for _DiscontiguousSlice(0, v16, v17, v18);
  v20 = (char *)sub_215130064();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
  v22 = MEMORY[0x2199DC4C4](&unk_21513686C, v19);
  v23 = sub_2150ED6A0((void (*)(char *, char *))sub_2150C6FEC, (uint64_t)v32, v19, v20, v21, v22, MEMORY[0x24BEE3F20], (uint64_t)&v41);
  v24 = v38;
  v25 = v39;
  v26 = v40;
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v24, v25, v26);
  if (v6)
    return swift_bridgeObjectRelease();
  v37[0] = v23;
  v28 = sub_21512FD40();
  v29 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12C8], v28);
  return Column.init<A>(name:contents:)(v30, v9, (uint64_t)v37, a4, v28, v29, a5);
}

void DiscontiguousColumnSlice.filter(_:)(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  int64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[3];
  __int128 v46;
  _OWORD v47[3];
  __int128 v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  unsigned __int8 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  unsigned __int8 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;

  v40 = a1;
  v41 = a2;
  v30 = *(_QWORD *)(a3 + 16);
  v31 = a4;
  v7 = sub_215130064();
  v82 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v44 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_215130064();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v28 - v13);
  v15 = *(_QWORD *)(v4 + 8);
  v39 = *(_QWORD *)v4;
  v17 = *(_QWORD *)(v4 + 16);
  v16 = *(_QWORD *)(v4 + 24);
  v34 = *(_QWORD *)(v4 + 32);
  v35 = v16;
  v33 = *(unsigned __int8 *)(v4 + 40);
  v79 = 0;
  v80 = 0;
  v81 = 2;
  *(_QWORD *)&v45[0] = v39;
  *((_QWORD *)&v45[0] + 1) = v15;
  *(_QWORD *)&v45[1] = v17;
  *((_QWORD *)&v45[1] + 1) = v16;
  *(_QWORD *)&v45[2] = v34;
  BYTE8(v45[2]) = v33;
  v32 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a3);
  sub_21512FF38();
  v36 = *((_QWORD *)&v51 + 1);
  v37 = v51;
  v42 = *((_QWORD *)&v52 + 1);
  v43 = v52;
  v38 = v53;
  v65 = v50;
  v66 = v51;
  v67 = v52;
  v68 = v53;
  v69 = v54;
  v59 = v39;
  v60 = v15;
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v17;
  v61 = v17;
  v62 = v35;
  v63 = v34;
  v64 = v33;
  v18 = a3;
  v19 = sub_21512F944();
  v20 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660], v19);
  v21 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v18);
  sub_215130490();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v43, v42, v38);
  v50 = *(_QWORD *)&v45[0];
  v51 = *(_OWORD *)((char *)v45 + 8);
  v52 = *(_OWORD *)((char *)&v45[1] + 8);
  v53 = BYTE8(v45[2]);
  v54 = v46;
  v55 = *(_QWORD *)&v47[0];
  v56 = *(_OWORD *)((char *)v47 + 8);
  v57 = *(_OWORD *)((char *)&v47[1] + 8);
  v58 = BYTE8(v47[2]);
  v42 = v18;
  v43 = v19;
  v65 = v19;
  *(_QWORD *)&v66 = v18;
  *((_QWORD *)&v66 + 1) = v20;
  *(_QWORD *)&v67 = v21;
  sub_2151301A8();
  sub_215130184();
  while (1)
  {
    *(_QWORD *)&v45[0] = v43;
    *((_QWORD *)&v45[0] + 1) = v42;
    *(_QWORD *)&v45[1] = v20;
    *((_QWORD *)&v45[1] + 1) = v21;
    sub_21513019C();
    sub_215130190();
    if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      v47[2] = v76;
      v48 = v77;
      v49 = v78;
      v45[2] = v72;
      v46 = v73;
      v47[0] = v74;
      v47[1] = v75;
      v45[0] = v70;
      v45[1] = v71;
      sub_2150C79E4((uint64_t)v45);
      v50 = v39;
      v51 = v29;
      v26 = v79;
      v25 = v80;
      v27 = v81;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2150C31A8(&v50, v26, v25, v27, v30, v31);
      return;
    }
    v22 = *v14;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v9, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v44);
    v23 = v40(v9);
    if (v5)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v9, v44);
      v47[2] = v76;
      v48 = v77;
      v49 = v78;
      v45[2] = v72;
      v46 = v73;
      v47[0] = v74;
      v47[1] = v75;
      v45[0] = v70;
      v45[1] = v71;
      sub_2150C79E4((uint64_t)v45);
      sub_21501EF2C(v79, v80, v81);
      return;
    }
    if ((v23 & 1) == 0)
      goto LABEL_2;
    v24 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v24 < v22)
      goto LABEL_12;
    sub_2150757D4(v22, v24);
LABEL_2:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v9, v44);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t DiscontiguousColumnSlice.eraseToAnyColumn()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v5 = *v2;
  v4 = v2[1];
  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  a2[3] = a1;
  a2[4] = (uint64_t)&off_24D2A6678;
  v9 = *((_BYTE *)v2 + 40);
  v10 = swift_allocObject();
  *a2 = v10;
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v4;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  *(_BYTE *)(v10 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2150437A8(v7, v8, v9);
}

void (*sub_2150C40A8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DiscontiguousColumnSlice.name.modify(v2);
  return sub_215072674;
}

uint64_t DiscontiguousColumnSlice.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C4104(a1, (void (*)(_QWORD *__return_ptr, uint64_t))sub_21506D1F4, a3, a4);
}

uint64_t DiscontiguousColumnSlice.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C4104(a1, (void (*)(_QWORD *__return_ptr, uint64_t))sub_21506D3FC, a3, a4);
}

uint64_t sub_2150C4104(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v5 = type metadata accessor for Column(255, *(_QWORD *)(a1 + 16), a3, a4);
  v6 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v5);
  v8 = type metadata accessor for _DiscontiguousSlice(0, v5, v6, v7);
  a2(v10, v8);
  return v10[1];
}

Swift::Int __swiftcall DiscontiguousColumnSlice.index(after:)(Swift::Int after)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v5;
  Swift::Int v6;
  int v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;

  v3 = v1;
  v6 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v7 = *(unsigned __int8 *)(v2 + 40);
  sub_2150437A8(v6, v5, *(_BYTE *)(v2 + 40));
  v8 = sub_2150C35A8(after, v6, v5, v7);
  v10 = v9;
  sub_21501EF2C(v6, v5, v7);
  if ((v10 & 1) != 0)
    goto LABEL_23;
  result = after + 1;
  if (__OFADD__(after, 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v7)
  {
    if (!v8)
    {
      if (result < v6 || result >= v5)
        return DiscontiguousColumnSlice.endIndex.getter(v3, v11, v12, v13);
      return result;
    }
    goto LABEL_20;
  }
  if (v7 != 1)
  {
LABEL_23:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  if ((v8 & 0x8000000000000000) != 0)
    goto LABEL_21;
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = v6 + 16 * v8;
  v17 = *(_QWORD *)(v15 + 32);
  v16 = *(_QWORD *)(v15 + 40);
  if (result < v17 || result >= v16)
  {
    if (v8 + 1 < *(_QWORD *)(v6 + 16))
      return *(_QWORD *)(v6 + 16 * (v8 + 1) + 32);
    return DiscontiguousColumnSlice.endIndex.getter(v3, v11, v12, v13);
  }
  return result;
}

Swift::Int __swiftcall DiscontiguousColumnSlice.index(before:)(Swift::Int before)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  Swift::Int result;
  unint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  uint64_t v20;

  v5 = v1;
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(v4 + 32);
  v9 = *(unsigned __int8 *)(v4 + 40);
  if (DiscontiguousColumnSlice.startIndex.getter(v1, v1, v2, v3) >= before)
    goto LABEL_32;
  if (DiscontiguousColumnSlice.endIndex.getter(v5, v10, v11, v12) == before)
  {
    sub_21508C520(v7, v8, v9);
    if ((v14 & 1) != 0)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    result = v13 - 1;
    if (!__OFSUB__(v13, 1))
      return result;
    __break(1u);
  }
  sub_2150437A8(v7, v8, v9);
  v16 = sub_2150C35A8(before, v7, v8, v9);
  v18 = v17;
  sub_21501EF2C(v7, v8, v9);
  if ((v18 & 1) != 0)
  {
LABEL_32:
    while (1)
    {
LABEL_28:
      sub_2151302EC();
      __break(1u);
    }
  }
  if (!v9)
  {
    if (v16)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v7 != before)
      return before - 1;
    __break(1u);
  }
  if (v9 != 1)
    goto LABEL_28;
  if ((v16 & 0x8000000000000000) != 0)
    goto LABEL_23;
  v19 = *(_QWORD *)(v7 + 16);
  if (v16 >= v19)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (*(_QWORD *)(v7 + 32 + 16 * v16) != before)
    return before - 1;
  if (!v16)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v16 - 1 >= v19)
    goto LABEL_25;
  v20 = *(_QWORD *)(v7 + 32 + 16 * (v16 - 1) + 8);
  result = v20 - 1;
  if (__OFSUB__(v20, 1))
  {
    __break(1u);
    return before - 1;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.missingCount.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  Swift::Int v14;

  v9 = *(_QWORD *)(v1 + 16);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a1);
  sub_21512FF38();
  v8 = a1;
  sub_21512F944();
  MEMORY[0x2199DB480]();
  v3 = 0;
  v4 = v10;
  while (1)
  {
    sub_21512F92C();
    if (v14 == v10)
      break;
    v10 = v4;
    sub_21512F938();
    v5 = sub_215115068(v14, v9, *(_QWORD *)(v8 + 16));
    v6 = __OFADD__(v3, v5);
    v3 += v5;
    if (v6)
    {
      __break(1u);
      break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v11, v12, v13);
  return v3;
}

_QWORD *sub_2150C4768@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  v6 = type metadata accessor for DiscontiguousColumnSlice(0, *(uint64_t *)((char *)a1 + a2 - 8), a2, a3);
  return DiscontiguousColumnSlice.subscript.getter(v5, v6, a4);
}

void (*DiscontiguousColumnSlice.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = sub_215130064();
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  DiscontiguousColumnSlice.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_2150C48AC;
}

void sub_2150C48AC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  v5 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = (*a1)[1];
  v8 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_2150C6E8C((uint64_t)v3, v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
  }
  else
  {
    sub_2150C6E8C((*a1)[6], v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v7 = a1 == (char *)a2;
  if (a1 == (char *)a2)
    v8 = 0;
  else
    v8 = a1;
  if (a1 == (char *)a2)
    v9 = 0;
  else
    v9 = a2;
  v10 = *(_BYTE *)(v4 + 40);
  sub_2150437A8(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), v10);
  v11 = 2 * v7;
  v12 = sub_21502CB8C(v8, v9, 2 * v7, v5, v6, v10);
  v14 = v13;
  v16 = v15;
  sub_21501EF2C((uint64_t)v8, v9, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v5, v6, v10);
  sub_2150C4BC4(v12, v14, v16, a3, a4);
  sub_21501EF2C((uint64_t)v12, v14, v16);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_21501EF2C(v5, v6, v10);
}

double sub_2150C4A8C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v5 = *(char **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = type metadata accessor for DiscontiguousColumnSlice(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  DiscontiguousColumnSlice.subscript.getter(v5, v6, v7, (uint64_t)&v10);
  v8 = v13;
  *(_QWORD *)a4 = v10;
  *(_OWORD *)(a4 + 8) = v11;
  result = *(double *)&v12;
  *(_OWORD *)(a4 + 24) = v12;
  *(_BYTE *)(a4 + 40) = v8;
  return result;
}

uint64_t sub_2150C4B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[5];
  char v15;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  v14[0] = *(_QWORD *)a1;
  v14[1] = v5;
  v14[2] = v6;
  v14[3] = v7;
  v14[4] = v8;
  v15 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v7, v8, v9);
  v12 = type metadata accessor for DiscontiguousColumnSlice(0, v4, v10, v11);
  return sub_2150C7044(v14, v12);
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C7044(a1, a4);
}

{
  return sub_2150C7560(a1, a4, a3, a4);
}

double sub_2150C4BC4@<D0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double result;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v11 = *v5;
  v12 = v5[3];
  v13 = v5[4];
  v14 = *((_BYTE *)v5 + 40);
  sub_2150437A8(v12, v13, v14);
  v15 = sub_21502CB8C(a1, a2, a3, v12, v13, v14);
  v17 = v16;
  LOBYTE(a1) = v18;
  v26 = v11;
  v27 = *(_OWORD *)(v5 + 1);
  v24[0] = v15;
  v24[1] = v16;
  v25 = v18;
  v20 = type metadata accessor for Column(0, *(_QWORD *)(a4 + 16), v18, v19);
  v21 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v20);
  sub_21506CCA4((uint64_t)v24, v20, v21, (uint64_t)&v28);
  sub_21501EF2C((uint64_t)v15, v17, (char)a1);
  v22 = v31;
  *(_QWORD *)a5 = v28;
  *(_OWORD *)(a5 + 8) = v29;
  result = *(double *)&v30;
  *(_OWORD *)(a5 + 24) = v30;
  *(_BYTE *)(a5 + 40) = v22;
  return result;
}

void (*DiscontiguousColumnSlice.subscript.modify(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[6] = a4;
  v9[7] = v4;
  DiscontiguousColumnSlice.subscript.getter(a2, a3, a4, (uint64_t)v9);
  return sub_2150C4D70;
}

void sub_2150C4D70(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13[5];
  char v14;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  v8 = *((_BYTE *)v2 + 40);
  v9 = v2[6];
  v13[0] = v4;
  v13[1] = v3;
  v13[2] = v6;
  v13[3] = v5;
  v13[4] = v7;
  v14 = v8;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150437A8(v5, v7, v8);
    sub_2150C7044(v13, v9);
    v10 = v2[3];
    v11 = v2[4];
    v12 = *((_BYTE *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_21501EF2C(v10, v11, v12);
  }
  else
  {
    sub_2150C7044(v13, v9);
  }
  free(v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char *v5;
  uint64_t v6;

  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>);
  sub_21512FC98();
  return DiscontiguousColumnSlice.subscript.getter(v5, v6, a1, a2);
}

double sub_2150C4ECC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  double result;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;

  v5 = type metadata accessor for DiscontiguousColumnSlice(0, *(_QWORD *)(a2 + a1 - 24), a2, a3);
  DiscontiguousColumnSlice.subscript.getter(v5, (uint64_t)&v8);
  v6 = v11;
  *(_QWORD *)a4 = v8;
  *(_OWORD *)(a4 + 8) = v9;
  result = *(double *)&v10;
  *(_OWORD *)(a4 + 24) = v10;
  *(_BYTE *)(a4 + 40) = v6;
  return result;
}

uint64_t sub_2150C4F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  char v16;

  v5 = *(_QWORD *)(a4 + a3 - 24);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v15[0] = *(_QWORD *)a1;
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v16 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v8, v9, v10);
  v13 = type metadata accessor for DiscontiguousColumnSlice(0, v5, v11, v12);
  return sub_2150C7470((uint64_t)v15, a3, v13);
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2150C7470(a1, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a2, a4);
}

void (*DiscontiguousColumnSlice.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, char a2)
{
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;

  v10 = malloc(0x60uLL);
  *a1 = v10;
  v10[8] = a5;
  v10[9] = v5;
  v10[6] = a3;
  v10[7] = a4;
  v11 = *(_QWORD *)(a4 - 8);
  v10[10] = v11;
  v10[11] = malloc(*(_QWORD *)(v11 + 64));
  (*(void (**)(void))(v11 + 16))();
  DiscontiguousColumnSlice.subscript.getter(a3, (uint64_t)v10);
  return sub_2150C510C;
}

void sub_2150C510C(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD v15[5];
  char v16;

  v2 = *a1;
  v4 = *(_QWORD *)(*a1 + 80);
  v3 = *(void **)(*a1 + 88);
  v6 = *(_QWORD *)(*a1 + 48);
  v5 = *(_QWORD *)(*a1 + 56);
  if ((a2 & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 8);
    v14 = v4;
    v15[0] = *(_QWORD *)v2;
    v8 = *(_QWORD *)(v2 + 16);
    v9 = *(_QWORD *)(v2 + 24);
    v10 = *(_QWORD *)(v2 + 32);
    v15[1] = v7;
    v15[2] = v8;
    v15[3] = v9;
    v15[4] = v10;
    v16 = *(_BYTE *)(v2 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150437A8(v9, v10, v16);
    sub_2150C7470((uint64_t)v15, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v3, v5);
    v11 = *(_QWORD *)(v2 + 24);
    v12 = *(_QWORD *)(v2 + 32);
    v13 = *(_BYTE *)(v2 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_21501EF2C(v11, v12, v13);
  }
  else
  {
    sub_2150C7470(*a1, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  free(v3);
  free((void *)v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  DiscontiguousColumnSlice.startIndex.getter(a2, a1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA74C0);
  sub_2150C7514();
  return DiscontiguousColumnSlice.subscript.getter(a2, a4);
}

void (*DiscontiguousColumnSlice.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7 = malloc(0x40uLL);
  *a1 = v7;
  v7[6] = a4;
  v7[7] = v4;
  DiscontiguousColumnSlice.subscript.getter(v8, a4, v9, (uint64_t)v7);
  return sub_2150C52EC;
}

void sub_2150C52EC(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];
  char v15;

  v4 = *a1;
  v5 = (*a1)[6];
  if ((a2 & 1) != 0)
  {
    v6 = v4[1];
    v7 = v4[2];
    v8 = v4[3];
    v9 = v4[4];
    v14[0] = *v4;
    v14[1] = v6;
    v14[2] = v7;
    v14[3] = v8;
    v14[4] = v9;
    v15 = *((_BYTE *)v4 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150437A8(v8, v9, v15);
    sub_2150C7560(v14, v5, v10, v11);
    v12 = v4[3];
    v13 = v4[4];
    LOBYTE(v8) = *((_BYTE *)v4 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_21501EF2C(v12, v13, v8);
  }
  else
  {
    sub_2150C7560(*a1, v5, a3, a4);
  }
  free(v4);
}

Swift::Int sub_2150C53B4@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DiscontiguousColumnSlice.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_2150C53DC(Swift::Int *a1)
{
  Swift::Int result;

  result = DiscontiguousColumnSlice.index(before:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_2150C5404(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_2150C6E8C(a1, *a2, a3);
  v4 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*sub_2150C5450(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DiscontiguousColumnSlice.subscript.modify(v6, *a2, a3);
  return sub_215072674;
}

uint64_t sub_2150C54AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2150C7044(a1, a3);
}

void (*sub_2150C54B4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DiscontiguousColumnSlice.subscript.modify(v6, *(char **)a2, *(_QWORD *)(a2 + 8), a3);
  return sub_215072674;
}

uint64_t sub_2150C5510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a3);
  return sub_21512FA40();
}

uint64_t sub_2150C5580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = DiscontiguousColumnSlice.startIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_2150C55A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = DiscontiguousColumnSlice.endIndex.getter(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

void (*sub_2150C55C8(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2150C5624(v6, *a2, a3);
  return sub_215072674;
}

void (*sub_2150C5624(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_215130064();
  *a1 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  DiscontiguousColumnSlice.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_21506DF04;
}

uint64_t sub_2150C569C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DiscontiguousColumnSlice.subscript.getter(*(char **)a1, *(_QWORD *)(a1 + 8), a2, a3);
}

uint64_t sub_2150C56B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a3);
  return sub_21512F998();
}

uint64_t sub_2150C570C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a4);
  return sub_21512F98C();
}

uint64_t sub_2150C5770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a3);
  return sub_21512F9A4();
}

Swift::Int sub_2150C57BC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DiscontiguousColumnSlice.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_2150C57E4(Swift::Int *a1)
{
  Swift::Int result;

  result = DiscontiguousColumnSlice.index(after:)(*a1);
  *a1 = result;
  return result;
}

__n128 sub_2150C580C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;

  v7 = *v5;
  v8 = v5[3];
  v9 = v5[4];
  v10 = *((_BYTE *)v5 + 40);
  v13 = *(__n128 *)(v5 + 1);
  v11 = DiscontiguousColumnSlice.startIndex.getter(a1, a2, a3, a4);
  *(_QWORD *)a5 = v7;
  result = v13;
  *(__n128 *)(a5 + 8) = v13;
  *(_QWORD *)(a5 + 24) = v8;
  *(_QWORD *)(a5 + 32) = v9;
  *(_BYTE *)(a5 + 40) = v10;
  *(_QWORD *)(a5 + 48) = v11;
  return result;
}

uint64_t sub_2150C5870(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a1);
  return sub_21512FEC0();
}

uint64_t sub_2150C58A4(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a1);
  return sub_21512FECC();
}

uint64_t static DiscontiguousColumnSlice<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v43;
  uint64_t (*v44)(_BYTE *, uint64_t, uint64_t);
  void (*v45)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v46;
  int v47;
  void (*v48)(_BYTE *, uint64_t);
  _BYTE *v49;
  uint64_t v50;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v52;
  _BYTE *v53;
  char v54;
  void (*v55)(_BYTE *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _BYTE v69[12];
  int v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  int64x2_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t TupleTypeMetadata2;
  uint64_t v85;
  uint64_t v86;
  int64x2_t v87;
  _BYTE *v88;
  uint64_t v89;
  int64x2_t v90;
  __int128 v91;
  char v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  char v96;
  uint64_t v97;
  int64x2_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  int64x2_t v103;
  __int128 v104;
  char v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;

  v75 = a4;
  v85 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v74 = &v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v76 = &v69[-v9];
  v10 = sub_215130064();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v77 = &v69[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v78 = &v69[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v82 = &v69[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v69[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v88 = &v69[-v21];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = sub_215130064();
  MEMORY[0x24BDAC7A8](v22);
  v83 = &v69[-v23];
  v24 = *(_QWORD *)a1;
  v87 = *(int64x2_t *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 24);
  v71 = *(_QWORD *)(a1 + 32);
  v72 = v25;
  v70 = *(unsigned __int8 *)(a1 + 40);
  v26 = *(_QWORD *)a2;
  v81 = *(int64x2_t *)(a2 + 8);
  v27 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(a2 + 32);
  v29 = *(_BYTE *)(a2 + 40);
  v80 = a3;
  v86 = type metadata accessor for DiscontiguousColumnSlice(0, a3, v30, v31);
  if (v24 != v26 || (vmovn_s64(vceqq_s64(v87, v81)).u8[0] & 1) == 0)
  {
    v32 = sub_21513043C();
    result = 0;
    if ((v32 & 1) == 0)
      return result;
  }
  v79 = v20;
  v89 = v24;
  v90 = v87;
  *(_QWORD *)&v91 = v72;
  *((_QWORD *)&v91 + 1) = v71;
  v92 = v70;
  v97 = v26;
  v98 = v81;
  v99 = v27;
  v100 = v28;
  v101 = v29;
  v34 = v86;
  v35 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v86);
  sub_215130490();
  v89 = v102;
  v90 = v103;
  v91 = v104;
  v92 = v105;
  v93 = v106;
  v94 = v107;
  v36 = v79;
  v95 = v108;
  v96 = v109;
  v97 = v34;
  v98.i64[0] = v34;
  v98.i64[1] = v35;
  v99 = v35;
  v81.i64[0] = v35;
  sub_2151301A8();
  sub_215130184();
  v37 = TupleTypeMetadata2;
  v38 = v85;
  v39 = v80;
  v40 = v83;
  v73 = v11;
  while (1)
  {
    v102 = v86;
    v103.i64[0] = v86;
    v103.i64[1] = v81.i64[0];
    *(_QWORD *)&v104 = v81.i64[0];
    sub_21513019C();
    sub_215130190();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v40, 1, v37) == 1)
    {
      v56 = v110;
      v57 = v111;
      v58 = v113;
      v59 = v114;
      v60 = v112;
      v61 = v115;
      swift_release();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v56, v57, v60);
      swift_release();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v58, v59, v61);
      return 1;
    }
    v41 = &v40[*(int *)(v37 + 48)];
    v42 = (void (*)(_BYTE *, _BYTE *, uint64_t))v11[4];
    v43 = v88;
    v42(v88, v40, v10);
    v42(v36, v41, v10);
    v44 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48);
    LODWORD(v41) = v44(v43, 1, v39);
    v45 = (void (*)(_BYTE *, _BYTE *, uint64_t))v11[2];
    v46 = v82;
    v45(v82, v36, v10);
    if ((_DWORD)v41 == 1)
    {
      v47 = v44(v46, 1, v39);
      v48 = (void (*)(_BYTE *, uint64_t))v11[1];
      if (v47 == 1)
      {
        v48(v46, v10);
        v48(v36, v10);
        v38 = v85;
        goto LABEL_6;
      }
    }
    else
    {
      v48 = (void (*)(_BYTE *, uint64_t))v11[1];
    }
    v49 = v78;
    v48(v46, v10);
    v45(v49, v88, v10);
    if (v44(v49, 1, v39) == 1)
      goto LABEL_18;
    v87.i64[0] = (uint64_t)v48;
    v50 = v39;
    v38 = v85;
    v51 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v85 + 32);
    v52 = v76;
    v51(v76, v49, v50);
    v49 = v77;
    v45(v77, v36, v10);
    if (v44(v49, 1, v50) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v52, v50);
      v48 = (void (*)(_BYTE *, uint64_t))v87.i64[0];
LABEL_18:
      v48(v36, v10);
      v62 = v110;
      v63 = v111;
      v86 = v114;
      v87.i64[0] = v113;
      v64 = v112;
      LODWORD(v85) = v115;
      swift_release();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v62, v63, v64);
      swift_release();
      swift_bridgeObjectRelease();
      sub_21501EF2C(v87.i64[0], v86, v85);
      v48(v49, v10);
      v48(v88, v10);
      return 0;
    }
    v53 = v74;
    v51(v74, v49, v50);
    v54 = sub_21512FA58();
    v55 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
    v55(v53, v50);
    v55(v52, v50);
    v48 = (void (*)(_BYTE *, uint64_t))v87.i64[0];
    ((void (*)(_BYTE *, uint64_t))v87.i64[0])(v36, v10);
    if ((v54 & 1) == 0)
      break;
    v11 = v73;
    v36 = v79;
    v39 = v80;
LABEL_6:
    v48(v88, v10);
    v40 = v83;
    v37 = TupleTypeMetadata2;
  }
  v65 = v110;
  v66 = v111;
  v67 = v113;
  v86 = v114;
  v68 = v112;
  LODWORD(v85) = v115;
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v65, v66, v68);
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v67, v86, v85);
  v48(v88, v10);
  return 0;
}

uint64_t sub_2150C5F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static DiscontiguousColumnSlice<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t DiscontiguousColumnSlice<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  _BYTE v31[24];
  __int128 v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  __int128 v38;

  v27 = *(_QWORD *)(a2 + 16);
  v3 = sub_215130064();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - v5;
  v7 = *v2;
  v8 = v2[1];
  v10 = v2[2];
  v24 = v2[3];
  v9 = v24;
  v29 = v2[4];
  v28 = *((unsigned __int8 *)v2 + 40);
  swift_bridgeObjectRetain();
  v26 = v7;
  sub_21512FB3C();
  swift_bridgeObjectRelease();
  *(_QWORD *)v31 = v7;
  *(_QWORD *)&v31[8] = v8;
  v25 = v10;
  *(_QWORD *)&v31[16] = v10;
  *(_QWORD *)&v32 = v9;
  v11 = v29;
  *((_QWORD *)&v32 + 1) = v29;
  LOBYTE(v10) = v28;
  v33 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v9, v11, v10);
  v14 = type metadata accessor for Column(255, v27, v12, v13);
  v15 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v14);
  v17 = type metadata accessor for _DiscontiguousSlice(0, v14, v15, v16);
  sub_21506D1F4(v17, &v34);
  v18 = v34;
  v19 = v35;
  v34 = v26;
  *(_QWORD *)&v35 = v8;
  *((_QWORD *)&v35 + 1) = v25;
  *(_QWORD *)&v36 = v24;
  *((_QWORD *)&v36 + 1) = v29;
  v37 = v28;
  *(_QWORD *)&v38 = v18;
  *((_QWORD *)&v38 + 1) = v19;
  *(_QWORD *)v31 = v18;
  *(_QWORD *)&v31[8] = v19;
  sub_21506D3FC(v17, &v30);
  while ((sub_21506CF5C(v31, &v30, v14, v15) & 1) == 0)
  {
    sub_21506D8C0(v17, v20, (uint64_t)v6);
    *(_QWORD *)v31 = v34;
    *(_OWORD *)&v31[8] = v35;
    v32 = v36;
    v33 = v37;
    sub_21506D568((uint64_t *)&v38, v17, &v30);
    v38 = v30;
    sub_215130070();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(_OWORD *)v31 = v38;
    sub_21506D3FC(v17, &v30);
  }
  v21 = v36;
  v22 = v37;
  swift_release();
  swift_bridgeObjectRelease();
  return sub_21501EF2C(v21, *((uint64_t *)&v21 + 1), v22);
}

void DiscontiguousColumnSlice<A>.distinct()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  int64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  _OWORD v51[3];
  __int128 v52;
  _OWORD v53[4];
  char v54;
  _BYTE v55[40];
  char v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  _QWORD v79[4];

  *((_QWORD *)&v49 + 1) = a1;
  v50 = a2;
  v36 = *(_QWORD *)(a1 + 16);
  v37 = a3;
  v4 = sub_215130064();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v35 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_215130064();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v35 - v14);
  v17 = v3[1];
  v44 = *v3;
  v16 = v44;
  *(_QWORD *)&v45 = v17;
  v18 = v3[3];
  *((_QWORD *)&v45 + 1) = v3[2];
  v40 = v18;
  v38 = v3[4];
  v19 = *((unsigned __int8 *)v3 + 40);
  v39 = v19;
  v79[0] = v50;
  v50 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE4AB0], v4, v79);
  v79[1] = sub_21512F830();
  v76 = 0;
  v77 = 0;
  v78 = 2;
  *(_QWORD *)&v51[0] = v16;
  *((_QWORD *)&v51[0] + 1) = v17;
  *(_QWORD *)&v51[1] = *((_QWORD *)&v45 + 1);
  *((_QWORD *)&v51[1] + 1) = v18;
  v20 = v38;
  *(_QWORD *)&v51[2] = v38;
  BYTE8(v51[2]) = v19;
  v21 = *((_QWORD *)&v49 + 1);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, *((_QWORD *)&v49 + 1));
  sub_21512FF38();
  v41 = v68;
  v42 = *((_QWORD *)&v67 + 1);
  v48 = v69;
  *(_QWORD *)&v49 = *((_QWORD *)&v68 + 1);
  v43 = BYTE8(v69);
  *(_OWORD *)v55 = v67;
  *(_OWORD *)&v55[16] = v68;
  *(_QWORD *)&v55[32] = v69;
  v56 = BYTE8(v69);
  v57 = v70;
  v62 = v44;
  v63 = v45;
  v64 = v40;
  v65 = v20;
  v66 = v39;
  v22 = v21;
  v23 = sub_21512F944();
  v24 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660], v23);
  v25 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v22);
  sub_215130490();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v49, v48, v43);
  *(_QWORD *)v55 = *(_QWORD *)&v51[0];
  *(_OWORD *)&v55[8] = *(_OWORD *)((char *)v51 + 8);
  *(_OWORD *)&v55[24] = *(_OWORD *)((char *)&v51[1] + 8);
  v56 = BYTE8(v51[2]);
  v57 = v52;
  v58 = *(_QWORD *)&v53[0];
  v59 = *(_OWORD *)((char *)v53 + 8);
  v60 = *(_OWORD *)((char *)&v53[1] + 8);
  v61 = BYTE8(v53[2]);
  v48 = v24;
  *(_QWORD *)&v49 = v23;
  *(_QWORD *)&v67 = v23;
  *((_QWORD *)&v67 + 1) = v22;
  *(_QWORD *)&v68 = v24;
  *((_QWORD *)&v68 + 1) = v25;
  v26 = v25;
  sub_2151301A8();
  sub_215130184();
  while (1)
  {
    while (1)
    {
      v51[0] = v49;
      *(_QWORD *)&v51[1] = v48;
      *((_QWORD *)&v51[1] + 1) = v26;
      sub_21513019C();
      sub_215130190();
      if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8)
                                                                              + 48))(v15, 1, TupleTypeMetadata2) == 1)
      {
        v53[2] = v73;
        v53[3] = v74;
        v54 = v75;
        v51[2] = v69;
        v52 = v70;
        v53[0] = v71;
        v53[1] = v72;
        v51[0] = v67;
        v51[1] = v68;
        sub_2150C79E4((uint64_t)v51);
        swift_bridgeObjectRelease();
        *(_QWORD *)v55 = v44;
        *(_OWORD *)&v55[8] = v45;
        v32 = v76;
        v33 = v77;
        v34 = v78;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2150C31A8((uint64_t *)v55, v32, v33, v34, v36, v37);
        return;
      }
      v27 = *v15;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, (char *)v15 + *(int *)(TupleTypeMetadata2 + 48), v4);
      swift_bridgeObjectRetain();
      v28 = sub_21512FDD0();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
        break;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }
    v29 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v29 < v27)
      goto LABEL_10;
    sub_2150757D4(v27, v29);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v47, v11, v4);
    sub_21512FDDC();
    v30 = v46;
    sub_21512FDC4();
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v30, v4);
    v31(v11, v4);
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t DiscontiguousColumnSlice<A>.hashValue.getter(uint64_t a1)
{
  uint64_t *v1;
  char v3;
  _BYTE v5[72];
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v3 = *((_BYTE *)v1 + 40);
  v6 = *v1;
  v7 = *(_OWORD *)(v1 + 1);
  v8 = *(_OWORD *)(v1 + 3);
  v9 = v3;
  sub_2151305A4();
  DiscontiguousColumnSlice<A>.hash(into:)((uint64_t)v5, a1);
  return sub_2151305EC();
}

uint64_t sub_2150C6728(uint64_t a1)
{
  return DiscontiguousColumnSlice<A>.hashValue.getter(a1);
}

uint64_t sub_2150C6730(uint64_t a1, uint64_t a2)
{
  return DiscontiguousColumnSlice<A>.hash(into:)(a1, a2);
}

uint64_t sub_2150C6738(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_2151305A4();
  DiscontiguousColumnSlice<A>.hash(into:)((uint64_t)v4, a2);
  return sub_2151305EC();
}

uint64_t sub_2150C6788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v17[2];
  __int128 v18;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = sub_215130064();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - v9;
  v17[1] = *(_QWORD *)v3;
  v18 = *(_OWORD *)(v3 + 8);
  v13 = type metadata accessor for Column(0, v6, v11, v12);
  Column.subscript.getter(a1, v13, (uint64_t)v10);
  v14 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v6) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a3 + 24) = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v14 + 32))(boxed_opaque_existential_1, v10, v6);
  }
  return result;
}

uint64_t sub_2150C688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[2];

  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_215130064();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - v8;
  sub_215053AA4(a2, (uint64_t)&v19);
  if (v20)
  {
    sub_21504678C(&v19, v21);
    sub_21504679C((uint64_t)v21, (uint64_t)&v19);
    swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v9, 0, 1, v5);
    v12 = type metadata accessor for Column(0, v5, v10, v11);
    sub_215075E44((uint64_t)v9, a1, v12, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
  else
  {
    sub_21507651C((uint64_t)&v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v9, 1, 1, v5);
    v17 = type metadata accessor for Column(0, v5, v15, v16);
    sub_215075E44((uint64_t)v9, a1, v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2150C69F8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = a1 == (char *)a2;
  if (a1 == (char *)a2)
    v9 = 0;
  else
    v9 = a1;
  if (a1 == (char *)a2)
    v10 = 0;
  else
    v10 = a2;
  v11 = *(_BYTE *)(v4 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v6, v7, v11);
  v12 = 2 * v8;
  v13 = sub_21502CB8C(v9, v10, 2 * v8, v6, v7, v11);
  v15 = v14;
  v17 = v16;
  sub_21501EF2C((uint64_t)v9, v10, v12);
  a4[3] = a3;
  a4[4] = (uint64_t)&off_24D2A6678;
  v18 = swift_allocObject();
  v19 = v18 + 16;
  *a4 = v18;
  v22 = type metadata accessor for Column(0, *(_QWORD *)(a3 + 16), v20, v21);
  sub_21507300C((uint64_t)v13, v15, v17, v22, v19);
  sub_21501EF2C((uint64_t)v13, v15, v17);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150C6B34(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char v30;
  _BYTE v31[40];

  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(v4 + 32);
  v9 = a1 == (char *)a2;
  if (a1 == (char *)a2)
    v10 = 0;
  else
    v10 = a1;
  if (a1 == (char *)a2)
    v11 = 0;
  else
    v11 = a2;
  v12 = *(_BYTE *)(v4 + 40);
  sub_2150437A8(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), v12);
  v13 = 2 * v9;
  v14 = sub_21502CB8C(v10, v11, v13, v7, v8, v12);
  v16 = v15;
  v18 = v17;
  sub_21501EF2C((uint64_t)v10, v11, v13);
  sub_21504C608(a3, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C30);
  swift_dynamicCast();
  v23 = v27;
  v24 = v28;
  v25 = v29;
  v26 = v30;
  v21 = type metadata accessor for Column(0, *(_QWORD *)(a4 + 16), v19, v20);
  return sub_2150730A8((uint64_t)&v23, (uint64_t)v14, v16, v18, v21);
}

uint64_t sub_2150C6C50@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v11 = *(_QWORD *)(v5 + 24);
  v12 = *(_QWORD *)(v5 + 32);
  v13 = *(_BYTE *)(v5 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v11, v12, v13);
  v14 = sub_21502CB8C(a1, a2, a3, v11, v12, v13);
  v16 = v15;
  LOBYTE(a1) = v17;
  a5[3] = a4;
  a5[4] = (uint64_t)&off_24D2A6678;
  v18 = swift_allocObject();
  v19 = v18 + 16;
  *a5 = v18;
  v22 = type metadata accessor for Column(0, *(_QWORD *)(a4 + 16), v20, v21);
  sub_21507300C((uint64_t)v14, v16, (char)a1, v22, v19);
  sub_21501EF2C((uint64_t)v14, v16, (char)a1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150C6D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  char v17;

  v7 = *(_QWORD *)v4;
  v8 = *(_QWORD *)(v4 + 8);
  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(v4 + 32);
  v12 = *(_BYTE *)(v4 + 40);
  v16[0] = v7;
  v16[1] = v8;
  v16[2] = v9;
  v16[3] = v10;
  v16[4] = v11;
  v17 = v12;
  v13 = *(_QWORD *)(a1 + 16);
  a4[3] = type metadata accessor for Column(0, v13, a2, a3);
  a4[4] = &off_24D2A4440;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_2150437A8(v10, v11, v12);
  v14 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a1);
  return Column.init<A>(name:contents:)(v7, v8, (uint64_t)v16, v13, a1, v14, a4);
}

_QWORD *sub_2150C6E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  sub_2150437A8(v7, v8, v9);
  v10 = sub_2150C3078(a2, v7, v8, v9);
  sub_21501EF2C(v7, v8, v9);
  if ((v10 & 1) != 0)
  {
    v13 = type metadata accessor for Column(0, *(_QWORD *)(a3 + 16), v11, v12);
    return sub_215075E44(a1, a2, v13, v14);
  }
  else
  {
    sub_215130178();
    swift_bridgeObjectRelease();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = (_QWORD *)sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150C6FEC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_2150770B4(a1, *(uint64_t (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2150C700C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_21501EF2C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_2150C7044(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;

  v5 = sub_215130064();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - v6;
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v49 = a1[4];
  v12 = *((unsigned __int8 *)a1 + 40);
  v13 = *v2;
  v14 = v2[1];
  v15 = v2[2];
  v16 = v2[3];
  v17 = v2[4];
  v45 = v2;
  v46 = v14;
  v18 = *((unsigned __int8 *)v2 + 40);
  v47 = v13;
  *(_QWORD *)&v84 = v13;
  *((_QWORD *)&v84 + 1) = v14;
  v41 = v16;
  v42 = v15;
  *(_QWORD *)&v85 = v15;
  *((_QWORD *)&v85 + 1) = v16;
  v40 = v17;
  *(_QWORD *)&v86 = v17;
  LODWORD(v39) = v18;
  BYTE8(v86) = v18;
  v22 = DiscontiguousColumnSlice.count.getter(a2, v19, v20, v21);
  v48 = v9;
  *(_QWORD *)&v84 = v9;
  *((_QWORD *)&v84 + 1) = v8;
  v50 = v8;
  v51 = v10;
  *(_QWORD *)&v85 = v11;
  *((_QWORD *)&v85 + 1) = v10;
  v23 = v49;
  *(_QWORD *)&v86 = v49;
  BYTE8(v86) = v12;
  if (v22 == DiscontiguousColumnSlice.count.getter(a2, v24, v25, v26))
  {
    *(_QWORD *)&v52 = v47;
    *((_QWORD *)&v52 + 1) = v46;
    *(_QWORD *)&v53 = v42;
    *((_QWORD *)&v53 + 1) = v41;
    *(_QWORD *)&v54 = v40;
    BYTE8(v54) = v39;
    MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a2);
    sub_21512FF38();
    v38 = v85;
    v39 = *((_QWORD *)&v84 + 1);
    v41 = v86;
    v42 = *((_QWORD *)&v85 + 1);
    LODWORD(v40) = BYTE8(v86);
    v62 = v84;
    v63 = v85;
    *(_QWORD *)&v64 = v86;
    BYTE8(v64) = BYTE8(v86);
    v65 = v87;
    *(_QWORD *)&v52 = v48;
    *((_QWORD *)&v52 + 1) = v50;
    *(_QWORD *)&v53 = v11;
    *((_QWORD *)&v53 + 1) = v51;
    *(_QWORD *)&v54 = v23;
    BYTE8(v54) = v12;
    sub_21512FF38();
    v47 = v11;
    v27 = v80;
    v37 = v81;
    HIDWORD(v36) = v82;
    v70 = v77;
    v71 = v78;
    v72 = v79;
    v73 = v80;
    v74 = v81;
    v75 = v82;
    v76 = v83;
    v28 = sub_21512F944();
    v29 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660], v28);
    LODWORD(v46) = v12;
    v30 = v29;
    sub_215130490();
    swift_release();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v27, v37, SBYTE4(v36));
    swift_release();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v42, v41, v40);
    v66 = v56;
    v67 = v57;
    v68 = v58;
    v69 = v59;
    v62 = v52;
    v63 = v53;
    v64 = v54;
    v65 = v55;
    *(_QWORD *)&v84 = v28;
    *((_QWORD *)&v84 + 1) = v28;
    *(_QWORD *)&v85 = v30;
    *((_QWORD *)&v85 + 1) = v30;
    sub_2151301A8();
    sub_215130184();
    *(_QWORD *)&v52 = v28;
    *((_QWORD *)&v52 + 1) = v28;
    *(_QWORD *)&v53 = v30;
    *((_QWORD *)&v53 + 1) = v30;
    sub_21513019C();
    sub_215130190();
    v31 = v44;
    v32 = v43;
    if ((v63 & 1) == 0)
    {
      v33 = *((_QWORD *)&v62 + 1);
      v34 = v62;
      do
      {
        *(_QWORD *)&v52 = v48;
        *((_QWORD *)&v52 + 1) = v50;
        *(_QWORD *)&v53 = v47;
        *((_QWORD *)&v53 + 1) = v51;
        *(_QWORD *)&v54 = v49;
        BYTE8(v54) = v46;
        DiscontiguousColumnSlice.subscript.getter(v33, a2, (uint64_t)v7);
        sub_2150C6E8C((uint64_t)v7, v34, a2);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
        *(_QWORD *)&v52 = v28;
        *((_QWORD *)&v52 + 1) = v28;
        *(_QWORD *)&v53 = v30;
        *((_QWORD *)&v53 + 1) = v30;
        sub_21513019C();
        sub_215130190();
        v33 = *((_QWORD *)&v62 + 1);
        v34 = v62;
      }
      while (v63 != 1);
    }
    v58 = v90;
    v59 = v91;
    v60 = v92;
    v61 = v93;
    v54 = v86;
    v55 = v87;
    v56 = v88;
    v57 = v89;
    v52 = v84;
    v53 = v85;
    sub_2150C79E4((uint64_t)&v52);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_21501EF2C(v51, v49, v46);
  }
  else
  {
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t sub_2150C7470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  char v10;

  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, a3);
  sub_21512FC98();
  v5 = *(_BYTE *)(a1 + 40);
  v7 = *(_QWORD *)a1;
  v8 = *(_OWORD *)(a1 + 8);
  v9 = *(_OWORD *)(a1 + 24);
  v10 = v5;
  return sub_2150C7044(&v7, a3);
}

unint64_t sub_2150C7514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA8600;
  if (!qword_254DA8600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA74C0);
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE2C50], v1);
    atomic_store(result, (unint64_t *)&qword_254DA8600);
  }
  return result;
}

uint64_t sub_2150C7560(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v6 = DiscontiguousColumnSlice.startIndex.getter(a2, a2, a3, a4);
  v7 = *a1;
  v8 = *((_BYTE *)a1 + 40);
  v10 = v6;
  v11 = v7;
  v12 = *(_OWORD *)(a1 + 1);
  v13 = *(_OWORD *)(a1 + 3);
  v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA74C0);
  sub_2150C7514();
  return sub_2150C7470((uint64_t)&v11, (uint64_t)&v10, a2);
}

uint64_t type metadata accessor for DiscontiguousColumnSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DiscontiguousColumnSlice);
}

uint64_t sub_2150C75F0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2150C761C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2150C7648()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150C7658(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE0658], a1, &v3);
}

void sub_2150C76A0()
{
  JUMPOUT(0x2199DC4C4);
}

void sub_2150C76B0()
{
  JUMPOUT(0x2199DC4C4);
}

void sub_2150C76C0()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150C76D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2199DC4C4](&protocol conformance descriptor for <A> DiscontiguousColumnSlice<A>, a1, &v4);
}

uint64_t sub_2150C7710()
{
  return 8;
}

_QWORD *sub_2150C771C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_2150C772C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  v6 = type metadata accessor for DiscontiguousColumnSlice(0, *(uint64_t *)((char *)a3 + a4 - 8), (uint64_t)a3, a4);
  return sub_2150C6E8C(a1, v5, v6);
}

uint64_t sub_2150C7778()
{
  return 8;
}

uint64_t sub_2150C778C()
{
  return 8;
}

uint64_t sub_2150C77A0()
{
  return 24;
}

__n128 sub_2150C77AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2150C77C0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return sub_21501EF2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_2150C77F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2150437A8(v4, v5, v6);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_2150C7860(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  v4 = v2[3];
  v5 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_2150437A8(v4, v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v8 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_21501EF2C(v6, v7, v8);
  return a1;
}

uint64_t sub_2150C78F0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_21501EF2C(v5, v6, v7);
  return a1;
}

uint64_t sub_2150C7950(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2150C7998(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2150C79E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 112);
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v2, v3, v6);
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v4, v5, v7);
  return a1;
}

BOOL sub_2150C7A78(uint64_t a1)
{
  uint64_t v1;

  return **(_QWORD **)(v1 + 16) < *(_QWORD *)(a1 + 8);
}

uint64_t sub_2150C7A98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_215130028();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2150C7B10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= 8)
    v8 = 8;
  v9 = *(unsigned __int8 *)(a1 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X15 }
  }
  if (v9 == 1)
    return swift_bridgeObjectRelease();
  v11 = ~v6;
  v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(a1, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)((v7 + a1) & v11, v3);
}

_BYTE *sub_2150C7C38(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, unsigned __int8 *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v12 = __src[v11];
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v11] = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = ~v8;
    v15 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v6 + 16);
    v15(__dst, __src, *(_QWORD *)(a3 + 16));
    v15((_BYTE *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2150C7D78(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unsigned __int8 *, uint64_t);
  unsigned int v16;
  uint64_t v17;
  void (*v18)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = __dst[v11];
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X13 }
    }
    v14 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v15(__dst, *(_QWORD *)(a3 + 16));
      v15((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), v5);
    }
    v16 = __src[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 1)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v11] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
      v18(__dst, __src, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_2150C7F68(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, unsigned __int8 *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v12 = __src[v11];
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v11] = 1;
  }
  else
  {
    v14 = ~v8;
    v15 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v6 + 32);
    v15(__dst, __src, *(_QWORD *)(a3 + 16));
    v15((_BYTE *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2150C80A4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unsigned __int8 *, uint64_t);
  unsigned int v16;
  uint64_t v17;
  void (*v18)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = __dst[v11];
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X13 }
    }
    v14 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v15(__dst, *(_QWORD *)(a3 + 16));
      v15((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), v5);
    }
    v16 = __src[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 1)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v11] = 1;
    }
    else
    {
      v18 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
      v18(__dst, __src, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_2150C8290(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8)
    v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2150C8364 + 4 * byte_215138903[(v4 - 1)]))();
}

void sub_2150C83B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_2150C8568(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8)
    v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2150C85C0 + 4 * byte_215138911[v3]))();
}

void sub_2150C8608(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8)
    v4 = 8;
  else
    v4 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for _RangeSetStorage._Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _RangeSetStorage._Storage);
}

void sub_2150C86EC()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150C86FC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&unk_215138984);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4240], a1, &v3);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2150C8744()
{
  uint64_t v0;

  v0 = sub_21512FD40();
  nullsub_5(v0);
}

uint64_t sub_2150C877C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  v8 = type metadata accessor for _RangeSetStorage._Storage(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, v5, v8);
  LODWORD(result) = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v13 = sub_215130028();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, v10, v13);
    if (!a1)
      return result;
    __break(1u);
  }
  if ((_DWORD)result == 1)
  {
    sub_215130028();
    sub_21512FD70();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

void (*sub_2150C88E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v9 = malloc(0x50uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *v9 = a3;
  v10 = sub_215130544();
  v9[3] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[4] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[5] = malloc(v12);
  v13 = (char *)malloc(v12);
  v9[6] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v14 = sub_215130028();
  v9[7] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v9[8] = v15;
  v9[9] = malloc(*(_QWORD *)(v15 + 64));
  (*(void (**)(void))(v15 + 16))();
  sub_2150C8B54(a2, a3, a4, v13);
  return sub_2150C8A20;
}

void sub_2150C8A20(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v3 = *(void **)(*(_QWORD *)a1 + 72);
  v5 = *(void **)(*(_QWORD *)a1 + 48);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(void **)(*(_QWORD *)a1 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, _QWORD))(v7 + 16))(v2[5], v5, v2[3]);
    MEMORY[0x2199DC4C4](MEMORY[0x24BEE4238], v8);
    sub_2151303AC();
    v9 = *(void (**)(void *, uint64_t))(v7 + 8);
    v9(v6, v8);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v10);
  }
  else
  {
    MEMORY[0x2199DC4C4](MEMORY[0x24BEE4238], v2[3]);
    sub_2151303AC();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v10);
    v9 = *(void (**)(void *, uint64_t))(v7 + 8);
  }
  v9(v5, v8);
  free(v3);
  free(v5);
  free(v6);
  free(v2);
}

uint64_t sub_2150C8B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v48 = a1;
  v49 = a4;
  v6 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v40 - v12;
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  swift_getAssociatedConformanceWitness();
  v45 = sub_215130028();
  v43 = *(_QWORD *)(v45 - 8);
  v19 = MEMORY[0x24BDAC7A8](v45);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)&v40 - v22;
  sub_21512FE48();
  v46 = a2;
  v47 = v4;
  v44 = v6;
  sub_21512FEA8();
  result = sub_21512F9E0();
  if ((result & 1) != 0)
  {
    v25 = v41;
    v24 = TupleTypeMetadata2;
    v26 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    v27 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v27(v13, v18, AssociatedTypeWitness);
    v27(v26, v16, AssociatedTypeWitness);
    v28 = &v10[*(int *)(v24 + 48)];
    v29 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v29(v10, v13, AssociatedTypeWitness);
    v29(v28, v26, AssociatedTypeWitness);
    v27(v21, v10, AssociatedTypeWitness);
    v30 = *(void (**)(char *, uint64_t))(v25 + 8);
    v30(v28, AssociatedTypeWitness);
    v31 = &v10[*(int *)(v24 + 48)];
    v27(v10, v13, AssociatedTypeWitness);
    v27(v31, v26, AssociatedTypeWitness);
    v32 = v45;
    v27(&v21[*(int *)(v45 + 36)], v31, AssociatedTypeWitness);
    v30(v10, AssociatedTypeWitness);
    v33 = v43;
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v21, v32);
    v36 = v47;
    v35 = v48;
    v37 = v46;
    sub_21512FE54();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
    v38 = sub_215130544();
    v39 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(&v49[*(int *)(v38 + 40)], v36, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v35, v32);
    v27(v39, v34, AssociatedTypeWitness);
    return ((uint64_t (*)(char *, char *, uint64_t))v27)(&v39[*(int *)(v38 + 36)], &v34[*(int *)(v32 + 36)], AssociatedTypeWitness);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2150C8EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _RangeSetStorage._Storage(0, a1, a2, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2150C8F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_215130028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  type metadata accessor for _RangeSetStorage._Storage(0, a2, a3, v9);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2150C8F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a1;
  type metadata accessor for _RangeSetStorage._Storage(0, a2, a3, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2150C8FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for _RangeSetStorage._Storage(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v14 - v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v14 - v7, v4, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v10 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *v8;
      v12 = sub_215130028();
      v10 = MEMORY[0x2199DB870](v11, v12);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    return 1;
  }
  return v10;
}

uint64_t sub_2150C909C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int EnumCaseMultiPayload;
  uint64_t (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t result;
  void (*v16)(_QWORD *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  v8 = type metadata accessor for _RangeSetStorage._Storage(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v21 - v10);
  (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 16))((char *)&v21 - v10, v4, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (!a2)
    {
      v13 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
      v13(v4, v8);
      v14 = sub_215130028();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v4, a1, v14);
      swift_storeEnumTagMultiPayload();
      return v13(v11, v8);
    }
    __break(1u);
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_8:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  v22 = *v11;
  v16 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v16(v4, v8);
  swift_storeEnumTagMultiPayload();
  v17 = sub_215130028();
  v18 = sub_21512FD40();
  sub_21512FCE0();
  v19 = v22;
  sub_2150F3DB8(a2, v22);
  v20 = *(_QWORD *)(v17 - 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 24))(v19+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * a2, a1, v17);
  nullsub_5(v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v17);
  v16(v5, v8);
  *v5 = v22;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2150C92DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t *v31;
  void (*v32)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v34;
  void (*v35)(char *, uint64_t *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = v6;
  v55 = a3;
  v56 = a6;
  v51 = a2;
  v52 = a1;
  v9 = *(_QWORD *)(a4 + 16);
  v10 = *(_QWORD *)(a4 + 24);
  v11 = sub_215130028();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v48 - v17;
  v19 = a5;
  v20 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v50 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for _RangeSetStorage._Storage(0, v9, v10, v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t *)((char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24);
  v28 = (uint64_t *)((char *)&v48 - v27);
  v53 = v29;
  v54 = v7;
  (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 16))((char *)&v48 - v27, v7, v23);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v57 = *v28;
      v31 = v54;
      v32 = *(void (**)(uint64_t *, uint64_t))(v53 + 8);
      v32(v54, v23);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v50, v55, v19);
      sub_21512FD40();
      sub_21512FCD4();
      v32(v31, v23);
      *v31 = v57;
      return swift_storeEnumTagMultiPayload();
    }
    v39 = v55;
    result = sub_21512FE90();
    if ((result & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v50, v39, v19);
      *v26 = sub_21512FD64();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v53 + 40))(v54, v26, v23);
    }
  }
  else
  {
    v48 = v15;
    v49 = v18;
    v34 = v12;
    v35 = *(void (**)(char *, uint64_t *, uint64_t))(v12 + 32);
    v36 = v11;
    v35(v18, v28, v11);
    v37 = v55;
    v38 = sub_21512FE90();
    if (v52 != v51)
    {
      if ((v38 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v11);
        (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v54, v23);
        return swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v50, v37, v19);
      v46 = sub_21512FD64();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v11);
      *v26 = v46;
      goto LABEL_15;
    }
    if ((v38 & 1) == 0)
    {
      v40 = v34;
      if (v52)
      {
        sub_2151303C4();
        swift_allocObject();
        v41 = sub_21512FCBC();
        v42 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 16);
        v43 = v49;
        v42(v44, v49, v36);
        v57 = v41;
        v45 = sub_21512FD40();
        nullsub_5(v45);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v50, v37, v19);
        sub_21512FD1C();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v50, v37, v19);
        v57 = sub_21512FD64();
        v43 = v49;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v48, v49, v36);
        sub_21512FD40();
        sub_21512FD28();
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v36);
      v47 = v54;
      (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v54, v23);
      *v47 = v57;
      return swift_storeEnumTagMultiPayload();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v49, v11);
  }
  return result;
}

uint64_t sub_2150C9764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(uint64_t *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v26;
  int v27;
  char v28;
  int v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t *, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t *, uint64_t);
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v8 = type metadata accessor for _RangeSetStorage._Storage(255, a3, a4, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (uint64_t *)((char *)&v43 - v10);
  v45 = a3;
  v46 = a4;
  v12 = sub_215130028();
  v47 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v43 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v44 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v43 - v20;
  v22 = (uint64_t *)((char *)v11 + *(int *)(TupleTypeMetadata2 + 48));
  v23 = *(_QWORD *)(v8 - 8);
  v24 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 16);
  v24(v11, a1, v8);
  v24(v22, a2, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v29 = swift_getEnumCaseMultiPayload();
    if (!v29)
    {
      v38 = v47;
      v39 = *(void (**)(char *, uint64_t *, uint64_t))(v47 + 32);
      v40 = v44;
      v39(v44, v11, v12);
      v39(v17, v22, v12);
      v28 = sub_215130004();
      v41 = *(void (**)(char *, uint64_t))(v38 + 8);
      v41(v17, v12);
      v41(v40, v12);
      return v28 & 1;
    }
    v30 = v47;
    if (v29 != 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(v47 + 8))(v11, v12);
      goto LABEL_23;
    }
    v26 = *v22;
    v31 = *(void (**)(char *, uint64_t *, uint64_t))(v47 + 32);
    v31(v21, v11, v12);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v32 = swift_getEnumCaseMultiPayload();
    if (v32)
    {
      if (v32 != 1)
      {
        v28 = 1;
        return v28 & 1;
      }
      v26 = *v22;
      goto LABEL_12;
    }
    (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v22, v8);
LABEL_23:
    v28 = 0;
    return v28 & 1;
  }
  v26 = *v11;
  v27 = swift_getEnumCaseMultiPayload();
  if (!v27)
  {
    v30 = v47;
    v31 = *(void (**)(char *, uint64_t *, uint64_t))(v47 + 32);
    v31(v21, v22, v12);
LABEL_15:
    v34 = MEMORY[0x2199DB870](v26, v12);
    v35 = v43;
    v31(v43, (uint64_t *)v21, v12);
    if (v34 == 1)
    {
      v36 = v44;
      sub_21512FD70();
      swift_bridgeObjectRelease();
      v28 = sub_215130004();
      v37 = *(void (**)(char *, uint64_t))(v30 + 8);
      v37(v36, v12);
      v37(v35, v12);
      return v28 & 1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v12);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v27 != 1)
  {
LABEL_12:
    v48 = v26;
    v33 = sub_21512FD40();
    MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v33);
    v28 = sub_21512FF14();
    goto LABEL_13;
  }
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE1BB0], v12);
  v28 = sub_21512FD58();
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  return v28 & 1;
}

uint64_t sub_2150C9B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150C9764(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2150C9B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = sub_215130028();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - v9;
  MEMORY[0x2199DC4C4](&unk_215138AA4, a2);
  v11 = sub_2151302B0();
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v24 - v12, v3, a2);
  v26 = v11;
  v14 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v14 = 0;
  if (sub_2150C8FB4(a2, v15, v16, v17))
  {
    v19 = 0;
    do
    {
      sub_2150C877C(v19, a2, v18, (uint64_t)v10);
      MEMORY[0x2199DC4C4](&unk_215138C54, a2);
      sub_21512FE0C();
      *v14 = v27;
      MEMORY[0x2199DBB94](a1, v7, a3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v19 = *v14;
    }
    while (v19 != sub_2150C8FB4(a2, v20, v21, v22));
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v26);
}

uint64_t sub_2150C9CD8(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_2151305A4();
  sub_2150C9B30((uint64_t)v5, a1, a2);
  return sub_2151305EC();
}

uint64_t sub_2150C9D2C(uint64_t a1, uint64_t a2)
{
  return sub_2150C9CD8(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_2150C9D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150C9B30(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_2150C9D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE v6[72];

  v4 = *(_QWORD *)(a3 - 8);
  sub_2151305A4();
  sub_2150C9B30((uint64_t)v6, a2, v4);
  return sub_2151305EC();
}

uint64_t sub_2150C9D8C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C909C(a1, *a2, a3, a4);
}

void (*sub_2150C9D94(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = v3;
  v7[1] = a3;
  v8 = sub_215130028();
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v12 = *a2;
  v7[5] = v11;
  v7[6] = v12;
  sub_2150C877C(v12, a3, v13, (uint64_t)v11);
  return sub_2150C9E30;
}

void sub_2150C9E30(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = (void *)(*a1)[5];
  v6 = (*a1)[6];
  v7 = (void *)(*a1)[4];
  if ((a2 & 1) != 0)
  {
    v8 = v4[2];
    v9 = v4[3];
    v10 = v4[1];
    (*(void (**)(uint64_t, void *, uint64_t))(v9 + 16))((*a1)[4], v5, v8);
    sub_2150C909C((uint64_t)v7, v6, v10, v11);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  else
  {
    sub_2150C909C((*a1)[5], v6, v4[1], a4);
  }
  free(v5);
  free(v7);
  free(v4);
}

uint64_t sub_2150C9ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_2150CA64C();
  MEMORY[0x2199DC4C4](&unk_215138AA4, a3);
  v5 = sub_215130544();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t sub_2150C9F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&unk_215138B84, a3);
  return sub_21512FA40();
}

uint64_t sub_2150C9FB8()
{
  MEMORY[0x2199DC4C4](&unk_215138C54);
  return sub_21512FE18();
}

_QWORD *sub_2150CA008(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2150CA32C(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1880]);
}

uint64_t sub_2150CA014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&unk_215138C54, a3);
  return sub_21512FE24();
}

uint64_t sub_2150CA078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2199DC4C4](&unk_215138C54, a4);
  return sub_21512FE00();
}

uint64_t sub_2150CA0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&unk_215138C54, a3);
  return sub_21512FE3C();
}

uint64_t sub_2150CA130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_2150C8FB4(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

void (*sub_2150CA154(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2150CA1B0(v6, *a2, a3);
  return sub_215072674;
}

void (*sub_2150CA1B0(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v6 = sub_215130028();
  *a1 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  sub_2150C877C(a2, a3, v9, (uint64_t)v8);
  return sub_21506DF04;
}

uint64_t sub_2150CA228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;

  v6 = MEMORY[0x2199DC4C4](&unk_215138BE4);
  return sub_2150C8B54(a1, a2, v6, a3);
}

uint64_t sub_2150CA270(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&unk_215138C54, a1);
  return sub_21512FE30();
}

uint64_t sub_2150CA2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C8FB4(a1, a2, a3, a4);
}

uint64_t sub_2150CA2D0()
{
  MEMORY[0x2199DC4C4](&unk_215138C54);
  return sub_21512FE0C();
}

_QWORD *sub_2150CA320(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2150CA32C(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE1878]);
}

_QWORD *sub_2150CA32C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x2199DC4C4](&unk_215138C54);
  result = a4(&v9, a1, a2, v7, MEMORY[0x24BEE17A8]);
  *a1 = v9;
  return result;
}

uint64_t sub_2150CA390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a2, v4, a1);
  MEMORY[0x2199DC4C4](&unk_215138AA4, a1);
  result = sub_2151302B0();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_2150CA3F0(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&unk_215138AA4, a1);
  return sub_21512FEC0();
}

uint64_t sub_2150CA424(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&unk_215138AA4, a1);
  return sub_21512FECC();
}

uint64_t sub_2150CA458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150C8EDC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, a4);
}

uint64_t sub_2150CA464(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2150C92DC(*a1, a1[1], a2, a5, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_2150CA4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&unk_215138BE4, a3);
  return sub_21512FFF8();
}

void sub_2150CA544()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150CA554(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&unk_215138B84);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_2150CA59C(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&unk_215138BE4);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4220], a1, &v3);
}

void sub_2150CA5E4()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150CA5F4(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&unk_215138C54);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_2150CA63C()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150CA64C()
{
  uint64_t v0;

  v0 = sub_215130544();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE4238], v0);
  return sub_2151303AC();
}

uint64_t sub_2150CA6C4()
{
  return 0;
}

_QWORD *sub_2150CA6CC(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, unsigned __int8 *, uint64_t);

  v4 = __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  v11 = ((v7 + v9) & ~v9) + v7;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  if (v8 > 7u || (v8 & 0x100000) != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    v15 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v15 + ((v8 & 0xF8 ^ 0x1F8u) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    v16 = __src[v12];
    if (v16 >= 2)
    {
      if (v12 <= 3)
        v17 = v12;
      else
        v17 = 4;
      __asm { BR              X14 }
    }
    if (v16 == 1)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v12] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = ~v9;
      v19 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v6 + 16);
      v19(__dst, __src, v5);
      v19((_BYTE *)(((unint64_t)v4 + v10) & v18), (unsigned __int8 *)((unint64_t)&__src[v10] & v18), v5);
      *((_BYTE *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_2150CA848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= 8)
    v8 = 8;
  v9 = *(unsigned __int8 *)(a1 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X15 }
  }
  if (v9 == 1)
    return swift_bridgeObjectRelease();
  v11 = ~v6;
  v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(a1, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)((v7 + a1) & v11, v3);
}

_BYTE *sub_2150CA970(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, unsigned __int8 *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v12 = __src[v11];
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v11] = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = ~v8;
    v15 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v6 + 16);
    v15(__dst, __src, *(_QWORD *)(a3 + 16));
    v15((_BYTE *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2150CAAB0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unsigned __int8 *, uint64_t);
  unsigned int v16;
  uint64_t v17;
  void (*v18)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = __dst[v11];
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X13 }
    }
    v14 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v15(__dst, *(_QWORD *)(a3 + 16));
      v15((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), v5);
    }
    v16 = __src[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 1)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v11] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
      v18(__dst, __src, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_2150CACA0(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, unsigned __int8 *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v12 = __src[v11];
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v11] = 1;
  }
  else
  {
    v14 = ~v8;
    v15 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v6 + 32);
    v15(__dst, __src, *(_QWORD *)(a3 + 16));
    v15((_BYTE *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2150CADDC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unsigned __int8 *, uint64_t);
  unsigned int v16;
  uint64_t v17;
  void (*v18)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = __dst[v11];
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X13 }
    }
    v14 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v15(__dst, *(_QWORD *)(a3 + 16));
      v15((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), v5);
    }
    v16 = __src[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 1)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v11] = 1;
    }
    else
    {
      v18 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
      v18(__dst, __src, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v14), (unsigned __int8 *)((unint64_t)&__src[v9] & v14), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_2150CAFC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8)
    v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2150CB09C + 4 * byte_21513893E[(v4 - 1)]))();
}

void sub_2150CB0E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for _RangeSetStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _RangeSetStorage);
}

uint64_t static Column.+= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB2E4);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB31C);
}

BOOL sub_2150CB2CC(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2150CBA78(a1, a2, a3, a4);
}

uint64_t sub_2150CB2E4(uint64_t a1)
{
  return sub_2150CB340(a1, (uint64_t)MEMORY[0x24BEE2F78], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CB4CC);
}

uint64_t sub_2150CB31C(uint64_t a1)
{
  return sub_2150CB340(a1, (uint64_t)MEMORY[0x24BEE2F78], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CBAE4);
}

uint64_t sub_2150CB340(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t static Column.-= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB37C);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB3B4);
}

uint64_t sub_2150CB37C(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE2F80], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CB4CC);
}

uint64_t sub_2150CB3B4(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE2F80], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CBAE4);
}

uint64_t static Column.*= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB3EC);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB424);
}

uint64_t sub_2150CB3EC(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE1800], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CB4CC);
}

uint64_t sub_2150CB424(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE1800], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CBAE4);
}

uint64_t static Column./= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB45C);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB494);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CB794);
}

{
  return sub_2150CB7CC(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2150CB2CC, (void (*)(_QWORD *))sub_2150CBF74);
}

uint64_t sub_2150CB45C(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE2018], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CB4CC);
}

uint64_t sub_2150CB494(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE2018], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CBAE4);
}

uint64_t sub_2150CB4CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t AssociatedTypeWitness;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v41 = a8;
  v39 = a6;
  v36 = a1;
  v37 = a3;
  v33 = a4;
  v35 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v10;
  v38 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v42 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = *(_QWORD *)(v42 + 64);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = (char *)&v28 - v14;
  v16 = swift_bridgeObjectRetain();
  if (MEMORY[0x2199DB894](v16, TupleTypeMetadata2))
  {
    v29 = v13;
    v17 = 0;
    v30 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
    v31 = (uint64_t *)v15;
    v19 = v34;
    v18 = v35;
    while (1)
    {
      v20 = sub_21512FD04();
      sub_21512FCC8();
      if ((v20 & 1) != 0)
      {
        v21 = v31;
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v42 + 16))(v31, a2+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v17, TupleTypeMetadata2);
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
          goto LABEL_10;
      }
      else
      {
        result = sub_2151301B4();
        v21 = v31;
        if (v29 != 8)
        {
          __break(1u);
          return result;
        }
        v44[0] = result;
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v42 + 16))(v31, v44, TupleTypeMetadata2);
        swift_unknownObjectRelease();
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v45 = *v21;
      v43 = *v36;
      v23 = v30;
      v24 = TupleTypeMetadata2;
      v25 = (void (*)(_QWORD *, _QWORD))sub_21512FF5C();
      v26 = v33;
      (*(void (**)(char *))(v18 + 16))(v19);
      v25(v44, 0);
      TupleTypeMetadata2 = v24;
      (*(void (**)(char *))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v23);
      v41(v43 + *(_QWORD *)(v18 + 72) * v45, v19, v26, v39);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v26);
      ++v17;
      if (v22 == MEMORY[0x2199DB894](a2, v24))
        return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150CB794(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE0568], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CB4CC);
}

uint64_t sub_2150CB7CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *);
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  __int128 v53;
  _BYTE v54[24];
  uint64_t v55;

  v40 = a8;
  v39 = a7;
  v38 = a5;
  v32 = a3;
  v37 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v31 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7F20);
  v34 = v15;
  v16 = sub_2150903B0();
  v33 = v16;
  v17 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  *(_QWORD *)v54 = v15;
  *(_QWORD *)&v54[8] = AssociatedTypeWitness;
  *(_QWORD *)&v54[16] = v16;
  v55 = v17;
  v18 = sub_2151301A8();
  MEMORY[0x24BDAC7A8](v18);
  v19 = *a1;
  v35 = a1 + 2;
  *(_QWORD *)v54 = v19;
  *(_OWORD *)&v54[8] = *(_OWORD *)(a1 + 1);
  v22 = type metadata accessor for Column(0, a3, v20, v21);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v22);
  sub_21512FE30();
  *(_OWORD *)v54 = v53;
  v23 = v37;
  sub_21512FE84();
  sub_215130490();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, AssociatedTypeWitness);
  v24 = v32;
  v48 = v32;
  v49 = a4;
  v25 = v38;
  v50 = v38;
  v51 = a6;
  v52 = a1;
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE2620], v18);
  v26 = sub_21512FC68();
  v42 = v24;
  v43 = a4;
  v44 = v25;
  v45 = a6;
  v46 = v26;
  v47 = v23;
  v29 = type metadata accessor for PackedOptionalsArray(0, v24, v27, v28);
  sub_2151158A0(v40, (uint64_t)v41, v29, MEMORY[0x24BEE4AE0] + 8);
  return swift_bridgeObjectRelease();
}

BOOL sub_2150CBA78(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  Swift::Int v5;

  v5 = *a1;
  type metadata accessor for Column(0, *(_QWORD *)(v4 + 16), a3, a4);
  return !Column.isNil(at:)(v5);
}

uint64_t sub_2150CBAE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *);
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  char *v41;
  void (*v42)(_QWORD *, _QWORD);
  char *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t, uint64_t);
  char *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[5];
  uint64_t v74;

  v52 = a8;
  v51 = a6;
  v55 = a1;
  v63 = a4;
  v12 = sub_215130064();
  v62 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)v49 - v15;
  v70 = a7;
  v71 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v53 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v49 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v64 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v23 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v25 = (char *)v49 - v24;
  v26 = swift_bridgeObjectRetain();
  v74 = a2;
  if (!MEMORY[0x2199DB894](v26, TupleTypeMetadata2))
    return swift_bridgeObjectRelease();
  v49[0] = v23;
  v27 = 0;
  v59 = &v25[*(int *)(TupleTypeMetadata2 + 48)];
  v60 = (uint64_t *)v25;
  v58 = v12;
  v50 = a3;
  v57 = TupleTypeMetadata2;
  v68 = AssociatedTypeWitness;
  v69 = v21;
  v67 = v17;
  while (1)
  {
    v30 = sub_21512FD04();
    sub_21512FCC8();
    if ((v30 & 1) != 0)
    {
      v31 = v60;
      (*(void (**)(uint64_t *, unint64_t, uint64_t))(v64 + 16))(v60, v74+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(_QWORD *)(v64 + 72) * v27, TupleTypeMetadata2);
      v32 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_13;
    }
    else
    {
      result = sub_2151301B4();
      v31 = v60;
      if (v49[0] != 8)
        goto LABEL_16;
      v73[0] = result;
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v64 + 16))(v60, v73, TupleTypeMetadata2);
      swift_unknownObjectRelease();
      v32 = v27 + 1;
      if (__OFADD__(v27, 1))
      {
LABEL_13:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
    v72 = v32;
    v66 = *v31;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v59, AssociatedTypeWitness);
    v33 = (void (*)(_QWORD *, _QWORD))sub_21512FF5C();
    v34 = a3;
    v35 = v61;
    v36 = v62;
    v37 = *(void (**)(char *))(v62 + 16);
    v37(v61);
    v33(v73, 0);
    v38 = v63;
    v65 = *(_QWORD *)(v63 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
    v40 = v39(v35, 1, v63);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v12);
    if (v40 != 1)
      break;
    v17 = v67;
    AssociatedTypeWitness = v68;
    v21 = v69;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v68);
    a3 = v34;
LABEL_4:
    v28 = v72;
    TupleTypeMetadata2 = v57;
    v29 = MEMORY[0x2199DB894](v74, v57);
    ++v27;
    v12 = v58;
    if (v28 == v29)
      return swift_bridgeObjectRelease();
  }
  v56 = *v55;
  v41 = v53;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v53, v69, v68);
  v42 = (void (*)(_QWORD *, _QWORD))sub_21512FF5C();
  v43 = v54;
  v37(v54);
  v42(v73, 0);
  result = v39(v43, 1, v38);
  if ((_DWORD)result != 1)
  {
    v45 = v38;
    v46 = v67;
    AssociatedTypeWitness = v68;
    v47 = *(void (**)(char *, uint64_t))(v67 + 8);
    v47(v41, v68);
    v48 = v65;
    v52(v56 + *(_QWORD *)(v65 + 72) * v66, v43, v45, v51);
    v21 = v69;
    v47(v69, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v45);
    a3 = v50;
    v17 = v46;
    goto LABEL_4;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_2150CBF74(uint64_t a1)
{
  return sub_2150CB340(a1, MEMORY[0x24BEE0568], (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150CBAE4);
}

uint64_t static ColumnSlice.+= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CC004(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

{
  return sub_2150CC5B0(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

uint64_t static ColumnSlice.-= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CC004(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2F80]);
}

{
  return sub_2150CC5B0(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2F80]);
}

uint64_t static ColumnSlice.*= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CC004(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE1800]);
}

{
  return sub_2150CC5B0(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE1800]);
}

uint64_t static ColumnSlice./= infix<A>(_:_:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CC004(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2018]);
}

{
  return sub_2150CC5B0(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2018]);
}

{
  return sub_2150CC004(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE0568]);
}

{
  return sub_2150CC5B0(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE0568]);
}

uint64_t sub_2150CC004(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  Swift::Int *v36;
  uint64_t v37;
  uint64_t result;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(__int128 *, _QWORD);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  unsigned int (*v68)(Swift::Int *, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  Swift::Int *v72;
  uint64_t v73;
  __int128 v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;

  v56 = a7;
  v55 = a5;
  v64 = a2;
  v54 = sub_215130064();
  v53 = *(_QWORD *)(v54 - 8);
  v11 = MEMORY[0x24BDAC7A8](v54);
  v59 = (char *)v51 - v12;
  v58 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v63 = AssociatedTypeWitness;
  v69 = v15;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v62 = (char *)v51 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = sub_215130064();
  MEMORY[0x24BDAC7A8](v18);
  v72 = (_QWORD *)((char *)v51 - v19);
  v65 = a6;
  v20 = swift_getAssociatedTypeWitness();
  v71 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v70 = (char *)v51 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7F20);
  v23 = sub_2150903B0();
  v24 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  *(_QWORD *)&v74 = v22;
  *((_QWORD *)&v74 + 1) = v20;
  v75 = v23;
  *(_QWORD *)&v76 = v24;
  v67 = (void (*)(char *, char *, uint64_t))v23;
  v25 = v24;
  v51[1] = v24;
  v68 = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))sub_2151301A8();
  MEMORY[0x24BDAC7A8](v68);
  *(_QWORD *)&v74 = v22;
  *((_QWORD *)&v74 + 1) = v20;
  v75 = v23;
  *(_QWORD *)&v76 = v25;
  v26 = sub_21513019C();
  v51[0] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v51 - v27;
  v29 = *((_QWORD *)a1 + 2);
  v74 = *a1;
  v75 = v29;
  v76 = *(__int128 *)((char *)a1 + 24);
  v60 = a3;
  v32 = type metadata accessor for ColumnSlice(0, a3, v30, v31);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnSlice<A>, v32);
  v73 = v32;
  sub_21512FE30();
  v74 = v77;
  v33 = v70;
  v61 = a4;
  v34 = v62;
  sub_21512FE84();
  v35 = v33;
  sub_215130490();
  v36 = v72;
  v37 = v63;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v20);
  sub_215130184();
  v70 = v28;
  v71 = v26;
  sub_215130190();
  v68 = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
  if (v68(v36, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v51[0] + 8))(v70, v71);
  v67 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
  v52 = a1;
  v66 = TupleTypeMetadata2;
  while (1)
  {
    v39 = *v36;
    v67(v34, (char *)v36 + *(int *)(TupleTypeMetadata2 + 48), v37);
    v41 = *(_QWORD *)a1;
    v40 = *((_QWORD *)a1 + 1);
    v43 = *((_QWORD *)a1 + 2);
    v42 = *((_QWORD *)a1 + 3);
    v44 = *((_QWORD *)a1 + 4);
    *(_QWORD *)&v74 = *(_QWORD *)a1;
    *((_QWORD *)&v74 + 1) = v40;
    v75 = v43;
    *(_QWORD *)&v76 = v42;
    *((_QWORD *)&v76 + 1) = v44;
    if (!ColumnSlice.isNil(at:)(v39))
      break;
LABEL_4:
    (*(void (**)(char *, uint64_t))(v69 + 8))(v34, v37);
    v36 = v72;
    sub_215130190();
    TupleTypeMetadata2 = v66;
    if (v68(v36, 1, v66) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v51[0] + 8))(v70, v71);
  }
  v45 = (void (*)(__int128 *, _QWORD))sub_21512FF5C();
  v46 = v58;
  v47 = v57;
  v48 = v60;
  (*(void (**)(char *))(v58 + 16))(v57);
  v45(&v74, 0);
  *(_QWORD *)&v74 = v41;
  *((_QWORD *)&v74 + 1) = v40;
  v75 = v43;
  *(_QWORD *)&v76 = v42;
  *((_QWORD *)&v76 + 1) = v44;
  v49 = (uint64_t)v59;
  v50 = v73;
  ColumnSlice.subscript.getter(v39, v73);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v49, 1, v48);
  if ((_DWORD)result != 1)
  {
    v56(v49, v47, v48, v55);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    a1 = v52;
    sub_215079CF8(v49, v39, v50);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v49, v54);
    v34 = v62;
    v37 = v63;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150CC5B0(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::Int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  unint64_t v51;
  Swift::Bool v52;
  char *v53;
  uint64_t v54;
  void (*v55)(__int128 *, _QWORD);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(__int128 *, _QWORD);
  char *v68;
  __int128 *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  __int128 *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *);
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  Swift::Int *v99;
  uint64_t TupleTypeMetadata2;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  unint64_t v106;
  __int128 v107;
  __int128 v108;

  v78 = a7;
  v77 = a5;
  v89 = a3;
  v104 = a2;
  v93 = sub_215130064();
  v98 = *(_QWORD *)(v93 - 8);
  v10 = MEMORY[0x24BDAC7A8](v93);
  v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (char *)&v75 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v86 = (char *)&v75 - v15;
  v97 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v96 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v87 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v75 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = sub_215130064();
  MEMORY[0x24BDAC7A8](v22);
  v99 = (uint64_t *)((char *)&v75 - v23);
  v90 = a6;
  v80 = a4;
  v24 = swift_getAssociatedTypeWitness();
  v95 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v75 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7F20);
  v28 = sub_2150903B0();
  v29 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  *(_QWORD *)&v105 = v27;
  *((_QWORD *)&v105 + 1) = v24;
  v81 = (void (*)(uint64_t, uint64_t))v27;
  v106 = v28;
  *(_QWORD *)&v107 = v29;
  v30 = v29;
  v91 = v29;
  v94 = (void (*)(char *, char *, uint64_t))sub_2151301A8();
  MEMORY[0x24BDAC7A8](v94);
  v92 = (void (*)(char *))((char *)&v75 - v31);
  *(_QWORD *)&v105 = v27;
  *((_QWORD *)&v105 + 1) = v24;
  v106 = v28;
  *(_QWORD *)&v107 = v30;
  v102 = sub_21513019C();
  v76 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v101 = (char *)&v75 - v32;
  v33 = *((_QWORD *)a1 + 2);
  v105 = *a1;
  v106 = v33;
  v107 = *(__int128 *)((char *)a1 + 24);
  v36 = type metadata accessor for ColumnSlice(0, v89, v34, v35);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnSlice<A>, v36);
  v103 = v36;
  sub_21512FE30();
  v105 = v108;
  v37 = v87;
  v38 = v80;
  sub_21512FE84();
  sub_215130490();
  v39 = v99;
  v40 = v38;
  v41 = v24;
  v42 = v88;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v41);
  sub_215130184();
  sub_215130190();
  v43 = TupleTypeMetadata2;
  v95 = *(_QWORD *)(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
  if (((unsigned int (*)(Swift::Int *, uint64_t, uint64_t))v95)(v39, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v101, v102);
  v94 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v84 = a1;
  v83 = AssociatedTypeWitness;
  v82 = v20;
  while (1)
  {
    v49 = v37;
    v50 = *v39;
    v94(v42, (char *)v39 + *(int *)(v43 + 48), AssociatedTypeWitness);
    v51 = *((_QWORD *)a1 + 2);
    v105 = *a1;
    v106 = v51;
    v107 = *(__int128 *)((char *)a1 + 24);
    v52 = ColumnSlice.isNil(at:)(v50);
    v53 = v96;
    v54 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v104, v40);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v20, v42, AssociatedTypeWitness);
    if (v52)
    {
      v45 = v40;
      v46 = *(void (**)(char *, uint64_t))(v49 + 8);
      v46(v20, AssociatedTypeWitness);
      v47 = *(void (**)(char *, uint64_t))(v54 + 8);
      v48 = v45;
      v47(v53, v45);
      v37 = v49;
LABEL_5:
      v46(v42, AssociatedTypeWitness);
      v40 = v48;
      goto LABEL_6;
    }
    v91 = v50;
    v55 = (void (*)(__int128 *, _QWORD))sub_21512FF5C();
    v56 = v86;
    v57 = v40;
    v58 = v49;
    v59 = v93;
    v92 = *(void (**)(char *))(v98 + 16);
    v92(v86);
    v55(&v105, 0);
    v46 = *(void (**)(char *, uint64_t))(v58 + 8);
    v60 = v20;
    v61 = v57;
    v46(v60, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v57);
    v62 = v89;
    v63 = *(char **)(v89 - 8);
    v64 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v63 + 6);
    v65 = v64(v56, 1, v89);
    v66 = *(void (**)(char *, uint64_t))(v98 + 8);
    v66(v56, v59);
    if (v65 == 1)
    {
      v48 = v61;
      a1 = v84;
      AssociatedTypeWitness = v83;
      v37 = v87;
      v20 = v82;
      v42 = v88;
      goto LABEL_5;
    }
    v81 = (void (*)(uint64_t, uint64_t))v66;
    v42 = v88;
    v67 = (void (*)(__int128 *, _QWORD))sub_21512FF5C();
    v68 = v85;
    v92(v85);
    v67(&v105, 0);
    result = v64(v68, 1, v62);
    if ((_DWORD)result == 1)
      break;
    v92 = (void (*)(char *))v63;
    v69 = v84;
    v70 = *((_QWORD *)v84 + 2);
    v105 = *v84;
    v106 = v70;
    v107 = *(__int128 *)((char *)v84 + 24);
    v71 = (uint64_t)v79;
    v72 = v91;
    v73 = v103;
    ColumnSlice.subscript.getter(v91, v103);
    result = v64((char *)v71, 1, v62);
    AssociatedTypeWitness = v83;
    if ((_DWORD)result == 1)
      goto LABEL_14;
    v74 = v85;
    v78(v71, v85, v62, v77);
    sub_215079CF8(v71, v72, v73);
    v81(v71, v93);
    v46(v42, AssociatedTypeWitness);
    (*((void (**)(char *, uint64_t))v92 + 1))(v74, v62);
    v40 = v80;
    v20 = v82;
    a1 = v69;
    v37 = v87;
LABEL_6:
    v39 = v99;
    sub_215130190();
    v43 = TupleTypeMetadata2;
    if (((unsigned int (*)(Swift::Int *, uint64_t, uint64_t))v95)(v39, 1, TupleTypeMetadata2) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v101, v102);
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t static DiscontiguousColumnSlice.+= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CCE1C(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

{
  return sub_2150CD4A8(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE2F78]);
}

uint64_t static DiscontiguousColumnSlice.-= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CCE1C(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2F80]);
}

{
  return sub_2150CD4A8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2F80]);
}

uint64_t static DiscontiguousColumnSlice.*= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CCE1C(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE1800]);
}

{
  return sub_2150CD4A8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE1800]);
}

uint64_t static DiscontiguousColumnSlice./= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150CCE1C(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2018]);
}

{
  return sub_2150CD4A8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE2018]);
}

{
  return sub_2150CCE1C(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE0568]);
}

{
  return sub_2150CD4A8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE0568]);
}

uint64_t sub_2150CCE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  Swift::Int *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t result;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t *, _QWORD);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  unsigned int (*v69)(Swift::Int *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  Swift::Int *v73;
  Swift::Int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  char v85;
  __int128 v86;

  v57 = a7;
  v56 = a5;
  v64 = a2;
  v63 = a1;
  v55 = sub_215130064();
  v54 = *(_QWORD *)(v55 - 8);
  v10 = MEMORY[0x24BDAC7A8](v55);
  v60 = (uint64_t)v53 - v11;
  v59 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v62 = AssociatedTypeWitness;
  v70 = v14;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v76 = (char *)v53 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_215130064();
  MEMORY[0x24BDAC7A8](v17);
  v73 = (_QWORD *)((char *)v53 - v18);
  v66 = a6;
  v65 = a4;
  v19 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v72 = (char *)v53 - v20;
  v61 = a3;
  v23 = type metadata accessor for DiscontiguousColumnSlice(255, a3, v21, v22);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v23);
  v24 = sub_21512F944();
  v25 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660]);
  v26 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v82 = v24;
  *(_QWORD *)&v83 = v19;
  v68 = (void (*)(char *, char *, uint64_t))v24;
  *((_QWORD *)&v83 + 1) = v25;
  *(_QWORD *)&v84 = v26;
  v53[1] = v25;
  v71 = sub_2151301A8();
  MEMORY[0x24BDAC7A8](v71);
  v69 = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))((char *)v53 - v27);
  v82 = v24;
  *(_QWORD *)&v83 = v19;
  *((_QWORD *)&v83 + 1) = v25;
  *(_QWORD *)&v84 = v26;
  v28 = sub_21513019C();
  v53[0] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v53 - v29;
  v31 = v63;
  v32 = *(_BYTE *)(v63 + 40);
  v77 = *(_QWORD *)v63;
  v33 = *(_OWORD *)(v63 + 24);
  v78 = *(_OWORD *)(v63 + 8);
  v79 = v33;
  v80 = v32;
  v75 = v23;
  sub_21512FF38();
  v77 = v82;
  v78 = v83;
  v79 = v84;
  v80 = v85;
  v81 = v86;
  v35 = v72;
  v34 = v73;
  sub_21512FE84();
  sub_215130490();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v19);
  v36 = v79;
  LOBYTE(v35) = v80;
  swift_release();
  v37 = v62;
  swift_bridgeObjectRelease();
  sub_21501EF2C(v36, *((uint64_t *)&v36 + 1), (char)v35);
  sub_215130184();
  v72 = (char *)v28;
  v71 = (uint64_t)v30;
  sub_215130190();
  v69 = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
  if (v69(v34, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(uint64_t, char *))(v53[0] + 8))(v71, v72);
  v68 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v67 = TupleTypeMetadata2;
  while (1)
  {
    v39 = *v34;
    v68(v76, (char *)v34 + *(int *)(TupleTypeMetadata2 + 48), v37);
    v40 = *(_QWORD *)v31;
    v41 = *(_QWORD *)(v31 + 8);
    v42 = *(_QWORD *)(v31 + 16);
    v43 = *(_QWORD *)(v31 + 24);
    v44 = *(_QWORD *)(v31 + 32);
    v45 = *(_BYTE *)(v31 + 40);
    v82 = *(_QWORD *)v31;
    *(_QWORD *)&v83 = v41;
    *((_QWORD *)&v83 + 1) = v42;
    *(_QWORD *)&v84 = v43;
    *((_QWORD *)&v84 + 1) = v44;
    v85 = v45;
    v74 = v39;
    if (!DiscontiguousColumnSlice.isNil(at:)(v39))
      break;
LABEL_4:
    (*(void (**)(char *, uint64_t))(v70 + 8))(v76, v37);
    v34 = v73;
    sub_215130190();
    TupleTypeMetadata2 = v67;
    if (v69(v34, 1, v67) == 1)
      return (*(uint64_t (**)(uint64_t, char *))(v53[0] + 8))(v71, v72);
  }
  v46 = (void (*)(uint64_t *, _QWORD))sub_21512FF5C();
  v47 = v59;
  v48 = v58;
  v49 = v61;
  (*(void (**)(char *))(v59 + 16))(v58);
  v46(&v82, 0);
  v82 = v40;
  *(_QWORD *)&v83 = v41;
  *((_QWORD *)&v83 + 1) = v42;
  *(_QWORD *)&v84 = v43;
  *((_QWORD *)&v84 + 1) = v44;
  v85 = v45;
  v50 = v60;
  v52 = v74;
  v51 = v75;
  DiscontiguousColumnSlice.subscript.getter(v74, v75, v60);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v50, 1, v49);
  if ((_DWORD)result != 1)
  {
    v57(v50, v48, v49, v56);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
    v31 = v63;
    sub_2150C6E8C(v50, v52, v51);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v55);
    v37 = v62;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150CD4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  Swift::Int v53;
  unsigned __int8 v54;
  __int128 v55;
  Swift::Bool v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  void (*v68)(uint64_t *, _QWORD);
  char *v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t);
  unsigned __int8 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *);
  char *v95;
  uint64_t v96;
  char *v97;
  Swift::Int *v98;
  char *v99;
  unsigned int (*v100)(Swift::Int *, uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  char *v102;
  uint64_t v103;
  Swift::Int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  unsigned __int8 v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  unsigned __int8 v116;
  __int128 v117;

  v81 = a7;
  v80 = a5;
  v106 = a2;
  v107 = a1;
  v96 = sub_215130064();
  v87 = *(_QWORD *)(v96 - 8);
  v10 = MEMORY[0x24BDAC7A8](v96);
  v82 = (uint64_t)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (char *)v78 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v86 = (char *)v78 - v15;
  v91 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v90 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v89 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v92 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v78 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = sub_215130064();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (_QWORD *)((char *)v78 - v23);
  v93 = a6;
  v25 = swift_getAssociatedTypeWitness();
  v104 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v99 = (char *)v78 - v26;
  v88 = a3;
  v27 = a3;
  v28 = v24;
  v31 = type metadata accessor for DiscontiguousColumnSlice(255, v27, v29, v30);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v31);
  v32 = sub_21512F944();
  v33 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660], v32);
  v34 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v113 = v32;
  *(_QWORD *)&v114 = v25;
  v83 = v32;
  v94 = (void (*)(char *))v33;
  *((_QWORD *)&v114 + 1) = v33;
  *(_QWORD *)&v115 = v34;
  v35 = v34;
  v78[1] = v34;
  v100 = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))sub_2151301A8();
  MEMORY[0x24BDAC7A8](v100);
  v97 = (char *)v78 - v36;
  v113 = v32;
  *(_QWORD *)&v114 = v25;
  *((_QWORD *)&v114 + 1) = v33;
  *(_QWORD *)&v115 = v35;
  v103 = sub_21513019C();
  v78[0] = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v102 = (char *)v78 - v37;
  v38 = *(_BYTE *)(v107 + 40);
  v108 = *(_QWORD *)v107;
  v39 = *(_OWORD *)(v107 + 24);
  v40 = v89;
  v109 = *(_OWORD *)(v107 + 8);
  v110 = v39;
  v111 = v38;
  v105 = v31;
  sub_21512FF38();
  v108 = v113;
  v109 = v114;
  v110 = v115;
  v111 = v116;
  v112 = v117;
  v41 = v99;
  v42 = v90;
  sub_21512FE84();
  sub_215130490();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v41, v25);
  v44 = *((_QWORD *)&v110 + 1);
  v43 = v110;
  LODWORD(v104) = v111;
  swift_release();
  swift_bridgeObjectRelease();
  v45 = v43;
  v46 = v92;
  sub_21501EF2C(v45, v44, v104);
  sub_215130184();
  v47 = v91;
  sub_215130190();
  v48 = TupleTypeMetadata2;
  v100 = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
  if (v100(v28, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v78[0] + 8))(v102, v103);
  v99 = *(char **)(v40 + 32);
  v79 = a4;
  v84 = AssociatedTypeWitness;
  v95 = v21;
  v98 = v28;
  while (1)
  {
    v53 = *v28;
    ((void (*)(char *, char *, uint64_t))v99)(v21, (char *)v28 + *(int *)(v48 + 48), AssociatedTypeWitness);
    v54 = *(_BYTE *)(v107 + 40);
    v113 = *(_QWORD *)v107;
    v55 = *(_OWORD *)(v107 + 24);
    v114 = *(_OWORD *)(v107 + 8);
    v115 = v55;
    v116 = v54;
    v104 = v53;
    v56 = DiscontiguousColumnSlice.isNil(at:)(v53);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v42, v106, a4);
    v57 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v46, v21, AssociatedTypeWitness);
    if (v56)
    {
      v50 = a4;
      v51 = *(void (**)(char *, uint64_t))(v40 + 8);
      v51(v46, AssociatedTypeWitness);
      v52 = v50;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v50);
LABEL_5:
      v40 = v57;
      v51(v21, AssociatedTypeWitness);
      a4 = v52;
      goto LABEL_6;
    }
    v97 = (char *)sub_21512FF5C();
    v58 = a4;
    v59 = v87;
    v60 = v86;
    v61 = v96;
    v94 = *(void (**)(char *))(v87 + 16);
    v94(v86);
    ((void (*)(uint64_t *, _QWORD))v97)(&v113, 0);
    v51 = *(void (**)(char *, uint64_t))(v40 + 8);
    v51(v46, AssociatedTypeWitness);
    v62 = v58;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v58);
    v63 = v88;
    v64 = *(_QWORD *)(v88 - 8);
    v65 = v61;
    v97 = *(char **)(v64 + 48);
    LODWORD(v58) = ((uint64_t (*)(char *, uint64_t, uint64_t))v97)(v60, 1, v88);
    v66 = *(void (**)(char *, uint64_t))(v59 + 8);
    v66(v60, v65);
    if ((_DWORD)v58 == 1)
    {
      v52 = v62;
      v47 = v91;
      v42 = v90;
      AssociatedTypeWitness = v84;
      v57 = v89;
      v46 = v92;
      v21 = v95;
      goto LABEL_5;
    }
    v83 = v64;
    v67 = v107;
    v68 = (void (*)(uint64_t *, _QWORD))sub_21512FF5C();
    v69 = v85;
    v94(v85);
    v68(&v113, 0);
    v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v97;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v97)(v69, 1, v63);
    if ((_DWORD)result == 1)
      break;
    v71 = (void (*)(uint64_t, uint64_t))v66;
    v72 = *(_BYTE *)(v67 + 40);
    v113 = *(_QWORD *)v67;
    v73 = *(_OWORD *)(v67 + 24);
    v114 = *(_OWORD *)(v67 + 8);
    v115 = v73;
    v116 = v72;
    v74 = v82;
    v76 = v104;
    v75 = v105;
    DiscontiguousColumnSlice.subscript.getter(v104, v105, v82);
    result = v70(v74, 1, v63);
    AssociatedTypeWitness = v84;
    v46 = v92;
    if ((_DWORD)result == 1)
      goto LABEL_14;
    v77 = v85;
    v81(v74, v85, v63, v80);
    sub_2150C6E8C(v74, v76, v75);
    v71(v74, v96);
    v21 = v95;
    v51(v95, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v63);
    a4 = v79;
    v47 = v91;
    v42 = v90;
    v40 = v89;
LABEL_6:
    v28 = v98;
    sub_215130190();
    v48 = TupleTypeMetadata2;
    if (v100(v28, 1, TupleTypeMetadata2) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v78[0] + 8))(v102, v103);
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2150CDD9C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v5 = a2;
  v6 = result;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7 >= v3)
    v8 = a2 - result;
  else
    v8 = *(_QWORD *)(a3 + 16);
  v33 = MEMORY[0x24BEE4AF8];
  result = (uint64_t)sub_215038ED8(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0)
    goto LABEL_42;
  v27 = a3;
  v28 = v7;
  v30 = v6;
  v26 = v8;
  if (v8)
  {
    result = swift_bridgeObjectRetain();
    if (v5 < v6)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v8 < (unint64_t)v3)
      v3 = v8;
    v9 = (uint64_t *)(a3 + 40);
    v10 = v6;
    v31 = v5;
    while (v5 != v10)
    {
      if (!v3)
        goto LABEL_37;
      v11 = *(v9 - 1);
      v12 = *v9;
      v14 = *(_QWORD *)(v33 + 16);
      v13 = *(_QWORD *)(v33 + 24);
      result = swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
        result = (uint64_t)sub_215038ED8((char *)(v13 > 1), v14 + 1, 1);
      *(_QWORD *)(v33 + 16) = v14 + 1;
      v15 = v33 + 32 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      *(_QWORD *)(v15 + 48) = v10;
      *(_BYTE *)(v15 + 56) = 7;
      --v3;
      v9 += 2;
      ++v10;
      --v8;
      v5 = v31;
      if (!v8)
        goto LABEL_18;
    }
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  result = swift_bridgeObjectRetain();
  v10 = v6;
LABEL_18:
  if (v10 == v5)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v33;
  }
  if (v5 >= v30)
  {
    v16 = 0;
    if (v10 <= v5)
      v17 = v5;
    else
      v17 = v10;
    v32 = v17 - v10;
    v18 = v28 - v26;
    if (v28 >= v26)
      v19 = v28 - v26;
    else
      v19 = 0;
    v29 = v19;
    v20 = (uint64_t *)(v27 + 16 * v26 + 40);
    while (v10 >= v30)
    {
      if (v32 == v16)
        goto LABEL_39;
      if (v18 != v16)
      {
        if (v29 == v16)
          goto LABEL_40;
        v21 = *(v20 - 1);
        v22 = *v20;
        v23 = *(_QWORD *)(v33 + 16);
        v24 = *(_QWORD *)(v33 + 24);
        result = swift_bridgeObjectRetain();
        if (v23 >= v24 >> 1)
          result = (uint64_t)sub_215038ED8((char *)(v24 > 1), v23 + 1, 1);
        *(_QWORD *)(v33 + 16) = v23 + 1;
        v25 = v33 + 32 * v23;
        *(_QWORD *)(v25 + 32) = v21;
        *(_QWORD *)(v25 + 40) = v22;
        *(_QWORD *)(v25 + 48) = v10 + v16;
        *(_BYTE *)(v25 + 56) = 7;
        ++v16;
        v20 += 2;
        if (v10 - v5 + v16)
          continue;
      }
      goto LABEL_19;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2150CE008(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2150390D0(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t DataFrame.init(contentsOfJSONFile:columns:types:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;

  swift_bridgeObjectRelease();
  v9 = sub_21512F644();
  if (v4)
  {
    v11 = sub_21512F638();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = v10;
    v21 = a4;
    v22 = v9;
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    objc_msgSend(v14, sel_setFormatOptions_, 51);
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    objc_msgSend(v15, sel_setFormatOptions_, 1907);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D168);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_2151360E0;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v16 + 32) = sub_2150CEDCC;
    *(_QWORD *)(v16 + 40) = v17;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v16 + 48) = sub_2150CEDCC;
    *(_QWORD *)(v16 + 56) = v18;
    v25 = (char *)v16;
    DataFrame.init(jsonData:columns:types:options:)(v22, v13, a2, a3, &v25, (uint64_t)&v23);
    v19 = sub_21512F638();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
    v20 = v24;
    *(_OWORD *)v21 = v23;
    *(_QWORD *)(v21 + 16) = v20;
  }
  return result;
}

uint64_t DataFrame.init(jsonData:columns:types:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X4>, uint64_t a6@<X8>)
{
  char *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t j;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v11 = *a5;
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_21512F674();
  *(_QWORD *)&v45 = 0;
  v14 = objc_msgSend(v12, sel_JSONObjectWithData_options_error_, v13, 0, &v45);

  if (!v14)
  {
    v33 = (id)v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21512F5D8();

LABEL_22:
    swift_willThrow();
    sub_21501F0D8(a1, a2);
    return swift_bridgeObjectRelease();
  }
  v41 = v11;
  v15 = (id)v45;
  sub_2151300F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA87A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_215057CCC();
    swift_allocError();
    *(_OWORD *)v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    *(_OWORD *)(v34 + 32) = 0u;
    *(_OWORD *)(v34 + 48) = 0u;
    *(_BYTE *)(v34 + 64) = 3;
    goto LABEL_22;
  }
  v38 = a6;
  *(_QWORD *)&v45 = MEMORY[0x24BEE4B08];
  v16 = *((_QWORD *)v44 + 2);
  v39 = v44;
  if (v16)
  {
    v17 = a1;
    swift_bridgeObjectRetain();
    for (i = 0; i != v16; ++i)
    {
      v19 = swift_bridgeObjectRetain();
      sub_2150CE008(v19);
    }
    swift_bridgeObjectRelease();
    a1 = v17;
  }
  v40 = a2;
  v20 = swift_bridgeObjectRetain();
  v21 = (char *)sub_215048E68(v20);
  swift_bridgeObjectRelease();
  v44 = v21;
  sub_2150CEDD4(&v44);
  if (v42)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = sub_2150CF8F0(v44, a3);
    swift_release();
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v37 = a1;
      v24 = 0;
      for (j = 0; j != v23; ++j)
      {
        if (j >= *(_QWORD *)(v22 + 16))
        {
          __break(1u);
LABEL_27:
          __break(1u);
        }
        if (*(_QWORD *)(a4 + 16))
        {
          v26 = *(_QWORD *)(v22 + v24 + 32);
          v27 = *(_QWORD *)(v22 + v24 + 40);
          v28 = *(_QWORD *)(v22 + v24 + 48);
          swift_bridgeObjectRetain_n();
          v29 = sub_21502F840(v26, v27);
          if ((v30 & 1) != 0)
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a4 + 56) + v29);
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v22 = (uint64_t)sub_21501E574(v22);
            if (j >= *(_QWORD *)(v22 + 16))
              goto LABEL_27;
            v32 = v22 + v24;
            *(_QWORD *)(v32 + 32) = v26;
            *(_QWORD *)(v32 + 40) = v27;
            *(_QWORD *)(v32 + 48) = v28;
            *(_BYTE *)(v32 + 56) = v31;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        v24 += 32;
      }
      swift_bridgeObjectRelease();
      a1 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v44 = v41;
    swift_bridgeObjectRetain();
    sub_2150CE794((uint64_t)v39, v22, (uint64_t)&v45);
    sub_21501F0D8(a1, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v46;
    v43 = v45;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_OWORD *)v38 = v43;
    *(_QWORD *)(v38 + 16) = v36;
  }
  return result;
}

uint64_t sub_2150CE794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)sub_2150CF7D8(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v7[2];
  if (v8)
  {
    v20 = a3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_3;
  }
  else
  {
LABEL_9:
    v13 = MEMORY[0x24BEE4AF8];
    v14 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v13;
    v26 = v14;
    v15 = v7[2];
    if (!v15)
    {
LABEL_13:
      result = swift_bridgeObjectRelease();
      v19 = v26;
      *(_OWORD *)a3 = v25;
      *(_QWORD *)(a3 + 16) = v19;
      return result;
    }
    v8 = 0;
    a1 = (uint64_t)(v7 + 4);
    while (v8 < v7[2])
    {
      ++v8;
      sub_21504C608(a1, (uint64_t)v22);
      v16 = v23;
      v17 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 16))(v21, v16, v17);
      DataFrame.append(column:)((uint64_t)v21);
      sub_21501EA34((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
      a1 += 40;
      if (v15 == v8)
        goto LABEL_13;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  v7 = sub_21501E560(v7);
LABEL_3:
  v9 = 0;
  v10 = (uint64_t)(v7 + 4);
  while (1)
  {
    if (v8 == v9)
      goto LABEL_16;
    if (v9 >= v7[2])
      goto LABEL_17;
    v11 = *(_QWORD *)(v10 + 24);
    v12 = *(_QWORD *)(v10 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(a1, v11, v12);
    if (v3)
      return swift_bridgeObjectRelease();
    ++v9;
    v10 += 40;
    if (v8 == v9)
    {
      a3 = v20;
      goto LABEL_9;
    }
  }
}

void sub_2150CE970()
{
  __asm { BR              X10 }
}

uint64_t sub_2150CE9B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v7;

  v1[3] = (uint64_t)&type metadata for IntegerJSONColumnProcessor;
  v1[4] = (uint64_t)&off_24D2A3B48;
  v4 = swift_allocObject();
  *v1 = v4;
  *(_QWORD *)&v7 = v0;
  swift_bridgeObjectRetain_n();
  sub_215043454(MEMORY[0x24BEE4AF8]);
  *((_QWORD *)&v7 + 1) = v5;
  result = sub_2150EE010(v2);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 40) = v7;
  return result;
}

void sub_2150CECC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v1[3] = (uint64_t)&type metadata for InferringJSONColumnProcessor;
  v1[4] = (uint64_t)&off_24D2A6270;
  v4 = swift_allocObject();
  *v1 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  sub_215059060(MEMORY[0x24BEE4AF8]);
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1B0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0xE000000000000000;
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 72) = v8;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 80) = &off_24D2A4440;
  *(_QWORD *)(v4 + 88) = v3;
  *(_QWORD *)(v4 + 96) = v0;
  *(_QWORD *)&v9 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *((_QWORD *)&v9 + 1) = sub_215043B48(v5);
  sub_2150EE06C(0);
  *(_QWORD *)(v4 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D440);
  *(_QWORD *)(v4 + 136) = &off_24D2A4440;
  *(_QWORD *)(v4 + 104) = v3;
  *(_OWORD *)(v4 + 112) = v9;
  JUMPOUT(0x2150CECACLL);
}

uint64_t sub_2150CEDA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2150CEDCC(uint64_t a1)
{
  uint64_t v1;

  return sub_215062B80(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2150CEDD4(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2150A4F58((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_2150CEE3C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2150CEE3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  result = sub_215130394();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_2150CF4E0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_151;
  v101 = result;
  v98 = a1;
  if (v3 <= 1)
  {
    v7 = MEMORY[0x24BEE4AF8];
    v104 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v10 = MEMORY[0x24BEE4AF8];
LABEL_117:
      result = v10;
      v100 = v7;
      if (v11 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v11 - 2;
          if (v11 < 2)
            goto LABEL_146;
          if (!v91)
            goto LABEL_159;
          v93 = result;
          v94 = *(_QWORD *)(result + 32 + 16 * v92);
          v95 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
          result = sub_2150CF5AC((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_147;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_21501E510(v93);
            v93 = result;
          }
          if (v92 >= *(_QWORD *)(v93 + 16))
            goto LABEL_148;
          v96 = (_QWORD *)(v93 + 32 + 16 * v92);
          *v96 = v94;
          v96[1] = v95;
          v97 = *(_QWORD *)(v93 + 16);
          if (v11 > v97)
            goto LABEL_149;
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          result = v93;
          *(_QWORD *)(v93 + 16) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v100 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    result = sub_21512FCF8();
    *(_QWORD *)(result + 16) = v6;
    v100 = result;
    v104 = (char *)(result + 32);
  }
  v8 = 0;
  v9 = *a1;
  v99 = v9 + 8;
  v10 = MEMORY[0x24BEE4AF8];
  v102 = v3;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v3)
      goto LABEL_45;
    v13 = (uint64_t *)(v9 + 16 * v8);
    result = *v13;
    v14 = v13[1];
    v15 = (_QWORD *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_44;
      v17 = 0;
    }
    else
    {
      result = sub_21513043C();
      v17 = result;
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_36;
    }
    v19 = (_QWORD *)(v99 + 16 * v18);
    do
    {
      result = *(v19 - 1);
      v21 = (_QWORD *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        result = sub_21513043C();
        if (((v17 ^ result) & 1) != 0)
          goto LABEL_36;
      }
      v19 += 2;
      v20 = v18 + 1;
      v8 = v18;
      v18 = v20;
    }
    while (v20 < v3);
    v18 = v20;
LABEL_36:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_37:
      if (v18 < v12)
        goto LABEL_155;
      if (v12 < v18)
      {
        v23 = 16 * v18;
        v24 = 16 * v12;
        v25 = v18;
        v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_158;
            v27 = v9 + v23;
            v28 = *(_QWORD *)(v9 + v24);
            v29 = *(_QWORD *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(_QWORD *)(v27 - 16) = v28;
            *(_QWORD *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_150;
      if (v8 - v12 < v101)
        break;
    }
LABEL_66:
    if (v8 < v12)
      goto LABEL_145;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_21502DABC(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = result;
    }
    v38 = *(_QWORD *)(v10 + 16);
    v37 = *(_QWORD *)(v10 + 24);
    v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      result = (uint64_t)sub_21502DABC((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      v10 = result;
    }
    *(_QWORD *)(v10 + 16) = v11;
    v39 = v10 + 32;
    v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      v103 = v8;
      while (1)
      {
        v41 = v11 - 1;
        if (v11 >= 4)
        {
          v46 = v39 + 16 * v11;
          v47 = *(_QWORD *)(v46 - 64);
          v48 = *(_QWORD *)(v46 - 56);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_134;
          v51 = *(_QWORD *)(v46 - 48);
          v50 = *(_QWORD *)(v46 - 40);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_135;
          v53 = v11 - 2;
          v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          v56 = *v54;
          v55 = v54[1];
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_136;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_138;
          if (v58 >= v49)
          {
            v76 = (uint64_t *)(v39 + 16 * v41);
            v78 = *v76;
            v77 = v76[1];
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_144;
            v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v70 = *(_QWORD *)(v10 + 32);
            v71 = *(_QWORD *)(v10 + 40);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_98;
          }
          v43 = *(_QWORD *)(v10 + 32);
          v42 = *(_QWORD *)(v10 + 40);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_137;
        v53 = v11 - 2;
        v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        v61 = *v59;
        v60 = v59[1];
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_139;
        v65 = (uint64_t *)(v39 + 16 * v41);
        v67 = *v65;
        v66 = v65[1];
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_141;
        if (__OFADD__(v63, v68))
          goto LABEL_143;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_104:
          if (v69)
            v41 = v53;
          goto LABEL_106;
        }
LABEL_98:
        if ((v64 & 1) != 0)
          goto LABEL_140;
        v72 = (uint64_t *)(v39 + 16 * v41);
        v74 = *v72;
        v73 = v72[1];
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_142;
        if (v75 < v63)
          goto LABEL_15;
LABEL_106:
        v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v81 = v9;
        if (!v9)
          goto LABEL_157;
        v82 = v10;
        v83 = (uint64_t *)(v39 + 16 * v80);
        v84 = *v83;
        v85 = v39;
        v86 = v41;
        v87 = (_QWORD *)(v39 + 16 * v41);
        v88 = v87[1];
        v89 = v81;
        result = sub_2150CF5AC((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1)
          goto LABEL_114;
        if (v88 < v84)
          goto LABEL_131;
        if (v86 > *(_QWORD *)(v82 + 16))
          goto LABEL_132;
        *v83 = v84;
        *(_QWORD *)(v85 + 16 * v80 + 8) = v88;
        v90 = *(_QWORD *)(v82 + 16);
        if (v86 >= v90)
          goto LABEL_133;
        v10 = v82;
        v11 = v90 - 1;
        result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        v39 = v85;
        *(_QWORD *)(v82 + 16) = v90 - 1;
        v9 = v89;
        v8 = v103;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v3 = v102;
    if (v8 >= v102)
    {
      v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101))
    goto LABEL_153;
  if (v12 + v101 >= v3)
    v30 = v3;
  else
    v30 = v12 + v101;
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        v32 = (uint64_t *)(v9 + 16 * v8);
        result = *v32;
        v33 = v32[1];
        v34 = v12;
        v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1))
            break;
          result = sub_21513043C();
          if ((result & 1) == 0)
            break;
          if (!v9)
            goto LABEL_156;
          result = *v35;
          v33 = v35[1];
          *(_OWORD *)v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_2150CF4E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_21513043C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2150CF5AC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_48;
    v17 = (char *)(a3 - 16);
    while (1)
    {
      v18 = v17 + 16;
      v19 = v6 - 16;
      v20 = *((_QWORD *)v14 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v14 - 1) == *((_QWORD *)v6 - 1);
      if (v20 || (sub_21513043C() & 1) == 0)
      {
        v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        v21 = v17 >= v14;
        v14 -= 16;
        if (v21)
          goto LABEL_45;
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        v21 = v17 >= v6;
        v6 -= 16;
        if (v21)
          goto LABEL_45;
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (v15 || (sub_21513043C() & 1) == 0)
        break;
      v16 = v6;
      v15 = v7 == v6;
      v6 += 16;
      if (!v15)
        goto LABEL_20;
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_23;
    }
    v16 = v4;
    v15 = v7 == v4;
    v4 += 16;
    if (v15)
      goto LABEL_21;
LABEL_20:
    *(_OWORD *)v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  return 1;
}

uint64_t sub_2150CF7D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_215038EF4(0, v1, 0);
    v2 = v9;
    v4 = a1 + 56;
    do
    {
      sub_2150CE970();
      v9 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_215038EF4((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 32;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2150459B0(&v8, v2 + 40 * v6 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2150CF8F0(_QWORD *a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  _QWORD *v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v23;
  int64_t v24;

  if (a2)
  {
    v4 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v5 = (uint64_t)sub_21502EE18(0, v4, 0, MEMORY[0x24BEE4AF8]);
    v24 = v4;
    if (v4)
    {
      v6 = 0;
      v7 = a1[2];
      v23 = a2 + 32;
      do
      {
        if (v7)
        {
          v12 = (uint64_t *)(v23 + 16 * v6);
          v13 = *v12;
          v14 = v12[1];
          v15 = a1[4] == *v12 && a1[5] == v14;
          if (v15 || (sub_21513043C() & 1) != 0)
          {
            v8 = 0;
LABEL_5:
            v10 = *(_QWORD *)(v5 + 16);
            v9 = *(_QWORD *)(v5 + 24);
            swift_bridgeObjectRetain();
            if (v10 >= v9 >> 1)
              v5 = (uint64_t)sub_21502EE18((char *)(v9 > 1), v10 + 1, 1, (char *)v5);
            *(_QWORD *)(v5 + 16) = v10 + 1;
            v11 = v5 + 32 * v10;
            *(_QWORD *)(v11 + 32) = v13;
            *(_QWORD *)(v11 + 40) = v14;
            *(_QWORD *)(v11 + 48) = v8;
            *(_BYTE *)(v11 + 56) = 7;
            goto LABEL_8;
          }
          if (v7 != 1)
          {
            v16 = a1[6] == v13 && a1[7] == v14;
            if (!v16 && (sub_21513043C() & 1) == 0)
            {
              v17 = a1 + 9;
              v18 = 2;
              while (v7 != v18)
              {
                v8 = v18;
                if (*(v17 - 1) != v13 || *v17 != v14)
                {
                  v20 = sub_21513043C();
                  v18 = v8 + 1;
                  v17 += 2;
                  if ((v20 & 1) == 0)
                    continue;
                }
                goto LABEL_5;
              }
              goto LABEL_8;
            }
            v8 = 1;
            goto LABEL_5;
          }
        }
LABEL_8:
        ++v6;
      }
      while (v6 != v24);
    }
  }
  else
  {
    v21 = a1[2];
    swift_bridgeObjectRetain();
    v5 = sub_2150CDD9C(0, v21, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2150CFAE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2150CFB64()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for JSONColumnDescriptor()
{
  return &type metadata for JSONColumnDescriptor;
}

unint64_t sub_2150CFBBC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_21512FC14();
  __break(1u);
  return result;
}

uint64_t sub_2150CFC08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_21512FC14();
  v4 = sub_2150CFC84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2150CFC84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_2150CFDC8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2150CFEB4(v9, 0);
      v12 = sub_2150CFF18((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2199DB690](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2199DB690);
LABEL_9:
      sub_215130208();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2199DB690]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2150CFDC8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_2150D0128(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_2150D0128(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_21512FBC0();
  }
  __break(1u);
  return result;
}

_QWORD *sub_2150CFEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D210);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_2150CFF18(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_2150D0128(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_21512FBCC();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_215130208();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_2150D0128(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_21512FBA8();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2150D0128(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_21512FBD8();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2199DB714](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_2150D01A0(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD v12[2];

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  while (1)
  {
    v7 = sub_21512FB60();
    v12[0] = sub_21512FBFC();
    v12[1] = v8;
    v9 = a1(v12);
    if (v4)
      break;
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v7;
    if (v7 < 0x4000)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

unsigned __int8 *sub_2150D02A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_2150D1C9C();
  swift_bridgeObjectRetain();
  v7 = sub_21512FC08();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_2150CFC08();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_215130208();
  }
LABEL_7:
  v13 = sub_2150D0394(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_2150D0394(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2150D0610(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_215130208();
  }
  result = sub_2150D06E0((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_2150D06E0(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_2150D0128(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_21512FBC0();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_2150D0128(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_2150D0128(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_21512FBC0();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_2150D0B04(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_2151303A0() & 1;
}

uint64_t sub_2150D0B78(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[4];
  _BYTE v35[16];
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;

  v37 = 46;
  v38 = 0xE100000000000000;
  v36 = &v37;
  v4 = sub_2150D01A0(sub_2150D1C84, (uint64_t)v35, a1, a2);
  v5 = 0;
  if ((v6 & 1) == 0)
  {
    v7 = v4;
    v37 = 58;
    v38 = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v4);
    v34[2] = &v37;
    v8 = sub_2150D01A0(sub_2150D1C84, (uint64_t)v34, a1, a2);
    if ((v9 & 1) != 0)
      return 0;
    v10 = v8 >> 14;
    if (v8 >> 14 < v7 >> 14)
    {
      __break(1u);
    }
    else
    {
      v11 = sub_21512FC14();
      v15 = sub_2150D0B04(v11, v12, v13, v14, 0x786469732ELL, 0xE500000000000000);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 || v10 >= (unint64_t)sub_21512FB60() >> 14)
        return 0;
      v16 = sub_21512FB54();
      swift_bridgeObjectRetain();
      v17 = sub_2150CFBBC(v16, a1, a2);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease();
      if ((v17 ^ v19) >> 14)
      {
        sub_2150D0610(v17, v19, v21, v23, 10);
        if ((v24 & 0x100) != 0)
          sub_2150D02A4(v17, v19, v21, v23, 10);
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          v26 = sub_21512FC14();
          v28 = v27;
          v30 = v29;
          v32 = v31;
          swift_bridgeObjectRelease();
          v5 = MEMORY[0x2199DB684](v26, v28, v30, v32);
          swift_bridgeObjectRelease();
          return v5;
        }
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

char *sub_2150D0DF0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  char *result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v4 = (uint64_t *)a2;
  v5 = (uint64_t *)a1;
  sub_2150FC324(a1, a2);
  if (v3)
  {
    MEMORY[0x2199DC41C](v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
    if ((swift_dynamicCast() & 1) != 0)
    {
      MEMORY[0x2199DC410](v3);
      sub_21501D914();
      swift_allocError();
      *(_QWORD *)v7 = 0xD00000000000001ALL;
      *(_QWORD *)(v7 + 8) = 0x8000000215131980;
      *(_BYTE *)(v7 + 16) = 0;
      swift_willThrow();
    }
    sub_21501F0D8((uint64_t)v5, (unint64_t)v4);
    MEMORY[0x2199DC410](v3);
    return (char *)v2;
  }
  v2 = (unint64_t)v6;
  v9 = v6[2];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v91 = (unint64_t)v4;
  v92 = (uint64_t)v5;
  v4 = (uint64_t *)v6[4];
  v10 = v6[6];
  v11 = v4 == (uint64_t *)0x656D61726673 && v6[5] == 0xE600000000000000;
  v87 = v6[5];
  v88 = v6[6];
  v93 = v88;
  if (v11)
    goto LABEL_31;
  v12 = v6[6];
  if ((sub_21513043C() & 1) == 0)
  {
    if (v9 != 1)
    {
      v5 = (uint64_t *)(v2 + 72);
      v14 = 1;
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v12 = *v5;
        v16 = *(v5 - 2) == 0x656D61726673 && *(v5 - 1) == 0xE600000000000000;
        if (v16 || (sub_21513043C() & 1) != 0)
          goto LABEL_12;
        v5 += 3;
        ++v14;
        if (v15 == v9)
          goto LABEL_25;
      }
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    v4 = (uint64_t *)v91;
    v5 = (uint64_t *)v92;
LABEL_26:
    sub_21501D914();
    swift_allocError();
    v2 = 0;
    *(_QWORD *)v17 = 0xD00000000000002DLL;
    v18 = "SFrame index is missing the 'sframe' section.";
LABEL_27:
    v19 = (unint64_t)(v18 - 32) | 0x8000000000000000;
    goto LABEL_28;
  }
LABEL_12:
  v88 = v12;
  if (v4 == (uint64_t *)0x6E5F6E6D756C6F63)
  {
    v5 = (uint64_t *)v92;
    v10 = v93;
    v13 = v93;
    if (v87 == 0xEC00000073656D61)
      goto LABEL_46;
  }
  else
  {
    v10 = v93;
  }
LABEL_31:
  v13 = v10;
  if ((sub_21513043C() & 1) == 0)
  {
    if (v9 == 1)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      v5 = (uint64_t *)v92;
      sub_21501D914();
      swift_allocError();
      v2 = 0;
      *(_QWORD *)v17 = 0xD000000000000033;
      v19 = 0x80000002151319D0;
      v4 = (uint64_t *)v91;
      goto LABEL_28;
    }
    v5 = (uint64_t *)(v2 + 72);
    v20 = 1;
    while (1)
    {
      v21 = v20 + 1;
      if (__OFADD__(v20, 1))
        break;
      v13 = *v5;
      v22 = *(v5 - 2) == 0x6E5F6E6D756C6F63 && *(v5 - 1) == 0xEC00000073656D61;
      if (v22 || (sub_21513043C() & 1) != 0)
        goto LABEL_32;
      v5 += 3;
      ++v20;
      if (v21 == v9)
        goto LABEL_44;
    }
    __break(1u);
    goto LABEL_100;
  }
LABEL_32:
  if (v4 == (uint64_t *)0x665F6E6D756C6F63)
  {
    v5 = (uint64_t *)v92;
    v10 = v93;
    if (v87 == 0xEC00000073656C69)
      goto LABEL_47;
  }
  else
  {
    v5 = (uint64_t *)v92;
    v10 = v93;
  }
LABEL_46:
  if ((sub_21513043C() & 1) == 0)
  {
    if (v9 != 1)
    {
      v4 = (uint64_t *)(v2 + 72);
      v45 = 1;
      while (1)
      {
        v46 = v45 + 1;
        if (__OFADD__(v45, 1))
          break;
        v5 = (uint64_t *)*(v4 - 1);
        v94 = *v4;
        if (*(v4 - 2) == 0x665F6E6D756C6F63 && v5 == (uint64_t *)0xEC00000073656C69)
        {
          v4 = (uint64_t *)v91;
LABEL_79:
          v5 = (uint64_t *)v92;
          v10 = v94;
          goto LABEL_48;
        }
        if ((sub_21513043C() & 1) != 0)
        {
          v4 = (uint64_t *)v91;
          goto LABEL_79;
        }
        v4 += 3;
        ++v45;
        if (v46 == v9)
        {
          swift_bridgeObjectRelease();
          v4 = (uint64_t *)v91;
          v5 = (uint64_t *)v92;
          goto LABEL_73;
        }
      }
      __break(1u);
      goto LABEL_105;
    }
    swift_bridgeObjectRelease();
    v4 = (uint64_t *)v91;
LABEL_73:
    sub_21501D914();
    swift_allocError();
    v2 = 0;
    *(_QWORD *)v17 = 0xD000000000000033;
    v18 = "SFrame index is missing the 'column_files' section.";
    goto LABEL_27;
  }
LABEL_47:
  v4 = (uint64_t *)v91;
LABEL_48:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v88 + 16)
    || (v23 = sub_21502F840(0x756C6F635F6D756ELL, 0xEB00000000736E6DLL), (v24 & 1) == 0)
    || (v25 = (uint64_t *)(*(_QWORD *)(v88 + 56) + 16 * v23),
        v26 = *v25,
        v2 = v25[1],
        swift_bridgeObjectRetain(),
        v27 = sub_215125D48(v26, v2),
        (v28 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    v41 = "SFrame index is missing the number of columns.";
    v42 = 0xD00000000000002ELL;
LABEL_60:
    *(_QWORD *)v40 = v42;
    *(_QWORD *)(v40 + 8) = (unint64_t)(v41 - 32) | 0x8000000000000000;
    *(_BYTE *)(v40 + 16) = 0;
    swift_willThrow();
    v43 = (uint64_t)v5;
    v44 = (unint64_t)v4;
LABEL_61:
    sub_21501F0D8(v43, v44);
    return (char *)v2;
  }
  v86 = v27;
  if (!*(_QWORD *)(v88 + 16)
    || (v29 = sub_21502F840(0x73776F726ELL, 0xE500000000000000), (v30 & 1) == 0)
    || (v31 = (uint64_t *)(*(_QWORD *)(v88 + 56) + 16 * v29),
        v32 = *v31,
        v2 = v31[1],
        swift_bridgeObjectRetain(),
        v33 = sub_215125D48(v32, v2),
        (v34 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    v41 = "SFrame index is missing the number of rows.";
    v42 = 0xD00000000000002BLL;
    goto LABEL_60;
  }
  if (!*(_QWORD *)(v88 + 16)
    || (v2 = v33, v35 = sub_21502F840(0x6E6F6973726576, 0xE700000000000000), (v36 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    v2 = 0;
    *(_QWORD *)v17 = 0xD00000000000002BLL;
    v18 = "SFrame index is missing the version number.";
    goto LABEL_27;
  }
  v37 = (uint64_t *)(*(_QWORD *)(v88 + 56) + 16 * v35);
  v38 = *v37;
  v39 = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v38 != 48 || v39 != 0xE100000000000000) && (sub_21513043C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_215130178();
    sub_21512FB90();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v2 = 0;
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v81 = 0;
    *(_QWORD *)(v81 + 8) = 0xE000000000000000;
    *(_BYTE *)(v81 + 16) = 1;
    swift_willThrow();
    v43 = (uint64_t)v5;
    v44 = v91;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  result = sub_21502F07C(0, v86 & ~(v86 >> 63), 0, MEMORY[0x24BEE4AF8]);
  v4 = (uint64_t *)v91;
  if ((v86 & 0x8000000000000000) == 0)
  {
    v48 = result;
    if (!v86)
    {
LABEL_110:
      sub_21501F0D8((uint64_t)v5, (unint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (char *)v2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA87A8);
    v49 = swift_allocObject();
    v50 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v49 + 16) = xmmword_215135F80;
    v51 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v49 + 56) = v50;
    *(_QWORD *)(v49 + 64) = v51;
    *(_QWORD *)(v49 + 32) = 0;
    v52 = sub_21512FAAC();
    v54 = v53;
    v89 = v52;
    if (*(_QWORD *)(v13 + 16))
    {
      v55 = v52;
      swift_bridgeObjectRetain();
      v56 = sub_21502F840(v55, v54);
      if ((v57 & 1) != 0)
      {
        v58 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v56);
        v84 = *v58;
        v85 = v58[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v59 = v10;
        if (*(_QWORD *)(v10 + 16))
        {
          swift_bridgeObjectRetain();
          v60 = sub_21502F840(v89, v54);
          if ((v61 & 1) != 0)
          {
            v62 = 1;
            while (1)
            {
              v63 = (uint64_t *)(*(_QWORD *)(v59 + 56) + 16 * v60);
              v65 = *v63;
              v64 = v63[1];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRelease_n();
              v66 = sub_2150D0B78(v65, v64);
              v68 = v67;
              v90 = v69;
              swift_bridgeObjectRelease();
              if (!v68)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_215130178();
                swift_bridgeObjectRelease();
                sub_21512FB90();
                swift_bridgeObjectRelease();
                sub_21512FB90();
                v2 = 0xD000000000000021;
                sub_21501D914();
                swift_allocError();
                *(_QWORD *)v83 = 0xD000000000000021;
                *(_QWORD *)(v83 + 8) = 0x8000000215131B70;
                *(_BYTE *)(v83 + 16) = 0;
                swift_willThrow();
                sub_21501F0D8(v92, v91);
                goto LABEL_29;
              }
              swift_bridgeObjectRelease();
              v71 = *((_QWORD *)v48 + 2);
              v70 = *((_QWORD *)v48 + 3);
              if (v71 >= v70 >> 1)
                v48 = sub_21502F07C((char *)(v70 > 1), v71 + 1, 1, v48);
              *((_QWORD *)v48 + 2) = v71 + 1;
              v72 = &v48[40 * v71];
              *((_QWORD *)v72 + 4) = v84;
              *((_QWORD *)v72 + 5) = v85;
              *((_QWORD *)v72 + 6) = v66;
              *((_QWORD *)v72 + 7) = v68;
              *((_QWORD *)v72 + 8) = v90;
              if (v86 == v62)
              {
                v4 = (uint64_t *)v91;
                v5 = (uint64_t *)v92;
                goto LABEL_110;
              }
              v73 = swift_allocObject();
              *(_OWORD *)(v73 + 16) = xmmword_215135F80;
              *(_QWORD *)(v73 + 56) = MEMORY[0x24BEE1768];
              *(_QWORD *)(v73 + 64) = MEMORY[0x24BEE17F0];
              *(_QWORD *)(v73 + 32) = v62;
              v74 = sub_21512FAAC();
              v76 = v75;
              if (!*(_QWORD *)(v13 + 16))
              {
                swift_bridgeObjectRelease();
                v4 = (uint64_t *)v91;
                v5 = (uint64_t *)v92;
                goto LABEL_103;
              }
              swift_bridgeObjectRetain();
              v77 = sub_21502F840(v74, v76);
              if ((v78 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v4 = (uint64_t *)v91;
                v5 = (uint64_t *)v92;
                goto LABEL_103;
              }
              v79 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v77);
              v84 = *v79;
              v85 = v79[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v59 = v10;
              if (!*(_QWORD *)(v10 + 16))
                break;
              swift_bridgeObjectRetain();
              v60 = sub_21502F840(v74, v76);
              ++v62;
              if ((v80 & 1) == 0)
                goto LABEL_106;
            }
            swift_bridgeObjectRelease();
            v4 = (uint64_t *)v91;
            v5 = (uint64_t *)v92;
          }
          else
          {
LABEL_106:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v4 = (uint64_t *)v91;
            v5 = (uint64_t *)v92;
          }
          goto LABEL_107;
        }
LABEL_105:
        swift_bridgeObjectRelease();
LABEL_107:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_215130178();
        swift_bridgeObjectRelease();
        sub_21512FB90();
        swift_bridgeObjectRelease();
        sub_21512FB90();
        v2 = 0xD000000000000019;
        sub_21501D914();
        swift_allocError();
        *(_QWORD *)v82 = 0xD000000000000019;
        *(_QWORD *)(v82 + 8) = 0x8000000215131B50;
        *(_BYTE *)(v82 + 16) = 0;
        swift_willThrow();
        sub_21501F0D8((uint64_t)v5, (unint64_t)v4);
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
LABEL_101:
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_215130178();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v19 = 0x8000000215131B30;
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v17 = 0xD000000000000019;
    v2 = 1;
LABEL_28:
    *(_QWORD *)(v17 + 8) = v19;
    *(_BYTE *)(v17 + 16) = 0;
    swift_willThrow();
    sub_21501F0D8((uint64_t)v5, (unint64_t)v4);
    if (!(_DWORD)v2)
      return (char *)v2;
LABEL_29:
    swift_bridgeObjectRelease();
    return (char *)v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150D1C84(_QWORD *a1)
{
  return sub_215068DB8(a1) & 1;
}

unint64_t sub_2150D1C9C()
{
  unint64_t result;

  result = qword_254DA87B0[0];
  if (!qword_254DA87B0[0])
  {
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, qword_254DA87B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFrameIndex()
{
  return &type metadata for SFrameIndex;
}

uint64_t destroy for SFrameIndex.Column()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SFrameIndex.Column(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SFrameIndex.Column(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for SFrameIndex.Column(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for SFrameIndex.Column()
{
  return &type metadata for SFrameIndex.Column;
}

void sub_2150D1E2C()
{
  type metadata accessor for HashJoin.JoinItem();
}

uint64_t *sub_2150D1EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 & 0xF8 | 7;
  v11 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 16;
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (((((v12 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v14 = v9 | *(_DWORD *)(v6 + 80);
  if ((v14 & 0x1000F8) != 0 || ((v13 + (v11 & ~v10)) | 1) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 24) = v20;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    (**(void (***)(unint64_t, unint64_t))(v20 - 8))(v18, v19);
    v21 = (_QWORD *)((v18 + 47) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v19 + 47) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    v23[1] = v24[1];
    v25 = ((unint64_t)v4 + v11) & v17;
    v26 = ((unint64_t)a2 + v11) & v17;
    v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v5);
    v28 = (v12 + v25) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v12 + v26) & 0xFFFFFFFFFFFFFFF8;
    v30 = *(_QWORD *)(v29 + 24);
    *(_QWORD *)(v28 + 24) = v30;
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    (**(void (***)(unint64_t, unint64_t))(v30 - 8))(v28, v29);
    v31 = (_QWORD *)((v28 + 47) & 0xFFFFFFFFFFFFF8);
    v32 = (_QWORD *)((v29 + 47) & 0xFFFFFFFFFFFFF8);
    *v31 = *v32;
    v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v33[1] = v34[1];
    *(_BYTE *)(v13 + v25) = *(_BYTE *)(v13 + v26);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2150D20FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + 7;
  __swift_destroy_boxed_opaque_existential_1Tm((v5 + a1) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (a1 + v7 + (((((v5 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7;
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  __swift_destroy_boxed_opaque_existential_1Tm((*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150D21D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 24) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  (**(void (***)(unint64_t, unint64_t))(v10 - 8))(v8, v9);
  v11 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v9 + 47) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v18 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v17 + 16;
  v19 = (v18 + a1) & ~v17;
  v20 = (v18 + a2) & ~v17;
  v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v15);
  v22 = *(_QWORD *)(v16 + 64) + 7;
  v23 = (v22 + v19) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)(v24 + 24);
  *(_QWORD *)(v23 + 24) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  (**(void (***)(unint64_t, unint64_t))(v25 - 8))(v23, v24);
  v26 = (_QWORD *)((v23 + 47) & 0xFFFFFFFFFFFFF8);
  v27 = (_QWORD *)((v24 + 47) & 0xFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  v30 = (((((v22 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_BYTE *)(v30 + v19) = *(_BYTE *)(v30 + v20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2150D2370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8));
  v8 = (_QWORD *)((((v7 + a1) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((((v7 + a2) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v13 + 16;
  v15 = (v14 + a1) & ~v13;
  v16 = (v14 + a2) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64) + 7;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8));
  v18 = (_QWORD *)((((v17 + v15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)((((v17 + v16) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (((((v17 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_BYTE *)(v22 + v15) = *(_BYTE *)(v22 + v16);
  return a1;
}

uint64_t sub_2150D24F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)v9;
  v11 = *(_OWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = (_QWORD *)((v9 + 47) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  *v13 = *v12;
  *(_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  v16 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 16;
  v17 = (v16 + a1) & ~v15;
  v18 = (v16 + a2) & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (v19 + v17) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + v18) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_OWORD *)v21;
  v23 = *(_OWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_OWORD *)v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  v24 = (_QWORD *)((v21 + 47) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v20 + 47) & 0xFFFFFFFFFFFFF8);
  *v25 = *v24;
  *(_OWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (((((v19 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_BYTE *)(v26 + v17) = *(_BYTE *)(v26 + v18);
  return a1;
}

uint64_t sub_2150D2640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v8);
  v10 = *(_OWORD *)v9;
  v11 = *(_OWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v9 + 47) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v18 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v17 + 16;
  v19 = (v18 + a1) & ~v17;
  v20 = (v18 + a2) & ~v17;
  (*(void (**)(unint64_t, unint64_t))(v16 + 40))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (v21 + v19) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v21 + v20) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v22);
  v24 = *(_OWORD *)v23;
  v25 = *(_OWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_OWORD *)v22 = v24;
  *(_OWORD *)(v22 + 16) = v25;
  v26 = (_QWORD *)((v22 + 47) & 0xFFFFFFFFFFFFF8);
  v27 = (_QWORD *)((v23 + 47) & 0xFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRelease();
  v30 = (((((v21 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_BYTE *)(v30 + v19) = *(_BYTE *)(v30 + v20);
  return a1;
}

uint64_t sub_2150D27C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unsigned int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v4 + 64);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v13 = ((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 16;
  v14 = *(_QWORD *)(v7 + 64) + 7;
  v15 = a2 - v10;
  if (a2 <= v10)
    goto LABEL_26;
  v16 = (((((v14 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + (v13 & ~v12) + 17;
  if (v16 > 3)
    goto LABEL_13;
  v18 = (v15 + ~(-1 << (8 * v16))) >> (8 * v16);
  if (v18 > 0xFFFE)
  {
    if (*(_DWORD *)(a1 + v16))
      goto LABEL_21;
  }
  else
  {
    if (v18 <= 0xFE)
    {
      if (!v18)
        goto LABEL_26;
LABEL_13:
      if (!*(_BYTE *)(a1 + v16))
        goto LABEL_26;
LABEL_21:
      if (v16 <= 3)
        v19 = (((((v14 & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
            + (v13 & ~(*(_DWORD *)(v7 + 80) & 0xF8 | 7))
            + 17;
      else
        v19 = 4;
      return ((uint64_t (*)(void))((char *)&loc_2150D28F4 + 4 * byte_215138D70[v19 - 1]))();
    }
    if (*(_WORD *)(a1 + v16))
      goto LABEL_21;
  }
LABEL_26:
  if (v6 >= v9)
  {
    if (v5 >= 0x7FFFFFFF)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v21 = a1 + v11 + 7;
  }
  else
  {
    v20 = (v13 + a1) & ~v12;
    if (v8 >= 0x7FFFFFFF)
      return (*(uint64_t (**)(unint64_t))(v7 + 48))(v20);
    v21 = v14 + v20;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= 0xFFFFFFFF)
    LODWORD(v22) = -1;
  return (v22 + 1);
}

void sub_2150D29A0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = v6;
  else
    v9 = v8;
  v10 = (((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + (*(_DWORD *)(v7 + 80) & 0xF8 | 7)) & ~(*(_DWORD *)(v7 + 80) & 0xF8 | 7))
       + ((((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) | 1;
  if (a3 > v9)
  {
    if (v10 <= 3)
    {
      v13 = (a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10);
      if (v13 > 0xFFFE)
      {
        v11 = 4u;
      }
      else if (v13 >= 0xFF)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 != 0;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v9 < a2)
  {
    v12 = ~v9 + a2;
    if (v10 < 4)
    {
      v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if ((_DWORD)v10 == 1)
      {
        *a1 = v14;
      }
      else
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

void type metadata accessor for HashJoin()
{
  JUMPOUT(0x2199DC470);
}

void type metadata accessor for HashJoin.JoinItem()
{
  JUMPOUT(0x2199DC470);
}

uint64_t sub_2150D2C9C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2150D2CA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2150D2D30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(unint64_t, unint64_t))(v12 - 8))(v10, v11);
    v13 = (_QWORD *)((v10 + 47) & 0xFFFFFFFFFFFFF8);
    v14 = (_QWORD *)((v11 + 47) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2150D2E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 32) - 8);
  (*(void (**)(void))(v3 + 8))();
  __swift_destroy_boxed_opaque_existential_1Tm((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150D2E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  v10 = (_QWORD *)((v7 + 47) & 0xFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2150D2F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v7, v8);
  v9 = (_QWORD *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2150D2FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (_QWORD *)((v7 + 47) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2150D3070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = (_QWORD *)((v7 + 47) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2150D3114(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2150D31A0 + 4 * byte_215138D7E[v10]))();
  }
}

void sub_2150D3224(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_2150D3328()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2150D33ACLL);
}

void sub_2150D3330(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2150D3338);
  JUMPOUT(0x2150D33ACLL);
}

void sub_2150D337C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2150D33ACLL);
}

void sub_2150D3384()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2150D33ACLL);
}

uint64_t sub_2150D338C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x2150D3398);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x2150D33ACLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_2150D33C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v32 = a5;
  v31 = a6;
  v29 = a1;
  v30 = a7;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v18;
  v27 = (void *)v18[1];
  v28 = v19;
  v22 = *v20;
  v21 = (void *)v20[1];
  v24 = *v23;
  (*(void (**)(char *))(v15 + 16))(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, a4);
  v33 = v24;
  sub_2150D3518((uint64_t)v17, (uint64_t)v13, v28, v27, v22, v21, a3, v32, a4, v31, v30);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v29, a3);
}

uint64_t sub_2150D3518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 *v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  Swift::String v23;
  Swift::Int value;
  Swift::Bool is_nil;
  Swift::String v26;
  Swift::Bool v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  Swift::Int_optional v46;
  Swift::Int_optional v47;

  v37 = a6;
  v30 = a8;
  v31 = a5;
  v39 = a2;
  v34 = *(_QWORD *)(a9 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *v20;
  v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 24);
  v35 = v17;
  v21(&v40, v22, a10);
  v43 = v40;
  v44 = v41;
  v45 = v42;
  v36 = a3;
  v23._countAndFlagsBits = a3;
  v23._object = a4;
  v46 = DataFrame.indexOfColumn(_:)(v23);
  value = v46.value;
  is_nil = v46.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    v29[1] = value;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a11 + 24))(&v40, a9, a11);
    v43 = v40;
    v44 = v41;
    v45 = v42;
    v26._countAndFlagsBits = v31;
    v26._object = v37;
    v47 = DataFrame.indexOfColumn(_:)(v26);
    v36 = v47.value;
    v27 = v47.is_nil;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v27)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v19, v35, a7);
      sub_2150D3980((uint64_t)v19, a7, v30);
    }
  }
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_215130178();
  sub_21512FB90();
  sub_21512FB90();
  sub_21512FB90();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

void sub_2150D3980(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for HashJoin.JoinItem();
}

uint64_t sub_2150D39F4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  *(_QWORD *)(v3 + a1[18]) = v5;
  (*(void (**)(uint64_t, uint64_t))(v6 + 56))(v4, v6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  sub_21512FD70();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  result = sub_2150459B0(&v12, v3 + a1[17]);
  v9 = (_QWORD *)(v3 + a1[19]);
  *v9 = v10;
  v9[1] = v11;
  return result;
}

void sub_2150D3AD8(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_2150D3B24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  (*(void (**)(uint64_t *__return_ptr, _QWORD))(v0[4] + 32))(&v13, v0[2]);
  v1 = v14;
  v2 = v15;
  v3 = v16;
  v8 = sub_2150EBD1C(v14, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v1, v2, v3);
  (*(void (**)(uint64_t *__return_ptr, _QWORD))(v0[5] + 32))(&v9, v0[3]);
  v4 = v10;
  v5 = v11;
  v6 = v12;
  v7 = sub_2150EBD1C(v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v4, v5, v6);
  if (v7 < v8)
    sub_2150D3C78();
  sub_2150D3DD0();
}

void sub_2150D3C78()
{
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D3CCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (_QWORD *)(v1 + *(int *)(a1 + 68));
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  if (swift_dynamicCastMetatype())
  {
    v7 = MEMORY[0x24BEE1768];
    v8 = MEMORY[0x24BEE1778];
  }
  else if (swift_dynamicCastMetatype())
  {
    v7 = MEMORY[0x24BEE0D00];
    v8 = MEMORY[0x24BEE0D10];
  }
  else if (swift_dynamicCastMetatype())
  {
    v7 = MEMORY[0x24BEE13C8];
    v8 = MEMORY[0x24BEE13E8];
  }
  else
  {
    if (!swift_dynamicCastMetatype())
      sub_2150D46CC((uint64_t)v2, v3);
    v7 = MEMORY[0x24BEE1328];
    v8 = MEMORY[0x24BEE1338];
  }
  sub_2150D3F28(v7, v2, v7, v8, v3);
}

void sub_2150D3DD0()
{
  type metadata accessor for HashJoin.JoinItem();
}

uint64_t sub_2150D3E20(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (_QWORD *)(v2 + *(int *)(a1 + 68));
  v6 = v5[3];
  v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  if (swift_dynamicCastMetatype())
  {
    v8 = MEMORY[0x24BEE1768];
    v9 = MEMORY[0x24BEE1778];
    return v1(v8, v3, v8, v9);
  }
  if (swift_dynamicCastMetatype())
  {
    v8 = MEMORY[0x24BEE0D00];
    v9 = MEMORY[0x24BEE0D10];
    return v1(v8, v3, v8, v9);
  }
  if (swift_dynamicCastMetatype())
  {
    v8 = MEMORY[0x24BEE13C8];
    v9 = MEMORY[0x24BEE13E8];
    return v1(v8, v3, v8, v9);
  }
  if (swift_dynamicCastMetatype())
  {
    v8 = MEMORY[0x24BEE1328];
    v9 = MEMORY[0x24BEE1338];
    return v1(v8, v3, v8, v9);
  }
  return v4(v3);
}

void sub_2150D3F28(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v16 = a4;
  v14[1] = a5;
  v14[3] = *(a2 - 1);
  MEMORY[0x24BDAC7A8](a1);
  v14[2] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_215130064();
  v14[6] = *(_QWORD *)(v15 - 8);
  v8 = MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v14 - v9;
  v14[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14[4] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[5];
  v18 = a2[4];
  v19 = v11;
  v20 = v11;
  v21 = v12;
  v22 = v12;
  v23 = v18;
  v24 = v13;
  v25 = v13;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D46CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[13];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[1] = a2;
  v7[10] = *(_QWORD *)(a1 - 8);
  v2 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v7[5] = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  v8 = v2[2];
  v9 = v8;
  v10 = v4;
  v11 = v4;
  v12 = v5;
  v7[12] = v5;
  v13 = v6;
  v14 = v6;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D4D3C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17 = a4;
  v15[1] = a5;
  MEMORY[0x24BDAC7A8](a1);
  v15[2] = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_215130064();
  v15[6] = *(_QWORD *)(v16 - 8);
  v8 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v15 - v9;
  v15[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v15[4] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[2];
  v11 = a2[3];
  v18 = a2;
  v14 = a2[4];
  v13 = a2[5];
  v22 = v12;
  v23 = v11;
  v21 = v11;
  v24 = v12;
  v25 = v14;
  v20 = v13;
  v26 = v13;
  v27 = v14;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D5504(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[32];

  v8[0] = a2;
  v8[8] = *(_QWORD *)(a1 - 8);
  v2 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v8[3] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[2];
  v4 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  v8[5] = v2;
  v8[26] = v5;
  v8[27] = v4;
  v8[11] = v4;
  v8[28] = v5;
  v8[29] = v6;
  v8[30] = v7;
  v8[31] = v6;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D5B68()
{
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D6C0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[57];

  v9[0] = a2;
  v9[15] = *(_QWORD *)(a1 - 8);
  v2 = MEMORY[0x24BDAC7A8](a1);
  v9[8] = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)MEMORY[0x24BDAC7A8](v2);
  v9[11] = (char *)v9 - v5;
  v6 = v4[3];
  v8 = v4[4];
  v7 = v4[5];
  v9[51] = v4[2];
  v9[52] = v6;
  v9[53] = v6;
  v9[54] = v8;
  v9[6] = v7;
  v9[7] = v6;
  v9[55] = v7;
  v9[56] = v7;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D77AC(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_2150D77BC@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;

  *(_QWORD *)&v11 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)&v11 + 1) = MEMORY[0x24BEE4AF8];
  v12 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
  v4 = (*(uint64_t (**)(_QWORD, _QWORD))(a1[4] + 56))(a1[2], a1[4]);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = MEMORY[0x2199DB870](v4, AssociatedTypeWitness);
  result = swift_bridgeObjectRelease();
  if (v6 < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (v6)
    type metadata accessor for HashJoin.JoinItem();
  v8 = (*(uint64_t (**)(_QWORD, _QWORD))(a1[5] + 56))(a1[3], a1[5]);
  v9 = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x2199DB870](v8, v9);
  result = swift_bridgeObjectRelease();
  if (v10 < 0)
    goto LABEL_9;
  if (v10)
    type metadata accessor for HashJoin.JoinItem();
  *(_OWORD *)a2 = v11;
  *(_QWORD *)(a2 + 16) = v12;
  return result;
}

uint64_t sub_2150D7D8C(uint64_t result, uint64_t a2, char **a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v8 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v10 = *(_QWORD *)(a2 + 8 * i + 32);
      sub_2150D8CB8(v8, a3, (uint64_t)a4);
      sub_2150D8E64(v10, a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2150D7E30(uint64_t a1, char **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];

  v4 = a3[4];
  v23 = a3[2];
  (*(void (**)(_QWORD *__return_ptr))(v4 + 24))(v26);
  v5 = v26[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v7 = *a2;
  v22 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_16;
  while (1)
  {
    v8 = 0;
    v9 = 0;
    *a2 = v7;
    do
    {
      sub_21501EE90(v5 + v8 + 32, (uint64_t)v26);
      v10 = *a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = sub_21501E4D4((uint64_t)v10);
        *a2 = v10;
      }
      if (v9 >= *((_QWORD *)v10 + 2))
      {
        __break(1u);
        JUMPOUT(0x2150D80C0);
      }
      ++v9;
      v13 = v27;
      v12 = v28;
      v14 = __swift_project_boxed_opaque_existential_1(v26, v27);
      v30[3] = v13;
      v30[4] = *(_QWORD *)(v12 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
      v16 = *(_QWORD *)&v10[v8 + 56];
      v17 = *(_QWORD *)&v10[v8 + 64];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v10[v8 + 32], v16);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 56))(a1, v30, v16, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
      sub_21501EA34((uint64_t)v26);
      v8 += 40;
    }
    while (v6 != v9);
    swift_bridgeObjectRelease();
    v4 = v22;
LABEL_10:
    v18 = a3[5];
    v7 = (char *)a3[3];
    v5 = (*(uint64_t (**)(char *, uint64_t))(v18 + 56))(v7, v18);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v20 = MEMORY[0x2199DB870](v5, AssociatedTypeWitness);
    result = swift_bridgeObjectRelease();
    if ((v20 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_16:
    v7 = sub_21501E4D4((uint64_t)v7);
  }
  if (v20)
  {
    v26[0] = v23;
    v26[1] = v7;
    v26[2] = v7;
    v27 = v4;
    v28 = v18;
    v29 = v18;
    type metadata accessor for HashJoin.JoinItem();
  }
  return result;
}

uint64_t sub_2150D80EC(uint64_t result, uint64_t a2, char **a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v10 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_2150D8CB8(v10, a3, (uint64_t)a4);
      sub_2150D8E64(a2, a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2150D8188(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a3[5];
  v5 = a3[3];
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v8, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a3[2];
  v7 = a3[4];
  v9 = v6;
  v10 = v5;
  v11 = v5;
  v12 = v7;
  v13 = v4;
  v14 = v4;
  type metadata accessor for HashJoin.JoinItem();
}

void sub_2150D8608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v29 = a8;
  v39 = a5;
  v36 = a4;
  v33 = a3;
  v28 = a10;
  v27 = a9;
  v35 = a12;
  v31 = a13;
  v16 = sub_215130064();
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v40 = *(_QWORD *)(a7 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v26[0] = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v34 = (char *)v26 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v26[1] = (char *)v26 - v23;
  v32 = *(_QWORD *)(a8 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v30 = (char *)v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26[2] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a11 + 24))(&v47, a6, a11);
  v41 = v36;
  v42 = v39;
  v43 = a6;
  v44 = v27;
  v45 = v28;
  v46 = a11;
  type metadata accessor for HashJoin.JoinItem();
}

uint64_t sub_2150D8CB8(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  (*(void (**)(uint64_t *__return_ptr, _QWORD))(*(_QWORD *)(a3 + 32) + 24))(&v19, *(_QWORD *)(a3 + 16));
  v4 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
    return swift_bridgeObjectRelease();
  v6 = *a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_11:
    v6 = sub_21501E4D4((uint64_t)v6);
  v7 = 0;
  v8 = 0;
  *a2 = v6;
  do
  {
    sub_21501EE90(v4 + v7 + 32, (uint64_t)&v19);
    v6 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_21501E4D4((uint64_t)v6);
      *a2 = v6;
    }
    if (v8 >= *((_QWORD *)v6 + 2))
    {
      __break(1u);
      goto LABEL_11;
    }
    ++v8;
    v11 = v20;
    v10 = v21;
    v12 = __swift_project_boxed_opaque_existential_1(&v19, v20);
    v18[3] = v11;
    v18[4] = *(_QWORD *)(v10 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v12, v11);
    v14 = *(_QWORD *)&v6[v7 + 56];
    v15 = *(_QWORD *)&v6[v7 + 64];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v6[v7 + 32], v14);
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v15 + 56))(a1, v18, v14, v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    sub_21501EA34((uint64_t)&v19);
    v7 += 40;
  }
  while (v5 != v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150D8E64(uint64_t a1, char **a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  uint64_t v17;
  _OWORD v18[3];
  _QWORD v19[7];

  v5 = a3[4];
  v15 = a3[2];
  (*(void (**)(_QWORD *__return_ptr))(v5 + 24))(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = a3[3];
  v8 = v19;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v19, v7, v6);
  v9 = v19[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v9;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_10;
  while (1)
  {
    *a2 = v11;
    a2 = (char **)v18 + 1;
    ++v8;
    if (!v10)
    {
      memset(v18, 0, sizeof(v18));
      goto LABEL_6;
    }
    if (*(_QWORD *)(v14 + 16))
      break;
    __break(1u);
LABEL_10:
    v11 = sub_21501E4D4((uint64_t)v11);
  }
  sub_21501EE90(v14 + 32, (uint64_t)&v16[8]);
  *(_QWORD *)&v18[0] = 0;
  *(_OWORD *)((char *)v18 + 8) = *(_OWORD *)&v16[8];
  *(_OWORD *)((char *)&v18[1] + 8) = *(_OWORD *)&v16[24];
  *((_QWORD *)&v18[2] + 1) = v17;
LABEL_6:
  sub_2150BE428((uint64_t)v18, (uint64_t)v19);
  if (v19[4])
  {
    v12 = *((_OWORD *)v8 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v8;
    *(_OWORD *)&v16[16] = v12;
    *(_QWORD *)&v16[32] = v8[4];
    *(_QWORD *)&v18[0] = v15;
    *((_QWORD *)&v18[0] + 1) = v7;
    *(_QWORD *)&v18[1] = v7;
    *((_QWORD *)&v18[1] + 1) = v5;
    *(_QWORD *)&v18[2] = v6;
    *((_QWORD *)&v18[2] + 1) = v6;
    type metadata accessor for HashJoin.JoinItem();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150D9140(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_2150D9150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21512F908();
  return sub_2150D9198(a1, v6, a2, a3);
}

unint64_t sub_2150D9198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  char v16;
  _QWORD v18[2];

  v5 = v4;
  v18[0] = a1;
  v18[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v5 + 32);
  v12 = v11 & ~v10;
  if (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v15(v9, *(_QWORD *)(v5 + 48) + v14 * v12, a3);
      v16 = sub_21512FA58();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_2150D92B0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_21513010C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2151305A4();
        swift_bridgeObjectRetain();
        sub_21512FB3C();
        v10 = sub_2151305EC();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_2150D9474(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_21513010C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_215130598() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_2150D95F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v22;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)&v22 = a2;
  *((_QWORD *)&v22 + 1) = a3;
  v11 = sub_215020508(MEMORY[0x24BEE4AF8]);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a8 + 32))(&v25, a4, a8);
  v12 = v27;
  v13 = v28;
  v14 = v29;
  v15 = v27;
  if ((_BYTE)v29)
  {
    if (v29 == 1 && *(_QWORD *)(v27 + 16))
    {
      v15 = *(_QWORD *)(v27 + 32);
    }
    else
    {
      sub_21508C520(v27, v28, v29);
      if ((v17 & 1) != 0)
        v15 = 0;
      else
        v15 = v16;
    }
  }
  v24 = v14;
  sub_21508C520(v12, v13, v14);
  if ((v19 & 1) != 0)
    v20 = 0;
  else
    v20 = v18;
  if (v15 != v20)
  {
    v25 = v22;
    v26 = a4;
    v27 = a6;
    v28 = a7;
    v29 = a8;
    type metadata accessor for HashJoin.JoinItem();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v12, v13, v24);
  sub_2150D9140(0);
  return v11;
}

uint64_t Column<A>.encoded<A>(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t TupleTypeMetadata2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  __int128 v97;
  unint64_t v98;
  uint64_t v99;
  __int128 v100;
  unint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  unint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;

  v86 = a4;
  v84 = a1;
  v77 = a6;
  v75 = sub_2151301FC();
  v76 = *(_QWORD *)(v75 - 8);
  v10 = MEMORY[0x24BDAC7A8](v75);
  v72 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v69 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v69 - v14;
  v87 = a5;
  v85 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v93 = AssociatedTypeWitness;
  v83 = sub_215130064();
  v82 = *(_QWORD *)(v83 - 8);
  v16 = MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v69 - v17;
  v90 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v80 = (char *)&v69 - v18;
  v19 = a2;
  v78 = *(_QWORD *)(a2 + 16);
  v20 = v78;
  v21 = sub_215130064();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v69 - v24;
  v91 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v88 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v28 = sub_215130064();
  MEMORY[0x24BDAC7A8](v28);
  v89 = (char *)&v69 - v29;
  v31 = v6[1];
  v32 = v6[2];
  v107 = *v6;
  v30 = v107;
  v108 = v31;
  v109 = v32;
  v96 = v32;
  swift_bridgeObjectRetain();
  v33 = Column.count.getter(v19);
  Column.init(name:capacity:)(v30, v31, v33, v93, &v110);
  *(_QWORD *)&v104 = v30;
  *((_QWORD *)&v104 + 1) = v31;
  v105 = v32;
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v19);
  sub_21512FE30();
  v103 = v97;
  v70 = v30;
  *(_QWORD *)&v100 = v30;
  v71 = v31;
  *((_QWORD *)&v100 + 1) = v31;
  v34 = v78;
  v35 = v89;
  v101 = v96;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
  v96 = sub_2150903B0();
  v112 = v19;
  v37 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v19);
  v38 = v96;
  sub_215130490();
  v100 = v104;
  v101 = v105;
  v102 = v106;
  v95 = v36;
  *(_QWORD *)&v97 = v36;
  *((_QWORD *)&v97 + 1) = v112;
  v98 = v38;
  v94 = v37;
  v99 = v37;
  sub_2151301A8();
  sub_215130184();
  v79 = TupleTypeMetadata2;
  while (1)
  {
    while (1)
    {
      *(_QWORD *)&v104 = v95;
      *((_QWORD *)&v104 + 1) = v112;
      v105 = v96;
      *(_QWORD *)&v106 = v94;
      sub_21513019C();
      sub_215130190();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v35, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        result = swift_bridgeObjectRelease();
        v58 = v77;
        *v77 = v110;
        *(_OWORD *)(v58 + 1) = v111;
        return result;
      }
      v46 = *(_QWORD *)v35;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, &v35[*(int *)(TupleTypeMetadata2 + 48)], v21);
      v47 = v91;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v25, 1, v34) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
      v39 = (uint64_t)v81;
      v40 = v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v81, 1, 1, v93);
      v43 = type metadata accessor for Column(0, v40, v41, v42);
      Column.append(_:)(v39, v43, v44, v45);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v39, v83);
    }
    v48 = v22;
    v49 = v21;
    v50 = v88;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v88, v25, v34);
    v51 = (uint64_t)v80;
    v52 = v92;
    sub_21512F80C();
    if (v52)
      break;
    v92 = 0;
    v55 = v93;
    v56 = type metadata accessor for Column(0, v93, v53, v54);
    Column.append(_:)(v51, v56);
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v51, v55);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v34);
    v21 = v49;
    v22 = v48;
    TupleTypeMetadata2 = v79;
    v35 = v89;
  }
  v59 = v34;
  *(_QWORD *)&v104 = v52;
  MEMORY[0x2199DC41C](v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
  v60 = v74;
  v61 = v75;
  if (swift_dynamicCast())
  {
    MEMORY[0x2199DC410](v52);
    v62 = v76;
    v63 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
    v64 = v73;
    v63(v73, v60, v61);
    v65 = v72;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v72, v64, v61);
    v66 = type metadata accessor for ColumnEncodingError();
    sub_2150DA1E4();
    swift_allocError();
    v67 = v71;
    *v68 = v70;
    v68[1] = v67;
    v68[2] = v46;
    v63((char *)v68 + *(int *)(v66 + 24), v65, v61);
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v61);
  }
  (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v59);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x2199DC410](v104);
}

uint64_t type metadata accessor for ColumnEncodingError()
{
  uint64_t result;

  result = qword_254DA8930;
  if (!qword_254DA8930)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2150DA1E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA88C8;
  if (!qword_254DA88C8)
  {
    v1 = type metadata accessor for ColumnEncodingError();
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnEncodingError, v1);
    atomic_store(result, (unint64_t *)&qword_254DA88C8);
  }
  return result;
}

uint64_t ColumnEncodingError.init(columnName:rowIndex:encodingError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  v7 = sub_2151301FC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

uint64_t AnyColumn.encoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = v6;
  v34 = a6;
  v15 = v6[3];
  v14 = v6[4];
  __swift_project_boxed_opaque_existential_1(v8, v15);
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 80))(v15) == a2)
  {
    sub_21504C608((uint64_t)v8, (uint64_t)v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
    v18 = type metadata accessor for Column(0, a2, v16, v17);
    swift_dynamicCast();
    Column<A>.encoded<A>(using:)(a1, v18, a3, a4, a5, &v28);
    swift_release();
    result = swift_bridgeObjectRelease();
    if (!v7)
    {
      v31[0] = v28;
      v31[1] = v29;
      v31[2] = v30;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v23 = type metadata accessor for Column(0, AssociatedTypeWitness, v21, v22);
      Column.eraseToAnyColumn()(v23, v24, v25, v34);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21501EE90((uint64_t)v8, (uint64_t)v31);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v27 = v32;
    v26 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 8) + 80))(v27);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumn.encode<A, B>(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[40];
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29;

  v7 = v6;
  v14 = v6[3];
  v13 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v14);
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 80))(v14) == a3)
  {
    sub_21504C608((uint64_t)v7, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D178);
    v17 = type metadata accessor for Column(0, a3, v15, v16);
    swift_dynamicCast();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v27 = type metadata accessor for Column(0, AssociatedTypeWitness, v19, v20);
    v28 = &off_24D2A4440;
    v21 = v29;
    Column<A>.encoded<A>(using:)(a2, v17, a4, a5, a6, &v26);
    swift_release();
    swift_bridgeObjectRelease();
    if (v21)
    {
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v26);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
      return sub_2150459B0(&v26, (uint64_t)v7);
    }
  }
  else
  {
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    v24 = v7[3];
    v23 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v24);
    (*(void (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 80))(v24);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.encodeColumn<A, B>(_:_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;

  v9 = v8;
  v15 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_21501F2BC(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_21501E4D4(v15);
  v15 = result;
  if ((v16 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v16 < *(_QWORD *)(v15 + 16))
  {
    result = AnyColumn.encode<A, B>(_:using:)(result, a4, a5, a6, a7, a8);
    *v9 = v15;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DataFrame.encodeColumn<A, B>(_:using:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v7 = v6;
  v11 = *a1;
  v12 = a1[1];
  v13 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_21501F2BC(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_21501E4D4(v13);
  v13 = result;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v14 < *(_QWORD *)(v13 + 16))
  {
    result = AnyColumn.encode<A, B>(_:using:)(result, a2, a3, a4, a5, a6);
    *v7 = v13;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ColumnEncodingError.columnName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ColumnEncodingError.columnName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ColumnEncodingError.columnName.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t ColumnEncodingError.rowIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ColumnEncodingError.rowIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ColumnEncodingError.rowIndex.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t ColumnEncodingError.encodingError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  v4 = sub_2151301FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ColumnEncodingError.encodingError.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  v4 = sub_2151301FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ColumnEncodingError.encodingError.modify())(_QWORD)
{
  type metadata accessor for ColumnEncodingError();
  return nullsub_5;
}

uint64_t ColumnEncodingError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = sub_2151301F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2151301FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColumnEncodingError();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + *(int *)(v9 + 24), v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x24BEE2728])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA88D0);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v8[*(int *)(v10 + 48)], v1);
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_215130178();
    swift_bridgeObjectRelease();
    v15 = 0x6D756C6F63206E49;
    v16 = 0xEB0000000027206ELL;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v14 = *(_QWORD *)(v0 + 16);
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151301C0();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    v11 = v15;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v14 = *(_QWORD *)(v0 + 16);
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_2151302A4();
    v11 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for ColumnEncodingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2151301FC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ColumnEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2151301FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ColumnEncodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2151301FC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ColumnEncodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2151301FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ColumnEncodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2151301FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ColumnEncodingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2151301FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnEncodingError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2150DB0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2151301FC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ColumnEncodingError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2150DB158(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2151301FC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2150DB1CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2151301FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for DateColumnProcessor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v6 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  v7 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v7;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  v8 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v8;
  v9 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v4;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_WORD *)(a1 + 171) = *(_WORD *)(a2 + 171);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateColumnProcessor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 256))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 256) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 256) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateColumnProcessor()
{
  return &type metadata for DateColumnProcessor;
}

uint64_t sub_2150DB968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = sub_21512F740();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2150C03F0(a1, a2, *(_QWORD *)(v4 + 104)) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    sub_2150EE438((uint64_t)v11);
    return sub_215066908((uint64_t)v11);
  }
  v36 = a3;
  v19 = sub_2150E42EC(a1, a2);
  if (!v20)
  {
    v22 = 0;
    v23 = *(_QWORD *)(v4 + 200);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D50);
    v41 = v30;
    v42 = sub_2150DBCF4();
    v39 = a1;
    v40 = a2;
    v31 = __swift_project_boxed_opaque_existential_1(&v39, v30);
    if (*v31)
      v32 = (_BYTE *)(*v31 + v31[1]);
    else
      v32 = 0;
    sub_215058FEC((_BYTE *)*v31, v32, &v37);
    v29 = v37;
    v27 = v38;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
    v28 = 0;
    goto LABEL_13;
  }
  v35 = a2;
  v21 = v20;
  sub_2150C0AA4(v19, v20, v13);
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_215066908((uint64_t)v13);
    v23 = *(_QWORD *)(v4 + 200);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D50);
    v41 = v24;
    v42 = sub_2150DBCF4();
    v39 = a1;
    v40 = v35;
    v25 = __swift_project_boxed_opaque_existential_1(&v39, v24);
    if (*v25)
      v26 = (_BYTE *)(*v25 + v25[1]);
    else
      v26 = 0;
    sub_215058FEC((_BYTE *)*v25, v26, &v37);
    v27 = v37;
    v28 = v38;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
    v29 = 4;
LABEL_13:
    sub_2150602A0();
    swift_allocError();
    *(_QWORD *)v33 = v36;
    *(_QWORD *)(v33 + 8) = v23;
    *(_QWORD *)(v33 + 16) = v29;
    *(_QWORD *)(v33 + 24) = v27;
    *(_QWORD *)(v33 + 32) = v28;
    *(_BYTE *)(v33 + 40) = v22 != 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_2150EE438((uint64_t)v11);
  sub_215066908((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_2150DBC68@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v1[29];
  v3 = v1[30];
  v5 = v1[31];
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1A0);
  a1[4] = &off_24D2A4440;
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2150DBCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 232) = a1;
  *(_QWORD *)(v2 + 240) = a2;
  return result;
}

unint64_t sub_2150DBCF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA7D58;
  if (!qword_254DA7D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7D50);
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BDCF860], v1);
    atomic_store(result, (unint64_t *)&qword_254DA7D58);
  }
  return result;
}

uint64_t AnyColumnSlice.name.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

uint64_t AnyColumnSlice.wrappedElementType.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 80))(v2);
}

uint64_t AnyColumnSlice.assumingType<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v9 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v4, v9);
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 80))(v9) == a1)
  {
    sub_21504C608((uint64_t)v4, (uint64_t)&v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C30);
    v12 = type metadata accessor for ColumnSlice(0, a2, v10, v11);
    if (swift_dynamicCast())
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_21504C608((uint64_t)v4, (uint64_t)&v36);
      swift_dynamicCast();
      v36 = v32;
      v37 = v33;
      v38 = v34;
      v39 = v35;
      v15 = type metadata accessor for Column(255, a2, v13, v14);
      MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v15);
      sub_215130544();
      sub_215130508();
      v16 = *((_QWORD *)&v32 + 1);
      v27 = v32;
      v17 = v33;
      v36 = v32;
      v37 = v33;
      v38 = v34;
      v39 = v35;
      MEMORY[0x2199DC4C4](&protocol conformance descriptor for ColumnSlice<A>, v12);
      sub_21512FE30();
      v36 = v28;
      sub_21507E57C((uint64_t)&v36, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], v18, (uint64_t)&v29);
      v19 = v29;
      v20 = v30;
      v21 = v31;
      *(_QWORD *)&v36 = v27;
      *((_QWORD *)&v36 + 1) = v16;
      v37 = v17;
      sub_21507300C(v29, v30, v31, v15, a3);
      sub_21501EF2C(v19, v20, v21);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_21504C608((uint64_t)v4, (uint64_t)&v36);
      type metadata accessor for DiscontiguousColumnSlice(0, a2, v23, v24);
      return swift_dynamicCast();
    }
  }
  else
  {
    sub_2150452A8((uint64_t)v4, (uint64_t)&v36);
    sub_215130178();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v32 = 0xD00000000000001CLL;
    *((_QWORD *)&v32 + 1) = 0x8000000215130FB0;
    v25 = v38;
    v26 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 8) + 80))(v25);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumnSlice.missingCount.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 56))(v2);
}

uint64_t sub_2150DC13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD **v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _QWORD **v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  _BYTE v78[7];
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _BYTE v87[7];
  uint64_t v88;
  char v89;
  _BYTE v90[7];
  __int128 v91;
  char v92;
  uint64_t v93;
  _QWORD v94[5];
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  v59 = *(_QWORD *)v1;
  v54 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v51 = *(unsigned __int8 *)(v1 + 40);
  v93 = MEMORY[0x24BEE4B08];
  v91 = 0uLL;
  v92 = 2;
  sub_21508C220(&v72);
  v53 = v72;
  v63 = v74;
  v64 = v73;
  v61 = v76;
  v62 = v75;
  v60 = v77;
  v5 = v79;
  v6 = *(_QWORD *)(v1 + 8);
  v50 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 24);
  v70 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 32);
  v65 = v80;
  v66 = v8;
  v9 = v7;
  v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(_BYTE *)(v1 + 40))
  {
    if (v10 == 1 && *(_QWORD *)(v7 + 16))
    {
      v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v70 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v44 = 0;
        v43 = 128;
        goto LABEL_57;
      }
      v11 = (uint64_t *)(v12 + 8);
    }
    v9 = *v11;
  }
  v52 = v9;
  if (v5 == v65)
  {
    sub_215053BA4(v1);
    v13 = v5;
    v14 = v52;
LABEL_41:
    v72 = v53;
    v73 = v64;
    v74 = v63;
    v75 = v62;
    v76 = v61;
    v77 = v60;
    *(_DWORD *)v78 = v71;
    *(_DWORD *)&v78[3] = *(_DWORD *)((char *)&v71 + 3);
    v79 = v5;
    v80 = v65;
    v81 = v13;
    v82 = v59;
    v83 = v54;
    v84 = v3;
    v85 = v4;
    v86 = v51;
    *(_DWORD *)v87 = *(_DWORD *)v90;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v90[3];
    v88 = v14;
    v89 = 1;
    sub_2150C79E4((uint64_t)&v72);
    swift_bridgeObjectRelease();
    v40 = v92;
    *(_QWORD *)a1 = v50;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v70;
    *(_OWORD *)(a1 + 24) = v91;
    *(_BYTE *)(a1 + 40) = v40;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v57 = v10;
  v46 = v4;
  v47 = v3;
  v48 = v6;
  v49 = a1;
  v96 = v53;
  v97 = v64;
  v98 = v63;
  v99 = v62;
  v100 = v61;
  v101 = v60;
  sub_215053BA4(v1);
  v58 = (_QWORD **)(v70 + 16);
  swift_beginAccess();
  v55 = v7 + 32;
  v56 = v54;
  v45 = v5;
  v15 = v5;
  v14 = v52;
  while (1)
  {
    v69 = v14;
    v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v61;
    v18 = v62;
    v19 = v60;
    sub_2150437A8(v62, v61, v60);
    v67 = v15;
    v68 = sub_21509B1BC(v15);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_21501EF2C(v18, v17, v19);
    v21 = v58;
    if (!*v58)
      goto LABEL_47;
    v22 = v69;
    if (v69 == (*v58)[1])
    {
      v14 = v69;
      v6 = v48;
      a1 = v49;
      v4 = v46;
      v3 = v47;
      v5 = v45;
      v13 = v68;
      goto LABEL_41;
    }
    v7 = v16;
    v94[0] = v59;
    v94[1] = v56;
    v94[2] = v70;
    v94[3] = v16;
    v23 = v66;
    v94[4] = v66;
    v24 = v57;
    v95 = v57;
    v72 = v69;
    MEMORY[0x24BDAC7A8](v20);
    v43 = (uint64_t)&v72;
    sub_2150437A8(v7, v23, v24);
    sub_2150437A8(v7, v23, v24);
    v25 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509BFB8, (uint64_t)&v42, v7, v23, v24);
    sub_21501EF2C(v7, v23, v24);
    if (!v24)
    {
      v26 = v7;
      if (v25)
        goto LABEL_44;
      goto LABEL_21;
    }
    if (v24 != 1)
      break;
    v27 = *(_QWORD *)(v7 + 16);
    if (v25 == v27)
    {
      sub_21501EF2C(v7, v66, 1);
LABEL_54:
      v52 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27)
      goto LABEL_46;
    v26 = *(_QWORD *)(v55 + 16 * v25);
    sub_21501EF2C(v7, v66, 1);
LABEL_21:
    if (v72 < v26)
      goto LABEL_56;
    if (v22 < 0)
      goto LABEL_50;
    v28 = *v21;
    if (!*v21)
      goto LABEL_48;
    if (v22 >= v28[1])
      goto LABEL_50;
    v29 = sub_215099328(v22, v28, v70);
    v31 = v30;
    v25 = (unint64_t)v94;
    v14 = sub_21509B1BC(v22);
    v32 = v31 & 1;
    v33 = v93;
    if (*(_QWORD *)(v93 + 16))
    {
      sub_2151305A4();
      sub_2151305BC();
      if (!v32)
        sub_2151305B0();
      v25 = (unint64_t)&v72;
      v34 = sub_2151305EC();
      v35 = -1 << *(_BYTE *)(v33 + 32);
      v36 = v34 & ~v35;
      if (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
      {
        v37 = ~v35;
        do
        {
          v38 = *(_QWORD *)(v33 + 48) + 16 * v36;
          if ((*(_BYTE *)(v38 + 8) & 1) != 0)
          {
            if (v32)
              goto LABEL_11;
          }
          else if (!v32 && *(_QWORD *)v38 == v29)
          {
            goto LABEL_11;
          }
          v36 = (v36 + 1) & v37;
        }
        while (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0);
      }
    }
    v39 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v39 < v67)
      goto LABEL_43;
    sub_2150757D4(v67, v39);
    sub_21503AE98((uint64_t)&v72, v29, v32);
LABEL_11:
    v15 = v68;
    if (v68 == v65)
    {
      v13 = v65;
      v6 = v48;
      a1 = v49;
      v4 = v46;
      v3 = v47;
      v5 = v45;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    v44 = 0;
    v43 = 91;
    goto LABEL_57;
  }
LABEL_55:
  v69 = v52;
LABEL_56:
  v72 = 0;
  v73 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v72 = 0x6E6F697469736F70;
  v73 = 0xE900000000000020;
  v71 = v69;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v44 = 0;
  v43 = 169;
LABEL_57:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DC850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  _BYTE v84[7];
  int64_t v85;
  int64_t v86;
  int64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  _BYTE v93[7];
  uint64_t v94;
  char v95;
  _BYTE v96[7];
  __int128 v97;
  char v98;
  uint64_t v99;
  _QWORD v100[5];
  char v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;

  v65 = *(_QWORD *)v1;
  v60 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v99 = MEMORY[0x24BEE4B08];
  v97 = 0uLL;
  v98 = 2;
  sub_21508C220(&v78);
  v59 = v78;
  v69 = v80;
  v70 = v79;
  v67 = v82;
  v68 = v81;
  v66 = v83;
  v6 = v85;
  v7 = *(_QWORD *)(v1 + 8);
  v57 = *(_QWORD *)v1;
  v8 = *(_QWORD *)(v1 + 24);
  v76 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 32);
  v71 = v86;
  v72 = v9;
  v10 = v8;
  v11 = *(unsigned __int8 *)(v1 + 40);
  v55 = v3;
  if (v11)
  {
    if (v11 == 1 && *(_QWORD *)(v8 + 16))
    {
      v12 = (uint64_t *)(v8 + 32);
    }
    else
    {
      swift_beginAccess();
      v13 = *(_QWORD *)(v76 + 16);
      if (!v13)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v50 = 0;
        v49 = 128;
        goto LABEL_57;
      }
      v12 = (uint64_t *)(v13 + 8);
      v3 = v55;
    }
    v10 = *v12;
  }
  v58 = v10;
  v56 = v5;
  if (v6 == v71)
  {
    sub_215053BA4(v1);
    v14 = v6;
    v15 = v58;
LABEL_41:
    v78 = v59;
    v79 = v70;
    v80 = v69;
    v81 = v68;
    v82 = v67;
    v83 = v66;
    *(_DWORD *)v84 = v77;
    *(_DWORD *)&v84[3] = *(_DWORD *)((char *)&v77 + 3);
    v85 = v6;
    v86 = v71;
    v87 = v14;
    v88 = v65;
    v89 = v60;
    v90 = v3;
    v91 = v4;
    v92 = v56;
    *(_DWORD *)v93 = *(_DWORD *)v96;
    *(_DWORD *)&v93[3] = *(_DWORD *)&v96[3];
    v94 = v15;
    v95 = 1;
    sub_2150C79E4((uint64_t)&v78);
    swift_bridgeObjectRelease();
    v46 = v98;
    *(_QWORD *)a1 = v57;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v76;
    *(_OWORD *)(a1 + 24) = v97;
    *(_BYTE *)(a1 + 40) = v46;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v63 = v11;
  v52 = v4;
  v53 = v7;
  v54 = a1;
  v102 = v59;
  v103 = v70;
  v104 = v69;
  v105 = v68;
  v106 = v67;
  v107 = v66;
  sub_215053BA4(v1);
  swift_beginAccess();
  v61 = v8 + 32;
  v62 = v60;
  v51 = v6;
  v15 = v58;
  v64 = v76 + 16;
  while (1)
  {
    v75 = v15;
    v16 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v67;
    v18 = v68;
    v19 = v66;
    sub_2150437A8(v68, v67, v66);
    v73 = v6;
    v74 = sub_21509B1BC(v6);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = v18;
    v21 = v64;
    v22 = sub_21501EF2C(v20, v17, v19);
    if (!*(_QWORD *)v21)
      goto LABEL_47;
    v23 = v75;
    if (v75 == *(_QWORD *)(*(_QWORD *)v21 + 8))
    {
      v15 = v75;
      v7 = v53;
      a1 = v54;
      v3 = v55;
      v6 = v51;
      v4 = v52;
      v14 = v74;
      goto LABEL_41;
    }
    v8 = v16;
    v100[0] = v65;
    v100[1] = v62;
    v100[2] = v76;
    v100[3] = v16;
    v24 = v72;
    v100[4] = v72;
    v25 = v63;
    v101 = v63;
    v78 = v75;
    MEMORY[0x24BDAC7A8](v22);
    v49 = (uint64_t)&v78;
    sub_2150437A8(v8, v24, v25);
    sub_2150437A8(v8, v24, v25);
    v26 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v48, v8, v24, v25);
    sub_21501EF2C(v8, v24, v25);
    if (!v25)
    {
      v27 = v8;
      if (v26)
        goto LABEL_44;
      goto LABEL_21;
    }
    if (v25 != 1)
      break;
    v28 = *(_QWORD *)(v8 + 16);
    if (v26 == v28)
    {
      sub_21501EF2C(v8, v72, 1);
LABEL_54:
      v58 = v23;
      goto LABEL_55;
    }
    if (v26 >= v28)
      goto LABEL_46;
    v27 = *(_QWORD *)(v61 + 16 * v26);
    sub_21501EF2C(v8, v72, 1);
LABEL_21:
    if (v78 < v27)
      goto LABEL_56;
    if (v23 < 0)
      goto LABEL_50;
    v29 = *(_QWORD **)v21;
    if (!*(_QWORD *)v21)
      goto LABEL_48;
    if (v23 >= v29[1])
      goto LABEL_50;
    v30 = sub_2150997D4(v23, v29, v76);
    v26 = (unint64_t)v100;
    v15 = sub_21509B1BC(v23);
    v31 = v99;
    if (*(_QWORD *)(v99 + 16))
    {
      sub_2151305A4();
      sub_2151305BC();
      if ((v30 & 0x10000) == 0)
        sub_2151305C8();
      v26 = (unint64_t)&v78;
      v32 = sub_2151305EC();
      v33 = -1 << *(_BYTE *)(v31 + 32);
      v34 = v32 & ~v33;
      if (((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
      {
        v35 = ~v33;
        _H0 = v30;
        do
        {
          v37 = *(_QWORD *)(v31 + 48) + 4 * v34;
          if ((*(_BYTE *)(v37 + 2) & 1) != 0)
          {
            if ((v30 & 0x10000) != 0)
              goto LABEL_11;
          }
          else if ((v30 & 0x10000) == 0)
          {
            _H1 = *(_WORD *)v37;
            __asm
            {
              FCVT            S2, H0
              FCVT            S1, H1
            }
            if (_S1 == _S2)
              goto LABEL_11;
          }
          v34 = (v34 + 1) & v35;
        }
        while (((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
      }
    }
    v45 = v73 + 1;
    if (__OFADD__(v73, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v26 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v45 < v73)
      goto LABEL_43;
    sub_2150757D4(v73, v45);
    sub_21503AD30((uint64_t)&v78, v30 & 0x1FFFF);
LABEL_11:
    v6 = v74;
    if (v74 == v71)
    {
      v14 = v71;
      v7 = v53;
      a1 = v54;
      v3 = v55;
      v6 = v51;
      v4 = v52;
      goto LABEL_41;
    }
  }
  if (v26)
  {
    v50 = 0;
    v49 = 91;
    goto LABEL_57;
  }
LABEL_55:
  v75 = v58;
LABEL_56:
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v78 = 0x6E6F697469736F70;
  v79 = 0xE900000000000020;
  v77 = v75;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v50 = 0;
  v49 = 169;
LABEL_57:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DCF6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  _BYTE v76[7];
  int64_t v77;
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  _BYTE v85[7];
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  __int128 v89;
  char v90;
  uint64_t v91;
  _QWORD v92[5];
  char v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;

  v57 = *(_QWORD *)v1;
  v52 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v91 = MEMORY[0x24BEE4B08];
  v89 = 0uLL;
  v90 = 2;
  sub_21508C220(&v70);
  v51 = v70;
  v61 = v72;
  v62 = v71;
  v59 = v74;
  v60 = v73;
  v58 = v75;
  v6 = v77;
  v7 = *(_QWORD *)(v1 + 8);
  v49 = *(_QWORD *)v1;
  v8 = *(_QWORD *)(v1 + 24);
  v68 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 32);
  v63 = v78;
  v64 = v9;
  v10 = v8;
  v11 = *(unsigned __int8 *)(v1 + 40);
  v47 = v3;
  if (v11)
  {
    if (v11 == 1 && *(_QWORD *)(v8 + 16))
    {
      v12 = (uint64_t *)(v8 + 32);
    }
    else
    {
      swift_beginAccess();
      v13 = *(_QWORD *)(v68 + 16);
      if (!v13)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v42 = 0;
        v41 = 128;
        goto LABEL_57;
      }
      v12 = (uint64_t *)(v13 + 8);
      v3 = v47;
    }
    v10 = *v12;
  }
  v50 = v10;
  v48 = v5;
  if (v6 == v63)
  {
    sub_215053BA4(v1);
    v14 = v6;
    v15 = v50;
LABEL_41:
    v70 = v51;
    v71 = v62;
    v72 = v61;
    v73 = v60;
    v74 = v59;
    v75 = v58;
    *(_DWORD *)v76 = v69;
    *(_DWORD *)&v76[3] = *(_DWORD *)((char *)&v69 + 3);
    v77 = v6;
    v78 = v63;
    v79 = v14;
    v80 = v57;
    v81 = v52;
    v82 = v3;
    v83 = v4;
    v84 = v48;
    *(_DWORD *)v85 = *(_DWORD *)v88;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v88[3];
    v86 = v15;
    v87 = 1;
    sub_2150C79E4((uint64_t)&v70);
    swift_bridgeObjectRelease();
    v38 = v90;
    *(_QWORD *)a1 = v49;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v68;
    *(_OWORD *)(a1 + 24) = v89;
    *(_BYTE *)(a1 + 40) = v38;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v55 = v11;
  v44 = v4;
  v45 = v7;
  v46 = a1;
  v94 = v51;
  v95 = v62;
  v96 = v61;
  v97 = v60;
  v98 = v59;
  v99 = v58;
  sub_215053BA4(v1);
  swift_beginAccess();
  v53 = v8 + 32;
  v54 = v52;
  v43 = v6;
  v15 = v50;
  v56 = v68 + 16;
  while (1)
  {
    v67 = v15;
    v16 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v59;
    v18 = v60;
    v19 = v58;
    sub_2150437A8(v60, v59, v58);
    v65 = v6;
    v66 = sub_21509B1BC(v6);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = v18;
    v21 = v56;
    v22 = sub_21501EF2C(v20, v17, v19);
    if (!*(_QWORD *)v21)
      goto LABEL_47;
    v23 = v67;
    if (v67 == *(_QWORD *)(*(_QWORD *)v21 + 8))
    {
      v15 = v67;
      v7 = v45;
      a1 = v46;
      v3 = v47;
      v6 = v43;
      v4 = v44;
      v14 = v66;
      goto LABEL_41;
    }
    v8 = v16;
    v92[0] = v57;
    v92[1] = v54;
    v92[2] = v68;
    v92[3] = v16;
    v24 = v64;
    v92[4] = v64;
    v25 = v55;
    v93 = v55;
    v70 = v67;
    MEMORY[0x24BDAC7A8](v22);
    v41 = (uint64_t)&v70;
    sub_2150437A8(v8, v24, v25);
    sub_2150437A8(v8, v24, v25);
    v26 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v40, v8, v24, v25);
    sub_21501EF2C(v8, v24, v25);
    if (!v25)
    {
      v27 = v8;
      if (v26)
        goto LABEL_44;
      goto LABEL_21;
    }
    if (v25 != 1)
      break;
    v28 = *(_QWORD *)(v8 + 16);
    if (v26 == v28)
    {
      sub_21501EF2C(v8, v64, 1);
LABEL_54:
      v50 = v23;
      goto LABEL_55;
    }
    if (v26 >= v28)
      goto LABEL_46;
    v27 = *(_QWORD *)(v53 + 16 * v26);
    sub_21501EF2C(v8, v64, 1);
LABEL_21:
    if (v70 < v27)
      goto LABEL_56;
    if (v23 < 0)
      goto LABEL_50;
    v29 = *(_QWORD **)v21;
    if (!*(_QWORD *)v21)
      goto LABEL_48;
    if (v23 >= v29[1])
      goto LABEL_50;
    v30 = sub_21509972C(v23, v29, v68);
    v26 = (unint64_t)v92;
    v15 = sub_21509B1BC(v23);
    v31 = v91;
    if (*(_QWORD *)(v91 + 16))
    {
      sub_2151305A4();
      sub_2151305BC();
      if ((v30 & 0x100000000) == 0)
        sub_2151305D4();
      v26 = (unint64_t)&v70;
      v32 = sub_2151305EC();
      v33 = -1 << *(_BYTE *)(v31 + 32);
      v34 = v32 & ~v33;
      if (((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
      {
        v35 = ~v33;
        do
        {
          v36 = *(_QWORD *)(v31 + 48) + 8 * v34;
          if ((*(_BYTE *)(v36 + 4) & 1) != 0)
          {
            if ((v30 & 0x100000000) != 0)
              goto LABEL_11;
          }
          else if ((v30 & 0x100000000) == 0 && *(float *)v36 == *(float *)&v30)
          {
            goto LABEL_11;
          }
          v34 = (v34 + 1) & v35;
        }
        while (((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
      }
    }
    v37 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v26 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v37 < v65)
      goto LABEL_43;
    sub_2150757D4(v65, v37);
    sub_21503ABC0((uint64_t)&v70, v30 | ((HIDWORD(v30) & 1) << 32));
LABEL_11:
    v6 = v66;
    if (v66 == v63)
    {
      v14 = v63;
      v7 = v45;
      a1 = v46;
      v3 = v47;
      v6 = v43;
      v4 = v44;
      goto LABEL_41;
    }
  }
  if (v26)
  {
    v42 = 0;
    v41 = 91;
    goto LABEL_57;
  }
LABEL_55:
  v67 = v50;
LABEL_56:
  v70 = 0;
  v71 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v70 = 0x6E6F697469736F70;
  v71 = 0xE900000000000020;
  v69 = v67;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v42 = 0;
  v41 = 169;
LABEL_57:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DD690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD **v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  double v29;
  char v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _QWORD **v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  _BYTE v78[7];
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _BYTE v87[7];
  uint64_t v88;
  char v89;
  _BYTE v90[7];
  __int128 v91;
  char v92;
  uint64_t v93;
  _QWORD v94[5];
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  v59 = *(_QWORD *)v1;
  v54 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v51 = *(unsigned __int8 *)(v1 + 40);
  v93 = MEMORY[0x24BEE4B08];
  v91 = 0uLL;
  v92 = 2;
  sub_21508C220(&v72);
  v53 = v72;
  v63 = v74;
  v64 = v73;
  v61 = v76;
  v62 = v75;
  v60 = v77;
  v5 = v79;
  v6 = *(_QWORD *)(v1 + 8);
  v50 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 24);
  v70 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 32);
  v65 = v80;
  v66 = v8;
  v9 = v7;
  v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(_BYTE *)(v1 + 40))
  {
    if (v10 == 1 && *(_QWORD *)(v7 + 16))
    {
      v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v70 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v44 = 0;
        v43 = 128;
        goto LABEL_57;
      }
      v11 = (uint64_t *)(v12 + 8);
    }
    v9 = *v11;
  }
  v52 = v9;
  if (v5 == v65)
  {
    sub_215053BA4(v1);
    v13 = v5;
    v14 = v52;
LABEL_41:
    v72 = v53;
    v73 = v64;
    v74 = v63;
    v75 = v62;
    v76 = v61;
    v77 = v60;
    *(_DWORD *)v78 = v71;
    *(_DWORD *)&v78[3] = *(_DWORD *)((char *)&v71 + 3);
    v79 = v5;
    v80 = v65;
    v81 = v13;
    v82 = v59;
    v83 = v54;
    v84 = v3;
    v85 = v4;
    v86 = v51;
    *(_DWORD *)v87 = *(_DWORD *)v90;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v90[3];
    v88 = v14;
    v89 = 1;
    sub_2150C79E4((uint64_t)&v72);
    swift_bridgeObjectRelease();
    v40 = v92;
    *(_QWORD *)a1 = v50;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v70;
    *(_OWORD *)(a1 + 24) = v91;
    *(_BYTE *)(a1 + 40) = v40;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v57 = v10;
  v46 = v4;
  v47 = v3;
  v48 = v6;
  v49 = a1;
  v96 = v53;
  v97 = v64;
  v98 = v63;
  v99 = v62;
  v100 = v61;
  v101 = v60;
  sub_215053BA4(v1);
  v58 = (_QWORD **)(v70 + 16);
  swift_beginAccess();
  v55 = v7 + 32;
  v56 = v54;
  v45 = v5;
  v15 = v5;
  v14 = v52;
  while (1)
  {
    v69 = v14;
    v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v61;
    v18 = v62;
    v19 = v60;
    sub_2150437A8(v62, v61, v60);
    v67 = v15;
    v68 = sub_21509B1BC(v15);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_21501EF2C(v18, v17, v19);
    v21 = v58;
    if (!*v58)
      goto LABEL_47;
    v22 = v69;
    if (v69 == (*v58)[1])
    {
      v14 = v69;
      v6 = v48;
      a1 = v49;
      v4 = v46;
      v3 = v47;
      v5 = v45;
      v13 = v68;
      goto LABEL_41;
    }
    v7 = v16;
    v94[0] = v59;
    v94[1] = v56;
    v94[2] = v70;
    v94[3] = v16;
    v23 = v66;
    v94[4] = v66;
    v24 = v57;
    v95 = v57;
    v72 = v69;
    MEMORY[0x24BDAC7A8](v20);
    v43 = (uint64_t)&v72;
    sub_2150437A8(v7, v23, v24);
    sub_2150437A8(v7, v23, v24);
    v25 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v42, v7, v23, v24);
    sub_21501EF2C(v7, v23, v24);
    if (!v24)
    {
      v26 = v7;
      if (v25)
        goto LABEL_44;
      goto LABEL_21;
    }
    if (v24 != 1)
      break;
    v27 = *(_QWORD *)(v7 + 16);
    if (v25 == v27)
    {
      sub_21501EF2C(v7, v66, 1);
LABEL_54:
      v52 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27)
      goto LABEL_46;
    v26 = *(_QWORD *)(v55 + 16 * v25);
    sub_21501EF2C(v7, v66, 1);
LABEL_21:
    if (v72 < v26)
      goto LABEL_56;
    if (v22 < 0)
      goto LABEL_50;
    v28 = *v21;
    if (!*v21)
      goto LABEL_48;
    if (v22 >= v28[1])
      goto LABEL_50;
    v29 = COERCE_DOUBLE(sub_215099328(v22, v28, v70));
    v31 = v30;
    v25 = (unint64_t)v94;
    v14 = sub_21509B1BC(v22);
    v32 = v31 & 1;
    v33 = v93;
    if (*(_QWORD *)(v93 + 16))
    {
      sub_2151305A4();
      sub_2151305BC();
      if (!v32)
        sub_2151305E0();
      v25 = (unint64_t)&v72;
      v34 = sub_2151305EC();
      v35 = -1 << *(_BYTE *)(v33 + 32);
      v36 = v34 & ~v35;
      if (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
      {
        v37 = ~v35;
        do
        {
          v38 = *(_QWORD *)(v33 + 48) + 16 * v36;
          if ((*(_BYTE *)(v38 + 8) & 1) != 0)
          {
            if (v32)
              goto LABEL_11;
          }
          else if (!v32 && *(double *)v38 == v29)
          {
            goto LABEL_11;
          }
          v36 = (v36 + 1) & v37;
        }
        while (((*(_QWORD *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0);
      }
    }
    v39 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v39 < v67)
      goto LABEL_43;
    sub_2150757D4(v67, v39);
    sub_21503AA4C((uint64_t)&v72, *(uint64_t *)&v29, v32);
LABEL_11:
    v15 = v68;
    if (v68 == v65)
    {
      v13 = v65;
      v6 = v48;
      a1 = v49;
      v4 = v46;
      v3 = v47;
      v5 = v45;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    v44 = 0;
    v43 = 91;
    goto LABEL_57;
  }
LABEL_55:
  v69 = v52;
LABEL_56:
  v72 = 0;
  v73 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v72 = 0x6E6F697469736F70;
  v73 = 0xE900000000000020;
  v71 = v69;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v44 = 0;
  v43 = 169;
LABEL_57:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DDDAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD **v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  _QWORD **v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  _BYTE v75[7];
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  char v86;
  _BYTE v87[7];
  __int128 v88;
  char v89;
  uint64_t v90;
  _QWORD v91[5];
  char v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;

  v56 = *(_QWORD *)v1;
  v51 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v48 = *(unsigned __int8 *)(v1 + 40);
  v90 = MEMORY[0x24BEE4B08];
  v88 = 0uLL;
  v89 = 2;
  sub_21508C220(&v69);
  v50 = v69;
  v60 = v71;
  v61 = v70;
  v58 = v73;
  v59 = v72;
  v57 = v74;
  v5 = v76;
  v6 = *(_QWORD *)(v1 + 8);
  v47 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 24);
  v67 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 32);
  v62 = v77;
  v63 = v8;
  v9 = v7;
  v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(_BYTE *)(v1 + 40))
  {
    if (v10 == 1 && *(_QWORD *)(v7 + 16))
    {
      v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v67 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v41 = 0;
        v40 = 128;
        goto LABEL_57;
      }
      v11 = (uint64_t *)(v12 + 8);
    }
    v9 = *v11;
  }
  v49 = v9;
  if (v5 == v62)
  {
    sub_215053BA4(v1);
    v13 = v5;
    v14 = v49;
LABEL_41:
    v69 = v50;
    v70 = v61;
    v71 = v60;
    v72 = v59;
    v73 = v58;
    v74 = v57;
    *(_DWORD *)v75 = v68;
    *(_DWORD *)&v75[3] = *(_DWORD *)((char *)&v68 + 3);
    v76 = v5;
    v77 = v62;
    v78 = v13;
    v79 = v56;
    v80 = v51;
    v81 = v3;
    v82 = v4;
    v83 = v48;
    *(_DWORD *)v84 = *(_DWORD *)v87;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v87[3];
    v85 = v14;
    v86 = 1;
    sub_2150C79E4((uint64_t)&v69);
    swift_bridgeObjectRelease();
    v37 = v89;
    *(_QWORD *)a1 = v47;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v67;
    *(_OWORD *)(a1 + 24) = v88;
    *(_BYTE *)(a1 + 40) = v37;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v54 = v10;
  v43 = v4;
  v44 = v3;
  v45 = v6;
  v46 = a1;
  v93 = v50;
  v94 = v61;
  v95 = v60;
  v96 = v59;
  v97 = v58;
  v98 = v57;
  sub_215053BA4(v1);
  v55 = (_QWORD **)(v67 + 16);
  swift_beginAccess();
  v52 = v7 + 32;
  v53 = v51;
  v42 = v5;
  v15 = v5;
  v14 = v49;
  while (1)
  {
    v66 = v14;
    v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v58;
    v18 = v59;
    v19 = v57;
    sub_2150437A8(v59, v58, v57);
    v64 = v15;
    v65 = sub_21509B1BC(v15);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_21501EF2C(v18, v17, v19);
    v21 = v55;
    if (!*v55)
      goto LABEL_47;
    v22 = v66;
    if (v66 == (*v55)[1])
    {
      v14 = v66;
      v6 = v45;
      a1 = v46;
      v4 = v43;
      v3 = v44;
      v5 = v42;
      v13 = v65;
      goto LABEL_41;
    }
    v7 = v16;
    v91[0] = v56;
    v91[1] = v53;
    v91[2] = v67;
    v91[3] = v16;
    v23 = v63;
    v91[4] = v63;
    v24 = v54;
    v92 = v54;
    v69 = v66;
    MEMORY[0x24BDAC7A8](v20);
    v40 = (uint64_t)&v69;
    sub_2150437A8(v7, v23, v24);
    sub_2150437A8(v7, v23, v24);
    v25 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v39, v7, v23, v24);
    sub_21501EF2C(v7, v23, v24);
    if (!v24)
    {
      v26 = v7;
      if (v25)
        goto LABEL_44;
      goto LABEL_21;
    }
    if (v24 != 1)
      break;
    v27 = *(_QWORD *)(v7 + 16);
    if (v25 == v27)
    {
      sub_21501EF2C(v7, v63, 1);
LABEL_54:
      v49 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27)
      goto LABEL_46;
    v26 = *(_QWORD *)(v52 + 16 * v25);
    sub_21501EF2C(v7, v63, 1);
LABEL_21:
    if (v69 < v26)
      goto LABEL_56;
    if (v22 < 0)
      goto LABEL_50;
    v28 = *v21;
    if (!*v21)
      goto LABEL_48;
    if (v22 >= v28[1])
      goto LABEL_50;
    v29 = sub_215099508(v22, v28, v67);
    v25 = (unint64_t)v91;
    v14 = sub_21509B1BC(v22);
    v30 = v90;
    if (*(_QWORD *)(v90 + 16))
    {
      sub_2151305A4();
      if (v29 != 2)
        sub_2151305BC();
      sub_2151305BC();
      v25 = (unint64_t)&v69;
      v31 = sub_2151305EC();
      v32 = -1 << *(_BYTE *)(v30 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
      {
        v34 = ~v32;
        do
        {
          v35 = *(unsigned __int8 *)(*(_QWORD *)(v30 + 48) + v33);
          if (v35 == 2)
          {
            if (v29 == 2)
              goto LABEL_11;
          }
          else if (v29 != 2 && ((((v29 & 1) == 0) ^ v35) & 1) != 0)
          {
            goto LABEL_11;
          }
          v33 = (v33 + 1) & v34;
        }
        while (((*(_QWORD *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0);
      }
    }
    v36 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v36 < v64)
      goto LABEL_43;
    sub_2150757D4(v64, v36);
    sub_21503A8EC(&v69, v29);
LABEL_11:
    v15 = v65;
    if (v65 == v62)
    {
      v13 = v62;
      v6 = v45;
      a1 = v46;
      v4 = v43;
      v3 = v44;
      v5 = v42;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    v41 = 0;
    v40 = 91;
    goto LABEL_57;
  }
LABEL_55:
  v66 = v49;
LABEL_56:
  v69 = 0;
  v70 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v69 = 0x6E6F697469736F70;
  v70 = 0xE900000000000020;
  v68 = v66;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v41 = 0;
  v40 = 169;
LABEL_57:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DE4D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  char v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  _BYTE v80[7];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _BYTE v89[7];
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  __int128 v93;
  char v94;
  uint64_t v95;
  _QWORD v96[5];
  char v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;

  v60 = *(_QWORD *)v1;
  v56 = *(_OWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v95 = MEMORY[0x24BEE4B08];
  v93 = 0uLL;
  v94 = 2;
  sub_21508C220(&v74);
  v55 = v74;
  v65 = v76;
  v66 = v75;
  v63 = v78;
  v64 = v77;
  v62 = v79;
  v6 = v81;
  v8 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v72 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v67 = v82;
  v68 = v10;
  v61 = v9;
  v59 = *(unsigned __int8 *)(v1 + 40);
  if (v59)
  {
    if (v59 == 1 && *(_QWORD *)(v61 + 16))
    {
      v11 = (uint64_t *)(v61 + 32);
    }
    else
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(v72 + 16);
      if (!v12)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        v46 = 0;
        v45 = 128;
        goto LABEL_64;
      }
      v11 = (uint64_t *)(v12 + 8);
    }
    v9 = *v11;
  }
  v54 = v9;
  if (v6 == v67)
  {
    sub_215053BA4(v1);
    v13 = v6;
    v14 = v54;
LABEL_48:
    v74 = v55;
    v75 = v66;
    v76 = v65;
    v77 = v64;
    v78 = v63;
    v79 = v62;
    *(_DWORD *)v80 = v73;
    *(_DWORD *)&v80[3] = *(_DWORD *)((char *)&v73 + 3);
    v81 = v6;
    v82 = v67;
    v83 = v13;
    v84 = v60;
    v85 = v56;
    v86 = v4;
    v87 = v3;
    v88 = v5;
    *(_DWORD *)v89 = *(_DWORD *)v92;
    *(_DWORD *)&v89[3] = *(_DWORD *)&v92[3];
    v90 = v14;
    v91 = 1;
    sub_2150C79E4((uint64_t)&v74);
    swift_bridgeObjectRelease();
    v42 = v94;
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v72;
    *(_OWORD *)(a1 + 24) = v93;
    *(_BYTE *)(a1 + 40) = v42;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v48 = v8;
  v49 = v5;
  v50 = v3;
  v51 = v4;
  v52 = v7;
  v53 = a1;
  v98 = v55;
  v99 = v66;
  v100 = v65;
  v101 = v64;
  v102 = v63;
  v103 = v62;
  sub_215053BA4(v1);
  v71 = v72 + 16;
  swift_beginAccess();
  v15 = 0;
  v57 = v61 + 32;
  v58 = v56;
  v47 = v6;
  v16 = v6;
  v14 = v54;
  while (1)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = v63;
    v17 = v64;
    v19 = v62;
    sub_2150437A8(v64, v63, v62);
    v13 = sub_21509B1BC(v16);
    swift_release();
    swift_bridgeObjectRelease();
    v20 = sub_21501EF2C(v17, v18, v19);
    if (!*(_QWORD *)v71)
      goto LABEL_54;
    v21 = v14;
    v22 = v61;
    v23 = v59;
    if (v14 == *(_QWORD *)(*(_QWORD *)v71 + 8))
      goto LABEL_47;
    v70 = v13;
    v96[0] = v60;
    v96[1] = v58;
    v96[2] = v72;
    v96[3] = v61;
    v24 = v68;
    v96[4] = v68;
    v97 = v59;
    v74 = v14;
    MEMORY[0x24BDAC7A8](v20);
    v45 = (uint64_t)&v74;
    sub_2150437A8(v22, v24, v23);
    sub_2150437A8(v22, v24, v23);
    v25 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v44, v22, v24, v23);
    sub_21501EF2C(v22, v24, v23);
    if (!v23)
    {
      v26 = v22;
      if (v25)
        goto LABEL_51;
      goto LABEL_22;
    }
    if (v23 != 1)
      break;
    v27 = *(_QWORD *)(v22 + 16);
    if (v25 == v27)
    {
      sub_21501EF2C(v22, v68, 1);
LABEL_61:
      v54 = v21;
      goto LABEL_62;
    }
    if (v25 >= v27)
      goto LABEL_53;
    v26 = *(_QWORD *)(v57 + 16 * v25);
    sub_21501EF2C(v22, v68, 1);
LABEL_22:
    if (v74 < v26)
      goto LABEL_63;
    if (v14 < 0)
      goto LABEL_57;
    v28 = *(_QWORD **)v71;
    if (!*(_QWORD *)v71)
      goto LABEL_55;
    if (v14 >= v28[1])
      goto LABEL_57;
    v69 = v15;
    v29 = sub_215099458(v14, v28, v72);
    v21 = v30;
    v25 = (unint64_t)v96;
    v31 = sub_21509B1BC(v14);
    v32 = v95;
    if (*(_QWORD *)(v95 + 16))
    {
      sub_2151305A4();
      sub_2151305BC();
      swift_bridgeObjectRetain();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_21512FB3C();
        swift_bridgeObjectRelease();
      }
      v33 = sub_2151305EC();
      v34 = -1 << *(_BYTE *)(v32 + 32);
      v35 = v33 & ~v34;
      v25 = v32 + 56;
      if (((*(_QWORD *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
      {
        v36 = ~v34;
        v37 = *(_QWORD *)(v32 + 48);
        do
        {
          v38 = (_QWORD *)(v37 + 16 * v35);
          v39 = v38[1];
          if (v39)
          {
            if (v21)
            {
              v40 = *v38 == v29 && v39 == v21;
              if (v40 || (sub_21513043C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_12;
              }
            }
          }
          else if (!v21)
          {
            goto LABEL_12;
          }
          v35 = (v35 + 1) & v36;
        }
        while (((*(_QWORD *)(v25 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0);
      }
      swift_bridgeObjectRelease();
    }
    v41 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      if (v25 != 1)
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      goto LABEL_61;
    }
    if (v41 < v16)
      goto LABEL_50;
    sub_2150757D4(v16, v41);
    swift_bridgeObjectRetain();
    sub_21503A724(&v74, v29, v21);
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    v14 = v31;
    v15 = v69;
    v16 = v70;
    if (v70 == v67)
    {
      v13 = v67;
LABEL_47:
      v7 = v52;
      a1 = v53;
      v3 = v50;
      v4 = v51;
      LOBYTE(v5) = v49;
      v6 = v47;
      v8 = v48;
      goto LABEL_48;
    }
  }
  if (v25)
  {
    v46 = 0;
    v45 = 91;
    goto LABEL_64;
  }
LABEL_62:
  v14 = v54;
LABEL_63:
  v74 = 0;
  v75 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v74 = 0x6E6F697469736F70;
  v75 = 0xE900000000000020;
  v73 = v14;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v46 = 0;
  v45 = 169;
LABEL_64:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DEC3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD **v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _QWORD v118[5];
  char v119;

  v3 = *(_QWORD *)v1;
  v77 = *(_QWORD *)(v1 + 8);
  v78 = v3;
  v4 = *(_QWORD *)(v1 + 24);
  v85 = *(_QWORD *)(v1 + 16);
  v88 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v71 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v70 = (uint64_t)&v62 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v76 = (char *)&v62 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v75 = (uint64_t)&v62 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v74 = (uint64_t)&v62 - v15;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA89A8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (uint64_t *)((char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = MEMORY[0x24BEE4B08];
  v108 = 0;
  v109 = 0;
  v110 = 2;
  sub_21508C220(&v91);
  v83 = v92;
  v84 = v91;
  v81 = v94;
  v82 = v93;
  v80 = v95;
  v79 = v96;
  v17 = v97;
  v86 = v98;
  v19 = *(_QWORD *)v1;
  v18 = *(_QWORD *)(v1 + 8);
  v21 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 40))
  {
    if (*(_BYTE *)(v1 + 40) == 1 && *(_QWORD *)(v20 + 16))
    {
      v22 = (uint64_t *)(v20 + 32);
    }
    else
    {
      swift_beginAccess();
      v23 = *(_QWORD *)(v21 + 16);
      if (!v23)
      {
LABEL_40:
        __break(1u);
LABEL_41:
        v61 = 0;
        v60 = 128;
        goto LABEL_48;
      }
      v22 = (uint64_t *)(v23 + 8);
    }
    v68 = *v22;
  }
  else
  {
    v68 = *(_QWORD *)(v1 + 24);
  }
  v64 = v19;
  v65 = v18;
  v66 = v21;
  v67 = a1;
  sub_215053BA4(v1);
  v24 = v17;
  if (v17 == v86)
  {
    v25 = 0;
    v26 = 0;
    v27 = 2;
    v28 = v17;
    v29 = v68;
LABEL_32:
    v91 = v84;
    v92 = v83;
    v93 = v82;
    v94 = v81;
    v95 = v80;
    v96 = v79;
    v97 = v24;
    v98 = v86;
    v99 = v28;
    v100 = v78;
    v101 = v77;
    v102 = v85;
    v103 = v4;
    v104 = v88;
    v105 = v5;
    v106 = v29;
    v107 = 1;
    sub_2150C79E4((uint64_t)&v91);
    swift_bridgeObjectRelease();
    v57 = v66;
    v56 = v67;
    v58 = v65;
    *v67 = v64;
    v56[1] = v58;
    v56[2] = v57;
    v56[3] = v26;
    v56[4] = v25;
    *((_BYTE *)v56 + 40) = v27;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  v87 = (_QWORD **)(v85 + 16);
  v69 = v4 + 32;
  v89 = v68;
  v63 = v17;
  v30 = v17;
  while (1)
  {
    v118[0] = v84;
    v118[1] = v83;
    v31 = v81;
    v118[2] = v82;
    v118[3] = v81;
    v32 = v80;
    v118[4] = v80;
    v33 = v79;
    v119 = v79;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2150437A8(v31, v32, v33);
    v28 = sub_21509B1BC(v30);
    sub_215053AEC((uint64_t)v118);
    v34 = v87;
    v35 = swift_beginAccess();
    if (!*v34)
      goto LABEL_38;
    v29 = v89;
    if (v89 == (*v34)[1])
      goto LABEL_31;
    v91 = v89;
    MEMORY[0x24BDAC7A8](v35);
    v60 = (uint64_t)&v91;
    v36 = v88;
    sub_2150437A8(v4, v88, v5);
    sub_2150437A8(v4, v36, v5);
    v37 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)(&v62 - 4), v4, v36, v5);
    sub_21501EF2C(v4, v36, v5);
    if (!v5)
    {
      v38 = v4;
      v39 = (uint64_t)v76;
      if (v37)
      {
        if (v37 != 1)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        goto LABEL_45;
      }
      goto LABEL_22;
    }
    v39 = (uint64_t)v76;
    if (v5 != 1)
      break;
    v40 = *(_QWORD *)(v4 + 16);
    if (v37 == v40)
    {
      sub_21501EF2C(v4, v88, 1);
LABEL_45:
      v68 = v89;
      goto LABEL_46;
    }
    if (v37 >= v40)
      goto LABEL_35;
    v38 = *(_QWORD *)(v69 + 16 * v37);
    sub_21501EF2C(v4, v88, 1);
LABEL_22:
    v41 = v28;
    v42 = v4;
    v43 = v89;
    if (v91 < v38)
      goto LABEL_47;
    if (v89 < 0)
      goto LABEL_41;
    v44 = *v87;
    if (!*v87)
      goto LABEL_39;
    if (v89 >= v44[1])
      goto LABEL_41;
    v45 = v85;
    v46 = v75;
    sub_215099590(v89, v44, v75);
    v112 = v78;
    v113 = v77;
    v114 = v45;
    v115 = v42;
    v116 = v88;
    v117 = v5;
    v89 = sub_21509B1BC(v43);
    v47 = v46;
    v48 = v74;
    sub_21504626C(v47, v74, qword_253F0D218);
    v49 = v72;
    v50 = *(int *)(v73 + 48);
    v51 = (uint64_t)v72 + v50;
    *v72 = v30;
    sub_21504626C(v48, (uint64_t)v49 + v50, qword_253F0D218);
    sub_21504626C(v51, v39, qword_253F0D218);
    v52 = v111;
    swift_bridgeObjectRetain();
    LOBYTE(v48) = sub_215026C30(v39, v52);
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {
      v53 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_36;
      if (v53 < v30)
        goto LABEL_37;
      sub_2150757D4(v30, v53);
      v54 = v71;
      sub_21504670C(v39, v71, qword_253F0D218);
      v55 = v70;
      sub_21503A224(v70, v54);
      sub_215046750(v55, qword_253F0D218);
    }
    sub_215046750(v39, qword_253F0D218);
    v30 = v41;
    v4 = v42;
    if (v41 == v86)
    {
      v28 = v86;
      v29 = v89;
LABEL_31:
      v26 = v108;
      v25 = v109;
      v27 = v110;
      v24 = v63;
      goto LABEL_32;
    }
  }
  if (v37)
  {
    v61 = 0;
    v60 = 91;
    goto LABEL_48;
  }
LABEL_46:
  v89 = v68;
LABEL_47:
  v91 = 0;
  v92 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v91 = 0x6E6F697469736F70;
  v92 = 0xE900000000000020;
  v90 = v89;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  v61 = 0;
  v60 = 169;
LABEL_48:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150DF3BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD **v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD **v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  _BYTE v76[7];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  _BYTE v86[7];
  uint64_t v87;
  char v88;
  _BYTE v89[7];
  __int128 v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _QWORD v99[5];
  char v100;

  v3 = *(_QWORD *)v1;
  v58 = *(_QWORD *)(v1 + 8);
  v59 = v3;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v66 = *(_QWORD *)(v1 + 16);
  v67 = v5;
  v6 = *(unsigned __int8 *)(v1 + 40);
  v92 = MEMORY[0x24BEE4B08];
  v90 = 0uLL;
  v91 = 2;
  sub_21508C220(&v70);
  v64 = v71;
  v65 = v70;
  v62 = v73;
  v63 = v72;
  v61 = v74;
  v60 = v75;
  v7 = v77;
  v8 = v78;
  v10 = *(_QWORD *)v1;
  v9 = *(_QWORD *)(v1 + 8);
  v12 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 40))
  {
    if (*(_BYTE *)(v1 + 40) == 1 && *(_QWORD *)(v11 + 16))
    {
      v13 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v12 + 16);
      if (!v14)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        v48 = 0;
        v47 = 128;
LABEL_57:
        result = sub_2151302EC();
        __break(1u);
        return result;
      }
      v13 = (uint64_t *)(v14 + 8);
    }
    v54 = *v13;
  }
  else
  {
    v54 = *(_QWORD *)(v1 + 24);
  }
  sub_215053BA4(v1);
  if (v7 != v8)
  {
    v57 = v8;
    v50 = v10;
    v51 = v9;
    v52 = v12;
    v53 = a1;
    v68 = (_QWORD **)(v66 + 16);
    v55 = v4 + 32;
    v49 = v7;
    v8 = v7;
    v18 = v54;
    v56 = v6;
    while (1)
    {
      v19 = v8;
      v99[0] = v65;
      v99[1] = v64;
      v20 = v62;
      v99[2] = v63;
      v99[3] = v62;
      v21 = v61;
      v99[4] = v61;
      v22 = v60;
      v100 = v60;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2150437A8(v20, v21, v22);
      v8 = sub_21509B1BC(v19);
      sub_215053AEC((uint64_t)v99);
      v23 = v68;
      v24 = swift_beginAccess();
      if (!*v23)
        goto LABEL_47;
      if (v18 == (*v23)[1])
      {
        v15 = 1;
        goto LABEL_39;
      }
      v93 = v59;
      v94 = v58;
      v25 = v67;
      v95 = v66;
      v96 = v4;
      v97 = v67;
      v98 = v6;
      v70 = v18;
      MEMORY[0x24BDAC7A8](v24);
      v47 = (uint64_t)&v70;
      sub_2150437A8(v4, v25, v6);
      sub_2150437A8(v4, v25, v6);
      v26 = sub_2150F776C((uint64_t (*)(__int128 *))sub_21509C04C, (uint64_t)&v46, v4, v25, v6);
      sub_21501EF2C(v4, v25, v6);
      if (v6)
      {
        if (v6 != 1)
        {
          if (v26)
          {
            v48 = 0;
            v47 = 91;
            goto LABEL_57;
          }
          goto LABEL_55;
        }
        v28 = *(_QWORD *)(v4 + 16);
        if (v26 == v28)
        {
          sub_21501EF2C(v4, v67, 1);
          goto LABEL_54;
        }
        if (v26 >= v28)
          goto LABEL_44;
        v27 = *(_QWORD *)(v55 + 16 * v26);
        sub_21501EF2C(v4, v67, 1);
      }
      else
      {
        v27 = v4;
        if (v26)
          goto LABEL_42;
      }
      if (v70 < v27)
        goto LABEL_56;
      if (v18 < 0)
        goto LABEL_50;
      v29 = *v68;
      if (!*v68)
        goto LABEL_48;
      if (v18 >= v29[1])
        goto LABEL_50;
      v30 = v29 + 8;
      if (((*((unsigned __int8 *)v29 + ((unint64_t)v18 >> 3) + 64) >> (v18 & 7)) & 1) != 0)
      {
        v31 = *v29;
        v32 = __OFADD__(v31, 7);
        v33 = v31 + 7;
        if (v32)
        {
          __break(1u);
LABEL_42:
          if (v26 != 1)
          {
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_54:
          v54 = v18;
LABEL_55:
          v18 = v54;
LABEL_56:
          v70 = 0;
          v71 = 0xE000000000000000;
          sub_215130178();
          swift_bridgeObjectRelease();
          v70 = 0x6E6F697469736F70;
          v71 = 0xE900000000000020;
          v69 = v18;
          sub_2151303B8();
          sub_21512FB90();
          swift_bridgeObjectRelease();
          sub_21512FB90();
          v48 = 0;
          v47 = 169;
          goto LABEL_57;
        }
        v34 = v33 / 8;
        v36 = v34 - 1;
        v35 = v34 < 1;
        v37 = v34 + 62;
        if (!v35)
          v37 = v36;
        v38 = (unint64_t)&v30[2 * v18] + (v37 & 0xFFFFFFFFFFFFFFC0);
        v39 = *(_QWORD *)(v38 + 64);
        v40 = *(_QWORD *)(v38 + 72);
        sub_21501F068(v39, v40);
        v18 = sub_21509B1BC(v18);
        if (v40 >> 60 == 11)
        {
          v15 = 0;
LABEL_39:
          v17 = v18;
          v12 = v52;
          a1 = v53;
          v10 = v50;
          v9 = v51;
          v7 = v49;
          v16 = v57;
          goto LABEL_40;
        }
      }
      else
      {
        v18 = sub_21509B1BC(v18);
        v39 = 0;
        v40 = 0xF000000000000000;
      }
      v41 = v92;
      swift_bridgeObjectRetain();
      v42 = sub_2150260F8(v39, v40, v41);
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
      {
        v43 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_45;
        if (v43 < v19)
          goto LABEL_46;
        sub_2150757D4(v19, v43);
        sub_215046224(v39, v40);
        sub_215039654(&v70, v39, v40);
        sub_215045ED8(v70, v71);
      }
      sub_215045ED8(v39, v40);
      v6 = v56;
      if (v8 == v57)
      {
        v15 = 1;
        v17 = v18;
        v16 = v57;
        v8 = v57;
        v12 = v52;
        a1 = v53;
        v10 = v50;
        v9 = v51;
        v7 = v49;
        goto LABEL_40;
      }
    }
  }
  v15 = 1;
  v16 = v8;
  v17 = v54;
LABEL_40:
  v70 = v65;
  v71 = v64;
  v72 = v63;
  v73 = v62;
  v74 = v61;
  v75 = v60;
  *(_DWORD *)v76 = v69;
  *(_DWORD *)&v76[3] = *(_DWORD *)((char *)&v69 + 3);
  v77 = v7;
  v78 = v16;
  v79 = v8;
  v80 = v59;
  v81 = v58;
  v82 = v66;
  v83 = v4;
  v84 = v67;
  v85 = v6;
  *(_DWORD *)v86 = *(_DWORD *)v89;
  *(_DWORD *)&v86[3] = *(_DWORD *)&v89[3];
  v87 = v17;
  v88 = v15;
  sub_2150C79E4((uint64_t)&v70);
  swift_bridgeObjectRelease();
  v44 = v91;
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v90;
  *(_BYTE *)(a1 + 40) = v44;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2150DFA64(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v4);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  return v7(v2, v3, v4, v6);
}

uint64_t AnyColumnSlice.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 16))(a1, a2, v5);
}

uint64_t (*AnyColumnSlice.name.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(v3);
  a1[1] = v5;
  return sub_2150DFB84;
}

uint64_t sub_2150DFB84(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = a1[1];
  v3 = a1[2];
  v5 = *a1;
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v6);
  v8 = *(_QWORD *)(v7 + 8);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16);
  if ((a2 & 1) == 0)
    return v9(v5, v4, v6, v8);
  swift_bridgeObjectRetain();
  v9(v5, v4, v6, v8);
  return swift_bridgeObjectRelease();
}

uint64_t AnyColumnSlice.count.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 48))(v2);
}

Swift::Bool __swiftcall AnyColumnSlice.isNil(at:)(Swift::Int at)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(_QWORD *)(v4 + 8) + 96))(at, v3) & 1;
}

uint64_t AnyColumnSlice.hashValue.getter()
{
  _BYTE v1[72];

  sub_2151305A4();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_2151305EC();
}

uint64_t sub_2150DFCFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

uint64_t sub_2150DFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 16))(a1, a2, v5);
}

uint64_t (*sub_2150DFD94(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(v3);
  a1[1] = v5;
  return sub_2150DFB84;
}

uint64_t sub_2150DFDF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 80))(v2);
}

uint64_t sub_2150DFE30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 128))(a1, v3);
}

uint64_t AnyColumnSlice.subscript.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 128))(a1, v3);
}

uint64_t sub_2150DFEE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 144))(a1, a2, v5);
}

uint64_t AnyColumnSlice.subscript.getter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 144))(a1, a2, v5);
}

uint64_t sub_2150DFFB0()
{
  _BYTE v1[72];

  sub_2151305A4();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_2151305EC();
}

uint64_t AnyColumnSlice.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _BYTE v23[32];
  _QWORD v24[4];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 8))(v4);
  sub_21512FB3C();
  swift_bridgeObjectRelease();
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 48))(v6);
  v9 = MEMORY[0x24BEE4AF8];
  if (!v8)
  {
LABEL_13:
    sub_2150E19D8(a1, v9);
    return swift_bridgeObjectRelease();
  }
  v10 = v8;
  v28 = MEMORY[0x24BEE4AF8];
  sub_215038B90(0, v8 & ~(v8 >> 63), 0);
  v11 = v2[3];
  v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 32))(v11);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v14 = result;
    do
    {
      v15 = v2[3];
      v16 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v15);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8) + 128))(v24, v14, v15);
      sub_21504626C((uint64_t)v24, (uint64_t)v23, qword_253F0D058);
      sub_21504670C((uint64_t)v23, (uint64_t)v21, qword_253F0D058);
      if (v22)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          v27 = 0;
          v25 = 0u;
          v26 = 0u;
        }
      }
      else
      {
        sub_215046750((uint64_t)v21, qword_253F0D058);
        v25 = 0u;
        v26 = 0u;
        v27 = 0;
      }
      sub_215046750((uint64_t)v23, qword_253F0D058);
      v9 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038B90(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v28;
      }
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_215038B90((_QWORD *)(v17 > 1), v18 + 1, 1);
        v9 = v28;
      }
      *(_QWORD *)(v9 + 16) = v18 + 1;
      sub_21504626C((uint64_t)&v25, v9 + 40 * v18 + 32, &qword_254DA75E8);
      v19 = v2[3];
      v20 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v19);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 64))(v14, v19);
      --v10;
    }
    while (v10);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150E0288()
{
  _BYTE v1[72];

  sub_2151305A4();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_2151305EC();
}

uint64_t AnyColumnSlice.startIndex.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 32))(v2);
}

uint64_t AnyColumnSlice.endIndex.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 40))(v2);
}

Swift::Int __swiftcall AnyColumnSlice.index(after:)(Swift::Int after)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(_QWORD *)(v4 + 8) + 64))(after, v3);
}

Swift::Int __swiftcall AnyColumnSlice.index(before:)(Swift::Int before)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(_QWORD *)(v4 + 8) + 72))(before, v3);
}

uint64_t sub_2150E03D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[32];

  v4 = *a3;
  sub_21504670C(a1, (uint64_t)v8, qword_253F0D058);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v6 + 8) + 136))(v4, v8, v5);
  return sub_215046750((uint64_t)v8, qword_253F0D058);
}

uint64_t AnyColumnSlice.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 136))(a2, a1, v5);
  return sub_215046750(a1, qword_253F0D058);
}

void (*AnyColumnSlice.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  v5[8] = a2;
  v5[9] = v2;
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 128))(a2, v6);
  return sub_2150E0548;
}

void sub_2150E0548(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[8];
    v3 = v2[9];
    sub_21504670C(*a1, (uint64_t)(v2 + 4), qword_253F0D058);
    v5 = *(_QWORD *)(v3 + 24);
    v6 = *(_QWORD *)(v3 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v3, v5);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v6 + 8) + 136))(v4, v2 + 4, v5);
    sub_215046750((uint64_t)(v2 + 4), qword_253F0D058);
  }
  else
  {
    v8 = v2[8];
    v7 = v2[9];
    v9 = *(_QWORD *)(v7 + 24);
    v10 = *(_QWORD *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v10 + 8) + 136))(v8, v2, v9);
  }
  sub_215046750((uint64_t)v2, qword_253F0D058);
  free(v2);
}

uint64_t sub_2150E0620(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];

  v4 = *a3;
  v5 = a3[1];
  sub_2150452A8(a1, (uint64_t)v9);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v6);
  (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v7 + 8) + 152))(v4, v5, v9, v6);
  return sub_2150452E4((uint64_t)v9);
}

uint64_t AnyColumnSlice.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 152))(a2, a3, a1, v7);
  return sub_2150452E4(a1);
}

void (*AnyColumnSlice.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  v8 = v3[3];
  v9 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 144))(a2, a3, v8);
  return sub_2150E078C;
}

void sub_2150E078C(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[11];
    v3 = v2[12];
    v5 = v2[10];
    sub_2150452A8(*a1, (uint64_t)(v2 + 5));
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v3, v6);
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v7 + 8) + 152))(v5, v4, v2 + 5, v6);
    sub_2150452E4((uint64_t)(v2 + 5));
  }
  else
  {
    v9 = v2[11];
    v8 = v2[12];
    v10 = v2[10];
    v11 = *(_QWORD *)(v8 + 24);
    v12 = *(_QWORD *)(v8 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v12 + 8) + 152))(v10, v9, v2, v11);
  }
  sub_2150452E4((uint64_t)v2);
  free(v2);
}

uint64_t sub_2150E0864(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 136))(v4, a1, v5);
  return sub_215046750(a1, qword_253F0D058);
}

void (*sub_2150E08D0(_QWORD *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  v6 = *a2;
  v5[8] = v2;
  v5[9] = v6;
  v7 = v2[3];
  v8 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 128))(v6, v7);
  return sub_2150E0950;
}

void sub_2150E0950(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[8];
    v3 = v2[9];
    sub_21504670C(*a1, (uint64_t)(v2 + 4), qword_253F0D058);
    v5 = *(_QWORD *)(v4 + 24);
    v6 = *(_QWORD *)(v4 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v6 + 8) + 136))(v3, v2 + 4, v5);
    sub_215046750((uint64_t)(v2 + 4), qword_253F0D058);
  }
  else
  {
    v7 = v2[8];
    v8 = v2[9];
    v9 = *(_QWORD *)(v7 + 24);
    v10 = *(_QWORD *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v10 + 8) + 136))(v8, v2, v9);
  }
  sub_215046750((uint64_t)v2, qword_253F0D058);
  free(v2);
}

uint64_t sub_2150E0A2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 152))(v4, v5, a1, v6);
  return sub_2150452E4(a1);
}

void (*sub_2150E0A90(_QWORD *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = malloc(0x68uLL);
  *a1 = v5;
  v7 = *a2;
  v6 = a2[1];
  v5[10] = v2;
  v5[11] = v7;
  v5[12] = v6;
  v8 = v2[3];
  v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 144))(v7, v6, v8);
  return sub_2150E0B18;
}

void sub_2150E0B18(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[11];
    v3 = v2[12];
    v5 = v2[10];
    sub_2150452A8(*a1, (uint64_t)(v2 + 5));
    v6 = *(_QWORD *)(v5 + 24);
    v7 = *(_QWORD *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v7 + 8) + 152))(v4, v3, v2 + 5, v6);
    sub_2150452E4((uint64_t)(v2 + 5));
  }
  else
  {
    v9 = v2[11];
    v8 = v2[12];
    v10 = v2[10];
    v11 = *(_QWORD *)(v10 + 24);
    v12 = *(_QWORD *)(v10 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v12 + 8) + 152))(v9, v8, v2, v11);
  }
  sub_2150452E4((uint64_t)v2);
  free(v2);
}

uint64_t sub_2150E0BEC@<X0>(uint64_t (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_215121288(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_2150E0C14(_QWORD *a1, _QWORD *a2)
{
  return sub_21511D7D4(*a1, *a2);
}

uint64_t sub_2150E0C20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 72))(v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_2150E0C7C(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 72))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_2150E0CD8(_QWORD *a1, _QWORD *a2)
{
  return sub_21511DE0C(*a1, *a2);
}

uint64_t sub_2150E0CE4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = v1;
  v5 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 32))(v5);
  *a1 = result;
  return result;
}

uint64_t sub_2150E0D30@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = v1;
  v5 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 40))(v5);
  *a1 = result;
  return result;
}

uint64_t (*sub_2150E0D7C(uint64_t a1, uint64_t *a2))(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = v2[3];
  v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 128))(v3, v4);
  return sub_2150E0DE4;
}

uint64_t sub_2150E0DE4(uint64_t a1)
{
  return sub_215046750(a1, qword_253F0D058);
}

uint64_t sub_2150E0E00(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 144))(v2, v3, v4);
}

uint64_t sub_2150E0E60@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = v1;
  v5 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 32))(v5);
  v8 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 40))(v8);
  if (result < v6)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = result;
  }
  return result;
}

BOOL sub_2150E0EEC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v3 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 32))(v3);
  v6 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  return v4 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 40))(v6);
}

_QWORD *sub_2150E0F64@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    v6 = v3;
    v8 = v3[3];
    v7 = v3[4];
    __swift_project_boxed_opaque_existential_1(v6, v8);
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 32))(v8);
    v11 = v6[3];
    v10 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v11);
    result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 40))(v11);
    if (v5 >= v9 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2150E1004@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_21511DC4C(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_2150E1038(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_2150E1054(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_2150E1070(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

uint64_t sub_2150E108C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v5 = v2[3];
  v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 64))(v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_2150E10E8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 64))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_2150E1144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = (_QWORD *)v1;
  sub_2150452A8(v1, a1);
  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(v2, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 32))(v5);
  result = sub_2150452E4((uint64_t)v2);
  *(_QWORD *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_2150E11AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 48))(v2);
}

uint64_t sub_2150E11E8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_215048A3C(v0);
  sub_2150452E4((uint64_t)v0);
  return v1;
}

uint64_t _s11TabularData14AnyColumnSliceV11descriptionSSvg_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 168))(v2);
}

uint64_t AnyColumnSlice.customMirror.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v3 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 176))(v3);
}

uint64_t sub_2150E12B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v3 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 176))(v3);
}

uint64_t AnyColumnSlice.distinct()@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[48];

  v2 = v1;
  v5 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 80))(v5);
  if (swift_dynamicCastMetatype())
  {
    sub_215052804((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C40);
    a1[4] = (uint64_t)&off_24D2A6678;
    v6 = swift_allocObject();
    *a1 = v6;
    sub_2150DC13C(v6 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_215052A4C((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C50);
    a1[4] = (uint64_t)&off_24D2A6678;
    v7 = swift_allocObject();
    *a1 = v7;
    sub_2150DC850(v7 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_215052C9C((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C60);
    a1[4] = (uint64_t)&off_24D2A6678;
    v8 = swift_allocObject();
    *a1 = v8;
    sub_2150DCF6C(v8 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_215052EE8((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C70);
    a1[4] = (uint64_t)&off_24D2A6678;
    v9 = swift_allocObject();
    *a1 = v9;
    sub_2150DD690(v9 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_215053134((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C80);
    a1[4] = (uint64_t)&off_24D2A6678;
    v10 = swift_allocObject();
    *a1 = v10;
    sub_2150DDDAC(v10 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_21505337C((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7C90);
    a1[4] = (uint64_t)&off_24D2A6678;
    v11 = swift_allocObject();
    *a1 = v11;
    sub_2150DE4D0(v11 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  sub_21512F740();
  if (swift_dynamicCastMetatype())
  {
    sub_2150535C8((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CA0);
    a1[4] = (uint64_t)&off_24D2A6678;
    v12 = swift_allocObject();
    *a1 = v12;
    sub_2150DEC3C((_QWORD *)(v12 + 16));
    return sub_215053AEC((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_215053814((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7CB0);
    a1[4] = (uint64_t)&off_24D2A6678;
    v13 = swift_allocObject();
    *a1 = v13;
    sub_2150DF3BC(v13 + 16);
    return sub_215053AEC((uint64_t)v15);
  }
  return sub_2150E166C();
}

uint64_t sub_2150E166C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;

  v1 = v0;
  v33 = MEMORY[0x24BEE4B08];
  v30 = 0;
  v31 = 0;
  v32 = 2;
  v3 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 32))(v3);
  v6 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 40))(v6);
  if (v7 < v4)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    sub_215046750((uint64_t)&v24, &qword_254DA75E8);
    sub_2150452A8((uint64_t)v1, (uint64_t)&v27);
    *(_QWORD *)&v24 = 0;
    *((_QWORD *)&v24 + 1) = 0xE000000000000000;
    sub_215130178();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v24 = 0xD00000000000002ALL;
    *((_QWORD *)&v24 + 1) = 0x8000000215131CD0;
    v20 = *((_QWORD *)&v28 + 1);
    v21 = v29;
    __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
    (*(void (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 80))(v20);
    sub_215130664();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  v8 = v7;
  if (v4 != v7)
  {
    while (v4 < v8)
    {
      v13 = v1[3];
      v12 = v1[4];
      __swift_project_boxed_opaque_existential_1(v1, v13);
      (*(void (**)(__int128 *__return_ptr, int64_t, uint64_t))(*(_QWORD *)(v12 + 8) + 128))(&v27, v4, v13);
      if (*((_QWORD *)&v28 + 1))
      {
        sub_21504678C(&v27, v23);
        sub_21504679C((uint64_t)v23, (uint64_t)v22);
        if (!swift_dynamicCast())
          goto LABEL_17;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        v27 = v24;
        v28 = v25;
        v29 = v26;
      }
      else
      {
        sub_215046750((uint64_t)&v27, qword_253F0D058);
        v27 = 0u;
        v28 = 0u;
        v29 = 0;
      }
      v14 = v4 + 1;
      v15 = v33;
      swift_bridgeObjectRetain();
      v16 = sub_215025ED0((uint64_t)&v27, v15);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        sub_21504670C((uint64_t)&v27, (uint64_t)v23, &qword_254DA75E8);
        sub_215039374((uint64_t)&v24, (uint64_t)v23);
        sub_215046750((uint64_t)&v24, &qword_254DA75E8);
        sub_2150757D4(v4, v4 + 1);
      }
      sub_215046750((uint64_t)&v27, &qword_254DA75E8);
      ++v4;
      if (v8 == v14)
      {
        v10 = v30;
        v9 = v31;
        v11 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  v9 = 0;
  v10 = 0;
  v11 = 2;
LABEL_14:
  swift_bridgeObjectRelease();
  v17 = v1[3];
  v18 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8) + 160))(v10, v9, v11, v17);
  return sub_21501EF2C(v10, v9, v11);
}

uint64_t sub_2150E19D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_2151305B0();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      sub_21504670C(v5, (uint64_t)&v8, &qword_254DA75E8);
      if (*((_QWORD *)&v9 + 1))
      {
        v6[0] = v8;
        v6[1] = v9;
        v7 = v10;
        sub_2151305BC();
        sub_215130148();
        result = sub_215046238((uint64_t)v6);
      }
      else
      {
        result = sub_2151305BC();
      }
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s11TabularData14AnyColumnSliceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  _BYTE v46[32];
  _QWORD v47[4];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;

  v5 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(v5);
  v8 = v7;
  v10 = a2[3];
  v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  if (v6 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 8))(v10) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_2150452A8((uint64_t)a1, (uint64_t)v55);
    sub_2150452A8((uint64_t)a2, (uint64_t)v52);
  }
  else
  {
    v13 = sub_21513043C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2150452A8((uint64_t)a1, (uint64_t)v55);
    sub_2150452A8((uint64_t)a2, (uint64_t)v52);
    v14 = 0;
    if ((v13 & 1) == 0)
      goto LABEL_33;
  }
  v15 = v56;
  v16 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 48))(v15);
  v18 = MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v19 = v17;
    v51 = MEMORY[0x24BEE4AF8];
    sub_215038B90(0, v17 & ~(v17 >> 63), 0);
    v20 = v56;
    v21 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 32))(v20);
    if (v19 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    v23 = result;
    do
    {
      v24 = v56;
      v25 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8) + 128))(v47, v23, v24);
      sub_21504626C((uint64_t)v47, (uint64_t)v46, qword_253F0D058);
      sub_21504670C((uint64_t)v46, (uint64_t)v44, qword_253F0D058);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          v50 = 0;
          v48 = 0u;
          v49 = 0u;
        }
      }
      else
      {
        sub_215046750((uint64_t)v44, qword_253F0D058);
        v48 = 0u;
        v49 = 0u;
        v50 = 0;
      }
      sub_215046750((uint64_t)v46, qword_253F0D058);
      v18 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038B90(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v51;
      }
      v27 = *(_QWORD *)(v18 + 16);
      v26 = *(_QWORD *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_215038B90((_QWORD *)(v26 > 1), v27 + 1, 1);
        v18 = v51;
      }
      *(_QWORD *)(v18 + 16) = v27 + 1;
      sub_21504626C((uint64_t)&v48, v18 + 40 * v27 + 32, &qword_254DA75E8);
      v29 = v56;
      v28 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 + 8) + 64))(v23, v29);
      --v19;
    }
    while (v19);
  }
  v31 = v53;
  v30 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v30 + 8) + 48))(v31);
  v33 = MEMORY[0x24BEE4AF8];
  if (!v32)
  {
LABEL_32:
    v14 = sub_21502AF10(v18, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_2150452E4((uint64_t)v52);
    sub_2150452E4((uint64_t)v55);
    return v14 & 1;
  }
  v34 = v32;
  v51 = MEMORY[0x24BEE4AF8];
  sub_215038B90(0, v32 & ~(v32 >> 63), 0);
  v36 = v53;
  v35 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v35 + 8) + 32))(v36);
  if ((v34 & 0x8000000000000000) == 0)
  {
    v37 = result;
    do
    {
      v39 = v53;
      v38 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8) + 128))(v47, v37, v39);
      sub_21504626C((uint64_t)v47, (uint64_t)v46, qword_253F0D058);
      sub_21504670C((uint64_t)v46, (uint64_t)v44, qword_253F0D058);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          v50 = 0;
          v48 = 0u;
          v49 = 0u;
        }
      }
      else
      {
        sub_215046750((uint64_t)v44, qword_253F0D058);
        v48 = 0u;
        v49 = 0u;
        v50 = 0;
      }
      sub_215046750((uint64_t)v46, qword_253F0D058);
      v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_215038B90(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v33 = v51;
      }
      v41 = *(_QWORD *)(v33 + 16);
      v40 = *(_QWORD *)(v33 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_215038B90((_QWORD *)(v40 > 1), v41 + 1, 1);
        v33 = v51;
      }
      *(_QWORD *)(v33 + 16) = v41 + 1;
      sub_21504626C((uint64_t)&v48, v33 + 40 * v41 + 32, &qword_254DA75E8);
      v43 = v53;
      v42 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 + 8) + 64))(v37, v43);
      --v34;
    }
    while (v34);
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_21501EF2C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

unint64_t sub_2150E2024()
{
  unint64_t result;

  result = qword_254DA8970;
  if (!qword_254DA8970)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8970);
  }
  return result;
}

unint64_t sub_2150E206C()
{
  unint64_t result;

  result = qword_254DA8978;
  if (!qword_254DA8978)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8978);
  }
  return result;
}

unint64_t sub_2150E20B4()
{
  unint64_t result;

  result = qword_254DA8980;
  if (!qword_254DA8980)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8980);
  }
  return result;
}

unint64_t sub_2150E20FC()
{
  unint64_t result;

  result = qword_254DA8988;
  if (!qword_254DA8988)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8988);
  }
  return result;
}

unint64_t sub_2150E2144()
{
  unint64_t result;

  result = qword_254DA8990;
  if (!qword_254DA8990)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8990);
  }
  return result;
}

unint64_t sub_2150E218C()
{
  unint64_t result;

  result = qword_254DA8998;
  if (!qword_254DA8998)
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for AnyColumnSlice, &type metadata for AnyColumnSlice);
    atomic_store(result, (unint64_t *)&qword_254DA8998);
  }
  return result;
}

unint64_t sub_2150E21D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA89A0;
  if (!qword_254DA89A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA79E8);
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE2C18], v1);
    atomic_store(result, (unint64_t *)&qword_254DA89A0);
  }
  return result;
}

uint64_t sub_2150E2220@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2150E226C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a2;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 128))(v2, v3);
}

uint64_t sub_2150E22C4()
{
  return 0;
}

uint64_t sub_2150E22D4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v3 = a2[1];
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 144))(v2, v3, v4);
}

uint64_t sub_2150E2338()
{
  return 0;
}

uint64_t destroy for AnyColumn(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for AnyColumn(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyColumn(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for AnyColumn(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AnyColumnSlice()
{
  return &type metadata for AnyColumnSlice;
}

double DataFrame.explodeColumn<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10[5];
  __int128 v11;
  uint64_t v12;

  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  v7 = v3[2];
  v10[2] = *v3;
  v10[3] = v6;
  v10[4] = v7;
  v10[0] = v4;
  v10[1] = v5;
  DataFrame.explodingColumn<A>(_:)(v10, a2, a3, &v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v12;
  result = *(double *)&v11;
  *(_OWORD *)v3 = v11;
  v3[2] = v8;
  return result;
}

uint64_t DataFrame.explodingColumn<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t);
  uint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _OWORD *v89;
  uint64_t result;
  int64_t v91;
  _OWORD *v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t TupleTypeMetadata2;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(uint64_t, char *, uint64_t);
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  unint64_t v130;
  __int128 v131;
  __int128 v132;
  unint64_t v133;
  __int128 v134;
  __int128 v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _QWORD v140[4];

  v92 = a4;
  v101 = a3;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v116 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v112 = (uint64_t)&v91 - v9;
  v10 = sub_215130064();
  MEMORY[0x24BDAC7A8](v10);
  v111 = (char *)&v91 - v11;
  v96 = v7;
  v118 = swift_getAssociatedTypeWitness();
  v94 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v117 = (char *)&v91 - v12;
  v13 = sub_215130064();
  v99 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v98 = (char *)&v91 - v15;
  v97 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v95 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v119 = (char *)&v91 - v18;
  v103 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = sub_215130064();
  MEMORY[0x24BDAC7A8](v20);
  v107 = (char *)&v91 - v21;
  v23 = *a1;
  v22 = a1[1];
  v122 = v22;
  v24 = v4[1];
  v26 = v4[2];
  v124 = *v4;
  v25 = v124;
  v125 = v24;
  v126 = v26;
  v91 = sub_21501F2BC(v23, v22);
  *(_QWORD *)&v132 = v25;
  *((_QWORD *)&v132 + 1) = v24;
  v133 = v26;
  *(_QWORD *)&v129 = v23;
  *((_QWORD *)&v129 + 1) = v22;
  v109 = a2;
  DataFrame.subscript.getter((uint64_t *)&v129, a2);
  v27 = v124;
  v28 = v125;
  v93 = v126;
  v31 = type metadata accessor for Column(0, a2, v29, v30);
  swift_bridgeObjectRetain();
  v108 = v31;
  v32 = Column.count.getter(v31);
  Column.init(name:capacity:)(v27, v28, v32, AssociatedTypeWitness, v140);
  v137 = v25;
  v138 = v24;
  v139 = v26;
  *(_QWORD *)&v132 = v23;
  *((_QWORD *)&v132 + 1) = v122;
  v33 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.removeColumn<A>(_:)((uint64_t *)&v132, v109);
  swift_release();
  swift_bridgeObjectRelease();
  v34 = MEMORY[0x24BEE4AF8];
  v35 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v135 = v34;
  *((_QWORD *)&v135 + 1) = v34;
  v136 = v35;
  v36 = *(_QWORD *)(v25 + 16);
  v100 = v33;
  if (!v36)
    goto LABEL_13;
  v37 = v25 + 32;
  v122 = v25;
  swift_bridgeObjectRetain();
  do
  {
    sub_21501EE90(v37, (uint64_t)&v124);
    v39 = v127;
    v38 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 8) + 8))(v39) == v27 && v40 == v33)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      sub_21501EA34((uint64_t)&v124);
      goto LABEL_5;
    }
    v42 = sub_21513043C();
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
      goto LABEL_4;
    v44 = v127;
    v43 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v43 + 8) + 88))(&v132, v44);
    v45 = v134;
    __swift_project_boxed_opaque_existential_1(&v132, v134);
    v47 = v127;
    v46 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    v48 = v47;
    v33 = v100;
    v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v46 + 8) + 48))(v48);
    (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD, _QWORD))(*((_QWORD *)&v45 + 1) + 32))(&v129, v49, v45, *((_QWORD *)&v45 + 1));
    DataFrame.append(column:)((uint64_t)&v129);
    sub_21501EA34((uint64_t)&v129);
    sub_21501EA34((uint64_t)&v124);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v132);
LABEL_5:
    v37 += 40;
    --v36;
  }
  while (v36);
  swift_bridgeObjectRelease();
LABEL_13:
  v124 = v27;
  v125 = v33;
  v50 = v93;
  v126 = v93;
  v51 = v108;
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v108);
  sub_21512FE30();
  v123 = v129;
  v124 = v27;
  v125 = v33;
  v126 = v50;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7F20);
  v53 = sub_2150903B0();
  v54 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v51);
  sub_215130490();
  v129 = v132;
  v130 = v133;
  v131 = v134;
  v105 = v53;
  v106 = v52;
  v124 = v52;
  v125 = v51;
  v126 = v53;
  v127 = v54;
  v104 = v54;
  sub_2151301A8();
  sub_215130184();
  v110 = AssociatedTypeWitness;
  v56 = v111;
  v55 = v112;
  v58 = v98;
  v57 = v99;
  v59 = v97;
  while (1)
  {
    while (1)
    {
      v60 = TupleTypeMetadata2;
      while (1)
      {
        *(_QWORD *)&v132 = v106;
        *((_QWORD *)&v132 + 1) = v108;
        v133 = v105;
        *(_QWORD *)&v134 = v104;
        sub_21513019C();
        v61 = (uint64_t *)v107;
        sub_215130190();
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v61, 1, v60) == 1)
        {
          swift_release();
          swift_bridgeObjectRelease();
          v124 = v140[0];
          v125 = v140[1];
          v126 = v140[2];
          swift_bridgeObjectRetain();
          swift_retain();
          DataFrame.insert<A>(column:at:)((uint64_t)&v124, v91, AssociatedTypeWitness, v87);
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_bridgeObjectRelease();
          v88 = v136;
          v89 = v92;
          *v92 = v135;
          *((_QWORD *)v89 + 2) = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v122 = *v61;
        v62 = v103;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v58, (char *)v61 + *(int *)(v60 + 48), v103);
        v63 = v109;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v58, 1, v109) != 1)
          break;
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v62);
      }
      v64 = v119;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v119, v58, v63);
      if ((sub_21512FE90() & 1) == 0)
        break;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v64, v63);
    }
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v95, v64, v63);
    sub_21512FC20();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_215130094();
    v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
    if (v114(v56, 1, AssociatedTypeWitness) != 1)
      break;
LABEL_21:
    (*(void (**)(char *, uint64_t))(v94 + 8))(v117, v118);
    v59 = v97;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v64, v109);
    v58 = v98;
    v57 = v99;
  }
  v113 = *(void (**)(uint64_t, char *, uint64_t))(v116 + 32);
  v113(v55, v56, AssociatedTypeWitness);
  while (2)
  {
    v68 = v137;
    v69 = v139;
    v70 = *(_QWORD *)(v137 + 16);
    v120 = v139;
    v121 = v138;
    if (v70)
    {
      sub_21501EE90(v137 + 32, (uint64_t)&v132);
      v71 = *((_QWORD *)&v134 + 1);
      v72 = (char *)v134;
      __swift_project_boxed_opaque_existential_1(&v132, v134);
      v73 = *(_QWORD *)(v71 + 8);
      v74 = *(uint64_t (**)(char *, uint64_t))(v73 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75 = v74(v72, v73);
      sub_21501EA34((uint64_t)&v132);
      if (v75 < 0)
        goto LABEL_42;
      v64 = v119;
      if (v75)
      {
        v76 = 0;
        goto LABEL_32;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v75 = 0;
    v76 = 2;
LABEL_32:
    sub_21501EF2C(0, v75, v76);
    v69 = *(_QWORD *)(v68 + 16);
    v72 = (char *)v135;
    if (v69 != *(_QWORD *)(v135 + 16))
      goto LABEL_43;
    if (!v69)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      v67 = type metadata accessor for Column(0, AssociatedTypeWitness, v65, v66);
      v55 = v112;
      Column.append(_:)(v112, v67);
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v55, AssociatedTypeWitness);
      v56 = v111;
      sub_215130094();
      if (v114(v56, 1, AssociatedTypeWitness) == 1)
        goto LABEL_21;
      v113(v55, v56, AssociatedTypeWitness);
      continue;
    }
    break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v72 = sub_21501E4D4((uint64_t)v72);
  v77 = 0;
  v78 = 0;
  while (1)
  {
    sub_21501EE90(v68 + v77 + 32, (uint64_t)&v132);
    *(_QWORD *)&v135 = v72;
    if (v78 >= *((_QWORD *)v72 + 2))
      break;
    ++v78;
    v79 = &v72[v77];
    v80 = (uint64_t)&v72[v77 + 32];
    v81 = *((_QWORD *)&v134 + 1);
    v82 = v134;
    v83 = __swift_project_boxed_opaque_existential_1(&v132, v134);
    *(_QWORD *)&v131 = v82;
    *((_QWORD *)&v131 + 1) = *(_QWORD *)(v81 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v129);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(boxed_opaque_existential_1, v83, v82);
    v85 = *((_QWORD *)v79 + 7);
    v86 = *((_QWORD *)v79 + 8);
    __swift_mutable_project_boxed_opaque_existential_1(v80, v85);
    (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v86 + 56))(v122, &v129, v85, v86);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v129);
    sub_21501EA34((uint64_t)&v132);
    v72 = (char *)v135;
    v77 += 40;
    if (v69 == v78)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      AssociatedTypeWitness = v110;
      v64 = v119;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  *(_QWORD *)&v132 = 0;
  *((_QWORD *)&v132 + 1) = 0xE000000000000000;
  sub_215130178();
  sub_21512FB90();
  *(_QWORD *)&v129 = v69;
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  *(_QWORD *)&v129 = *((_QWORD *)v72 + 2);
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  result = sub_2151302EC();
  __break(1u);
  return result;
}

double DataFrame.explodeColumn<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12[2];
  _QWORD v13[5];
  __int128 v14;
  uint64_t v15;

  v8 = v5[1];
  v9 = v5[2];
  v13[2] = *v5;
  v13[3] = v8;
  v13[4] = v9;
  ColumnID.init(_:_:)(a1, a2, v13);
  v12[0] = v13[0];
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  DataFrame.explodingColumn<A>(_:)(v12, a4, a5, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v15;
  result = *(double *)&v14;
  *(_OWORD *)v5 = v14;
  v5[2] = v10;
  return result;
}

uint64_t DataFrame.explodingColumn<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  __int128 *v5;
  uint64_t v9;
  uint64_t v11[2];
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;

  v9 = *((_QWORD *)v5 + 2);
  v13 = *v5;
  v14 = v9;
  ColumnID.init(_:_:)(a1, a2, v12);
  v11[0] = v12[0];
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  DataFrame.explodingColumn<A>(_:)(v11, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t Order.areOrdered<A>(_:_:)()
{
  _BYTE *v0;
  char v1;

  if ((*v0 & 1) != 0)
    v1 = sub_21512F9BC();
  else
    v1 = sub_21512F9C8();
  return v1 & 1;
}

TabularData::DataFrame __swiftcall RowGroupingProtocol.counts()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  char v4;
  TabularData::DataFrame result;

  v4 = 2;
  v1 = (void *)(*(uint64_t (**)(char *))(v0 + 32))(&v4);
  result.columnIndicesByName._rawValue = v3;
  result.aliases._rawValue = v2;
  result.columns._rawValue = v1;
  return result;
}

uint64_t RowGroupingProtocol.sums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9)
{
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v19;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];
  _QWORD v28[4];

  v19 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_215135F80;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  v26 = a9;
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v16(v28, v15, sub_2150E32C0, 0, sub_2150E336C, v21, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  v27[2] = v28[0];
  v27[3] = v28[1];
  v27[4] = v28[2];
  v27[0] = 678262131;
  v27[1] = 0xE400000000000000;
  sub_21512FB90();
  sub_21512FB90();
  v17 = v27[0];
  LOBYTE(v27[0]) = v19;
  sub_2150E33C4(v17, (unsigned __int8 *)v27, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E32C0(uint64_t a1, uint64_t a2)
{
  return sub_2150E3C90(a1, a2, 678262131);
}

uint64_t sub_2150E32D0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for DiscontiguousColumnSlice(0, a1, a1, a2);
  DiscontiguousColumnSlice<A>.sum()(v7, a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a4, 0, 1, a1);
}

uint64_t sub_2150E336C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2150E32D0(v1[3], v1[4], v1[5], a1);
}

uint64_t RowGroupingProtocol.aggregated<A, B>(on:naming:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 40))(a1, a2, a3, a4, a5, a7, a8, a6, a9);
}

uint64_t sub_2150E33C4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a2;
  v5 = v3[1];
  v6 = v3[2];
  if (v4 == 2)
  {
    *a3 = *v3;
    a3[1] = v5;
    a3[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *v3;
    v20 = v5;
    v21 = v6;
    if ((v4 & 1) != 0)
    {
      v8 = MEMORY[0x24BDAC7A8](a1);
      v16 = v10;
      v17 = v14;
      v18 = v10;
      v13 = sub_2150E4278;
    }
    else
    {
      v8 = MEMORY[0x24BDAC7A8](a1);
      v16 = v10;
      v17 = v12;
      v18 = v10;
      v13 = sub_2150E4298;
    }
    return DataFrameProtocol.sorted<A>(on:_:by:)(v8, v9, (uint64_t)v13, (uint64_t)&v15, (uint64_t)&type metadata for DataFrame, v10, (uint64_t)&protocol witness table for DataFrame, v11);
  }
}

uint64_t RowGroupingProtocol.sums<A>(_:order:)@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v11;

  v8 = *a1;
  v9 = a1[1];
  v11 = *a2;
  return RowGroupingProtocol.sums<A>(_:_:order:)(v8, v9, &v11, a3, a4, a5, a6, a8, a7);
}

uint64_t RowGroupingProtocol.means<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>)
{
  char v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  _QWORD v26[4];

  v14 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_215135F80;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v16(v26, v15, sub_2150E3684, 0, sub_2150E3698, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  v25[2] = v26[0];
  v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 0x286E61656DLL;
  v25[1] = 0xE500000000000000;
  sub_21512FB90();
  sub_21512FB90();
  v17 = v25[0];
  LOBYTE(v25[0]) = v14;
  sub_2150E33C4(v17, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E3684(uint64_t a1, uint64_t a2)
{
  return sub_2150E3C90(a1, a2, 0x286E61656DLL);
}

uint64_t sub_2150E3698(uint64_t a1)
{
  uint64_t *v1;

  return sub_2150E3CD0(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.mean());
}

uint64_t RowGroupingProtocol.means<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150E3D80(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.means<A>(_:_:order:));
}

uint64_t RowGroupingProtocol.quantiles<A>(_:_:quantile:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9)
{
  char v15;
  uint64_t v16;
  void (*v17)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];
  _QWORD v28[4];

  v15 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_215135F80;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = a2;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v25 = a9;
  v26 = a3;
  v17 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  v17(v28, v16, sub_2150E3848, 0, sub_2150E390C, v21, a6, a6, a5, a7);
  swift_bridgeObjectRelease();
  v27[2] = v28[0];
  v27[3] = v28[1];
  v27[4] = v28[2];
  v27[0] = 0x656C69746E617571;
  v27[1] = 0xE900000000000028;
  sub_21512FB90();
  sub_21512FB90();
  v18 = v27[0];
  LOBYTE(v27[0]) = v15;
  sub_2150E33C4(v18, (unsigned __int8 *)v27, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E3848(uint64_t a1, uint64_t a2)
{
  return sub_2150E3C90(a1, a2, 0x656C69746E617571);
}

uint64_t sub_2150E3864@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9;

  v9 = type metadata accessor for DiscontiguousColumnSlice(0, a3, a2, a3);
  sub_2150FC7E4(a1, v9, a4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 0, 1, a3);
}

uint64_t sub_2150E390C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2150E3864(v1[6], v1[2], v1[3], v1[5], a1);
}

uint64_t RowGroupingProtocol.quantiles<A>(_:quantile:order:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v14;

  v12 = *a1;
  v11 = a1[1];
  v14 = *a3;
  return RowGroupingProtocol.quantiles<A>(_:_:quantile:order:)(v12, v11, a2, &v14, a4, a5, a6, a8, a7);
}

uint64_t RowGroupingProtocol.minimums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>)
{
  char v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  _QWORD v26[4];

  v14 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_215135F80;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v16(v26, v15, sub_2150E3ADC, 0, sub_2150E3AEC, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  v25[2] = v26[0];
  v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 678324589;
  v25[1] = 0xE400000000000000;
  sub_21512FB90();
  sub_21512FB90();
  v17 = v25[0];
  LOBYTE(v25[0]) = v14;
  sub_2150E33C4(v17, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E3ADC(uint64_t a1, uint64_t a2)
{
  return sub_2150E3C90(a1, a2, 678324589);
}

uint64_t sub_2150E3AEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_2150E3CD0(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.min());
}

uint64_t RowGroupingProtocol.minimums<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150E3D80(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.minimums<A>(_:_:order:));
}

uint64_t RowGroupingProtocol.maximums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>)
{
  char v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  _QWORD v26[4];

  v14 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_215135F80;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a7;
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), _QWORD, uint64_t (*)(uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v16(v26, v15, sub_2150E3C80, 0, sub_2150E3D50, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  v25[2] = v26[0];
  v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 678977901;
  v25[1] = 0xE400000000000000;
  sub_21512FB90();
  sub_21512FB90();
  v17 = v25[0];
  LOBYTE(v25[0]) = v14;
  sub_2150E33C4(v17, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E3C80(uint64_t a1, uint64_t a2)
{
  return sub_2150E3C90(a1, a2, 678977901);
}

uint64_t sub_2150E3C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21512FB90();
  sub_21512FB90();
  return a3;
}

uint64_t sub_2150E3CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = type metadata accessor for DiscontiguousColumnSlice(0, a3, a3, a4);
  return a6(v8, a5);
}

uint64_t sub_2150E3D50(uint64_t a1)
{
  uint64_t *v1;

  return sub_2150E3CD0(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.max());
}

uint64_t RowGroupingProtocol.maximums<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2150E3D80(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.maximums<A>(_:_:order:));
}

uint64_t sub_2150E3D80(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char v10;

  v7 = *a1;
  v8 = a1[1];
  v10 = *a2;
  return a7(v7, v8, a4, &v10, a3, a4, a5, a6);
}

uint64_t RowGroupingProtocol.aggregated<A, B>(on:into:transform:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t (*)(uint64_t, uint64_t), _BYTE *, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;

  v15 = *a1;
  v14 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D1F0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_215135F80;
  *(_QWORD *)(v16 + 32) = v15;
  *(_QWORD *)(v16 + 40) = v14;
  v29 = a2;
  v30 = a3;
  v22 = a6;
  v23 = a7;
  v24 = a8;
  v25 = a9;
  v26 = a4;
  v27 = a5;
  v17 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), _BYTE *, uint64_t (*)@<X0>(uint64_t@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 40);
  swift_bridgeObjectRetain();
  v17(v16, sub_2150E3F50, v28, sub_2150E3FFC, v21, a7, a8, a6, a9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150E3ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    sub_21512FB90();
    sub_21512FB90();
    a3 = 0x7461676572676761;
  }
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_2150E3F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2150E3ECC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2150E3F58@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t result;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v9(v6);
  if (!v2)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, a1);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, a1);
  }
  return result;
}

uint64_t sub_2150E3FFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2150E3F58(*(_QWORD *)(v1 + 32), a1);
}

uint64_t RowGroupingProtocol.randomSplit(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a2, 0, 1, a3, a4);
}

BOOL static Order.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Order.hash(into:)()
{
  return sub_2151305B0();
}

uint64_t Order.hashValue.getter()
{
  sub_2151305A4();
  sub_2151305B0();
  return sub_2151305EC();
}

BOOL sub_2150E40B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_2150E40D4()
{
  unint64_t result;

  result = qword_254DA89B0[0];
  if (!qword_254DA89B0[0])
  {
    result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Order, &type metadata for Order);
    atomic_store(result, qword_254DA89B0);
  }
  return result;
}

uint64_t dispatch thunk of RowGroupingProtocol.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RowGroupingProtocol.ungrouped()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RowGroupingProtocol.counts(order:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RowGroupingProtocol.aggregated<A, B>(on:naming:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 40))(a1);
}

uint64_t dispatch thunk of RowGroupingProtocol.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of RowGroupingProtocol.mapGroups(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of RowGroupingProtocol.randomSplit(by:seed:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 64))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of RowGroupingProtocol.summary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RowGroupingProtocol.summary(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of RowGroupingProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t storeEnumTagSinglePayload for Order(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2150E41F8 + 4 * byte_2151392B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2150E422C + 4 * asc_2151392B0[v4]))();
}

uint64_t sub_2150E422C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2150E4234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2150E423CLL);
  return result;
}

uint64_t sub_2150E4248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2150E4250);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2150E4254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2150E425C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Order()
{
  return &type metadata for Order;
}

uint64_t sub_2150E4278(uint64_t a1, uint64_t a2)
{
  return sub_2150E42B8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BEE07D8]) & 1;
}

uint64_t sub_2150E4298(uint64_t a1, uint64_t a2)
{
  return sub_2150E42B8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BEE07E0]) & 1;
}

uint64_t sub_2150E42B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24)) & 1;
}

uint64_t sub_2150E42EC(uint64_t a1, uint64_t a2)
{
  char **v2;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;

  v5 = sub_21512FB0C();
  MEMORY[0x24BDAC7A8](v5);
  sub_2150E43E4(a1, a2);
  v6 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_21502EBE8(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
  v8 = *((_QWORD *)v6 + 2);
  v7 = *((_QWORD *)v6 + 3);
  if (v8 >= v7 >> 1)
    v6 = sub_21502EBE8((char *)(v7 > 1), v8 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v8 + 1;
  v6[v8 + 32] = 0;
  *v2 = v6;
  sub_21512FB00();
  return sub_21512FAB8();
}

unint64_t sub_2150E43E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t result;
  _QWORD *v8;
  size_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *(_QWORD *)v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    result = sub_21504635C(0, *(_QWORD *)(v6 + 16));
    if (a2 < 1)
      return result;
    goto LABEL_8;
  }
  if (*(_QWORD *)(v6 + 24) >= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D210);
    v8 = (_QWORD *)swift_allocObject();
    v9 = _swift_stdlib_malloc_size(v8);
    v8[2] = 0;
    v8[3] = 2 * v9 - 64;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)v2 = v8;
  result = swift_bridgeObjectRelease();
  if (a2 >= 1)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = *(unsigned __int8 *)(a1 + v10);
      if ((v11 & 1) != 0)
        goto LABEL_26;
      if ((v12 & 1) == 0 && v13 == 34 && (*(_BYTE *)(v2 + 57) & 1) != 0)
      {
        v11 = 0;
        v12 = 1;
      }
      else
      {
        if (*(unsigned __int8 *)(v2 + 60) != v13 || (*(_BYTE *)(v2 + 58) & 1) == 0)
        {
          if ((v12 & (v13 == 34)) == 1)
          {
            v14 = v10 + 1;
            if (v10 + 1 >= a2 || *(_BYTE *)(a1 + v14) != 34)
            {
              v11 = 0;
              v12 = 0;
              goto LABEL_10;
            }
            v15 = *(_QWORD *)v2;
            result = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v2 = v15;
            if ((result & 1) == 0)
            {
              result = (unint64_t)sub_21502EBE8(0, *(_QWORD *)(v15 + 16) + 1, 1, (char *)v15);
              v15 = result;
              *(_QWORD *)v2 = result;
            }
            v17 = *(_QWORD *)(v15 + 16);
            v16 = *(_QWORD *)(v15 + 24);
            v18 = v17 + 1;
            v12 = 1;
            if (v17 >= v16 >> 1)
            {
              result = (unint64_t)sub_21502EBE8((char *)(v16 > 1), v17 + 1, 1, (char *)v15);
              v15 = result;
            }
            LOBYTE(v13) = 34;
          }
          else
          {
LABEL_26:
            v15 = *(_QWORD *)v2;
            result = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v2 = v15;
            if ((result & 1) == 0)
            {
              result = (unint64_t)sub_21502EBE8(0, *(_QWORD *)(v15 + 16) + 1, 1, (char *)v15);
              v15 = result;
              *(_QWORD *)v2 = result;
            }
            v17 = *(_QWORD *)(v15 + 16);
            v19 = *(_QWORD *)(v15 + 24);
            v18 = v17 + 1;
            if (v17 >= v19 >> 1)
            {
              result = (unint64_t)sub_21502EBE8((char *)(v19 > 1), v17 + 1, 1, (char *)v15);
              v15 = result;
            }
            v14 = v10;
          }
          v11 = 0;
          *(_QWORD *)(v15 + 16) = v18;
          *(_BYTE *)(v15 + v17 + 32) = v13;
          *(_QWORD *)v2 = v15;
          v10 = v14;
          goto LABEL_10;
        }
        v11 = 1;
      }
LABEL_10:
      ++v10;
    }
    while (v10 < a2);
  }
  return result;
}

uint64_t destroy for StringBuilder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StringBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StringBuilder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  return a1;
}

__n128 __swift_memcpy61_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StringBuilder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  return a1;
}

uint64_t getEnumTagSinglePayload for StringBuilder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 61))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 61) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 61) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StringBuilder()
{
  return &type metadata for StringBuilder;
}

uint64_t FilledColumn<>.min()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2150E498C(a1, a2, (void (*)(uint64_t, uint64_t))Column<A>.min(), (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE07E0], (uint64_t (*)(uint64_t, uint64_t))FilledColumn<>.min(), a3);
}

uint64_t FilledColumn<>.max()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2150E498C(a1, a2, (void (*)(uint64_t, uint64_t))Column<A>.max(), (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE07D8], (uint64_t (*)(uint64_t, uint64_t))FilledColumn<>.max(), a3);
}

uint64_t sub_2150E498C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t (*a4)(char *, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  uint64_t (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;

  v47 = a5;
  v48 = a3;
  v49 = a4;
  v50 = a2;
  v53 = a6;
  v52 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v51 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v8 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_215130064();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v41 - v15;
  v54 = AssociatedTypeWitness;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)v41 - v19;
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  if ((sub_21512FF14() & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v53, 1, 1, v54);
  v42 = v13;
  v43 = v12;
  v44 = v16;
  v45 = v17;
  v25 = v51;
  v26 = v52;
  v46 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v6, v10);
  v27 = v54;
  v30 = type metadata accessor for Column(0, v54, v28, v29);
  if (!swift_dynamicCast())
    return v47(a1, v50);
  v47 = v55;
  v41[1] = v56;
  v31 = v44;
  v32 = v50;
  v48(v30, v50);
  v33 = v25;
  v34 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v33, v6, a1);
  v35 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v34, 1, v27) == 1)
  {
    v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v46, &v33[*(int *)(a1 + 36)], v27);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v33, a1);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v43);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v33, a1);
    v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v46, v34, v27);
  }
  v38 = v6 + *(int *)(a1 + 36);
  v39 = v49(v37, v38, v27, v32);
  swift_release();
  swift_bridgeObjectRelease();
  v40 = v53;
  if ((v39 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v53, v37, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v40, v38, v27);
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v40, 0, 1, v27);
}

uint64_t FilledColumn<>.argmin()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_2150E4D0C(a1, a2, (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E0], a3);
}

uint64_t FilledColumn<>.argmax()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_2150E4D0C(a1, a2, (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07D8], a3);
}

uint64_t sub_2150E4D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, char *, uint64_t, uint64_t)@<X2>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, char *, uint64_t, uint64_t);
  char *v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v64 = a3;
  v63 = a2;
  v68 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v81 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)&v54 - v8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = sub_215130064();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v54 - v15;
  v74 = (unsigned int (*)(char *, uint64_t, uint64_t))MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v17 = sub_21512F944();
  v82 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v60 = (char *)&v54 - v18;
  v19 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE0660], v17);
  v20 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v85 = v17;
  v86 = a1;
  v57 = v17;
  v87 = v19;
  v88 = v20;
  v59 = v19;
  v21 = v20;
  v58 = v20;
  v69 = sub_2151301A8();
  MEMORY[0x24BDAC7A8](v69);
  v56 = (char *)&v54 - v22;
  v85 = v17;
  v86 = a1;
  v87 = v19;
  v88 = v21;
  v80 = sub_21513019C();
  v55 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)&v54 - v23;
  v24 = AssociatedTypeWitness;
  v25 = sub_215130064();
  v77 = *(_QWORD *)(v25 - 8);
  v78 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v65 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v75 = (char *)&v54 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v54 - v30;
  v62 = v10;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v67((uint64_t)v68, 1, 1, v9);
  v32 = v61;
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
  v76 = v24;
  v66 = v33;
  v33(v31, 1, 1, v24);
  v34 = v60;
  sub_21512FF38();
  v35 = v57;
  sub_215130490();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v34, v35);
  sub_215130184();
  v36 = v31;
  sub_215130190();
  v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
  if (v74(v16, 1, TupleTypeMetadata2) == 1)
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v55 + 8))(v79, v80);
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v36, v78);
  }
  v83 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
  v69 = (uint64_t)v31;
  v70 = v16;
  v72 = TupleTypeMetadata2;
  v73 = v12;
  v71 = v9;
  v38 = v76;
  v39 = v78;
  while (1)
  {
    v40 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    v83(v12, v16, v9);
    v41 = v84;
    v82 = *(_QWORD *)(v32 + 32);
    ((void (*)(char *, char *, uint64_t))v82)(v84, v40, v38);
    v42 = v77;
    v43 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
    v44 = v75;
    v43(v75, v36, v39);
    v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    LODWORD(v40) = v45(v44, 1, v38);
    v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    v46(v44, v39);
    v47 = v81;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v81, v41, v38);
    if ((_DWORD)v40 == 1)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v38);
      v16 = v70;
LABEL_10:
      v36 = (char *)v69;
      v46((char *)v69, v39);
      v9 = v71;
      v52 = sub_215130064();
      v53 = v68;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v68, v52);
      v12 = v73;
      v83(v53, v73, v9);
      v67((uint64_t)v53, 0, 1, v9);
      ((void (*)(char *, char *, uint64_t))v82)(v36, v84, v38);
      v66(v36, 0, 1, v38);
      goto LABEL_5;
    }
    v48 = v65;
    v43(v65, v36, v39);
    result = v45(v48, 1, v38);
    if ((_DWORD)result == 1)
      break;
    v49 = v81;
    v50 = v64(v81, v48, v38, v63);
    v51 = *(void (**)(char *, uint64_t))(v32 + 8);
    v51(v49, v38);
    v51(v48, v38);
    v16 = v70;
    if ((v50 & 1) != 0)
      goto LABEL_10;
    v51(v84, v38);
    v12 = v73;
    v9 = v71;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v73, v71);
    v36 = (char *)v69;
LABEL_5:
    sub_215130190();
    TupleTypeMetadata2 = v72;
    if (v74(v16, 1, v72) == 1)
      goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t FilledColumn<>.sum()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a3;
  v6 = *(char **)(a1 + 16);
  v32 = *(char **)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v31 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v31 - v13;
  v14 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (char *)a2;
  v17 = *(_QWORD *)(a2 + 24);
  v18 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v37 = v3;
  if ((sub_21512FF14() & 1) != 0)
  {
    swift_getAssociatedConformanceWitness();
    sub_21513046C();
    return sub_2151303F4();
  }
  else
  {
    (*(void (**)(char *, uint64_t, char *))(v14 + 16))(v16, v37, v6);
    v22 = type metadata accessor for Column(0, AssociatedTypeWitness, v20, v21);
    if (swift_dynamicCast())
    {
      v23 = v40;
      v24 = v36;
      Column<A>.sum()(v22, *(_QWORD *)(v17 + 8));
      v39 = sub_215113FA8(v23, AssociatedTypeWitness);
      sub_2150BE470();
      v25 = v31;
      sub_2151300E8();
      v26 = v33;
      sub_21512FDF4();
      v27 = *(void (**)(char *, uint64_t))(v35 + 8);
      v27(v25, AssociatedTypeWitness);
      sub_2151302F8();
      swift_release();
      swift_bridgeObjectRelease();
      v27(v26, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v27)(v24, AssociatedTypeWitness);
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_21513046C();
      v28 = v36;
      v29 = sub_2151303F4();
      MEMORY[0x24BDAC7A8](v29);
      v30 = v32;
      *(&v31 - 4) = v6;
      *(&v31 - 3) = v30;
      *(&v31 - 2) = v34;
      *(&v31 - 1) = (char *)AssociatedTypeWitness;
      MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
      sub_21512FC74();
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v28, AssociatedTypeWitness);
    }
  }
}

{
  uint64_t v3;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a3;
  v6 = *(char **)(a1 + 16);
  v33 = *(char **)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v31 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v31 - v13;
  v14 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (char *)a2;
  v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 8);
  v18 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v37 = v3;
  if ((sub_21512FF14() & 1) != 0)
  {
    swift_getAssociatedConformanceWitness();
    sub_21513046C();
    return sub_2151303F4();
  }
  else
  {
    (*(void (**)(char *, uint64_t, char *))(v14 + 16))(v16, v37, v6);
    v22 = type metadata accessor for Column(0, AssociatedTypeWitness, v20, v21);
    if (swift_dynamicCast())
    {
      v23 = v39;
      v24 = v36;
      Column<A>.sum()(v22, *(_QWORD *)(v17 + 8));
      sub_215113FA8(v23, AssociatedTypeWitness);
      v25 = v31;
      sub_21512F8F0();
      v26 = v32;
      sub_21512FDF4();
      v27 = *(void (**)(char *, uint64_t))(v35 + 8);
      v27(v25, AssociatedTypeWitness);
      sub_2151302F8();
      swift_release();
      swift_bridgeObjectRelease();
      v27(v26, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v27)(v24, AssociatedTypeWitness);
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_21513046C();
      v28 = v36;
      v29 = sub_2151303F4();
      MEMORY[0x24BDAC7A8](v29);
      v30 = v33;
      *(&v31 - 4) = v6;
      *(&v31 - 3) = v30;
      *(&v31 - 2) = v34;
      *(&v31 - 1) = (char *)AssociatedTypeWitness;
      MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
      sub_21512FC74();
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v28, AssociatedTypeWitness);
    }
  }
}

uint64_t sub_2150E57B4()
{
  swift_getAssociatedTypeWitness();
  return sub_2151302F8();
}

uint64_t FilledColumn<>.mean()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double v15;
  _OWORD v17[2];
  uint64_t v18;

  v17[1] = *(_OWORD *)(a1 + 16);
  v18 = a2;
  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v5 = sub_2150ED6A0((void (*)(char *, char *))sub_2150E62CC, (uint64_t)v17, a1, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_10;
  if (v6 == 1)
  {
    v7 = 0;
    v8 = 0.0;
    v9 = 0.0;
LABEL_7:
    v12 = v6 - v7;
    v13 = (double *)(v5 + 8 * v7 + 32);
    do
    {
      v14 = *v13++;
      v9 = v9 + v14;
      v8 = v8 + 1.0;
      --v12;
    }
    while (v12);
    goto LABEL_9;
  }
  v7 = v6 & 0x7FFFFFFFFFFFFFFELL;
  v10 = (double *)(v5 + 40);
  v8 = 0.0;
  v11 = v6 & 0x7FFFFFFFFFFFFFFELL;
  v9 = 0.0;
  do
  {
    v8 = v8 + 1.0 + 1.0;
    v9 = v9 + *(v10 - 1) + *v10;
    v10 += 2;
    v11 -= 2;
  }
  while (v11);
  if (v6 != v7)
    goto LABEL_7;
LABEL_9:
  if (v8 != 0.0)
  {
    v15 = v9 / v8;
    goto LABEL_12;
  }
LABEL_10:
  v15 = 0.0;
LABEL_12:
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v15;
}

double sub_2150E5958(uint64_t a1, double result)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    if (v2 == 1)
    {
      v3 = 0;
      result = 0.0;
      v4 = 0.0;
    }
    else
    {
      v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
      v5 = (double *)(a1 + 40);
      result = 0.0;
      v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
      v4 = 0.0;
      do
      {
        result = result + 1.0 + 1.0;
        v4 = v4 + *(v5 - 1) + *v5;
        v5 += 2;
        v6 -= 2;
      }
      while (v6);
      if (v2 == v3)
        goto LABEL_9;
    }
    v7 = v2 - v3;
    v8 = (double *)(a1 + 8 * v3 + 32);
    do
    {
      v9 = *v8++;
      v4 = v4 + v9;
      result = result + 1.0;
      --v7;
    }
    while (v7);
LABEL_9:
    if (result != 0.0)
      return v4 / result;
  }
  return result;
}

uint64_t FilledColumn<>.standardDeviation(deltaDegreesOfFreedom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;

  v10[1] = *(_OWORD *)(a2 + 16);
  v11 = a3;
  v5 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>);
  v7 = sub_2150ED6A0((void (*)(char *, char *))sub_2150E5C00, (uint64_t)v10, a2, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
  v8 = sub_2150E5C20(v7, a1);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2150E5AA0@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  double v9;
  char v10;
  uint64_t v11;
  _QWORD v12[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v12 - v6, a1, AssociatedTypeWitness);
  if (sub_2151300D0() < 65)
  {
    v10 = sub_2151300DC();
    v11 = sub_2151300C4();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    if ((v10 & 1) != 0)
      v9 = (double)v11;
    else
      v9 = (double)(unint64_t)v11;
  }
  else
  {
    sub_2150BE4B4();
    sub_215049CE8();
    sub_21512F848();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    v9 = *(double *)&v12[1];
  }
  *a2 = v9;
  return result;
}

uint64_t sub_2150E5C00@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_2150E5AA0(a1, a2);
}

uint64_t sub_2150E5C20(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double *v6;
  uint64_t v7;
  unint64_t v8;
  double *v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  float64x2_t v14;
  float64x2_t *v15;
  uint64_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  unint64_t v21;
  double *v22;
  double v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (!v2)
      return 0;
    if (v2 == 1)
    {
      v3 = 0;
      v4 = 0.0;
      v5 = 0.0;
    }
    else
    {
      v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
      v6 = (double *)(a1 + 40);
      v4 = 0.0;
      v7 = v2 & 0x7FFFFFFFFFFFFFFELL;
      v5 = 0.0;
      do
      {
        v4 = v4 + 1.0 + 1.0;
        v5 = v5 + *(v6 - 1) + *v6;
        v6 += 2;
        v7 -= 2;
      }
      while (v7);
      if (v2 == v3)
      {
LABEL_10:
        if (v4 != 0.0)
        {
          v11 = v5 / v4;
          if (v2 >= 4)
          {
            v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
            v14 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v11, 0);
            v15 = (float64x2_t *)(a1 + 48);
            v13 = 0.0;
            v16 = v2 & 0x7FFFFFFFFFFFFFFCLL;
            do
            {
              v17 = vsubq_f64(v15[-1], v14);
              v18 = vsubq_f64(*v15, v14);
              v19 = vmulq_f64(v17, v17);
              v20 = vmulq_f64(v18, v18);
              v13 = v13 + v19.f64[0] + v19.f64[1] + v20.f64[0] + v20.f64[1];
              v15 += 2;
              v16 -= 4;
            }
            while (v16);
            if (v2 == v12)
            {
LABEL_18:
              v24 = (uint64_t)v2 <= a2;
              v25 = v2 - a2;
              if (!v24)
                return sqrt(v13 / (double)v25);
              return 0;
            }
          }
          else
          {
            v12 = 0;
            v13 = 0.0;
          }
          v21 = v2 - v12;
          v22 = (double *)(a1 + 8 * v12 + 32);
          do
          {
            v23 = *v22++;
            v13 = v13 + (v23 - v11) * (v23 - v11);
            --v21;
          }
          while (v21);
          goto LABEL_18;
        }
        return 0;
      }
    }
    v8 = v2 - v3;
    v9 = (double *)(a1 + 8 * v3 + 32);
    do
    {
      v10 = *v9++;
      v5 = v5 + v10;
      v4 = v4 + 1.0;
      --v8;
    }
    while (v8);
    goto LABEL_10;
  }
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150E61A4()
{
  swift_getAssociatedTypeWitness();
  return sub_2151302F8();
}

uint64_t FilledColumn<>.mean()@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v3)(char *, char *, uint64_t);
  uint64_t v7;

  v7 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  return sub_2150FC944(v3, a1, v7, a2, a3);
}

uint64_t FilledColumn<>.standardDeviation(deltaDegreesOfFreedom:)@<X0>(uint64_t a1@<X0>, unsigned int (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v4)(char *, char *, uint64_t);
  uint64_t v9;

  v9 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>);
  return sub_2150FCDF8(v4, a1, a2, v9, a3, a4);
}

uint64_t sub_2150E62CC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_2150E5C00(a1, a2);
}

uint64_t FilledColumn.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, _QWORD);
  void (*v20)(char *);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33[32];

  v4 = v3;
  v29 = a1;
  v32 = a3;
  v31 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v30 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v7 + 16);
  v8 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_215130064();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v28 - v14;
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v4, v9);
  v28[1] = v8;
  v19 = (void (*)(char *, _QWORD))sub_21512FF5C();
  v28[0] = v12;
  v20 = *(void (**)(char *))(v12 + 16);
  v21 = v15;
  v29 = v11;
  v20(v15);
  v19(v33, 0);
  v22 = v30;
  v23 = v31;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v4, a2);
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, AssociatedTypeWitness) == 1)
  {
    v25 = &v22[*(int *)(a2 + 36)];
    v26 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v32, v25, v26);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v28[0] + 8))(v21, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v32, v21, AssociatedTypeWitness);
  }
}

uint64_t OptionalColumnProtocol.filled(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v18 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v4, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, AssociatedTypeWitness);
  return sub_2150E6628((uint64_t)v15, (uint64_t)v13, a2, a3, a4);
}

uint64_t sub_2150E6628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for FilledColumn(0, a3, a4, v9) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v10, a2, AssociatedTypeWitness);
}

uint64_t FilledColumn.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FilledColumn.base.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*FilledColumn.base.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t FilledColumn.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t FilledColumn.name.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_2150E6760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for FilledColumn(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  swift_bridgeObjectRetain();
  return FilledColumn.name.setter(v4, v5, v6);
}

uint64_t FilledColumn.name.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 24))(a1, a2, *(_QWORD *)(a3 + 16));
}

void (*FilledColumn.name.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[2] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
  v5[3] = v7;
  v8 = *(uint64_t (**)(void))(v7 + 16);
  v5[4] = v6;
  *v5 = v8();
  v5[1] = v9;
  return sub_2150E6828;
}

void sub_2150E6828(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[3];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24);
  v7 = (*a1)[4];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v6(v4, v3, v7, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6(**a1, v3, v7, v5);
  }
  free(v2);
}

uint64_t FilledColumn.startIndex.getter(uint64_t a1)
{
  return sub_2150E68C8(a1, (void (*)(uint64_t, _QWORD))MEMORY[0x24BEE18A0]);
}

uint64_t FilledColumn.endIndex.getter(uint64_t a1)
{
  return sub_2150E68C8(a1, (void (*)(uint64_t, _QWORD))MEMORY[0x24BEE1910]);
}

uint64_t sub_2150E68C8(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  a2(v4, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8) + 8));
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FilledColumn.index(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  sub_21512FE6C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FilledColumn.index(before:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  sub_21512F974();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void (*sub_2150E6AE8(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = FilledColumn.name.modify(v4, a2);
  return sub_215072674;
}

uint64_t sub_2150E6B34(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2150E6B60()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150E6B70(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE0658], a1, &v3);
}

uint64_t sub_2150E6BB8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_2150E6C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150E6EC4(a1, a2, a3, (void (*)(uint64_t, uint64_t))FilledColumn.index(before:));
}

void sub_2150E6C10()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150E6C20()
{
  return swift_getAssociatedConformanceWitness();
}

void (*sub_2150E6C50(uint64_t **a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2150E6CAC(v6, a2, a3);
  return sub_215072674;
}

void (*sub_2150E6CAC(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void *v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  FilledColumn.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_21506DF04;
}

uint64_t sub_2150E6D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_2150E6DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a3);
  return sub_21512F998();
}

uint64_t sub_2150E6E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a4);
  return sub_21512F98C();
}

uint64_t sub_2150E6E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a3);
  return sub_21512F9A4();
}

uint64_t sub_2150E6EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150E6EC4(a1, a2, a3, (void (*)(uint64_t, uint64_t))FilledColumn.index(after:));
}

uint64_t sub_2150E6EC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v12 - v9;
  a4(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, AssociatedTypeWitness);
}

uint64_t sub_2150E6F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v12 - v7;
  v9 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v2, a1);
  FilledColumn.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, a1);
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  v10 = sub_2151302B0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v10 + 36), v8, AssociatedTypeWitness);
}

uint64_t sub_2150E7088(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  return sub_21512FEC0();
}

uint64_t sub_2150E70BC(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for FilledColumn<A>, a1);
  return sub_21512FECC();
}

uint64_t sub_2150E70F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = type metadata accessor for FilledColumn(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = FilledColumn.name.getter(v5);
  *a4 = result;
  a4[1] = v7;
  return result;
}

uint64_t sub_2150E712C()
{
  return 16;
}

__n128 sub_2150E7138(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2150E7144()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_2150E71EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v16 = AssociatedTypeWitness;
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_2150E72E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

uint64_t sub_2150E735C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2150E73F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2150E748C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2150E7524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2150E75BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, AssociatedTypeWitness);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_2150E7768(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for FilledColumn(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FilledColumn);
}

uint64_t sub_2150E79A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_215038BC8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_215038BC8((char *)(v7 > 1), v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2150E7A78(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v31;
  int64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v31 = a5 & 1;
  v39 = MEMORY[0x24BEE4AF8];
  sub_215038C1C(0, v7, 0);
  v8 = v39;
  v10 = (unint64_t *)(a1 + 64);
  while (1)
  {
    v11 = *(v10 - 3);
    v12 = *(v10 - 2);
    v13 = *(v10 - 1);
    v14 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      sub_215130178();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      sub_21501D914();
      swift_allocError();
      *(_QWORD *)v29 = 0x20676E697373694DLL;
      *(_QWORD *)(v29 + 8) = 0xE800000000000000;
      *(_BYTE *)(v29 + 16) = 0;
      swift_willThrow();
      goto LABEL_14;
    }
    v35 = v7;
    v36 = v8;
    v15 = v6;
    v16 = *(v10 - 4);
    v17 = *v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v18 = sub_21502F840(v12, v13);
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v8 = v36;
      goto LABEL_12;
    }
    v20 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 24 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = v20[2];
    sub_21501F068(*v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_215058030(v16, v11, v17, a3, a4, v31, v21, v37, v23);
    v6 = v15;
    if (v15)
      break;
    sub_21501F0D8(v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v36;
    v39 = v36;
    v25 = *(_QWORD *)(v36 + 16);
    v24 = *(_QWORD *)(v36 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_215038C1C((char *)(v24 > 1), v25 + 1, 1);
      v8 = v39;
    }
    v10 += 5;
    *(_QWORD *)(v8 + 16) = v25 + 1;
    v26 = v8 + 40 * v25;
    v27 = v37[0];
    v28 = v37[1];
    *(_QWORD *)(v26 + 64) = v38;
    *(_OWORD *)(v26 + 32) = v27;
    *(_OWORD *)(v26 + 48) = v28;
    v7 = v35 - 1;
    if (v35 == 1)
      return v8;
  }
  sub_21501F0D8(v22, v21);
  swift_bridgeObjectRelease();
  v8 = v36;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t DataFrame.init(contentsOfSFrameDirectory:columns:rows:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  _OWORD *v71;
  _BYTE v72[12];
  int v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  int64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  id v95;
  _BYTE *v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100[2];

  LODWORD(v93) = a5;
  v91 = a3;
  v92 = a4;
  v90 = a6;
  v100[1] = *MEMORY[0x24BDAC8D0];
  v9 = sub_21512F638();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v96 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)&v97 = &v72[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v94 = &v72[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v72[-v17];
  sub_21512F620();
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_21512F62C();
  v20 = (void *)sub_21512FA70();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v26 = 0;
    *(_QWORD *)(v26 + 8) = 0;
    *(_BYTE *)(v26 + 16) = 6;
    swift_willThrow();

    goto LABEL_6;
  }
  v89 = a2;
  v95 = v19;
  v22 = sub_21512F644();
  if (v6)
  {

    swift_bridgeObjectRelease();
LABEL_6:
    v27 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v27(a1, v9);
    v27((uint64_t)v18, v9);
    return swift_bridgeObjectRelease();
  }
  v24 = v22;
  v25 = v23;
  v87 = v9;
  v88 = a1;
  v86 = v18;
  v29 = sub_2150E9968(v22, v23);
  v31 = v30;
  sub_21501F0D8(v24, v25);
  *(_QWORD *)&v98 = v29;
  *((_QWORD *)&v98 + 1) = v31;
  swift_bridgeObjectRetain();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  v32 = v94;
  sub_21512F620();
  swift_bridgeObjectRelease();
  v33 = v97;
  v34 = v87;
  (*(void (**)(_QWORD, _BYTE *, uint64_t))(v10 + 16))(v97, v32, v87);
  v35 = sub_21512F644();
  sub_2150D0DF0(v35, v36);
  v38 = v37;
  v73 = v93 & 1;
  v78 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v78(v33, v34);
  v100[0] = MEMORY[0x24BEE4B00];
  v39 = swift_bridgeObjectRetain();
  v40 = sub_2150E79A4(v39);
  v82 = 0;
  v74 = v38;
  swift_bridgeObjectRelease();
  v41 = sub_215043714(v40);
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v41 + 56);
  v76 = (_QWORD *)(v41 + 56);
  v79 = v41;
  v43 = 1 << *(_BYTE *)(v41 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & v42;
  v75 = (char *)&v97 + 8;
  v77 = (unint64_t)(v43 + 63) >> 6;
  v46 = v86;
  v47 = v95;
  if (v45)
  {
    v48 = __clz(__rbit64(v45));
    v80 = (v45 - 1) & v45;
    v81 = 0;
LABEL_22:
    v52 = (uint64_t *)(*(_QWORD *)(v79 + 48) + 16 * v48);
    v53 = v52[1];
    v84 = *v52;
    *(_QWORD *)&v98 = v84;
    *((_QWORD *)&v98 + 1) = v53;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    v85 = v53;
    swift_bridgeObjectRetain();
    sub_21512F620();
    swift_bridgeObjectRelease();
    v54 = v82;
    v93 = sub_21512F644();
    v82 = v54;
    if (!v54)
    {
      v56 = (char *)&loc_2150E8390 + dword_2150E8F24[v55 >> 62];
      v83 = v55;
      __asm { BR              X9 }
    }
    v57 = v78;
    v78((uint64_t)v96, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v57(v88, v34);
    swift_release();
    v57((uint64_t)v94, v34);
    v57((uint64_t)v46, v34);
    goto LABEL_32;
  }
  v49 = 1;
  if (v77 > 1)
  {
    v50 = v76[1];
    if (v50)
    {
LABEL_21:
      v80 = (v50 - 1) & v50;
      v81 = v49;
      v48 = __clz(__rbit64(v50)) + (v49 << 6);
      goto LABEL_22;
    }
    v51 = 2;
    if (v77 > 2)
    {
      v50 = v76[2];
      if (v50)
        goto LABEL_20;
      v51 = 3;
      if (v77 <= 3)
        goto LABEL_29;
      v50 = v76[3];
      if (v50)
      {
LABEL_20:
        v49 = v51;
        goto LABEL_21;
      }
      v51 = 4;
      if (v77 > 4)
      {
        v50 = v76[4];
        if (v50)
          goto LABEL_20;
        while (1)
        {
          v49 = v51 + 1;
          if (__OFADD__(v51, 1))
            __break(1u);
          if (v49 >= v77)
            break;
          v50 = v76[v49];
          ++v51;
          if (v50)
            goto LABEL_21;
        }
      }
    }
  }
LABEL_29:
  swift_release();
  v58 = v89;
  if (v89)
  {
    v59 = v74;
    swift_bridgeObjectRetain();
    v60 = v82;
    v61 = sub_2150E8F34(v58, v59);
    v82 = v60;
    if (v60)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      v62 = v78;
      v78(v88, v34);
      v62((uint64_t)v94, v34);
      v62((uint64_t)v46, v34);
LABEL_32:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v64 = v61;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v63 = v64;
  }
  else
  {
    v63 = v74;
  }
  v65 = v82;
  v66 = sub_2150E7A78(v63, v100, v91, v92, v73);
  if (v65)
  {

    v67 = v78;
    v78(v88, v34);
    swift_bridgeObjectRelease();
    v67((uint64_t)v94, v34);
    v67((uint64_t)v46, v34);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v68 = v66;
  swift_bridgeObjectRelease();
  sub_215020C2C(v68, (char **)&v98);

  v69 = v78;
  v78(v88, v34);
  v69((uint64_t)v94, v34);
  v69((uint64_t)v46, v34);
  v70 = v99;
  swift_bridgeObjectRelease();
  v97 = v98;
  result = swift_bridgeObjectRelease();
  v71 = v90;
  *v90 = v97;
  *((_QWORD *)v71 + 2) = v70;
  return result;
}

uint64_t sub_2150E8F34(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_215038F10(0, v2, 0);
    v6 = 0;
    v3 = v32;
    v7 = a1 + 32;
    v8 = *(_QWORD *)(a2 + 16);
    v9 = (uint64_t *)(a2 + 64);
    v26 = (uint64_t *)(a2 + 64);
    v28 = a1 + 32;
    v29 = v2;
    v27 = v8;
    while (1)
    {
      v10 = (uint64_t *)(v7 + 16 * v6);
      v30 = v6 + 1;
      v31 = v3;
      v12 = *v10;
      v11 = v10[1];
      v13 = v9;
      v14 = v8;
      if (!v8)
        break;
      while (1)
      {
        v15 = *(v13 - 4);
        v16 = *(v13 - 3);
        v17 = *(v13 - 2);
        v18 = *(v13 - 1);
        v19 = *v13;
        if (v15 == v12 && v16 == v11)
          break;
        if ((sub_21513043C() & 1) != 0)
          goto LABEL_12;
        v13 += 5;
        if (!--v14)
        {
          v3 = v31;
          goto LABEL_16;
        }
      }
      v15 = v12;
      v16 = v11;
LABEL_12:
      v3 = v31;
      v22 = *(_QWORD *)(v31 + 16);
      v21 = *(_QWORD *)(v31 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
      {
        sub_215038F10((char *)(v21 > 1), v22 + 1, 1);
        v3 = v31;
      }
      *(_QWORD *)(v3 + 16) = v22 + 1;
      v23 = (_QWORD *)(v3 + 40 * v22);
      v23[4] = v15;
      v23[5] = v16;
      v23[6] = v17;
      v23[7] = v18;
      v23[8] = v19;
      v6 = v30;
      v8 = v27;
      v7 = v28;
      v9 = v26;
      if (v30 == v29)
        return v3;
    }
    v3 = v32;
LABEL_16:
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v24 = v12;
    *(_QWORD *)(v24 + 8) = v11;
    *(_BYTE *)(v24 + 16) = 5;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
  }
  return v3;
}

uint64_t sub_2150E9110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  BOOL v25;
  char v26;
  _QWORD *v27;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  const char *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  uint64_t v49;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_77;
  result = sub_21502F840(0x666572705F6D756ELL, 0xEC00000073657869);
  if ((v7 & 1) == 0)
    goto LABEL_77;
  v8 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * result);
  v9 = *v8;
  v10 = v8[1];
  v11 = HIBYTE(v10) & 0xF;
  v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v9 & 0xFFFFFFFFFFFFLL))
    goto LABEL_77;
  if ((v10 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v17 = (uint64_t)sub_215127000(v9, v10, 10);
    v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
      goto LABEL_38;
    goto LABEL_77;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    v48 = v9;
    v49 = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v11)
        goto LABEL_84;
      if (v11 == 1)
        goto LABEL_82;
      if ((BYTE1(v9) - 48) > 9u)
        goto LABEL_34;
      v17 = (BYTE1(v9) - 48);
      if (v11 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u)
          goto LABEL_34;
        v17 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        v18 = v11 - 3;
        if (v11 != 3)
        {
          v19 = (unsigned __int8 *)&v48 + 3;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              goto LABEL_34;
            v21 = 10 * v17;
            if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
              goto LABEL_34;
            v17 = v21 + v20;
            if (__OFADD__(v21, v20))
              goto LABEL_34;
            LOBYTE(v11) = 0;
            ++v19;
            if (!--v18)
              goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v11)
        {
          if (v11 != 1)
          {
            if ((BYTE1(v9) - 48) > 9u)
              goto LABEL_34;
            if (v11 == 2)
            {
              LOBYTE(v11) = 0;
              v17 = -(uint64_t)(BYTE1(v9) - 48);
              goto LABEL_37;
            }
            if ((BYTE2(v9) - 48) > 9u)
              goto LABEL_34;
            v17 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
            v38 = v11 - 3;
            if (v11 != 3)
            {
              v39 = (unsigned __int8 *)&v48 + 3;
              while (1)
              {
                v40 = *v39 - 48;
                if (v40 > 9)
                  goto LABEL_34;
                v41 = 10 * v17;
                if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
                  goto LABEL_34;
                v17 = v41 - v40;
                if (__OFSUB__(v41, v40))
                  goto LABEL_34;
                LOBYTE(v11) = 0;
                ++v39;
                if (!--v38)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_82:
          v17 = 0;
LABEL_37:
          if ((v11 & 1) == 0)
            goto LABEL_38;
LABEL_77:
          sub_21501D914();
          swift_allocError();
          v32 = 0;
          *(_QWORD *)v31 = 0xD000000000000034;
          v33 = "Directory archive index is missing the prefix count.";
          goto LABEL_78;
        }
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
      if (!v11 || (v9 - 48) > 9u)
      {
LABEL_34:
        v17 = 0;
        LOBYTE(v11) = 1;
        goto LABEL_37;
      }
      v17 = (v9 - 48);
      if (v11 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u)
          goto LABEL_34;
        v17 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        v34 = v11 - 2;
        if (v11 != 2)
        {
          v35 = (unsigned __int8 *)&v48 + 2;
          while (1)
          {
            v36 = *v35 - 48;
            if (v36 > 9)
              goto LABEL_34;
            v37 = 10 * v17;
            if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
              goto LABEL_34;
            v17 = v37 + v36;
            if (__OFADD__(v37, v36))
              goto LABEL_34;
            LOBYTE(v11) = 0;
            ++v35;
            if (!--v34)
              goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    LOBYTE(v11) = 0;
    goto LABEL_37;
  }
  if ((v9 & 0x1000000000000000) != 0)
    v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v14 = (unsigned __int8 *)sub_215130208();
  v15 = sub_215126FB0(v14, v12, 10);
  if ((v16 & 1) != 0)
    goto LABEL_77;
  v17 = (uint64_t)v15;
LABEL_38:
  if (!*(_QWORD *)(a1 + 16) || (v22 = sub_21502F840(0x6E6F6973726576, 0xE700000000000000), (v23 & 1) == 0))
  {
    sub_21501D914();
    swift_allocError();
    v32 = 0;
    *(_QWORD *)v31 = 0xD000000000000037;
    v33 = "Directory arachive index is missing the version number.";
LABEL_78:
    v29 = (unint64_t)(v33 - 32) | 0x8000000000000000;
    goto LABEL_79;
  }
  v24 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v22);
  v25 = *v24 == 49 && v24[1] == 0xE100000000000000;
  if (!v25 && (sub_21513043C() & 1) == 0)
    goto LABEL_73;
  if (!*(_QWORD *)(a2 + 16) || (result = sub_21502F840(0x73746E65746E6F63, 0xE800000000000000), (v26 & 1) == 0))
  {
    sub_21501D914();
    swift_allocError();
    v32 = 0;
    *(_QWORD *)v31 = 0xD000000000000038;
    v33 = "Directory archive index is missing the type of contents.";
    goto LABEL_78;
  }
  v27 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * result);
  if (*v27 != 0x656D61726673 || v27[1] != 0xE600000000000000)
  {
    result = sub_21513043C();
    if ((result & 1) == 0)
    {
LABEL_73:
      v48 = 0;
      v49 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_215130178();
      sub_21512FB90();
      sub_21512FB90();
      swift_bridgeObjectRelease();
      sub_21512FB90();
      v42 = v48;
      v29 = v49;
      sub_21501D914();
      swift_allocError();
      *(_QWORD *)v31 = v42;
      v32 = 1;
      goto LABEL_79;
    }
  }
  if (*(_QWORD *)(a3 + 16) == v17)
  {
    if (v17 == 3)
      return result;
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_215130178();
    swift_bridgeObjectRelease();
    v48 = 0xD000000000000018;
    v49 = 0x8000000215132040;
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v30 = v48;
    v29 = v49;
    sub_21501D914();
    swift_allocError();
    *(_QWORD *)v31 = v30;
    v32 = 3;
  }
  else
  {
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_215130178();
    sub_21512FB90();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v44 = v48;
    v43 = v49;
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_215130178();
    swift_bridgeObjectRelease();
    v48 = 0xD000000000000023;
    v49 = 0x8000000215132010;
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    sub_21512FB90();
    v48 = v44;
    v49 = v43;
    swift_bridgeObjectRetain();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = v48;
    v29 = v49;
    sub_21501D914();
    swift_allocError();
    v32 = 0;
    *(_QWORD *)v31 = v45;
  }
LABEL_79:
  *(_QWORD *)(v31 + 8) = v29;
  *(_BYTE *)(v31 + 16) = v32;
  return swift_willThrow();
}

uint64_t sub_2150E9968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  const char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_2150FC324(a1, a2);
  if (v2)
  {
    MEMORY[0x2199DC41C](v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
    if ((swift_dynamicCast() & 1) != 0)
    {
      MEMORY[0x2199DC410](v2);
      sub_21501D914();
      swift_allocError();
      *(_QWORD *)v5 = 0xD000000000000028;
      *(_QWORD *)(v5 + 8) = 0x8000000215131D60;
      *(_BYTE *)(v5 + 16) = 0;
      swift_willThrow();
    }
    MEMORY[0x2199DC410](v2);
    return (uint64_t)v3;
  }
  v3 = v4;
  v6 = v4[2];
  if (!v6)
    goto LABEL_51;
  v7 = v4[4];
  v8 = v3[5];
  v9 = v3[6];
  v10 = v7 == 0x65766968637261 && v8 == 0xE700000000000000;
  v41 = v6;
  v38 = v7;
  if (!v10)
  {
    result = sub_21513043C();
    v40 = v9;
    if ((result & 1) != 0)
    {
LABEL_11:
      v12 = v8 == 0xE800000000000000;
      if (v38 == 0x617461646174656DLL)
      {
        v13 = v9;
        v6 = v41;
        if (v8 == 0xE800000000000000)
        {
LABEL_20:
          result = sub_21513043C();
          v16 = v40;
          if ((result & 1) != 0)
          {
LABEL_61:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_2150E9110(v16, v13, v9);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v9 + 16))
            {
              v34 = sub_21502F840(842018864, 0xE400000000000000);
              if ((v35 & 1) != 0)
              {
                v3 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 16 * v34);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return (uint64_t)v3;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21501D914();
            swift_allocError();
            v32 = "Directory archive is missing the 0002 prefix.";
            v33 = 0xD00000000000002DLL;
            goto LABEL_52;
          }
          if (v6 != 1)
          {
            v39 = v13;
            v17 = v3 + 9;
            v18 = 1;
            while (1)
            {
              v19 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_67;
              v20 = *v17;
              if (*(v17 - 2) == 0x7365786966657270 && *(v17 - 1) == 0xE800000000000000)
                break;
              result = sub_21513043C();
              if ((result & 1) != 0)
              {
                v9 = v20;
                goto LABEL_60;
              }
              v17 += 3;
              ++v18;
              if (v19 == v41)
                goto LABEL_30;
            }
            v9 = *v17;
LABEL_60:
            v13 = v39;
            v16 = v40;
            goto LABEL_61;
          }
LABEL_30:
          swift_bridgeObjectRelease();
          sub_21501D914();
          swift_allocError();
          v23 = "Directory archive index is missing the 'prefixes' section.";
LABEL_41:
          *(_QWORD *)v22 = 0xD00000000000003ALL;
          *(_QWORD *)(v22 + 8) = (unint64_t)(v23 - 32) | 0x8000000000000000;
LABEL_53:
          *(_BYTE *)(v22 + 16) = 0;
          swift_willThrow();
          return (uint64_t)v3;
        }
      }
      else
      {
        v6 = v41;
      }
      goto LABEL_15;
    }
    if (v6 != 1)
    {
      v28 = v3 + 9;
      v29 = 1;
      do
      {
        v30 = v29 + 1;
        if (__OFADD__(v29, 1))
          goto LABEL_66;
        v40 = *v28;
        if (*(v28 - 2) == 0x65766968637261 && *(v28 - 1) == 0xE700000000000000)
          goto LABEL_11;
        result = sub_21513043C();
        if ((result & 1) != 0)
          goto LABEL_11;
        v28 += 3;
        ++v29;
      }
      while (v30 != v41);
    }
LABEL_51:
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    v32 = "Directory archive index is missing the 'archive' section.";
    v33 = 0xD000000000000039;
LABEL_52:
    *(_QWORD *)v22 = v33;
    *(_QWORD *)(v22 + 8) = (unint64_t)(v32 - 32) | 0x8000000000000000;
    goto LABEL_53;
  }
  v12 = 0;
  v40 = v3[6];
LABEL_15:
  v36 = v12;
  result = sub_21513043C();
  v14 = v9;
  v37 = v9;
  if ((result & 1) != 0)
  {
LABEL_16:
    v9 = v37;
    v15 = v36;
    if (v38 != 0x7365786966657270)
      v15 = 0;
    v13 = v14;
    if (v15)
    {
      v16 = v40;
      goto LABEL_61;
    }
    goto LABEL_20;
  }
  if (v6 == 1)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    sub_21501D914();
    swift_allocError();
    v23 = "Directory archive index is missing the 'metadata' section.";
    goto LABEL_41;
  }
  v24 = v3 + 9;
  v25 = 1;
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    v14 = *v24;
    if (*(v24 - 2) == 0x617461646174656DLL && *(v24 - 1) == 0xE800000000000000)
      goto LABEL_16;
    result = sub_21513043C();
    if ((result & 1) != 0)
      goto LABEL_16;
    v24 += 3;
    ++v25;
    if (v26 == v6)
      goto LABEL_40;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t CSVReadingOptions.init(hasHeaderRow:nilEncodings:trueEncodings:falseEncodings:floatingPointType:ignoresEmptyLines:usesQuoting:usesEscaping:delimiter:escapeCharacter:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  __int16 v17;
  __int16 v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v25 = *a5;
  v17 = sub_21512F950();
  swift_bridgeObjectRelease();
  if ((v17 & 0x100) != 0
    || (v26 = a3, v27 = a4, v18 = sub_21512F950(), swift_bridgeObjectRelease(), (v18 & 0x100) != 0))
  {
    result = sub_2151302EC();
    __break(1u);
  }
  else
  {
    v24 = a8 & 1;
    v19 = a7 & 1;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    objc_msgSend(v20, sel_setFormatOptions_, 51);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    objc_msgSend(v21, sel_setFormatOptions_, 1907);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D168);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_215135F80;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v20;
    *(_QWORD *)(result + 24) = v21;
    *(_OWORD *)(result + 32) = xmmword_215139580;
    *(_OWORD *)(result + 48) = xmmword_215139590;
    *(_QWORD *)(v22 + 32) = sub_2150EB034;
    *(_QWORD *)(v22 + 40) = result;
    *(_BYTE *)a9 = a1 & 1;
    *(_QWORD *)(a9 + 8) = a2;
    *(_QWORD *)(a9 + 16) = v26;
    *(_QWORD *)(a9 + 24) = v27;
    *(_BYTE *)(a9 + 32) = v25;
    *(_QWORD *)(a9 + 40) = v22;
    *(_BYTE *)(a9 + 48) = a6 & 1;
    *(_BYTE *)(a9 + 49) = v19;
    *(_BYTE *)(a9 + 50) = v24;
    *(_BYTE *)(a9 + 51) = v17;
    *(_BYTE *)(a9 + 52) = v18;
  }
  return result;
}

uint64_t sub_2150EA168@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2150EA190(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  return v3;
}

uint64_t sub_2150EA1C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_254DA8A38);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_21512F7C4();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_21512F704();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21512F6EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21512F6D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21512F6E0();
  MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, _QWORD))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDCE368]);
  v19 = v12;
  v20 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDCE348], v19);
  v21 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v22 = v29;
  v21(v11, *MEMORY[0x24BDCE388], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCE3D0], v28);
  sub_21512F7AC();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v3, 1, v22);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v3, v22);
    return sub_21512F6F8();
  }
  return result;
}

uint64_t CSVReadingOptions.hasHeaderRow.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CSVReadingOptions.hasHeaderRow.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*CSVReadingOptions.hasHeaderRow.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.nilEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.nilEncodings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.nilEncodings.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.trueEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.trueEncodings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.trueEncodings.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.falseEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.falseEncodings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.falseEncodings.modify())(_QWORD)
{
  return nullsub_5;
}

void CSVReadingOptions.floatingPointType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *CSVReadingOptions.floatingPointType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*CSVReadingOptions.floatingPointType.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.dateParsers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.dateParsers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.dateParsers.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.ignoresEmptyLines.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t CSVReadingOptions.ignoresEmptyLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*CSVReadingOptions.ignoresEmptyLines.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.usesQuoting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t CSVReadingOptions.usesQuoting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*CSVReadingOptions.usesQuoting.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.usesEscaping.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t CSVReadingOptions.usesEscaping.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 50) = result;
  return result;
}

uint64_t (*CSVReadingOptions.usesEscaping.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.delimiter.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 51);
  if (*(char *)(v0 + 51) >= 0)
    v2 = v1 + 1;
  else
    v2 = ((v1 >> 6) & 0xFFFFC0FF | ((v1 & 0x3F) << 8)) + 33217;
  v4 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  return MEMORY[0x2199DB690](&v4);
}

uint64_t CSVReadingOptions.escapeCharacter.getter()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 52);
  if (*(char *)(v0 + 52) >= 0)
    v2 = v1 + 1;
  else
    v2 = ((v1 >> 6) & 0xFFFFC0FF | ((v1 & 0x3F) << 8)) + 33217;
  v4 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  return MEMORY[0x2199DB690](&v4);
}

uint64_t CSVReadingOptions.addDateParseStrategy<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, a2);
  v11 = *(_QWORD **)(v3 + 40);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_21502ECD0(0, v11[2] + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    result = (uint64_t)sub_21502ECD0((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v11[2] = v14 + 1;
  v15 = &v11[2 * v14];
  v15[4] = sub_215063058;
  v15[5] = v10;
  *(_QWORD *)(v3 + 40) = v11;
  return result;
}

uint64_t CSVWritingOptions.includesHeader.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CSVWritingOptions.includesHeader.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*CSVWritingOptions.includesHeader.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.dateFormat.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.dateFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.dateFormat.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.dateFormatter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_2150EA8B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 24) = sub_2150EB76C;
  *(_QWORD *)(a2 + 32) = v5;
  return result;
}

uint64_t CSVWritingOptions.dateFormatter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.dateFormatter.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v3;
  swift_retain();
  return sub_2150EA98C;
}

uint64_t sub_2150EA98C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
    return swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
  }
  return result;
}

uint64_t CSVWritingOptions.nilEncoding.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.nilEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.nilEncoding.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.trueEncoding.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.trueEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.trueEncoding.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.falseEncoding.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.falseEncoding.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.falseEncoding.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.newline.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.newline.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.newline.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.delimiter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.delimiter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*CSVWritingOptions.delimiter.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.init(includesHeader:dateFormat:nilEncoding:trueEncoding:falseEncoding:newline:delimiter:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a6;
  v48 = a8;
  v49 = a2;
  v44 = a1;
  v18 = a14;
  v19 = a10;
  v45 = a4;
  v46 = a13;
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_254DA8A38);
  MEMORY[0x24BDAC7A8](v20);
  v43 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_21512F770();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  if (a3)
  {
    v26 = objc_allocWithZone(MEMORY[0x24BDD1500]);
    v38 = a3;
    swift_bridgeObjectRetain_n();
    v42 = a5;
    swift_bridgeObjectRetain();
    v40 = a7;
    swift_bridgeObjectRetain();
    v39 = a10;
    swift_bridgeObjectRetain();
    v41 = a14;
    swift_bridgeObjectRetain();
    v27 = objc_msgSend(v26, sel_init);
    sub_21512F74C();
    v28 = (void *)sub_21512F758();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    objc_msgSend(v27, sel_setLocale_, v28);

    v29 = v43;
    sub_21512F7AC();
    v30 = sub_21512F7C4();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
    {
      v32 = (void *)sub_21512F7B8();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
    }
    objc_msgSend(v27, sel_setTimeZone_, v32);

    a3 = v38;
    v33 = (void *)sub_21512FA70();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setDateFormat_, v33);

    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v27;
    v35 = sub_2150EB0D8;
    v18 = v41;
    a5 = v42;
    v19 = v39;
    a7 = v40;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = 0;
    v35 = sub_215062F2C;
  }
  v36 = v44 & 1;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a9 = v36;
  *(_QWORD *)(a9 + 8) = v49;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = v35;
  *(_QWORD *)(a9 + 32) = v34;
  *(_QWORD *)(a9 + 40) = v45;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = v47;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = v48;
  *(_QWORD *)(a9 + 80) = v19;
  *(_QWORD *)(a9 + 88) = 10;
  *(_QWORD *)(a9 + 96) = 0xE100000000000000;
  *(_QWORD *)(a9 + 104) = v46;
  *(_QWORD *)(a9 + 112) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150EAF98(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;

  v3 = (void *)sub_21512F71C();
  v4 = objc_msgSend(a2, sel_stringFromDate_, v3);

  v5 = sub_21512FA7C();
  return v5;
}

uint64_t sub_2150EB008()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2150EB034@<X0>(uint64_t a1@<X8>)
{
  return sub_215060754(a1);
}

uint64_t sub_2150EB05C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_2150EB0B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2150EB0D8(uint64_t a1)
{
  uint64_t v1;

  return sub_2150EAF98(a1, *(void **)(v1 + 16));
}

uint64_t sub_2150EB0E0@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_2150EB7C0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

uint64_t destroy for CSVReadingOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  return a1;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CSVReadingOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_WORD *)(a1 + 51) = *(_WORD *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVReadingOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 53))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVReadingOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 53) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVReadingOptions()
{
  return &type metadata for CSVReadingOptions;
}

uint64_t destroy for CSVWritingOptions()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CSVWritingOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVWritingOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVWritingOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVWritingOptions()
{
  return &type metadata for CSVWritingOptions;
}

uint64_t sub_2150EB76C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_2150EB79C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2150EB7C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t CSVWritingError.row.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CSVWritingError.column.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t CSVWritingError.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;

  v1 = *v0;
  v2 = v0[3];
  v3 = v0[4];
  sub_21501F068(v2, v3);
  sub_215130178();
  swift_bridgeObjectRelease();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_21512FB90();
  sub_21512FB90();
  sub_21501F068(v2, v3);
  sub_2150BA608(1024, v2, v3);
  sub_2150BFF5C(v1, v7);
  v5 = v4;
  sub_21501F0D8(v1, v7);
  MEMORY[0x2199DB810](v5, MEMORY[0x24BEE4260]);
  sub_21512FB90();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_21501F0D8(v2, v3);
  return 0xD000000000000019;
}

uint64_t destroy for CSVWritingError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_21501F0D8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for CSVWritingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_21501F068(v3, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

_QWORD *assignWithCopy for CSVWritingError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[3];
  v4 = a2[4];
  sub_21501F068(v5, v4);
  v6 = a1[3];
  v7 = a1[4];
  a1[3] = v5;
  a1[4] = v4;
  sub_21501F0D8(v6, v7);
  return a1;
}

uint64_t assignWithTake for CSVWritingError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_21501F0D8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVWritingError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVWritingError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVWritingError()
{
  return &type metadata for CSVWritingError;
}

int64_t sub_2150EBB78(int64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5;
  int64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t *v11;
  int64_t v12;
  uint64_t v13;

  v5 = sub_2150EBC3C(a2, a3, a4);
  result = sub_2150BA5C4(a1, v5);
  v10 = (v9 >> 1) - v8;
  if (v9 >> 1 == v8)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    if ((uint64_t)(v9 >> 1) > v8)
    {
      v11 = (int64_t *)(v7 + 8 * v8);
      while (1)
      {
        v12 = *v11++;
        result = v12;
        v13 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v13 < result)
          goto LABEL_11;
        sub_2150757D4(result, v13);
        if (!--v10)
        {
          swift_unknownObjectRelease();
          return 0;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2150EBC3C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;
  unint64_t v7;
  int64_t *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int64_t i;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  result = sub_2150437A8(a1, a2, a3);
  v7 = 0;
  v8 = (int64_t *)(a1 + 40);
  v9 = a3;
  if (!a3)
    goto LABEL_6;
  while (1)
  {
    if (v9 != 1)
      return v13;
    v10 = *(_QWORD *)(a1 + 16);
    if (v7 == v10)
    {
      sub_21501EF2C(a1, a2, 1);
      return v13;
    }
    if (v7 >= v10)
      break;
    v11 = *(v8 - 1);
    for (i = *v8; ; i = a2)
    {
      ++v7;
      result = sub_215054C00(v11, i);
      v8 += 2;
      v9 = a3;
      if (a3)
        break;
LABEL_6:
      if (v7 == 1)
        return v13;
      if (v7)
        goto LABEL_14;
      v11 = a1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2150EBD1C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v4 = 0;
  result = 0;
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (a3)
    {
      if (a3 != 1)
        return 0;
      v7 = *(_QWORD *)(a1 + 16);
      if (v4 == v7)
        return result;
      if (v4 >= v7)
        goto LABEL_17;
      v8 = *(v6 - 1);
      v9 = *v6;
    }
    else
    {
      if (v4 == 1)
        return result;
      if (v4)
        goto LABEL_18;
      v8 = a1;
      v9 = a2;
    }
    v10 = v9 - v8;
    if (__OFSUB__(v9, v8))
      break;
    ++v4;
    v6 += 2;
    v11 = __OFADD__(result, v10);
    result += v10;
    if (v11)
    {
      __break(1u);
      return 0;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2150EBDB0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    goto LABEL_33;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (uint64_t *)(a3 + 56);
  while (1)
  {
    v12 = *v10;
    v10 += 6;
    v11 = v12;
    v13 = v5 + v12;
    if (__OFADD__(v5, v12))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v13 <= result)
      goto LABEL_3;
    if (v5 <= result)
      break;
    v14 = __OFADD__(v6, v11);
    v6 += v11;
    if (v14)
      goto LABEL_25;
    if (v5 < a2)
      goto LABEL_14;
LABEL_3:
    ++v9;
    v5 = v13;
    if (v4 == v9)
      goto LABEL_21;
  }
  v7 = result - v5;
  if (__OFSUB__(result, v5))
    goto LABEL_26;
  v15 = v11 - v7;
  if (__OFSUB__(v11, v7))
    goto LABEL_27;
  v14 = __OFADD__(v6, v15);
  v6 += v15;
  if (v14)
    goto LABEL_28;
  v8 = v9;
  if (v5 >= a2)
    goto LABEL_3;
LABEL_14:
  if (v13 < a2)
    goto LABEL_3;
  v4 = v9 + 1;
  if (v9 + 1 < v8)
    goto LABEL_30;
  v16 = a2 - v5;
  if (__OFSUB__(a2, v5))
    goto LABEL_31;
  v17 = v11 - v16;
  if (__OFSUB__(v11, v16))
    goto LABEL_32;
  v14 = __OFSUB__(v6, v17);
  v6 -= v17;
  if (!v14)
    goto LABEL_23;
  __break(1u);
LABEL_21:
  if (v4 >= v8)
  {
    v16 = *(_QWORD *)(a3 + 48 * v4 + 8);
LABEL_23:
    *a4 = v8;
    a4[1] = v4;
    a4[2] = v7;
    a4[3] = v16;
    a4[4] = v6;
    return result;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2150EBEB4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = 0;
    v4 = *(_QWORD *)(result + 48 * v2 + 8);
    v5 = (uint64_t *)(result + 56);
    v6 = *(_QWORD *)(result + 16);
    while (1)
    {
      v7 = *v5;
      v5 += 6;
      v8 = __OFADD__(v3, v7);
      v3 += v7;
      if (v8)
        break;
      if (!--v6)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = 0;
LABEL_7:
    *a2 = 0;
    a2[1] = v2;
    a2[2] = 0;
    a2[3] = v4;
    a2[4] = v3;
  }
  return result;
}

uint64_t sub_2150EBF08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2150EBFB4(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v4 = a1;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v6 + 80) | v11);
  if (v13 <= 7
    && ((v12 + (v9 & ~v8)) & ~(unint64_t)v11) + *(_QWORD *)(v10 + 64) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | v11) & 0x100000) == 0)
  {
    v17 = ~v8;
    v18 = ~(unint64_t)v11;
    v21 = a3[4];
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v17, v19, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((((unint64_t)v4 + v9) & v17) + v12) & v18, (v19 + v12) & v18, v21);
  }
  else
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return v4;
}

uint64_t sub_2150EC0E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[4] - 8) + 8))((v7
                                                                                       + *(_QWORD *)(v6 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80));
}

uint64_t sub_2150EC168(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2150EC210(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2150EC2B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2150EC360(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2150EC408(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = a3[4];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) > v8)
    v8 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v4 + 64) + v11;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_25;
  v16 = ((v13 + v14 + (v12 & ~v11)) & ~v14) + *(_QWORD *)(v10 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 < 2)
    {
LABEL_25:
      if (v8)
      {
        if (v5 == v8)
          return (*(uint64_t (**)(void))(v4 + 48))();
        v22 = (v12 + a1) & ~v11;
        if (v7 == v8)
          return (*(uint64_t (**)(uint64_t))(v6 + 48))(v22);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + v13 + v14) & ~v14, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_25;
LABEL_16:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = ((v13 + v14 + (v12 & ~(_DWORD)v11)) & ~(_DWORD)v14) + *(_DWORD *)(v10 + 64);
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  return v8 + v20 + 1;
}

void sub_2150EC5C4(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = ((*(_QWORD *)(v6 + 64)
       + *(unsigned __int8 *)(v8 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(_QWORD *)(v8 + 64);
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v13 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X21 }
}

void type metadata accessor for Tuple3()
{
  JUMPOUT(0x2199DC470);
}

uint64_t sub_2150EC81C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2150EC824()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2150EC8B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_2150EC980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_2150EC9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2150ECA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2150ECAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2150ECB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2150ECB88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2150ECC64 + 4 * byte_2151396B6[v17 - 1]))();
}

void sub_2150ECCE0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for Tuple2()
{
  JUMPOUT(0x2199DC470);
}

void sub_2150ECEEC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for Tuple2();
}

uint64_t sub_2150ECF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

uint64_t sub_2150ECF78()
{
  sub_21512F914();
  return sub_21512F914();
}

uint64_t sub_2150ECFC4()
{
  if ((sub_21512FA58() & 1) != 0)
    type metadata accessor for Tuple2();
  return 0;
}

uint64_t sub_2150ED054(uint64_t a1)
{
  return sub_2150ED3CC(a1, (void (*)(_BYTE *, uint64_t))sub_2150ECF78);
}

uint64_t sub_2150ED074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150ED448(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_2150ECF78);
}

uint64_t sub_2150ED080()
{
  return sub_2150ECFC4();
}

uint64_t sub_2150ED090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 16);
  MEMORY[0x24BDAC7A8](v6);
  v13[0] = 0x28656C707554;
  v13[1] = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v9);
  sub_21512FB18();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2 + *(int *)(a1 + 52), v4);
  sub_21512FB18();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  return v13[0];
}

void sub_2150ED1CC(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Tuple3();
}

uint64_t sub_2150ED240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v5 + *(int *)(a1 + 68), v4, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + *(int *)(a1 + 72), v3, v1);
}

uint64_t sub_2150ED29C()
{
  sub_21512F914();
  sub_21512F914();
  return sub_21512F914();
}

uint64_t sub_2150ED304()
{
  if ((sub_21512FA58() & 1) != 0)
    type metadata accessor for Tuple3();
  return 0;
}

uint64_t sub_2150ED3CC(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_2151305A4();
  a2(v5, a1);
  return sub_2151305EC();
}

uint64_t sub_2150ED41C(uint64_t a1)
{
  return sub_2150ED3CC(a1, (void (*)(_BYTE *, uint64_t))sub_2150ED29C);
}

uint64_t sub_2150ED43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2150ED448(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_2150ED29C);
}

uint64_t sub_2150ED448(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_2151305A4();
  a4(v7, a2);
  return sub_2151305EC();
}

uint64_t sub_2150ED494()
{
  return sub_2150ED304();
}

uint64_t sub_2150ED4A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v17 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(v17 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v3);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_215130178();
  swift_bridgeObjectRelease();
  v18 = 0x28656C707554;
  v19 = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1, v11);
  sub_21512FB18();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v1 + *(int *)(a1 + 68), v6);
  sub_21512FB18();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v5, v1 + *(int *)(a1 + 72), v17);
  sub_21512FB18();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  return v18;
}

void sub_2150ED680()
{
  JUMPOUT(0x2199DC4C4);
}

void sub_2150ED690()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150ED6A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_21512FE60();
  if (!v18)
    return sub_21512FCEC();
  v19 = v18;
  v25 = v15;
  v39 = sub_21512F824();
  v32 = sub_215130274();
  sub_215130244();
  v36 = v17;
  result = sub_21512FE48();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_21512FF5C();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_21513025C();
      sub_21512FEB4();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t RowGrouping.randomSplit(by:seed:)(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v29[16];
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  char v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *);
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v25 = v6[2];
  v26 = v6[1];
  v46 = *v6;
  v7 = *(_QWORD *)(a5 + 16);
  v8 = *(_QWORD *)(a5 + 24);
  v41 = v7;
  v42 = v8;
  v43 = a6;
  v44 = a3;
  v45 = a4 & 1;
  v36 = v7;
  v37 = v8;
  v38 = sub_2150F2658;
  v39 = &v40;
  sub_215130064();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  v9 = sub_21512FD40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA8B40);
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x24BEE12E0];
  v12 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v9);
  v13 = MEMORY[0x24BEE4078];
  v14 = MEMORY[0x24BEE40A8];
  v16 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F2748, (uint64_t)v35, v9, TupleTypeMetadata2, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v15);
  swift_bridgeObjectRelease();
  v46 = v16;
  v33 = v7;
  v34 = v8;
  v17 = sub_21512FD40();
  v18 = (char *)swift_getTupleTypeMetadata2();
  v19 = MEMORY[0x2199DC4C4](v11, v17);
  v21 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F29A8, (uint64_t)v32, v17, v18, v13, v19, v14, v20);
  v46 = v16;
  v30 = v7;
  v31 = v8;
  v23 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F2C08, (uint64_t)v29, v17, v18, MEMORY[0x24BEE4078], v19, v14, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  RowGrouping.init<A>(groups:groupKeysColumnName:)(v21, v26, v25, v7, (uint64_t)&type metadata for DataFrame.Slice, v8, (uint64_t)&protocol witness table for DataFrame.Slice, a1);
  swift_bridgeObjectRetain();
  return RowGrouping.init<A>(groups:groupKeysColumnName:)(v23, v26, v25, v7, (uint64_t)&type metadata for DataFrame.Slice, v8, (uint64_t)&protocol witness table for DataFrame.Slice, a2);
}

TabularData::DataFrame __swiftcall RowGrouping.ungrouped()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  TabularData::DataFrame v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v23[6];
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  TabularData::DataFrame result;

  v3 = v1;
  v4 = v2[1];
  v5 = v2[2];
  v32 = *v2;
  v6 = *(_QWORD *)(v0 + 24);
  v25 = *(_QWORD *)(v0 + 16);
  v26 = v6;
  v27 = v32;
  v28 = v4;
  v29 = v5;
  v23[2] = v25;
  v23[3] = v6;
  v23[4] = sub_2150F2C24;
  v23[5] = &v24;
  sub_215130064();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  v7 = sub_21512FD40();
  v8 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v7);
  v10 = (_QWORD *)sub_2150ED6A0((void (*)(char *, char *))sub_2150F2C34, (uint64_t)v23, v7, (char *)&type metadata for DataFrame, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
  swift_bridgeObjectRelease();
  v11 = v10[2];
  if (v11)
  {
    v13 = v10[4];
    v12 = v10[5];
    v14 = v10[6];
    v32 = v13;
    v33 = v12;
    v34 = v14;
    v15 = v11 - 1;
    if (v11 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = (void *)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v10 + 9;
      do
      {
        v22 = *v21;
        v30 = *((_OWORD *)v21 - 1);
        v31 = v22;
        v20.columns._rawValue = &v30;
        DataFrame.append(rowsOf:)(v20);
        v21 += 3;
        --v15;
      }
      while (v15);
      v16 = (void *)swift_bridgeObjectRelease_n();
      v13 = v32;
      v12 = v33;
      v14 = v34;
    }
    *v3 = v13;
    v3[1] = v12;
    v3[2] = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    v16 = (void *)sub_2150203D0(MEMORY[0x24BEE4AF8]);
    *v3 = v19;
    v3[1] = v19;
    v3[2] = v16;
  }
  result.columnIndicesByName._rawValue = v18;
  result.aliases._rawValue = v17;
  result.columns._rawValue = v16;
  return result;
}

uint64_t sub_2150EDDAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v32;
  uint64_t v34;

  v6 = a6;
  v7 = a3;
  v8 = 1;
  do
  {
    swift_bridgeObjectRetain();
    sub_21512FB90();
    sub_2151303B8();
    sub_21512FB90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v7;
    if (*(_QWORD *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_21502F840(a2, v7);
      v12 = v11;
      result = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        continue;
    }
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_215043700(v14, a2, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v32 = v7;
      v34 = MEMORY[0x24BEE4AF8];
      sub_215038BC8(0, v16, 0);
      v17 = v34;
      v18 = (uint64_t *)(v15 + 56);
      do
      {
        v19 = *(v18 - 1);
        v20 = *v18;
        v21 = *(_QWORD *)(v34 + 16);
        v22 = *(_QWORD *)(v34 + 24);
        swift_bridgeObjectRetain();
        if (v21 >= v22 >> 1)
          sub_215038BC8((char *)(v22 > 1), v21 + 1, 1);
        *(_QWORD *)(v34 + 16) = v21 + 1;
        v23 = v34 + 16 * v21;
        *(_QWORD *)(v23 + 32) = v19;
        *(_QWORD *)(v23 + 40) = v20;
        v18 += 4;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      v10 = v32;
      v7 = a3;
      v6 = a6;
      v24 = *(_QWORD *)(v34 + 16);
      if (!v24)
      {
LABEL_17:
        result = swift_bridgeObjectRelease();
LABEL_18:
        *a1 = a2;
        a1[1] = v10;
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
      v24 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v24)
        goto LABEL_17;
    }
    v25 = *(_QWORD *)(v17 + 32);
    v26 = *(_QWORD *)(v17 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v24 != 1 || !*(_QWORD *)(v6 + 16))
      goto LABEL_17;
    sub_21502F840(v25, v26);
    v28 = v27;
    result = swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
      goto LABEL_18;
  }
  while (!__OFADD__(v8++, 1));
  __break(1u);
  return result;
}

uint64_t sub_2150EE010(uint64_t a1)
{
  return sub_2150EE1C4(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096600);
}

uint64_t sub_2150EE02C(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_2150983AC, &qword_254DA7570, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE050(uint64_t a1)
{
  return sub_2150EE1C4(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0, &qword_253F0D430, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096790);
}

uint64_t sub_2150EE06C(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_2150983B8, &qword_253F0D428, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509691C);
}

uint64_t sub_2150EE090(uint64_t a1)
{
  return sub_2150EE1C4(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097C2C, &qword_253F0D188, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096C70);
}

uint64_t sub_2150EE0AC(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150979C4, (void (*)(_QWORD, _QWORD))sub_215098564, &qword_253F0D180, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096AB4);
}

uint64_t sub_2150EE0D0(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_215098710, &qword_254DA7798, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE0F4(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_21509871C, &qword_254DA77A0, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE118(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_215098728, &qword_254DA7740, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE13C(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_215098734, &qword_254DA7738, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE160(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097FD8, (void (*)(_QWORD, _QWORD))sub_215098740, &qword_254DA7720, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096DE0);
}

uint64_t sub_2150EE184(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977D8, (void (*)(_QWORD, _QWORD))sub_21509881C, &qword_254DA7708, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509678C);
}

uint64_t sub_2150EE1A8(uint64_t a1)
{
  return sub_2150EE1C4(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097DF0, &qword_254DA7828, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215097138);
}

uint64_t sub_2150EE1C4(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t), uint64_t *a3, void (*a4)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))
{
  uint64_t *v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD v16[2];

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v4;
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    a2(v16, *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), a1);
    result = *(_QWORD *)(v10 + 16);
    if (result)
    {
      if ((*(_QWORD *)(result + 8) & 0x8000000000000000) == 0)
      {
        MEMORY[0x2199DC578]();
        v12 = v16[0];
        v13 = v16[1];
        result = swift_beginAccess();
        *(_QWORD *)(v10 + 16) = v12;
        *(_QWORD *)(v10 + 24) = v13;
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v14 = swift_allocObject();
    swift_beginAccess();
    a4(&v15, *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), a1);
    *(_OWORD *)(v14 + 16) = v15;
    result = swift_release();
    *v4 = v14;
  }
  return result;
}

uint64_t sub_2150EE2D0(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150977DC, (void (*)(_QWORD, _QWORD))sub_21509863C, &qword_254DA7830, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150972C4);
}

uint64_t sub_2150EE2F4(uint64_t a1)
{
  return sub_2150EE318(a1, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150979C0, (void (*)(_QWORD, _QWORD))sub_215098900, &qword_254DA7860, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_21509745C);
}

uint64_t sub_2150EE318(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t), void (*a3)(_QWORD, _QWORD), uint64_t *a4, void (*a5)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))
{
  uint64_t *v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17;
  _QWORD v18[2];

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v5;
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    a2(v18, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), a1);
    a3(*(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24));
    v13 = v18[0];
    v14 = v18[1];
    result = swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v12 + 24) = v14;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a4);
    v16 = swift_allocObject();
    swift_beginAccess();
    a5(&v17, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), a1);
    *(_OWORD *)(v16 + 16) = v17;
    result = swift_release();
    *v5 = v16;
  }
  return result;
}

uint64_t sub_2150EE414(uint64_t a1, char a2)
{
  return sub_2150EE5E8(a1, a2, &qword_253F0D438, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_215096600, (void (*)(uint64_t, uint64_t))sub_21509B388, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_2150989DC);
}

uint64_t sub_2150EE438(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v3 = *v1;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
    goto LABEL_17;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v1;
  v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7)
        sub_21509B490(v7, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v11 = *v10;
  if (v11)
  {
    v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D180);
      v13 = swift_allocObject();
      sub_215096AB4((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *v1 = v13;
      v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_215098C3C(a1, *(_QWORD **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7)
        v12 = v7;
      else
        v12 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EE5A0(uint64_t a1)
{
  return sub_2150EEC6C(a1, &qword_254DA7798, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_21509678C, (void (*)(uint64_t, uint64_t))sub_21509B5BC, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_215098A9C);
}

uint64_t sub_2150EE5C4(uint64_t a1, char a2)
{
  return sub_2150EE5E8(a1, a2, &qword_253F0D430, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_215096790, (void (*)(uint64_t, uint64_t))sub_21509B388, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_215098AA0);
}

uint64_t sub_2150EE5E8(uint64_t a1, char a2, uint64_t *a3, void (*a4)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t), void (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v13 = *v6;
  result = swift_beginAccess();
  v15 = *(_QWORD *)(v13 + 16);
  if (!v15)
    goto LABEL_17;
  v16 = *(_QWORD *)(v15 + 8);
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v6;
  v20 = (uint64_t **)(*v6 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v20)
    {
      if (**v20 < v17)
        a5(v17, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v21 = *v20;
  if (*v20)
  {
    v22 = *v21;
    if (*v21 >= v17)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a3);
      v23 = swift_allocObject();
      a4(&v24, v21, *(_QWORD *)(v19 + 24), v22);
      *(_OWORD *)(v23 + 16) = v24;
      swift_release();
      *v6 = v23;
      v19 = v23;
LABEL_14:
      swift_beginAccess();
      return a6(a1, a2 & 1, *(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 24));
    }
    if (v22 + 0x4000000000000000 >= 0)
    {
      if (2 * v22 <= v17)
        v22 = v17;
      else
        v22 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EE778(uint64_t a1)
{
  return sub_2150EEC6C(a1, &qword_254DA77A0, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_21509678C, (void (*)(uint64_t, uint64_t))sub_21509B69C, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_215098A9C);
}

uint64_t sub_2150EE79C(uint64_t a1, uint64_t a2)
{
  return sub_2150EEABC(a1, a2, &qword_253F0D428, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_21509691C, (void (*)(uint64_t, uint64_t))sub_21509B3A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))sub_215098B5C);
}

uint64_t sub_2150EE7C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v3 = *v1;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
    goto LABEL_17;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v1;
  v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7)
        sub_21509B4B8(v7, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v11 = *v10;
  if (v11)
  {
    v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D188);
      v13 = swift_allocObject();
      sub_215096C70((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *v1 = v13;
      v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_215098EDC(a1, *(_QWORD **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7)
        v12 = v7;
      else
        v12 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EE928(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v3 = *v1;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
    goto LABEL_17;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v1;
  v10 = (uint64_t **)(*v1 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v10)
    {
      if (**v10 < v7)
        sub_21509B4C4(v7, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v11 = *v10;
  if (v11)
  {
    v12 = *v11;
    if (*v11 >= v7)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7828);
      v13 = swift_allocObject();
      sub_215097138((uint64_t)v11, v12, (uint64_t *)&v14);
      *(_OWORD *)(v13 + 16) = v14;
      swift_release();
      *v1 = v13;
      v9 = v13;
LABEL_14:
      swift_beginAccess();
      return sub_215098FA4(a1 | ((HIDWORD(a1) & 1) << 32), *(_QWORD **)(v9 + 16));
    }
    if (v12 + 0x4000000000000000 >= 0)
    {
      if (2 * v12 <= v7)
        v12 = v7;
      else
        v12 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EEA98(uint64_t a1, uint64_t a2)
{
  return sub_2150EEABC(a1, a2, &qword_254DA7830, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_2150972C4, (void (*)(uint64_t, uint64_t))sub_21509B4A4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))sub_215098E18);
}

uint64_t sub_2150EEABC(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t), void (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v13 = *v6;
  result = swift_beginAccess();
  v15 = *(_QWORD *)(v13 + 16);
  if (!v15)
    goto LABEL_17;
  v16 = *(_QWORD *)(v15 + 8);
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v6;
  v20 = (uint64_t **)(*v6 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v20)
    {
      if (**v20 < v17)
        a5(v17, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v21 = *v20;
  if (*v20)
  {
    v22 = *v21;
    if (*v21 >= v17)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a3);
      v23 = swift_allocObject();
      a4(&v24, v21, *(_QWORD *)(v19 + 24), v22);
      *(_OWORD *)(v23 + 16) = v24;
      swift_release();
      *v6 = v23;
      v19 = v23;
LABEL_14:
      swift_beginAccess();
      return a6(a1, a2, *(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 24));
    }
    if (v22 + 0x4000000000000000 >= 0)
    {
      if (2 * v22 <= v17)
        v22 = v17;
      else
        v22 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EEC48(uint64_t a1)
{
  return sub_2150EEC6C(a1, &qword_254DA7570, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_21509678C, (void (*)(uint64_t, uint64_t))sub_21509B394, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_215098A9C);
}

uint64_t sub_2150EEC6C(uint64_t a1, uint64_t *a2, void (*a3)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, _QWORD, _QWORD))
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v11 = *v5;
  result = swift_beginAccess();
  v13 = *(_QWORD *)(v11 + 16);
  if (!v13)
    goto LABEL_17;
  v14 = *(_QWORD *)(v13 + 8);
  v15 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v5;
  v18 = (uint64_t **)(*v5 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    result = swift_beginAccess();
    if (*v18)
    {
      if (**v18 < v15)
        a4(v15, 1);
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  result = swift_beginAccess();
  v19 = *v18;
  if (*v18)
  {
    v20 = *v19;
    if (*v19 >= v15)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v21 = swift_allocObject();
      a3(&v22, v19, *(_QWORD *)(v17 + 24), v20);
      *(_OWORD *)(v21 + 16) = v22;
      swift_release();
      *v5 = v21;
      v17 = v21;
LABEL_14:
      swift_beginAccess();
      return a5(a1, *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24));
    }
    if (v20 + 0x4000000000000000 >= 0)
    {
      if (2 * v20 <= v15)
        v20 = v15;
      else
        v20 *= 2;
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_2150EEDF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[6];

  sub_2150EEE78((uint64_t)v3);
  sub_2150451E0((uint64_t)v3);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_215043204(v0, (uint64_t)v3);
  sub_215045244((uint64_t)v3);
  swift_bridgeObjectRelease();
  sub_215045244((uint64_t)v3);
  return v1;
}

double sub_2150EEE78@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  char v10;
  char *v11;
  int64x2_t v12;
  double result;
  __int128 v14;
  int64x2_t v15;
  uint64_t v16;

  v3 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v6 = (char *)&v14 - v5;
  v16 = *v1;
  v7 = sub_21512FD40();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v7);
  if ((sub_21512FF14() & 1) != 0)
  {
    v15 = vdupq_n_s64(MEMORY[0x24BEE4AF8]);
    v8 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
    v9 = 0uLL;
    v10 = 2;
  }
  else
  {
    sub_21512FD70();
    v11 = &v6[*(int *)(TupleTypeMetadata2 + 48)];
    v12 = *(int64x2_t *)v11;
    v8 = *((_QWORD *)v11 + 2);
    v14 = *(_OWORD *)(v11 + 24);
    v15 = v12;
    v10 = v11[40];
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6, v3);
    v9 = v14;
  }
  result = *(double *)v15.i64;
  *(int64x2_t *)a1 = v15;
  *(_QWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  return result;
}

uint64_t sub_2150EEFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  unint64_t v13;
  uint64_t result;

  v13 = sub_2150EF02C(a1, a2, a3, a4, a5, a6, a7);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a1, a5);
  *a8 = v13;
  a8[1] = a2;
  a8[2] = a3;
  return result;
}

unint64_t sub_2150EF02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  unint64_t result;
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *TupleTypeMetadata2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[10];
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  _QWORD v73[3];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;

  v60 = a6;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a7 + 24))(v73, a5, a7);
  v13 = v73[0];
  v67 = v73[0];
  v68 = v73[1];
  v69 = v73[2];
  result = sub_21501F2BC(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(_QWORD *)(v13 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v57 = 0;
  sub_21501EE90(v13 + 40 * result + 32, (uint64_t)v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 32);
  v59 = a1;
  v15(&v67, a5, a7);
  v16 = v70;
  v17 = v71;
  v58 = a5;
  v18 = v72;
  sub_2150437A8(v70, v71, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v16, v17, v18);
  v20 = v63;
  v19 = v64;
  __swift_project_boxed_opaque_existential_1(v62, v63);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8) + 160))(v74, v16, v17, v18, v20);
  sub_21501EF2C(v16, v17, v18);
  sub_21501EA34((uint64_t)v62);
  v22 = v75;
  v21 = v76;
  __swift_project_boxed_opaque_existential_1(v74, v75);
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 80))(v22);
  if (v23 == a4)
  {
    AnyColumnSlice.assumingType<A>(_:)(a4, a4, (uint64_t)&v67);
    v56 = v70;
    v55 = v71;
    v34 = v72;
    v62[0] = v67;
    v62[1] = v68;
    v62[2] = v69;
    v63 = v70;
    v64 = v71;
    v65 = v72;
    v37 = type metadata accessor for DiscontiguousColumnSlice(0, a4, v35, v36);
    v38 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for DiscontiguousColumnSlice<A>, v37);
    v39 = sub_215130064();
    v25 = v60;
    v61 = v60;
    v40 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE4AB0], v39, &v61);
    sub_21507CEDC(v37, v38, v40);
    swift_release();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v56, v55, v34);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
    swift_getTupleTypeMetadata2();
    swift_getTupleTypeMetadata2();
    v32 = sub_215130298();
    v33 = v58;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v23);
    v24 = v58;
    v51 = a4;
    v52 = v58;
    v25 = v60;
    v53 = v60;
    v54 = a7;
    v26 = (char *)sub_215130064();
    v27 = sub_2150E20FC();
    v67 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F42DC, (uint64_t)v50, (uint64_t)&type metadata for AnyColumnSlice, v26, MEMORY[0x24BEE4078], v27, MEMORY[0x24BEE40A8], v28);
    v29 = sub_21512FD40();
    v30 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v29);
    v66 = v25;
    v31 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE4AB0], v26, &v66);
    sub_21507CEDC(v29, v30, v31);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
    swift_getTupleTypeMetadata2();
    swift_getTupleTypeMetadata2();
    v32 = sub_215130298();
    v33 = v24;
  }
  v41 = swift_bridgeObjectRelease();
  v67 = v32;
  v42 = MEMORY[0x24BDAC7A8](v41);
  v50[0] = a4;
  v50[1] = v33;
  v51 = v25;
  v52 = a7;
  v53 = v59;
  MEMORY[0x24BDAC7A8](v42);
  v49[2] = a4;
  v49[3] = v33;
  v49[4] = v25;
  v49[5] = a7;
  v49[6] = sub_2150F42FC;
  v49[7] = v43;
  sub_215130064();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
  swift_getTupleTypeMetadata2();
  v44 = sub_21512FD40();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v46 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v44);
  v48 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F432C, (uint64_t)v49, v44, TupleTypeMetadata2, MEMORY[0x24BEE4078], v46, MEMORY[0x24BEE40A8], v47);
  swift_bridgeObjectRelease();
  sub_2150452E4((uint64_t)v74);
  return v48;
}

uint64_t RowGrouping.description.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t result;
  BOOL v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _UNKNOWN **v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  __int128 v74;
  _BYTE v75[25];

  v3 = 1937207154;
  v4 = type metadata accessor for FormattingOptions();
  MEMORY[0x24BDAC7A8](v4);
  v53[0] = (uint64_t)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = *(_QWORD *)(a1 + 16);
  v6 = sub_215130064();
  v56 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)v53 - v7;
  v57 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v59 = sub_215130064();
  v58 = *(_QWORD *)(v59 - 8);
  v10 = MEMORY[0x24BDAC7A8](v59);
  v12 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)v53 - v13;
  v15 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  if (v14 == 1937207154 && v16 == 0xE400000000000000 || (v17 = 0xE400000000000000, (sub_21513043C() & 1) != 0))
  {
    v17 = 0xE500000000000000;
    v3 = 0x73776F725FLL;
  }
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x2199DB870](v15, TupleTypeMetadata2);
  Column.init(name:capacity:)(v14, v16, v18, v61, v73);
  v70 = v3;
  v71 = v17;
  sub_215043454(MEMORY[0x24BEE4AF8]);
  v72 = v19;
  v53[1] = (uint64_t)&v72;
  sub_2150EE1C4(v18, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096600);
  swift_bridgeObjectRetain();
  v20 = 0;
  v54 = TupleTypeMetadata2;
  v21 = (uint64_t)v55;
  for (i = v57; ; v40(v21, i))
  {
    if (v20 == MEMORY[0x2199DB894](v15, TupleTypeMetadata2))
    {
      v23 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, 1, 1, TupleTypeMetadata2);
      v24 = v60;
      goto LABEL_12;
    }
    v25 = sub_21512FD04();
    sub_21512FCC8();
    if ((v25 & 1) != 0)
    {
      v23 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v23 + 16))(v12, v15+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v20, TupleTypeMetadata2);
    }
    else
    {
      result = sub_2151301B4();
      v23 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      if (*(_QWORD *)(v23 + 64) != 8)
        goto LABEL_18;
      v62 = result;
      (*(void (**)(char *, uint64_t *, uint64_t))(v23 + 16))(v12, &v62, TupleTypeMetadata2);
      result = swift_unknownObjectRelease();
    }
    v27 = __OFADD__(v20++, 1);
    v24 = v60;
    if (v27)
      break;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, TupleTypeMetadata2);
LABEL_12:
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v24, v12, v59);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v24, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      v41 = MEMORY[0x24BEE4AF8];
      v42 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
      v67 = v41;
      v68 = v41;
      v69 = v42;
      v62 = v73[0];
      v63 = v73[1];
      v64 = v73[2];
      DataFrame.append<A>(column:)((uint64_t)&v62, v61, v43, v44);
      v45 = v70;
      v46 = v71;
      v47 = v72;
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
      v66 = &off_24D2A4440;
      v62 = v45;
      v63 = v46;
      v64 = v47;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      DataFrame.append(column:)((uint64_t)&v62);
      sub_21501EA34((uint64_t)&v62);
      swift_release();
      swift_bridgeObjectRelease();
      v48 = v67;
      v49 = v68;
      v50 = v69;
      v51 = v53[0];
      FormattingOptions.init()(v53[0]);
      v52 = sub_2150B63A0(v51, v48, v49, v50);
      sub_21509C010(v51);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v52;
    }
    v28 = &v24[*(int *)(TupleTypeMetadata2 + 48)];
    v29 = *((_OWORD *)v28 + 1);
    v74 = *(_OWORD *)v28;
    *(_OWORD *)v75 = v29;
    *(_OWORD *)&v75[9] = *(_OWORD *)(v28 + 25);
    v30 = v15;
    v31 = v12;
    v32 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v21, v24, i);
    v35 = type metadata accessor for Column(0, v61, v33, v34);
    Column.append(_:)(v21, v35, v36, v37);
    v38 = sub_2150EBD1C(*(uint64_t *)&v75[8], *(uint64_t *)&v75[16], v75[24]);
    sub_2150451E0((uint64_t)&v74);
    v39 = swift_bridgeObjectRetain();
    sub_215043204(v39, (uint64_t)&v74);
    sub_215045244((uint64_t)&v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_215045244((uint64_t)&v74);
    sub_2150EE5E8(v38, 0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_215096600, (void (*)(uint64_t, uint64_t))sub_21509B388, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_2150989DC);
    v40 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v12 = v31;
    v15 = v30;
    TupleTypeMetadata2 = v54;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t RowGrouping.init<A>(groups:groupKeysColumnName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v11;
  char *TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[8];
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a7;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = sub_2150F3E08;
  v17[7] = &v18;
  sub_215130064();
  swift_getTupleTypeMetadata2();
  v11 = sub_21512FD40();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v11);
  v15 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F3E14, (uint64_t)v17, v11, TupleTypeMetadata2, MEMORY[0x24BEE4078], v13, MEMORY[0x24BEE40A8], v14);
  result = swift_bridgeObjectRelease();
  *a8 = v15;
  a8[1] = a2;
  a8[2] = a3;
  return result;
}

double sub_2150EFCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;

  v13 = sub_215130064();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a3, v13);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a8 + 24))(&v23, a6, a8);
  v14 = v24;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 32))(&v19, a6, a8);
  v15 = v20;
  v16 = v21;
  v17 = v22;
  sub_2150437A8(v20, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v15, v16, v17);
  result = *(double *)&v23;
  *(_OWORD *)a2 = v23;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 40) = v17;
  return result;
}

uint64_t sub_2150EFDC4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;

  sub_215130064();
  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_2150EFE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v7;

  sub_21504670C(a1, (uint64_t)&v7, qword_253F0D058);
  __swift_instantiateConcreteTypeFromMangledName(qword_253F0D058);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_2150EFF04(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t result;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char *v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];

  v17 = sub_215130064();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a3, v17);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a11 + 24))(v39, a9, a11);
  v18 = v39[0];
  v19 = v39[1];
  v20 = v39[2];
  if (!*(_QWORD *)(v39[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  v35 = a4;
  v21 = a5;
  v22 = a6;
  sub_21501EE90(v39[0] + 32, (uint64_t)v36);
  v23 = v37;
  v24 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v25 = *(_QWORD *)(v24 + 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v27 = v26(v23, v25);
  result = sub_21501EA34((uint64_t)v36);
  if ((v27 & 0x8000000000000000) == 0)
  {
    a6 = v22;
    a5 = v21;
    a4 = v35;
    if (v27)
    {
      v29 = 0;
LABEL_7:
      sub_2150437A8(0, v27, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(0, v27, v29);
      v30 = sub_21502CB8C(a4, a5, a6, 0, v27, v29);
      v32 = v31;
      v34 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a2 = v18;
      *(_QWORD *)(a2 + 8) = v19;
      *(_QWORD *)(a2 + 16) = v20;
      *(_QWORD *)(a2 + 24) = v30;
      *(_QWORD *)(a2 + 32) = v32;
      *(_BYTE *)(a2 + 40) = v34;
      return result;
    }
LABEL_6:
    v27 = 0;
    v29 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150F00F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;

  sub_215130064();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
  v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v7 = *v6;
  v8 = v6[1];
  v9 = *((unsigned __int8 *)v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v7, v8, v9);
}

TabularData::DataFrame __swiftcall RowGrouping.counts(order:)(TabularData::Order_optional order)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  char *v26;
  char v27;
  void *v28;
  void *v29;
  void *v30;
  BOOL v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  Swift::String v51;
  Swift::Bool is_nil;
  uint64_t v53;
  char v54;
  unint64_t v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  int v61;
  _OWORD *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  Swift::Int v74;
  _BYTE v75[24];
  uint64_t v76;
  _UNKNOWN **v77;
  __int128 v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  __int128 v83;
  char v84[8];
  Swift::Int_optional v85;
  TabularData::DataFrame result;

  v4 = *(unsigned __int8 **)&order;
  v62 = v2;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = sub_215130064();
  v67 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v59 - v7;
  v68 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v71 = sub_215130064();
  v70 = *(_QWORD *)(v71 - 8);
  v10 = MEMORY[0x24BDAC7A8](v71);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v59 - v13;
  v61 = *v4;
  v14 = v3[1];
  v73 = *v3;
  v15 = v3[2];
  v16 = MEMORY[0x2199DB870]();
  v74 = v16;
  swift_bridgeObjectRetain();
  sub_21504AA78(v14, v15, v5, (uint64_t)v84);
  v69 = type metadata accessor for SingleColumnBuilder(0, v5, v17, v18);
  sub_21504AAE4(v16, v69);
  v80 = 0x746E756F63;
  v81 = 0xE500000000000000;
  v19 = MEMORY[0x24BEE4AF8];
  sub_215043454(MEMORY[0x24BEE4AF8]);
  v82 = v20;
  v60 = &v82;
  sub_2150EE1C4(0, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096600);
  v80 = 0x746E756F63;
  v81 = 0xE500000000000000;
  v63 = (char *)&v83 + 8;
  *(_QWORD *)v75 = 0x746E756F63;
  *(_QWORD *)&v75[8] = 0xE500000000000000;
  sub_215043454(v19);
  *(_QWORD *)&v75[16] = v21;
  v22 = v73;
  sub_2150EE1C4(v74, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))sub_2150975F0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_215096600);
  swift_release();
  swift_bridgeObjectRelease();
  v82 = *(_QWORD *)v75;
  v83 = *(_OWORD *)&v75[8];
  swift_bridgeObjectRetain();
  v23 = 0;
  v65 = TupleTypeMetadata2;
  v64 = v12;
  for (i = (uint64_t)v66; ; v43(i, v44))
  {
    if (v23 == MEMORY[0x2199DB894](v22, TupleTypeMetadata2))
    {
      v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v12, 1, 1, TupleTypeMetadata2);
      v26 = v72;
    }
    else
    {
      v27 = sub_21512FD04();
      sub_21512FCC8();
      if ((v27 & 1) != 0)
      {
        v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        v28 = (void *)(*(uint64_t (**)(char *, unint64_t, uint64_t))(v25 + 16))(v12, v22+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v23, TupleTypeMetadata2);
      }
      else
      {
        v28 = (void *)sub_2151301B4();
        v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        if (*(_QWORD *)(v25 + 64) != 8)
          goto LABEL_22;
        *(_QWORD *)v75 = v28;
        (*(void (**)(char *, _BYTE *, uint64_t))(v25 + 16))(v12, v75, TupleTypeMetadata2);
        v28 = (void *)swift_unknownObjectRelease();
      }
      v31 = __OFADD__(v23++, 1);
      v26 = v72;
      if (v31)
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, TupleTypeMetadata2);
    }
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v26, v12, v71);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v26, 1, TupleTypeMetadata2) == 1)
      break;
    v32 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
    v33 = v26;
    v34 = *((_QWORD *)v32 + 3);
    v74 = v23;
    v35 = *((_QWORD *)v32 + 4);
    v36 = v67;
    v37 = v32[40];
    v38 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(i, v33, v68);
    sub_21504AB60(i, v69, v39, v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v34, v35, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v34, v35, v37);
    v41 = sub_2150EBD1C(v34, v35, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v73;
    swift_bridgeObjectRelease();
    v42 = v35;
    v23 = v74;
    sub_21501EF2C(v34, v42, v37);
    sub_2150EE5E8(v41, 0, &qword_253F0D438, (void (*)(__int128 *__return_ptr, uint64_t *, _QWORD, uint64_t))sub_215096600, (void (*)(uint64_t, uint64_t))sub_21509B388, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_2150989DC);
    v43 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    TupleTypeMetadata2 = v65;
    v44 = v38;
    v12 = v64;
  }
  swift_bridgeObjectRelease();
  v45 = MEMORY[0x24BEE4AF8];
  v46 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v78 = v45;
  *((_QWORD *)&v78 + 1) = v45;
  v79 = v46;
  sub_21504AB98((uint64_t *)&v78, 0, v69);
  v48 = v80;
  v47 = (void *)v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v82 = v48;
  *(_QWORD *)&v83 = v47;
  v49 = v78;
  v50 = v79;
  *(_OWORD *)v75 = v78;
  *(_QWORD *)&v75[16] = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51._countAndFlagsBits = v48;
  v51._object = v47;
  v85 = DataFrame.indexOfColumn(_:)(v51);
  is_nil = v85.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!is_nil)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150EDDAC(v60, v48, (uint64_t)v47, v49, *((uint64_t *)&v49 + 1), v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v82;
    v47 = (void *)v83;
  }
  v53 = *((_QWORD *)&v83 + 1);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F0D450);
  v77 = &off_24D2A4440;
  *(_QWORD *)v75 = v48;
  *(_QWORD *)&v75[8] = v47;
  *(_QWORD *)&v75[16] = v53;
  swift_bridgeObjectRetain();
  swift_retain();
  DataFrame.append(column:)((uint64_t)v75);
  sub_21501EA34((uint64_t)v75);
  v54 = v61;
  if (v61 == 2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v28 = (void *)swift_bridgeObjectRelease();
    v55 = v79;
    v56 = v62;
    *v62 = v78;
    *((_QWORD *)v56 + 2) = v55;
  }
  else
  {
    v57 = v78;
    v58 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v54 & 1) != 0)
      sub_21509DF8C(0x746E756F63, 0xE500000000000000, v57, *((uint64_t *)&v57 + 1), v58, (uint64_t)v62);
    else
      sub_21509DF60(0x746E756F63, 0xE500000000000000, v57, *((uint64_t *)&v57 + 1), v58, (uint64_t)v62);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v28 = (void *)swift_bridgeObjectRelease();
  }
LABEL_23:
  result.columnIndicesByName._rawValue = v30;
  result.aliases._rawValue = v29;
  result.columns._rawValue = v28;
  return result;
}

uint64_t RowGrouping.aggregated<A, B>(on:naming:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  unint64_t *v9;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  _OWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _OWORD *v101;
  _OWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(__int128 *);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  unint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  char *v129;
  char v130[16];
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _OWORD *v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  __int128 v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147[8];
  uint64_t v148;

  v115 = a5;
  v114 = a4;
  v128 = (_OWORD *)a3;
  v123 = a2;
  v102 = a9;
  v111 = sub_215130064();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v113 = (char *)&v102 - v14;
  v15 = *(_QWORD *)(a6 + 16);
  v16 = (char *)sub_215130064();
  v121 = *((_QWORD *)v16 - 1);
  v120 = *(_QWORD *)(v121 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v129 = (char *)&v102 - v17;
  v19 = *v9;
  v18 = v9[1];
  v20 = v9[2];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v126 = v19;
  v122 = TupleTypeMetadata2;
  v22 = MEMORY[0x2199DB870](v19);
  swift_bridgeObjectRetain();
  sub_21504AA78(v18, v20, v15, (uint64_t)v147);
  v109 = type metadata accessor for SingleColumnBuilder(0, v15, v23, v24);
  sub_21504AAE4(v22, v109);
  v107 = a1;
  *(_QWORD *)&v142 = a1;
  v127 = (_OWORD *)v15;
  v131 = v15;
  v119 = a7;
  v132 = a7;
  v25 = *(_OWORD **)(a6 + 24);
  v133 = a8;
  v134 = v25;
  v125 = v25;
  v135 = v123;
  v136 = (uint64_t)v128;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7D80);
  v128 = (_OWORD *)a8;
  v29 = (char *)type metadata accessor for SingleColumnBuilder(0, a8, v27, v28);
  v30 = sub_2150F3E7C();
  v31 = v124;
  v148 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F3E30, (uint64_t)v130, v26, v29, MEMORY[0x24BEE4078], v30, MEMORY[0x24BEE40A8], v32);
  v33 = swift_bridgeObjectRetain();
  v34 = MEMORY[0x2199DB870](v33, v29);
  result = swift_bridgeObjectRelease();
  if (v34 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v124 = v31;
  if (v34)
  {
    sub_21512FD40();
    sub_21512FCE0();
    sub_21512FCE0();
    sub_21512FCE0();
    v36 = 0;
    v37 = 32;
    do
    {
      sub_21512FCE0();
      sub_2150F3DB8(v36, v148);
      sub_21504AAE4(v22, (uint64_t)v29);
      v37 += 40;
      ++v36;
    }
    while (v34 != v36);
  }
  v118 = v29;
  *(_QWORD *)&v142 = v126;
  MEMORY[0x24BDAC7A8](result);
  v38 = v119;
  *(&v102 - 4) = v127;
  *(&v102 - 3) = (_OWORD *)v38;
  v39 = (uint64_t)v128;
  v40 = v125;
  *(&v102 - 2) = v128;
  *(&v102 - 1) = v40;
  KeyPath = swift_getKeyPath();
  v42 = MEMORY[0x24BDAC7A8](KeyPath);
  *(&v102 - 4) = (_OWORD *)v38;
  *(&v102 - 3) = (_OWORD *)v39;
  *(&v102 - 2) = v40;
  *(&v102 - 1) = (_OWORD *)v42;
  v43 = sub_21512FD40();
  swift_bridgeObjectRetain();
  v123 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v43);
  v44 = v124;
  v46 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F3EC8, (uint64_t)(&v102 - 6), v43, v16, MEMORY[0x24BEE4078], v123, MEMORY[0x24BEE40A8], v45);
  v124 = v44;
  swift_release();
  swift_bridgeObjectRelease();
  v47 = MEMORY[0x2199DB894](v46, v16);
  v48 = v109;
  v49 = v121;
  if (v47)
  {
    v50 = 0;
    v51 = (uint64_t)v129;
    do
    {
      v52 = sub_21512FD04();
      sub_21512FCC8();
      if ((v52 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, char *))(v49 + 16))(v129, v46+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v50, v16);
        v55 = v50 + 1;
        if (__OFADD__(v50, 1))
          goto LABEL_14;
      }
      else
      {
        result = sub_2151301B4();
        if (v120 != 8)
          goto LABEL_42;
        *(_QWORD *)&v142 = result;
        (*(void (**)(char *, __int128 *, char *))(v49 + 16))(v129, &v142, v16);
        swift_unknownObjectRelease();
        v55 = v50 + 1;
        if (__OFADD__(v50, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      sub_21504AB60(v51, v48, v53, v54);
      (*(void (**)(uint64_t, char *))(v49 + 8))(v51, v16);
      ++v50;
    }
    while (v55 != MEMORY[0x2199DB894](v46, v16));
  }
  v56 = swift_bridgeObjectRelease();
  *(_QWORD *)&v142 = v126;
  MEMORY[0x24BDAC7A8](v56);
  v57 = v127;
  v58 = v119;
  *(&v102 - 4) = v127;
  *(&v102 - 3) = (_OWORD *)v58;
  v59 = (uint64_t)v128;
  v60 = v125;
  *(&v102 - 2) = v128;
  *(&v102 - 1) = v60;
  v61 = swift_getKeyPath();
  v62 = MEMORY[0x24BDAC7A8](v61);
  *(&v102 - 6) = v57;
  *(&v102 - 5) = (_OWORD *)v58;
  *(&v102 - 4) = (_OWORD *)v59;
  *(&v102 - 3) = v60;
  *(&v102 - 2) = (_OWORD *)v62;
  swift_bridgeObjectRetain();
  v63 = v124;
  v65 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F3EE8, (uint64_t)(&v102 - 8), v43, (char *)&type metadata for DataFrame.Slice, MEMORY[0x24BEE4078], v123, MEMORY[0x24BEE40A8], v64);
  v129 = (char *)v63;
  swift_release();
  swift_bridgeObjectRelease();
  v104 = *(_QWORD *)(v65 + 16);
  if (v104)
  {
    v66 = (uint64_t)v118;
    v67 = sub_21512FD40();
    sub_21512FCE0();
    sub_21512FCE0();
    v106 = v65 + 32;
    v117 = v67;
    result = sub_21512FCE0();
    v68 = 0;
    v103 = (uint64_t *)(v107 + 40);
    v105 = v65;
    while (v68 < *(_QWORD *)(v65 + 16))
    {
      v70 = v106 + 48 * v68;
      v71 = *(_QWORD *)(v70 + 8);
      v73 = *(_QWORD *)(v70 + 16);
      v72 = *(_QWORD *)(v70 + 24);
      v74 = *(_QWORD *)(v70 + 32);
      v75 = *(unsigned __int8 *)(v70 + 40);
      v122 = *(_QWORD *)v70;
      swift_bridgeObjectRetain();
      v121 = v71;
      swift_bridgeObjectRetain();
      v120 = v73;
      swift_bridgeObjectRetain();
      v123 = v72;
      v124 = v74;
      LODWORD(v125) = v75;
      sub_2150437A8(v72, v74, v75);
      v76 = swift_bridgeObjectRetain();
      v77 = MEMORY[0x2199DB870](v76, v66);
      result = swift_bridgeObjectRelease();
      if (v77 < 0)
        goto LABEL_39;
      v108 = v68;
      if (v77)
      {
        sub_21512FCE0();
        sub_21512FCE0();
        v116 = *(_QWORD *)(v107 + 16);
        result = sub_21512FCE0();
        v78 = 0;
        v79 = 32;
        v80 = v103;
        v112 = v77;
        while (v77 != v78)
        {
          if (v116 == v78)
            goto LABEL_37;
          v126 = v78;
          v127 = (_OWORD *)v79;
          v81 = *v80;
          v128 = (_OWORD *)*(v80 - 1);
          *(_QWORD *)&v137 = v122;
          *((_QWORD *)&v137 + 1) = v121;
          v82 = v123;
          v138 = v120;
          v139 = v123;
          v83 = v124;
          v140 = v124;
          v84 = (char)v125;
          v141 = (char)v125;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2150437A8(v82, v83, v84);
          swift_bridgeObjectRetain();
          DataFrame.Slice.subscript.getter((uint64_t)v128, v81, v119, (uint64_t)&v142);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21501EF2C(v82, v83, v84);
          v85 = v144;
          v86 = v145;
          v87 = v146;
          v137 = v142;
          v138 = v143;
          v139 = v144;
          v140 = v145;
          v141 = v146;
          v88 = (uint64_t)v113;
          v89 = v129;
          v114(&v137);
          v129 = v89;
          if (v89)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21501EF2C(v123, v124, (char)v125);
            swift_release();
            swift_bridgeObjectRelease();
            sub_21501EF2C(v85, v86, v87);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v90 = v126;
          v128 = (_OWORD *)(v126 + 1);
          swift_release();
          swift_bridgeObjectRelease();
          sub_21501EF2C(v85, v86, v87);
          sub_21512FCE0();
          v66 = (uint64_t)v118;
          sub_2150F3DB8(v90, v148);
          v91 = v127;
          sub_21504AB60(v88, v66, v92, v93);
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v88, v111);
          v80 += 2;
          v79 = (uint64_t)v91 + 40;
          v78 = (uint64_t)v128;
          v77 = v112;
          if ((_OWORD *)v112 == v128)
            goto LABEL_17;
        }
        __break(1u);
LABEL_37:
        __break(1u);
        break;
      }
LABEL_17:
      v68 = v108 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_21501EF2C(v123, v124, (char)v125);
      v69 = v109;
      v65 = v105;
      if (v68 == v104)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  v66 = (uint64_t)v118;
  v69 = v109;
LABEL_29:
  v94 = MEMORY[0x24BEE4AF8];
  v95 = sub_2150203D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v142 = v94;
  *((_QWORD *)&v142 + 1) = v94;
  v143 = v95;
  sub_21504AB98((uint64_t *)&v142, 0, v69);
  v96 = swift_bridgeObjectRetain();
  v97 = MEMORY[0x2199DB870](v96, v66);
  result = swift_bridgeObjectRelease();
  if ((v97 & 0x8000000000000000) == 0)
  {
    if (v97)
    {
      sub_21512FD40();
      sub_21512FCE0();
      sub_21512FCE0();
      sub_21512FCE0();
      v98 = 0;
      v99 = 32;
      do
      {
        sub_21512FCE0();
        sub_2150F3DB8(v98, v148);
        sub_21504AB98((uint64_t *)&v142, 0, v66);
        v99 += 40;
        ++v98;
      }
      while (v97 != v98);
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v100 = v143;
    v101 = v102;
    *v102 = v142;
    *((_QWORD *)v101 + 2) = v100;
    return result;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2150F1594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a2;
  v30 = a3;
  v28 = *(_QWORD *)(*(_QWORD *)(*a2 + *MEMORY[0x24BEE46A8]) - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v25 - v7;
  v10 = *(int *)(v9 + 48);
  v11 = v9;
  v27 = v9;
  v12 = (uint64_t *)(v6 + v10);
  v14 = *(_QWORD *)(v13 + 8);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v25 - v7, v16, v14);
  v17 = *v12;
  v18 = v12[1];
  v20 = v12[2];
  v19 = v12[3];
  v25 = v12[4];
  v26 = v19;
  v21 = &v5[*(int *)(v11 + 48)];
  LOBYTE(v12) = *((_BYTE *)v12 + 40);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v5, v8, v14);
  *(_QWORD *)v21 = v17;
  *((_QWORD *)v21 + 1) = v18;
  v22 = v25;
  v23 = v26;
  *((_QWORD *)v21 + 2) = v20;
  *((_QWORD *)v21 + 3) = v23;
  *((_QWORD *)v21 + 4) = v22;
  v21[40] = (char)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v23, v22, (char)v12);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v5, v27);
}

uint64_t sub_2150F1700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a3;
  v29 = a2;
  v4 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v27 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v24 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = v9;
  v26 = v9;
  v14 = (uint64_t *)(a1 + v12);
  v15 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v24 - v10, a1, v4);
  v16 = *v14;
  v17 = v14[1];
  v19 = v14[2];
  v18 = v14[3];
  v24 = v14[4];
  v25 = v18;
  v20 = &v8[*(int *)(v13 + 48)];
  LOBYTE(v14) = *((_BYTE *)v14 + 40);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v8, v11, v4);
  *(_QWORD *)v20 = v16;
  *((_QWORD *)v20 + 1) = v17;
  v21 = v24;
  v22 = v25;
  *((_QWORD *)v20 + 2) = v19;
  *((_QWORD *)v20 + 3) = v22;
  *((_QWORD *)v20 + 4) = v21;
  v20[40] = (char)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v22, v21, (char)v14);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v26);
}

void sub_2150F187C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE v28[8];

  v10 = *a2;
  v9 = a2[1];
  v12 = a2[2];
  v11 = a2[3];
  v13 = a2[4];
  v14 = *((_BYTE *)a2 + 40);
  v15 = sub_2150EBD1C(v11, v13, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v11, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v11, v13, v14);
  swift_bridgeObjectRetain();
  sub_21504AA78(a3, a4, a5, (uint64_t)v28);
  v18 = type metadata accessor for SingleColumnBuilder(0, a5, v16, v17);
  sub_21504AAE4(v15, v18);
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; v15; --v15)
      sub_21504AB60(a1, v18, v19, v20);
    *(_QWORD *)&v23 = v10;
    *((_QWORD *)&v23 + 1) = v9;
    v24 = v12;
    v25 = v11;
    v26 = v13;
    v27 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v11, v13, v14);
    DataFrame.init(_:)(&v23, a6);
    sub_21504AB98(a6, 1, v18);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t RowGrouping.filter(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  sub_215130064();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  v6 = sub_21512FD40();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE12F0], v6);
  result = sub_215130214();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2150F1AF0(uint64_t a1, uint64_t (*a2)(__int128 *))
{
  __int128 *v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  sub_215130064();
  v4 = (__int128 *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v5 = *((_QWORD *)v4 + 2);
  v6 = *((_BYTE *)v4 + 40);
  v8 = *v4;
  v9 = v5;
  v10 = *(__int128 *)((char *)v4 + 24);
  v11 = v6;
  return a2(&v8) & 1;
}

uint64_t RowGrouping.mapGroups(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, __int128 *);
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];

  v6 = v4[1];
  v7 = v4[2];
  v27[2] = *v4;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v23 = v8;
  v24 = v9;
  v25 = a1;
  v26 = a2;
  v18 = v8;
  v19 = v9;
  v20 = sub_2150F3F2C;
  v21 = &v22;
  sub_215130064();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  v10 = sub_21512FD40();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254DA7840);
  v13 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v10);
  v14 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F3F48, (uint64_t)v17, v10, TupleTypeMetadata2, v12, v13, MEMORY[0x24BEE3F20], (uint64_t)v27);
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    swift_bridgeObjectRetain();
    return RowGrouping.init<A>(groups:groupKeysColumnName:)(v14, v6, v7, v8, (uint64_t)&type metadata for DataFrame, v9, (uint64_t)&protocol witness table for DataFrame, a4);
  }
  return result;
}

uint64_t sub_2150F1D10(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t (*a5)(_OWORD *))
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;

  v15 = a4[1];
  v8 = *((_QWORD *)a4 + 4);
  v9 = *((_BYTE *)a4 + 40);
  v10 = sub_215130064();
  v11 = *(_QWORD *)(v10 - 8);
  v14 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, a3, v10);
  v17[0] = v14;
  v17[1] = v15;
  v18 = v8;
  v19 = v9;
  v12 = v20;
  result = a5(v17);
  if (v12)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return result;
}

uint64_t sub_2150F1DF0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, _QWORD *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  sub_215130064();
  v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), a1, v9);
  if (v4)
    *a3 = v4;
  return result;
}

uint64_t sub_2150F1EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[5];
  char v7;

  sub_2150EEE78((uint64_t)v6);
  sub_21501EF2C(v6[3], v6[4], v7);
  v4 = sub_21501F2BC(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t RowGrouping.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  char v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v36 = a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_215130064();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v33 - v11;
  v38 = v7;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v33 - v14;
  v16 = *(_QWORD *)(v6 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v3;
  v21 = *(_QWORD *)(a1 + 16);
  v37 = v22;
  v34 = v23;
  v35 = v17;
  if (v21)
  {
    sub_21504670C(a1 + 32, (uint64_t)v39, qword_253F0D058);
  }
  else
  {
    memset(v39, 0, 24);
    v39[3] = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254DA74D8);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (!v24)
  {
    v25(v15, 1, 1, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v15, v38);
    goto LABEL_8;
  }
  v25(v15, 0, 1, v6);
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, v6);
  v33[1] = v33;
  v39[0] = v20;
  MEMORY[0x24BDAC7A8](v26);
  v27 = *(_QWORD *)(v36 + 24);
  v33[-4] = v6;
  v33[-3] = v27;
  v33[-2] = v19;
  v28 = sub_21512FD40();
  swift_bridgeObjectRetain();
  MEMORY[0x2199DC4C4](MEMORY[0x24BEE12C8], v28);
  sub_21512FC5C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v35);
LABEL_8:
    *(_OWORD *)(a3 + 25) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v30 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v31 = *((_QWORD *)v30 + 2);
  v32 = v30[40];
  *(_OWORD *)a3 = *(_OWORD *)v30;
  *(_QWORD *)(a3 + 16) = v31;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(v30 + 24);
  *(_BYTE *)(a3 + 40) = v32;
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v12, v38);
}

uint64_t sub_2150F2234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  char v22;
  char *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v28 = a4;
  v32 = a1;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v30 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v33 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v28 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v28 - v16, a2, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, a3);
  v31 = TupleTypeMetadata2;
  v18 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v12, v32, v8);
  v19(v18, (uint64_t)v17, v8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v20(v12, 1, a3) != 1)
  {
    v19(v33, (uint64_t)v12, v8);
    if (v20(v18, 1, a3) != 1)
    {
      v23 = v29;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v29, v18, a3);
      v24 = v33;
      v22 = sub_21512FA58();
      v25 = *(void (**)(char *, uint64_t))(v6 + 8);
      v25(v23, a3);
      v26 = *(void (**)(char *, uint64_t))(v13 + 8);
      v26(v17, v8);
      v25(v24, a3);
      v26(v12, v8);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v33, a3);
    goto LABEL_6;
  }
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v17, v8);
  if (v20(v18, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    v22 = 0;
    return v22 & 1;
  }
  v21(v12, v8);
  v22 = 1;
  return v22 & 1;
}

uint64_t RowGrouping.count.getter(uint64_t a1)
{
  return sub_2150F3818(a1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE11C8]);
}

uint64_t sub_2150F2500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  return RowGrouping.aggregated<A, B>(on:naming:transform:)(a1, a2, a3, a4, a5, a8, a6, a7, a9);
}

uint64_t sub_2150F2524@<X0>(uint64_t *a1@<X8>)
{
  return RowGrouping.filter(_:)(a1);
}

uint64_t sub_2150F2538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return RowGrouping.mapGroups(_:)(a1, a2, a3, a4);
}

uint64_t sub_2150F254C(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  return RowGrouping.randomSplit(by:seed:)(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t sub_2150F255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, char a7, double a8)
{
  __int128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  __int128 v19;
  _OWORD v20[2];

  v15 = a5[1];
  v19 = *a5;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(__int128 *)((char *)a5 + 25);
  v16 = sub_215130064();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a4, v16);
  if ((a7 & 1) != 0)
    return sub_215129BA8(a2, a3, a8);
  if (a6 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for MersenneTwisterGenerator();
    swift_initStackObject();
    v18 = sub_215047BF8(a6);
    sub_215129368(a2, a3, &v18, a8);
    return swift_release();
  }
  return result;
}

uint64_t sub_2150F2658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v5;

  return sub_2150F255C(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 40), *(_BYTE *)(v5 + 48), *(double *)(v5 + 32));
}

uint64_t sub_2150F2688@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;

  sub_215130064();
  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA8B40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a3 + *(int *)(TupleTypeMetadata2 + 48) + 48, a1, v6);
}

uint64_t sub_2150F2748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2150F2688(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_2150F2768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v37 = a2;
  v4 = sub_215130064();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA8B40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v40 = TupleTypeMetadata2;
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v41 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v11 = *(int *)(TupleTypeMetadata2 + 48);
  v12 = &v9[v11];
  v13 = (uint64_t *)(a1 + v11);
  v35 = v4;
  v42 = *(_QWORD *)(v4 - 8);
  v38 = *(void (**)(void))(v42 + 16);
  v39 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v38)(v9, a1, v4);
  v14 = *v13;
  v15 = v13[1];
  v17 = v13[2];
  v36 = v13[3];
  v16 = v36;
  v18 = v13[4];
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_QWORD *)v12 + 2) = v17;
  *((_QWORD *)v12 + 3) = v16;
  *((_QWORD *)v12 + 4) = v18;
  LOBYTE(v4) = *((_BYTE *)v13 + 40);
  v12[40] = v4;
  v19 = v13[6];
  v33 = v13[7];
  v20 = v33;
  v34 = v19;
  v21 = v13[8];
  v31 = v13[9];
  v22 = v31;
  v32 = v21;
  v30 = v13[10];
  v23 = v30;
  LOBYTE(v13) = *((_BYTE *)v13 + 88);
  *((_QWORD *)v12 + 6) = v19;
  *((_QWORD *)v12 + 7) = v20;
  *((_QWORD *)v12 + 8) = v21;
  *((_QWORD *)v12 + 9) = v22;
  *((_QWORD *)v12 + 10) = v23;
  v12[88] = (char)v13;
  v24 = v9;
  v25 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v37, v24, v35);
  v26 = &v41[*(int *)(v40 + 48)];
  v38();
  *(_QWORD *)v26 = v14;
  *((_QWORD *)v26 + 1) = v15;
  v27 = v36;
  *((_QWORD *)v26 + 2) = v17;
  *((_QWORD *)v26 + 3) = v27;
  *((_QWORD *)v26 + 4) = v18;
  v26[40] = v4;
  *((_QWORD *)v26 + 6) = v34;
  *((_QWORD *)v26 + 7) = v33;
  *((_QWORD *)v26 + 8) = v32;
  *((_QWORD *)v26 + 9) = v31;
  *((_QWORD *)v26 + 10) = v30;
  v26[88] = (char)v13;
  *(_QWORD *)v10 = v14;
  *(_QWORD *)(v10 + 8) = v15;
  *(_QWORD *)(v10 + 16) = v17;
  *(_QWORD *)(v10 + 24) = v27;
  *(_QWORD *)(v10 + 32) = v18;
  *(_BYTE *)(v10 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v27, v18, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v25);
}

uint64_t sub_2150F29A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2150F2768(a1, a2);
}

uint64_t sub_2150F29C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v38 = a2;
  v4 = sub_215130064();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA8B40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v41 = TupleTypeMetadata2;
  v6 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v42 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v11 = *(int *)(TupleTypeMetadata2 + 48);
  v12 = &v9[v11];
  v13 = a1;
  v40 = a1;
  v14 = (uint64_t *)(a1 + v11);
  v31 = v4;
  v43 = *(_QWORD *)(v4 - 8);
  v39 = *(void (**)(void))(v43 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v39)(v9, v13, v4);
  v15 = *v14;
  v36 = v14[1];
  v16 = v36;
  v37 = v15;
  v17 = v14[2];
  v34 = v14[3];
  v18 = v34;
  v35 = v17;
  v33 = v14[4];
  v19 = v33;
  v20 = *((_BYTE *)v14 + 40);
  v32 = v20;
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v16;
  *((_QWORD *)v12 + 2) = v17;
  *((_QWORD *)v12 + 3) = v18;
  *((_QWORD *)v12 + 4) = v19;
  v12[40] = v20;
  v21 = v14[6];
  v22 = v14[7];
  v23 = v14[8];
  v24 = v14[9];
  v25 = v14[10];
  LOBYTE(v14) = *((_BYTE *)v14 + 88);
  *((_QWORD *)v12 + 6) = v21;
  *((_QWORD *)v12 + 7) = v22;
  *((_QWORD *)v12 + 8) = v23;
  *((_QWORD *)v12 + 9) = v24;
  *((_QWORD *)v12 + 10) = v25;
  v12[88] = (char)v14;
  v26 = v9;
  v27 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v38, v26, v31);
  v28 = &v42[*(int *)(v41 + 48)];
  v39();
  *(_QWORD *)v28 = v37;
  *((_QWORD *)v28 + 1) = v36;
  *((_QWORD *)v28 + 2) = v35;
  *((_QWORD *)v28 + 3) = v34;
  *((_QWORD *)v28 + 4) = v33;
  v28[40] = v32;
  *((_QWORD *)v28 + 6) = v21;
  *((_QWORD *)v28 + 7) = v22;
  *((_QWORD *)v28 + 8) = v23;
  *((_QWORD *)v28 + 9) = v24;
  *((_QWORD *)v28 + 10) = v25;
  v28[88] = (char)v14;
  *(_QWORD *)v10 = v21;
  *(_QWORD *)(v10 + 8) = v22;
  *(_QWORD *)(v10 + 16) = v23;
  *(_QWORD *)(v10 + 24) = v24;
  *(_QWORD *)(v10 + 32) = v25;
  *(_BYTE *)(v10 + 40) = (_BYTE)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v24, v25, (char)v14);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v27);
}

uint64_t sub_2150F2C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2150F29C4(a1, a2);
}

void sub_2150F2C24(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  sub_2150F187C(a1, a2, v3[5], v3[6], v3[2], a3);
}

uint64_t sub_2150F2C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_2150F2CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t result;

  v16 = sub_2150F2D20(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 8))(a1, a7);
  *a9 = v16;
  a9[1] = a2;
  a9[2] = a3;
  return result;
}

uint64_t sub_2150F2D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *TupleTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v43;
  char v44[16];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t, char *, uint64_t, unsigned __int8);
  char *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD v75[3];
  _QWORD v76[4];

  v11 = a7;
  v43 = a9;
  v14 = a10;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a10 + 24))(v75, a7, a10);
  v69 = v75[0];
  v70 = v75[1];
  v71 = v75[2];
  DataFrame.subscript.getter(a2, a3, a8, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 32))(&v69, v11, v14);
  v15 = v72;
  v16 = v73;
  LOBYTE(v11) = v74;
  sub_2150437A8(v72, v73, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v15, v16, v11);
  v19 = type metadata accessor for Column(0, a8, v17, v18);
  sub_21507300C(v15, v16, v11, v19, (uint64_t)v65);
  sub_21501EF2C(v15, v16, v11);
  swift_release();
  swift_bridgeObjectRelease();
  v20 = v66;
  v21 = v67;
  LOBYTE(a3) = v68;
  v59 = v65[0];
  v60 = v65[1];
  v61 = v65[2];
  v62 = v66;
  v63 = v67;
  v64 = v68;
  v24 = type metadata accessor for DiscontiguousColumnSlice(0, a8, v22, v23);
  DiscontiguousColumnSlice.map<A>(_:)(a4, a5, v24, a6, v76);
  swift_release();
  swift_bridgeObjectRelease();
  sub_21501EF2C(v20, v21, a3);
  v69 = v76[0];
  v70 = v76[1];
  v71 = v76[2];
  v27 = type metadata accessor for Column(0, a6, v25, v26);
  v28 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for Column<A>, v27);
  v29 = sub_215130064();
  v30 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE4AB0], v29, &a9);
  v31 = sub_21507CEDC(v27, v28, v30);
  swift_release();
  swift_bridgeObjectRelease();
  v69 = v31;
  v53 = a6;
  v54 = a7;
  v55 = a8;
  v56 = v43;
  v57 = v14;
  v58 = a1;
  v45 = a6;
  v46 = a7;
  v47 = a8;
  v48 = v43;
  v49 = v14;
  v50 = sub_2150F4348;
  v51 = &v52;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
  swift_getTupleTypeMetadata2();
  v32 = sub_21512FD40();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v34 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v32);
  v36 = sub_2150ED6A0((void (*)(char *, char *))sub_2150F437C, (uint64_t)v44, v32, TupleTypeMetadata2, MEMORY[0x24BEE4078], v34, MEMORY[0x24BEE40A8], v35);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2150F3078(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t result;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char *v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];

  v18 = sub_215130064();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a3, v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a12 + 24))(v40, a9, a12);
  v19 = v40[0];
  v20 = v40[1];
  v21 = v40[2];
  if (!*(_QWORD *)(v40[0] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_6;
  }
  v36 = a4;
  v22 = a5;
  v23 = a6;
  sub_21501EE90(v40[0] + 32, (uint64_t)v37);
  v24 = v38;
  v25 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v26 = *(_QWORD *)(v25 + 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v28 = v27(v24, v26);
  result = sub_21501EA34((uint64_t)v37);
  if ((v28 & 0x8000000000000000) == 0)
  {
    a6 = v23;
    a5 = v22;
    a4 = v36;
    if (v28)
    {
      v30 = 0;
LABEL_7:
      sub_2150437A8(0, v28, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21501EF2C(0, v28, v30);
      v31 = sub_21502CB8C(a4, a5, a6, 0, v28, v30);
      v33 = v32;
      v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a2 = v19;
      *(_QWORD *)(a2 + 8) = v20;
      *(_QWORD *)(a2 + 16) = v21;
      *(_QWORD *)(a2 + 24) = v31;
      *(_QWORD *)(a2 + 32) = v33;
      *(_BYTE *)(a2 + 40) = v35;
      return result;
    }
LABEL_6:
    v28 = 0;
    v30 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2150F3268@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;

  sub_215130064();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254DA8090);
  v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v7 = *v6;
  v8 = v6[1];
  v9 = *((unsigned __int8 *)v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v7, v8, v9);
}

uint64_t RowGrouping.init<A>(frame:columnName:timeUnit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char v50[16];
  uint64_t (*v51)(uint64_t);
  uint64_t v52;

  v46 = a6;
  v47 = a2;
  v44 = a5;
  v45 = a1;
  v40 = a4;
  v48 = a3;
  v49 = a7;
  v43 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v41 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21512F794();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21512F7A0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v38 - v18;
  v42 = (char *)&v38 - v18;
  sub_21512F788();
  v20 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v39 = v13;
  v20(v17, v19, v13);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22 = a4;
  v23 = v9;
  v38 = v9;
  v21(v12, v22, v9);
  v24 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v25 = (v15 + *(unsigned __int8 *)(v10 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v24, v17, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26 + v25, v12, v23);
  v28 = v43;
  v27 = v44;
  v29 = (uint64_t)v41;
  v30 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v41, v45, v44);
  v51 = sub_2150F403C;
  v52 = v26;
  v31 = sub_21512F740();
  v33 = v47;
  v32 = v48;
  v34 = sub_2150F2D20(v29, v47, v48, (uint64_t)sub_2150F40A4, (uint64_t)v50, MEMORY[0x24BEE1768], v27, v31, MEMORY[0x24BEE1778], v46);
  v35 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v35(v29, v27);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v40, v38);
  v35(v30, v27);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v39);
  result = swift_release();
  v37 = v49;
  *v49 = v34;
  v37[1] = v33;
  v37[2] = v32;
  return result;
}

uint64_t sub_2150F35C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = sub_21512F56C();
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_253F0D218);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21512F740();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21504670C(a1, (uint64_t)v10, qword_253F0D218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_215066908((uint64_t)v10);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8BD0);
    v16 = sub_21512F794();
    v21 = v5;
    v17 = *(_QWORD *)(v16 - 8);
    v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_215135F80;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))(v19 + v18, a3, v16);
    sub_2150F43B0(v19);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_21512F77C();
    swift_bridgeObjectRelease();
    v15 = sub_21512F560();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v21);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

uint64_t RowGrouping.startIndex.getter()
{
  return 0;
}

uint64_t RowGrouping.endIndex.getter(uint64_t a1)
{
  return sub_2150F3818(a1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1220]);
}

uint64_t sub_2150F3818(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;

  v3 = *v2;
  sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v3, TupleTypeMetadata2);
}

Swift::Int __swiftcall RowGrouping.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

Swift::Int __swiftcall RowGrouping.index(before:)(Swift::Int before)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFSUB__(before, 1);
  result = before - 1;
  if (v1)
    __break(1u);
  return result;
}

__n128 RowGrouping.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t, char *, uint64_t);
  __n128 v12;
  __n128 result;
  __int128 v14;
  __n128 v15;

  v4 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v7 = (char *)&v14 - v6;
  sub_21512FD70();
  v8 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  v9 = *((_QWORD *)v8 + 4);
  v10 = v8[40];
  v11 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v12 = *((__n128 *)v8 + 1);
  v14 = *(_OWORD *)v8;
  v15 = v12;
  v11(a1, v7, v4);
  result = v15;
  *(_OWORD *)a2 = v14;
  *(__n128 *)(a2 + 16) = result;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  return result;
}

uint64_t sub_2150F3994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a3);
  return sub_21512FE24();
}

uint64_t sub_2150F39F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a4);
  return sub_21512FE00();
}

uint64_t sub_2150F3A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a3);
  return sub_21512FE3C();
}

uint64_t sub_2150F3AB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = RowGrouping.endIndex.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_2150F3AD4(uint64_t **a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  char *v6;
  void (*v7)(_QWORD *);
  uint64_t *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = (uint64_t *)malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[4] = TupleTypeMetadata2;
  v5 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v2[5] = v5;
  v6 = (char *)malloc(*(_QWORD *)(v5 + 64));
  v2[6] = (uint64_t)v6;
  v7 = sub_2150F3C48(v2);
  v9 = v8;
  v2[7] = (uint64_t)v7;
  (*(void (**)(char *))(*(_QWORD *)(v3 - 8) + 16))(v6);
  v10 = &v6[*(int *)(TupleTypeMetadata2 + 48)];
  v11 = *v9;
  v12 = v9[1];
  v13 = v9[2];
  v14 = v9[3];
  v15 = v9[4];
  LOBYTE(v9) = *((_BYTE *)v9 + 40);
  *(_QWORD *)v10 = v11;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = v13;
  *((_QWORD *)v10 + 3) = v14;
  *((_QWORD *)v10 + 4) = v15;
  v10[40] = (char)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v14, v15, (char)v9);
  return sub_2150F3BF4;
}

void sub_2150F3BF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_2150F3C48(uint64_t *a1))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  void *v4;

  sub_215130064();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v3 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  v4 = malloc(*(_QWORD *)(v3 + 64));
  a1[2] = (uint64_t)v4;
  RowGrouping.subscript.getter((uint64_t)v4, (uint64_t)v4 + *(int *)(TupleTypeMetadata2 + 48));
  return sub_21506DF04;
}

uint64_t sub_2150F3CF0(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a1);
  return sub_21512FE30();
}

__n128 sub_2150F3D3C@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;
  unint64_t v3;

  result = *v1;
  v3 = v1[1].n128_u64[0];
  *a1 = *v1;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t sub_2150F3D50(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a1);
  return sub_21512FEC0();
}

uint64_t sub_2150F3D84(uint64_t a1)
{
  MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>, a1);
  return sub_21512FECC();
}

uint64_t sub_2150F3DB8(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

double sub_2150F3E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_2150EFCC8(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_2150F3E14(uint64_t a1, uint64_t a2)
{
  return sub_2150CB340(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150EFDC4);
}

double sub_2150F3E30@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = *(_QWORD *)(v2 + 32);
  v5 = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 48))(*a1, a1[1]);
  *(_QWORD *)&result = sub_21504AA78(v5, v6, v4, a2).n128_u64[0];
  return result;
}

unint64_t sub_2150F3E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254DA8B48[0];
  if (!qword_254DA8B48[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254DA7D80);
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, qword_254DA8B48);
  }
  return result;
}

uint64_t sub_2150F3EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2150F1594(a1, *(_QWORD **)(v2 + 40), a2);
}

uint64_t sub_2150F3EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2150F1700(a1, *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_2150F3F0C(uint64_t a1)
{
  uint64_t v1;

  return sub_2150F1AF0(a1, *(uint64_t (**)(__int128 *))(v1 + 32)) & 1;
}

uint64_t sub_2150F3F2C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;

  return sub_2150F1D10(a1, a2, a3, a4, *(uint64_t (**)(_OWORD *))(v4 + 32));
}

uint64_t sub_2150F3F48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_2150F1DF0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32), a2, a3);
}

uint64_t sub_2150F3F68(uint64_t a1)
{
  uint64_t *v1;

  return sub_2150F2234(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t sub_2150F3F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_21512F7A0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_21512F794();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2150F403C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_21512F7A0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_21512F794() - 8) + 80);
  return sub_2150F35C0(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_2150F40A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2150F40D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2150F4100()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150F4110(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_2150F4158()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150F4168(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x2199DC4C4](&protocol conformance descriptor for RowGrouping<A>);
  return MEMORY[0x2199DC4C4](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_2150F41B0()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150F41C4()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2150F41EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2150F4228(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2150F428C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for RowGrouping(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RowGrouping);
}

uint64_t sub_2150F42DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2150EFE7C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2150F42FC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t *v6;

  return sub_2150EFF04(a1, a2, a3, a4, a5, a6, v6[6], v6[2], v6[3], v6[4], v6[5]);
}

uint64_t sub_2150F432C(uint64_t a1, uint64_t a2)
{
  return sub_2150CB340(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2150F00F4);
}

uint64_t sub_2150F4348(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t *v6;

  return sub_2150F3078(a1, a2, a3, a4, a5, a6, v6[7], v6[2], v6[3], v6[4], v6[5], v6[6]);
}

uint64_t sub_2150F437C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2150F3268(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56), a2);
}

uint64_t sub_2150F43B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_21512F794();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254DA8BD8);
    v10 = sub_21513016C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_2150F4608(&qword_254DA8BE0, MEMORY[0x24BDCF2A8]);
      v14 = sub_21512F908();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_2150F4608(qword_254DA8BE8, MEMORY[0x24BDCF2C0]);
          v20 = sub_21512FA58();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_2150F4608(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21512F794();
    result = MEMORY[0x2199DC4C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NumericSummary.someCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NumericSummary.someCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NumericSummary.someCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.noneCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t NumericSummary.noneCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*NumericSummary.noneCount.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.totalCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  result = *v0 + v1;
  if (__OFADD__(*v0, v1))
    __break(1u);
  return result;
}

uint64_t NumericSummary.median.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t NumericSummary.median.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

uint64_t (*NumericSummary.median.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.firstQuartile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t NumericSummary.firstQuartile.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*NumericSummary.firstQuartile.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.thirdQuartile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t NumericSummary.thirdQuartile.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 48), a1);
}

uint64_t (*NumericSummary.thirdQuartile.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.mean.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t NumericSummary.mean.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*NumericSummary.mean.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.standardDeviation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t NumericSummary.standardDeviation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 56), a1);
}

uint64_t (*NumericSummary.standardDeviation.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.min.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t NumericSummary.min.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 60), a1);
}

uint64_t (*NumericSummary.min.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.max.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 64));
}

uint64_t NumericSummary.max.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 64), a1);
}

uint64_t (*NumericSummary.max.modify())(_QWORD)
{
  return nullsub_5;
}

uint64_t NumericSummary.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  type metadata accessor for NumericSummary(0, a1, a2, a3);
  *a4 = 0;
  a4[1] = 0;
  sub_21512F8CC();
  sub_21512F8CC();
  sub_21512F8CC();
  sub_21512F8CC();
  sub_21512F8CC();
  sub_21512F8CC();
  return sub_21512F8CC();
}

uint64_t type metadata accessor for NumericSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NumericSummary);
}

uint64_t NumericSummary.init(someCount:noneCount:mean:standardDeviation:min:max:median:firstQuartile:thirdQuartile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v19;
  void (*v21)(char *, uint64_t, uint64_t);

  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  v19 = (int *)type metadata accessor for NumericSummary(0, a11, a12, a4);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32);
  v21(&a9[v19[13]], a3, a11);
  v21(&a9[v19[14]], a4, a11);
  v21(&a9[v19[15]], a5, a11);
  v21(&a9[v19[16]], a6, a11);
  v21(&a9[v19[10]], a7, a11);
  v21(&a9[v19[11]], a8, a11);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(&a9[v19[12]], a10, a11);
}

uint64_t NumericSummary.debugDescription.getter()
{
  sub_215130178();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_2151303B8();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  sub_21512FB90();
  sub_215130418();
  return 0;
}

uint64_t sub_2150F4D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t AssociatedConformanceWitness;
  char *v58;
  char *v59;
  unsigned int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t result;
  char v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  void (*v70)(char *, uint64_t);
  char v71;
  uint64_t v72;
  char v73;
  char *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  unsigned int v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  char v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[2];
  uint64_t AssociatedTypeWitness;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  unsigned int (*v125)(char *, uint64_t, uint64_t);
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  char *v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v117 = a6;
  v102 = a2;
  v116 = a1;
  v101 = a7;
  v100 = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v98[1] = (char *)v98 - v10;
  v114 = a5;
  v136 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(*(_QWORD *)(v136 + 16) + 8);
  v108 = *(_QWORD *)(v11 + 16);
  v107 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v107);
  v106 = (char *)v98 - v12;
  v13 = sub_215130064();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v134 = (uint64_t)v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v109 = (char *)v98 - v17;
  v135 = *(void (**)(uint64_t, uint64_t))(a4 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = swift_getAssociatedTypeWitness();
  v103 = *(_QWORD *)(v137 - 8);
  v20 = MEMORY[0x24BDAC7A8](v137);
  v22 = (char *)v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)v98 - v24;
  v26 = *(void (**)(uint64_t, uint64_t))(a3 - 8);
  v27 = MEMORY[0x24BDAC7A8](v23);
  v113 = (uint64_t)v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v111 = (char *)v98 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v112 = (char *)v98 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v118 = (uint64_t)v98 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v131 = (char *)v98 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v115 = (uint64_t)v98 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v130 = (uint64_t)v98 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v121 = (void (*)(char *, uint64_t))((char *)v98 - v42);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v120 = (char *)v98 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)v98 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)v98 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)v98 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v122 = v11;
  v54 = *(_QWORD *)(v11 + 8);
  v126 = (char *)v98 - v55;
  v129 = v54;
  sub_215130094();
  v128 = v53;
  sub_21512F8CC();
  v123 = v50;
  v56 = v137;
  sub_21512F8CC();
  v105 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v135 + 2);
  v105(v19, v116, a4);
  v104 = v19;
  sub_21512FC20();
  v110 = a4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v58 = v109;
  v124 = AssociatedConformanceWitness;
  sub_215130094();
  v59 = v58;
  v125 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v26 + 6);
  v60 = v125(v58, 1, a3);
  v135 = v26;
  v133 = v22;
  if (v60 == 1)
  {
    v121 = *(void (**)(char *, uint64_t))(v103 + 8);
    v121(v25, v56);
    v127 = 0;
    v61 = v115;
    v62 = v104;
    goto LABEL_18;
  }
  v119 = v25;
  v63 = 0;
  v132 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v26 + 4);
  v64 = (uint64_t)v128;
  do
  {
    v65 = v59;
    v132(v47, v59, a3);
    result = sub_215130310();
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    v127 = v63 + 1;
    v67 = sub_21512F8D8();
    v68 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v26 + 2);
    v69 = v120;
    v68(v120, v47, a3);
    if ((v67 & 1) != 0)
    {
      v70 = (void (*)(char *, uint64_t))*((_QWORD *)v26 + 1);
      v70(v69, a3);
    }
    else
    {
      v71 = sub_21512F9C8();
      v70 = (void (*)(char *, uint64_t))*((_QWORD *)v26 + 1);
      v70(v69, a3);
      if ((v71 & 1) == 0)
        goto LABEL_11;
    }
    (*((void (**)(uint64_t, char *, uint64_t))v26 + 3))(v64, v47, a3);
LABEL_11:
    v72 = (uint64_t)v123;
    v73 = sub_21512F8D8();
    v74 = (char *)v121;
    v68((char *)v121, v47, a3);
    if ((v73 & 1) != 0)
    {
      v70(v74, a3);
    }
    else
    {
      v75 = sub_21512F9BC();
      v70(v74, a3);
      if ((v75 & 1) == 0)
      {
        v70(v47, a3);
        goto LABEL_5;
      }
    }
    v70((char *)v72, a3);
    v132((char *)v72, v47, a3);
LABEL_5:
    v64 = (uint64_t)v128;
    v26 = v135;
    sub_215130094();
    v59 = v65;
    ++v63;
  }
  while (v125(v65, 1, a3) != 1);
  v121 = *(void (**)(char *, uint64_t))(v103 + 8);
  v121(v119, v137);
  if (v127 >= 1)
  {
    v61 = v115;
    sub_21512F8F0();
    sub_21512F8C0();
    (*((void (**)(uint64_t, uint64_t))v26 + 1))(v61, a3);
    v62 = v104;
    goto LABEL_19;
  }
  v61 = v115;
  v62 = v104;
LABEL_18:
  sub_21512F8CC();
LABEL_19:
  sub_215130094();
  v105(v62, v116, v110);
  sub_21512FC20();
  v76 = v134;
  sub_215130094();
  v77 = v76;
  v78 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v125;
  v79 = v125((char *)v76, 1, a3);
  v80 = v111;
  v81 = v118;
  v82 = v112;
  if (v79 != 1)
  {
    v132 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v135 + 4);
    do
    {
      v132((char *)v61, (char *)v77, a3);
      sub_215130304();
      sub_215130304();
      sub_21512FDF4();
      v83 = (void (*)(char *, uint64_t))*((_QWORD *)v135 + 1);
      v83(v80, a3);
      v83(v82, a3);
      sub_215130310();
      v83((char *)v81, a3);
      v83((char *)v61, a3);
      sub_215130094();
      v77 = v134;
    }
    while (v78(v134, 1, a3) != 1);
  }
  v121(v133, v137);
  swift_getAssociatedConformanceWitness();
  sub_21513046C();
  sub_2151303F4();
  v84 = sub_21512F9BC();
  v85 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v135 + 1);
  v85(v61, a3);
  v135 = v85;
  if ((v84 & 1) != 0)
  {
    result = v127 - 1;
    v86 = v118;
    if (!__OFSUB__(v127, 1))
    {
      sub_21512F8F0();
      sub_21512F8C0();
      v85(v86, a3);
      sub_21512F8B4();
      v87 = ((uint64_t (*)(uint64_t, uint64_t))v85)(v61, a3);
      goto LABEL_26;
    }
LABEL_28:
    __break(1u);
  }
  else
  {
    v87 = sub_21512F8CC();
LABEL_26:
    MEMORY[0x24BDAC7A8](v87);
    v138 = sub_21512FC38();
    v88 = sub_21512FD40();
    MEMORY[0x2199DC4C4](MEMORY[0x24BEE12C8], v88);
    v89 = sub_21512FC8C();
    swift_bridgeObjectRelease();
    v138 = v89;
    v136 = swift_getAssociatedConformanceWitness();
    sub_215130460();
    v90 = v118;
    sub_2151303F4();
    v134 = v88;
    v137 = MEMORY[0x2199DC4C4](MEMORY[0x24BEE12D8], v88);
    v91 = v114;
    sub_2150F5AA8(v90, v88, v137, v114, v115);
    v92 = v135;
    v135(v90, a3);
    v138 = v89;
    sub_215130460();
    v93 = (uint64_t)v112;
    sub_2151303F4();
    v94 = v90;
    v95 = v134;
    sub_2150F5AA8(v93, v134, v137, v91, v94);
    v92(v93, a3);
    v138 = v89;
    sub_215130460();
    v96 = (uint64_t)v111;
    sub_2151303F4();
    v97 = v114;
    sub_2150F5AA8(v96, v95, v137, v114, v93);
    v92(v96, a3);
    v92((uint64_t)v131, a3);
    v92((uint64_t)v126, a3);
    swift_bridgeObjectRelease();
    return NumericSummary.init(someCount:noneCount:mean:standardDeviation:min:max:median:firstQuartile:thirdQuartile:)(v127, v102, v130, v113, (uint64_t)v128, (uint64_t)v123, v118, v115, v101, v93, a3, v97);
  }
  return result;
}

uint64_t sub_2150F5AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(uint64_t);
  char *v37;
  char v38;
  char *v39;
  char v40;
  uint64_t result;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  void (*v54)(uint64_t);
  void (*v55)(char *, uint64_t);
  void (*v56)(uint64_t *, _QWORD);
  char *v57;
  void (*v58)(char *);
  void (*v59)(char *, uint64_t);
  void (*v60)(uint64_t *, _QWORD);
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  void (*v65)(uint64_t *, _QWORD);
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  void (*AssociatedConformanceWitness)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;

  v84 = a5;
  v77 = sub_215130400();
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v76 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(*(_QWORD *)(a3 + 8) + 8);
  v89 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v71 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v69 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v72 = (char *)&v69 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v69 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v79 = (char *)&v69 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v69 = (char *)&v69 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v82 = (char *)&v69 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v81 = (char *)&v69 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v87 = (char *)&v69 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v86 = (char *)&v69 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v69 - v32;
  v34 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v34);
  AssociatedConformanceWitness = (void (*)(char *, uint64_t, uint64_t))swift_getAssociatedConformanceWitness();
  sub_215130460();
  sub_2151303F4();
  v80 = a4;
  v83 = *(_QWORD *)(a4 + 16);
  LOBYTE(a2) = sub_21512F9D4();
  v35 = *(char **)(v11 + 8);
  ((void (*)(char *, uint64_t))v35)(v33, AssociatedTypeWitness);
  v36 = *(void (**)(uint64_t))(v11 + 16);
  v37 = v86;
  v74 = a1;
  v78 = v36;
  ((void (*)(char *, uint64_t, uint64_t))v36)(v86, a1, AssociatedTypeWitness);
  if ((a2 & 1) == 0)
    goto LABEL_13;
  sub_215130460();
  sub_2151303F4();
  v38 = sub_21512F9E0();
  v39 = v33;
  ((void (*)(char *, uint64_t))v35)(v33, AssociatedTypeWitness);
  ((void (*)(char *, uint64_t))v35)(v37, AssociatedTypeWitness);
  if ((v38 & 1) == 0)
    goto LABEL_16;
  v37 = v35;
  v40 = sub_21512FE90();
  v35 = v87;
  if ((v40 & 1) != 0)
    return sub_21512F8CC();
  if (__OFSUB__(sub_21512FE60(), 1))
  {
    __break(1u);
LABEL_13:
    ((void (*)(char *, uint64_t))v35)(v37, AssociatedTypeWitness);
    goto LABEL_16;
  }
  v42 = v83;
  sub_21512F8F0();
  v74 = *(_QWORD *)(*(_QWORD *)(v42 + 16) + 8);
  sub_21512FDF4();
  v86 = v37;
  ((void (*)(char *, uint64_t))v37)(v33, AssociatedTypeWitness);
  v43 = *MEMORY[0x24BEE38B8];
  v44 = v75;
  v45 = v76;
  AssociatedConformanceWitness = *(void (**)(char *, uint64_t, uint64_t))(v75 + 104);
  v46 = v77;
  AssociatedConformanceWitness(v76, v43, v77);
  sub_21512F8E4();
  v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v45, v46);
  v48 = v81;
  sub_21512F854();
  AssociatedConformanceWitness(v45, *MEMORY[0x24BEE38C0], v46);
  sub_21512F8E4();
  v49 = v45;
  v50 = v48;
  v47(v49, v46);
  v51 = v39;
  v52 = v82;
  sub_21512F854();
  if ((sub_21512FA58() & 1) != 0)
  {
    v53 = v69;
    v54 = v78;
    ((void (*)(char *, char *, uint64_t))v78)(v69, v35, AssociatedTypeWitness);
    sub_2150F7324();
    sub_2151302BC();
    if ((v91 & 1) == 0)
    {
      v55 = (void (*)(char *, uint64_t))v86;
      ((void (*)(char *, uint64_t))v86)(v53, AssociatedTypeWitness);
      v92 = v90;
      v56 = (void (*)(uint64_t *, _QWORD))sub_21512FF5C();
      v54(v84);
      v56(&v90, 0);
      v55(v52, AssociatedTypeWitness);
      v55(v50, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v55)(v35, AssociatedTypeWitness);
    }
  }
  else
  {
    v57 = v70;
    v58 = (void (*)(char *))v78;
    ((void (*)(char *, char *, uint64_t))v78)(v70, v48, AssociatedTypeWitness);
    v83 = sub_2150F7324();
    sub_2151302BC();
    if ((v91 & 1) == 0)
    {
      v59 = (void (*)(char *, uint64_t))v86;
      ((void (*)(char *, uint64_t))v86)(v57, AssociatedTypeWitness);
      v92 = v90;
      v60 = (void (*)(uint64_t *, _QWORD))sub_21512FF5C();
      v58(v51);
      v60(&v90, 0);
      v61 = v72;
      v62 = v82;
      v63 = v87;
      AssociatedConformanceWitness = *(void (**)(char *, uint64_t, uint64_t))(v74 + 8);
      sub_215130304();
      sub_21512FDF4();
      v59(v61, AssociatedTypeWitness);
      v59(v51, AssociatedTypeWitness);
      v64 = v71;
      ((void (*)(char *, char *, uint64_t))v58)(v71, v62, AssociatedTypeWitness);
      sub_2151302BC();
      if ((v91 & 1) == 0)
      {
        v59(v64, AssociatedTypeWitness);
        v92 = v90;
        v65 = (void (*)(uint64_t *, _QWORD))sub_21512FF5C();
        v58(v51);
        v65(&v90, 0);
        v66 = v81;
        sub_215130304();
        v67 = v73;
        sub_21512FDF4();
        v59(v61, AssociatedTypeWitness);
        v59(v51, AssociatedTypeWitness);
        v68 = v79;
        sub_2151302F8();
        v59(v67, AssociatedTypeWitness);
        v59(v68, AssociatedTypeWitness);
        v59(v82, AssociatedTypeWitness);
        v59(v66, AssociatedTypeWitness);
        return ((uint64_t (*)(char *, uint64_t))v59)(v63, AssociatedTypeWitness);
      }
    }
  }
  v90 = 0;
  v91 = 0xE000000000000000;
  sub_215130178();
  sub_215130664();
  sub_21512FB90();
  swift_bridgeObjectRelease();
  sub_21512FB90();
  sub_21512FB90();
  sub_21512FB90();
LABEL_16:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t NumericSummary.hash(into:)()
{
  sub_2151305B0();
  sub_2151305B0();
  sub_21512F914();
  sub_21512F914();
  sub_21512F914();
  sub_21512F914();
  sub_21512F914();
  sub_21512F914();
  return sub_21512F914();
}

uint64_t static NumericSummary.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  if (*a1 == *a2
    && a1[1] == a2[1]
    && (type metadata accessor for NumericSummary(0, a3, a4, a4), (sub_21512FA58() & 1) != 0)
    && (sub_21512FA58() & 1) != 0
    && (sub_21512FA58() & 1) != 0
    && (sub_21512FA58() & 1) != 0
    && (sub_21512FA58() & 1) != 0
    && (sub_21512FA58() & 1) != 0)
  {
    return sub_21512FA58() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t NumericSummary.hashValue.getter()
{
  sub_2151305A4();
  NumericSummary.hash(into:)();
  return sub_2151305EC();
}

uint64_t sub_2150F6698()
{
  sub_2151305A4();
  NumericSummary.hash(into:)();
  return sub_2151305EC();
}

void sub_2150F66D8()
{
  JUMPOUT(0x2199DC4C4);
}

uint64_t sub_2150F66EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return static NumericSummary.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2150F66F8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2150F6700()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_2150F6788(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6 + 16;
  v8 = v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0;
  if (v8
    && (v9 = *(_QWORD *)(v5 + 64),
        v10 = v9 + v6,
        ((v9
        + v6
        + ((v9 + v6 + ((v9 + v6 + ((v9 + v6 + ((v9 + v6 + ((v9 + v6 + (v7 & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & (unint64_t)~v6)
      + v9 <= 0x18))
  {
    *a1 = *a2;
    v11 = ~v6;
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v16(v14, v15, v4);
    v17 = (v10 + v14) & v11;
    v18 = (v10 + v15) & v11;
    v16(v17, v18, v4);
    v19 = (v10 + v17) & v11;
    v20 = (v10 + v18) & v11;
    v16(v19, v20, v4);
    v21 = (v10 + v19) & v11;
    v22 = (v10 + v20) & v11;
    v16(v21, v22, v4);
    v23 = (v10 + v21) & v11;
    v24 = (v10 + v22) & v11;
    v16(v23, v24, v4);
    v25 = (v10 + v23) & v11;
    v26 = (v10 + v24) & v11;
    v16(v25, v26, v4);
    v16((v10 + v25) & v11, (v10 + v26) & v11, v4);
  }
  else
  {
    v27 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v27 + ((v6 & 0xF8 ^ 0x1F8) & v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2150F6950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(unint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4;
  v13 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
  v13(v5, v2);
  v6 = *(_QWORD *)(v3 + 64) + v4;
  v7 = (v6 + v5) & ~v4;
  v13(v7, v2);
  v8 = (v6 + v7) & ~v4;
  v13(v8, v2);
  v9 = (v6 + v8) & ~v4;
  v13(v9, v2);
  v10 = (v6 + v9) & ~v4;
  v13(v10, v2);
  v11 = (v6 + v10) & ~v4;
  v13(v11, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)((v6 + v11) & ~v4, v2);
}

_QWORD *sub_2150F6A40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + v8;
  v13 = (v12 + v9) & ~v8;
  v14 = (v12 + v10) & ~v8;
  v11(v13, v14, v6);
  v15 = (v12 + v13) & ~v8;
  v16 = (v12 + v14) & ~v8;
  v11(v15, v16, v6);
  v17 = (v12 + v15) & ~v8;
  v18 = (v12 + v16) & ~v8;
  v11(v17, v18, v6);
  v19 = (v12 + v17) & ~v8;
  v20 = (v12 + v18) & ~v8;
  v11(v19, v20, v6);
  v21 = (v12 + v19) & ~v8;
  v22 = (v12 + v20) & ~v8;
  v11(v21, v22, v6);
  v11((v12 + v21) & ~v8, (v12 + v22) & ~v8, v6);
  return a1;
}

_QWORD *sub_2150F6B88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + v8;
  v13 = (v12 + v9) & ~v8;
  v14 = (v12 + v10) & ~v8;
  v11(v13, v14, v6);
  v15 = (v12 + v13) & ~v8;
  v16 = (v12 + v14) & ~v8;
  v11(v15, v16, v6);
  v17 = (v12 + v15) & ~v8;
  v18 = (v12 + v16) & ~v8;
  v11(v17, v18, v6);
  v19 = (v12 + v17) & ~v8;
  v20 = (v12 + v18) & ~v8;
  v11(v19, v20, v6);
  v21 = (v12 + v19) & ~v8;
  v22 = (v12 + v20) & ~v8;
  v11(v21, v22, v6);
  v11((v12 + v21) & ~v8, (v12 + v22) & ~v8, v6);
  return a1;
}

_QWORD *sub_2150F6CD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + v8;
  v13 = (v12 + v9) & ~v8;
  v14 = (v12 + v10) & ~v8;
  v11(v13, v14, v6);
  v15 = (v12 + v13) & ~v8;
  v16 = (v12 + v14) & ~v8;
  v11(v15, v16, v6);
  v17 = (v12 + v15) & ~v8;
  v18 = (v12 + v16) & ~v8;
  v11(v17, v18, v6);
  v19 = (v12 + v17) & ~v8;
  v20 = (v12 + v18) & ~v8;
  v11(v19, v20, v6);
  v21 = (v12 + v19) & ~v8;
  v22 = (v12 + v20) & ~v8;
  v11(v21, v22, v6);
  v11((v12 + v21) & ~v8, (v12 + v22) & ~v8, v6);
  return a1;
}

_QWORD *sub_2150F6E18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + v8;
  v13 = (v12 + v9) & ~v8;
  v14 = (v12 + v10) & ~v8;
  v11(v13, v14, v6);
  v15 = (v12 + v13) & ~v8;
  v16 = (v12 + v14) & ~v8;
  v11(v15, v16, v6);
  v17 = (v12 + v15) & ~v8;
  v18 = (v12 + v16) & ~v8;
  v11(v17, v18, v6);
  v19 = (v12 + v17) & ~v8;
  v20 = (v12 + v18) & ~v8;
  v11(v19, v20, v6);
  v21 = (v12 + v19) & ~v8;
  v22 = (v12 + v20) & ~v8;
  v11(v21, v22, v6);
  v11((v12 + v21) & ~v8, (v12 + v22) & ~v8, v6);
  return a1;
}

uint64_t sub_2150F6F60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = *(_QWORD *)(v4 + 64);
  v9 = ((v8
       + v6
       + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v6 + 16) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6)
     + v8;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6);
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_18;
LABEL_11:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v5 + v13 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2150F7054 + 4 * byte_215139AC8[(v9 - 1)]))();
}

void sub_2150F70BC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = ((v9
        + v8
        + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)
      + v9;
  v11 = a3 >= v7;
  v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v7 < a2)
  {
    v14 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_2150F72C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

unint64_t sub_2150F7324()
{
  unint64_t result;

  result = qword_254DA8C70;
  if (!qword_254DA8C70)
  {
    result = MEMORY[0x2199DC4C4](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254DA8C70);
  }
  return result;
}

uint64_t DataFrame.Rows.count.getter()
{
  uint64_t v0;

  return sub_2150EBD1C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t DataFrame.Row.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t DataFrame.Rows.subscript.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DataFrame.Rows.subscript.setter(_QWORD *a1, uint64_t a2)
{
  char **v2;
  char **v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v17;
  uint64_t v18[5];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v17 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *v2;
  if (v4 == *((_QWORD *)v5 + 2))
  {
    if (v4)
    {
      v6 = a1[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_10:
        v5 = sub_21501E4D4((uint64_t)v5);
      v7 = 0;
      v8 = 0;
      do
      {
        sub_21501EE90(v17 + v7 + 32, (uint64_t)v19);
        *v3 = v5;
        if (v8 >= *((_QWORD *)v5 + 2))
        {
          __break(1u);
          goto LABEL_10;
        }
        ++v8;
        v10 = v20;
        v9 = v21;
        v11 = __swift_project_boxed_opaque_existential_1(v19, v20);
        v18[3] = v10;
        v18[4] = *(_QWORD *)(v9 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1, v11, v10);
        v13 = *(_QWORD *)&v5[v7 + 56];
        v14 = *(_QWORD *)&v5[v7 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v5[v7 + 32], v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v14 + 72))(a2, v6, v18, v13, v14);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        sub_21501EA34((uint64_t)v19);
        v5 = *v3;
        v7 += 40;
      }
      while (v4 != v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    result = sub_2151302EC();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.Rows.startIndex.getter()
{
  uint64_t v0;
  uint64_t result;
  int v2;
  uint64_t v3;
  char v4;

  result = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 40);
  if (*(_BYTE *)(v0 + 40))
  {
    if (v2 == 1 && *(_QWORD *)(result + 16))
    {
      return *(_QWORD *)(result + 32);
    }
    else
    {
      sub_21508C520(result, *(_QWORD *)(v0 + 32), v2);
      if ((v4 & 1) != 0)
        return 0;
      else
        return v3;
    }
  }
  return result;
}

uint64_t DataFrame.Rows.endIndex.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_21508C520(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  if ((v2 & 1) != 0)
    return 0;
  else
    return v1;
}

Swift::Int sub_2150F7614(Swift::Int result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2;
  if (a2 < 0)
  {
    v3 = 0;
    do
    {
      --v3;
      result = DataFrame.Rows.index(before:)(result);
    }
    while (v3 > v2);
  }
  else if (a2)
  {
    do
    {
      result = DataFrame.Rows.index(after:)(result);
      --v2;
    }
    while (v2);
  }
  return result;
}

Swift::Int sub_2150F7664(Swift::Int result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2;
  if (a2 < 0)
  {
    v5 = 0;
    while (result != a3)
    {
      --v5;
      result = DataFrame.Rows.index(before:)(result);
      if (v5 <= v4)
        return result;
    }
  }
  else
  {
    if (!a2)
      return result;
    while (result != a3)
    {
      result = DataFrame.Rows.index(after:)(result);
      if (!--v4)
        return result;
    }
  }
  return 0;
}

Swift::Int sub_2150F76EC(Swift::Int result, Swift::Int a2)
{
  uint64_t i;
  uint64_t v4;

  if (result < a2)
  {
    for (i = 0; ; ++i)
    {
      v4 = i + 1;
      if (__OFADD__(i, 1))
        break;
      result = DataFrame.Rows.index(after:)(result);
      if (result == a2)
        return v4;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < result)
  {
    v4 = 0;
    while (!__OFSUB__(v4--, 1))
    {
      result = DataFrame.Rows.index(before:)(result);
      if (result == a2)
        return v4;
    }
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_2150F776C(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  if (a5 == 2)
    return 0;
  if (a5 == 1)
  {
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      return 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = 0;
  *(_QWORD *)&v11 = a3;
  *((_QWORD *)&v11 + 1) = a4;
  v17 = v11;
  while (1)
  {
    v12 = v9 >> 1;
    v13 = v10 + (v9 >> 1);
    if (__OFADD__(v10, v9 >> 1))
      break;
    if (a5)
    {
      if ((unint64_t)v13 > *(_QWORD *)(a3 + 16))
        goto LABEL_28;
    }
    else if ((unint64_t)v13 > 1)
    {
      goto LABEL_28;
    }
    if (a5)
    {
      if (a5 != 1)
        goto LABEL_32;
      if (v13 >= *(_QWORD *)(a3 + 16))
        goto LABEL_30;
      v14 = *(_OWORD *)(a3 + 32 + 16 * v13);
    }
    else
    {
      v14 = v17;
      if (v13)
        goto LABEL_29;
    }
    v18 = v14;
    v15 = a1(&v18);
    if (v5)
      return v10;
    if ((v15 & 1) == 0)
    {
      if (a5)
      {
        if (v13 >= *(_QWORD *)(a3 + 16))
          goto LABEL_31;
      }
      else if (v13 >= 1)
      {
        goto LABEL_31;
      }
      v10 = v13 + 1;
      v12 = v9 + ~v12;
    }
    v9 = v12;
    if (v12 <= 0)
      return v10;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

uint64_t sub_2150F7910(uint64_t (*a1)(__int128 *))
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  char v14;
  uint64_t result;
  __int128 v16;
  __int128 v17;
  uint64_t (*v18)(__int128 *);

  v18 = a1;
  v16 = *(_OWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(v1 + 32);
  if (*(_BYTE *)(v1 + 32))
  {
    if (v3 == 1)
      v4 = *(_QWORD *)(v16 + 16);
    else
      v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)v1;
  if (*(_QWORD *)v1 > v4)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (*(_BYTE *)(v1 + 32))
  {
    if (v3 == 1)
      v6 = *(_QWORD *)(v16 + 16);
    else
      v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  v7 = *(_QWORD *)(v1 + 8);
  if (v7 > v6)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
  v8 = v7 - v5;
  if ((uint64_t)(v7 - v5) >= 1)
  {
    v9 = *(_QWORD *)v1;
    while (1)
    {
      v10 = v8 >> 1;
      v11 = v9 + (v8 >> 1);
      if (__OFADD__(v9, v8 >> 1))
        break;
      if (v3)
      {
        if (v3 == 1)
          v12 = *(_QWORD *)(v16 + 16);
        else
          v12 = 0;
      }
      else
      {
        v12 = 1;
      }
      if (v11 >= (uint64_t)v7 || v11 < v5 || v11 > v12)
        goto LABEL_42;
      if (v3)
      {
        if (v3 != 1)
          goto LABEL_48;
        if (v11 >= *(_QWORD *)(v16 + 16))
          goto LABEL_44;
        v13 = *(_OWORD *)(v16 + 32 + 16 * v11);
      }
      else
      {
        v13 = v16;
        if (v11)
          goto LABEL_43;
      }
      v17 = v13;
      v14 = v18(&v17);
      if (v2)
        return v9;
      if ((v14 & 1) == 0)
      {
        if (v3)
        {
          if (v11 >= *(_QWORD *)(v16 + 16))
            goto LABEL_45;
        }
        else if (v11 >= 1)
        {
          goto LABEL_45;
        }
        v9 = v11 + 1;
        v10 = v8 + ~v10;
      }
      v8 = v10;
      if (v10 <= 0)
        return v9;
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  return *(_QWORD *)v1;
}

uint64_t DataFrame.Row.base.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DataFrame.Row.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(v4 + 24);
  DataFrame.subscript.getter(a1, a2, a3);
  v10 = type metadata accessor for Column(0, a3, v8, v9);
  Column.subscript.getter(v7, v10, a4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_2150FAEA0(a1, a2, a3, a4);
  v5 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

void (*DataFrame.Row.subscript.modify(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4))(unint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  v10 = sub_215130064();
  v9[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  DataFrame.Row.subscript.getter(a2, a3, a4, (uint64_t)v13);
  return sub_2150F7D04;
}

void sub_2150F7D04(unint64_t **a1, char a2)
{
  unint64_t *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(void *, unint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = (*a1)[2];
  v9 = **a1;
  v8 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(unint64_t, void *, unint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_2150FAEA0((uint64_t)v3, v9, v8, v7);
    v10 = *(void (**)(void *, unint64_t))(v6 + 8);
    v10(v3, v5);
  }
  else
  {
    sub_2150FAEA0((*a1)[7], v9, v8, v7);
    v10 = *(void (**)(void *, unint64_t))(v6 + 8);
  }
  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.subscript.getter(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for Column(0, a4, v12, v13);
  Column.subscript.getter(v11, v14, a5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  sub_2150FAF5C(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  v6 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

void (*DataFrame.Row.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  v12 = sub_215130064();
  v11[5] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  DataFrame.Row.subscript.getter(a2, a3, a4, a5, (uint64_t)v15);
  return sub_2150F7FE0;
}

void sub_2150F7FE0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[7];
  v4 = (void *)(*a1)[8];
  v5 = (*a1)[5];
  v6 = (*a1)[6];
  v7 = (*a1)[3];
  v8 = (*a1)[1];
  v9 = (*a1)[2];
  v10 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[7], v4, v5);
    swift_bridgeObjectRetain();
    sub_2150FAF5C((uint64_t)v3, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    v11 = *(void (**)(void *, uint64_t))(v6 + 8);
    v11(v3, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2150FAF5C((uint64_t)v4, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    v11 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v11(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

unint64_t DataFrame.Row.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v5 = *v2;
  v6 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  v12[0] = *v2;
  v12[1] = v6;
  v12[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_21501F2BC(a1, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v5 + 16))
  {
    sub_21501EE90(v5 + 40 * result + 32, (uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v13;
    v11 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8) + 128))(v7, v10);
    return sub_21501EA34((uint64_t)v12);
  }
  __break(1u);
  return result;
}

unint64_t sub_2150F81C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v11[0] = *a1;
  v11[1] = v3;
  v11[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_21501F2BC(v6, v7);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v2 + 16))
  {
    sub_21501EE90(v2 + 40 * result + 32, (uint64_t)v11);
    v9 = v12;
    v10 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 128))(v5, v9);
    sub_21501EA34((uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2150F82B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[32];

  v3 = *a3;
  v4 = a3[1];
  sub_215053AA4(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  sub_2150FB024((uint64_t)v6, v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2150FB024(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

unint64_t DataFrame.Row.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;

  v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[10] = a3;
  v7[11] = v3;
  v7[9] = a2;
  v8 = *v3;
  v9 = v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_21501F2BC(a2, a3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v8 + 16))
  {
    sub_21501EE90(v8 + 40 * result + 32, (uint64_t)v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v7[3];
    v12 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v11);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8) + 128))(v9, v11);
    sub_21501EA34((uint64_t)v7);
    return (unint64_t)sub_2150F844C;
  }
  __break(1u);
  return result;
}

void sub_2150F844C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)a1 + 40;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    sub_215053AA4(*(_QWORD *)a1 + 40, (uint64_t)v2);
    swift_bridgeObjectRetain();
    sub_2150FB024((uint64_t)v2, v5, v4);
    swift_bridgeObjectRelease();
    sub_21507651C(v3);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2150FB024(v3, v5, v4);
    swift_bridgeObjectRelease();
  }
  free(v2);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[2];
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v6 = *a1;
  v7 = a1[1];
  v8 = *((_QWORD *)v3 + 2);
  v9 = *((_QWORD *)v3 + 3);
  v15 = *v3;
  v16 = v8;
  v14[0] = v6;
  v14[1] = v7;
  DataFrame.subscript.getter(v14, a2);
  v15 = v17;
  v16 = v18;
  v12 = type metadata accessor for Column(0, a2, v10, v11);
  Column.subscript.getter(v9, v12, a3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150F8580@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[2];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(uint64_t *)((char *)a2 + a3 - 8);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *a2;
  v8 = a2[1];
  v11 = *a1;
  v12 = v5;
  v13 = v6;
  v10[0] = v7;
  v10[1] = v8;
  return DataFrame.Row.subscript.getter(v10, v4, a4);
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_2150FB178(a1, a2, a3);
  v4 = sub_215130064();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*DataFrame.Row.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  __int128 *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v7 = malloc(0x40uLL);
  *a1 = v7;
  *v7 = a3;
  v7[1] = v3;
  v8 = sub_215130064();
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v13 = *a2;
  v12 = a2[1];
  v7[5] = v11;
  v7[6] = v13;
  v7[7] = v12;
  v14 = *((_QWORD *)v3 + 2);
  v15 = *((_QWORD *)v3 + 3);
  v18 = *v3;
  v19 = v14;
  v20 = v15;
  v17[0] = v13;
  v17[1] = v12;
  swift_bridgeObjectRetain();
  DataFrame.Row.subscript.getter(v17, a3, (uint64_t)v11);
  return sub_2150F86E0;
}

void sub_2150F86E0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v4 = (*a1)[6];
  v3 = (*a1)[7];
  v5 = (void *)(*a1)[4];
  v6 = (void *)(*a1)[5];
  v7 = (*a1)[2];
  v8 = (*a1)[3];
  v9 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    v11 = v4;
    v12 = v3;
    sub_2150FB178((uint64_t)v5, &v11, v9);
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v7);
    v10(v6, v7);
  }
  else
  {
    v11 = (*a1)[6];
    v12 = v3;
    sub_2150FB178((uint64_t)v6, &v11, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);
  free(v2);
}

Swift::Int __swiftcall DataFrame.Rows.index(after:)(Swift::Int after)
{
  uint64_t v1;
  unint64_t v3;
  Swift::Int result;
  uint64_t v5;
  int v6;
  Swift::Int *v7;
  unint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  unint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  char v14;

  v3 = 0;
  result = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 40);
  v7 = (Swift::Int *)(result + 32);
  if (!*(_BYTE *)(v1 + 40))
    goto LABEL_6;
LABEL_2:
  if (v6 != 1)
    goto LABEL_25;
  v8 = *(_QWORD *)(result + 16);
  if (v3 == v8)
    goto LABEL_25;
  if (v3 < v8)
  {
    v10 = *v7;
    v9 = v7[1];
    while (v10 > after || v9 <= after)
    {
      if (*(_BYTE *)(v1 + 40))
      {
        if (v3 >= *(_QWORD *)(result + 16))
          goto LABEL_29;
      }
      else if (v3)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      ++v3;
      v7 += 2;
      if (*(_BYTE *)(v1 + 40))
        goto LABEL_2;
LABEL_6:
      if (v3 == 1)
        goto LABEL_25;
      v10 = *(_QWORD *)(v1 + 24);
      v9 = *(_QWORD *)(v1 + 32);
      if (v3)
        goto LABEL_31;
    }
    if (*(_BYTE *)(v1 + 40))
    {
      v11 = *(_QWORD *)(result + 16);
      if (v3 >= v11)
        goto LABEL_32;
      v12 = after + 1;
      if (v12 < *v7 || v12 >= v7[1])
      {
        if (v3 + 1 >= v11)
          goto LABEL_25;
        return v7[2];
      }
      return v12;
    }
    if (v3)
      goto LABEL_33;
    v12 = after + 1;
    if (v12 >= result && v12 < v5)
      return v12;
LABEL_25:
    sub_21508C520(result, v5, v6);
    if ((v14 & 1) != 0)
      return 0;
    else
      return v13;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

Swift::Int __swiftcall DataFrame.Rows.index(before:)(Swift::Int before)
{
  uint64_t v1;
  uint64_t v3;
  Swift::Int v4;
  int v5;
  Swift::Int v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  Swift::Int result;
  unint64_t v13;
  Swift::Int *v14;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v6 = v4;
  if (*(_BYTE *)(v1 + 40))
  {
    if (v5 == 1 && *(_QWORD *)(v4 + 16))
    {
      v6 = *(_QWORD *)(v4 + 32);
    }
    else
    {
      sub_21508C520(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
      if ((v7 & 1) != 0)
        goto LABEL_37;
    }
  }
  if (v6 >= before)
    goto LABEL_54;
  while (2)
  {
    sub_21508C520(v4, v3, v5);
    if ((v9 & 1) != 0)
      goto LABEL_13;
    if (v8 == before)
    {
      do
      {
        sub_21508C520(v4, v3, v5);
        if ((v11 & 1) != 0)
          goto LABEL_52;
        result = v10 - 1;
        if (!__OFSUB__(v10, 1))
          return result;
        __break(1u);
LABEL_13:
        ;
      }
      while (!before);
    }
    v13 = 0;
    v14 = (Swift::Int *)(v4 + 40);
    if (!v5)
    {
LABEL_15:
      v15 = v3;
      if (v13)
        goto LABEL_44;
      if (v4 <= before)
        goto LABEL_22;
      goto LABEL_23;
    }
    while (1)
    {
      if (v5 != 1)
        goto LABEL_54;
      v16 = *(_QWORD *)(v4 + 16);
      if (v13 == v16)
        goto LABEL_54;
      if (v13 >= v16)
        goto LABEL_46;
      v15 = *v14;
      if (*(v14 - 1) > before)
        goto LABEL_23;
LABEL_22:
      if (v15 > before)
        break;
LABEL_23:
      if (v5)
      {
        if (v13 >= *(_QWORD *)(v4 + 16))
          goto LABEL_43;
      }
      else if (v13)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        if (v13 == 1)
          goto LABEL_54;
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      ++v13;
      v14 += 2;
      if (!v5)
        goto LABEL_15;
    }
    if (v5)
    {
      v17 = *(_QWORD *)(v4 + 16);
      if (v13 >= v17)
        goto LABEL_48;
      if (*(v14 - 1) != before)
        goto LABEL_41;
      if (!v13)
        goto LABEL_50;
      if (v13 - 1 >= v17)
        goto LABEL_51;
      v18 = *(v14 - 2);
      result = v18 - 1;
      if (!__OFSUB__(v18, 1))
        return result;
      __break(1u);
LABEL_37:
      if (before <= 0)
        goto LABEL_54;
      continue;
    }
    break;
  }
  if (v13)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v4 == before)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    result = sub_2151302EC();
    __break(1u);
    return result;
  }
LABEL_41:
  result = before - 1;
  if (__OFSUB__(before, 1))
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  return result;
}

uint64_t sub_2150F8B24@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = v4;
  a3[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150F8B64(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v3 = *a3;
  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8[0] = *a1;
  v8[1] = v4;
  v8[2] = v6;
  v8[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return DataFrame.Rows.subscript.setter(v8, v3);
}

void (*DataFrame.Rows.subscript.modify(_QWORD *a1, uint64_t a2))(_QWORD **a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[4] = a2;
  v5[5] = v2;
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  *v5 = v6;
  v5[1] = v7;
  v5[2] = v8;
  v5[3] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2150F8C38;
}

void sub_2150F8C38(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  v2 = *a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v4 = (*a1)[3];
  v6 = (*a1)[4];
  v7[0] = **a1;
  v7[1] = v3;
  v7[2] = v5;
  v7[3] = v4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DataFrame.Rows.subscript.setter(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    DataFrame.Rows.subscript.setter(v7, v6);
  }
  free(v2);
}

uint64_t DataFrame.Rows.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  v8 = v3[3];
  v9 = v3[4];
  v10 = a1 == (char *)a2;
  if (a1 == (char *)a2)
    v11 = 0;
  else
    v11 = a1;
  if (a1 == (char *)a2)
    v12 = 0;
  else
    v12 = a2;
  v13 = *((_BYTE *)v3 + 40);
  sub_2150437A8(v8, v9, v13);
  v14 = 2 * v10;
  v15 = sub_21502CB8C(v11, v12, v14, v8, v9, v13);
  v17 = v16;
  v19 = v18;
  sub_21501EF2C((uint64_t)v11, v12, v14);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = v17;
  *(_BYTE *)(a3 + 40) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150F8DA8@<X0>(uint64_t *a1@<X0>, char **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  BOOL v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a1[1];
  v20 = *a1;
  v4 = a1[3];
  v18 = a1[2];
  v5 = a1[4];
  v6 = a2[1];
  v7 = *a2 == v6;
  if (*a2 == v6)
    v8 = 0;
  else
    v8 = *a2;
  if (*a2 == v6)
    v9 = 0;
  else
    v9 = (uint64_t)a2[1];
  v10 = *((_BYTE *)a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v4, v5, v10);
  sub_2150437A8(v4, v5, v10);
  v11 = 2 * v7;
  v12 = sub_21502CB8C(v8, v9, 2 * v7, v4, v5, v10);
  v14 = v13;
  v16 = v15;
  sub_21501EF2C((uint64_t)v8, v9, v11);
  result = sub_21501EF2C(v4, v5, v10);
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v19;
  *(_QWORD *)(a3 + 16) = v18;
  *(_QWORD *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = v14;
  *(_BYTE *)(a3 + 40) = v16;
  return result;
}

uint64_t sub_2150F8EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11[5];
  char v12;

  v3 = *(char **)a3;
  v4 = *(_QWORD *)(a3 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  v11[0] = *(_QWORD *)a1;
  v11[1] = v5;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = v8;
  v12 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8(v7, v8, v9);
  return DataFrame.Rows.subscript.setter(v11, v3, v4);
}

uint64_t DataFrame.Rows.subscript.setter(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53[6];
  _QWORD v54[3];
  unint64_t *v55;
  uint64_t v56;
  char v57;

  v52 = *a1;
  v4 = a1[1];
  v5 = (unint64_t *)a1[3];
  v48 = a1[2];
  v49 = v4;
  v45 = a1[4];
  LODWORD(v6) = *((unsigned __int8 *)a1 + 40);
  v8 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  v9 = a2 == (char *)a3;
  if (a2 == (char *)a3)
    v10 = 0;
  else
    v10 = a2;
  if (a2 == (char *)a3)
    v11 = 0;
  else
    v11 = a3;
  v12 = *(_BYTE *)(v3 + 40);
  sub_2150437A8(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), v12);
  v13 = v12;
  v14 = v45;
  v44 = sub_21502CB8C(v10, v11, 2 * v9, v8, v7, v13);
  v43 = v15;
  v47 = v16;
  sub_21501EF2C((uint64_t)v10, v11, 2 * v9);
  v17 = (Swift::Int)v5;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 == 1 && v5[2])
    {
      v17 = v5[4];
    }
    else
    {
      sub_21508C520((uint64_t)v5, v45, v6);
      if ((v19 & 1) != 0)
        v17 = 0;
      else
        v17 = v18;
    }
  }
  sub_21508C520((uint64_t)v5, v45, v6);
  if ((v21 & 1) != 0)
    v22 = 0;
  else
    v22 = v20;
  v46 = v22;
  if (v17 == v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8((uint64_t)v5, v45, v6);
    v23 = (uint64_t)v44;
    v24 = v43;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C((uint64_t)v5, v14, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C((uint64_t)v5, v14, v6);
    return sub_21501EF2C(v23, v24, v47);
  }
  v26 = *v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2150437A8((uint64_t)v5, v45, v6);
  v23 = (uint64_t)v44;
  v24 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_43:
    v26 = (unint64_t)sub_21501E4D4(v26);
  *v51 = v26;
  v42 = v23 + 32;
  v41 = v5;
  v40 = v6;
  while (1)
  {
    v54[0] = v52;
    v54[1] = v49;
    v54[2] = v48;
    v55 = v5;
    v56 = v14;
    v57 = v6;
    v50 = DataFrame.Rows.index(after:)(v17);
    v54[0] = v17;
    MEMORY[0x24BDAC7A8](v50);
    v38 = (uint64_t)v54;
    v27 = v47;
    sub_2150437A8(v23, v24, v47);
    v26 = sub_2150F776C((uint64_t (*)(__int128 *))sub_2150C7A78, (uint64_t)&v37, v23, v24, v27);
    sub_21501EF2C(v23, v24, v27);
    if (!v27)
    {
      if (v26 == 1)
        goto LABEL_23;
      v29 = v23;
      if (v26)
        goto LABEL_41;
      goto LABEL_31;
    }
    if (v27 == 1)
      break;
    if (v26)
    {
      v39 = 0;
      v38 = 91;
      goto LABEL_46;
    }
LABEL_23:
    v17 = v50;
    if (v50 == v46)
      goto LABEL_19;
  }
  v28 = *(_QWORD *)(v23 + 16);
  if (v26 == v28)
    goto LABEL_23;
  if (v26 >= v28)
    goto LABEL_42;
  v29 = *(_QWORD *)(v42 + 16 * v26);
LABEL_31:
  if (v54[0] < v29)
    goto LABEL_23;
  v30 = *(_QWORD *)(v52 + 16);
  v26 = *v51;
  if (v30 == *(_QWORD *)(*v51 + 16))
  {
    if (v30)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = (unint64_t)sub_21501E4D4(v26);
      v5 = v51;
      v14 = 0;
      v31 = 0;
      while (1)
      {
        sub_21501EE90(v52 + v14 + 32, (uint64_t)v54);
        *v5 = v26;
        if (v31 >= *(_QWORD *)(v26 + 16))
          break;
        ++v31;
        v23 = v26 + v14;
        v33 = (uint64_t)v55;
        v32 = v56;
        v34 = __swift_project_boxed_opaque_existential_1(v54, (uint64_t)v55);
        v53[3] = v33;
        v35 = *(_QWORD *)(v32 + 8);
        v5 = v51;
        v53[4] = v35;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_1, v34, v33);
        v24 = *(_QWORD *)(v26 + v14 + 56);
        v6 = *(_QWORD *)(v26 + v14 + 64);
        __swift_mutable_project_boxed_opaque_existential_1(v26 + v14 + 32, v24);
        (*(void (**)(Swift::Int, Swift::Int, uint64_t *, uint64_t, uint64_t))(v6 + 72))(v17, v17, v53, v24, v6);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
        sub_21501EA34((uint64_t)v54);
        v26 = *v5;
        v14 += 40;
        if (v30 == v31)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v5 = v41;
          LODWORD(v6) = v40;
          v23 = (uint64_t)v44;
          v14 = v45;
          v24 = v43;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    goto LABEL_23;
  }
  v39 = 0;
  v38 = 151;
LABEL_46:
  result = sub_2151302EC();
  __break(1u);
  return result;
}

void (*DataFrame.Rows.subscript.modify(_QWORD *a1, char *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  char v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v7 = malloc(0x48uLL);
  *a1 = v7;
  v7[7] = a3;
  v7[8] = v3;
  v7[6] = a2;
  v8 = *v3;
  v9 = v3[1];
  v10 = v3[2];
  v11 = v3[3];
  v12 = v3[4];
  v13 = a2 == (char *)a3;
  if (a2 == (char *)a3)
  {
    a2 = 0;
    a3 = 0;
  }
  v14 = *((_BYTE *)v3 + 40);
  sub_2150437A8(v11, v12, v14);
  v15 = 2 * v13;
  v16 = sub_21502CB8C(a2, a3, v15, v11, v12, v14);
  v18 = v17;
  v20 = v19;
  sub_21501EF2C((uint64_t)a2, a3, v15);
  *v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v16;
  v7[4] = v18;
  *((_BYTE *)v7 + 40) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2150F95A4;
}

void sub_2150F95A4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13[5];
  char v14;

  v2 = *a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v4 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = *((_BYTE *)*a1 + 40);
  v8 = (*a1)[7];
  v9 = (char *)(*a1)[6];
  v13[0] = **a1;
  v13[1] = v3;
  v13[2] = v5;
  v13[3] = v4;
  v13[4] = v6;
  v14 = v7;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2150437A8(v4, v6, v7);
    DataFrame.Rows.subscript.setter(v13, v9, v8);
    v10 = v2[3];
    v11 = v2[4];
    v12 = *((_BYTE *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21501EF2C(v10, v11, v12);
  }
  else
  {
    DataFrame.Rows.subscript.setter(v13, v9, v8);
  }
  free(v2);
}

Swift::Int sub_2150F96A4@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DataFrame.Rows.index(before:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2150F96CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2150F9B74(a1, a2, a3, (uint64_t (*)(uint64_t))DataFrame.Rows.index(before:));
}

Swift::Int sub_2150F96D8@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = sub_2150F7614(*a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_2150F9720(Swift::Int *a1, Swift::Int *a2)
{
  return sub_2150F76EC(*a1, *a2);
}

uint64_t sub_2150F9760(_QWORD *a1, uint64_t *a2)
{
  return DataFrame.Rows.subscript.setter(a1, *a2);
}

void (*sub_2150F9768(_QWORD *a1, uint64_t *a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Rows.subscript.modify(v4, *a2);
  return sub_215072674;
}

uint64_t sub_2150F97B4(uint64_t *a1, uint64_t a2)
{
  return DataFrame.Rows.subscript.setter(a1, *(char **)a2, *(_QWORD *)(a2 + 8));
}

void (*sub_2150F97C0(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Rows.subscript.modify(v4, *(char **)a2, *(_QWORD *)(a2 + 8));
  return sub_215072674;
}

Swift::Int sub_2150F980C@<X0>(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X8>)
{
  uint64_t v3;
  Swift::Int result;

  result = sub_2151212AC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t *sub_2150F9834(uint64_t *result, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];
  _QWORD v8[4];

  v3 = *result;
  v4 = *a2;
  if (*result != *a2)
  {
    v5 = v2[1];
    v6 = v2[2];
    v8[0] = *v2;
    v8[1] = v5;
    v8[2] = v6;
    v8[3] = v3;
    v7[0] = v8[0];
    v7[1] = v5;
    v7[2] = v6;
    v7[3] = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    DataFrame.Rows.subscript.setter(v7, v3);
    return (uint64_t *)DataFrame.Rows.subscript.setter(v8, v4);
  }
  return result;
}

uint64_t sub_2150F98C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DataFrame.Rows.startIndex.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2150F98E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  result = sub_21508C520(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  if ((v5 & 1) != 0)
    v6 = 0;
  else
    v6 = v4;
  *a1 = v6;
  return result;
}

uint64_t (*sub_2150F991C(_QWORD *a1, uint64_t *a2))()
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2150F9978;
}

uint64_t sub_2150F9978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2150F99AC@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v4 = a1[1];
  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v9 = v2[4];
  v10 = *a1 == v4;
  if (*a1 == v4)
    v11 = 0;
  else
    v11 = *a1;
  if (*a1 == v4)
    v12 = 0;
  else
    v12 = (uint64_t)a1[1];
  v13 = *((_BYTE *)v2 + 40);
  sub_2150437A8(v8, v9, v13);
  v14 = 2 * v10;
  v15 = sub_21502CB8C(v11, v12, v14, v8, v9, v13);
  v17 = v16;
  v19 = v18;
  sub_21501EF2C((uint64_t)v11, v12, v14);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150F9A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_21508C090(a1);
}

BOOL sub_2150F9AB4()
{
  return sub_21508C2E0();
}

Swift::Int sub_2150F9AF0@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int result;
  char v6;

  result = sub_2150F7664(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

Swift::Int sub_2150F9B40@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DataFrame.Rows.index(after:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2150F9B68(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2150F9B74(a1, a2, a3, (uint64_t (*)(uint64_t))DataFrame.Rows.index(after:));
}

uint64_t sub_2150F9B74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;

  result = a4(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_2150F9BC8@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = *v1;
  v5 = *((_QWORD *)v1 + 2);
  v4 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((unsigned __int8 *)v1 + 40);
  v8 = v4;
  if (*((_BYTE *)v1 + 40))
  {
    if (v7 == 1 && *(_QWORD *)(v4 + 16))
    {
      v8 = *(_QWORD *)(v4 + 32);
    }
    else
    {
      v12 = *v1;
      result = sub_21508C520(*((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), *((_BYTE *)v1 + 40));
      v3 = v12;
      if ((v11 & 1) != 0)
        v8 = 0;
      else
        v8 = v10;
    }
  }
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  return result;
}

uint64_t sub_2150F9C60()
{
  uint64_t v0;

  return sub_2150EBD1C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_2150F9C6C()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  __int128 v4;
  _OWORD v5[2];

  v1 = v0[1];
  v4 = *v0;
  v5[0] = v1;
  *(_OWORD *)((char *)v5 + 9) = *(__int128 *)((char *)v0 + 25);
  v2 = sub_215048920((uint64_t)&v4);
  sub_215045244((uint64_t)&v4);
  return v2;
}

uint64_t sub_2150F9CB4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_2151208E8(a1, a2, a3);
}

uint64_t DataFrame.Row.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall DataFrame.Row.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

unint64_t DataFrame.Row.subscript.getter(unint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *v1;
    if (*(_QWORD *)(*v1 + 16) > result)
    {
      v3 = v1[3];
      sub_21501EE90(v2 + 40 * result + 32, (uint64_t)v6);
      v4 = v7;
      v5 = v8;
      __swift_project_boxed_opaque_existential_1(v6, v7);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8) + 128))(v3, v4);
      return sub_21501EA34((uint64_t)v6);
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_2150F9D9C(_QWORD *result, unint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v2 < *(_QWORD *)(*result + 16))
  {
    v3 = result[3];
    sub_21501EE90(*result + 40 * v2 + 32, (uint64_t)v8);
    v4 = v9;
    v5 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v6 = *(_QWORD *)(v5 + 8);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7(v3, v4, v6);
    sub_21501EA34((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2150F9E88(uint64_t a1, _QWORD *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[32];
  _BYTE v13[32];

  v4 = *a3;
  sub_215053AA4(a1, (uint64_t)v13);
  v5 = a2[3];
  result = sub_215053AA4((uint64_t)v13, (uint64_t)v12);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(_QWORD *)(*a2 + 16))
  {
    sub_21501EE90(*a2 + 40 * v4 + 32, (uint64_t)v9);
    v7 = v10;
    v8 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v8 + 8) + 136))(v5, v12, v7);
    sub_21507651C((uint64_t)v12);
    sub_21501DE8C(v4, (uint64_t)v9);
    sub_21501EA34((uint64_t)v9);
    return sub_21507651C((uint64_t)v13);
  }
  __break(1u);
  return result;
}

uint64_t DataFrame.Row.subscript.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[32];

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 24);
  result = sub_215053AA4(a1, (uint64_t)v13);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v3 + 16) > a2)
  {
    sub_21501EE90(*(_QWORD *)v3 + 40 * a2 + 32, (uint64_t)v10);
    v8 = v11;
    v9 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v9 + 8) + 136))(v6, v13, v8);
    sub_21507651C((uint64_t)v13);
    sub_21501DE8C(a2, (uint64_t)v10);
    sub_21501EA34((uint64_t)v10);
    return sub_21507651C(a1);
  }
  __break(1u);
  return result;
}

void (*DataFrame.Row.subscript.modify(void (**a1)(uint64_t a1, char a2), unint64_t a2))(uint64_t a1, char a2)
{
  _QWORD *v2;
  void (*result)(uint64_t, char);
  uint64_t v6;
  void (*v7)(uint64_t, char);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = (void (*)(uint64_t, char))malloc(0x98uLL);
  *a1 = result;
  *((_QWORD *)result + 17) = a2;
  *((_QWORD *)result + 18) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = *v2;
    if (*(_QWORD *)(*v2 + 16) > a2)
    {
      v7 = result;
      v8 = v2[3];
      sub_21501EE90(v6 + 40 * a2 + 32, (uint64_t)result);
      v9 = *((_QWORD *)v7 + 3);
      v10 = *((_QWORD *)v7 + 4);
      __swift_project_boxed_opaque_existential_1(v7, v9);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 128))(v8, v9);
      sub_21501EA34((uint64_t)v7);
      return sub_2150FA0F0;
    }
  }
  __break(1u);
  return result;
}

void sub_2150FA0F0(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)a1 + 40;
  v4 = *(_QWORD *)a1 + 72;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 136);
  v6 = *(_QWORD **)(*(_QWORD *)a1 + 144);
  if ((a2 & 1) != 0)
  {
    sub_215053AA4(*(_QWORD *)a1 + 40, v4);
    v7 = v6[3];
    sub_215053AA4(v4, (uint64_t)(v2 + 13));
    v8 = *v6;
    if (*(_QWORD *)(*v6 + 16) > v5)
    {
      v9 = v2[17];
      sub_21501EE90(v8 + 40 * v9 + 32, (uint64_t)v2);
      v10 = v2[3];
      v11 = v2[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v10);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v11 + 8) + 136))(v7, v2 + 13, v10);
      sub_21507651C((uint64_t)(v2 + 13));
      sub_21501DE8C(v9, (uint64_t)v2);
      sub_21501EA34((uint64_t)v2);
      sub_21507651C(v4);
LABEL_6:
      sub_21507651C(v3);
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v12 = v6[3];
    sub_215053AA4(*(_QWORD *)a1 + 40, v4);
    if (*(_QWORD *)(*v6 + 16) > v5)
    {
      v13 = v2[17];
      sub_21501EE90(*v6 + 40 * v13 + 32, (uint64_t)v2);
      v14 = v2[3];
      v15 = v2[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8) + 136))(v12, v4, v14);
      sub_21507651C(v4);
      sub_21501DE8C(v13, (uint64_t)v2);
      sub_21501EA34((uint64_t)v2);
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t DataFrame.Row.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  a3[2] = *v3;
  a3[3] = v4;
  a3[4] = v6;
  a3[5] = v5;
  *a3 = a1;
  a3[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150FA2C4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  *(_OWORD *)a3 = *a2;
  *(_QWORD *)(a3 + 16) = v3;
  *(_QWORD *)(a3 + 24) = v4;
  *(_QWORD *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2150FA308(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v6 = *a1;
  v7 = v1;
  v8 = v2;
  v9 = v4;
  v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0((uint64_t *)&v6);
}

void (*DataFrame.Row.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[6] = v3;
  v8 = v3[1];
  v10 = v3[2];
  v9 = v3[3];
  v7[2] = *v3;
  v7[3] = v8;
  v7[4] = v10;
  v7[5] = v9;
  *v7 = a2;
  v7[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_2150FA3F0;
}

void sub_2150FA3F0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[6];

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = v2[3];
  v8 = v2[4];
  v7 = v2[5];
  v9[0] = v4;
  v9[1] = v3;
  v9[2] = v5;
  v9[3] = v6;
  v9[4] = v8;
  v9[5] = v7;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s11TabularData0B5FrameV3RowVys5SliceVyAEGSnySiGcis_0(v9);
  }
  free(v2);
}

uint64_t sub_2150FA49C(uint64_t a1, unint64_t *a2)
{
  return DataFrame.Row.subscript.setter(a1, *a2);
}

void (*sub_2150FA4A4(void (***a1)(uint64_t a1, char a2), unint64_t *a2))(_QWORD *)
{
  void (**v4)(uint64_t, char);

  v4 = (void (**)(uint64_t, char))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Row.subscript.modify(v4, *a2);
  return sub_215072674;
}

void (*sub_2150FA4F4(_QWORD *a1, uint64_t *a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = DataFrame.Row.subscript.modify(v4, *a2, a2[1]);
  return sub_215072674;
}

unint64_t sub_2150FA540@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t result;

  result = sub_215121514(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

unint64_t sub_2150FA568(unint64_t *a1, unint64_t *a2)
{
  return sub_21511D904(*a1, *a2);
}

void sub_2150FA574(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

void (*sub_2150FA584(void (***a1)(void **a1), unint64_t *a2))(_QWORD *)
{
  void (**v4)(void **);

  v4 = (void (**)(void **))malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2150FA5D0(v4, *a2);
  return sub_215072674;
}

void (*sub_2150FA5D0(void (**a1)(void **a1), unint64_t a2))(void **a1)
{
  _QWORD *v2;
  void (*result)(void **);
  uint64_t v6;
  void (*v7)(void **);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = (void (*)(void **))malloc(0x48uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = *v2;
    if (*(_QWORD *)(*v2 + 16) > a2)
    {
      v7 = result;
      v8 = v2[3];
      sub_21501EE90(v6 + 40 * a2 + 32, (uint64_t)result);
      v9 = *((_QWORD *)v7 + 3);
      v10 = *((_QWORD *)v7 + 4);
      __swift_project_boxed_opaque_existential_1(v7, v9);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 128))(v8, v9);
      sub_21501EA34((uint64_t)v7);
      return sub_2150FA68C;
    }
  }
  __break(1u);
  return result;
}

void sub_2150FA68C(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_21507651C((uint64_t)*a1 + 40);
  free(v1);
}

uint64_t sub_2150FA6B4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2[1];
  v5 = v2[2];
  v4 = v2[3];
  *(_QWORD *)(a2 + 16) = *v2;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v4;
  *(_OWORD *)a2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_2150FA700(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *a1 = 0;
  a1[1] = v2;
}

BOOL sub_2150FA710()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

_QWORD *sub_2150FA724@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v4 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else if (v4 <= *(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_2150FA750@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  unint64_t result;
  char v7;

  result = sub_21511DBE0(*a1, a2, *a3, *v4);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v7 & 1;
  return result;
}

unint64_t *sub_2150FA78C(unint64_t *result, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (*result <= v4 && v3 <= v4)
    return (unint64_t *)(v3 - *result);
  __break(1u);
  return result;
}

